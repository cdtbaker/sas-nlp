<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.jvmstat.perfdata.monitor.protocol.rmi">
        <import package="sun.jvmstat.monitor"/>
        <import package="sun.jvmstat.monitor.event"/>
        <import package="sun.jvmstat.monitor.remote"/>
        <import package="sun.jvmstat.perfdata.monitor"/>
        <import package="java.lang.reflect"/>
        <import package="java.util"/>
        <import package="java.io"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.rmi"/>
        <class name="RemoteMonitoredVm" line="11">
            <extends class="AbstractMonitoredVm"/>
            <javadoc line="11">
                Concrete implementation of the AbstractMonitoredVm class for the
                  &lt;em&gt;rmi:&lt;/em&gt; protocol for the HotSpot PerfData monitoring implementation.
                  &lt;p&gt;
                  This class provides the ability to acquire to the instrumentation buffer
                  of a live, remote target Java Virtual Machine through an RMI server.                
                <author>
                    Brian Doherty                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="listeners" type="ArrayList&amp;lt;VmListener&amp;gt;" line="21"/>
            <declaration name="notifierTask" type="NotifierTask" line="22"/>
            <declaration name="samplerTask" type="SamplerTask" line="23"/>
            <declaration name="timer" type="Timer" line="24"/>
            <declaration name="rvm" type="RemoteVm" line="25"/>
            <declaration name="updateBuffer" type="ByteBuffer" line="26"/>
            <javadoc line="27">
                Create a RemoteMonitoredVm instance.                
                <param>
                    rvm the proxy to the remote MonitoredVm instance.                    
                </param>
                <param>
                    vmid the vm identifier specifying the remot target JVM                    
                </param>
                <param>
                    timer the timer used to run polling tasks                    
                </param>
                <param>
                    interval the sampling interval                    
                </param>
            </javadoc>
            <method name="RemoteMonitoredVm" type="constructor" line="34">
                <params>
                    <param name="rvm" type="RemoteVm"/>
                    <param name="vmid" type="VmIdentifier"/>
                    <param name="timer" type="Timer"/>
                    <param name="interval" type="int"/>
                </params>
            </method>
            <javadoc line="41">
                Method to attach to the remote MonitoredVm.                
            </javadoc>
            <method name="attach" type="void" line="44">
                <scope line="46"/>
            </method>
            <javadoc line="51">
                {@inheritDoc}                
            </javadoc>
            <method name="detach" type="void" line="54">
                <scope line="55">
                    <scope line="56">
                        <scope line="57"/>
                        <scope line="61"/>
                    </scope>
                </scope>
                <scope line="68"/>
                <scope line="72"/>
            </method>
            <javadoc line="76">
                Get a copy of the remote instrumentation buffer.
                  &lt;p&gt;
                  The data in the remote instrumentation buffer is copied into
                  a local byte buffer.                
                <throws>
                    RemoteException Thrown on any communications errors with
                      the remote system.                    
                </throws>
            </javadoc>
            <method name="sample" type="void" line="84"/>
            <javadoc line="88">
                Get the proxy to the remote MonitoredVm.                
                <return>
                    RemoteVm - the proxy to the remote MonitoredVm.                    
                </return>
            </javadoc>
            <method name="getRemoteVm" type="RemoteVm" line="92"/>
            <javadoc line="95">
                {@inheritDoc}                
            </javadoc>
            <method name="addVmListener" type="void" line="98">
                <params>
                    <param name="l" type="VmListener"/>
                </params>
                <scope line="99">
                    <scope line="101"/>
                </scope>
            </method>
            <javadoc line="107">
                {@inheritDoc}                
            </javadoc>
            <method name="removeVmListener" type="void" line="110">
                <params>
                    <param name="l" type="VmListener"/>
                </params>
                <scope line="111">
                    <scope line="113"/>
                </scope>
            </method>
            <javadoc line="119">
                {@inheritDoc}                
            </javadoc>
            <method name="setInterval" type="void" line="122">
                <params>
                    <param name="newInterval" type="int"/>
                </params>
                <scope line="123">
                    <scope line="124"/>
                    <declaration name="oldInterval" type="int" line="127"/>
                    <scope line="129">
                        <declaration name="oldSamplerTask" type="SamplerTask" line="131"/>
                    </scope>
                    <scope line="135">
                        <declaration name="oldNotifierTask" type="NotifierTask" line="137"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="143">
                Fire MonitoredVmStructureChanged events.                
                <param>
                    inserted List of Monitor objects inserted.                    
                </param>
                <param>
                    removed List of Monitor objects removed.                    
                </param>
            </javadoc>
            <method name="fireMonitorStatusChangedEvents" type="void" line="148">
                <params>
                    <param name="inserted" type="List"/>
                    <param name="removed" type="List"/>
                </params>
                <declaration name="registered" type="ArrayList" line="149"/>
                <declaration name="ev" type="MonitorStatusChangeEvent" line="150"/>
                <scope line="151"/>
                <scope line="154">
                    <declaration name="l" type="VmListener" line="155"/>
                    <scope line="156"/>
                </scope>
            </method>
            <javadoc line="162">
                Fire MonitoredVmStructureChanged events.                
            </javadoc>
            <method name="fireMonitorsUpdatedEvents" type="void" line="165">
                <declaration name="registered" type="ArrayList" line="166"/>
                <declaration name="ev" type="VmEvent" line="167"/>
                <scope line="168"/>
                <scope line="171">
                    <declaration name="l" type="VmListener" line="172"/>
                    <scope line="173"/>
                </scope>
            </method>
            <class name="NotifierTask" line="179">
                <extends class="CountedTimerTask"/>
                <javadoc line="179">
                    Class to periodically check the state of the defined monitors
                      for the remote MonitoredVm instance and to notify listeners of
                      any detected changes.                    
                </javadoc>
                <method name="run" type="void" line="185">
                    <scope line="187">
                        <declaration name="status" type="MonitorStatus" line="188"/>
                        <declaration name="inserted" type="List" line="189"/>
                        <declaration name="removed" type="List" line="190"/>
                        <scope line="191"/>
                    </scope>
                    <scope line="195"/>
                </method>
            </class>
            <class name="SamplerTask" line="201">
                <extends class="CountedTimerTask"/>
                <javadoc line="201">
                    Class to periodically sample the remote instrumentation byte buffer
                      and refresh the local copy. Registered listeners are notified of
                      the completion of a sampling event.                    
                </javadoc>
                <method name="run" type="void" line="207">
                    <scope line="209"/>
                    <scope line="213"/>
                </method>
            </class>
        </class>
    </source>