<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.jvmstat.perfdata.monitor.protocol.rmi">
        <import package="sun.jvmstat.monitor"/>
        <import package="sun.jvmstat.monitor.remote"/>
        <import package="sun.jvmstat.perfdata.monitor"/>
        <import package="java.io"/>
        <import package="java.rmi.RemoteException"/>
        <import package="java.nio.ByteBuffer"/>
        <class name="PerfDataBuffer" line="8">
            <extends class="AbstractPerfDataBuffer"/>
            <javadoc line="8">
                The concrete PerfDataBuffer implementation for the &lt;em&gt;rmi:&lt;/em&gt;
                  protocol for the HotSpot PerfData monitoring implementation.
                  &lt;p&gt;
                  This class is responsible for acquiring the instrumentation buffer
                  data for a remote target HotSpot Java Virtual Machine.                
                <author>
                    Brian Doherty                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="rvm" type="RemoteVm" line="18"/>
            <javadoc line="19">
                Create a PerfDataBuffer instance for accessing the specified
                  instrumentation buffer.                
                <param>
                    rvm the proxy to the remote MonitredVm object                    
                </param>
                <param>
                    lvmid the local Java Virtual Machine Identifier of the
                      remote target.                    
                </param>
                <throws>
                    MonitorException                    
                </throws>
            </javadoc>
            <method name="PerfDataBuffer" type="constructor" line="27">
                <params>
                    <param name="rvm" type="RemoteVm"/>
                    <param name="lvmid" type="int"/>
                </params>
                <scope line="29">
                    <declaration name="buffer" type="ByteBuffer" line="30"/>
                </scope>
                <scope line="34"/>
            </method>
            <javadoc line="38">
                Get a copy of the remote instrumentation buffer.
                  &lt;p&gt;
                  The data in the remote instrumentation buffer is copied into
                  the local byte buffer.                
                <param>
                    buffer the buffer to receive the copy of the remote
                      instrumentation buffer.                    
                </param>
                <throws>
                    RemoteException Thrown on any communications errors with
                      the remote system.                    
                </throws>
            </javadoc>
            <method name="sample" type="void" line="48">
                <params>
                    <param name="buffer" type="ByteBuffer"/>
                </params>
            </method>
        </class>
    </source>