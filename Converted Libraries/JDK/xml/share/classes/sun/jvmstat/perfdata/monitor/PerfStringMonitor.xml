<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.jvmstat.perfdata.monitor">
        <import package="sun.jvmstat.monitor"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.charset.Charset"/>
        <class name="PerfStringMonitor" line="32">
            <extends class="PerfByteArrayMonitor"/>
            <implements interface="StringMonitor"/>
            <javadoc line="32">
                Class for monitoring a PerfData String instrument.                
                <author>
                    Brian Doherty                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="defaultCharset" type="Charset" line="41"/>
            <javadoc line="43">
                Constructor to create a StringMonitor object for the string instrument
                  represented by the data in the given buffer.                
                <param>
                    name the name of the string instrument                    
                </param>
                <param>
                    v the variability attribute                    
                </param>
                <param>
                    supported support level indicator                    
                </param>
                <param>
                    bb the buffer containing the string instrument data.                    
                </param>
            </javadoc>
            <method name="PerfStringMonitor" type="constructor" line="53">
                <params>
                    <param name="name" type="String"/>
                    <param name="v" type="Variability"/>
                    <param name="supported" type="boolean"/>
                    <param name="bb" type="ByteBuffer"/>
                </params>
            </method>
            <javadoc line="57">
                Constructor to create a StringMonitor object for the string instrument
                  represented by the data in the given buffer.                
                <param>
                    name the name of the string instrument                    
                </param>
                <param>
                    v the variability attribute                    
                </param>
                <param>
                    supported support level indicator                    
                </param>
                <param>
                    bb the buffer containing the string instrument data.                    
                </param>
                <param>
                    maxLength the maximum length of the string data.                    
                </param>
            </javadoc>
            <method name="PerfStringMonitor" type="constructor" line="68">
                <params>
                    <param name="name" type="String"/>
                    <param name="v" type="Variability"/>
                    <param name="supported" type="boolean"/>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="maxLength" type="int"/>
                </params>
            </method>
            <javadoc line="72">
                {@inheritDoc}The object returned contains a String with a copy of the current
                  value of the StringInstrument.                
                <return>
                    Object - a copy of the current value of the StringInstrument.
                      The return value is guaranteed to be of type String.                    
                </return>
            </javadoc>
            <method name="getValue" type="Object" line="80"/>
            <javadoc line="84">
                Return the current value of the StringInstrument as a String.                
                <return>
                    String - a copy of the current value of the StringInstrument.                    
                </return>
            </javadoc>
            <method name="stringValue" type="String" line="89">
                <comment line="93">
                    catch null strings                    
                </comment>
                <declaration name="str" type="String" line="90"/>
                <declaration name="b" type="byte[]" line="91"/>
                <scope line="94"/>
                <declaration name="i" type="int" line="98"/>
            </method>
        </class>
    </source>