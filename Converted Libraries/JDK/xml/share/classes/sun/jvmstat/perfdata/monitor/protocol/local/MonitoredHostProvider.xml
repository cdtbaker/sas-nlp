<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.jvmstat.perfdata.monitor.protocol.local">
        <import package="sun.jvmstat.monitor"/>
        <import package="sun.jvmstat.monitor.event"/>
        <import package="sun.jvmstat.perfdata.monitor"/>
        <import package="java.util"/>
        <import package="java.net"/>
        <class name="MonitoredHostProvider" line="7">
            <extends class="MonitoredHost"/>
            <javadoc line="7">
                Concrete implementation of the MonitoredHost interface for the
                  &lt;em&gt;local&lt;/em&gt; protocol of the HotSpot PerfData monitoring implementation.                
                <author>
                    Brian Doherty                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="DEFAULT_POLLING_INTERVAL" type="int" line="14"/>
            <declaration name="listeners" type="ArrayList&amp;lt;HostListener&amp;gt;" line="15"/>
            <declaration name="task" type="NotifierTask" line="16"/>
            <declaration name="activeVms" type="HashSet&amp;lt;Integer&amp;gt;" line="17"/>
            <declaration name="vmManager" type="LocalVmManager" line="18"/>
            <javadoc line="19">
                Create a MonitoredHostProvider instance using the given HostIdentifier.                
                <param>
                    hostId the host identifier for this MonitoredHost                    
                </param>
            </javadoc>
            <method name="MonitoredHostProvider" type="constructor" line="23">
                <params>
                    <param name="hostId" type="HostIdentifier"/>
                </params>
            </method>
            <javadoc line="30">
                {@inheritDoc}                
            </javadoc>
            <method name="getMonitoredVm" type="MonitoredVm" line="33">
                <params>
                    <param name="vmid" type="VmIdentifier"/>
                </params>
            </method>
            <javadoc line="36">
                {@inheritDoc}                
            </javadoc>
            <method name="getMonitoredVm" type="MonitoredVm" line="39">
                <params>
                    <param name="vmid" type="VmIdentifier"/>
                    <param name="interval" type="int"/>
                </params>
                <scope line="40">
                    <declaration name="nvmid" type="VmIdentifier" line="41"/>
                </scope>
                <scope line="44"/>
            </method>
            <javadoc line="48">
                {@inheritDoc}                
            </javadoc>
            <method name="detach" type="void" line="51">
                <params>
                    <param name="vm" type="MonitoredVm"/>
                </params>
            </method>
            <javadoc line="54">
                {@inheritDoc}                
            </javadoc>
            <method name="addHostListener" type="void" line="57">
                <params>
                    <param name="listener" type="HostListener"/>
                </params>
                <scope line="58">
                    <scope line="60">
                        <declaration name="timer" type="LocalEventTimer" line="62"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="67">
                {@inheritDoc}                
            </javadoc>
            <method name="removeHostListener" type="void" line="70">
                <params>
                    <param name="listener" type="HostListener"/>
                </params>
                <scope line="71">
                    <scope line="73"/>
                </scope>
            </method>
            <javadoc line="79">
                {@inheritDoc}                
            </javadoc>
            <method name="setInterval" type="void" line="82">
                <params>
                    <param name="newInterval" type="int"/>
                </params>
                <scope line="83">
                    <scope line="84"/>
                    <declaration name="oldInterval" type="int" line="87"/>
                    <scope line="89">
                        <declaration name="oldTask" type="NotifierTask" line="91"/>
                        <declaration name="timer" type="LocalEventTimer" line="93"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="98">
                {@inheritDoc}                
            </javadoc>
            <method name="activeVms" type="Set&lt;Integer&gt;" line="101"/>
            <javadoc line="104">
                Fire VmEvent events.                
                <param>
                    active a set of Integer objects containing the vmid of
                      the active Vms                    
                </param>
                <param>
                    started a set of Integer objects containing the vmid of
                      new Vms started since last interval.                    
                </param>
                <param>
                    terminated a set of Integer objects containing the vmid of
                      terminated Vms since last interval.                    
                </param>
            </javadoc>
            <method name="fireVmStatusChangedEvents" type="void" line="113">
                <params>
                    <param name="active" type="Set"/>
                    <param name="started" type="Set"/>
                    <param name="terminated" type="Set"/>
                </params>
                <declaration name="registered" type="ArrayList" line="114"/>
                <declaration name="ev" type="VmStatusChangeEvent" line="115"/>
                <scope line="116"/>
                <scope line="119">
                    <declaration name="l" type="HostListener" line="120"/>
                    <scope line="121"/>
                </scope>
            </method>
            <class name="NotifierTask" line="127">
                <extends class="CountedTimerTask"/>
                <javadoc line="127">
                    Class to poll the local system and generate event notifications.                    
                </javadoc>
                <method name="run" type="void" line="131">
                    <declaration name="lastActiveVms" type="Set" line="133"/>
                    <scope line="135"/>
                    <declaration name="startedVms" type="Set&amp;lt;Integer&amp;gt;" line="138"/>
                    <declaration name="terminatedVms" type="Set&amp;lt;Object&amp;gt;" line="139"/>
                    <scope line="140">
                        <declaration name="vmid" type="Integer" line="141"/>
                        <scope line="142"/>
                    </scope>
                    <scope line="146">
                        <declaration name="o" type="Object" line="147"/>
                        <scope line="148"/>
                    </scope>
                    <scope line="152"/>
                </method>
            </class>
        </class>
    </source>