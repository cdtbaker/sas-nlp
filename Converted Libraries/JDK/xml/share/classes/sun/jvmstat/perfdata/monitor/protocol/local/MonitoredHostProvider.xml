<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.jvmstat.perfdata.monitor.protocol.local">
        <import package="sun.jvmstat.monitor"/>
        <import package="sun.jvmstat.monitor.event"/>
        <import package="sun.jvmstat.perfdata.monitor"/>
        <import package="java.util"/>
        <import package="java.net"/>
        <class name="MonitoredHostProvider" line="34">
            <extends class="MonitoredHost"/>
            <javadoc line="34">
                Concrete implementation of the MonitoredHost interface for the
                  &lt;em&gt;local&lt;/em&gt; protocol of the HotSpot PerfData monitoring implementation.                
                <author>
                    Brian Doherty                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="DEFAULT_POLLING_INTERVAL" type="int" line="42"/>
            <declaration name="listeners" type="ArrayList&lt;HostListener&gt;" line="44"/>
            <declaration name="task" type="NotifierTask" line="45"/>
            <declaration name="activeVms" type="HashSet&lt;Integer&gt;" line="46"/>
            <declaration name="vmManager" type="LocalVmManager" line="47"/>
            <javadoc line="49">
                Create a MonitoredHostProvider instance using the given HostIdentifier.                
                <param>
                    hostId the host identifier for this MonitoredHost                    
                </param>
            </javadoc>
            <method name="MonitoredHostProvider" type="constructor" line="54">
                <params>
                    <param name="hostId" type="HostIdentifier"/>
                </params>
            </method>
            <javadoc line="62">
                {@inheritDoc}                
            </javadoc>
            <method name="getMonitoredVm" type="MonitoredVm" line="66">
                <params>
                    <param name="vmid" type="VmIdentifier"/>
                </params>
            </method>
            <javadoc line="70">
                {@inheritDoc}                
            </javadoc>
            <method name="getMonitoredVm" type="MonitoredVm" line="74">
                <params>
                    <param name="vmid" type="VmIdentifier"/>
                    <param name="interval" type="int"/>
                </params>
                <comment line="80">
                    the VmIdentifier is expected to be a valid and it should
                     resolve reasonably against the host identifier. A
                     URISyntaxException here is most likely a programming error.                    
                </comment>
                <scope line="75">
                    <declaration name="nvmid" type="VmIdentifier" line="76"/>
                </scope>
                <scope line="78"/>
            </method>
            <javadoc line="89">
                {@inheritDoc}                
            </javadoc>
            <method name="detach" type="void" line="92">
                <params>
                    <param name="vm" type="MonitoredVm"/>
                </params>
            </method>
            <javadoc line="96">
                {@inheritDoc}                
            </javadoc>
            <method name="addHostListener" type="void" line="99">
                <params>
                    <param name="listener" type="HostListener"/>
                </params>
                <scope line="100">
                    <scope line="102">
                        <declaration name="timer" type="LocalEventTimer" line="104"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="110">
                {@inheritDoc}                
            </javadoc>
            <method name="removeHostListener" type="void" line="113">
                <params>
                    <param name="listener" type="HostListener"/>
                </params>
                <scope line="114">
                    <scope line="116"/>
                </scope>
            </method>
            <javadoc line="123">
                {@inheritDoc}                
            </javadoc>
            <method name="setInterval" type="void" line="126">
                <params>
                    <param name="newInterval" type="int"/>
                </params>
                <scope line="127">
                    <scope line="128"/>
                    <declaration name="oldInterval" type="int" line="132"/>
                    <scope line="135">
                        <declaration name="oldTask" type="NotifierTask" line="137"/>
                        <declaration name="timer" type="LocalEventTimer" line="139"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="146">
                {@inheritDoc}                
            </javadoc>
            <method name="activeVms" type="Set<Integer>" line="149"/>
            <javadoc line="153">
                Fire VmEvent events.                
                <param>
                    active a set of Integer objects containing the vmid of
                      the active Vms                    
                </param>
                <param>
                    started a set of Integer objects containing the vmid of
                      new Vms started since last interval.                    
                </param>
                <param>
                    terminated a set of Integer objects containing the vmid of
                      terminated Vms since last interval.                    
                </param>
            </javadoc>
            <method name="fireVmStatusChangedEvents" type="void" line="164">
                <params>
                    <param name="active" type="Set"/>
                    <param name="started" type="Set"/>
                    <param name="terminated" type="Set"/>
                </params>
                <comment line="173">
                                        
                </comment>
                <declaration name="registered" type="ArrayList" line="165"/>
                <declaration name="ev" type="VmStatusChangeEvent" line="166"/>
                <scope line="168"/>
                <scope line="172">
                    <declaration name="l" type="HostListener" line="173"/>
                    <scope line="174"/>
                </scope>
            </method>
            <class name="NotifierTask" line="181">
                <extends class="CountedTimerTask"/>
                <javadoc line="181">
                    Class to poll the local system and generate event notifications.                    
                </javadoc>
                <method name="run" type="void" line="185">
                    <comment line="189">
                        save the last set of active JVMs                        
                    </comment>
                    <comment line="192">
                        get the current set of active JVMs                        
                    </comment>
                    <comment line="201">
                                                
                    </comment>
                    <comment line="204">
                        a new file has been detected, add to set                        
                    </comment>
                    <comment line="210">
                                                
                    </comment>
                    <comment line="213">
                        JVM has terminated, remove it from the active list                        
                    </comment>
                    <declaration name="lastActiveVms" type="Set" line="189"/>
                    <scope line="194"/>
                    <declaration name="startedVms" type="Set&lt;Integer&gt;" line="197"/>
                    <declaration name="terminatedVms" type="Set&lt;Object&gt;" line="198"/>
                    <scope line="200">
                        <declaration name="vmid" type="Integer" line="201"/>
                        <scope line="202"/>
                    </scope>
                    <scope line="209">
                        <declaration name="o" type="Object" line="210"/>
                        <scope line="211"/>
                    </scope>
                    <scope line="217"/>
                </method>
            </class>
        </class>
    </source>