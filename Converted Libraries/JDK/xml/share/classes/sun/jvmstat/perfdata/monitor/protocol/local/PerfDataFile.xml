<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.jvmstat.perfdata.monitor.protocol.local">
        <import package="java.io.File"/>
        <import package="java.io.FilenameFilter"/>
        <class name="PerfDataFile" line="31">
            <comment line="291">
                this static initializer would not be necessary if the
                 Solaris java.io.tmpdir property were set to tmp by default                
            </comment>
            <javadoc line="31">
                Class to provide translations from the local Vm Identifier
                  name space into the file system name space and vice-versa.
                  &lt;p&gt;
                  Provides a factory for creating a File object to the backing
                  store file for instrumentation shared memory region for a JVM
                  identified by its Local Java Virtual Machine Identifier, or
                  &lt;em&gt;lvmid&lt;/em&gt;.                
                <author>
                    Brian Doherty                    
                </author>
                <since>
                    1.5                    
                </since>
                <see>
                    java.io.File                    
                </see>
            </javadoc>
            <method name="PerfDataFile" type="constructor" line="45"/>
            <declaration name="tmpDirName" type="String" line="47"/>
            <javadoc line="47">
                The name of the of the system dependent temporary directory                
            </javadoc>
            <declaration name="dirNamePrefix" type="String" line="52"/>
            <javadoc line="52">
                The file name prefix for PerfData shared memory files.
                  &lt;p&gt;
                  This prefix must be kept in sync with the prefix used by the JVM.                
            </javadoc>
            <declaration name="userDirNamePattern" type="String" line="59"/>
            <javadoc line="59">
                The directory name pattern for the user directories.                
            </javadoc>
            <declaration name="fileNamePattern" type="String" line="64"/>
            <javadoc line="64">
                The file name pattern for PerfData shared memory files.
                  &lt;p&gt;
                  This pattern must be kept in synch with the file name pattern
                  used by the 1.4.2 and later HotSpot JVM.                
            </javadoc>
            <declaration name="tmpFileNamePattern" type="String" line="72"/>
            <javadoc line="72">
                The file name pattern for 1.4.1 PerfData shared memory files.
                  &lt;p&gt;
                  This pattern must be kept in synch with the file name pattern
                  used by the 1.4.1 HotSpot JVM.                
            </javadoc>
            <javadoc line="82">
                Get a File object for the instrumentation backing store file
                  for the JVM identified by the given local Vm Identifier.
                  &lt;p&gt;
                  This method looks for the most up to date backing store file for
                  the given &lt;tt&gt;lvmid&lt;/tt&gt;. It will search all the user specific
                  directories in the temporary directory for the host operating
                  system, which may be influenced by platform specific environment
                  variables.                
                <param>
                    lvmid  the local Java Virtual Machine Identifier for the target                    
                </param>
                <return>
                    File - a File object to the backing store file for the named
                      shared memory region of the target JVM.                    
                </return>
                <see>
                    java.io.File                    
                </see>
                <see>
                    #getTempDirectory()                    
                </see>
            </javadoc>
            <method name="getFile" type="File" line="98">
                <params>
                    <param name="lvmid" type="int"/>
                </params>
                <comment line="101">
                    lvmid == 0 is used to indicate the current Java Virtual Machine.
                     If the SDK provided an API to get a unique Java Virtual Machine
                     identifier, then a filename could be constructed with that
                     identifier. In absence of such an api, return null.                    
                </comment>
                <comment line="110">
                    iterate over all files in all directories in tmpDirName that
                     match the file name patterns.                    
                </comment>
                <comment line="134">
                    found a directory matching the name patterns. This
                     is a 1.4.2 hsperfdata_&lt;user&gt; directory. Check for
                     file named &lt;lvmid&gt; in that directory                    
                </comment>
                <comment line="143">
                    found a file matching the name patterns. This
                     is a 1.4.1 hsperfdata_&lt;lvmid&gt; file.                    
                </comment>
                <comment line="150">
                    unexpected - let conditional below filter this one out                    
                </comment>
                <scope line="99"/>
                <declaration name="tmpDir" type="File" line="113"/>
                <anonymous_class line="114">
                    <method name="accept" type="boolean" line="115">
                        <params>
                            <param name="dir" type="File"/>
                            <param name="name" type="String"/>
                        </params>
                        <scope line="116"/>
                        <declaration name="candidate" type="File" line="119"/>
                    </method>
                </anonymous_class>
                <declaration name="files" type="String[]" line="114"/>
                <declaration name="newestTime" type="long" line="125"/>
                <declaration name="newest" type="File" line="126"/>
                <scope line="128">
                    <declaration name="f" type="File" line="129"/>
                    <declaration name="candidate" type="File" line="130"/>
                    <scope line="132">
                        <declaration name="name" type="String" line="138"/>
                    </scope>
                    <scope line="141"/>
                    <scope line="148"/>
                    <scope line="154">
                        <declaration name="modTime" type="long" line="155"/>
                        <scope line="156"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="165">
                Return the File object for the backing store file for the specified Java
                  Virtual Machine.
                  &lt;p&gt;
                  This method looks for the most up to date backing store file for
                  the JVM identified by the given user name and lvmid. The directory
                  searched is the temporary directory for the host operating system,
                  which may be influenced by environment variables.                
                <param>
                    user   the user name                    
                </param>
                <param>
                    lvmid  the local Java Virtual Machine Identifier for the target                    
                </param>
                <return>
                    File - a File object to the backing store file for the named
                      shared memory region of the target JVM.                    
                </return>
                <see>
                    java.io.File                    
                </see>
                <see>
                    #getTempDirectory()                    
                </see>
            </javadoc>
            <method name="getFile" type="File" line="181">
                <params>
                    <param name="user" type="String"/>
                    <param name="lvmid" type="int"/>
                </params>
                <comment line="184">
                    lvmid == 0 is used to indicate the current Java Virtual Machine.
                     If the SDK provided an API to get a unique Java Virtual Machine
                     identifier, then a filename could be constructed with that
                     identifier. In absence of such an api, return null.                    
                </comment>
                <comment line="193">
                    first try for 1.4.2 and later JVMs                    
                </comment>
                <comment line="201">
                    No hit on 1.4.2 JVMs, try 1.4.1 files                    
                </comment>
                <scope line="182"/>
                <declaration name="basename" type="String" line="193"/>
                <declaration name="f" type="File" line="194"/>
                <scope line="196"/>
                <declaration name="newestTime" type="long" line="201"/>
                <declaration name="newest" type="File" line="202"/>
                <scope line="203">
                    <scope line="204"/>
                    <scope line="206"/>
                    <scope line="213">
                        <declaration name="modTime" type="long" line="214"/>
                        <scope line="215"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="224">
                Method to extract a local Java Virtual Machine Identifier from the
                  file name of the given File object.                
                <param>
                    file A File object representing the name of a
                      shared memory region for a target JVM                    
                </param>
                <return>
                    int - the local Java Virtual Machine Identifier for the target
                      associated with the file                    
                </return>
                <throws>
                    java.lang.IllegalArgumentException Thrown if the file name
                      does not conform to the expected pattern                    
                </throws>
            </javadoc>
            <method name="getLocalVmId" type="int" line="235">
                <params>
                    <param name="file" type="File"/>
                </params>
                <comment line="240">
                    try 1.4.2 and later format first                    
                </comment>
                <comment line="244">
                    now try the 1.4.1 format                    
                </comment>
                <declaration name="lvmid" type="int" line="236"/>
                <scope line="238"/>
                <scope line="241"/>
                <declaration name="name" type="String" line="244"/>
                <scope line="245">
                    <declaration name="first" type="int" line="246"/>
                    <declaration name="last" type="int" line="247"/>
                    <scope line="248">
                        <scope line="249"/>
                        <scope line="251"/>
                    </scope>
                    <scope line="254"/>
                </scope>
            </method>
            <javadoc line="259">
                Return the name of the temporary directory being searched for
                  HotSpot PerfData backing store files.
                  &lt;p&gt;
                  This method generally returns the value of the java.io.tmpdir
                  property. However, on some platforms it may return a different
                  directory, as the JVM implementation may store the PerfData backing
                  store files in a different directory for performance reasons.                
                <return>
                    String - the name of the temporary directory.                    
                </return>
            </javadoc>
            <method name="getTempDirectory" type="String" line="270"/>
            <javadoc line="274">
                Return the name of the temporary directory to be searched
                  for HotSpot PerfData backing store files for a given user.
                  &lt;p&gt;
                  This method generally returns the name of a subdirectory of
                  the directory indicated in the java.io.tmpdir property. However,
                  on some platforms it may return a different directory, as the
                  JVM implementation may store the PerfData backing store files
                  in a different directory for performance reasons.                
                <return>
                    String - the name of the temporary directory.                    
                </return>
            </javadoc>
            <method name="getTempDirectory" type="String" line="286">
                <params>
                    <param name="user" type="String"/>
                </params>
            </method>
            <scope line="294">
                <declaration name="tmpdir" type="String" line="303"/>
                <scope line="305"/>
                <scope line="322"/>
            </scope>
        </class>
    </source>