<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.jvmstat.perfdata.monitor.protocol.local">
        <import package="sun.jvmstat.monitor"/>
        <import package="sun.jvmstat.monitor.event"/>
        <import package="java.util"/>
        <import package="java.util.regex"/>
        <import package="java.io"/>
        <class name="LocalVmManager" line="34">
            <comment line="48">
                user name for monitored jvm                
            </comment>
            <javadoc line="34">
                Class for managing the LocalMonitoredVm instances on the local system.
                  &lt;p&gt;
                  This class is responsible for the mechanism that detects the active
                  HotSpot Java Virtual Machines on the local host and possibly for a
                  specific user. The ability to detect all possible HotSpot Java Virtual
                  Machines on the local host may be limited by the permissions of the
                  principal running this JVM.                
                <author>
                    Brian Doherty                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="userName" type="String" line="47"/>
            <declaration name="tmpdir" type="File" line="48"/>
            <declaration name="userPattern" type="Pattern" line="49"/>
            <declaration name="userMatcher" type="Matcher" line="50"/>
            <declaration name="userFilter" type="FilenameFilter" line="51"/>
            <declaration name="filePattern" type="Pattern" line="52"/>
            <declaration name="fileMatcher" type="Matcher" line="53"/>
            <declaration name="fileFilter" type="FilenameFilter" line="54"/>
            <declaration name="tmpFilePattern" type="Pattern" line="55"/>
            <declaration name="tmpFileMatcher" type="Matcher" line="56"/>
            <declaration name="tmpFileFilter" type="FilenameFilter" line="57"/>
            <javadoc line="59">
                Creates a LocalVmManager instance for the local system.
                  &lt;p&gt;
                  Manages LocalMonitoredVm instances for which the principal
                  has appropriate permissions.                
            </javadoc>
            <method name="LocalVmManager" type="constructor" line="65"/>
            <javadoc line="69">
                Creates a LocalVmManager instance for the given user.
                  &lt;p&gt;
                  Manages LocalMonitoredVm instances for all JVMs owned by the specified
                  user.                
                <param>
                    user the name of the user                    
                </param>
            </javadoc>
            <method name="LocalVmManager" type="constructor" line="77">
                <params>
                    <param name="user" type="String"/>
                </params>
                <scope line="80">
                    <anonymous_class line="85">
                        <method name="accept" type="boolean" line="86">
                            <params>
                                <param name="dir" type="File"/>
                                <param name="name" type="String"/>
                            </params>
                        </method>
                    </anonymous_class>
                </scope>
                <scope line="91"/>
                <anonymous_class line="98">
                    <method name="accept" type="boolean" line="99">
                        <params>
                            <param name="dir" type="File"/>
                            <param name="name" type="String"/>
                        </params>
                    </method>
                </anonymous_class>
                <anonymous_class line="108">
                    <method name="accept" type="boolean" line="109">
                        <params>
                            <param name="dir" type="File"/>
                            <param name="name" type="String"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="116">
                Return the current set of monitorable Java Virtual Machines.
                  &lt;p&gt;
                  The set returned by this method depends on the user name passed
                  to the constructor. If no user name was specified, then this
                  method will return all candidate JVMs on the system. Otherwise,
                  only the JVMs for the given user will be returned. This assumes
                  that principal associated with this JVM has the appropriate
                  permissions to access the target set of JVMs.                
                <return>
                    Set - the Set of monitorable Java Virtual Machines                    
                </return>
            </javadoc>
            <method name="activeVms" type="Set<Integer>" line="128">
                <comment line="130">
                    This method is synchronized because the Matcher object used by
                     fileFilter is not safe for concurrent use, and this method is
                     called by multiple threads. Before this method was synchronized,
                     we&apos;d see strange file names being matched by the matcher.                    
                </comment>
                <comment line="143">
                    get a list of all of the user temporary directories and
                     iterate over the list to find any files within those directories.                    
                </comment>
                <comment line="154">
                    get a list of files from the directory                    
                </comment>
                <comment line="167">
                    Check if the user directory can be accessed. Any of these
                     conditions may have asynchronously changed between subsequent
                     calls to this method.                    
                </comment>
                <comment line="173">
                    get the list of files from the specified user directory                    
                </comment>
                <comment line="186">
                    look for any 1.4.1 files                    
                </comment>
                <declaration name="jvmSet" type="Set&lt;Integer&gt;" line="135"/>
                <scope line="137"/>
                <scope line="141">
                    <declaration name="dirs" type="File[]" line="146"/>
                    <scope line="148">
                        <scope line="149"/>
                        <declaration name="files" type="File[]" line="154"/>
                        <scope line="156">
                            <scope line="157">
                                <scope line="158"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="165">
                    <declaration name="files" type="File[]" line="173"/>
                    <scope line="175">
                        <scope line="176">
                            <scope line="177"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="files" type="File[]" line="186"/>
                <scope line="187">
                    <scope line="188">
                        <scope line="189"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>