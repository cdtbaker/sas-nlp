<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.jvmstat.perfdata.monitor">
        <import package="java.util"/>
        <class name="CountedTimerTaskUtils" line="30">
            <javadoc line="30">
                Utility methods for use with {@link CountedTimerTask} instances.                
                <author>
                    Brian Doherty                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="DEBUG" type="boolean" line="38"/>
            <javadoc line="40">
                Reschedule a CountedTimeTask at a different interval. Probably not
                  named correctly. This method cancels the old task and computes the
                  delay for starting the new task based on the new interval and the
                  time at which the old task was last executed.                
                <param>
                    timer the Timer for the task                    
                </param>
                <param>
                    oldTask the old Task                    
                </param>
                <param>
                    newTask the new Task                    
                </param>
                <param>
                    oldInterval the old interval; use for debugging output
                      purposes only.                    
                </param>
                <param>
                    newInterval scheduling interval in milliseconds                    
                </param>
            </javadoc>
            <method name="reschedule" type="void" line="55">
                <params>
                    <param name="timer" type="Timer"/>
                    <param name="oldTask" type="CountedTimerTask"/>
                    <param name="newTask" type="CountedTimerTask"/>
                    <param name="oldInterval" type="int"/>
                    <param name="newInterval" type="int"/>
                </params>
                <comment line="70">
                    check if original task ever ran - if not, then lastRun is
                     undefined and we simply set the delay to 0.                    
                </comment>
                <declaration name="now" type="long" line="57"/>
                <declaration name="lastRun" type="long" line="58"/>
                <declaration name="expired" type="long" line="59"/>
                <scope line="61"/>
                <declaration name="delay" type="long" line="73"/>
                <scope line="74">
                    <declaration name="remainder" type="long" line="75"/>
                </scope>
                <scope line="79"/>
            </method>
        </class>
    </source>