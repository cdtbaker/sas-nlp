<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.jvmstat.perfdata.monitor.protocol.rmi">
        <import package="sun.jvmstat.monitor"/>
        <import package="sun.jvmstat.monitor.event"/>
        <import package="sun.jvmstat.monitor.remote"/>
        <import package="sun.jvmstat.perfdata.monitor"/>
        <import package="java.util"/>
        <import package="java.net"/>
        <import package="java.io"/>
        <import package="java.rmi"/>
        <import package="java.util.HashMap"/>
        <class name="MonitoredHostProvider" line="11">
            <extends class="MonitoredHost"/>
            <javadoc line="11">
                Concrete implementation of the MonitoredHost interface for the
                  &lt;em&gt;rmi&lt;/em&gt; protocol of the HotSpot PerfData monitoring implementation.                
                <author>
                    Brian Doherty                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="serverName" type="String" line="18"/>
            <declaration name="DEFAULT_POLLING_INTERVAL" type="int" line="19"/>
            <declaration name="listeners" type="ArrayList&amp;lt;HostListener&amp;gt;" line="20"/>
            <declaration name="task" type="NotifierTask" line="21"/>
            <declaration name="activeVms" type="HashSet&amp;lt;Integer&amp;gt;" line="22"/>
            <declaration name="vmManager" type="RemoteVmManager" line="23"/>
            <declaration name="remoteHost" type="RemoteHost" line="24"/>
            <declaration name="timer" type="Timer" line="25"/>
            <javadoc line="26">
                Create a MonitoredHostProvider instance using the given HostIdentifier.                
                <param>
                    hostId the host identifier for this MonitoredHost                    
                </param>
                <throws>
                    MonitorException Thrown on any error encountered while
                      communicating with the remote host.                    
                </throws>
            </javadoc>
            <method name="MonitoredHostProvider" type="constructor" line="32">
                <params>
                    <param name="hostId" type="HostIdentifier"/>
                </params>
                <declaration name="rmiName" type="String" line="37"/>
                <declaration name="sn" type="String" line="38"/>
                <declaration name="path" type="String" line="39"/>
                <scope line="40"/>
                <scope line="43"/>
                <scope line="46"/>
                <scope line="49"/>
                <scope line="52">
                    <declaration name="message" type="String" line="53"/>
                    <scope line="54"/>
                    <scope line="57"/>
                    <scope line="60"/>
                    <scope line="63"/>
                </scope>
                <scope line="67">
                    <declaration name="message" type="String" line="68"/>
                </scope>
                <scope line="72"/>
            </method>
            <javadoc line="79">
                {@inheritDoc}                
            </javadoc>
            <method name="getMonitoredVm" type="MonitoredVm" line="82">
                <params>
                    <param name="vmid" type="VmIdentifier"/>
                </params>
            </method>
            <javadoc line="85">
                {@inheritDoc}                
            </javadoc>
            <method name="getMonitoredVm" type="MonitoredVm" line="88">
                <params>
                    <param name="vmid" type="VmIdentifier"/>
                    <param name="interval" type="int"/>
                </params>
                <declaration name="nvmid" type="VmIdentifier" line="89"/>
                <scope line="90">
                    <declaration name="rvm" type="RemoteVm" line="92"/>
                    <declaration name="rmvm" type="RemoteMonitoredVm" line="93"/>
                </scope>
                <scope line="97"/>
                <scope line="100"/>
            </method>
            <javadoc line="104">
                {@inheritDoc}                
            </javadoc>
            <method name="detach" type="void" line="107">
                <params>
                    <param name="vm" type="MonitoredVm"/>
                </params>
                <declaration name="rmvm" type="RemoteMonitoredVm" line="108"/>
                <scope line="110"/>
                <scope line="113"/>
            </method>
            <javadoc line="117">
                {@inheritDoc}                
            </javadoc>
            <method name="addHostListener" type="void" line="120">
                <params>
                    <param name="listener" type="HostListener"/>
                </params>
                <scope line="121">
                    <scope line="123"/>
                </scope>
            </method>
            <javadoc line="129">
                {@inheritDoc}                
            </javadoc>
            <method name="removeHostListener" type="void" line="132">
                <params>
                    <param name="listener" type="HostListener"/>
                </params>
                <scope line="133">
                    <scope line="135"/>
                </scope>
            </method>
            <method name="setInterval" type="void" line="141">
                <params>
                    <param name="newInterval" type="int"/>
                </params>
                <scope line="142">
                    <scope line="143"/>
                    <declaration name="oldInterval" type="int" line="146"/>
                    <scope line="148">
                        <declaration name="oldTask" type="NotifierTask" line="150"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="156">
                {@inheritDoc}                
            </javadoc>
            <method name="activeVms" type="Set&lt;Integer&gt;" line="159"/>
            <javadoc line="162">
                Fire VmStatusChangeEvent events to HostListener objects                
                <param>
                    active Set of Integer objects containing the local
                      Vm Identifiers of the active JVMs                    
                </param>
                <param>
                    started Set of Integer objects containing the local
                      Vm Identifiers of new JVMs started since last
                      interval.                    
                </param>
                <param>
                    terminated Set of Integer objects containing the local
                      Vm Identifiers of terminated JVMs since last
                      interval.                    
                </param>
            </javadoc>
            <method name="fireVmStatusChangedEvents" type="void" line="173">
                <params>
                    <param name="active" type="Set"/>
                    <param name="started" type="Set"/>
                    <param name="terminated" type="Set"/>
                </params>
                <declaration name="registered" type="ArrayList" line="174"/>
                <declaration name="ev" type="VmStatusChangeEvent" line="175"/>
                <scope line="176"/>
                <scope line="179">
                    <declaration name="l" type="HostListener" line="180"/>
                    <scope line="181"/>
                </scope>
            </method>
            <javadoc line="187">
                Fire hostDisconnectEvent events.                
            </javadoc>
            <method name="fireDisconnectedEvents" type="void" line="190">
                <declaration name="registered" type="ArrayList" line="191"/>
                <declaration name="ev" type="HostEvent" line="192"/>
                <scope line="193"/>
                <scope line="196">
                    <declaration name="l" type="HostListener" line="197"/>
                    <scope line="198"/>
                </scope>
            </method>
            <class name="NotifierTask" line="204">
                <extends class="CountedTimerTask"/>
                <javadoc line="204">
                    class to poll the remote machine and generate local event notifications.                    
                </javadoc>
                <method name="run" type="void" line="208">
                    <declaration name="lastActiveVms" type="Set" line="210"/>
                    <scope line="211"/>
                    <scope line="214"/>
                    <scope line="220"/>
                    <declaration name="startedVms" type="Set&amp;lt;Integer&amp;gt;" line="223"/>
                    <declaration name="terminatedVms" type="Set&amp;lt;Object&amp;gt;" line="224"/>
                    <scope line="225">
                        <declaration name="vmid" type="Integer" line="226"/>
                        <scope line="227"/>
                    </scope>
                    <scope line="231">
                        <declaration name="o" type="Object" line="232"/>
                        <scope line="233"/>
                    </scope>
                    <scope line="237"/>
                </method>
            </class>
        </class>
    </source>