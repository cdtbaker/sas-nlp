<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.jvmstat.perfdata.monitor.protocol.file">
        <import package="sun.jvmstat.monitor"/>
        <import package="sun.jvmstat.monitor.event.HostListener"/>
        <import package="sun.jvmstat.perfdata.monitor"/>
        <import package="java.util"/>
        <import package="java.net"/>
        <class name="MonitoredHostProvider" line="7">
            <extends class="MonitoredHost"/>
            <javadoc line="7">
                Concrete implementation of the MonitoredHost interface for the
                  &lt;em&gt;file:&lt;/em&gt; protocol of the HotSpot PerfData monitoring implementation.                
                <author>
                    Brian Doherty                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="DEFAULT_POLLING_INTERVAL" type="int" line="14"/>
            <javadoc line="14">
                The default polling interval. Not used by the &lt;em&gt;file:&lt;/em&gt; protocol.                
            </javadoc>
            <javadoc line="18">
                Create a MonitoredHostProvider instance using the given HostIdentifier.                
                <param>
                    hostId the host identifier for this MonitoredHost                    
                </param>
            </javadoc>
            <method name="MonitoredHostProvider" type="constructor" line="22">
                <params>
                    <param name="hostId" type="HostIdentifier"/>
                </params>
            </method>
            <javadoc line="25">
                {@inheritDoc}                
            </javadoc>
            <method name="getMonitoredVm" type="MonitoredVm" line="28">
                <params>
                    <param name="vmid" type="VmIdentifier"/>
                </params>
            </method>
            <javadoc line="31">
                {@inheritDoc}.
                  &lt;p&gt;
                  Note - the &lt;em&gt;file:&lt;/em&gt; protocol silently ignores the
                  &lt;tt&gt;interval&lt;/tt&gt; parameter.                
            </javadoc>
            <method name="getMonitoredVm" type="MonitoredVm" line="37">
                <params>
                    <param name="vmid" type="VmIdentifier"/>
                    <param name="interval" type="int"/>
                </params>
            </method>
            <javadoc line="40">
                {@inheritDoc}                
            </javadoc>
            <method name="detach" type="void" line="43">
                <params>
                    <param name="vm" type="MonitoredVm"/>
                </params>
            </method>
            <javadoc line="46">
                {@inheritDoc}.
                  &lt;p&gt;
                  Note - the &lt;em&gt;file:&lt;/em&gt; protocol currenly does not support
                  registration or notification of event listeners. This method
                  silently ignores the add request.                
            </javadoc>
            <method name="addHostListener" type="void" line="53">
                <params>
                    <param name="listener" type="HostListener"/>
                </params>
            </method>
            <javadoc line="55">
                {@inheritDoc}.
                  &lt;p&gt;
                  Note - the &lt;em&gt;file:&lt;/em&gt; protocol currenly does not support
                  registration or notification of event listeners. This method
                  silently ignores the remove request.                
            </javadoc>
            <method name="removeHostListener" type="void" line="62">
                <params>
                    <param name="listener" type="HostListener"/>
                </params>
            </method>
            <javadoc line="64">
                {@inheritDoc}.
                  &lt;p&gt;
                  Note - the &lt;em&gt;file:&lt;/em&gt; protocol currently does not support the
                  notion of tracking active or inactive Java Virtual Machines. This
                  method currently returns an empty set.                
            </javadoc>
            <method name="activeVms" type="Set&lt;Integer&gt;" line="71"/>
        </class>
    </source>