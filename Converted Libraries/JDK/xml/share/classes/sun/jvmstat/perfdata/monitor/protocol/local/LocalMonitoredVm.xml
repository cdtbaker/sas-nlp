<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.jvmstat.perfdata.monitor.protocol.local">
        <import package="java.util"/>
        <import package="java.lang.reflect"/>
        <import package="java.io"/>
        <import package="sun.jvmstat.monitor"/>
        <import package="sun.jvmstat.monitor.event"/>
        <import package="sun.jvmstat.perfdata.monitor"/>
        <class name="LocalMonitoredVm" line="36">
            <extends class="AbstractMonitoredVm"/>
            <comment line="209">
                Suppress unchecked cast warning msg.                
            </comment>
            <javadoc line="36">
                Concrete implementation of the AbstractMonitoredVm class for the
                  &lt;em&gt;local:&lt;/em&gt; protocol for the HotSpot PerfData monitoring implementation.
                  &lt;p&gt;
                  This class provides the ability to attach to the instrumentation buffer
                  of a live target Java Virtual Machine through a HotSpot specific attach
                  mechanism.                
                <author>
                    Brian Doherty                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="listeners" type="ArrayList&lt;VmListener&gt;" line="49"/>
            <javadoc line="49">
                List of registered listeners.                
            </javadoc>
            <declaration name="task" type="NotifierTask" line="54"/>
            <javadoc line="54">
                Task performing listener notification.                
            </javadoc>
            <javadoc line="59">
                Create a LocalMonitoredVm instance.                
                <param>
                    vmid the vm identifier specifying the target JVM                    
                </param>
                <param>
                    interval the sampling interval                    
                </param>
            </javadoc>
            <method name="LocalMonitoredVm" type="constructor" line="66">
                <params>
                    <param name="vmid" type="VmIdentifier"/>
                    <param name="interval" type="int"/>
                </params>
            </method>
            <javadoc line="72">
                {@inheritDoc}.                
            </javadoc>
            <method name="detach" type="void" line="75">
                <comment line="78">
                    if the notifier task is running, stop it, otherwise it can
                     access non-existent memory once we&apos;ve detached from the
                     underlying buffer.                    
                </comment>
                <scope line="76">
                    <scope line="82"/>
                </scope>
            </method>
            <javadoc line="90">
                {@inheritDoc}.                
            </javadoc>
            <method name="addVmListener" type="void" line="93">
                <params>
                    <param name="l" type="VmListener"/>
                </params>
                <scope line="94">
                    <scope line="96">
                        <declaration name="timer" type="LocalEventTimer" line="98"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="104">
                {@inheritDoc}.                
            </javadoc>
            <method name="removeVmListener" type="void" line="107">
                <params>
                    <param name="l" type="VmListener"/>
                </params>
                <scope line="108">
                    <scope line="110"/>
                </scope>
            </method>
            <javadoc line="117">
                {@inheritDoc}.                
            </javadoc>
            <method name="setInterval" type="void" line="120">
                <params>
                    <param name="newInterval" type="int"/>
                </params>
                <scope line="121">
                    <scope line="122"/>
                    <declaration name="oldInterval" type="int" line="126"/>
                    <scope line="129">
                        <declaration name="oldTask" type="NotifierTask" line="131"/>
                        <declaration name="timer" type="LocalEventTimer" line="133"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="140">
                Fire MonitoredVmStructureChanged events.                
                <param>
                    inserted List of Monitor objects inserted.                    
                </param>
                <param>
                    removed List of Monitor objects removed.                    
                </param>
            </javadoc>
            <method name="fireMonitorStatusChangedEvents" type="void" line="146">
                <params>
                    <param name="inserted" type="List"/>
                    <param name="removed" type="List"/>
                </params>
                <comment line="155">
                                        
                </comment>
                <comment line="157">
                    lazily create the event object;                    
                </comment>
                <declaration name="ev" type="MonitorStatusChangeEvent" line="147"/>
                <declaration name="registered" type="ArrayList" line="148"/>
                <scope line="150"/>
                <scope line="154">
                    <declaration name="l" type="VmListener" line="155"/>
                    <scope line="157"/>
                </scope>
            </method>
            <javadoc line="164">
                Fire MonitoredUpdated events.                
            </javadoc>
            <method name="fireMonitorsUpdatedEvents" type="void" line="167">
                <comment line="177">
                    lazily create the event object;                    
                </comment>
                <declaration name="ev" type="VmEvent" line="168"/>
                <declaration name="registered" type="ArrayList&lt;VmListener&gt;" line="169"/>
                <scope line="171"/>
                <scope line="175">
                    <scope line="177"/>
                </scope>
            </method>
            <class name="NotifierTask" line="184">
                <extends class="CountedTimerTask"/>
                <javadoc line="184">
                    Class to notify listeners of Monitor related events for
                      the target JVM.                    
                </javadoc>
                <method name="run" type="void" line="189">
                    <comment line="202">
                        XXX: use logging api                        
                    </comment>
                    <scope line="191">
                        <declaration name="status" type="MonitorStatus" line="192"/>
                        <declaration name="inserted" type="List" line="193"/>
                        <declaration name="removed" type="List" line="194"/>
                        <scope line="196"/>
                    </scope>
                    <scope line="200"/>
                </method>
            </class>
            <method name="cast" type="T" line="210">
                <params>
                    <param name="x" type="Object"/>
                </params>
            </method>
        </class>
    </source>