<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.invoke">
        <import package="java.lang.invoke.MethodHandle"/>
        <interface name="WrapperInstance">
            <javadoc line="3">
                Private API used inside of java.lang.invoke.MethodHandles.
                  Interface implemented by every object which is produced by{@link java.lang.invoke.MethodHandles#asInstance MethodHandles.asInstance}.
                  The methods of this interface allow a caller to recover the parameters
                  to {@code asInstance}.
                  This allows applications to repeatedly convert between method handles
                  and SAM objects, without the risk of creating unbounded delegation chains.                
            </javadoc>
            <method name="getWrapperInstanceTarget" type="MethodHandle" line="12"/>
            <javadoc line="12">
                Produce or recover a target method handle which is behaviorally
                  equivalent to the SAM method of this object.                
            </javadoc>
            <method name="getWrapperInstanceType" type="Class&lt;?&gt;" line="17"/>
            <javadoc line="17">
                Recover the SAM type for which this object was created.                
            </javadoc>
        </interface>
    </source>