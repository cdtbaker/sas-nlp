<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.invoke.util">
        <import package="java.lang.invoke.MethodHandle"/>
        <import package="java.lang.invoke.MethodHandles"/>
        <import package="java.lang.invoke.MethodHandles.Lookup"/>
        <import package="java.lang.invoke.MethodType"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.Collections"/>
        <import package="java.util.EnumMap"/>
        <import package="java.util.List"/>
        <class name="ValueConversions" line="13">
            <declaration name="THIS_CLASS" type="Class&amp;lt;?&amp;gt;" line="14"/>
            <declaration name="MAX_ARITY" type="int" line="15"/>
            <scope line="16">
                <declaration name="values" type="Object[]" line="17"/>
                <anonymous_class line="18">
                    <method name="run" type="Void" line="19"/>
                </anonymous_class>
            </scope>
            <declaration name="IMPL_LOOKUP" type="Lookup" line="27"/>
            <method name="newWrapperCaches" type="EnumMap&lt;Wrapper,MethodHandle&gt;[]" line="28">
                <params>
                    <param name="n" type="int"/>
                </params>
                <declaration name="caches" type="EnumMap&amp;lt;Wrapper,MethodHandle&amp;gt;[]" line="29"/>
            </method>
            <method name="unboxInteger" type="int" line="33">
                <params>
                    <param name="x" type="Object"/>
                    <param name="cast" type="boolean"/>
                </params>
            </method>
            <method name="unboxByte" type="byte" line="37">
                <params>
                    <param name="x" type="Object"/>
                    <param name="cast" type="boolean"/>
                </params>
            </method>
            <method name="unboxShort" type="short" line="41">
                <params>
                    <param name="x" type="Object"/>
                    <param name="cast" type="boolean"/>
                </params>
            </method>
            <method name="unboxBoolean" type="boolean" line="45">
                <params>
                    <param name="x" type="Object"/>
                    <param name="cast" type="boolean"/>
                </params>
            </method>
            <method name="unboxCharacter" type="char" line="49">
                <params>
                    <param name="x" type="Object"/>
                    <param name="cast" type="boolean"/>
                </params>
            </method>
            <method name="unboxLong" type="long" line="53">
                <params>
                    <param name="x" type="Object"/>
                    <param name="cast" type="boolean"/>
                </params>
            </method>
            <method name="unboxFloat" type="float" line="57">
                <params>
                    <param name="x" type="Object"/>
                    <param name="cast" type="boolean"/>
                </params>
            </method>
            <method name="unboxDouble" type="double" line="61">
                <params>
                    <param name="x" type="Object"/>
                    <param name="cast" type="boolean"/>
                </params>
            </method>
            <method name="unboxByteRaw" type="int" line="65">
                <params>
                    <param name="x" type="Object"/>
                    <param name="cast" type="boolean"/>
                </params>
            </method>
            <method name="unboxShortRaw" type="int" line="68">
                <params>
                    <param name="x" type="Object"/>
                    <param name="cast" type="boolean"/>
                </params>
            </method>
            <method name="unboxBooleanRaw" type="int" line="71">
                <params>
                    <param name="x" type="Object"/>
                    <param name="cast" type="boolean"/>
                </params>
            </method>
            <method name="unboxCharacterRaw" type="int" line="74">
                <params>
                    <param name="x" type="Object"/>
                    <param name="cast" type="boolean"/>
                </params>
            </method>
            <method name="unboxFloatRaw" type="int" line="77">
                <params>
                    <param name="x" type="Object"/>
                    <param name="cast" type="boolean"/>
                </params>
            </method>
            <method name="unboxDoubleRaw" type="long" line="80">
                <params>
                    <param name="x" type="Object"/>
                    <param name="cast" type="boolean"/>
                </params>
            </method>
            <method name="unboxType" type="MethodType" line="83">
                <params>
                    <param name="wrap" type="Wrapper"/>
                    <param name="raw" type="boolean"/>
                </params>
            </method>
            <declaration name="UNBOX_CONVERSIONS" type="EnumMap&amp;lt;Wrapper,MethodHandle&amp;gt;[]" line="86"/>
            <method name="unbox" type="MethodHandle" line="87">
                <params>
                    <param name="wrap" type="Wrapper"/>
                    <param name="raw" type="boolean"/>
                    <param name="cast" type="boolean"/>
                </params>
                <declaration name="cache" type="EnumMap&amp;lt;Wrapper,MethodHandle&amp;gt;" line="88"/>
                <declaration name="mh" type="MethodHandle" line="89"/>
                <scope line="90"/>
                <scope line="105"/>
                <declaration name="name" type="String" line="109"/>
                <declaration name="type" type="MethodType" line="110"/>
                <scope line="111"/>
                <scope line="114"/>
                <scope line="117"/>
            </method>
            <method name="unboxCast" type="MethodHandle" line="124">
                <params>
                    <param name="type" type="Wrapper"/>
                </params>
            </method>
            <method name="unboxRaw" type="MethodHandle" line="127">
                <params>
                    <param name="type" type="Wrapper"/>
                </params>
            </method>
            <method name="unbox" type="MethodHandle" line="130">
                <params>
                    <param name="type" type="Class&lt;?&gt;"/>
                </params>
            </method>
            <method name="unboxCast" type="MethodHandle" line="133">
                <params>
                    <param name="type" type="Class&lt;?&gt;"/>
                </params>
            </method>
            <method name="unboxRaw" type="MethodHandle" line="136">
                <params>
                    <param name="type" type="Class&lt;?&gt;"/>
                </params>
            </method>
            <declaration name="ZERO_INT" type="Integer" line="139"/>
            <method name="primitiveConversion" type="Number" line="140">
                <params>
                    <param name="wrap" type="Wrapper"/>
                    <param name="x" type="Object"/>
                    <param name="cast" type="boolean"/>
                </params>
                <declaration name="res" type="Number" line="141"/>
                <scope line="142"/>
                <scope line="146"/>
                <scope line="149"/>
                <scope line="152"/>
                <scope line="155"/>
                <declaration name="xwrap" type="Wrapper" line="158"/>
            </method>
            <method name="boxInteger" type="Integer" line="162">
                <params>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="boxByte" type="Byte" line="165">
                <params>
                    <param name="x" type="byte"/>
                </params>
            </method>
            <method name="boxShort" type="Short" line="168">
                <params>
                    <param name="x" type="short"/>
                </params>
            </method>
            <method name="boxBoolean" type="Boolean" line="171">
                <params>
                    <param name="x" type="boolean"/>
                </params>
            </method>
            <method name="boxCharacter" type="Character" line="174">
                <params>
                    <param name="x" type="char"/>
                </params>
            </method>
            <method name="boxLong" type="Long" line="177">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <method name="boxFloat" type="Float" line="180">
                <params>
                    <param name="x" type="float"/>
                </params>
            </method>
            <method name="boxDouble" type="Double" line="183">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <method name="boxByteRaw" type="Byte" line="186">
                <params>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="boxShortRaw" type="Short" line="189">
                <params>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="boxBooleanRaw" type="Boolean" line="192">
                <params>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="boxCharacterRaw" type="Character" line="195">
                <params>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="boxFloatRaw" type="Float" line="198">
                <params>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="boxDoubleRaw" type="Double" line="201">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <method name="boxVoidRaw" type="Void" line="204">
                <params>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="boxType" type="MethodType" line="207">
                <params>
                    <param name="wrap" type="Wrapper"/>
                    <param name="raw" type="boolean"/>
                </params>
                <declaration name="boxType" type="Class&amp;lt;?&amp;gt;" line="208"/>
            </method>
            <method name="rawWrapper" type="Wrapper" line="211">
                <params>
                    <param name="wrap" type="Wrapper"/>
                    <param name="raw" type="boolean"/>
                </params>
            </method>
            <declaration name="BOX_CONVERSIONS" type="EnumMap&amp;lt;Wrapper,MethodHandle&amp;gt;[]" line="215"/>
            <method name="box" type="MethodHandle" line="216">
                <params>
                    <param name="wrap" type="Wrapper"/>
                    <param name="exact" type="boolean"/>
                    <param name="raw" type="boolean"/>
                </params>
                <declaration name="cache" type="EnumMap&amp;lt;Wrapper,MethodHandle&amp;gt;" line="217"/>
                <declaration name="mh" type="MethodHandle" line="218"/>
                <scope line="219"/>
                <scope line="234"/>
                <declaration name="name" type="String" line="238"/>
                <declaration name="type" type="MethodType" line="239"/>
                <scope line="240">
                    <scope line="241"/>
                    <scope line="244"/>
                </scope>
                <scope line="248"/>
                <scope line="251"/>
            </method>
            <method name="box" type="MethodHandle" line="257">
                <params>
                    <param name="type" type="Class&lt;?&gt;"/>
                </params>
                <declaration name="exact" type="boolean" line="258"/>
            </method>
            <method name="boxRaw" type="MethodHandle" line="261">
                <params>
                    <param name="type" type="Class&lt;?&gt;"/>
                </params>
                <declaration name="exact" type="boolean" line="262"/>
            </method>
            <method name="box" type="MethodHandle" line="265">
                <params>
                    <param name="type" type="Wrapper"/>
                </params>
                <declaration name="exact" type="boolean" line="266"/>
            </method>
            <method name="boxRaw" type="MethodHandle" line="269">
                <params>
                    <param name="type" type="Wrapper"/>
                </params>
                <declaration name="exact" type="boolean" line="270"/>
            </method>
            <method name="unboxRawInteger" type="int" line="273">
                <params>
                    <param name="x" type="Object"/>
                </params>
            </method>
            <method name="reboxRawInteger" type="Integer" line="277">
                <params>
                    <param name="x" type="Object"/>
                </params>
            </method>
            <method name="reboxRawByte" type="Byte" line="281">
                <params>
                    <param name="x" type="Object"/>
                </params>
            </method>
            <method name="reboxRawShort" type="Short" line="285">
                <params>
                    <param name="x" type="Object"/>
                </params>
            </method>
            <method name="reboxRawBoolean" type="Boolean" line="289">
                <params>
                    <param name="x" type="Object"/>
                </params>
            </method>
            <method name="reboxRawCharacter" type="Character" line="293">
                <params>
                    <param name="x" type="Object"/>
                </params>
            </method>
            <method name="reboxRawFloat" type="Float" line="297">
                <params>
                    <param name="x" type="Object"/>
                </params>
            </method>
            <method name="reboxRawLong" type="Long" line="301">
                <params>
                    <param name="x" type="Object"/>
                </params>
            </method>
            <method name="reboxRawDouble" type="Double" line="304">
                <params>
                    <param name="x" type="Object"/>
                </params>
            </method>
            <method name="reboxType" type="MethodType" line="308">
                <params>
                    <param name="wrap" type="Wrapper"/>
                </params>
                <declaration name="boxType" type="Class&amp;lt;?&amp;gt;" line="309"/>
            </method>
            <declaration name="REBOX_CONVERSIONS" type="EnumMap&amp;lt;Wrapper,MethodHandle&amp;gt;[]" line="312"/>
            <javadoc line="313">
                Because we normalize primitive types to reduce the number of signatures,
                  primitives are sometimes manipulated under an &quot;erased&quot; type,
                  either int (for types other than long/double) or long (for all types).
                  When the erased primitive value is then boxed into an Integer or Long,
                  the final boxed primitive is sometimes required.  This transformation
                  is called a &quot;rebox&quot;.  It takes an Integer or Long and produces some
                  other boxed value, typed (inexactly) as an Object                
            </javadoc>
            <method name="rebox" type="MethodHandle" line="322">
                <params>
                    <param name="wrap" type="Wrapper"/>
                </params>
                <declaration name="cache" type="EnumMap&amp;lt;Wrapper,MethodHandle&amp;gt;" line="323"/>
                <declaration name="mh" type="MethodHandle" line="324"/>
                <scope line="325"/>
                <scope line="335"/>
                <declaration name="name" type="String" line="339"/>
                <declaration name="type" type="MethodType" line="340"/>
                <scope line="341"/>
                <scope line="345"/>
                <scope line="348"/>
            </method>
            <method name="rebox" type="MethodHandle" line="354">
                <params>
                    <param name="type" type="Class&lt;?&gt;"/>
                </params>
            </method>
            <method name="widenInt" type="long" line="357">
                <params>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="widenBoxedInt" type="Long" line="360">
                <params>
                    <param name="x" type="Integer"/>
                </params>
            </method>
            <method name="narrowLong" type="int" line="363">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <method name="narrowBoxedLong" type="Integer" line="366">
                <params>
                    <param name="x" type="Long"/>
                </params>
            </method>
            <method name="ignore" type="void" line="369">
                <params>
                    <param name="x" type="Object"/>
                </params>
            </method>
            <method name="empty" type="void" line="372"/>
            <method name="zeroObject" type="Object" line="375"/>
            <method name="zeroInteger" type="int" line="378"/>
            <method name="zeroLong" type="long" line="381"/>
            <method name="zeroFloat" type="float" line="384"/>
            <method name="zeroDouble" type="double" line="387"/>
            <declaration name="CONSTANT_FUNCTIONS" type="EnumMap&amp;lt;Wrapper,MethodHandle&amp;gt;[]" line="390"/>
            <method name="zeroConstantFunction" type="MethodHandle" line="391">
                <params>
                    <param name="wrap" type="Wrapper"/>
                </params>
                <declaration name="cache" type="EnumMap&amp;lt;Wrapper,MethodHandle&amp;gt;" line="392"/>
                <declaration name="mh" type="MethodHandle" line="393"/>
                <scope line="394"/>
                <declaration name="type" type="MethodType" line="397"/>
                <scope line="407"/>
                <scope line="410"/>
                <scope line="415"/>
                <declaration name="rawWrap" type="Wrapper" line="419"/>
                <scope line="420"/>
                <scope line="423"/>
            </method>
            <javadoc line="429">
                Value-killing function.                
                <param>
                    x an arbitrary reference value                    
                </param>
                <return>
                    a null                    
                </return>
            </javadoc>
            <method name="alwaysNull" type="Object" line="434">
                <params>
                    <param name="x" type="Object"/>
                </params>
            </method>
            <javadoc line="437">
                Value-killing function.                
                <param>
                    x an arbitrary reference value                    
                </param>
                <return>
                    a zero                    
                </return>
            </javadoc>
            <method name="alwaysZero" type="int" line="442">
                <params>
                    <param name="x" type="Object"/>
                </params>
            </method>
            <javadoc line="445">
                Identity function.                
                <param>
                    x an arbitrary reference value                    
                </param>
                <return>
                    the same value x                    
                </return>
            </javadoc>
            <method name="identity" type="T" line="450">
                <params>
                    <param name="x" type="T"/>
                </params>
            </method>
            <javadoc line="453">
                Identity function on ints.                
                <param>
                    x an arbitrary int value                    
                </param>
                <return>
                    the same value x                    
                </return>
            </javadoc>
            <method name="identity" type="int" line="458">
                <params>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="identity" type="byte" line="461">
                <params>
                    <param name="x" type="byte"/>
                </params>
            </method>
            <method name="identity" type="short" line="464">
                <params>
                    <param name="x" type="short"/>
                </params>
            </method>
            <method name="identity" type="boolean" line="467">
                <params>
                    <param name="x" type="boolean"/>
                </params>
            </method>
            <method name="identity" type="char" line="470">
                <params>
                    <param name="x" type="char"/>
                </params>
            </method>
            <javadoc line="473">
                Identity function on longs.                
                <param>
                    x an arbitrary long value                    
                </param>
                <return>
                    the same value x                    
                </return>
            </javadoc>
            <method name="identity" type="long" line="478">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <method name="identity" type="float" line="481">
                <params>
                    <param name="x" type="float"/>
                </params>
            </method>
            <method name="identity" type="double" line="484">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="487">
                Identity function, with reference cast.                
                <param>
                    t an arbitrary reference type                    
                </param>
                <param>
                    x an arbitrary reference value                    
                </param>
                <return>
                    the same value x                    
                </return>
            </javadoc>
            <method name="castReference" type="T" line="493">
                <params>
                    <param name="t" type="Class&lt;? extends T&gt;"/>
                    <param name="x" type="U"/>
                </params>
            </method>
            <declaration name="IDENTITY" type="MethodHandle" line="496"/>
            <scope line="497">
                <scope line="498">
                    <declaration name="idType" type="MethodType" line="499"/>
                    <declaration name="castType" type="MethodType" line="500"/>
                    <declaration name="alwaysZeroType" type="MethodType" line="501"/>
                    <declaration name="ignoreType" type="MethodType" line="502"/>
                    <declaration name="zeroObjectType" type="MethodType" line="503"/>
                </scope>
                <scope line="515">
                    <declaration name="err" type="Error" line="516"/>
                </scope>
            </scope>
            <class name="LazyStatics" line="521">
                <declaration name="COPY_AS_REFERENCE_ARRAY" type="MethodHandle" line="522"/>
                <scope line="523">
                    <scope line="524"/>
                    <scope line="529">
                        <declaration name="err" type="Error" line="530"/>
                    </scope>
                </scope>
            </class>
            <declaration name="WRAPPER_CASTS" type="EnumMap&amp;lt;Wrapper,MethodHandle&amp;gt;[]" line="536"/>
            <javadoc line="537">
                Return a method that casts its sole argument (an Object) to the given type
                  and returns it as the given type (if exact is true), or as plain Object (if erase is true).                
            </javadoc>
            <method name="cast" type="MethodHandle" line="541">
                <params>
                    <param name="type" type="Class&lt;?&gt;"/>
                </params>
                <declaration name="exact" type="boolean" line="542"/>
                <declaration name="mh" type="MethodHandle" line="544"/>
                <declaration name="wrap" type="Wrapper" line="545"/>
                <declaration name="cache" type="EnumMap&amp;lt;Wrapper,MethodHandle&amp;gt;" line="546"/>
                <scope line="547"/>
                <scope line="556">
                    <declaration name="xmt" type="MethodType" line="557"/>
                </scope>
            </method>
            <method name="identity" type="MethodHandle" line="563"/>
            <method name="identity" type="MethodHandle" line="566">
                <params>
                    <param name="type" type="Class&lt;?&gt;"/>
                </params>
            </method>
            <method name="identity" type="MethodHandle" line="569">
                <params>
                    <param name="wrap" type="Wrapper"/>
                </params>
                <declaration name="cache" type="EnumMap&amp;lt;Wrapper,MethodHandle&amp;gt;" line="570"/>
                <declaration name="mh" type="MethodHandle" line="571"/>
                <scope line="572"/>
                <declaration name="type" type="MethodType" line="575"/>
                <scope line="577"/>
                <scope line="580"/>
                <scope line="583"/>
                <scope line="586"/>
                <scope line="590"/>
            </method>
            <method name="doubleToFloat" type="float" line="596">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <method name="floatToDouble" type="double" line="599">
                <params>
                    <param name="x" type="float"/>
                </params>
            </method>
            <method name="doubleToLong" type="long" line="602">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <method name="doubleToInt" type="int" line="605">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <method name="doubleToShort" type="short" line="608">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <method name="doubleToChar" type="char" line="611">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <method name="doubleToByte" type="byte" line="614">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <method name="doubleToBoolean" type="boolean" line="617">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <method name="floatToLong" type="long" line="620">
                <params>
                    <param name="x" type="float"/>
                </params>
            </method>
            <method name="floatToInt" type="int" line="623">
                <params>
                    <param name="x" type="float"/>
                </params>
            </method>
            <method name="floatToShort" type="short" line="626">
                <params>
                    <param name="x" type="float"/>
                </params>
            </method>
            <method name="floatToChar" type="char" line="629">
                <params>
                    <param name="x" type="float"/>
                </params>
            </method>
            <method name="floatToByte" type="byte" line="632">
                <params>
                    <param name="x" type="float"/>
                </params>
            </method>
            <method name="floatToBoolean" type="boolean" line="635">
                <params>
                    <param name="x" type="float"/>
                </params>
            </method>
            <method name="longToDouble" type="double" line="638">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <method name="intToDouble" type="double" line="641">
                <params>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="shortToDouble" type="double" line="644">
                <params>
                    <param name="x" type="short"/>
                </params>
            </method>
            <method name="charToDouble" type="double" line="647">
                <params>
                    <param name="x" type="char"/>
                </params>
            </method>
            <method name="byteToDouble" type="double" line="650">
                <params>
                    <param name="x" type="byte"/>
                </params>
            </method>
            <method name="booleanToDouble" type="double" line="653">
                <params>
                    <param name="x" type="boolean"/>
                </params>
            </method>
            <method name="longToFloat" type="float" line="656">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <method name="intToFloat" type="float" line="659">
                <params>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="shortToFloat" type="float" line="662">
                <params>
                    <param name="x" type="short"/>
                </params>
            </method>
            <method name="charToFloat" type="float" line="665">
                <params>
                    <param name="x" type="char"/>
                </params>
            </method>
            <method name="byteToFloat" type="float" line="668">
                <params>
                    <param name="x" type="byte"/>
                </params>
            </method>
            <method name="booleanToFloat" type="float" line="671">
                <params>
                    <param name="x" type="boolean"/>
                </params>
            </method>
            <method name="toBoolean" type="boolean" line="674">
                <params>
                    <param name="x" type="byte"/>
                </params>
            </method>
            <method name="fromBoolean" type="byte" line="677">
                <params>
                    <param name="x" type="boolean"/>
                </params>
            </method>
            <declaration name="CONVERT_FLOAT_FUNCTIONS" type="EnumMap&amp;lt;Wrapper,MethodHandle&amp;gt;[]" line="680"/>
            <method name="convertFloatFunction" type="MethodHandle" line="681">
                <params>
                    <param name="wrap" type="Wrapper"/>
                    <param name="toFloat" type="boolean"/>
                    <param name="doubleSize" type="boolean"/>
                </params>
            </method>
            <method name="convertFromFloat" type="MethodHandle" line="717">
                <params>
                    <param name="fixType" type="Class&lt;?&gt;"/>
                </params>
                <declaration name="wrap" type="Wrapper" line="718"/>
            </method>
            <method name="convertFromDouble" type="MethodHandle" line="721">
                <params>
                    <param name="fixType" type="Class&lt;?&gt;"/>
                </params>
                <declaration name="wrap" type="Wrapper" line="722"/>
            </method>
            <method name="convertToFloat" type="MethodHandle" line="725">
                <params>
                    <param name="fixType" type="Class&lt;?&gt;"/>
                </params>
                <declaration name="wrap" type="Wrapper" line="726"/>
            </method>
            <method name="convertToDouble" type="MethodHandle" line="729">
                <params>
                    <param name="fixType" type="Class&lt;?&gt;"/>
                </params>
                <declaration name="wrap" type="Wrapper" line="730"/>
            </method>
            <method name="capitalize" type="String" line="733">
                <params>
                    <param name="x" type="String"/>
                </params>
            </method>
            <method name="convertArrayElements" type="Object" line="736">
                <params>
                    <param name="arrayType" type="Class&lt;?&gt;"/>
                    <param name="array" type="Object"/>
                </params>
                <declaration name="src" type="Class&amp;lt;?&amp;gt;" line="737"/>
                <declaration name="dst" type="Class&amp;lt;?&amp;gt;" line="738"/>
                <declaration name="sw" type="Wrapper" line="740"/>
                <declaration name="dw" type="Wrapper" line="741"/>
                <declaration name="length" type="int" line="742"/>
                <scope line="743">
                    <declaration name="a" type="Object[]" line="744"/>
                    <declaration name="res" type="Object" line="747"/>
                </scope>
                <declaration name="res" type="Object[]" line="752"/>
                <scope line="753"/>
                <scope line="756"/>
                <declaration name="a" type="Object" line="761"/>
            </method>
            <method name="findCollector" type="MethodHandle" line="765">
                <params>
                    <param name="name" type="String"/>
                    <param name="nargs" type="int"/>
                    <param name="rtype" type="Class&lt;?&gt;"/>
                    <param name="ptypes" type="Class&lt;?&gt;"/>
                </params>
                <declaration name="type" type="MethodType" line="766"/>
                <scope line="767"/>
                <scope line="770"/>
            </method>
            <declaration name="NO_ARGS_ARRAY" type="Object[]" line="774"/>
            <method name="makeArray" type="Object[]" line="775">
                <params>
                    <param name="args" type="Object"/>
                </params>
            </method>
            <method name="array" type="Object[]" line="778"/>
            <method name="array" type="Object[]" line="781">
                <params>
                    <param name="a0" type="Object"/>
                </params>
            </method>
            <method name="array" type="Object[]" line="784">
                <params>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                </params>
            </method>
            <method name="array" type="Object[]" line="787">
                <params>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                    <param name="a2" type="Object"/>
                </params>
            </method>
            <method name="array" type="Object[]" line="790">
                <params>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                    <param name="a2" type="Object"/>
                    <param name="a3" type="Object"/>
                </params>
            </method>
            <method name="array" type="Object[]" line="793">
                <params>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                    <param name="a2" type="Object"/>
                    <param name="a3" type="Object"/>
                    <param name="a4" type="Object"/>
                </params>
            </method>
            <method name="array" type="Object[]" line="796">
                <params>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                    <param name="a2" type="Object"/>
                    <param name="a3" type="Object"/>
                    <param name="a4" type="Object"/>
                    <param name="a5" type="Object"/>
                </params>
            </method>
            <method name="array" type="Object[]" line="799">
                <params>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                    <param name="a2" type="Object"/>
                    <param name="a3" type="Object"/>
                    <param name="a4" type="Object"/>
                    <param name="a5" type="Object"/>
                    <param name="a6" type="Object"/>
                </params>
            </method>
            <method name="array" type="Object[]" line="802">
                <params>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                    <param name="a2" type="Object"/>
                    <param name="a3" type="Object"/>
                    <param name="a4" type="Object"/>
                    <param name="a5" type="Object"/>
                    <param name="a6" type="Object"/>
                    <param name="a7" type="Object"/>
                </params>
            </method>
            <method name="array" type="Object[]" line="805">
                <params>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                    <param name="a2" type="Object"/>
                    <param name="a3" type="Object"/>
                    <param name="a4" type="Object"/>
                    <param name="a5" type="Object"/>
                    <param name="a6" type="Object"/>
                    <param name="a7" type="Object"/>
                    <param name="a8" type="Object"/>
                </params>
            </method>
            <method name="array" type="Object[]" line="808">
                <params>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                    <param name="a2" type="Object"/>
                    <param name="a3" type="Object"/>
                    <param name="a4" type="Object"/>
                    <param name="a5" type="Object"/>
                    <param name="a6" type="Object"/>
                    <param name="a7" type="Object"/>
                    <param name="a8" type="Object"/>
                    <param name="a9" type="Object"/>
                </params>
            </method>
            <method name="makeArrays" type="MethodHandle[]" line="811">
                <declaration name="mhs" type="ArrayList&amp;lt;MethodHandle&amp;gt;" line="812"/>
                <scope line="813">
                    <declaration name="mh" type="MethodHandle" line="814"/>
                </scope>
            </method>
            <declaration name="ARRAYS" type="MethodHandle[]" line="821"/>
            <method name="newArray" type="Object[]" line="822">
                <params>
                    <param name="len" type="int"/>
                </params>
            </method>
            <method name="fillWithArguments" type="void" line="825">
                <params>
                    <param name="a" type="Object[]"/>
                    <param name="pos" type="int"/>
                    <param name="args" type="Object"/>
                </params>
            </method>
            <method name="fillArray" type="Object[]" line="828">
                <params>
                    <param name="a" type="Object[]"/>
                    <param name="pos" type="Integer"/>
                    <param name="a0" type="Object"/>
                </params>
            </method>
            <method name="fillArray" type="Object[]" line="832">
                <params>
                    <param name="a" type="Object[]"/>
                    <param name="pos" type="Integer"/>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                </params>
            </method>
            <method name="fillArray" type="Object[]" line="836">
                <params>
                    <param name="a" type="Object[]"/>
                    <param name="pos" type="Integer"/>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                    <param name="a2" type="Object"/>
                </params>
            </method>
            <method name="fillArray" type="Object[]" line="840">
                <params>
                    <param name="a" type="Object[]"/>
                    <param name="pos" type="Integer"/>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                    <param name="a2" type="Object"/>
                    <param name="a3" type="Object"/>
                </params>
            </method>
            <method name="fillArray" type="Object[]" line="844">
                <params>
                    <param name="a" type="Object[]"/>
                    <param name="pos" type="Integer"/>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                    <param name="a2" type="Object"/>
                    <param name="a3" type="Object"/>
                    <param name="a4" type="Object"/>
                </params>
            </method>
            <method name="fillArray" type="Object[]" line="848">
                <params>
                    <param name="a" type="Object[]"/>
                    <param name="pos" type="Integer"/>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                    <param name="a2" type="Object"/>
                    <param name="a3" type="Object"/>
                    <param name="a4" type="Object"/>
                    <param name="a5" type="Object"/>
                </params>
            </method>
            <method name="fillArray" type="Object[]" line="852">
                <params>
                    <param name="a" type="Object[]"/>
                    <param name="pos" type="Integer"/>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                    <param name="a2" type="Object"/>
                    <param name="a3" type="Object"/>
                    <param name="a4" type="Object"/>
                    <param name="a5" type="Object"/>
                    <param name="a6" type="Object"/>
                </params>
            </method>
            <method name="fillArray" type="Object[]" line="856">
                <params>
                    <param name="a" type="Object[]"/>
                    <param name="pos" type="Integer"/>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                    <param name="a2" type="Object"/>
                    <param name="a3" type="Object"/>
                    <param name="a4" type="Object"/>
                    <param name="a5" type="Object"/>
                    <param name="a6" type="Object"/>
                    <param name="a7" type="Object"/>
                </params>
            </method>
            <method name="fillArray" type="Object[]" line="860">
                <params>
                    <param name="a" type="Object[]"/>
                    <param name="pos" type="Integer"/>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                    <param name="a2" type="Object"/>
                    <param name="a3" type="Object"/>
                    <param name="a4" type="Object"/>
                    <param name="a5" type="Object"/>
                    <param name="a6" type="Object"/>
                    <param name="a7" type="Object"/>
                    <param name="a8" type="Object"/>
                </params>
            </method>
            <method name="fillArray" type="Object[]" line="864">
                <params>
                    <param name="a" type="Object[]"/>
                    <param name="pos" type="Integer"/>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                    <param name="a2" type="Object"/>
                    <param name="a3" type="Object"/>
                    <param name="a4" type="Object"/>
                    <param name="a5" type="Object"/>
                    <param name="a6" type="Object"/>
                    <param name="a7" type="Object"/>
                    <param name="a8" type="Object"/>
                    <param name="a9" type="Object"/>
                </params>
            </method>
            <method name="makeFillArrays" type="MethodHandle[]" line="868">
                <declaration name="mhs" type="ArrayList&amp;lt;MethodHandle&amp;gt;" line="869"/>
                <scope line="871">
                    <declaration name="mh" type="MethodHandle" line="872"/>
                </scope>
            </method>
            <declaration name="FILL_ARRAYS" type="MethodHandle[]" line="879"/>
            <method name="copyAsReferenceArray" type="Object[]" line="880">
                <params>
                    <param name="arrayType" type="Class&lt;? extends Object[]&gt;"/>
                    <param name="a" type="Object"/>
                </params>
            </method>
            <method name="copyAsPrimitiveArray" type="Object" line="883">
                <params>
                    <param name="w" type="Wrapper"/>
                    <param name="boxes" type="Object"/>
                </params>
                <declaration name="a" type="Object" line="884"/>
            </method>
            <javadoc line="888">
                Return a method handle that takes the indicated number of Object
                  arguments and returns an Object array of them, as if for varargs.                
            </javadoc>
            <method name="varargsArray" type="MethodHandle" line="892">
                <params>
                    <param name="nargs" type="int"/>
                </params>
                <declaration name="mh" type="MethodHandle" line="893"/>
                <declaration name="producer" type="MethodHandle" line="897"/>
            </method>
            <method name="buildVarargsArray" type="MethodHandle" line="900">
                <params>
                    <param name="producer" type="MethodHandle"/>
                    <param name="nargs" type="int"/>
                </params>
                <declaration name="filler" type="MethodHandle" line="901"/>
                <declaration name="mh" type="MethodHandle" line="902"/>
            </method>
            <method name="buildNewArray" type="MethodHandle" line="908">
                <params>
                    <param name="nargs" type="int"/>
                </params>
            </method>
            <declaration name="FILLERS" type="MethodHandle[]" line="911"/>
            <method name="filler" type="MethodHandle" line="912">
                <params>
                    <param name="nargs" type="int"/>
                </params>
                <declaration name="filler" type="MethodHandle" line="913"/>
            </method>
            <method name="buildFiller" type="MethodHandle" line="917">
                <params>
                    <param name="nargs" type="int"/>
                </params>
                <declaration name="CHUNK" type="int" line="919"/>
                <declaration name="rightLen" type="int" line="920"/>
                <declaration name="leftLen" type="int" line="921"/>
                <scope line="922">
                    <scope line="924"/>
                </scope>
                <declaration name="leftFill" type="MethodHandle" line="928"/>
                <declaration name="rightFill" type="MethodHandle" line="929"/>
                <declaration name="mh" type="MethodHandle" line="931"/>
                <scope line="934"/>
            </method>
            <declaration name="TYPED_COLLECTORS" type="ClassValue&amp;lt;MethodHandle[]&amp;gt;" line="940"/>
            <anonymous_class line="940">
                <method name="computeValue" type="MethodHandle[]" line="941">
                    <params>
                        <param name="type" type="Class&lt;?&gt;"/>
                    </params>
                </method>
            </anonymous_class>
            <javadoc line="946">
                Return a method handle that takes the indicated number of
                  typed arguments and returns an array of them.
                  The type argument is the array type.                
            </javadoc>
            <method name="varargsArray" type="MethodHandle" line="951">
                <params>
                    <param name="arrayType" type="Class&lt;?&gt;"/>
                    <param name="nargs" type="int"/>
                </params>
                <declaration name="elemType" type="Class&amp;lt;?&amp;gt;" line="952"/>
                <declaration name="cache" type="MethodHandle" line="955"/>
                <declaration name="mh" type="MethodHandle" line="956"/>
                <declaration name="producer" type="MethodHandle" line="958"/>
            </method>
            <method name="buildArrayProducer" type="MethodHandle" line="964">
                <params>
                    <param name="arrayType" type="Class&lt;?&gt;"/>
                </params>
                <declaration name="elemType" type="Class&amp;lt;?&amp;gt;" line="965"/>
            </method>
            <declaration name="NO_ARGS_LIST" type="List&amp;lt;Object&amp;gt;" line="969"/>
            <method name="makeList" type="List&lt;Object&gt;" line="970">
                <params>
                    <param name="args" type="Object"/>
                </params>
            </method>
            <method name="list" type="List&lt;Object&gt;" line="973"/>
            <method name="list" type="List&lt;Object&gt;" line="976">
                <params>
                    <param name="a0" type="Object"/>
                </params>
            </method>
            <method name="list" type="List&lt;Object&gt;" line="979">
                <params>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                </params>
            </method>
            <method name="list" type="List&lt;Object&gt;" line="982">
                <params>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                    <param name="a2" type="Object"/>
                </params>
            </method>
            <method name="list" type="List&lt;Object&gt;" line="985">
                <params>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                    <param name="a2" type="Object"/>
                    <param name="a3" type="Object"/>
                </params>
            </method>
            <method name="list" type="List&lt;Object&gt;" line="988">
                <params>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                    <param name="a2" type="Object"/>
                    <param name="a3" type="Object"/>
                    <param name="a4" type="Object"/>
                </params>
            </method>
            <method name="list" type="List&lt;Object&gt;" line="991">
                <params>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                    <param name="a2" type="Object"/>
                    <param name="a3" type="Object"/>
                    <param name="a4" type="Object"/>
                    <param name="a5" type="Object"/>
                </params>
            </method>
            <method name="list" type="List&lt;Object&gt;" line="994">
                <params>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                    <param name="a2" type="Object"/>
                    <param name="a3" type="Object"/>
                    <param name="a4" type="Object"/>
                    <param name="a5" type="Object"/>
                    <param name="a6" type="Object"/>
                </params>
            </method>
            <method name="list" type="List&lt;Object&gt;" line="997">
                <params>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                    <param name="a2" type="Object"/>
                    <param name="a3" type="Object"/>
                    <param name="a4" type="Object"/>
                    <param name="a5" type="Object"/>
                    <param name="a6" type="Object"/>
                    <param name="a7" type="Object"/>
                </params>
            </method>
            <method name="list" type="List&lt;Object&gt;" line="1000">
                <params>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                    <param name="a2" type="Object"/>
                    <param name="a3" type="Object"/>
                    <param name="a4" type="Object"/>
                    <param name="a5" type="Object"/>
                    <param name="a6" type="Object"/>
                    <param name="a7" type="Object"/>
                    <param name="a8" type="Object"/>
                </params>
            </method>
            <method name="list" type="List&lt;Object&gt;" line="1003">
                <params>
                    <param name="a0" type="Object"/>
                    <param name="a1" type="Object"/>
                    <param name="a2" type="Object"/>
                    <param name="a3" type="Object"/>
                    <param name="a4" type="Object"/>
                    <param name="a5" type="Object"/>
                    <param name="a6" type="Object"/>
                    <param name="a7" type="Object"/>
                    <param name="a8" type="Object"/>
                    <param name="a9" type="Object"/>
                </params>
            </method>
            <method name="makeLists" type="MethodHandle[]" line="1006">
                <declaration name="mhs" type="ArrayList&amp;lt;MethodHandle&amp;gt;" line="1007"/>
                <scope line="1008">
                    <declaration name="mh" type="MethodHandle" line="1009"/>
                </scope>
            </method>
            <declaration name="LISTS" type="MethodHandle[]" line="1016"/>
            <javadoc line="1017">
                Return a method handle that takes the indicated number of Object
                  arguments and returns a List.                
            </javadoc>
            <method name="varargsList" type="MethodHandle" line="1021">
                <params>
                    <param name="nargs" type="int"/>
                </params>
                <declaration name="mh" type="MethodHandle" line="1022"/>
            </method>
            <method name="buildVarargsList" type="MethodHandle" line="1028">
                <params>
                    <param name="nargs" type="int"/>
                </params>
            </method>
        </class>
    </source>