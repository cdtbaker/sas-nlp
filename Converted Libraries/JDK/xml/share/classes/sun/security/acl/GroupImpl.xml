<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.acl">
        <import package="java.util"/>
        <import package="java.security"/>
        <import package="java.security.acl"/>
        <class name="GroupImpl" line="32">
            <comment line="100">
                equals(Group) for compatibility                
            </comment>
            <comment line="147">
                                
            </comment>
            <comment line="148">
                This function is the recursive search of groups for this                
            </comment>
            <comment line="149">
                implementation of the Group. The search proceeds building up                
            </comment>
            <comment line="150">
                a vector of already seen groups. Only new groups are considered,                
            </comment>
            <comment line="151">
                thereby avoiding loops.                
            </comment>
            <comment line="152">
                                
            </comment>
            <implements interface="Group"/>
            <javadoc line="32">
                This class implements a group of principals.                
                <author>
                    Satish Dharmaraj                    
                </author>
            </javadoc>
            <declaration name="groupMembers" type="Vector&lt;Principal&gt;" line="37"/>
            <declaration name="group" type="String" line="38"/>
            <javadoc line="40">
                Constructs a Group object with no members.                
                <param>
                    groupName the name of the group                    
                </param>
            </javadoc>
            <method name="GroupImpl" type="constructor" line="44">
                <params>
                    <param name="groupName" type="String"/>
                </params>
            </method>
            <javadoc line="48">
                adds the specified member to the group.                
                <param>
                    user The principal to add to the group.                    
                </param>
                <return>
                    true if the member was added - false if the
                      member could not be added.                    
                </return>
            </javadoc>
            <method name="addMember" type="boolean" line="54">
                <params>
                    <param name="user" type="Principal"/>
                </params>
                <comment line="58">
                    do not allow groups to be added to itself.                    
                </comment>
            </method>
            <javadoc line="66">
                removes the specified member from the group.                
                <param>
                    user The principal to remove from the group.                    
                </param>
                <param>
                    true if the principal was removed false if
                      the principal was not a member                    
                </param>
            </javadoc>
            <method name="removeMember" type="boolean" line="72">
                <params>
                    <param name="user" type="Principal"/>
                </params>
            </method>
            <javadoc line="76">
                returns the enumeration of the members in the group.                
            </javadoc>
            <method name="members" type="Enumeration<? extends Principal>" line="79"/>
            <javadoc line="83">
                This function returns true if the group passed matches
                  the group represented in this interface.                
                <param>
                    another The group to compare this group to.                    
                </param>
            </javadoc>
            <method name="equals" type="boolean" line="88">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="89"/>
                <scope line="92"/>
                <declaration name="another" type="Group" line="95"/>
            </method>
            <method name="equals" type="boolean" line="100">
                <params>
                    <param name="another" type="Group"/>
                </params>
            </method>
            <javadoc line="104">
                Prints a stringified version of the group.                
            </javadoc>
            <method name="toString" type="String" line="107"/>
            <javadoc line="111">
                return a hashcode for the principal.                
            </javadoc>
            <method name="hashCode" type="int" line="114"/>
            <javadoc line="118">
                returns true if the passed principal is a member of the group.                
                <param>
                    member The principal whose membership must be checked for.                    
                </param>
                <return>
                    true if the principal is a member of this group,
                      false otherwise                    
                </return>
            </javadoc>
            <method name="isMember" type="boolean" line="124">
                <params>
                    <param name="member" type="Principal"/>
                </params>
                <comment line="126">
                                        
                </comment>
                <comment line="127">
                    if the member is part of the group (common case), return true.                    
                </comment>
                <comment line="128">
                    if not, recursively search depth first in the group looking for the                    
                </comment>
                <comment line="129">
                    principal.                    
                </comment>
                <comment line="130">
                                        
                </comment>
                <scope line="131"/>
                <scope line="133">
                    <declaration name="alreadySeen" type="Vector&lt;Group&gt;" line="134"/>
                </scope>
            </method>
            <javadoc line="139">
                return the name of the principal.                
            </javadoc>
            <method name="getName" type="String" line="142"/>
            <method name="isMemberRecurse" type="boolean" line="152">
                <params>
                    <param name="member" type="Principal"/>
                    <param name="alreadySeen" type="Vector<Group>"/>
                </params>
                <comment line="158">
                    if the member is in this collection, return true                    
                </comment>
                <comment line="162">
                                        
                </comment>
                <comment line="163">
                    if not recurse if the group has not been checked already.                    
                </comment>
                <comment line="164">
                    Can call method in this package only if the object is an                    
                </comment>
                <comment line="165">
                    instance of this class. Otherwise call the method defined                    
                </comment>
                <comment line="166">
                    in the interface. (This can lead to a loop if a mixture of                    
                </comment>
                <comment line="167">
                    implementations form a loop, but we live with this improbable                    
                </comment>
                <comment line="168">
                    case rather than clutter the interface by forcing the                    
                </comment>
                <comment line="169">
                    implementation of this method.)                    
                </comment>
                <comment line="170">
                                        
                </comment>
                <declaration name="e" type="Enumeration&lt;? extends Principal&gt;" line="153"/>
                <scope line="154">
                    <declaration name="mem" type="boolean" line="155"/>
                    <declaration name="p" type="Principal" line="156"/>
                    <scope line="159"/>
                    <scope line="161">
                        <declaration name="g" type="GroupImpl" line="171"/>
                    </scope>
                    <scope line="175">
                        <declaration name="g" type="Group" line="176"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>