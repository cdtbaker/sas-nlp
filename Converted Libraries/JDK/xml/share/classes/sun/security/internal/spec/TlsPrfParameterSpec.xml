<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.internal.spec">
        <import package="java.security.spec.AlgorithmParameterSpec"/>
        <import package="javax.crypto.SecretKey"/>
        <class name="TlsPrfParameterSpec" line="4">
            <implements interface="AlgorithmParameterSpec"/>
            <javadoc line="4">
                Parameters for the TLS PRF (pseudo-random function). The PRF function
                  is defined in RFC 2246.
                  This class is used to initialize KeyGenerators of the type &quot;TlsPrf&quot;.
                  &lt;p&gt;Instances of this class are immutable.                
                <since>
                    1.6                    
                </since>
                <author>
                    Andreas Sterbenz                    
                </author>
                <deprecated>
                    Sun JDK internal use only --- WILL BE REMOVED in a future
                      release.                    
                </deprecated>
            </javadoc>
            <declaration name="secret" type="SecretKey" line="15"/>
            <declaration name="label" type="String" line="16"/>
            <declaration name="seed" type="byte[]" line="17"/>
            <declaration name="outputLength" type="int" line="18"/>
            <declaration name="prfHashAlg" type="String" line="19"/>
            <declaration name="prfHashLength" type="int" line="20"/>
            <declaration name="prfBlockSize" type="int" line="21"/>
            <javadoc line="22">
                Constructs a new TlsPrfParameterSpec.                
                <param>
                    secret the secret to use in the calculation (or null)                    
                </param>
                <param>
                    label the label to use in the calculation                    
                </param>
                <param>
                    seed the random seed to use in the calculation                    
                </param>
                <param>
                    outputLength the length in bytes of the output key to be produced                    
                </param>
                <param>
                    prfHashAlg the name of the TLS PRF hash algorithm to use.
                      Used only for TLS 1.2+.  TLS1.1 and earlier use a fixed PRF.                    
                </param>
                <param>
                    prfHashLength the output length of the TLS PRF hash algorithm.
                      Used only for TLS 1.2+.                    
                </param>
                <param>
                    prfBlockSize the input block size of the TLS PRF hash algorithm.
                      Used only for TLS 1.2+.                    
                </param>
                <throws>
                    NullPointerException if label or seed is null                    
                </throws>
                <throws>
                    IllegalArgumentException if outputLength is negative                    
                </throws>
            </javadoc>
            <method name="TlsPrfParameterSpec" type="constructor" line="37">
                <params>
                    <param name="secret" type="SecretKey"/>
                    <param name="label" type="String"/>
                    <param name="seed" type="byte[]"/>
                    <param name="outputLength" type="int"/>
                    <param name="prfHashAlg" type="String"/>
                    <param name="prfHashLength" type="int"/>
                    <param name="prfBlockSize" type="int"/>
                </params>
                <scope line="38"/>
                <scope line="41"/>
            </method>
            <javadoc line="52">
                Returns the secret to use in the PRF calculation, or null if there is no
                  secret.                
                <return>
                    the secret to use in the PRF calculation, or null if there is no
                      secret.                    
                </return>
            </javadoc>
            <method name="getSecret" type="SecretKey" line="58"/>
            <javadoc line="61">
                Returns the label to use in the PRF calcuation.                
                <return>
                    the label to use in the PRF calcuation.                    
                </return>
            </javadoc>
            <method name="getLabel" type="String" line="65"/>
            <javadoc line="68">
                Returns a copy of the seed to use in the PRF calcuation.                
                <return>
                    a copy of the seed to use in the PRF calcuation.                    
                </return>
            </javadoc>
            <method name="getSeed" type="byte[]" line="72"/>
            <javadoc line="75">
                Returns the length in bytes of the output key to be produced.                
                <return>
                    the length in bytes of the output key to be produced.                    
                </return>
            </javadoc>
            <method name="getOutputLength" type="int" line="79"/>
            <javadoc line="82">
                Obtains the PRF hash algorithm to use in the PRF calculation.                
                <return>
                    the hash algorithm, or null if no algorithm was specified.                    
                </return>
            </javadoc>
            <method name="getPRFHashAlg" type="String" line="86"/>
            <javadoc line="89">
                Obtains the length of PRF hash algorithm.
                  It would have been preferred to use MessageDigest.getDigestLength(),
                  but the API does not require implementations to support the method.                
                <return>
                    the hash algorithm length.                    
                </return>
            </javadoc>
            <method name="getPRFHashLength" type="int" line="95"/>
            <javadoc line="98">
                Obtains the length of PRF hash algorithm.                
                <return>
                    the hash algorithm length.                    
                </return>
            </javadoc>
            <method name="getPRFBlockSize" type="int" line="102"/>
        </class>
    </source>