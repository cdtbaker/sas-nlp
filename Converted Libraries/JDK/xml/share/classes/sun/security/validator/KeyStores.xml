<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.validator">
        <import package="java.io"/>
        <import package="java.util"/>
        <import package="java.security"/>
        <import package="java.security.cert"/>
        <import package="java.security.cert.Certificate"/>
        <import package="sun.security.action"/>
        <class name="KeyStores" line="37">
            <comment line="49">
                in the future, all accesses to the system cacerts keystore should
                 go through this class. but not right now.                
            </comment>
            <comment line="51">
                private final static String javaHome =
                (String)AccessController.doPrivileged(new GetPropertyAction(&quot;java.home&quot;));
                
                private final static char SEP = File.separatorChar;
                
                private static KeyStore caCerts;
                
                private static KeyStore getKeyStore(String type, String name,
                char[] password) throws IOException {
                if (type == null) {
                type = &quot;JKS&quot;;
                }
                try {
                KeyStore ks = KeyStore.getInstance(type);
                FileInputStream in = (FileInputStream)AccessController.doPrivileged
                (new OpenFileInputStreamAction(name));
                ks.load(in, password);
                return ks;
                } catch (GeneralSecurityException e) {
                 XXX
                throw new IOException();
                } catch (PrivilegedActionException e) {
                throw (IOException)e.getCause();
                }
                }
                
                
                 Return a KeyStore with the contents of the libsecuritycacerts file.
                 The file is only opened once per JVM invocation and the contents
                 cached subsequently.
                
                public synchronized static KeyStore getCaCerts() throws IOException {
                if (caCerts != null) {
                return caCerts;
                }
                String name = javaHome + SEP + &quot;lib&quot; + SEP + &quot;security&quot; + SEP + &quot;cacerts&quot;;
                caCerts = getKeyStore(null, name, null);
                return caCerts;
                }                
            </comment>
            <javadoc line="37">
                Collection of static utility methods related to KeyStores.                
                <author>
                    Andreas Sterbenz                    
                </author>
            </javadoc>
            <method name="KeyStores" type="constructor" line="44">
                <comment line="46">
                    empty                    
                </comment>
            </method>
            <javadoc line="92">
                Return a Set with all trusted X509Certificates contained in
                  this KeyStore.                
            </javadoc>
            <method name="getTrustedCerts" type="Set<X509Certificate>" line="96">
                <params>
                    <param name="ks" type="KeyStore"/>
                </params>
                <comment line="116">
                    ignore                    
                </comment>
                <declaration name="set" type="Set&lt;X509Certificate&gt;" line="97"/>
                <scope line="98">
                    <scope line="99">
                        <declaration name="alias" type="String" line="100"/>
                        <scope line="101">
                            <declaration name="cert" type="Certificate" line="102"/>
                            <scope line="103"/>
                        </scope>
                        <scope line="106">
                            <declaration name="certs" type="Certificate[]" line="107"/>
                            <scope line="109"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="114"/>
            </method>
        </class>
    </source>