<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.validator">
        <import package="java.io.IOException"/>
        <import package="java.util"/>
        <import package="java.security"/>
        <import package="java.security.cert"/>
        <import package="javax.security.auth.x500.X500Principal"/>
        <import package="sun.security.x509.X509CertImpl"/>
        <import package="sun.security.x509.NetscapeCertTypeExtension"/>
        <import package="sun.security.util.DerValue"/>
        <import package="sun.security.util.DerInputStream"/>
        <import package="sun.security.util.DerOutputStream"/>
        <import package="sun.security.util.ObjectIdentifier"/>
        <import package="sun.security.provider.certpath.AlgorithmChecker"/>
        <class name="SimpleValidator" line="45">
            <extends class="Validator"/>
            <comment line="61">
                Constants for the OIDs we need                
            </comment>
            <comment line="315">
                Verify the key usage and extended key usage for intermediate
                 certificates.                
            </comment>
            <javadoc line="45">
                A simple validator implementation. It is based on code from the JSSE
                  X509TrustManagerImpl. This implementation is designed for compatibility with
                  deployed certificates and previous J2SE versions. It will never support
                  more advanced features and will be deemphasized in favor of the PKIX
                  validator going forward.
                  &lt;p&gt;{@code SimpleValidator} objects are immutable once they have been created.
                  Please DO NOT add methods that can change the state of an instance once
                  it has been created.                
                <author>
                    Andreas Sterbenz                    
                </author>
            </javadoc>
            <declaration name="OID_BASIC_CONSTRAINTS" type="String" line="62"/>
            <declaration name="OID_NETSCAPE_CERT_TYPE" type="String" line="64"/>
            <declaration name="OID_KEY_USAGE" type="String" line="66"/>
            <declaration name="OID_EXTENDED_KEY_USAGE" type="String" line="68"/>
            <declaration name="OID_EKU_ANY_USAGE" type="String" line="70"/>
            <declaration name="OBJID_NETSCAPE_CERT_TYPE" type="ObjectIdentifier" line="72"/>
            <declaration name="NSCT_SSL_CA" type="String" line="75"/>
            <declaration name="NSCT_CODE_SIGNING_CA" type="String" line="78"/>
            <declaration name="trustedX500Principals" type="Map&lt;X500Principal,List&lt;X509Certificate&gt;&gt;" line="81"/>
            <javadoc line="81">
                The trusted certificates as:
                  Map (X500Principal)subject of trusted cert -&gt; List of X509Certificate
                  The list is used because there may be multiple certificates
                  with an identical subject DN.                
            </javadoc>
            <declaration name="trustedCerts" type="Collection&lt;X509Certificate&gt;" line="90"/>
            <javadoc line="90">
                Set of the trusted certificates. Present only for
                  getTrustedCertificates().                
            </javadoc>
            <method name="SimpleValidator" type="constructor" line="96">
                <params>
                    <param name="variant" type="String"/>
                    <param name="trustedCerts" type="Collection<X509Certificate>"/>
                </params>
                <comment line="106">
                    this actually should be a set, but duplicate entries
                     are not a problem and we can avoid the Set overhead                    
                </comment>
                <scope line="101">
                    <declaration name="principal" type="X500Principal" line="102"/>
                    <declaration name="list" type="List&lt;X509Certificate&gt;" line="103"/>
                    <scope line="104"/>
                </scope>
            </method>
            <method name="getTrustedCertificates" type="Collection<X509Certificate>" line="114"/>
            <javadoc line="118">
                Perform simple validation of chain. The arguments otherCerts and
                  parameter are ignored.                
            </javadoc>
            <method name="engineValidate" type="X509Certificate[]" line="126">
                <params>
                    <param name="chain" type="X509Certificate[]"/>
                    <param name="otherCerts" type="Collection<X509Certificate>"/>
                    <param name="constraints" type="AlgorithmConstraints"/>
                    <param name="parameter" type="Object"/>
                </params>
                <comment line="133">
                    make sure chain includes a trusted cert                    
                </comment>
                <comment line="141">
                    create default algorithm constraints checker                    
                </comment>
                <comment line="145">
                    create application level algorithm constraints checker                    
                </comment>
                <comment line="151">
                    verify top down, starting at the certificate issued by
                     the trust anchor                    
                </comment>
                <comment line="158">
                    check certificate algorithm                    
                </comment>
                <comment line="160">
                    Algorithm checker does not care about the unresolved
                     critical extensions.                    
                </comment>
                <comment line="171">
                    no validity check for code signing certs                    
                </comment>
                <comment line="177">
                    check name chaining                    
                </comment>
                <comment line="184">
                    check signature                    
                </comment>
                <comment line="192">
                    check extensions for CA certs                    
                </comment>
                <scope line="127"/>
                <declaration name="date" type="Date" line="135"/>
                <scope line="136"/>
                <declaration name="anchor" type="TrustAnchor" line="141"/>
                <declaration name="defaultAlgChecker" type="AlgorithmChecker" line="142"/>
                <declaration name="appAlgChecker" type="AlgorithmChecker" line="145"/>
                <scope line="146"/>
                <declaration name="maxPathLength" type="int" line="152"/>
                <scope line="153">
                    <declaration name="issuerCert" type="X509Certificate" line="154"/>
                    <declaration name="cert" type="X509Certificate" line="155"/>
                    <scope line="158">
                        <scope line="162"/>
                    </scope>
                    <scope line="165"/>
                    <scope line="172"/>
                    <scope line="178"/>
                    <scope line="184"/>
                    <scope line="186"/>
                    <scope line="192"/>
                </scope>
            </method>
            <method name="checkExtensions" type="int" line="201">
                <params>
                    <param name="cert" type="X509Certificate"/>
                    <param name="maxPathLen" type="int"/>
                </params>
                <comment line="208">
                    Check the basic constraints extension                    
                </comment>
                <comment line="212">
                    Check the key usage and extended key usage extensions                    
                </comment>
                <comment line="215">
                    check Netscape certificate type extension                    
                </comment>
                <declaration name="critSet" type="Set&lt;String&gt;" line="202"/>
                <scope line="203"/>
                <declaration name="pathLenConstraint" type="int" line="208"/>
                <scope line="217"/>
            </method>
            <method name="checkNetscapeCertType" type="void" line="227">
                <params>
                    <param name="cert" type="X509Certificate"/>
                    <param name="critSet" type="Set<String>"/>
                </params>
                <comment line="230">
                    nothing                    
                </comment>
                <scope line="228"/>
                <scope line="231">
                    <scope line="232"/>
                </scope>
                <scope line="240">
                    <scope line="241"/>
                </scope>
                <scope line="248"/>
            </method>
            <javadoc line="253">
                Get the value of the specified bit in the Netscape certificate type
                  extension. If the extension is not present at all, we return true.                
            </javadoc>
            <method name="getNetscapeCertTypeBit" type="boolean" line="257">
                <params>
                    <param name="cert" type="X509Certificate"/>
                    <param name="type" type="String"/>
                </params>
                <scope line="258">
                    <declaration name="ext" type="NetscapeCertTypeExtension" line="259"/>
                    <scope line="260">
                        <declaration name="certImpl" type="X509CertImpl" line="261"/>
                        <declaration name="oid" type="ObjectIdentifier" line="262"/>
                        <scope line="264"/>
                    </scope>
                    <scope line="267">
                        <declaration name="extVal" type="byte[]" line="268"/>
                        <scope line="269"/>
                        <declaration name="in" type="DerInputStream" line="272"/>
                        <declaration name="encoded" type="byte[]" line="273"/>
                    </scope>
                    <declaration name="val" type="Boolean" line="278"/>
                </scope>
                <scope line="280"/>
            </method>
            <method name="checkBasicConstraints" type="int" line="286">
                <params>
                    <param name="cert" type="X509Certificate"/>
                    <param name="critSet" type="Set<String>"/>
                    <param name="maxPathLen" type="int"/>
                </params>
                <comment line="291">
                    reject, if extension missing or not a CA (constraints == -1)                    
                </comment>
                <comment line="297">
                    if the certificate is self-issued, ignore the pathLenConstraint
                     checking.                    
                </comment>
                <comment line="300">
                    reserved one for end-entity certificate                    
                </comment>
                <declaration name="constraints" type="int" line="289"/>
                <scope line="291"/>
                <scope line="298">
                    <scope line="299"/>
                </scope>
                <scope line="307"/>
            </method>
            <method name="checkKeyUsage" type="void" line="319">
                <params>
                    <param name="cert" type="X509Certificate"/>
                    <param name="critSet" type="Set<String>"/>
                </params>
                <comment line="323">
                    EKU irrelevant in CA certificates                    
                </comment>
                <comment line="326">
                    check key usage extension                    
                </comment>
                <comment line="329">
                    keyUsageInfo[5] is for keyCertSign.                    
                </comment>
                <declaration name="keyUsageInfo" type="boolean[]" line="326"/>
                <scope line="327">
                    <scope line="329"/>
                </scope>
            </method>
            <javadoc line="337">
                Build a trusted certificate chain. This method always returns a chain
                  with a trust anchor as the final cert in the chain. If no trust anchor
                  could be found, a CertificateException is thrown.                
            </javadoc>
            <method name="buildTrustedChain" type="X509Certificate[]" line="343">
                <params>
                    <param name="chain" type="X509Certificate[]"/>
                </params>
                <comment line="346">
                    scan chain starting at EE cert
                     if a trusted certificate is found, append it and return                    
                </comment>
                <comment line="358">
                    check if we can append a trusted cert                    
                </comment>
                <comment line="369">
                    no trusted cert found, error                    
                </comment>
                <declaration name="c" type="List&lt;X509Certificate&gt;" line="344"/>
                <scope line="347">
                    <declaration name="cert" type="X509Certificate" line="348"/>
                    <declaration name="trustedCert" type="X509Certificate" line="349"/>
                    <scope line="350"/>
                </scope>
                <declaration name="cert" type="X509Certificate" line="358"/>
                <declaration name="subject" type="X500Principal" line="359"/>
                <declaration name="issuer" type="X500Principal" line="360"/>
                <declaration name="list" type="List&lt;X509Certificate&gt;" line="361"/>
                <scope line="362">
                    <declaration name="trustedCert" type="X509Certificate" line="363"/>
                </scope>
            </method>
            <javadoc line="372">
                Return a trusted certificate that matches the input certificate,
                  or null if no such certificate can be found. This method also handles
                  cases where a CA re-issues a trust anchor with the same public key and
                  same subject and issuer names but a new validity period, etc.                
            </javadoc>
            <method name="getTrustedCertificate" type="X509Certificate" line="378">
                <params>
                    <param name="cert" type="X509Certificate"/>
                </params>
                <comment line="400">
                    All tests pass, this must be the one to use...                    
                </comment>
                <declaration name="certSubjectName" type="Principal" line="379"/>
                <declaration name="list" type="List&lt;X509Certificate&gt;" line="380"/>
                <scope line="381"/>
                <declaration name="certIssuerName" type="Principal" line="385"/>
                <declaration name="certPublicKey" type="PublicKey" line="386"/>
                <scope line="388">
                    <scope line="389"/>
                    <scope line="392"/>
                    <scope line="395"/>
                </scope>
            </method>
        </class>
    </source>