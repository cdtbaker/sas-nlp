<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.validator">
        <import package="java.io.IOException"/>
        <import package="java.util"/>
        <import package="java.security"/>
        <import package="java.security.cert"/>
        <import package="javax.security.auth.x500.X500Principal"/>
        <import package="sun.security.x509.X509CertImpl"/>
        <import package="sun.security.x509.NetscapeCertTypeExtension"/>
        <import package="sun.security.util.DerValue"/>
        <import package="sun.security.util.DerInputStream"/>
        <import package="sun.security.util.DerOutputStream"/>
        <import package="sun.security.util.ObjectIdentifier"/>
        <import package="sun.security.provider.certpath.AlgorithmChecker"/>
        <class name="SimpleValidator" line="14">
            <extends class="Validator"/>
            <javadoc line="14">
                A simple validator implementation. It is based on code from the JSSE
                  X509TrustManagerImpl. This implementation is designed for compatibility with
                  deployed certificates and previous J2SE versions. It will never support
                  more advanced features and will be deemphasized in favor of the PKIX
                  validator going forward.
                  &lt;p&gt;{@code SimpleValidator} objects are immutable once they have been created.
                  Please DO NOT add methods that can change the state of an instance once
                  it has been created.                
                <author>
                    Andreas Sterbenz                    
                </author>
            </javadoc>
            <declaration name="OID_BASIC_CONSTRAINTS" type="String" line="26"/>
            <declaration name="OID_NETSCAPE_CERT_TYPE" type="String" line="27"/>
            <declaration name="OID_KEY_USAGE" type="String" line="28"/>
            <declaration name="OID_EXTENDED_KEY_USAGE" type="String" line="29"/>
            <declaration name="OID_EKU_ANY_USAGE" type="String" line="30"/>
            <declaration name="OBJID_NETSCAPE_CERT_TYPE" type="ObjectIdentifier" line="31"/>
            <declaration name="NSCT_SSL_CA" type="String" line="32"/>
            <declaration name="NSCT_CODE_SIGNING_CA" type="String" line="33"/>
            <declaration name="trustedX500Principals" type="Map&lt;X500Principal,List&lt;X509Certificate&gt;&gt;" line="34"/>
            <javadoc line="34">
                The trusted certificates as:
                  Map (X500Principal)subject of trusted cert -&gt; List of X509Certificate
                  The list is used because there may be multiple certificates
                  with an identical subject DN.                
            </javadoc>
            <declaration name="trustedCerts" type="Collection&lt;X509Certificate&gt;" line="41"/>
            <javadoc line="41">
                Set of the trusted certificates. Present only for
                  getTrustedCertificates().                
            </javadoc>
            <method name="SimpleValidator" type="constructor" line="46">
                <params>
                    <param name="variant" type="String"/>
                    <param name="trustedCerts" type="Collection<X509Certificate>"/>
                </params>
                <scope line="50">
                    <declaration name="principal" type="X500Principal" line="51"/>
                    <declaration name="list" type="List&lt;X509Certificate&gt;" line="52"/>
                    <scope line="53"/>
                </scope>
            </method>
            <method name="getTrustedCertificates" type="Collection<X509Certificate>" line="60"/>
            <javadoc line="63">
                Perform simple validation of chain. The arguments otherCerts and
                  parameter are ignored.                
            </javadoc>
            <method name="engineValidate" type="X509Certificate[]" line="67">
                <params>
                    <param name="chain" type="X509Certificate[]"/>
                    <param name="otherCerts" type="Collection<X509Certificate>"/>
                    <param name="constraints" type="AlgorithmConstraints"/>
                    <param name="parameter" type="Object"/>
                </params>
                <scope line="68"/>
                <declaration name="date" type="Date" line="72"/>
                <scope line="73"/>
                <declaration name="anchor" type="TrustAnchor" line="76"/>
                <declaration name="defaultAlgChecker" type="AlgorithmChecker" line="77"/>
                <declaration name="appAlgChecker" type="AlgorithmChecker" line="78"/>
                <scope line="79"/>
                <declaration name="maxPathLength" type="int" line="82"/>
                <scope line="83">
                    <declaration name="issuerCert" type="X509Certificate" line="84"/>
                    <declaration name="cert" type="X509Certificate" line="85"/>
                    <scope line="86">
                        <scope line="88"/>
                    </scope>
                    <scope line="92"/>
                    <scope line="95"/>
                    <scope line="98"/>
                    <scope line="101"/>
                    <scope line="104"/>
                    <scope line="107"/>
                </scope>
            </method>
            <method name="checkExtensions" type="int" line="113">
                <params>
                    <param name="cert" type="X509Certificate"/>
                    <param name="maxPathLen" type="int"/>
                </params>
                <declaration name="critSet" type="Set&lt;String&gt;" line="114"/>
                <scope line="115"/>
                <declaration name="pathLenConstraint" type="int" line="118"/>
                <scope line="121"/>
            </method>
            <method name="checkNetscapeCertType" type="void" line="126">
                <params>
                    <param name="cert" type="X509Certificate"/>
                    <param name="critSet" type="Set<String>"/>
                </params>
                <scope line="127"/>
                <scope line="129">
                    <scope line="130"/>
                </scope>
                <scope line="135">
                    <scope line="136"/>
                </scope>
                <scope line="141"/>
            </method>
            <javadoc line="145">
                Get the value of the specified bit in the Netscape certificate type
                  extension. If the extension is not present at all, we return true.                
            </javadoc>
            <method name="getNetscapeCertTypeBit" type="boolean" line="149">
                <params>
                    <param name="cert" type="X509Certificate"/>
                    <param name="type" type="String"/>
                </params>
                <scope line="150">
                    <declaration name="ext" type="NetscapeCertTypeExtension" line="151"/>
                    <scope line="152">
                        <declaration name="certImpl" type="X509CertImpl" line="153"/>
                        <declaration name="oid" type="ObjectIdentifier" line="154"/>
                        <scope line="156"/>
                    </scope>
                    <scope line="160">
                        <declaration name="extVal" type="byte[]" line="161"/>
                        <scope line="162"/>
                        <declaration name="in" type="DerInputStream" line="165"/>
                        <declaration name="encoded" type="byte[]" line="166"/>
                    </scope>
                    <declaration name="val" type="Boolean" line="170"/>
                </scope>
                <scope line="173"/>
            </method>
            <method name="checkBasicConstraints" type="int" line="177">
                <params>
                    <param name="cert" type="X509Certificate"/>
                    <param name="critSet" type="Set<String>"/>
                    <param name="maxPathLen" type="int"/>
                </params>
                <declaration name="constraints" type="int" line="179"/>
                <scope line="180"/>
                <scope line="183">
                    <scope line="184"/>
                </scope>
                <scope line="189"/>
            </method>
            <method name="checkKeyUsage" type="void" line="194">
                <params>
                    <param name="cert" type="X509Certificate"/>
                    <param name="critSet" type="Set<String>"/>
                </params>
                <declaration name="keyUsageInfo" type="boolean[]" line="197"/>
                <scope line="198">
                    <scope line="199"/>
                </scope>
            </method>
            <javadoc line="204">
                Build a trusted certificate chain. This method always returns a chain
                  with a trust anchor as the final cert in the chain. If no trust anchor
                  could be found, a CertificateException is thrown.                
            </javadoc>
            <method name="buildTrustedChain" type="X509Certificate[]" line="209">
                <params>
                    <param name="chain" type="X509Certificate[]"/>
                </params>
                <declaration name="c" type="List&lt;X509Certificate&gt;" line="210"/>
                <scope line="211">
                    <declaration name="cert" type="X509Certificate" line="212"/>
                    <declaration name="trustedCert" type="X509Certificate" line="213"/>
                    <scope line="214"/>
                </scope>
                <declaration name="cert" type="X509Certificate" line="220"/>
                <declaration name="subject" type="X500Principal" line="221"/>
                <declaration name="issuer" type="X500Principal" line="222"/>
                <declaration name="list" type="List&lt;X509Certificate&gt;" line="223"/>
                <scope line="224">
                    <declaration name="trustedCert" type="X509Certificate" line="225"/>
                </scope>
            </method>
            <javadoc line="231">
                Return a trusted certificate that matches the input certificate,
                  or null if no such certificate can be found. This method also handles
                  cases where a CA re-issues a trust anchor with the same public key and
                  same subject and issuer names but a new validity period, etc.                
            </javadoc>
            <method name="getTrustedCertificate" type="X509Certificate" line="237">
                <params>
                    <param name="cert" type="X509Certificate"/>
                </params>
                <declaration name="certSubjectName" type="Principal" line="238"/>
                <declaration name="list" type="List&lt;X509Certificate&gt;" line="239"/>
                <scope line="240"/>
                <declaration name="certIssuerName" type="Principal" line="243"/>
                <declaration name="certPublicKey" type="PublicKey" line="244"/>
                <scope line="245">
                    <scope line="246"/>
                    <scope line="249"/>
                    <scope line="252"/>
                </scope>
            </method>
        </class>
    </source>