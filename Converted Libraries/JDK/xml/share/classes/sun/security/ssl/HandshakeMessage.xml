<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.ssl">
        <import package="java.io"/>
        <import package="java.math.BigInteger"/>
        <import package="java.security"/>
        <import package="java.security.interfaces"/>
        <import package="java.security.spec"/>
        <import package="java.security.cert"/>
        <import package="java.security.cert.Certificate"/>
        <import package="java.util"/>
        <import package="java.util.concurrent.ConcurrentHashMap"/>
        <import package="java.lang.reflect"/>
        <import package="javax.security.auth.x500.X500Principal"/>
        <import package="javax.crypto.KeyGenerator"/>
        <import package="javax.crypto.SecretKey"/>
        <import package="javax.net.ssl"/>
        <import package="sun.security.internal.spec.TlsPrfParameterSpec"/>
        <import package="sun.security.ssl.CipherSuite"/>
        <import package="sun.security.ssl.CipherSuite.PRF"/>
        <class name="HandshakeMessage" line="19">
            <javadoc line="19">
                Many data structures are involved in the handshake messages.  These
                  classes are used as structures, with public data members.  They are
                  not visible outside the SSL package.
                  Handshake messages all have a common header format, and they are all
                  encoded in a &quot;handshake data&quot; SSL record substream.  The base class
                  here (HandshakeMessage) provides a common framework and records the
                  SSL record type of the particular handshake message.
                  This file contains subclasses for all the basic handshake messages.
                  All handshake messages know how to encode and decode themselves on
                  SSL streams; this facilitates using the same code on SSL client and
                  server sides, although they don&apos;t send and receive the same messages.
                  Messages also know how to print themselves, which is quite handy
                  for debugging.  They always identify their type, and can optionally
                  dump all of their content.                
                <author>
                    David Brownell                    
                </author>
            </javadoc>
            <method name="HandshakeMessage" type="constructor" line="37"/>
            <declaration name="ht_hello_request" type="byte" line="39"/>
            <declaration name="ht_client_hello" type="byte" line="40"/>
            <declaration name="ht_server_hello" type="byte" line="41"/>
            <declaration name="ht_certificate" type="byte" line="42"/>
            <declaration name="ht_server_key_exchange" type="byte" line="43"/>
            <declaration name="ht_certificate_request" type="byte" line="44"/>
            <declaration name="ht_server_hello_done" type="byte" line="45"/>
            <declaration name="ht_certificate_verify" type="byte" line="46"/>
            <declaration name="ht_client_key_exchange" type="byte" line="47"/>
            <declaration name="ht_finished" type="byte" line="48"/>
            <declaration name="debug" type="Debug" line="49"/>
            <javadoc line="50">
                Utility method to convert a BigInteger to a byte array in unsigned
                  format as needed in the handshake messages. BigInteger uses
                  2&apos;s complement format, i.e. it prepends an extra zero if the MSB
                  is set. We remove that.                
            </javadoc>
            <method name="toByteArray" type="byte[]" line="56">
                <params>
                    <param name="bi" type="BigInteger"/>
                </params>
                <declaration name="b" type="byte[]" line="57"/>
                <scope line="58">
                    <declaration name="n" type="int" line="59"/>
                    <declaration name="newarray" type="byte[]" line="60"/>
                </scope>
            </method>
            <declaration name="MD5_pad1" type="byte[]" line="66"/>
            <declaration name="MD5_pad2" type="byte[]" line="67"/>
            <declaration name="SHA_pad1" type="byte[]" line="68"/>
            <declaration name="SHA_pad2" type="byte[]" line="69"/>
            <method name="genPad" type="byte[]" line="70">
                <params>
                    <param name="b" type="int"/>
                    <param name="count" type="int"/>
                </params>
                <declaration name="padding" type="byte[]" line="71"/>
            </method>
            <method name="write" type="void" line="75">
                <params>
                    <param name="s" type="HandshakeOutStream"/>
                </params>
                <declaration name="len" type="int" line="76"/>
                <scope line="77"/>
            </method>
            <method name="messageType" type="int" line="84"/>
            <method name="messageLength" type="int" line="85"/>
            <method name="send" type="void" line="86"/>
            <method name="print" type="void" line="87"/>
            <class name="HelloRequest" line="88">
                <extends class="HandshakeMessage"/>
                <method name="messageType" type="int" line="89"/>
                <method name="HelloRequest" type="constructor" line="92"/>
                <method name="HelloRequest" type="constructor" line="94">
                    <params>
                        <param name="in" type="HandshakeInStream"/>
                    </params>
                </method>
                <method name="messageLength" type="int" line="96"/>
                <method name="send" type="void" line="99">
                    <params>
                        <param name="out" type="HandshakeOutStream"/>
                    </params>
                </method>
                <method name="print" type="void" line="101">
                    <params>
                        <param name="out" type="PrintStream"/>
                    </params>
                </method>
            </class>
            <class name="ClientHello" line="105">
                <extends class="HandshakeMessage"/>
                <declaration name="protocolVersion" type="ProtocolVersion" line="106"/>
                <declaration name="clnt_random" type="RandomCookie" line="107"/>
                <declaration name="sessionId" type="SessionId" line="108"/>
                <declaration name="cipherSuites" type="CipherSuiteList" line="109"/>
                <declaration name="compression_methods" type="byte[]" line="110"/>
                <declaration name="extensions" type="HelloExtensions" line="111"/>
                <declaration name="NULL_COMPRESSION" type="byte[]" line="112"/>
                <method name="ClientHello" type="constructor" line="113">
                    <params>
                        <param name="generator" type="SecureRandom"/>
                        <param name="protocolVersion" type="ProtocolVersion"/>
                        <param name="sessionId" type="SessionId"/>
                        <param name="cipherSuites" type="CipherSuiteList"/>
                    </params>
                    <scope line="117"/>
                </method>
                <method name="ClientHello" type="constructor" line="124">
                    <params>
                        <param name="s" type="HandshakeInStream"/>
                        <param name="messageLength" type="int"/>
                    </params>
                    <scope line="130"/>
                </method>
                <method name="getCipherSuites" type="CipherSuiteList" line="134"/>
                <method name="addRenegotiationInfoExtension" type="void" line="137">
                    <params>
                        <param name="clientVerifyData" type="byte[]"/>
                    </params>
                    <declaration name="renegotiationInfo" type="HelloExtension" line="138"/>
                </method>
                <method name="addServerNameIndicationExtension" type="void" line="141">
                    <params>
                        <param name="hostname" type="String"/>
                    </params>
                    <declaration name="hostnames" type="ArrayList&amp;lt;String&amp;gt;" line="142"/>
                    <scope line="144"/>
                    <scope line="147"/>
                </method>
                <method name="addSignatureAlgorithmsExtension" type="void" line="150">
                    <params>
                        <param name="algorithms" type="Collection&lt;SignatureAndHashAlgorithm&gt;"/>
                    </params>
                    <declaration name="signatureAlgorithm" type="HelloExtension" line="151"/>
                </method>
                <method name="messageType" type="int" line="154"/>
                <method name="messageLength" type="int" line="157"/>
                <method name="send" type="void" line="160">
                    <params>
                        <param name="s" type="HandshakeOutStream"/>
                    </params>
                </method>
                <method name="print" type="void" line="169">
                    <params>
                        <param name="s" type="PrintStream"/>
                    </params>
                    <scope line="171"/>
                </method>
            </class>
            <class name="ServerHello" line="183">
                <extends class="HandshakeMessage"/>
                <method name="messageType" type="int" line="184"/>
                <declaration name="protocolVersion" type="ProtocolVersion" line="187"/>
                <declaration name="svr_random" type="RandomCookie" line="188"/>
                <declaration name="sessionId" type="SessionId" line="189"/>
                <declaration name="cipherSuite" type="CipherSuite" line="190"/>
                <declaration name="compression_method" type="byte" line="191"/>
                <declaration name="extensions" type="HelloExtensions" line="192"/>
                <method name="ServerHello" type="constructor" line="193"/>
                <method name="ServerHello" type="constructor" line="195">
                    <params>
                        <param name="input" type="HandshakeInStream"/>
                        <param name="messageLength" type="int"/>
                    </params>
                    <scope line="201"/>
                </method>
                <method name="messageLength" type="int" line="205"/>
                <method name="send" type="void" line="208">
                    <params>
                        <param name="s" type="HandshakeOutStream"/>
                    </params>
                </method>
                <method name="print" type="void" line="218">
                    <params>
                        <param name="s" type="PrintStream"/>
                    </params>
                    <scope line="220">
                        <declaration name="i" type="int" line="223"/>
                    </scope>
                </method>
            </class>
            <class name="CertificateMsg" line="233">
                <extends class="HandshakeMessage"/>
                <method name="messageType" type="int" line="234"/>
                <declaration name="chain" type="X509Certificate[]" line="237"/>
                <declaration name="encodedChain" type="List&amp;lt;byte[]&amp;gt;" line="238"/>
                <declaration name="messageLength" type="int" line="239"/>
                <method name="CertificateMsg" type="constructor" line="240">
                    <params>
                        <param name="certs" type="X509Certificate[]"/>
                    </params>
                </method>
                <method name="CertificateMsg" type="constructor" line="243">
                    <params>
                        <param name="input" type="HandshakeInStream"/>
                    </params>
                    <declaration name="chainLen" type="int" line="244"/>
                    <declaration name="v" type="List&amp;lt;Certificate&amp;gt;" line="245"/>
                    <declaration name="cf" type="CertificateFactory" line="246"/>
                    <scope line="247">
                        <declaration name="cert" type="byte[]" line="248"/>
                        <scope line="250">
                            <scope line="251"/>
                        </scope>
                        <scope line="256"/>
                    </scope>
                </method>
                <method name="messageLength" type="int" line="262">
                    <scope line="263">
                        <scope line="266">
                            <scope line="267">
                                <declaration name="b" type="byte[]" line="268"/>
                            </scope>
                        </scope>
                        <scope line="273"/>
                    </scope>
                </method>
                <method name="send" type="void" line="280">
                    <params>
                        <param name="s" type="HandshakeOutStream"/>
                    </params>
                    <scope line="282"/>
                </method>
                <method name="print" type="void" line="286">
                    <params>
                        <param name="s" type="PrintStream"/>
                    </params>
                    <scope line="288"/>
                </method>
                <method name="getCertificateChain" type="X509Certificate[]" line="293"/>
            </class>
            <class name="ServerKeyExchange" line="297">
                <extends class="HandshakeMessage"/>
                <method name="messageType" type="int" line="298"/>
            </class>
            <class name="RSA_ServerKeyExchange" line="302">
                <extends class="ServerKeyExchange"/>
                <declaration name="rsa_modulus" type="byte" line="303"/>
                <declaration name="rsa_exponent" type="byte" line="304"/>
                <declaration name="signature" type="Signature" line="305"/>
                <declaration name="signatureBytes" type="byte[]" line="306"/>
                <method name="updateSignature" type="void" line="307">
                    <params>
                        <param name="clntNonce" type="byte"/>
                        <param name="svrNonce" type="byte"/>
                    </params>
                    <declaration name="tmp" type="int" line="308"/>
                </method>
                <method name="RSA_ServerKeyExchange" type="constructor" line="320">
                    <params>
                        <param name="ephemeralKey" type="PublicKey"/>
                        <param name="privateKey" type="PrivateKey"/>
                        <param name="clntNonce" type="RandomCookie"/>
                        <param name="svrNonce" type="RandomCookie"/>
                        <param name="sr" type="SecureRandom"/>
                    </params>
                    <declaration name="rsaKey" type="RSAPublicKeySpec" line="321"/>
                </method>
                <method name="RSA_ServerKeyExchange" type="constructor" line="329">
                    <params>
                        <param name="input" type="HandshakeInStream"/>
                    </params>
                </method>
                <method name="getPublicKey" type="PublicKey" line="335">
                    <scope line="336">
                        <declaration name="kfac" type="KeyFactory" line="337"/>
                        <declaration name="kspec" type="RSAPublicKeySpec" line="338"/>
                    </scope>
                    <scope line="341"/>
                </method>
                <method name="verify" type="boolean" line="345">
                    <params>
                        <param name="certifiedKey" type="PublicKey"/>
                        <param name="clntNonce" type="RandomCookie"/>
                        <param name="svrNonce" type="RandomCookie"/>
                    </params>
                </method>
                <method name="messageLength" type="int" line="350"/>
                <method name="send" type="void" line="353">
                    <params>
                        <param name="s" type="HandshakeOutStream"/>
                    </params>
                </method>
                <method name="print" type="void" line="358">
                    <params>
                        <param name="s" type="PrintStream"/>
                    </params>
                    <scope line="360"/>
                </method>
            </class>
            <class name="DH_ServerKeyExchange" line="366">
                <extends class="ServerKeyExchange"/>
                <declaration name="dhKeyExchangeFix" type="boolean" line="367"/>
                <declaration name="dh_p" type="byte" line="368"/>
                <declaration name="dh_g" type="byte" line="369"/>
                <declaration name="dh_Ys" type="byte" line="370"/>
                <declaration name="signature" type="byte" line="371"/>
                <declaration name="protocolVersion" type="ProtocolVersion" line="372"/>
                <declaration name="preferableSignatureAlgorithm" type="SignatureAndHashAlgorithm" line="373"/>
                <method name="DH_ServerKeyExchange" type="constructor" line="374">
                    <params>
                        <param name="obj" type="DHCrypt"/>
                        <param name="protocolVersion" type="ProtocolVersion"/>
                    </params>
                </method>
                <method name="DH_ServerKeyExchange" type="constructor" line="380">
                    <params>
                        <param name="obj" type="DHCrypt"/>
                        <param name="key" type="PrivateKey"/>
                        <param name="clntNonce" type="byte"/>
                        <param name="svrNonce" type="byte"/>
                        <param name="sr" type="SecureRandom"/>
                        <param name="signAlgorithm" type="SignatureAndHashAlgorithm"/>
                        <param name="protocolVersion" type="ProtocolVersion"/>
                    </params>
                    <declaration name="sig" type="Signature" line="383"/>
                    <scope line="384"/>
                    <scope line="388">
                        <scope line="390"/>
                        <scope line="393"/>
                    </scope>
                </method>
                <method name="DH_ServerKeyExchange" type="constructor" line="401">
                    <params>
                        <param name="input" type="HandshakeInStream"/>
                        <param name="protocolVersion" type="ProtocolVersion"/>
                    </params>
                </method>
                <method name="DH_ServerKeyExchange" type="constructor" line="409">
                    <params>
                        <param name="input" type="HandshakeInStream"/>
                        <param name="publicKey" type="PublicKey"/>
                        <param name="clntNonce" type="byte"/>
                        <param name="svrNonce" type="byte"/>
                        <param name="messageSize" type="int"/>
                        <param name="localSupportedSignAlgs" type="Collection&lt;SignatureAndHashAlgorithm&gt;"/>
                        <param name="protocolVersion" type="ProtocolVersion"/>
                    </params>
                    <scope line="414">
                        <declaration name="hash" type="int" line="415"/>
                        <declaration name="signature" type="int" line="416"/>
                        <scope line="418"/>
                    </scope>
                    <scope line="422"/>
                    <declaration name="signature" type="byte" line="425"/>
                    <scope line="426"/>
                    <scope line="429"/>
                    <declaration name="sig" type="Signature" line="436"/>
                    <declaration name="algorithm" type="String" line="437"/>
                    <scope line="438"/>
                    <scope line="441">
                        <scope line="442"/>
                        <scope line="445"/>
                        <scope line="448"/>
                    </scope>
                    <scope line="454"/>
                </method>
                <method name="getModulus" type="BigInteger" line="458"/>
                <method name="getBase" type="BigInteger" line="461"/>
                <method name="getServerPublicKey" type="BigInteger" line="464"/>
                <method name="updateSignature" type="void" line="467">
                    <params>
                        <param name="sig" type="Signature"/>
                        <param name="clntNonce" type="byte"/>
                        <param name="svrNonce" type="byte"/>
                    </params>
                    <declaration name="tmp" type="int" line="468"/>
                </method>
                <method name="setValues" type="void" line="484">
                    <params>
                        <param name="obj" type="DHCrypt"/>
                    </params>
                </method>
                <method name="messageLength" type="int" line="489">
                    <declaration name="temp" type="int" line="490"/>
                    <scope line="494">
                        <scope line="495"/>
                        <scope line="499"/>
                    </scope>
                </method>
                <method name="send" type="void" line="505">
                    <params>
                        <param name="s" type="HandshakeOutStream"/>
                    </params>
                    <scope line="509">
                        <scope line="510"/>
                        <scope line="514"/>
                        <scope line="517"/>
                    </scope>
                </method>
                <method name="print" type="void" line="522">
                    <params>
                        <param name="s" type="PrintStream"/>
                    </params>
                    <scope line="524">
                        <scope line="528"/>
                        <scope line="531">
                            <scope line="532"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="ECDH_ServerKeyExchange" line="540">
                <extends class="ServerKeyExchange"/>
                <declaration name="CURVE_EXPLICIT_PRIME" type="int" line="541"/>
                <declaration name="CURVE_EXPLICIT_CHAR2" type="int" line="542"/>
                <declaration name="CURVE_NAMED_CURVE" type="int" line="543"/>
                <declaration name="curveId" type="int" line="544"/>
                <declaration name="pointBytes" type="byte[]" line="545"/>
                <declaration name="signatureBytes" type="byte[]" line="546"/>
                <declaration name="publicKey" type="ECPublicKey" line="547"/>
                <declaration name="protocolVersion" type="ProtocolVersion" line="548"/>
                <declaration name="preferableSignatureAlgorithm" type="SignatureAndHashAlgorithm" line="549"/>
                <method name="ECDH_ServerKeyExchange" type="constructor" line="550">
                    <params>
                        <param name="obj" type="ECDHCrypt"/>
                        <param name="privateKey" type="PrivateKey"/>
                        <param name="clntNonce" type="byte[]"/>
                        <param name="svrNonce" type="byte[]"/>
                        <param name="sr" type="SecureRandom"/>
                        <param name="signAlgorithm" type="SignatureAndHashAlgorithm"/>
                        <param name="protocolVersion" type="ProtocolVersion"/>
                    </params>
                    <declaration name="params" type="ECParameterSpec" line="553"/>
                    <declaration name="point" type="ECPoint" line="554"/>
                    <scope line="557"/>
                    <declaration name="sig" type="Signature" line="560"/>
                    <scope line="561"/>
                    <scope line="565"/>
                </method>
                <method name="ECDH_ServerKeyExchange" type="constructor" line="572">
                    <params>
                        <param name="input" type="HandshakeInStream"/>
                        <param name="signingKey" type="PublicKey"/>
                        <param name="clntNonce" type="byte[]"/>
                        <param name="svrNonce" type="byte[]"/>
                        <param name="localSupportedSignAlgs" type="Collection&lt;SignatureAndHashAlgorithm&gt;"/>
                        <param name="protocolVersion" type="ProtocolVersion"/>
                    </params>
                    <declaration name="curveType" type="int" line="574"/>
                    <declaration name="parameters" type="ECParameterSpec" line="575"/>
                    <scope line="576">
                        <scope line="578"/>
                        <declaration name="curveOid" type="String" line="581"/>
                        <scope line="582"/>
                        <scope line="586"/>
                    </scope>
                    <scope line="590"/>
                    <declaration name="point" type="ECPoint" line="594"/>
                    <declaration name="factory" type="KeyFactory" line="595"/>
                    <scope line="597"/>
                    <scope line="600">
                        <declaration name="hash" type="int" line="601"/>
                        <declaration name="signature" type="int" line="602"/>
                        <scope line="604"/>
                    </scope>
                    <declaration name="sig" type="Signature" line="609"/>
                    <scope line="610"/>
                    <scope line="613"/>
                    <scope line="618"/>
                </method>
                <method name="getPublicKey" type="ECPublicKey" line="622"/>
                <method name="getSignature" type="Signature" line="625">
                    <params>
                        <param name="keyAlgorithm" type="String"/>
                    </params>
                    <scope line="626"/>
                    <scope line="629"/>
                    <scope line="632"/>
                </method>
                <method name="updateSignature" type="void" line="636">
                    <params>
                        <param name="sig" type="Signature"/>
                        <param name="clntNonce" type="byte"/>
                        <param name="svrNonce" type="byte"/>
                    </params>
                </method>
                <method name="messageLength" type="int" line="645">
                    <declaration name="sigLen" type="int" line="646"/>
                    <scope line="647">
                        <scope line="649"/>
                    </scope>
                </method>
                <method name="send" type="void" line="655">
                    <params>
                        <param name="s" type="HandshakeOutStream"/>
                    </params>
                    <scope line="659">
                        <scope line="660"/>
                    </scope>
                </method>
                <method name="print" type="void" line="667">
                    <params>
                        <param name="s" type="PrintStream"/>
                    </params>
                    <scope line="669">
                        <scope line="670"/>
                        <scope line="673">
                            <scope line="674"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="DistinguishedName" line="682">
                <declaration name="name" type="byte" line="683"/>
                <method name="DistinguishedName" type="constructor" line="684">
                    <params>
                        <param name="input" type="HandshakeInStream"/>
                    </params>
                </method>
                <method name="DistinguishedName" type="constructor" line="687">
                    <params>
                        <param name="dn" type="X500Principal"/>
                    </params>
                </method>
                <method name="getX500Principal" type="X500Principal" line="690">
                    <scope line="691"/>
                    <scope line="694"/>
                </method>
                <method name="length" type="int" line="698"/>
                <method name="send" type="void" line="701">
                    <params>
                        <param name="output" type="HandshakeOutStream"/>
                    </params>
                </method>
                <method name="print" type="void" line="704">
                    <params>
                        <param name="output" type="PrintStream"/>
                    </params>
                    <declaration name="principal" type="X500Principal" line="705"/>
                </method>
            </class>
            <class name="CertificateRequest" line="709">
                <extends class="HandshakeMessage"/>
                <declaration name="cct_rsa_sign" type="int" line="710"/>
                <declaration name="cct_dss_sign" type="int" line="711"/>
                <declaration name="cct_rsa_fixed_dh" type="int" line="712"/>
                <declaration name="cct_dss_fixed_dh" type="int" line="713"/>
                <declaration name="cct_rsa_ephemeral_dh" type="int" line="714"/>
                <declaration name="cct_dss_ephemeral_dh" type="int" line="715"/>
                <declaration name="cct_ecdsa_sign" type="int" line="716"/>
                <declaration name="cct_rsa_fixed_ecdh" type="int" line="717"/>
                <declaration name="cct_ecdsa_fixed_ecdh" type="int" line="718"/>
                <declaration name="TYPES_NO_ECC" type="byte[]" line="719"/>
                <declaration name="TYPES_ECC" type="byte[]" line="720"/>
                <declaration name="types" type="byte" line="721"/>
                <declaration name="authorities" type="DistinguishedName" line="722"/>
                <declaration name="protocolVersion" type="ProtocolVersion" line="723"/>
                <declaration name="algorithms" type="Collection&amp;lt;SignatureAndHashAlgorithm&amp;gt;" line="724"/>
                <declaration name="algorithmsLen" type="int" line="725"/>
                <method name="CertificateRequest" type="constructor" line="726">
                    <params>
                        <param name="ca" type="X509Certificate"/>
                        <param name="keyExchange" type="KeyExchange"/>
                        <param name="signAlgs" type="Collection&lt;SignatureAndHashAlgorithm&gt;"/>
                        <param name="protocolVersion" type="ProtocolVersion"/>
                    </params>
                    <scope line="729">
                        <declaration name="x500Principal" type="X500Principal" line="730"/>
                    </scope>
                    <scope line="734">
                        <scope line="735"/>
                    </scope>
                    <scope line="741"/>
                </method>
                <method name="CertificateRequest" type="constructor" line="746">
                    <params>
                        <param name="input" type="HandshakeInStream"/>
                        <param name="protocolVersion" type="ProtocolVersion"/>
                    </params>
                    <scope line="749">
                        <scope line="751"/>
                        <declaration name="remains" type="int" line="755"/>
                        <declaration name="sequence" type="int" line="756"/>
                        <scope line="757">
                            <declaration name="hash" type="int" line="758"/>
                            <declaration name="signature" type="int" line="759"/>
                            <declaration name="algorithm" type="SignatureAndHashAlgorithm" line="760"/>
                        </scope>
                        <scope line="764"/>
                    </scope>
                    <scope line="768"/>
                    <declaration name="len" type="int" line="772"/>
                    <declaration name="v" type="ArrayList&amp;lt;DistinguishedName&amp;gt;" line="773"/>
                    <scope line="774">
                        <declaration name="dn" type="DistinguishedName" line="775"/>
                    </scope>
                    <scope line="779"/>
                </method>
                <method name="getAuthorities" type="X500Principal[]" line="784">
                    <declaration name="ret" type="X500Principal[]" line="785"/>
                    <scope line="786"/>
                </method>
                <method name="getSignAlgorithms" type="Collection&lt;SignatureAndHashAlgorithm&gt;" line="791"/>
                <method name="messageType" type="int" line="794"/>
                <method name="messageLength" type="int" line="797">
                    <declaration name="len" type="int" line="798"/>
                    <scope line="799"/>
                    <scope line="802"/>
                </method>
                <method name="send" type="void" line="807">
                    <params>
                        <param name="output" type="HandshakeOutStream"/>
                    </params>
                    <scope line="809">
                        <scope line="811"/>
                    </scope>
                    <declaration name="len" type="int" line="816"/>
                    <scope line="817"/>
                    <scope line="821"/>
                </method>
                <method name="print" type="void" line="825">
                    <params>
                        <param name="s" type="PrintStream"/>
                    </params>
                    <scope line="827">
                        <scope line="829">
                            <scope line="862"/>
                        </scope>
                        <scope line="867">
                            <declaration name="buffer" type="StringBuffer" line="868"/>
                            <declaration name="opened" type="boolean" line="869"/>
                            <scope line="870">
                                <scope line="871"/>
                                <scope line="874"/>
                            </scope>
                        </scope>
                        <scope line="882"/>
                        <scope line="885">
                            <scope line="886"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="ServerHelloDone" line="893">
                <extends class="HandshakeMessage"/>
                <method name="messageType" type="int" line="894"/>
                <method name="ServerHelloDone" type="constructor" line="897"/>
                <method name="ServerHelloDone" type="constructor" line="899">
                    <params>
                        <param name="input" type="HandshakeInStream"/>
                    </params>
                </method>
                <method name="messageLength" type="int" line="901"/>
                <method name="send" type="void" line="904">
                    <params>
                        <param name="s" type="HandshakeOutStream"/>
                    </params>
                </method>
                <method name="print" type="void" line="906">
                    <params>
                        <param name="s" type="PrintStream"/>
                    </params>
                </method>
            </class>
            <class name="CertificateVerify" line="910">
                <extends class="HandshakeMessage"/>
                <declaration name="signature" type="byte[]" line="911"/>
                <declaration name="protocolVersion" type="ProtocolVersion" line="912"/>
                <declaration name="preferableSignatureAlgorithm" type="SignatureAndHashAlgorithm" line="913"/>
                <method name="CertificateVerify" type="constructor" line="914">
                    <params>
                        <param name="protocolVersion" type="ProtocolVersion"/>
                        <param name="handshakeHash" type="HandshakeHash"/>
                        <param name="privateKey" type="PrivateKey"/>
                        <param name="masterSecret" type="SecretKey"/>
                        <param name="sr" type="SecureRandom"/>
                        <param name="signAlgorithm" type="SignatureAndHashAlgorithm"/>
                    </params>
                    <declaration name="algorithm" type="String" line="916"/>
                    <declaration name="sig" type="Signature" line="917"/>
                    <scope line="918"/>
                    <scope line="922"/>
                </method>
                <method name="CertificateVerify" type="constructor" line="929">
                    <params>
                        <param name="input" type="HandshakeInStream"/>
                        <param name="localSupportedSignAlgs" type="Collection&lt;SignatureAndHashAlgorithm&gt;"/>
                        <param name="protocolVersion" type="ProtocolVersion"/>
                    </params>
                    <scope line="931">
                        <declaration name="hashAlg" type="int" line="932"/>
                        <declaration name="signAlg" type="int" line="933"/>
                        <scope line="935"/>
                    </scope>
                </method>
                <method name="getPreferableSignatureAlgorithm" type="SignatureAndHashAlgorithm" line="941"/>
                <method name="verify" type="boolean" line="944">
                    <params>
                        <param name="protocolVersion" type="ProtocolVersion"/>
                        <param name="handshakeHash" type="HandshakeHash"/>
                        <param name="publicKey" type="PublicKey"/>
                        <param name="masterSecret" type="SecretKey"/>
                    </params>
                    <declaration name="algorithm" type="String" line="945"/>
                    <declaration name="sig" type="Signature" line="946"/>
                    <scope line="947"/>
                    <scope line="950"/>
                </method>
                <method name="getSignature" type="Signature" line="957">
                    <params>
                        <param name="protocolVersion" type="ProtocolVersion"/>
                        <param name="algorithm" type="String"/>
                    </params>
                    <scope line="958"/>
                    <scope line="961"/>
                    <scope line="964"/>
                    <scope line="967"/>
                </method>
                <method name="updateSignature" type="void" line="971">
                    <params>
                        <param name="sig" type="Signature"/>
                        <param name="protocolVersion" type="ProtocolVersion"/>
                        <param name="handshakeHash" type="HandshakeHash"/>
                        <param name="algorithm" type="String"/>
                        <param name="masterKey" type="SecretKey"/>
                    </params>
                    <scope line="972">
                        <scope line="973">
                            <declaration name="md5Clone" type="MessageDigest" line="974"/>
                            <declaration name="shaClone" type="MessageDigest" line="975"/>
                            <scope line="976"/>
                        </scope>
                        <scope line="982"/>
                    </scope>
                    <scope line="986">
                        <scope line="987">
                            <declaration name="shaClone" type="MessageDigest" line="988"/>
                            <scope line="989"/>
                        </scope>
                        <scope line="994"/>
                    </scope>
                </method>
                <method name="updateDigest" type="void" line="999">
                    <params>
                        <param name="md" type="MessageDigest"/>
                        <param name="pad1" type="byte[]"/>
                        <param name="pad2" type="byte[]"/>
                        <param name="masterSecret" type="SecretKey"/>
                    </params>
                    <declaration name="keyBytes" type="byte[]" line="1000"/>
                    <scope line="1001"/>
                    <scope line="1004"/>
                    <declaration name="temp" type="byte[]" line="1008"/>
                    <scope line="1009"/>
                    <scope line="1012"/>
                </method>
                <declaration name="delegate" type="Class" line="1018"/>
                <declaration name="spiField" type="Field" line="1019"/>
                <scope line="1020">
                    <scope line="1021"/>
                    <scope line="1025"/>
                </scope>
                <method name="makeAccessible" type="void" line="1030">
                    <params>
                        <param name="o" type="AccessibleObject"/>
                    </params>
                    <anonymous_class line="1031">
                        <method name="run" type="Object" line="1032"/>
                    </anonymous_class>
                </method>
                <declaration name="NULL_OBJECT" type="Object" line="1039"/>
                <declaration name="methodCache" type="Map&amp;lt;Class,Object&amp;gt;" line="1040"/>
                <method name="digestKey" type="void" line="1041">
                    <params>
                        <param name="md" type="MessageDigest"/>
                        <param name="key" type="SecretKey"/>
                    </params>
                    <scope line="1042">
                        <scope line="1043"/>
                        <declaration name="spi" type="MessageDigestSpi" line="1046"/>
                        <declaration name="clazz" type="Class&amp;lt;?&amp;gt;" line="1047"/>
                        <declaration name="r" type="Object" line="1048"/>
                        <scope line="1049">
                            <scope line="1050"/>
                            <scope line="1054"/>
                        </scope>
                        <scope line="1059"/>
                        <declaration name="update" type="Method" line="1062"/>
                    </scope>
                    <scope line="1065"/>
                </method>
                <method name="messageType" type="int" line="1069"/>
                <method name="messageLength" type="int" line="1072">
                    <declaration name="temp" type="int" line="1073"/>
                    <scope line="1074"/>
                </method>
                <method name="send" type="void" line="1079">
                    <params>
                        <param name="s" type="HandshakeOutStream"/>
                    </params>
                    <scope line="1080"/>
                </method>
                <method name="print" type="void" line="1086">
                    <params>
                        <param name="s" type="PrintStream"/>
                    </params>
                    <scope line="1088">
                        <scope line="1089"/>
                    </scope>
                </method>
            </class>
            <class name="Finished" line="1095">
                <extends class="HandshakeMessage"/>
                <declaration name="CLIENT" type="int" line="1096"/>
                <declaration name="SERVER" type="int" line="1097"/>
                <declaration name="SSL_CLIENT" type="byte[]" line="1098"/>
                <declaration name="SSL_SERVER" type="byte[]" line="1099"/>
                <declaration name="verifyData" type="byte[]" line="1100"/>
                <declaration name="protocolVersion" type="ProtocolVersion" line="1101"/>
                <declaration name="cipherSuite" type="CipherSuite" line="1102"/>
                <method name="Finished" type="constructor" line="1103">
                    <params>
                        <param name="protocolVersion" type="ProtocolVersion"/>
                        <param name="handshakeHash" type="HandshakeHash"/>
                        <param name="sender" type="int"/>
                        <param name="master" type="SecretKey"/>
                        <param name="cipherSuite" type="CipherSuite"/>
                    </params>
                </method>
                <method name="Finished" type="constructor" line="1108">
                    <params>
                        <param name="protocolVersion" type="ProtocolVersion"/>
                        <param name="input" type="HandshakeInStream"/>
                        <param name="cipherSuite" type="CipherSuite"/>
                    </params>
                    <declaration name="msgLen" type="int" line="1111"/>
                </method>
                <method name="verify" type="boolean" line="1115">
                    <params>
                        <param name="handshakeHash" type="HandshakeHash"/>
                        <param name="sender" type="int"/>
                        <param name="master" type="SecretKey"/>
                    </params>
                    <declaration name="myFinished" type="byte[]" line="1116"/>
                </method>
                <method name="getFinished" type="byte[]" line="1119">
                    <params>
                        <param name="handshakeHash" type="HandshakeHash"/>
                        <param name="sender" type="int"/>
                        <param name="masterKey" type="SecretKey"/>
                    </params>
                    <declaration name="sslLabel" type="byte[]" line="1120"/>
                    <declaration name="tlsLabel" type="String" line="1121"/>
                    <scope line="1122"/>
                    <scope line="1126"/>
                    <scope line="1130"/>
                    <scope line="1133">
                        <scope line="1134">
                            <declaration name="seed" type="byte[]" line="1135"/>
                            <declaration name="prfAlg" type="String" line="1136"/>
                            <declaration name="prf" type="PRF" line="1137"/>
                            <scope line="1138"/>
                            <scope line="1143">
                                <declaration name="md5Clone" type="MessageDigest" line="1144"/>
                                <declaration name="shaClone" type="MessageDigest" line="1145"/>
                            </scope>
                            <declaration name="prfHashAlg" type="String" line="1152"/>
                            <declaration name="prfHashLength" type="int" line="1153"/>
                            <declaration name="prfBlockSize" type="int" line="1154"/>
                            <declaration name="spec" type="TlsPrfParameterSpec" line="1155"/>
                            <declaration name="kg" type="KeyGenerator" line="1156"/>
                            <declaration name="prfKey" type="SecretKey" line="1158"/>
                            <scope line="1159"/>
                            <declaration name="finished" type="byte[]" line="1162"/>
                        </scope>
                        <scope line="1165"/>
                    </scope>
                    <scope line="1169">
                        <declaration name="md5Clone" type="MessageDigest" line="1170"/>
                        <declaration name="shaClone" type="MessageDigest" line="1171"/>
                        <declaration name="finished" type="byte[]" line="1174"/>
                        <scope line="1175"/>
                        <scope line="1179"/>
                    </scope>
                </method>
                <method name="updateDigest" type="void" line="1185">
                    <params>
                        <param name="md" type="MessageDigest"/>
                        <param name="sender" type="byte[]"/>
                        <param name="pad1" type="byte[]"/>
                        <param name="pad2" type="byte[]"/>
                        <param name="masterSecret" type="SecretKey"/>
                    </params>
                </method>
                <method name="getVerifyData" type="byte[]" line="1189"/>
                <method name="messageType" type="int" line="1192"/>
                <method name="messageLength" type="int" line="1195"/>
                <method name="send" type="void" line="1198">
                    <params>
                        <param name="out" type="HandshakeOutStream"/>
                    </params>
                </method>
                <method name="print" type="void" line="1201">
                    <params>
                        <param name="s" type="PrintStream"/>
                    </params>
                    <scope line="1203"/>
                </method>
            </class>
        </class>
    </source>