<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.ssl">
        <import package="java.io.OutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.security.MessageDigest"/>
        <class name="HandshakeOutStream" line="5">
            <extends class="OutputStream"/>
            <javadoc line="5">
                Output stream for handshake data.  This is used only internally
                  to the SSL classes.
                  MT note:  one thread at a time is presumed be writing handshake
                  messages, but (after initial connection setup) it&apos;s possible to
                  have other threads reading/writing application data.  It&apos;s the
                  SSLSocketImpl class that synchronizes record writes.                
                <author>
                    David Brownell                    
                </author>
            </javadoc>
            <declaration name="socket" type="SSLSocketImpl" line="15"/>
            <declaration name="engine" type="SSLEngineImpl" line="16"/>
            <declaration name="r" type="OutputRecord" line="17"/>
            <method name="HandshakeOutStream" type="constructor" line="18">
                <params>
                    <param name="protocolVersion" type="ProtocolVersion"/>
                    <param name="helloVersion" type="ProtocolVersion"/>
                    <param name="handshakeHash" type="HandshakeHash"/>
                    <param name="socket" type="SSLSocketImpl"/>
                </params>
            </method>
            <method name="HandshakeOutStream" type="constructor" line="23">
                <params>
                    <param name="protocolVersion" type="ProtocolVersion"/>
                    <param name="helloVersion" type="ProtocolVersion"/>
                    <param name="handshakeHash" type="HandshakeHash"/>
                    <param name="engine" type="SSLEngineImpl"/>
                </params>
            </method>
            <method name="init" type="void" line="28">
                <params>
                    <param name="protocolVersion" type="ProtocolVersion"/>
                    <param name="helloVersion" type="ProtocolVersion"/>
                    <param name="handshakeHash" type="HandshakeHash"/>
                </params>
            </method>
            <method name="doHashes" type="void" line="33"/>
            <method name="write" type="void" line="36">
                <params>
                    <param name="buf" type="byte"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="37">
                    <declaration name="howmuch" type="int" line="38"/>
                    <scope line="39"/>
                    <scope line="42"/>
                </scope>
            </method>
            <method name="write" type="void" line="49">
                <params>
                    <param name="i" type="int"/>
                </params>
                <scope line="50"/>
            </method>
            <method name="flush" type="void" line="55">
                <scope line="56">
                    <scope line="57"/>
                    <scope line="60"/>
                </scope>
                <scope line="65"/>
            </method>
            <method name="setFinishedMsg" type="void" line="69"/>
            <method name="putInt8" type="void" line="73">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="putInt16" type="void" line="76">
                <params>
                    <param name="i" type="int"/>
                </params>
                <scope line="77"/>
            </method>
            <method name="putInt24" type="void" line="83">
                <params>
                    <param name="i" type="int"/>
                </params>
                <scope line="84"/>
            </method>
            <method name="putInt32" type="void" line="91">
                <params>
                    <param name="i" type="int"/>
                </params>
                <scope line="92"/>
            </method>
            <method name="putBytes8" type="void" line="100">
                <params>
                    <param name="b" type="byte"/>
                </params>
                <scope line="101"/>
            </method>
            <method name="putBytes16" type="void" line="108">
                <params>
                    <param name="b" type="byte"/>
                </params>
                <scope line="109"/>
            </method>
            <method name="putBytes24" type="void" line="116">
                <params>
                    <param name="b" type="byte"/>
                </params>
                <scope line="117"/>
            </method>
        </class>
    </source>