<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.ssl">
        <import package="java.io.IOException"/>
        <import package="java.io.PrintStream"/>
        <import package="java.math.BigInteger"/>
        <class name="DHClientKeyExchange" line="40">
            <extends class="HandshakeMessage"/>
            <comment line="47">
                This value may be empty if it was included in the
                 client&apos;s certificate ...                
            </comment>
            <comment line="51">
                1 to 2^16 -1 bytes                
            </comment>
            <comment line="57">
                Either pass the client&apos;s public key explicitly (because it&apos;s
                 using DHE or DH_anon), or implicitly (the public key was in the
                 certificate).                
            </comment>
            <comment line="70">
                Get the client&apos;s public key either explicitly or implicitly.
                 (It&apos;s ugly to have an empty record be sent in the latter case,
                 but that&apos;s what the protocol spec requires.)                
            </comment>
            <method name="messageType" type="int" line="42"/>
            <declaration name="dh_Yc" type="byte" line="50"/>
            <method name="getClientPublicKey" type="BigInteger" line="52"/>
            <method name="DHClientKeyExchange" type="constructor" line="61">
                <params>
                    <param name="publicKey" type="BigInteger"/>
                </params>
            </method>
            <method name="DHClientKeyExchange" type="constructor" line="65"/>
            <method name="DHClientKeyExchange" type="constructor" line="74">
                <params>
                    <param name="input" type="HandshakeInStream"/>
                </params>
            </method>
            <method name="messageLength" type="int" line="78">
                <scope line="79"/>
                <scope line="81"/>
            </method>
            <method name="send" type="void" line="86">
                <params>
                    <param name="s" type="HandshakeOutStream"/>
                </params>
            </method>
            <method name="print" type="void" line="90">
                <params>
                    <param name="s" type="PrintStream"/>
                </params>
                <scope line="93"/>
            </method>
        </class>
    </source>