<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.ssl">
        <import package="java.io.IOException"/>
        <import package="java.net.InetAddress"/>
        <import package="java.net.ServerSocket"/>
        <import package="javax.net.ssl.SSLServerSocketFactory"/>
        <class name="SSLServerSocketFactoryImpl" line="6">
            <extends class="SSLServerSocketFactory"/>
            <javadoc line="6">
                This class creates SSL server sockets.                
                <author>
                    David Brownell                    
                </author>
            </javadoc>
            <declaration name="DEFAULT_BACKLOG" type="int" line="11"/>
            <declaration name="context" type="SSLContextImpl" line="12"/>
            <javadoc line="13">
                Constructor used to instantiate the default factory. This method is
                  only called if the old &quot;ssl.ServerSocketFactory.provider&quot; property in the
                  java.security file is set.                
            </javadoc>
            <method name="SSLServerSocketFactoryImpl" type="constructor" line="18"/>
            <javadoc line="21">
                Called from SSLContextImpl&apos;s getSSLServerSocketFactory().                
            </javadoc>
            <method name="SSLServerSocketFactoryImpl" type="constructor" line="24">
                <params>
                    <param name="context" type="SSLContextImpl"/>
                </params>
            </method>
            <javadoc line="27">
                Returns an unbound server socket.                
                <return>
                    the unbound socket                    
                </return>
                <throws>
                    IOException if the socket cannot be created                    
                </throws>
                <see>
                    java.net.Socket#bind(java.net.SocketAddress)                    
                </see>
            </javadoc>
            <method name="createServerSocket" type="ServerSocket" line="33"/>
            <method name="createServerSocket" type="ServerSocket" line="36">
                <params>
                    <param name="port" type="int"/>
                </params>
            </method>
            <method name="createServerSocket" type="ServerSocket" line="39">
                <params>
                    <param name="port" type="int"/>
                    <param name="backlog" type="int"/>
                </params>
            </method>
            <method name="createServerSocket" type="ServerSocket" line="42">
                <params>
                    <param name="port" type="int"/>
                    <param name="backlog" type="int"/>
                    <param name="ifAddress" type="InetAddress"/>
                </params>
            </method>
            <javadoc line="45">
                Returns the subset of the supported cipher suites which are
                  enabled by default.  These cipher suites all provide a minimum
                  quality of service whereby the server authenticates itself
                  (preventing person-in-the-middle attacks) and where traffic
                  is encrypted to provide confidentiality.                
            </javadoc>
            <method name="getDefaultCipherSuites" type="String[]" line="52"/>
            <javadoc line="55">
                Returns the names of the cipher suites which could be enabled for use
                  on an SSL connection.  Normally, only a subset of these will actually
                  be enabled by default, since this list may include cipher suites which
                  do not support the mutual authentication of servers and clients, or
                  which do not protect data confidentiality.  Servers may also need
                  certain kinds of certificates to use certain cipher suites.                
                <return>
                    an array of cipher suite names                    
                </return>
            </javadoc>
            <method name="getSupportedCipherSuites" type="String[]" line="64"/>
        </class>
    </source>