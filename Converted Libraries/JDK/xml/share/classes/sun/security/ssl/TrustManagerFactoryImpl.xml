<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.ssl">
        <import package="java.util"/>
        <import package="java.io"/>
        <import package="java.math"/>
        <import package="java.security"/>
        <import package="java.security.cert"/>
        <import package="javax.net.ssl"/>
        <import package="java.security.spec.AlgorithmParameterSpec"/>
        <import package="sun.security.validator.Validator"/>
        <class name="TrustManagerFactoryImpl" line="38">
            <extends class="TrustManagerFactorySpi"/>
            <comment line="106">
                Try to get an InputStream based on the file we pass in.                
            </comment>
            <declaration name="debug" type="Debug" line="40"/>
            <declaration name="trustManager" type="X509TrustManager" line="41"/>
            <declaration name="isInitialized" type="boolean" line="42"/>
            <method name="TrustManagerFactoryImpl" type="constructor" line="44">
                <comment line="45">
                    empty                    
                </comment>
            </method>
            <method name="engineInit" type="void" line="48">
                <params>
                    <param name="ks" type="KeyStore"/>
                </params>
                <comment line="53">
                    eat security exceptions but report other throwables                    
                </comment>
                <scope line="49">
                    <scope line="50"/>
                    <scope line="52">
                        <scope line="54"/>
                    </scope>
                    <scope line="58">
                        <scope line="59"/>
                    </scope>
                    <scope line="64">
                        <scope line="65"/>
                    </scope>
                    <scope line="70">
                        <scope line="71"/>
                    </scope>
                </scope>
            </method>
            <method name="getInstance" type="X509TrustManager" line="83"/>
            <method name="getInstance" type="X509TrustManager" line="85"/>
            <method name="engineInit" type="void" line="89">
                <params>
                    <param name="spec" type="ManagerFactoryParameters"/>
                </params>
            </method>
            <javadoc line="94">
                Returns one trust manager for each type of trust material.                
            </javadoc>
            <method name="engineGetTrustManagers" type="TrustManager[]" line="97">
                <scope line="98"/>
            </method>
            <method name="getFileInputStream" type="FileInputStream" line="109">
                <params>
                    <param name="file" type="File"/>
                </params>
                <comment line="120">
                    couldn&apos;t find it, oh well.                    
                </comment>
                <anonymous_class line="111">
                    <method name="run" type="FileInputStream" line="112">
                        <comment line="120">
                            couldn&apos;t find it, oh well.                            
                        </comment>
                        <scope line="113">
                            <scope line="114"/>
                            <scope line="116"/>
                        </scope>
                        <scope line="119"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="127">
                Returns the keystore with the configured CA certificates.                
            </javadoc>
            <method name="getCacertsKeyStore" type="KeyStore" line="131">
                <params>
                    <param name="dbgname" type="String"/>
                </params>
                <comment line="158">
                    Try:
                          javax.net.ssl.trustStore  (if this variable exists, stop)
                          jssecacerts
                          cacerts
                    
                     If none exists, we use an empty keystore.                    
                </comment>
                <comment line="202">
                    Try to initialize trust store.                    
                </comment>
                <comment line="220">
                    if trustStore is NONE, fis will be null                    
                </comment>
                <comment line="223">
                    Zero out the temporary password storage                    
                </comment>
                <declaration name="storeFileName" type="String" line="132"/>
                <declaration name="storeFile" type="File" line="133"/>
                <declaration name="fis" type="FileInputStream" line="134"/>
                <declaration name="defaultTrustStoreType" type="String" line="135"/>
                <declaration name="defaultTrustStoreProvider" type="String" line="136"/>
                <declaration name="props" type="HashMap&lt;String,String&gt;" line="137"/>
                <declaration name="sep" type="String" line="138"/>
                <declaration name="ks" type="KeyStore" line="139"/>
                <anonymous_class line="141">
                    <method name="run" type="Void" line="142"/>
                </anonymous_class>
                <scope line="168">
                    <scope line="169"/>
                    <scope line="172">
                        <declaration name="javaHome" type="String" line="173"/>
                        <scope line="177"/>
                    </scope>
                    <scope line="185"/>
                    <scope line="187"/>
                </scope>
                <scope line="194"/>
                <scope line="205">
                    <scope line="206"/>
                    <scope line="209"/>
                    <scope line="211"/>
                    <declaration name="passwd" type="char[]" line="215"/>
                    <declaration name="defaultTrustStorePassword" type="String" line="216"/>
                    <scope line="224">
                        <scope line="225"/>
                    </scope>
                </scope>
                <scope line="231"/>
            </method>
            <class name="SimpleFactory" line="238">
                <extends class="TrustManagerFactoryImpl"/>
                <method name="getInstance" type="X509TrustManager" line="239">
                    <params>
                        <param name="ks" type="KeyStore"/>
                    </params>
                </method>
                <method name="getInstance" type="X509TrustManager" line="243">
                    <params>
                        <param name="spec" type="ManagerFactoryParameters"/>
                    </params>
                </method>
            </class>
            <class name="PKIXFactory" line="250">
                <extends class="TrustManagerFactoryImpl"/>
                <method name="getInstance" type="X509TrustManager" line="251">
                    <params>
                        <param name="ks" type="KeyStore"/>
                    </params>
                </method>
                <method name="getInstance" type="X509TrustManager" line="255">
                    <params>
                        <param name="spec" type="ManagerFactoryParameters"/>
                    </params>
                    <scope line="256"/>
                    <declaration name="params" type="CertPathParameters" line="260"/>
                    <scope line="262"/>
                    <declaration name="pkixParams" type="PKIXBuilderParameters" line="266"/>
                </method>
            </class>
        </class>
    </source>