<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.ssl">
        <import package="java.lang.ref"/>
        <import package="java.util"/>
        <import package="java.util.Locale.ENGLISH"/>
        <import package="java.util.concurrent.atomic.AtomicLong"/>
        <import package="java.net.Socket"/>
        <import package="java.security"/>
        <import package="java.security.KeyStore"/>
        <import package="java.security.cert"/>
        <import package="java.security.cert.Certificate"/>
        <import package="javax.net.ssl"/>
        <import package="sun.security.provider.certpath.AlgorithmChecker"/>
        <class name="X509KeyManagerImpl" line="13">
            <extends class="X509ExtendedKeyManager"/>
            <implements interface="X509KeyManager"/>
            <javadoc line="13">
                The new X509 key manager implementation. The main differences to the
                  old SunX509 key manager are:
                  . it is based around the KeyStore.Builder API. This allows it to use
                  other forms of KeyStore protection or password input (e.g. a
                  CallbackHandler) or to have keys within one KeyStore protected by
                  different keys.
                  . it can use multiple KeyStores at the same time.
                  . it is explicitly designed to accomodate KeyStores that change over
                  the lifetime of the process.
                  . it makes an effort to choose the key that matches best, i.e. one that
                  is not expired and has the appropriate certificate extensions.
                  Note that this code is not explicitly performance optimzied yet.                
                <author>
                    Andreas Sterbenz                    
                </author>
            </javadoc>
            <declaration name="debug" type="Debug" line="29"/>
            <declaration name="useDebug" type="boolean" line="30"/>
            <declaration name="verificationDate" type="Date" line="31"/>
            <declaration name="builders" type="List&lt;Builder&gt;" line="32"/>
            <declaration name="uidCounter" type="AtomicLong" line="33"/>
            <declaration name="entryCacheMap" type="Map&lt;String,Reference&lt;PrivateKeyEntry&gt;&gt;" line="34"/>
            <method name="X509KeyManagerImpl" type="constructor" line="35">
                <params>
                    <param name="builder" type="Builder"/>
                </params>
            </method>
            <method name="X509KeyManagerImpl" type="constructor" line="38">
                <params>
                    <param name="builders" type="List<Builder>"/>
                </params>
            </method>
            <class name="SizedMap" line="43">
                <type_params>
                    <type_param name="K"/>
                    <type_param name="V"/>
                </type_params>
                <extends class="LinkedHashMap">
                    <type_params>
                        <type_param name="K"/>
                        <type_param name="V"/>
                    </type_params>
                </extends>
                <method name="removeEldestEntry" type="boolean" line="44">
                    <params>
                        <param name="eldest" type="Map.Entry<K,V>"/>
                    </params>
                </method>
            </class>
            <method name="getCertificateChain" type="X509Certificate[]" line="48">
                <params>
                    <param name="alias" type="String"/>
                </params>
                <declaration name="entry" type="PrivateKeyEntry" line="49"/>
            </method>
            <method name="getPrivateKey" type="PrivateKey" line="52">
                <params>
                    <param name="alias" type="String"/>
                </params>
                <declaration name="entry" type="PrivateKeyEntry" line="53"/>
            </method>
            <method name="chooseClientAlias" type="String" line="56">
                <params>
                    <param name="keyTypes" type="String[]"/>
                    <param name="issuers" type="Principal[]"/>
                    <param name="socket" type="Socket"/>
                </params>
            </method>
            <method name="chooseEngineClientAlias" type="String" line="59">
                <params>
                    <param name="keyTypes" type="String[]"/>
                    <param name="issuers" type="Principal[]"/>
                    <param name="engine" type="SSLEngine"/>
                </params>
            </method>
            <method name="chooseServerAlias" type="String" line="62">
                <params>
                    <param name="keyType" type="String"/>
                    <param name="issuers" type="Principal[]"/>
                    <param name="socket" type="Socket"/>
                </params>
            </method>
            <method name="chooseEngineServerAlias" type="String" line="65">
                <params>
                    <param name="keyType" type="String"/>
                    <param name="issuers" type="Principal[]"/>
                    <param name="engine" type="SSLEngine"/>
                </params>
            </method>
            <method name="getClientAliases" type="String[]" line="68">
                <params>
                    <param name="keyType" type="String"/>
                    <param name="issuers" type="Principal[]"/>
                </params>
            </method>
            <method name="getServerAliases" type="String[]" line="71">
                <params>
                    <param name="keyType" type="String"/>
                    <param name="issuers" type="Principal[]"/>
                </params>
            </method>
            <method name="getAlgorithmConstraints" type="AlgorithmConstraints" line="74">
                <params>
                    <param name="socket" type="Socket"/>
                </params>
                <scope line="75">
                    <declaration name="sslSocket" type="SSLSocket" line="76"/>
                    <declaration name="session" type="SSLSession" line="77"/>
                    <scope line="78">
                        <declaration name="protocolVersion" type="ProtocolVersion" line="79"/>
                        <scope line="80">
                            <declaration name="peerSupportedSignAlgs" type="String[]" line="81"/>
                            <scope line="82">
                                <declaration name="extSession" type="ExtendedSSLSession" line="83"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="getAlgorithmConstraints" type="AlgorithmConstraints" line="93">
                <params>
                    <param name="engine" type="SSLEngine"/>
                </params>
                <scope line="94">
                    <declaration name="session" type="SSLSession" line="95"/>
                    <scope line="96">
                        <declaration name="protocolVersion" type="ProtocolVersion" line="97"/>
                        <scope line="98">
                            <declaration name="peerSupportedSignAlgs" type="String[]" line="99"/>
                            <scope line="100">
                                <declaration name="extSession" type="ExtendedSSLSession" line="101"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="makeAlias" type="String" line="110">
                <params>
                    <param name="entry" type="EntryStatus"/>
                </params>
            </method>
            <method name="getEntry" type="PrivateKeyEntry" line="113">
                <params>
                    <param name="alias" type="String"/>
                </params>
                <scope line="114"/>
                <declaration name="ref" type="Reference&lt;PrivateKeyEntry&gt;" line="117"/>
                <declaration name="entry" type="PrivateKeyEntry" line="118"/>
                <scope line="119"/>
                <declaration name="firstDot" type="int" line="122"/>
                <declaration name="secondDot" type="int" line="123"/>
                <scope line="124"/>
                <scope line="127">
                    <declaration name="builderIndex" type="int" line="128"/>
                    <declaration name="keyStoreAlias" type="String" line="129"/>
                    <declaration name="builder" type="Builder" line="130"/>
                    <declaration name="ks" type="KeyStore" line="131"/>
                    <declaration name="newEntry" type="Entry" line="132"/>
                    <scope line="133"/>
                </scope>
                <scope line="140"/>
            </method>
            <class name="KeyType" line="144">
                <declaration name="keyAlgorithm" type="String" line="145"/>
                <declaration name="sigKeyAlgorithm" type="String" line="146"/>
                <method name="KeyType" type="constructor" line="147">
                    <params>
                        <param name="algorithm" type="String"/>
                    </params>
                    <declaration name="k" type="int" line="148"/>
                    <scope line="149"/>
                    <scope line="153"/>
                </method>
                <method name="matches" type="boolean" line="158">
                    <params>
                        <param name="chain" type="Certificate[]"/>
                    </params>
                    <scope line="159"/>
                    <scope line="162"/>
                    <scope line="165"/>
                    <scope line="168">
                        <declaration name="issuer" type="X509Certificate" line="169"/>
                        <declaration name="sigAlgName" type="String" line="170"/>
                        <declaration name="pattern" type="String" line="171"/>
                    </scope>
                </method>
            </class>
            <method name="getKeyTypes" type="List<KeyType>" line="176">
                <params>
                    <param name="keyTypes" type="String"/>
                </params>
                <scope line="177"/>
                <declaration name="list" type="List&lt;KeyType&gt;" line="180"/>
                <scope line="181"/>
            </method>
            <method name="chooseAlias" type="String" line="186">
                <params>
                    <param name="keyTypeList" type="List<KeyType>"/>
                    <param name="issuers" type="Principal[]"/>
                    <param name="checkType" type="CheckType"/>
                    <param name="constraints" type="AlgorithmConstraints"/>
                </params>
                <scope line="187"/>
                <declaration name="issuerSet" type="Set&lt;Principal&gt;" line="190"/>
                <declaration name="allResults" type="List&lt;EntryStatus&gt;" line="191"/>
                <scope line="192">
                    <scope line="193">
                        <declaration name="results" type="List&lt;EntryStatus&gt;" line="194"/>
                        <scope line="195">
                            <declaration name="status" type="EntryStatus" line="196"/>
                            <scope line="197">
                                <scope line="198"/>
                            </scope>
                            <scope line="203"/>
                        </scope>
                    </scope>
                    <scope line="209"/>
                </scope>
                <scope line="212">
                    <scope line="213"/>
                </scope>
                <scope line="219"/>
            </method>
            <method name="getAliases" type="String[]" line="225">
                <params>
                    <param name="keyType" type="String"/>
                    <param name="issuers" type="Principal[]"/>
                    <param name="checkType" type="CheckType"/>
                    <param name="constraints" type="AlgorithmConstraints"/>
                </params>
                <scope line="226"/>
                <declaration name="issuerSet" type="Set&lt;Principal&gt;" line="229"/>
                <declaration name="keyTypeList" type="List&lt;KeyType&gt;" line="230"/>
                <declaration name="allResults" type="List&lt;EntryStatus&gt;" line="231"/>
                <scope line="232">
                    <scope line="233">
                        <declaration name="results" type="List&lt;EntryStatus&gt;" line="234"/>
                        <scope line="235">
                            <scope line="236"/>
                        </scope>
                    </scope>
                    <scope line="242"/>
                </scope>
                <scope line="245">
                    <scope line="246"/>
                </scope>
                <scope line="252"/>
            </method>
            <method name="toAliases" type="String[]" line="257">
                <params>
                    <param name="results" type="List<EntryStatus>"/>
                </params>
                <declaration name="s" type="String[]" line="258"/>
                <declaration name="i" type="int" line="259"/>
                <scope line="260"/>
            </method>
            <method name="getIssuerSet" type="Set<Principal>" line="265">
                <params>
                    <param name="issuers" type="Principal[]"/>
                </params>
                <scope line="266"/>
                <scope line="269"/>
            </method>
            <class name="EntryStatus" line="273">
                <implements interface="Comparable">
                    <type_params>
                        <type_param name="EntryStatus"/>
                    </type_params>
                </implements>
                <declaration name="builderIndex" type="int" line="274"/>
                <declaration name="keyIndex" type="int" line="275"/>
                <declaration name="alias" type="String" line="276"/>
                <declaration name="checkResult" type="CheckResult" line="277"/>
                <method name="EntryStatus" type="constructor" line="278">
                    <params>
                        <param name="builderIndex" type="int"/>
                        <param name="keyIndex" type="int"/>
                        <param name="alias" type="String"/>
                        <param name="chain" type="Certificate[]"/>
                        <param name="checkResult" type="CheckResult"/>
                    </params>
                </method>
                <method name="compareTo" type="int" line="284">
                    <params>
                        <param name="other" type="EntryStatus"/>
                    </params>
                    <declaration name="result" type="int" line="285"/>
                </method>
                <method name="toString" type="String" line="288">
                    <declaration name="s" type="String" line="289"/>
                    <scope line="290"/>
                    <scope line="293"/>
                </method>
            </class>
            <declaration name="CheckType" type="enum" line="298"/>
            <scope line="298"/>
            <method name="CheckType" type="constructor" line="299">
                <params>
                    <param name="validEku" type="Set<String>"/>
                </params>
            </method>
            <method name="getBit" type="boolean" line="302">
                <params>
                    <param name="keyUsage" type="boolean[]"/>
                    <param name="bit" type="int"/>
                </params>
            </method>
            <method name="check" type="CheckResult" line="305">
                <params>
                    <param name="cert" type="X509Certificate"/>
                    <param name="date" type="Date"/>
                </params>
                <scope line="306"/>
                <scope line="309">
                    <declaration name="certEku" type="List&lt;String&gt;" line="310"/>
                    <scope line="311"/>
                    <declaration name="ku" type="boolean[]" line="314"/>
                    <scope line="315">
                        <declaration name="algorithm" type="String" line="316"/>
                        <declaration name="kuSignature" type="boolean" line="317"/>
                        <scope line="318">
                            <scope line="319">
                                <scope line="320"/>
                            </scope>
                        </scope>
                        <scope line="325">
                            <scope line="326"/>
                        </scope>
                        <scope line="330">
                            <scope line="331"/>
                        </scope>
                        <scope line="335">
                            <scope line="336"/>
                            <scope line="339"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="345"/>
                <scope line="348"/>
                <scope line="352"/>
            </method>
            <declaration name="CheckResult" type="enum" line="357"/>
            <scope line="-1"/>
            <method name="getAliases" type="List<EntryStatus>" line="358">
                <params>
                    <param name="builderIndex" type="int"/>
                    <param name="keyTypes" type="List<KeyType>"/>
                    <param name="issuerSet" type="Set<Principal>"/>
                    <param name="findAll" type="boolean"/>
                    <param name="checkType" type="CheckType"/>
                    <param name="constraints" type="AlgorithmConstraints"/>
                </params>
                <declaration name="builder" type="Builder" line="359"/>
                <declaration name="ks" type="KeyStore" line="360"/>
                <declaration name="results" type="List&lt;EntryStatus&gt;" line="361"/>
                <declaration name="date" type="Date" line="362"/>
                <declaration name="preferred" type="boolean" line="363"/>
                <scope line="364">
                    <declaration name="alias" type="String" line="365"/>
                    <scope line="366"/>
                    <declaration name="chain" type="Certificate[]" line="369"/>
                    <scope line="370"/>
                    <declaration name="incompatible" type="boolean" line="373"/>
                    <scope line="374">
                        <scope line="375"/>
                    </scope>
                    <scope line="380"/>
                    <declaration name="keyIndex" type="int" line="383"/>
                    <declaration name="j" type="int" line="384"/>
                    <scope line="385">
                        <scope line="386"/>
                    </scope>
                    <scope line="392">
                        <scope line="393"/>
                    </scope>
                    <scope line="398">
                        <declaration name="found" type="boolean" line="399"/>
                        <scope line="400">
                            <declaration name="xcert" type="X509Certificate" line="401"/>
                            <scope line="402"/>
                        </scope>
                        <scope line="407">
                            <scope line="408"/>
                        </scope>
                    </scope>
                    <scope line="414">
                        <scope line="415"/>
                    </scope>
                    <scope line="420"/>
                    <declaration name="checkResult" type="CheckResult" line="423"/>
                    <declaration name="status" type="EntryStatus" line="424"/>
                    <scope line="425"/>
                    <scope line="428"/>
                    <scope line="431">
                        <scope line="432"/>
                    </scope>
                </scope>
            </method>
            <method name="conformsToAlgorithmConstraints" type="boolean" line="440">
                <params>
                    <param name="constraints" type="AlgorithmConstraints"/>
                    <param name="chain" type="Certificate[]"/>
                </params>
                <declaration name="checker" type="AlgorithmChecker" line="441"/>
                <scope line="442"/>
                <scope line="445"/>
                <scope line="448">
                    <declaration name="cert" type="Certificate" line="449"/>
                    <scope line="450"/>
                    <scope line="453"/>
                </scope>
            </method>
        </class>
    </source>