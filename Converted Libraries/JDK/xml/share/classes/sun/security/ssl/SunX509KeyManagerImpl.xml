<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.ssl">
        <import package="javax.net.ssl"/>
        <import package="java.security"/>
        <import package="java.security.cert"/>
        <import package="java.security.cert.Certificate"/>
        <import package="java.util"/>
        <import package="java.net.Socket"/>
        <import package="javax.security.auth.x500.X500Principal"/>
        <class name="SunX509KeyManagerImpl" line="9">
            <extends class="X509ExtendedKeyManager"/>
            <javadoc line="9">
                An implemention of X509KeyManager backed by a KeyStore.
                  The backing KeyStore is inspected when this object is constructed.
                  All key entries containing a PrivateKey and a non-empty chain of
                  X509Certificate are then copied into an internal store. This means
                  that subsequent modifications of the KeyStore have no effect on the
                  X509KeyManagerImpl object.
                  Note that this class assumes that all keys are protected by the same
                  password.
                  The JSSE handshake code currently calls into this class via
                  chooseClientAlias() and chooseServerAlias() to find the certificates to
                  use. As implemented here, both always return the first alias returned by
                  getClientAliases() and getServerAliases(). In turn, these methods are
                  implemented by calling getAliases(), which performs the actual lookup.
                  Note that this class currently implements no checking of the local
                  certificates. In particular, it is not guaranteed that:
                  . the certificates are within their validity period and not revoked
                  . the signatures verify
                  . they form a PKIX compliant chain.
                  . the certificate extensions allow the certificate to be used for
                  the desired purpose.
                  Chains that fail any of these criteria will probably be rejected by
                  the remote peer.                
            </javadoc>
            <declaration name="debug" type="Debug" line="34"/>
            <declaration name="STRING0" type="String[]" line="35"/>
            <declaration name="credentialsMap" type="Map&lt;String,X509Credentials&gt;" line="36"/>
            <declaration name="serverAliasCache" type="Map&lt;String,String[]&gt;" line="37"/>
            <class name="X509Credentials" line="38">
                <declaration name="privateKey" type="PrivateKey" line="39"/>
                <declaration name="certificates" type="X509Certificate[]" line="40"/>
                <declaration name="issuerX500Principals" type="Set&lt;X500Principal&gt;" line="41"/>
                <method name="X509Credentials" type="constructor" line="42">
                    <params>
                        <param name="privateKey" type="PrivateKey"/>
                        <param name="certificates" type="X509Certificate[]"/>
                    </params>
                </method>
                <method name="getIssuerX500Principals" type="Set<X500Principal>" line="46">
                    <scope line="47">
                        <scope line="49"/>
                    </scope>
                </method>
            </class>
            <method name="SunX509KeyManagerImpl" type="constructor" line="56">
                <params>
                    <param name="ks" type="KeyStore"/>
                    <param name="password" type="char[]"/>
                </params>
                <scope line="59"/>
                <scope line="62">
                    <declaration name="alias" type="String" line="63"/>
                    <scope line="64"/>
                    <declaration name="key" type="Key" line="67"/>
                    <scope line="68"/>
                    <declaration name="certs" type="Certificate[]" line="71"/>
                    <scope line="72"/>
                    <scope line="75">
                        <declaration name="tmp" type="Certificate[]" line="76"/>
                    </scope>
                    <declaration name="cred" type="X509Credentials" line="80"/>
                    <scope line="82">
                        <scope line="85"/>
                    </scope>
                </scope>
            </method>
            <method name="getCertificateChain" type="X509Certificate[]" line="92">
                <params>
                    <param name="alias" type="String"/>
                </params>
                <scope line="93"/>
                <declaration name="cred" type="X509Credentials" line="96"/>
                <scope line="97"/>
                <scope line="100"/>
            </method>
            <method name="getPrivateKey" type="PrivateKey" line="104">
                <params>
                    <param name="alias" type="String"/>
                </params>
                <scope line="105"/>
                <declaration name="cred" type="X509Credentials" line="108"/>
                <scope line="109"/>
                <scope line="112"/>
            </method>
            <method name="chooseClientAlias" type="String" line="116">
                <params>
                    <param name="keyTypes" type="String[]"/>
                    <param name="issuers" type="Principal[]"/>
                    <param name="socket" type="Socket"/>
                </params>
                <scope line="117"/>
                <scope line="120">
                    <declaration name="aliases" type="String[]" line="121"/>
                    <scope line="122"/>
                </scope>
            </method>
            <method name="chooseEngineClientAlias" type="String" line="128">
                <params>
                    <param name="keyType" type="String[]"/>
                    <param name="issuers" type="Principal[]"/>
                    <param name="engine" type="SSLEngine"/>
                </params>
            </method>
            <method name="chooseServerAlias" type="String" line="131">
                <params>
                    <param name="keyType" type="String"/>
                    <param name="issuers" type="Principal[]"/>
                    <param name="socket" type="Socket"/>
                </params>
                <scope line="132"/>
                <declaration name="aliases" type="String[]" line="135"/>
                <scope line="136">
                    <scope line="138">
                        <scope line="140"/>
                    </scope>
                </scope>
                <scope line="146"/>
                <scope line="149"/>
            </method>
            <method name="chooseEngineServerAlias" type="String" line="154">
                <params>
                    <param name="keyType" type="String"/>
                    <param name="issuers" type="Principal[]"/>
                    <param name="engine" type="SSLEngine"/>
                </params>
            </method>
            <method name="getClientAliases" type="String[]" line="157">
                <params>
                    <param name="keyType" type="String"/>
                    <param name="issuers" type="Principal[]"/>
                </params>
            </method>
            <method name="getServerAliases" type="String[]" line="160">
                <params>
                    <param name="keyType" type="String"/>
                    <param name="issuers" type="Principal[]"/>
                </params>
            </method>
            <method name="getAliases" type="String[]" line="163">
                <params>
                    <param name="keyType" type="String"/>
                    <param name="issuers" type="Principal[]"/>
                </params>
                <scope line="164"/>
                <scope line="167"/>
                <scope line="170"/>
                <declaration name="sigType" type="String" line="173"/>
                <scope line="174">
                    <declaration name="k" type="int" line="175"/>
                </scope>
                <scope line="179"/>
                <declaration name="x500Issuers" type="X500Principal[]" line="182"/>
                <declaration name="aliases" type="List&lt;String&gt;" line="183"/>
                <scope line="184">
                    <declaration name="alias" type="String" line="185"/>
                    <declaration name="credentials" type="X509Credentials" line="186"/>
                    <declaration name="certs" type="X509Certificate[]" line="187"/>
                    <scope line="188"/>
                    <scope line="191">
                        <scope line="192">
                            <scope line="193"/>
                        </scope>
                        <scope line="197">
                            <declaration name="sigAlgName" type="String" line="198"/>
                            <declaration name="pattern" type="String" line="199"/>
                            <scope line="200"/>
                        </scope>
                    </scope>
                    <scope line="205">
                        <scope line="207"/>
                    </scope>
                    <scope line="211">
                        <declaration name="certIssuers" type="Set&lt;X500Principal&gt;" line="212"/>
                        <scope line="213">
                            <scope line="214">
                                <scope line="216"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <declaration name="aliasStrings" type="String[]" line="224"/>
            </method>
            <method name="convertPrincipals" type="X500Principal[]" line="227">
                <params>
                    <param name="principals" type="Principal[]"/>
                </params>
                <declaration name="list" type="List&lt;X500Principal&gt;" line="228"/>
                <scope line="229">
                    <declaration name="p" type="Principal" line="230"/>
                    <scope line="231"/>
                    <scope line="234">
                        <scope line="235"/>
                        <scope line="238"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>