<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.ssl">
        <import package="java.security.AlgorithmConstraints"/>
        <import package="java.security.CryptoPrimitive"/>
        <import package="java.util.Set"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Map"/>
        <import package="java.util.EnumSet"/>
        <import package="java.util.TreeMap"/>
        <import package="java.util.Collection"/>
        <import package="java.util.Collections"/>
        <import package="java.util.ArrayList"/>
        <class name="SignatureAndHashAlgorithm" line="12">
            <javadoc line="12">
                Signature and hash algorithm.
                  [RFC5246] The client uses the &quot;signature_algorithms&quot; extension to
                  indicate to the server which signature/hash algorithm pairs may be
                  used in digital signatures.  The &quot;extension_data&quot; field of this
                  extension contains a &quot;supported_signature_algorithms&quot; value.
                  enum {
                  none(0), md5(1), sha1(2), sha224(3), sha256(4), sha384(5),
                  sha512(6), (255)
                  } HashAlgorithm;
                  enum { anonymous(0), rsa(1), dsa(2), ecdsa(3), (255) }
                  SignatureAlgorithm;
                  struct {
                  HashAlgorithm hash;
                  SignatureAlgorithm signature;
                  } SignatureAndHashAlgorithm;                
            </javadoc>
            <declaration name="SUPPORTED_ALG_PRIORITY_MAX_NUM" type="int" line="30"/>
            <declaration name="SIGNATURE_PRIMITIVE_SET" type="Set&amp;lt;CryptoPrimitive&amp;gt;" line="31"/>
            <declaration name="supportedMap" type="Map&amp;lt;Integer,SignatureAndHashAlgorithm&amp;gt;" line="32"/>
            <declaration name="priorityMap" type="Map&amp;lt;Integer,SignatureAndHashAlgorithm&amp;gt;" line="33"/>
            <declaration name="hash" type="HashAlgorithm" line="34"/>
            <declaration name="signature" type="SignatureAlgorithm" line="35"/>
            <declaration name="id" type="int" line="36"/>
            <declaration name="algorithm" type="String" line="37"/>
            <declaration name="priority" type="int" line="38"/>
            <method name="SignatureAndHashAlgorithm" type="constructor" line="39">
                <params>
                    <param name="hash" type="HashAlgorithm"/>
                    <param name="signature" type="SignatureAlgorithm"/>
                    <param name="algorithm" type="String"/>
                    <param name="priority" type="int"/>
                </params>
            </method>
            <method name="SignatureAndHashAlgorithm" type="constructor" line="46">
                <params>
                    <param name="algorithm" type="String"/>
                    <param name="id" type="int"/>
                    <param name="sequence" type="int"/>
                </params>
            </method>
            <method name="valueOf" type="SignatureAndHashAlgorithm" line="53">
                <params>
                    <param name="hash" type="int"/>
                    <param name="signature" type="int"/>
                    <param name="sequence" type="int"/>
                </params>
                <declaration name="id" type="int" line="56"/>
                <declaration name="signAlg" type="SignatureAndHashAlgorithm" line="57"/>
                <scope line="58"/>
            </method>
            <method name="getHashValue" type="int" line="63"/>
            <method name="getSignatureValue" type="int" line="66"/>
            <method name="getAlgorithmName" type="String" line="69"/>
            <method name="sizeInRecord" type="int" line="72"/>
            <method name="getSupportedAlgorithms" type="Collection&lt;SignatureAndHashAlgorithm&gt;" line="75">
                <params>
                    <param name="constraints" type="AlgorithmConstraints"/>
                </params>
                <declaration name="supported" type="Collection&amp;lt;SignatureAndHashAlgorithm&amp;gt;" line="76"/>
                <scope line="77">
                    <scope line="78">
                        <scope line="79"/>
                    </scope>
                </scope>
            </method>
            <method name="getSupportedAlgorithms" type="Collection&lt;SignatureAndHashAlgorithm&gt;" line="86">
                <params>
                    <param name="algorithms" type="Collection&lt;SignatureAndHashAlgorithm&gt;"/>
                </params>
                <declaration name="supported" type="Collection&amp;lt;SignatureAndHashAlgorithm&amp;gt;" line="87"/>
                <scope line="88">
                    <scope line="89"/>
                </scope>
            </method>
            <method name="getAlgorithmNames" type="String[]" line="95">
                <params>
                    <param name="algorithms" type="Collection&lt;SignatureAndHashAlgorithm&gt;"/>
                </params>
                <declaration name="algorithmNames" type="ArrayList&amp;lt;String&amp;gt;" line="96"/>
                <scope line="97">
                    <scope line="98"/>
                </scope>
                <declaration name="array" type="String[]" line="102"/>
            </method>
            <method name="getHashAlgorithmNames" type="Set&lt;String&gt;" line="105">
                <params>
                    <param name="algorithms" type="Collection&lt;SignatureAndHashAlgorithm&gt;"/>
                </params>
                <declaration name="algorithmNames" type="Set&amp;lt;String&amp;gt;" line="106"/>
                <scope line="107">
                    <scope line="108">
                        <scope line="109"/>
                    </scope>
                </scope>
            </method>
            <method name="getHashAlgorithmName" type="String" line="116">
                <params>
                    <param name="algorithm" type="SignatureAndHashAlgorithm"/>
                </params>
            </method>
            <method name="supports" type="void" line="119">
                <params>
                    <param name="hash" type="HashAlgorithm"/>
                    <param name="signature" type="SignatureAlgorithm"/>
                    <param name="algorithm" type="String"/>
                    <param name="priority" type="int"/>
                </params>
                <declaration name="pair" type="SignatureAndHashAlgorithm" line="120"/>
                <scope line="121"/>
                <scope line="124"/>
            </method>
            <method name="getPreferableAlgorithm" type="SignatureAndHashAlgorithm" line="128">
                <params>
                    <param name="algorithms" type="Collection&lt;SignatureAndHashAlgorithm&gt;"/>
                    <param name="expected" type="String"/>
                </params>
                <scope line="129">
                    <scope line="130">
                        <scope line="131"/>
                    </scope>
                </scope>
                <scope line="137">
                    <declaration name="signValue" type="int" line="138"/>
                    <scope line="139"/>
                </scope>
            </method>
            <declaration name="HashAlgorithm" type="enum" line="145"/>
            <scope line="145"/>
            <method name="HashAlgorithm" type="constructor" line="148">
                <params>
                    <param name="name" type="String"/>
                    <param name="standardName" type="String"/>
                    <param name="value" type="int"/>
                </params>
            </method>
            <method name="valueOf" type="HashAlgorithm" line="153">
                <params>
                    <param name="value" type="int"/>
                </params>
                <declaration name="algorithm" type="HashAlgorithm" line="154"/>
            </method>
            <declaration name="SignatureAlgorithm" type="enum" line="181"/>
            <method name="UNDEFINED" type="constructor" line="181"/>
            <method name="SignatureAlgorithm" type="constructor" line="183">
                <params>
                    <param name="name" type="String"/>
                    <param name="value" type="int"/>
                </params>
            </method>
            <method name="valueOf" type="SignatureAlgorithm" line="187">
                <params>
                    <param name="value" type="int"/>
                </params>
                <declaration name="algorithm" type="SignatureAlgorithm" line="188"/>
            </method>
        </class>
    </source>