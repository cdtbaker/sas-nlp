<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.ssl">
        <import package="java.security"/>
        <import package="java.security.interfaces.ECPublicKey"/>
        <import package="java.security.spec"/>
        <import package="javax.crypto.SecretKey"/>
        <import package="javax.crypto.KeyAgreement"/>
        <import package="javax.crypto.spec"/>
        <class name="ECDHCrypt" line="36">
            <comment line="46">
                our private key                
            </comment>
            <comment line="49">
                our public key                
            </comment>
            <comment line="52">
                Called by ServerHandshaker for static ECDH                
            </comment>
            <comment line="58">
                Called by ServerHandshaker for ephemeral ECDH                
            </comment>
            <comment line="72">
                Called by ClientHandshaker with params it received from the server                
            </comment>
            <comment line="92">
                called by ClientHandshaker with either the server&apos;s static or ephemeral public key                
            </comment>
            <comment line="104">
                called by ServerHandshaker                
            </comment>
            <javadoc line="36">
                Helper class for the ECDH key exchange. It generates the appropriate
                  ephemeral keys as necessary and performs the actual shared secret derivation.                
                <since>
                    1.6                    
                </since>
                <author>
                    Andreas Sterbenz                    
                </author>
            </javadoc>
            <declaration name="privateKey" type="PrivateKey" line="46"/>
            <declaration name="publicKey" type="ECPublicKey" line="49"/>
            <method name="ECDHCrypt" type="constructor" line="52">
                <params>
                    <param name="privateKey" type="PrivateKey"/>
                    <param name="publicKey" type="PublicKey"/>
                </params>
            </method>
            <method name="ECDHCrypt" type="constructor" line="58">
                <params>
                    <param name="curveName" type="String"/>
                    <param name="random" type="SecureRandom"/>
                </params>
                <scope line="59">
                    <declaration name="kpg" type="KeyPairGenerator" line="60"/>
                    <declaration name="params" type="ECGenParameterSpec" line="61"/>
                    <declaration name="kp" type="KeyPair" line="63"/>
                </scope>
                <scope line="66"/>
            </method>
            <method name="ECDHCrypt" type="constructor" line="72">
                <params>
                    <param name="params" type="ECParameterSpec"/>
                    <param name="random" type="SecureRandom"/>
                </params>
                <scope line="73">
                    <declaration name="kpg" type="KeyPairGenerator" line="74"/>
                    <declaration name="kp" type="KeyPair" line="76"/>
                </scope>
                <scope line="79"/>
            </method>
            <javadoc line="84">
                Gets the public key of this end of the key exchange.                
            </javadoc>
            <method name="getPublicKey" type="PublicKey" line="87"/>
            <method name="getAgreedSecret" type="SecretKey" line="92">
                <params>
                    <param name="peerPublicKey" type="PublicKey"/>
                </params>
                <scope line="93">
                    <declaration name="ka" type="KeyAgreement" line="94"/>
                </scope>
                <scope line="98"/>
            </method>
            <method name="getAgreedSecret" type="SecretKey" line="104">
                <params>
                    <param name="encodedPoint" type="byte[]"/>
                </params>
                <scope line="105">
                    <declaration name="params" type="ECParameterSpec" line="106"/>
                    <declaration name="point" type="ECPoint" line="107"/>
                    <declaration name="kf" type="KeyFactory" line="108"/>
                    <declaration name="spec" type="ECPublicKeySpec" line="109"/>
                    <declaration name="peerPublicKey" type="PublicKey" line="110"/>
                </scope>
                <scope line="112"/>
                <scope line="114"/>
            </method>
        </class>
    </source>