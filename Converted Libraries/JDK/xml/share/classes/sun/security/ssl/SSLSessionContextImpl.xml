<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.ssl">
        <import package="java.io"/>
        <import package="java.net"/>
        <import package="java.util.Date"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.Hashtable"/>
        <import package="java.util.NoSuchElementException"/>
        <import package="java.util.Vector"/>
        <import package="javax.net.ssl.SSLSession"/>
        <import package="javax.net.ssl.SSLSessionContext"/>
        <import package="javax.net.ssl.SSLSessionBindingListener"/>
        <import package="javax.net.ssl.SSLSessionBindingEvent"/>
        <import package="javax.net.ssl.SSLPeerUnverifiedException"/>
        <import package="javax.net.ssl.SSLSession"/>
        <import package="sun.security.util.Cache"/>
        <class name="SSLSessionContextImpl" line="47">
            <comment line="49">
                session cache, session id as key                
            </comment>
            <comment line="50">
                session cache, &quot;host:port&quot; as key                
            </comment>
            <comment line="51">
                the max cache size                
            </comment>
            <comment line="52">
                timeout in seconds                
            </comment>
            <comment line="56">
                package private                
            </comment>
            <comment line="145">
                package-private method, used ONLY by ServerHandshaker                
            </comment>
            <comment line="150">
                package-private method, used ONLY by ClientHandshaker                
            </comment>
            <comment line="173">
                cache a SSLSession
                
                 In SunJSSE implementation, a session is created while getting a
                 client hello or a server hello message, and cached while the
                 handshaking finished.
                 Here we time the session from the time it cached instead of the
                 time it created, which is a little longer than the expected. So
                 please do check isTimedout() while getting entry from the cache.                
            </comment>
            <comment line="193">
                package-private method, remove a cached SSLSession                
            </comment>
            <implements interface="SSLSessionContext"/>
            <declaration name="sessionCache" type="Cache" line="48"/>
            <declaration name="sessionHostPortCache" type="Cache" line="49"/>
            <declaration name="cacheLimit" type="int" line="50"/>
            <declaration name="timeout" type="int" line="51"/>
            <declaration name="debug" type="Debug" line="53"/>
            <method name="SSLSessionContextImpl" type="constructor" line="56">
                <comment line="58">
                    default cache size                    
                </comment>
                <comment line="59">
                    default, 24 hours                    
                </comment>
                <comment line="61">
                    use soft reference                    
                </comment>
            </method>
            <javadoc line="65">
                Returns the &lt;code&gt;SSLSession&lt;/code&gt; bound to the specified session id.                
            </javadoc>
            <method name="getSession" type="SSLSession" line="68">
                <params>
                    <param name="sessionId" type="byte[]"/>
                </params>
                <scope line="69"/>
                <declaration name="sess" type="SSLSessionImpl" line="73"/>
                <scope line="75"/>
            </method>
            <javadoc line="82">
                Returns an enumeration of the active SSL sessions.                
            </javadoc>
            <method name="getIds" type="Enumeration<byte[]>" line="85">
                <declaration name="scVisitor" type="SessionCacheVisitor" line="86"/>
            </method>
            <javadoc line="92">
                Sets the timeout limit for cached &lt;code&gt;SSLSession&lt;/code&gt; objects
                  Note that after reset the timeout, the cached session before
                  should be timed within the shorter one of the old timeout and the
                  new timeout.                
            </javadoc>
            <method name="setSessionTimeout" type="void" line="100">
                <params>
                    <param name="seconds" type="int"/>
                </params>
                <scope line="101"/>
                <scope line="105"/>
            </method>
            <javadoc line="112">
                Gets the timeout limit for cached &lt;code&gt;SSLSession&lt;/code&gt; objects                
            </javadoc>
            <method name="getSessionTimeout" type="int" line="115"/>
            <javadoc line="119">
                Sets the size of the cache used for storing
                  &lt;code&gt;SSLSession&lt;/code&gt; objects.                
            </javadoc>
            <method name="setSessionCacheSize" type="void" line="124">
                <params>
                    <param name="size" type="int"/>
                </params>
                <scope line="128"/>
            </method>
            <javadoc line="135">
                Gets the size of the cache used for storing
                  &lt;code&gt;SSLSession&lt;/code&gt; objects.                
            </javadoc>
            <method name="getSessionCacheSize" type="int" line="139"/>
            <method name="get" type="SSLSessionImpl" line="145">
                <params>
                    <param name="id" type="byte[]"/>
                </params>
            </method>
            <method name="get" type="SSLSessionImpl" line="150">
                <params>
                    <param name="hostname" type="String"/>
                    <param name="port" type="int"/>
                </params>
                <comment line="152">
                    If no session caching info is available, we won&apos;t
                     get one, so exit before doing a lookup.                    
                </comment>
                <scope line="155"/>
                <declaration name="sess" type="SSLSessionImpl" line="159"/>
                <scope line="161"/>
            </method>
            <method name="getKey" type="String" line="168">
                <params>
                    <param name="hostname" type="String"/>
                    <param name="port" type="int"/>
                </params>
            </method>
            <method name="put" type="void" line="180">
                <params>
                    <param name="s" type="SSLSessionImpl"/>
                </params>
                <comment line="184">
                    If no hostname/port info is available, don&apos;t add this one.                    
                </comment>
                <scope line="184"/>
            </method>
            <method name="remove" type="void" line="193">
                <params>
                    <param name="key" type="SessionId"/>
                </params>
                <declaration name="s" type="SSLSessionImpl" line="194"/>
                <scope line="195"/>
            </method>
            <method name="getDefaultCacheLimit" type="int" line="202">
                <declaration name="cacheLimit" type="int" line="203"/>
                <scope line="204">
                    <anonymous_class line="206">
                        <method name="run" type="String" line="207"/>
                    </anonymous_class>
                    <declaration name="s" type="String" line="205"/>
                </scope>
                <scope line="213"/>
            </method>
            <method name="isTimedout" type="boolean" line="219">
                <params>
                    <param name="sess" type="SSLSession"/>
                </params>
                <scope line="220"/>
                <scope line="225"/>
            </method>
            <class name="SessionCacheVisitor" line="233">
                <comment line="238">
                    public void visit(java.util.Map&lt;Object, Object&gt; map) {}                    
                </comment>
                <implements interface="sun.security.util.Cache.CacheVisitor"/>
                <declaration name="ids" type="Vector&lt;byte[]&gt;" line="235"/>
                <method name="visit" type="void" line="238">
                    <params>
                        <param name="map" type="java.util.Map<Object,Object>"/>
                    </params>
                    <scope line="241">
                        <declaration name="value" type="SSLSessionImpl" line="242"/>
                        <scope line="243"/>
                    </scope>
                </method>
                <method name="getSessionIds" type="Enumeration<byte[]>" line="249"/>
            </class>
        </class>
    </source>