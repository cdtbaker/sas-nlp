<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.ssl">
        <import package="java.net.Socket"/>
        <import package="javax.net.ssl.SSLSession"/>
        <import package="java.util"/>
        <import package="java.security"/>
        <import package="java.security.cert"/>
        <import package="javax.net.ssl"/>
        <import package="sun.security.validator"/>
        <import package="sun.security.util.HostnameChecker"/>
        <class name="X509TrustManagerImpl" line="42">
            <extends class="X509ExtendedTrustManager"/>
            <comment line="68">
                note that we need separate validator for client and server due to                
            </comment>
            <comment line="69">
                the different extension checks. They are initialized lazily on demand.                
            </comment>
            <comment line="333">
                Identify the peer by its certificate and hostname.
                
                 Lifted from sun.net.www.protocol.https.HttpsClient.                
            </comment>
            <implements interface="X509TrustManager"/>
            <javadoc line="42">
                This class implements the SunJSSE X.509 trust manager using the internal
                  validator API in J2SE core. The logic in this class is minimal.&lt;p&gt;
                  &lt;p&gt;
                  This class supports both the Simple validation algorithm from previous
                  JSSE versions and PKIX validation. Currently, it is not possible for the
                  application to specify PKIX parameters other than trust anchors. This will
                  be fixed in a future release using new APIs. When that happens, it may also
                  make sense to separate the Simple and PKIX trust managers into separate
                  classes.                
                <author>
                    Andreas Sterbenz                    
                </author>
            </javadoc>
            <declaration name="validatorType" type="String" line="58"/>
            <declaration name="trustedCerts" type="Collection&lt;X509Certificate&gt;" line="60"/>
            <javadoc line="60">
                The Set of trusted X509Certificates.                
            </javadoc>
            <declaration name="pkixParams" type="PKIXBuilderParameters" line="65"/>
            <declaration name="clientValidator" type="Validator" line="69"/>
            <declaration name="debug" type="Debug" line="71"/>
            <method name="X509TrustManagerImpl" type="constructor" line="74">
                <params>
                    <param name="validatorType" type="String"/>
                    <param name="ks" type="KeyStore"/>
                </params>
                <scope line="77"/>
                <scope line="79"/>
            </method>
            <method name="X509TrustManagerImpl" type="constructor" line="85">
                <params>
                    <param name="validatorType" type="String"/>
                    <param name="params" type="PKIXBuilderParameters"/>
                </params>
                <comment line="88">
                    create server validator eagerly so that we can conveniently                    
                </comment>
                <comment line="89">
                    get the trusted certificates                    
                </comment>
                <comment line="90">
                    clients need it anyway eventually, and servers will not mind                    
                </comment>
                <comment line="91">
                    the little extra footprint                    
                </comment>
                <declaration name="v" type="Validator" line="92"/>
            </method>
            <method name="checkClientTrusted" type="void" line="100">
                <params>
                    <param name="chain" type="X509Certificate"/>
                    <param name="authType" type="String"/>
                </params>
            </method>
            <method name="checkServerTrusted" type="void" line="106">
                <params>
                    <param name="chain" type="X509Certificate"/>
                    <param name="authType" type="String"/>
                </params>
            </method>
            <method name="getAcceptedIssuers" type="X509Certificate[]" line="111">
                <declaration name="certsArray" type="X509Certificate[]" line="112"/>
            </method>
            <method name="checkClientTrusted" type="void" line="119">
                <params>
                    <param name="chain" type="X509Certificate[]"/>
                    <param name="authType" type="String"/>
                    <param name="socket" type="Socket"/>
                </params>
            </method>
            <method name="checkServerTrusted" type="void" line="125">
                <params>
                    <param name="chain" type="X509Certificate[]"/>
                    <param name="authType" type="String"/>
                    <param name="socket" type="Socket"/>
                </params>
            </method>
            <method name="checkClientTrusted" type="void" line="131">
                <params>
                    <param name="chain" type="X509Certificate[]"/>
                    <param name="authType" type="String"/>
                    <param name="engine" type="SSLEngine"/>
                </params>
            </method>
            <method name="checkServerTrusted" type="void" line="137">
                <params>
                    <param name="chain" type="X509Certificate[]"/>
                    <param name="authType" type="String"/>
                    <param name="engine" type="SSLEngine"/>
                </params>
            </method>
            <method name="checkTrustedInit" type="Validator" line="142">
                <params>
                    <param name="chain" type="X509Certificate[]"/>
                    <param name="authType" type="String"/>
                    <param name="isClient" type="boolean"/>
                </params>
                <comment line="166">
                    assume double checked locking with a volatile flag works                    
                </comment>
                <comment line="167">
                    (guaranteed under the new Tiger memory model)                    
                </comment>
                <scope line="143"/>
                <scope line="148"/>
                <declaration name="v" type="Validator" line="153"/>
                <scope line="154">
                    <scope line="156">
                        <scope line="157">
                            <scope line="159"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="165">
                    <scope line="169">
                        <scope line="170">
                            <scope line="172"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="checkTrusted" type="void" line="185">
                <params>
                    <param name="chain" type="X509Certificate[]"/>
                    <param name="authType" type="String"/>
                    <param name="socket" type="Socket"/>
                    <param name="isClient" type="boolean"/>
                </params>
                <comment line="198">
                    check endpoint identity                    
                </comment>
                <comment line="206">
                    create the algorithm constraints                    
                </comment>
                <declaration name="v" type="Validator" line="186"/>
                <declaration name="constraints" type="AlgorithmConstraints" line="188"/>
                <scope line="190">
                    <declaration name="sslSocket" type="SSLSocket" line="192"/>
                    <declaration name="session" type="SSLSession" line="193"/>
                    <scope line="194"/>
                    <declaration name="identityAlg" type="String" line="199"/>
                    <scope line="201">
                        <declaration name="hostname" type="String" line="202"/>
                    </scope>
                    <declaration name="protocolVersion" type="ProtocolVersion" line="207"/>
                    <scope line="209">
                        <scope line="210">
                            <declaration name="extSession" type="ExtendedSSLSession" line="211"/>
                            <declaration name="localSupportedSignAlgs" type="String[]" line="213"/>
                        </scope>
                        <scope line="218"/>
                    </scope>
                    <scope line="222"/>
                </scope>
                <declaration name="trustedChain" type="X509Certificate[]" line="227"/>
                <scope line="228"/>
                <scope line="230"/>
                <scope line="233"/>
            </method>
            <method name="checkTrusted" type="void" line="240">
                <params>
                    <param name="chain" type="X509Certificate[]"/>
                    <param name="authType" type="String"/>
                    <param name="engine" type="SSLEngine"/>
                    <param name="isClient" type="boolean"/>
                </params>
                <comment line="250">
                    check endpoint identity                    
                </comment>
                <comment line="258">
                    create the algorithm constraints                    
                </comment>
                <declaration name="v" type="Validator" line="241"/>
                <declaration name="constraints" type="AlgorithmConstraints" line="243"/>
                <scope line="244">
                    <declaration name="session" type="SSLSession" line="245"/>
                    <scope line="246"/>
                    <declaration name="identityAlg" type="String" line="251"/>
                    <scope line="253">
                        <declaration name="hostname" type="String" line="254"/>
                    </scope>
                    <declaration name="protocolVersion" type="ProtocolVersion" line="259"/>
                    <scope line="261">
                        <scope line="262">
                            <declaration name="extSession" type="ExtendedSSLSession" line="263"/>
                            <declaration name="localSupportedSignAlgs" type="String[]" line="265"/>
                        </scope>
                        <scope line="270"/>
                    </scope>
                    <scope line="274"/>
                </scope>
                <declaration name="trustedChain" type="X509Certificate[]" line="279"/>
                <scope line="280"/>
                <scope line="282"/>
                <scope line="285"/>
            </method>
            <method name="showTrustedCerts" type="void" line="291">
                <scope line="292">
                    <scope line="293"/>
                </scope>
            </method>
            <method name="getValidator" type="Validator" line="311">
                <params>
                    <param name="variant" type="String"/>
                </params>
                <declaration name="v" type="Validator" line="312"/>
                <scope line="313"/>
                <scope line="315"/>
            </method>
            <method name="validate" type="X509Certificate[]" line="323">
                <params>
                    <param name="v" type="Validator"/>
                    <param name="chain" type="X509Certificate[]"/>
                    <param name="constraints" type="AlgorithmConstraints"/>
                    <param name="authType" type="String"/>
                </params>
                <declaration name="o" type="Object" line="324"/>
                <scope line="325"/>
                <scope line="327"/>
            </method>
            <method name="checkIdentity" type="void" line="338">
                <params>
                    <param name="hostname" type="String"/>
                    <param name="cert" type="X509Certificate"/>
                    <param name="algorithm" type="String"/>
                </params>
                <comment line="340">
                    if IPv6 strip off the &quot;[]&quot;                    
                </comment>
                <scope line="339">
                    <scope line="342"/>
                    <scope line="346"/>
                    <scope line="350"/>
                    <scope line="353"/>
                </scope>
            </method>
        </class>
    </source>