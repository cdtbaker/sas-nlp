<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.ssl">
        <import package="java.security.AccessControlContext"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.Permission"/>
        <import package="java.security.Principal"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="javax.crypto.SecretKey"/>
        <import package="javax.security.auth.Subject"/>
        <import package="javax.security.auth.login.LoginException"/>
        <class name="Krb5Helper" line="37">
            <comment line="45">
                loads Krb5Proxy implementation class if available                
            </comment>
            <javadoc line="37">
                A helper class for Kerberos APIs.                
            </javadoc>
            <method name="Krb5Helper" type="constructor" line="42"/>
            <declaration name="IMPL_CLASS" type="String" line="45"/>
            <declaration name="proxy" type="Krb5Proxy" line="48"/>
            <anonymous_class line="49">
                <method name="run" type="Krb5Proxy" line="50">
                    <scope line="51">
                        <declaration name="c" type="Class&lt;?&gt;" line="52"/>
                    </scope>
                    <scope line="54"/>
                    <scope line="56"/>
                    <scope line="58"/>
                </method>
            </anonymous_class>
            <javadoc line="63">
                Returns true if Kerberos is available.                
            </javadoc>
            <method name="isAvailable" type="boolean" line="66"/>
            <method name="ensureAvailable" type="void" line="70"/>
            <javadoc line="75">
                Returns the Subject associated with client-side of the SSL socket.                
            </javadoc>
            <method name="getClientSubject" type="Subject" line="79">
                <params>
                    <param name="acc" type="AccessControlContext"/>
                </params>
            </method>
            <javadoc line="84">
                Returns the Subject associated with server-side of the SSL socket.                
            </javadoc>
            <method name="getServerSubject" type="Subject" line="88">
                <params>
                    <param name="acc" type="AccessControlContext"/>
                </params>
            </method>
            <javadoc line="93">
                Returns the KerberosKeys for the default server-side principal.                
            </javadoc>
            <method name="getServerKeys" type="SecretKey[]" line="97">
                <params>
                    <param name="acc" type="AccessControlContext"/>
                </params>
            </method>
            <javadoc line="102">
                Returns the server-side principal name associated with the KerberosKey.                
            </javadoc>
            <method name="getServerPrincipalName" type="String" line="105">
                <params>
                    <param name="kerberosKey" type="SecretKey"/>
                </params>
            </method>
            <javadoc line="110">
                Returns the hostname embedded in the principal name.                
            </javadoc>
            <method name="getPrincipalHostName" type="String" line="113">
                <params>
                    <param name="principal" type="Principal"/>
                </params>
            </method>
            <javadoc line="118">
                Returns a ServicePermission for the principal name and action.                
            </javadoc>
            <method name="getServicePermission" type="Permission" line="122">
                <params>
                    <param name="principalName" type="String"/>
                    <param name="action" type="String"/>
                </params>
            </method>
        </class>
    </source>