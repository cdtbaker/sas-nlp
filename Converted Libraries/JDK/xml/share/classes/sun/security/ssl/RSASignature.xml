<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.ssl">
        <import package="java.util.Arrays"/>
        <import package="java.security"/>
        <class name="RSASignature" line="33">
            <extends class="SignatureSpi"/>
            <comment line="58">
                flag indicating if the MessageDigests are in reset state                
            </comment>
            <comment line="129">
                lazily initialize the MessageDigests                
            </comment>
            <javadoc line="33">
                Signature implementation for the SSL/TLS RSA Signature variant with both
                  MD5 and SHA-1 MessageDigests. Used for explicit RSA server authentication
                  (RSA signed server key exchange for RSA_EXPORT and DHE_RSA) and RSA client
                  authentication (RSA signed certificate verify message).
                  It conforms to the standard JCA Signature API. It is registered in the
                  SunJSSE provider to avoid more complicated getInstance() code and
                  negative interaction with the JCA mechanisms for hardware providers.
                  The class should be instantiated via the getInstance() method in this class,
                  which returns the implementation from the prefered provider. The internal
                  implementation allows the hashes to be explicitly set, which is required
                  for RSA client authentication. It can be obtained via the
                  getInternalInstance() method.
                  This class is not thread safe.                
            </javadoc>
            <declaration name="rawRsa" type="Signature" line="54"/>
            <declaration name="md5" type="MessageDigest" line="55"/>
            <declaration name="isReset" type="boolean" line="58"/>
            <method name="RSASignature" type="constructor" line="60"/>
            <javadoc line="66">
                Get an implementation for the RSA signature. Follows the standard
                  JCA getInstance() model, so it return the implementation from the
                  provider with the highest precedence, which may be this class.                
            </javadoc>
            <method name="getInstance" type="Signature" line="71"/>
            <javadoc line="75">
                Get an internal implementation for the RSA signature. Used for RSA
                  client authentication, which needs the ability to set the digests
                  to externally provided values via the setHashes() method.                
            </javadoc>
            <method name="getInternalInstance" type="Signature" line="81"/>
            <javadoc line="85">
                Set the MD5 and SHA hashes to the provided objects.                
            </javadoc>
            <method name="setHashes" type="void" line="88">
                <params>
                    <param name="sig" type="Signature"/>
                    <param name="md5" type="MessageDigest"/>
                    <param name="sha" type="MessageDigest"/>
                </params>
            </method>
            <javadoc line="92">
                Reset the MessageDigests unless they are already reset.                
            </javadoc>
            <method name="reset" type="void" line="95">
                <scope line="96"/>
            </method>
            <method name="checkNull" type="void" line="103">
                <params>
                    <param name="key" type="Key"/>
                </params>
                <scope line="104"/>
            </method>
            <method name="engineInitVerify" type="void" line="110">
                <params>
                    <param name="publicKey" type="PublicKey"/>
                </params>
            </method>
            <method name="engineInitSign" type="void" line="117">
                <params>
                    <param name="privateKey" type="PrivateKey"/>
                </params>
            </method>
            <method name="engineInitSign" type="void" line="122">
                <params>
                    <param name="privateKey" type="PrivateKey"/>
                    <param name="random" type="SecureRandom"/>
                </params>
            </method>
            <method name="initDigests" type="void" line="129">
                <scope line="130"/>
            </method>
            <method name="engineUpdate" type="void" line="136">
                <params>
                    <param name="b" type="byte"/>
                </params>
            </method>
            <method name="engineUpdate" type="void" line="143">
                <params>
                    <param name="b" type="byte[]"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <method name="getDigest" type="byte[]" line="150">
                <comment line="160">
                    should never occur                    
                </comment>
                <scope line="151">
                    <declaration name="data" type="byte[]" line="153"/>
                </scope>
                <scope line="158"/>
            </method>
            <method name="engineSign" type="byte[]" line="164"/>
            <method name="engineVerify" type="boolean" line="169">
                <params>
                    <param name="sigBytes" type="byte[]"/>
                </params>
            </method>
            <method name="engineVerify" type="boolean" line="174">
                <params>
                    <param name="sigBytes" type="byte[]"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                </params>
            </method>
            <method name="engineSetParameter" type="void" line="180">
                <params>
                    <param name="param" type="String"/>
                    <param name="value" type="Object"/>
                </params>
                <scope line="181"/>
                <scope line="185"/>
                <declaration name="digests" type="MessageDigest[]" line="189"/>
            </method>
            <method name="engineGetParameter" type="Object" line="195">
                <params>
                    <param name="param" type="String"/>
                </params>
            </method>
        </class>
    </source>