<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.ssl">
        <import package="java.io.IOException"/>
        <import package="java.io.PrintStream"/>
        <import package="java.util"/>
        <import package="java.security.spec.ECParameterSpec"/>
        <import package="javax.net.ssl.SSLProtocolException"/>
        <class name="HelloExtensions" line="36">
            <comment line="104">
                Return the List of extensions. Must not be modified by the caller.                
            </comment>
            <comment line="190">
                extensions defined in RFC 3546                
            </comment>
            <comment line="192">
                IANA registry value: 0                
            </comment>
            <comment line="194">
                IANA registry value: 1                
            </comment>
            <comment line="196">
                IANA registry value: 2                
            </comment>
            <comment line="198">
                IANA registry value: 3                
            </comment>
            <comment line="200">
                IANA registry value: 4                
            </comment>
            <comment line="202">
                IANA registry value: 5                
            </comment>
            <comment line="204">
                extensions defined in RFC 4681                
            </comment>
            <comment line="206">
                IANA registry value: 6                
            </comment>
            <comment line="208">
                extensions defined in RFC 5081                
            </comment>
            <comment line="210">
                IANA registry value: 9                
            </comment>
            <comment line="212">
                extensions defined in RFC 4492 (ECC)                
            </comment>
            <comment line="214">
                IANA registry value: 10                
            </comment>
            <comment line="216">
                IANA registry value: 11                
            </comment>
            <comment line="218">
                extensions defined in RFC 5054                
            </comment>
            <comment line="220">
                IANA registry value: 12                
            </comment>
            <comment line="222">
                extensions defined in RFC 5246                
            </comment>
            <comment line="224">
                IANA registry value: 13                
            </comment>
            <comment line="226">
                extensions defined in RFC 5746                
            </comment>
            <comment line="228">
                IANA registry value: 65281                
            </comment>
            <comment line="239">
                Length of the encoded extension, including the type and length fields                
            </comment>
            <comment line="306">
                ServerNameList length                
            </comment>
            <comment line="436">
                the extension value to send in the ClientHello message                
            </comment>
            <comment line="490">
                Return a reference to the internal curveIds array.
                 The caller must NOT modify the contents.                
            </comment>
            <comment line="544">
                Test whether we support the curve with the given index.                
            </comment>
            <comment line="575">
                See sun.security.ec.NamedCurve for the OIDs                
            </comment>
            <comment line="740">
                Length of the encoded extension, including the type and length fields                
            </comment>
            <comment line="792">
                length of supported_signature_algorithms                
            </comment>
            <javadoc line="36">
                This file contains all the classes relevant to TLS Extensions for the
                  ClientHello and ServerHello messages. The extension mechanism and
                  several extensions are defined in RFC 3546. Additional extensions are
                  defined in the ECC RFC 4492.
                  Currently, only the two ECC extensions are fully supported.
                  The classes contained in this file are:
                  . HelloExtensions: a List of extensions as used in the client hello
                  and server hello messages.
                  . ExtensionType: an enum style class for the extension type
                  . HelloExtension: abstract base class for all extensions. All subclasses
                  must be immutable.
                  . UnknownExtension: used to represent all parsed extensions that we do not
                  explicitly support.
                  . ServerNameExtension: the server_name extension.
                  . SignatureAlgorithmsExtension: the signature_algorithms extension.
                  . SupportedEllipticCurvesExtension: the ECC supported curves extension.
                  . SupportedEllipticPointFormatsExtension: the ECC supported point formats
                  (compressed/uncompressed) extension.                
                <since>
                    1.6                    
                </since>
                <author>
                    Andreas Sterbenz                    
                </author>
            </javadoc>
            <declaration name="extensions" type="List&lt;HelloExtension&gt;" line="64"/>
            <declaration name="encodedLength" type="int" line="65"/>
            <method name="HelloExtensions" type="constructor" line="67"/>
            <method name="HelloExtensions" type="constructor" line="71">
                <params>
                    <param name="s" type="HandshakeInStream"/>
                </params>
                <declaration name="len" type="int" line="72"/>
                <scope line="75">
                    <declaration name="type" type="int" line="76"/>
                    <declaration name="extlen" type="int" line="77"/>
                    <declaration name="extType" type="ExtensionType" line="78"/>
                    <declaration name="extension" type="HelloExtension" line="79"/>
                    <scope line="80"/>
                    <scope line="82"/>
                    <scope line="84"/>
                    <scope line="86"/>
                    <scope line="89"/>
                    <scope line="91"/>
                </scope>
                <scope line="97"/>
            </method>
            <method name="list" type="List<HelloExtension>" line="104"/>
            <method name="add" type="void" line="108">
                <params>
                    <param name="ext" type="HelloExtension"/>
                </params>
                <scope line="109"/>
            </method>
            <method name="get" type="HelloExtension" line="116">
                <params>
                    <param name="type" type="ExtensionType"/>
                </params>
                <scope line="117">
                    <scope line="118"/>
                </scope>
            </method>
            <method name="length" type="int" line="125">
                <scope line="126"/>
                <scope line="129"/>
                <scope line="131">
                    <scope line="133"/>
                </scope>
            </method>
            <method name="send" type="void" line="140">
                <params>
                    <param name="s" type="HandshakeOutStream"/>
                </params>
                <declaration name="length" type="int" line="141"/>
                <scope line="142"/>
                <scope line="146"/>
            </method>
            <method name="print" type="void" line="151">
                <params>
                    <param name="s" type="PrintStream"/>
                </params>
                <scope line="152"/>
            </method>
        </class>
        <class name="ExtensionType" line="158">
            <comment line="104">
                Return the List of extensions. Must not be modified by the caller.                
            </comment>
            <comment line="190">
                extensions defined in RFC 3546                
            </comment>
            <comment line="192">
                IANA registry value: 0                
            </comment>
            <comment line="194">
                IANA registry value: 1                
            </comment>
            <comment line="196">
                IANA registry value: 2                
            </comment>
            <comment line="198">
                IANA registry value: 3                
            </comment>
            <comment line="200">
                IANA registry value: 4                
            </comment>
            <comment line="202">
                IANA registry value: 5                
            </comment>
            <comment line="204">
                extensions defined in RFC 4681                
            </comment>
            <comment line="206">
                IANA registry value: 6                
            </comment>
            <comment line="208">
                extensions defined in RFC 5081                
            </comment>
            <comment line="210">
                IANA registry value: 9                
            </comment>
            <comment line="212">
                extensions defined in RFC 4492 (ECC)                
            </comment>
            <comment line="214">
                IANA registry value: 10                
            </comment>
            <comment line="216">
                IANA registry value: 11                
            </comment>
            <comment line="218">
                extensions defined in RFC 5054                
            </comment>
            <comment line="220">
                IANA registry value: 12                
            </comment>
            <comment line="222">
                extensions defined in RFC 5246                
            </comment>
            <comment line="224">
                IANA registry value: 13                
            </comment>
            <comment line="226">
                extensions defined in RFC 5746                
            </comment>
            <comment line="228">
                IANA registry value: 65281                
            </comment>
            <comment line="239">
                Length of the encoded extension, including the type and length fields                
            </comment>
            <comment line="306">
                ServerNameList length                
            </comment>
            <comment line="436">
                the extension value to send in the ClientHello message                
            </comment>
            <comment line="490">
                Return a reference to the internal curveIds array.
                 The caller must NOT modify the contents.                
            </comment>
            <comment line="544">
                Test whether we support the curve with the given index.                
            </comment>
            <comment line="575">
                See sun.security.ec.NamedCurve for the OIDs                
            </comment>
            <comment line="740">
                Length of the encoded extension, including the type and length fields                
            </comment>
            <comment line="792">
                length of supported_signature_algorithms                
            </comment>
            <declaration name="id" type="int" line="160"/>
            <declaration name="name" type="String" line="161"/>
            <method name="ExtensionType" type="constructor" line="163">
                <params>
                    <param name="id" type="int"/>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="toString" type="String" line="168"/>
            <declaration name="knownExtensions" type="List&lt;ExtensionType&gt;" line="172"/>
            <method name="get" type="ExtensionType" line="174">
                <params>
                    <param name="id" type="int"/>
                </params>
                <scope line="175">
                    <scope line="176"/>
                </scope>
            </method>
            <method name="e" type="ExtensionType" line="183">
                <params>
                    <param name="id" type="int"/>
                    <param name="name" type="String"/>
                </params>
                <declaration name="ext" type="ExtensionType" line="184"/>
            </method>
            <declaration name="EXT_SERVER_NAME" type="ExtensionType" line="190"/>
            <declaration name="EXT_MAX_FRAGMENT_LENGTH" type="ExtensionType" line="192"/>
            <declaration name="EXT_CLIENT_CERTIFICATE_URL" type="ExtensionType" line="194"/>
            <declaration name="EXT_TRUSTED_CA_KEYS" type="ExtensionType" line="196"/>
            <declaration name="EXT_TRUNCATED_HMAC" type="ExtensionType" line="198"/>
            <declaration name="EXT_STATUS_REQUEST" type="ExtensionType" line="200"/>
            <declaration name="EXT_USER_MAPPING" type="ExtensionType" line="204"/>
            <declaration name="EXT_CERT_TYPE" type="ExtensionType" line="208"/>
            <declaration name="EXT_ELLIPTIC_CURVES" type="ExtensionType" line="212"/>
            <declaration name="EXT_EC_POINT_FORMATS" type="ExtensionType" line="214"/>
            <declaration name="EXT_SRP" type="ExtensionType" line="218"/>
            <declaration name="EXT_SIGNATURE_ALGORITHMS" type="ExtensionType" line="222"/>
            <declaration name="EXT_RENEGOTIATION_INFO" type="ExtensionType" line="226"/>
        </class>
        <class name="HelloExtension" line="230">
            <comment line="104">
                Return the List of extensions. Must not be modified by the caller.                
            </comment>
            <comment line="190">
                extensions defined in RFC 3546                
            </comment>
            <comment line="192">
                IANA registry value: 0                
            </comment>
            <comment line="194">
                IANA registry value: 1                
            </comment>
            <comment line="196">
                IANA registry value: 2                
            </comment>
            <comment line="198">
                IANA registry value: 3                
            </comment>
            <comment line="200">
                IANA registry value: 4                
            </comment>
            <comment line="202">
                IANA registry value: 5                
            </comment>
            <comment line="204">
                extensions defined in RFC 4681                
            </comment>
            <comment line="206">
                IANA registry value: 6                
            </comment>
            <comment line="208">
                extensions defined in RFC 5081                
            </comment>
            <comment line="210">
                IANA registry value: 9                
            </comment>
            <comment line="212">
                extensions defined in RFC 4492 (ECC)                
            </comment>
            <comment line="214">
                IANA registry value: 10                
            </comment>
            <comment line="216">
                IANA registry value: 11                
            </comment>
            <comment line="218">
                extensions defined in RFC 5054                
            </comment>
            <comment line="220">
                IANA registry value: 12                
            </comment>
            <comment line="222">
                extensions defined in RFC 5246                
            </comment>
            <comment line="224">
                IANA registry value: 13                
            </comment>
            <comment line="226">
                extensions defined in RFC 5746                
            </comment>
            <comment line="228">
                IANA registry value: 65281                
            </comment>
            <comment line="239">
                Length of the encoded extension, including the type and length fields                
            </comment>
            <comment line="306">
                ServerNameList length                
            </comment>
            <comment line="436">
                the extension value to send in the ClientHello message                
            </comment>
            <comment line="490">
                Return a reference to the internal curveIds array.
                 The caller must NOT modify the contents.                
            </comment>
            <comment line="544">
                Test whether we support the curve with the given index.                
            </comment>
            <comment line="575">
                See sun.security.ec.NamedCurve for the OIDs                
            </comment>
            <comment line="740">
                Length of the encoded extension, including the type and length fields                
            </comment>
            <comment line="792">
                length of supported_signature_algorithms                
            </comment>
            <declaration name="type" type="ExtensionType" line="232"/>
            <method name="HelloExtension" type="constructor" line="234">
                <params>
                    <param name="type" type="ExtensionType"/>
                </params>
            </method>
            <method name="length" type="int" line="239"/>
            <method name="send" type="void" line="241"/>
            <method name="toString" type="String" line="243"/>
        </class>
        <class name="UnknownExtension" line="247">
            <extends class="HelloExtension"/>
            <comment line="104">
                Return the List of extensions. Must not be modified by the caller.                
            </comment>
            <comment line="190">
                extensions defined in RFC 3546                
            </comment>
            <comment line="192">
                IANA registry value: 0                
            </comment>
            <comment line="194">
                IANA registry value: 1                
            </comment>
            <comment line="196">
                IANA registry value: 2                
            </comment>
            <comment line="198">
                IANA registry value: 3                
            </comment>
            <comment line="200">
                IANA registry value: 4                
            </comment>
            <comment line="202">
                IANA registry value: 5                
            </comment>
            <comment line="204">
                extensions defined in RFC 4681                
            </comment>
            <comment line="206">
                IANA registry value: 6                
            </comment>
            <comment line="208">
                extensions defined in RFC 5081                
            </comment>
            <comment line="210">
                IANA registry value: 9                
            </comment>
            <comment line="212">
                extensions defined in RFC 4492 (ECC)                
            </comment>
            <comment line="214">
                IANA registry value: 10                
            </comment>
            <comment line="216">
                IANA registry value: 11                
            </comment>
            <comment line="218">
                extensions defined in RFC 5054                
            </comment>
            <comment line="220">
                IANA registry value: 12                
            </comment>
            <comment line="222">
                extensions defined in RFC 5246                
            </comment>
            <comment line="224">
                IANA registry value: 13                
            </comment>
            <comment line="226">
                extensions defined in RFC 5746                
            </comment>
            <comment line="228">
                IANA registry value: 65281                
            </comment>
            <comment line="239">
                Length of the encoded extension, including the type and length fields                
            </comment>
            <comment line="306">
                ServerNameList length                
            </comment>
            <comment line="436">
                the extension value to send in the ClientHello message                
            </comment>
            <comment line="490">
                Return a reference to the internal curveIds array.
                 The caller must NOT modify the contents.                
            </comment>
            <comment line="544">
                Test whether we support the curve with the given index.                
            </comment>
            <comment line="575">
                See sun.security.ec.NamedCurve for the OIDs                
            </comment>
            <comment line="740">
                Length of the encoded extension, including the type and length fields                
            </comment>
            <comment line="792">
                length of supported_signature_algorithms                
            </comment>
            <declaration name="data" type="byte[]" line="249"/>
            <method name="UnknownExtension" type="constructor" line="252">
                <params>
                    <param name="s" type="HandshakeInStream"/>
                    <param name="len" type="int"/>
                    <param name="type" type="ExtensionType"/>
                </params>
                <comment line="256">
                    s.read() does not handle 0-length arrays.                    
                </comment>
                <scope line="256"/>
            </method>
            <method name="length" type="int" line="261"/>
            <method name="send" type="void" line="265">
                <params>
                    <param name="s" type="HandshakeOutStream"/>
                </params>
            </method>
            <method name="toString" type="String" line="270"/>
        </class>
        <class name="ServerNameExtension" line="300">
            <extends class="HelloExtension"/>
            <comment line="104">
                Return the List of extensions. Must not be modified by the caller.                
            </comment>
            <comment line="190">
                extensions defined in RFC 3546                
            </comment>
            <comment line="192">
                IANA registry value: 0                
            </comment>
            <comment line="194">
                IANA registry value: 1                
            </comment>
            <comment line="196">
                IANA registry value: 2                
            </comment>
            <comment line="198">
                IANA registry value: 3                
            </comment>
            <comment line="200">
                IANA registry value: 4                
            </comment>
            <comment line="202">
                IANA registry value: 5                
            </comment>
            <comment line="204">
                extensions defined in RFC 4681                
            </comment>
            <comment line="206">
                IANA registry value: 6                
            </comment>
            <comment line="208">
                extensions defined in RFC 5081                
            </comment>
            <comment line="210">
                IANA registry value: 9                
            </comment>
            <comment line="212">
                extensions defined in RFC 4492 (ECC)                
            </comment>
            <comment line="214">
                IANA registry value: 10                
            </comment>
            <comment line="216">
                IANA registry value: 11                
            </comment>
            <comment line="218">
                extensions defined in RFC 5054                
            </comment>
            <comment line="220">
                IANA registry value: 12                
            </comment>
            <comment line="222">
                extensions defined in RFC 5246                
            </comment>
            <comment line="224">
                IANA registry value: 13                
            </comment>
            <comment line="226">
                extensions defined in RFC 5746                
            </comment>
            <comment line="228">
                IANA registry value: 65281                
            </comment>
            <comment line="239">
                Length of the encoded extension, including the type and length fields                
            </comment>
            <comment line="306">
                ServerNameList length                
            </comment>
            <comment line="436">
                the extension value to send in the ClientHello message                
            </comment>
            <comment line="490">
                Return a reference to the internal curveIds array.
                 The caller must NOT modify the contents.                
            </comment>
            <comment line="544">
                Test whether we support the curve with the given index.                
            </comment>
            <comment line="575">
                See sun.security.ec.NamedCurve for the OIDs                
            </comment>
            <comment line="740">
                Length of the encoded extension, including the type and length fields                
            </comment>
            <comment line="792">
                length of supported_signature_algorithms                
            </comment>
            <declaration name="NAME_HOST_NAME" type="int" line="302"/>
            <declaration name="names" type="List&lt;ServerName&gt;" line="304"/>
            <declaration name="listLength" type="int" line="305"/>
            <method name="ServerNameExtension" type="constructor" line="307">
                <params>
                    <param name="hostnames" type="List<String>"/>
                </params>
                <comment line="315">
                    we only support DNS hostname now.                    
                </comment>
                <comment line="323">
                    As we only support DNS hostname now, the hostname list must
                     not contain more than one hostname                    
                </comment>
                <comment line="331">
                    We only need to add &quot;server_name&quot; extension in ClientHello unless
                     we support SNI in server side in the future. It is possible that
                     the SNI is empty in ServerHello. As we don&apos;t support SNI in
                     ServerHello now, we will throw exception for empty list for now.                    
                </comment>
                <scope line="312">
                    <scope line="313">
                        <declaration name="serverName" type="ServerName" line="315"/>
                    </scope>
                </scope>
                <scope line="324"/>
                <scope line="334"/>
            </method>
            <method name="ServerNameExtension" type="constructor" line="341">
                <params>
                    <param name="s" type="HandshakeInStream"/>
                    <param name="len" type="int"/>
                </params>
                <comment line="346">
                    &quot;server_name&quot; extension in ClientHello                    
                </comment>
                <comment line="347">
                    ServerNameList length                    
                </comment>
                <comment line="360">
                    we may need to check the duplicated ServerName type                    
                </comment>
                <comment line="362">
                    &quot;server_name&quot; extension in ServerHello                    
                </comment>
                <declaration name="remains" type="int" line="344"/>
                <scope line="345">
                    <scope line="347"/>
                    <scope line="354">
                        <declaration name="name" type="ServerName" line="355"/>
                    </scope>
                </scope>
                <scope line="361"/>
                <scope line="366"/>
            </method>
            <class name="ServerName" line="371">
                <declaration name="length" type="int" line="372"/>
                <declaration name="type" type="int" line="373"/>
                <declaration name="data" type="byte[]" line="374"/>
                <declaration name="hostname" type="String" line="375"/>
                <method name="ServerName" type="constructor" line="377">
                    <params>
                        <param name="type" type="int"/>
                        <param name="hostname" type="String"/>
                    </params>
                    <comment line="379">
                        NameType                        
                    </comment>
                    <comment line="381">
                        HostName                        
                    </comment>
                    <comment line="382">
                        NameType: 1 byte
                         HostName length: 2 bytes                        
                    </comment>
                </method>
                <method name="ServerName" type="constructor" line="385">
                    <params>
                        <param name="s" type="HandshakeInStream"/>
                    </params>
                    <comment line="387">
                        NameType                        
                    </comment>
                    <comment line="388">
                        HostName (length read in getBytes16)                        
                    </comment>
                    <comment line="389">
                        NameType: 1 byte
                         HostName length: 2 bytes                        
                    </comment>
                    <scope line="390"/>
                    <scope line="392"/>
                </method>
                <method name="toString" type="String" line="397">
                    <scope line="398"/>
                    <scope line="400"/>
                </method>
            </class>
            <method name="length" type="int" line="406"/>
            <method name="send" type="void" line="410">
                <params>
                    <param name="s" type="HandshakeOutStream"/>
                </params>
                <comment line="418">
                    NameType                    
                </comment>
                <comment line="419">
                    HostName                    
                </comment>
                <scope line="413">
                    <scope line="416"/>
                </scope>
            </method>
            <method name="toString" type="String" line="423">
                <declaration name="buffer" type="StringBuffer" line="424"/>
                <scope line="425"/>
            </method>
        </class>
        <class name="SupportedEllipticCurvesExtension" line="433">
            <extends class="HelloExtension"/>
            <comment line="104">
                Return the List of extensions. Must not be modified by the caller.                
            </comment>
            <comment line="190">
                extensions defined in RFC 3546                
            </comment>
            <comment line="192">
                IANA registry value: 0                
            </comment>
            <comment line="194">
                IANA registry value: 1                
            </comment>
            <comment line="196">
                IANA registry value: 2                
            </comment>
            <comment line="198">
                IANA registry value: 3                
            </comment>
            <comment line="200">
                IANA registry value: 4                
            </comment>
            <comment line="202">
                IANA registry value: 5                
            </comment>
            <comment line="204">
                extensions defined in RFC 4681                
            </comment>
            <comment line="206">
                IANA registry value: 6                
            </comment>
            <comment line="208">
                extensions defined in RFC 5081                
            </comment>
            <comment line="210">
                IANA registry value: 9                
            </comment>
            <comment line="212">
                extensions defined in RFC 4492 (ECC)                
            </comment>
            <comment line="214">
                IANA registry value: 10                
            </comment>
            <comment line="216">
                IANA registry value: 11                
            </comment>
            <comment line="218">
                extensions defined in RFC 5054                
            </comment>
            <comment line="220">
                IANA registry value: 12                
            </comment>
            <comment line="222">
                extensions defined in RFC 5246                
            </comment>
            <comment line="224">
                IANA registry value: 13                
            </comment>
            <comment line="226">
                extensions defined in RFC 5746                
            </comment>
            <comment line="228">
                IANA registry value: 65281                
            </comment>
            <comment line="239">
                Length of the encoded extension, including the type and length fields                
            </comment>
            <comment line="306">
                ServerNameList length                
            </comment>
            <comment line="436">
                the extension value to send in the ClientHello message                
            </comment>
            <comment line="490">
                Return a reference to the internal curveIds array.
                 The caller must NOT modify the contents.                
            </comment>
            <comment line="544">
                Test whether we support the curve with the given index.                
            </comment>
            <comment line="575">
                See sun.security.ec.NamedCurve for the OIDs                
            </comment>
            <comment line="740">
                Length of the encoded extension, including the type and length fields                
            </comment>
            <comment line="792">
                length of supported_signature_algorithms                
            </comment>
            <declaration name="DEFAULT" type="SupportedEllipticCurvesExtension" line="436"/>
            <declaration name="fips" type="boolean" line="438"/>
            <scope line="440">
                <declaration name="ids" type="int[]" line="441"/>
                <scope line="443"/>
                <scope line="451"/>
            </scope>
            <declaration name="curveIds" type="int[]" line="460"/>
            <method name="SupportedEllipticCurvesExtension" type="constructor" line="462">
                <params>
                    <param name="curveIds" type="int[]"/>
                </params>
            </method>
            <method name="SupportedEllipticCurvesExtension" type="constructor" line="468">
                <params>
                    <param name="s" type="HandshakeInStream"/>
                    <param name="len" type="int"/>
                </params>
                <declaration name="k" type="int" line="470"/>
                <scope line="471"/>
                <scope line="475"/>
            </method>
            <method name="contains" type="boolean" line="480">
                <params>
                    <param name="index" type="int"/>
                </params>
                <scope line="481">
                    <scope line="482"/>
                </scope>
            </method>
            <method name="curveIds" type="int[]" line="491"/>
            <method name="length" type="int" line="495"/>
            <method name="send" type="void" line="499">
                <params>
                    <param name="s" type="HandshakeOutStream"/>
                </params>
                <declaration name="k" type="int" line="501"/>
                <scope line="504"/>
            </method>
            <method name="toString" type="String" line="509">
                <comment line="520">
                    first check if it is a known named curve, then try other cases.                    
                </comment>
                <comment line="524">
                    this toString() output will look nice for the current
                     implementation of the ECParameterSpec class in the Sun
                     provider, but may not look good for other implementations.                    
                </comment>
                <declaration name="sb" type="StringBuilder" line="510"/>
                <declaration name="first" type="boolean" line="512"/>
                <scope line="513">
                    <scope line="514"/>
                    <scope line="516"/>
                    <declaration name="oid" type="String" line="520"/>
                    <scope line="521">
                        <declaration name="spec" type="ECParameterSpec" line="522"/>
                        <scope line="526"/>
                        <scope line="528"/>
                    </scope>
                    <scope line="531"/>
                    <scope line="533"/>
                    <scope line="535"/>
                </scope>
            </method>
            <method name="isSupported" type="boolean" line="544">
                <params>
                    <param name="index" type="int"/>
                </params>
                <comment line="550">
                    in non-FIPS mode, we support all valid indices                    
                </comment>
                <scope line="545"/>
                <scope line="548"/>
            </method>
            <method name="getCurveIndex" type="int" line="555">
                <params>
                    <param name="params" type="ECParameterSpec"/>
                </params>
                <declaration name="oid" type="String" line="556"/>
                <scope line="557"/>
                <declaration name="n" type="Integer" line="560"/>
            </method>
            <method name="getCurveOid" type="String" line="564">
                <params>
                    <param name="index" type="int"/>
                </params>
                <scope line="565"/>
            </method>
            <declaration name="ARBITRARY_PRIME" type="int" line="571"/>
            <declaration name="ARBITRARY_CHAR2" type="int" line="572"/>
            <declaration name="NAMED_CURVE_OID_TABLE" type="String[]" line="575"/>
            <declaration name="curveIndices" type="Map&lt;String,Integer&gt;" line="604"/>
            <scope line="606">
                <scope line="608"/>
            </scope>
        </class>
        <class name="SupportedEllipticPointFormatsExtension" line="615">
            <extends class="HelloExtension"/>
            <comment line="104">
                Return the List of extensions. Must not be modified by the caller.                
            </comment>
            <comment line="190">
                extensions defined in RFC 3546                
            </comment>
            <comment line="192">
                IANA registry value: 0                
            </comment>
            <comment line="194">
                IANA registry value: 1                
            </comment>
            <comment line="196">
                IANA registry value: 2                
            </comment>
            <comment line="198">
                IANA registry value: 3                
            </comment>
            <comment line="200">
                IANA registry value: 4                
            </comment>
            <comment line="202">
                IANA registry value: 5                
            </comment>
            <comment line="204">
                extensions defined in RFC 4681                
            </comment>
            <comment line="206">
                IANA registry value: 6                
            </comment>
            <comment line="208">
                extensions defined in RFC 5081                
            </comment>
            <comment line="210">
                IANA registry value: 9                
            </comment>
            <comment line="212">
                extensions defined in RFC 4492 (ECC)                
            </comment>
            <comment line="214">
                IANA registry value: 10                
            </comment>
            <comment line="216">
                IANA registry value: 11                
            </comment>
            <comment line="218">
                extensions defined in RFC 5054                
            </comment>
            <comment line="220">
                IANA registry value: 12                
            </comment>
            <comment line="222">
                extensions defined in RFC 5246                
            </comment>
            <comment line="224">
                IANA registry value: 13                
            </comment>
            <comment line="226">
                extensions defined in RFC 5746                
            </comment>
            <comment line="228">
                IANA registry value: 65281                
            </comment>
            <comment line="239">
                Length of the encoded extension, including the type and length fields                
            </comment>
            <comment line="306">
                ServerNameList length                
            </comment>
            <comment line="436">
                the extension value to send in the ClientHello message                
            </comment>
            <comment line="490">
                Return a reference to the internal curveIds array.
                 The caller must NOT modify the contents.                
            </comment>
            <comment line="544">
                Test whether we support the curve with the given index.                
            </comment>
            <comment line="575">
                See sun.security.ec.NamedCurve for the OIDs                
            </comment>
            <comment line="740">
                Length of the encoded extension, including the type and length fields                
            </comment>
            <comment line="792">
                length of supported_signature_algorithms                
            </comment>
            <declaration name="FMT_UNCOMPRESSED" type="int" line="617"/>
            <declaration name="FMT_ANSIX962_COMPRESSED_PRIME" type="int" line="618"/>
            <declaration name="FMT_ANSIX962_COMPRESSED_CHAR2" type="int" line="619"/>
            <declaration name="DEFAULT" type="HelloExtension" line="621"/>
            <declaration name="formats" type="byte[]" line="625"/>
            <method name="SupportedEllipticPointFormatsExtension" type="constructor" line="627">
                <params>
                    <param name="formats" type="byte[]"/>
                </params>
            </method>
            <method name="SupportedEllipticPointFormatsExtension" type="constructor" line="633">
                <params>
                    <param name="s" type="HandshakeInStream"/>
                    <param name="len" type="int"/>
                </params>
                <comment line="637">
                    RFC 4492 says uncompressed points must always be supported.
                     Check just to make sure.                    
                </comment>
                <declaration name="uncompressed" type="boolean" line="638"/>
                <scope line="639">
                    <scope line="640"/>
                </scope>
                <scope line="645"/>
            </method>
            <method name="length" type="int" line="651"/>
            <method name="send" type="void" line="655">
                <params>
                    <param name="s" type="HandshakeOutStream"/>
                </params>
            </method>
            <method name="toString" type="String" line="661">
                <params>
                    <param name="format" type="byte"/>
                </params>
                <declaration name="f" type="int" line="662"/>
            </method>
            <method name="toString" type="String" line="675">
                <declaration name="list" type="List&lt;String&gt;" line="676"/>
                <scope line="677"/>
            </method>
        </class>
        <class name="RenegotiationInfoExtension" line="695">
            <extends class="HelloExtension"/>
            <comment line="104">
                Return the List of extensions. Must not be modified by the caller.                
            </comment>
            <comment line="190">
                extensions defined in RFC 3546                
            </comment>
            <comment line="192">
                IANA registry value: 0                
            </comment>
            <comment line="194">
                IANA registry value: 1                
            </comment>
            <comment line="196">
                IANA registry value: 2                
            </comment>
            <comment line="198">
                IANA registry value: 3                
            </comment>
            <comment line="200">
                IANA registry value: 4                
            </comment>
            <comment line="202">
                IANA registry value: 5                
            </comment>
            <comment line="204">
                extensions defined in RFC 4681                
            </comment>
            <comment line="206">
                IANA registry value: 6                
            </comment>
            <comment line="208">
                extensions defined in RFC 5081                
            </comment>
            <comment line="210">
                IANA registry value: 9                
            </comment>
            <comment line="212">
                extensions defined in RFC 4492 (ECC)                
            </comment>
            <comment line="214">
                IANA registry value: 10                
            </comment>
            <comment line="216">
                IANA registry value: 11                
            </comment>
            <comment line="218">
                extensions defined in RFC 5054                
            </comment>
            <comment line="220">
                IANA registry value: 12                
            </comment>
            <comment line="222">
                extensions defined in RFC 5246                
            </comment>
            <comment line="224">
                IANA registry value: 13                
            </comment>
            <comment line="226">
                extensions defined in RFC 5746                
            </comment>
            <comment line="228">
                IANA registry value: 65281                
            </comment>
            <comment line="239">
                Length of the encoded extension, including the type and length fields                
            </comment>
            <comment line="306">
                ServerNameList length                
            </comment>
            <comment line="436">
                the extension value to send in the ClientHello message                
            </comment>
            <comment line="490">
                Return a reference to the internal curveIds array.
                 The caller must NOT modify the contents.                
            </comment>
            <comment line="544">
                Test whether we support the curve with the given index.                
            </comment>
            <comment line="575">
                See sun.security.ec.NamedCurve for the OIDs                
            </comment>
            <comment line="740">
                Length of the encoded extension, including the type and length fields                
            </comment>
            <comment line="792">
                length of supported_signature_algorithms                
            </comment>
            <declaration name="renegotiated_connection" type="byte[]" line="696"/>
            <method name="RenegotiationInfoExtension" type="constructor" line="699">
                <params>
                    <param name="clientVerifyData" type="byte[]"/>
                    <param name="serverVerifyData" type="byte[]"/>
                </params>
                <comment line="714">
                    ignore both the client and server verify data.                    
                </comment>
                <scope line="702">
                    <scope line="708"/>
                </scope>
                <scope line="712"/>
            </method>
            <method name="RenegotiationInfoExtension" type="constructor" line="719">
                <params>
                    <param name="s" type="HandshakeInStream"/>
                    <param name="len" type="int"/>
                </params>
                <comment line="723">
                    check the extension length                    
                </comment>
                <comment line="729">
                    + 1 = the byte we just read                    
                </comment>
                <scope line="723"/>
                <declaration name="renegoInfoDataLen" type="int" line="727"/>
                <scope line="728"/>
                <scope line="733"/>
            </method>
            <method name="length" type="int" line="740"/>
            <method name="send" type="void" line="744">
                <params>
                    <param name="s" type="HandshakeOutStream"/>
                </params>
            </method>
            <method name="isEmpty" type="boolean" line="750"/>
            <method name="getRenegotiatedConnection" type="byte[]" line="754"/>
            <method name="toString" type="String" line="758"/>
        </class>
        <class name="SignatureAlgorithmsExtension" line="788">
            <extends class="HelloExtension"/>
            <comment line="104">
                Return the List of extensions. Must not be modified by the caller.                
            </comment>
            <comment line="190">
                extensions defined in RFC 3546                
            </comment>
            <comment line="192">
                IANA registry value: 0                
            </comment>
            <comment line="194">
                IANA registry value: 1                
            </comment>
            <comment line="196">
                IANA registry value: 2                
            </comment>
            <comment line="198">
                IANA registry value: 3                
            </comment>
            <comment line="200">
                IANA registry value: 4                
            </comment>
            <comment line="202">
                IANA registry value: 5                
            </comment>
            <comment line="204">
                extensions defined in RFC 4681                
            </comment>
            <comment line="206">
                IANA registry value: 6                
            </comment>
            <comment line="208">
                extensions defined in RFC 5081                
            </comment>
            <comment line="210">
                IANA registry value: 9                
            </comment>
            <comment line="212">
                extensions defined in RFC 4492 (ECC)                
            </comment>
            <comment line="214">
                IANA registry value: 10                
            </comment>
            <comment line="216">
                IANA registry value: 11                
            </comment>
            <comment line="218">
                extensions defined in RFC 5054                
            </comment>
            <comment line="220">
                IANA registry value: 12                
            </comment>
            <comment line="222">
                extensions defined in RFC 5246                
            </comment>
            <comment line="224">
                IANA registry value: 13                
            </comment>
            <comment line="226">
                extensions defined in RFC 5746                
            </comment>
            <comment line="228">
                IANA registry value: 65281                
            </comment>
            <comment line="239">
                Length of the encoded extension, including the type and length fields                
            </comment>
            <comment line="306">
                ServerNameList length                
            </comment>
            <comment line="436">
                the extension value to send in the ClientHello message                
            </comment>
            <comment line="490">
                Return a reference to the internal curveIds array.
                 The caller must NOT modify the contents.                
            </comment>
            <comment line="544">
                Test whether we support the curve with the given index.                
            </comment>
            <comment line="575">
                See sun.security.ec.NamedCurve for the OIDs                
            </comment>
            <comment line="740">
                Length of the encoded extension, including the type and length fields                
            </comment>
            <comment line="792">
                length of supported_signature_algorithms                
            </comment>
            <declaration name="algorithms" type="Collection&lt;SignatureAndHashAlgorithm&gt;" line="790"/>
            <declaration name="algorithmsLen" type="int" line="791"/>
            <method name="SignatureAlgorithmsExtension" type="constructor" line="794">
                <params>
                    <param name="signAlgs" type="Collection<SignatureAndHashAlgorithm>"/>
                </params>
            </method>
            <method name="SignatureAlgorithmsExtension" type="constructor" line="804">
                <params>
                    <param name="s" type="HandshakeInStream"/>
                    <param name="len" type="int"/>
                </params>
                <comment line="816">
                    needs at least two bytes                    
                </comment>
                <comment line="817">
                    hash algorithm                    
                </comment>
                <comment line="818">
                    signature algorithm                    
                </comment>
                <comment line="823">
                    one byte for hash, one byte for signature                    
                </comment>
                <scope line="808"/>
                <declaration name="remains" type="int" line="813"/>
                <declaration name="sequence" type="int" line="814"/>
                <scope line="815">
                    <declaration name="hash" type="int" line="816"/>
                    <declaration name="signature" type="int" line="817"/>
                    <declaration name="algorithm" type="SignatureAndHashAlgorithm" line="819"/>
                </scope>
                <scope line="825"/>
            </method>
            <method name="getSignAlgorithms" type="Collection<SignatureAndHashAlgorithm>" line="830"/>
            <method name="length" type="int" line="835"/>
            <method name="send" type="void" line="840">
                <params>
                    <param name="s" type="HandshakeOutStream"/>
                </params>
                <comment line="847">
                    HashAlgorithm                    
                </comment>
                <comment line="848">
                    SignatureAlgorithm                    
                </comment>
                <scope line="845"/>
            </method>
            <method name="toString" type="String" line="852">
                <declaration name="buffer" type="StringBuffer" line="853"/>
                <declaration name="opened" type="boolean" line="854"/>
                <scope line="855">
                    <scope line="856"/>
                    <scope line="858"/>
                </scope>
            </method>
        </class>
    </source>