<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.ssl">
        <import package="java.io.IOException"/>
        <import package="java.io.PrintStream"/>
        <import package="java.util"/>
        <import package="java.security.spec.ECParameterSpec"/>
        <import package="javax.net.ssl.SSLProtocolException"/>
        <class name="HelloExtensions" line="7">
            <javadoc line="7">
                This file contains all the classes relevant to TLS Extensions for the
                  ClientHello and ServerHello messages. The extension mechanism and
                  several extensions are defined in RFC 3546. Additional extensions are
                  defined in the ECC RFC 4492.
                  Currently, only the two ECC extensions are fully supported.
                  The classes contained in this file are:
                  . HelloExtensions: a List of extensions as used in the client hello
                  and server hello messages.
                  . ExtensionType: an enum style class for the extension type
                  . HelloExtension: abstract base class for all extensions. All subclasses
                  must be immutable.
                  . UnknownExtension: used to represent all parsed extensions that we do not
                  explicitly support.
                  . ServerNameExtension: the server_name extension.
                  . SignatureAlgorithmsExtension: the signature_algorithms extension.
                  . SupportedEllipticCurvesExtension: the ECC supported curves extension.
                  . SupportedEllipticPointFormatsExtension: the ECC supported point formats
                  (compressed/uncompressed) extension.                
                <since>
                    1.6                    
                </since>
                <author>
                    Andreas Sterbenz                    
                </author>
            </javadoc>
            <declaration name="extensions" type="List&lt;HelloExtension&gt;" line="30"/>
            <declaration name="encodedLength" type="int" line="31"/>
            <method name="HelloExtensions" type="constructor" line="32"/>
            <method name="HelloExtensions" type="constructor" line="35">
                <params>
                    <param name="s" type="HandshakeInStream"/>
                </params>
                <declaration name="len" type="int" line="36"/>
                <scope line="39">
                    <declaration name="type" type="int" line="40"/>
                    <declaration name="extlen" type="int" line="41"/>
                    <declaration name="extType" type="ExtensionType" line="42"/>
                    <declaration name="extension" type="HelloExtension" line="43"/>
                    <scope line="44"/>
                    <scope line="47"/>
                    <scope line="50"/>
                    <scope line="53"/>
                    <scope line="56"/>
                    <scope line="59"/>
                </scope>
                <scope line="65"/>
            </method>
            <method name="list" type="List<HelloExtension>" line="69"/>
            <method name="add" type="void" line="72">
                <params>
                    <param name="ext" type="HelloExtension"/>
                </params>
                <scope line="73"/>
            </method>
            <method name="get" type="HelloExtension" line="79">
                <params>
                    <param name="type" type="ExtensionType"/>
                </params>
                <scope line="80">
                    <scope line="81"/>
                </scope>
            </method>
            <method name="length" type="int" line="87">
                <scope line="88"/>
                <scope line="91"/>
                <scope line="94">
                    <scope line="96"/>
                </scope>
            </method>
            <method name="send" type="void" line="102">
                <params>
                    <param name="s" type="HandshakeOutStream"/>
                </params>
                <declaration name="length" type="int" line="103"/>
                <scope line="104"/>
                <scope line="108"/>
            </method>
            <method name="print" type="void" line="112">
                <params>
                    <param name="s" type="PrintStream"/>
                </params>
                <scope line="113"/>
            </method>
        </class>
        <class name="ExtensionType" line="118">
            <declaration name="id" type="int" line="119"/>
            <declaration name="name" type="String" line="120"/>
            <method name="ExtensionType" type="constructor" line="121">
                <params>
                    <param name="id" type="int"/>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="toString" type="String" line="125"/>
            <declaration name="knownExtensions" type="List&lt;ExtensionType&gt;" line="128"/>
            <method name="get" type="ExtensionType" line="129">
                <params>
                    <param name="id" type="int"/>
                </params>
                <scope line="130">
                    <scope line="131"/>
                </scope>
            </method>
            <method name="e" type="ExtensionType" line="137">
                <params>
                    <param name="id" type="int"/>
                    <param name="name" type="String"/>
                </params>
                <declaration name="ext" type="ExtensionType" line="138"/>
            </method>
            <declaration name="EXT_SERVER_NAME" type="ExtensionType" line="142"/>
            <declaration name="EXT_MAX_FRAGMENT_LENGTH" type="ExtensionType" line="143"/>
            <declaration name="EXT_CLIENT_CERTIFICATE_URL" type="ExtensionType" line="144"/>
            <declaration name="EXT_TRUSTED_CA_KEYS" type="ExtensionType" line="145"/>
            <declaration name="EXT_TRUNCATED_HMAC" type="ExtensionType" line="146"/>
            <declaration name="EXT_STATUS_REQUEST" type="ExtensionType" line="147"/>
            <declaration name="EXT_USER_MAPPING" type="ExtensionType" line="148"/>
            <declaration name="EXT_CERT_TYPE" type="ExtensionType" line="149"/>
            <declaration name="EXT_ELLIPTIC_CURVES" type="ExtensionType" line="150"/>
            <declaration name="EXT_EC_POINT_FORMATS" type="ExtensionType" line="151"/>
            <declaration name="EXT_SRP" type="ExtensionType" line="152"/>
            <declaration name="EXT_SIGNATURE_ALGORITHMS" type="ExtensionType" line="153"/>
            <declaration name="EXT_RENEGOTIATION_INFO" type="ExtensionType" line="154"/>
        </class>
        <class name="HelloExtension" line="156">
            <declaration name="type" type="ExtensionType" line="157"/>
            <method name="HelloExtension" type="constructor" line="158">
                <params>
                    <param name="type" type="ExtensionType"/>
                </params>
            </method>
            <method name="length" type="int" line="161"/>
            <method name="send" type="void" line="162"/>
            <method name="toString" type="String" line="163"/>
        </class>
        <class name="UnknownExtension" line="165">
            <extends class="HelloExtension"/>
            <declaration name="data" type="byte[]" line="166"/>
            <method name="UnknownExtension" type="constructor" line="167">
                <params>
                    <param name="s" type="HandshakeInStream"/>
                    <param name="len" type="int"/>
                    <param name="type" type="ExtensionType"/>
                </params>
                <scope line="170"/>
            </method>
            <method name="length" type="int" line="174"/>
            <method name="send" type="void" line="177">
                <params>
                    <param name="s" type="HandshakeOutStream"/>
                </params>
            </method>
            <method name="toString" type="String" line="181"/>
        </class>
        <class name="ServerNameExtension" line="185">
            <extends class="HelloExtension"/>
            <declaration name="NAME_HOST_NAME" type="int" line="186"/>
            <declaration name="names" type="List&lt;ServerName&gt;" line="187"/>
            <declaration name="listLength" type="int" line="188"/>
            <method name="ServerNameExtension" type="constructor" line="189">
                <params>
                    <param name="hostnames" type="List<String>"/>
                </params>
                <scope line="193">
                    <scope line="194">
                        <declaration name="serverName" type="ServerName" line="195"/>
                    </scope>
                </scope>
                <scope line="200"/>
                <scope line="203"/>
            </method>
            <method name="ServerNameExtension" type="constructor" line="207">
                <params>
                    <param name="s" type="HandshakeInStream"/>
                    <param name="len" type="int"/>
                </params>
                <declaration name="remains" type="int" line="209"/>
                <scope line="210">
                    <scope line="212"/>
                    <scope line="217">
                        <declaration name="name" type="ServerName" line="218"/>
                    </scope>
                </scope>
                <scope line="223"/>
                <scope line="227"/>
            </method>
            <class name="ServerName" line="231">
                <declaration name="length" type="int" line="232"/>
                <declaration name="type" type="int" line="233"/>
                <declaration name="data" type="byte[]" line="234"/>
                <declaration name="hostname" type="String" line="235"/>
                <method name="ServerName" type="constructor" line="236">
                    <params>
                        <param name="type" type="int"/>
                        <param name="hostname" type="String"/>
                    </params>
                </method>
                <method name="ServerName" type="constructor" line="242">
                    <params>
                        <param name="s" type="HandshakeInStream"/>
                    </params>
                    <scope line="246"/>
                    <scope line="249"/>
                </method>
                <method name="toString" type="String" line="253">
                    <scope line="254"/>
                    <scope line="257"/>
                </method>
            </class>
            <method name="length" type="int" line="262"/>
            <method name="send" type="void" line="265">
                <params>
                    <param name="s" type="HandshakeOutStream"/>
                </params>
                <scope line="268">
                    <scope line="270"/>
                </scope>
            </method>
            <method name="toString" type="String" line="276">
                <declaration name="buffer" type="StringBuffer" line="277"/>
                <scope line="278"/>
            </method>
        </class>
        <class name="SupportedEllipticCurvesExtension" line="284">
            <extends class="HelloExtension"/>
            <declaration name="DEFAULT" type="SupportedEllipticCurvesExtension" line="285"/>
            <declaration name="fips" type="boolean" line="286"/>
            <scope line="287">
                <declaration name="ids" type="int[]" line="288"/>
                <scope line="290"/>
                <scope line="293"/>
            </scope>
            <declaration name="curveIds" type="int[]" line="298"/>
            <method name="SupportedEllipticCurvesExtension" type="constructor" line="299">
                <params>
                    <param name="curveIds" type="int[]"/>
                </params>
            </method>
            <method name="SupportedEllipticCurvesExtension" type="constructor" line="303">
                <params>
                    <param name="s" type="HandshakeInStream"/>
                    <param name="len" type="int"/>
                </params>
                <declaration name="k" type="int" line="305"/>
                <scope line="306"/>
                <scope line="310"/>
            </method>
            <method name="contains" type="boolean" line="314">
                <params>
                    <param name="index" type="int"/>
                </params>
                <scope line="315">
                    <scope line="316"/>
                </scope>
            </method>
            <method name="curveIds" type="int[]" line="322"/>
            <method name="length" type="int" line="325"/>
            <method name="send" type="void" line="328">
                <params>
                    <param name="s" type="HandshakeOutStream"/>
                </params>
                <declaration name="k" type="int" line="330"/>
                <scope line="333"/>
            </method>
            <method name="toString" type="String" line="337">
                <declaration name="sb" type="StringBuilder" line="338"/>
                <declaration name="first" type="boolean" line="340"/>
                <scope line="341">
                    <scope line="342"/>
                    <scope line="345"/>
                    <declaration name="oid" type="String" line="348"/>
                    <scope line="349">
                        <declaration name="spec" type="ECParameterSpec" line="350"/>
                        <scope line="351"/>
                        <scope line="354"/>
                    </scope>
                    <scope line="358"/>
                    <scope line="361"/>
                    <scope line="364"/>
                </scope>
            </method>
            <method name="isSupported" type="boolean" line="371">
                <params>
                    <param name="index" type="int"/>
                </params>
                <scope line="372"/>
                <scope line="375"/>
            </method>
            <method name="getCurveIndex" type="int" line="380">
                <params>
                    <param name="params" type="ECParameterSpec"/>
                </params>
                <declaration name="oid" type="String" line="381"/>
                <scope line="382"/>
                <declaration name="n" type="Integer" line="385"/>
            </method>
            <method name="getCurveOid" type="String" line="388">
                <params>
                    <param name="index" type="int"/>
                </params>
                <scope line="389"/>
            </method>
            <declaration name="ARBITRARY_PRIME" type="int" line="394"/>
            <declaration name="ARBITRARY_CHAR2" type="int" line="395"/>
            <declaration name="NAMED_CURVE_OID_TABLE" type="String[]" line="396"/>
            <declaration name="curveIndices" type="Map&lt;String,Integer&gt;" line="397"/>
            <scope line="398">
                <scope line="400"/>
            </scope>
        </class>
        <class name="SupportedEllipticPointFormatsExtension" line="405">
            <extends class="HelloExtension"/>
            <declaration name="FMT_UNCOMPRESSED" type="int" line="406"/>
            <declaration name="FMT_ANSIX962_COMPRESSED_PRIME" type="int" line="407"/>
            <declaration name="FMT_ANSIX962_COMPRESSED_CHAR2" type="int" line="408"/>
            <declaration name="DEFAULT" type="HelloExtension" line="409"/>
            <declaration name="formats" type="byte[]" line="410"/>
            <method name="SupportedEllipticPointFormatsExtension" type="constructor" line="411">
                <params>
                    <param name="formats" type="byte[]"/>
                </params>
            </method>
            <method name="SupportedEllipticPointFormatsExtension" type="constructor" line="415">
                <params>
                    <param name="s" type="HandshakeInStream"/>
                    <param name="len" type="int"/>
                </params>
                <declaration name="uncompressed" type="boolean" line="418"/>
                <scope line="419">
                    <scope line="420"/>
                </scope>
                <scope line="425"/>
            </method>
            <method name="length" type="int" line="429"/>
            <method name="send" type="void" line="432">
                <params>
                    <param name="s" type="HandshakeOutStream"/>
                </params>
            </method>
            <method name="toString" type="String" line="437">
                <params>
                    <param name="format" type="byte"/>
                </params>
                <declaration name="f" type="int" line="438"/>
            </method>
            <method name="toString" type="String" line="450">
                <declaration name="list" type="List&lt;String&gt;" line="451"/>
                <scope line="452"/>
            </method>
        </class>
        <class name="RenegotiationInfoExtension" line="458">
            <extends class="HelloExtension"/>
            <declaration name="renegotiated_connection" type="byte[]" line="459"/>
            <method name="RenegotiationInfoExtension" type="constructor" line="460">
                <params>
                    <param name="clientVerifyData" type="byte[]"/>
                    <param name="serverVerifyData" type="byte[]"/>
                </params>
                <scope line="462">
                    <scope line="465"/>
                </scope>
                <scope line="469"/>
            </method>
            <method name="RenegotiationInfoExtension" type="constructor" line="473">
                <params>
                    <param name="s" type="HandshakeInStream"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="475"/>
                <declaration name="renegoInfoDataLen" type="int" line="478"/>
                <scope line="479"/>
                <scope line="483"/>
            </method>
            <method name="length" type="int" line="487"/>
            <method name="send" type="void" line="490">
                <params>
                    <param name="s" type="HandshakeOutStream"/>
                </params>
            </method>
            <method name="isEmpty" type="boolean" line="495"/>
            <method name="getRenegotiatedConnection" type="byte[]" line="498"/>
            <method name="toString" type="String" line="501"/>
        </class>
        <class name="SignatureAlgorithmsExtension" line="505">
            <extends class="HelloExtension"/>
            <declaration name="algorithms" type="Collection&lt;SignatureAndHashAlgorithm&gt;" line="506"/>
            <declaration name="algorithmsLen" type="int" line="507"/>
            <method name="SignatureAlgorithmsExtension" type="constructor" line="508">
                <params>
                    <param name="signAlgs" type="Collection<SignatureAndHashAlgorithm>"/>
                </params>
            </method>
            <method name="SignatureAlgorithmsExtension" type="constructor" line="513">
                <params>
                    <param name="s" type="HandshakeInStream"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="516"/>
                <declaration name="remains" type="int" line="520"/>
                <declaration name="sequence" type="int" line="521"/>
                <scope line="522">
                    <declaration name="hash" type="int" line="523"/>
                    <declaration name="signature" type="int" line="524"/>
                    <declaration name="algorithm" type="SignatureAndHashAlgorithm" line="525"/>
                </scope>
                <scope line="529"/>
            </method>
            <method name="getSignAlgorithms" type="Collection<SignatureAndHashAlgorithm>" line="533"/>
            <method name="length" type="int" line="536"/>
            <method name="send" type="void" line="539">
                <params>
                    <param name="s" type="HandshakeOutStream"/>
                </params>
                <scope line="543"/>
            </method>
            <method name="toString" type="String" line="548">
                <declaration name="buffer" type="StringBuffer" line="549"/>
                <declaration name="opened" type="boolean" line="550"/>
                <scope line="551">
                    <scope line="552"/>
                    <scope line="555"/>
                </scope>
            </method>
        </class>
    </source>