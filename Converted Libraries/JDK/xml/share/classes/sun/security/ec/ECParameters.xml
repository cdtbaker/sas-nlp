<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.ec">
        <import package="java.io.IOException"/>
        <import package="java.math.BigInteger"/>
        <import package="java.security"/>
        <import package="java.security.spec"/>
        <import package="sun.security.util"/>
        <class name="ECParameters" line="7">
            <extends class="AlgorithmParametersSpi"/>
            <javadoc line="7">
                This class implements encoding and decoding of Elliptic Curve parameters
                  as specified in RFC 3279.
                  However, only named curves are currently supported.
                  ASN.1 from RFC 3279 follows. Note that X9.62 (2005) has added some additional
                  options.
                  &lt;pre&gt;
                  EcpkParameters ::= CHOICE {
                  ecParameters  ECParameters,
                  namedCurve    OBJECT IDENTIFIER,
                  implicitlyCA  NULL }
                  ECParameters ::= SEQUENCE {
                  version   ECPVer,          -- version is always 1
                  fieldID   FieldID,         -- identifies the finite field over
                  -- which the curve is defined
                  curve     Curve,           -- coefficients a and b of the
                  -- elliptic curve
                  base      ECPoint,         -- specifies the base point P
                  -- on the elliptic curve
                  order     INTEGER,         -- the order n of the base point
                  cofactor  INTEGER OPTIONAL -- The integer h = #E(Fq)/n
                  }
                  ECPVer ::= INTEGER {ecpVer1(1)}
                  Curve ::= SEQUENCE {
                  a         FieldElement,
                  b         FieldElement,
                  seed      BIT STRING OPTIONAL }
                  FieldElement ::= OCTET STRING
                  ECPoint ::= OCTET STRING
                  &lt;/pre&gt;                
                <since>
                    1.6                    
                </since>
                <author>
                    Andreas Sterbenz                    
                </author>
            </javadoc>
            <method name="ECParameters" type="constructor" line="41"/>
            <method name="decodePoint" type="ECPoint" line="43">
                <params>
                    <param name="data" type="byte[]"/>
                    <param name="curve" type="EllipticCurve"/>
                </params>
                <scope line="44"/>
                <declaration name="n" type="int" line="47"/>
                <scope line="48"/>
                <declaration name="xb" type="byte[]" line="51"/>
                <declaration name="yb" type="byte[]" line="52"/>
            </method>
            <method name="encodePoint" type="byte[]" line="57">
                <params>
                    <param name="point" type="ECPoint"/>
                    <param name="curve" type="EllipticCurve"/>
                </params>
                <declaration name="n" type="int" line="58"/>
                <declaration name="xb" type="byte[]" line="59"/>
                <declaration name="yb" type="byte[]" line="60"/>
                <scope line="61"/>
                <declaration name="b" type="byte[]" line="64"/>
            </method>
            <method name="trimZeroes" type="byte[]" line="70">
                <params>
                    <param name="b" type="byte[]"/>
                </params>
                <declaration name="i" type="int" line="71"/>
                <scope line="72"/>
                <scope line="75"/>
                <declaration name="t" type="byte[]" line="78"/>
            </method>
            <method name="getNamedCurve" type="NamedCurve" line="82">
                <params>
                    <param name="params" type="ECParameterSpec"/>
                </params>
                <scope line="83"/>
                <declaration name="fieldSize" type="int" line="86"/>
                <scope line="87">
                    <scope line="88"/>
                    <scope line="91"/>
                    <scope line="94"/>
                    <scope line="97"/>
                    <scope line="100"/>
                </scope>
            </method>
            <method name="getCurveName" type="String" line="107">
                <params>
                    <param name="params" type="ECParameterSpec"/>
                </params>
                <declaration name="curve" type="NamedCurve" line="108"/>
            </method>
            <method name="encodeParameters" type="byte[]" line="111">
                <params>
                    <param name="params" type="ECParameterSpec"/>
                </params>
                <declaration name="curve" type="NamedCurve" line="112"/>
                <scope line="113"/>
            </method>
            <method name="decodeParameters" type="ECParameterSpec" line="118">
                <params>
                    <param name="params" type="byte[]"/>
                </params>
                <declaration name="encodedParams" type="DerValue" line="119"/>
                <scope line="120">
                    <declaration name="oid" type="ObjectIdentifier" line="121"/>
                    <declaration name="spec" type="ECParameterSpec" line="122"/>
                    <scope line="123"/>
                </scope>
            </method>
            <method name="getAlgorithmParameters" type="AlgorithmParameters" line="130">
                <params>
                    <param name="spec" type="ECParameterSpec"/>
                </params>
                <scope line="131">
                    <declaration name="params" type="AlgorithmParameters" line="132"/>
                </scope>
                <scope line="136"/>
            </method>
            <declaration name="paramSpec" type="ECParameterSpec" line="140"/>
            <method name="engineInit" type="void" line="141">
                <params>
                    <param name="paramSpec" type="AlgorithmParameterSpec"/>
                </params>
                <scope line="142">
                    <scope line="144"/>
                </scope>
                <scope line="148">
                    <declaration name="name" type="String" line="149"/>
                    <declaration name="spec" type="ECParameterSpec" line="150"/>
                    <scope line="151"/>
                </scope>
                <scope line="156"/>
                <scope line="159"/>
            </method>
            <method name="engineInit" type="void" line="163">
                <params>
                    <param name="params" type="byte[]"/>
                </params>
            </method>
            <method name="engineInit" type="void" line="166">
                <params>
                    <param name="params" type="byte[]"/>
                    <param name="decodingMethod" type="String"/>
                </params>
            </method>
            <method name="engineGetParameterSpec" type="T" line="169">
                <params>
                    <param name="spec" type="Class<T>"/>
                </params>
                <scope line="170"/>
                <scope line="173"/>
                <scope line="176"/>
            </method>
            <method name="engineGetEncoded" type="byte[]" line="180"/>
            <method name="engineGetEncoded" type="byte[]" line="183">
                <params>
                    <param name="encodingMethod" type="String"/>
                </params>
            </method>
            <method name="engineToString" type="String" line="186"/>
        </class>
    </source>