<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.ec">
        <import package="java.io.IOException"/>
        <import package="java.math.BigInteger"/>
        <import package="java.security"/>
        <import package="java.security.interfaces"/>
        <import package="java.security.spec"/>
        <import package="sun.security.util"/>
        <import package="sun.security.x509.AlgorithmId"/>
        <import package="sun.security.pkcs.PKCS8Key"/>
        <class name="ECPrivateKeyImpl" line="39">
            <extends class="PKCS8Key"/>
            <comment line="67">
                private value                
            </comment>
            <comment line="103">
                see JCA doc                
            </comment>
            <comment line="108">
                see JCA doc                
            </comment>
            <comment line="113">
                see JCA doc                
            </comment>
            <comment line="158">
                return a string representation of this key for debugging                
            </comment>
            <implements interface="ECPrivateKey"/>
            <javadoc line="39">
                Key implementation for EC private keys.
                  ASN.1 syntax for EC private keys from SEC 1 v1.5 (draft):
                  &lt;pre&gt;
                  EXPLICIT TAGS
                  ECPrivateKey ::= SEQUENCE {
                  version INTEGER { ecPrivkeyVer1(1) } (ecPrivkeyVer1),
                  privateKey OCTET STRING,
                  parameters [0] ECDomainParameters {{ SECGCurveNames }} OPTIONAL,
                  publicKey [1] BIT STRING OPTIONAL
                  }
                  &lt;/pre&gt;
                  We currently ignore the optional parameters and publicKey fields. We
                  require that the parameters are encoded as part of the AlgorithmIdentifier,
                  not in the private key structure.                
                <since>
                    1.6                    
                </since>
                <author>
                    Andreas Sterbenz                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="64"/>
            <declaration name="s" type="BigInteger" line="66"/>
            <declaration name="params" type="ECParameterSpec" line="67"/>
            <javadoc line="69">
                Construct a key from its encoding. Called by the ECKeyFactory and
                  the SunPKCS11 code.                
            </javadoc>
            <method name="ECPrivateKeyImpl" type="constructor" line="73">
                <params>
                    <param name="encoded" type="byte[]"/>
                </params>
            </method>
            <javadoc line="77">
                Construct a key from its components. Used by the
                  KeyFactory and the SunPKCS11 code.                
            </javadoc>
            <method name="ECPrivateKeyImpl" type="constructor" line="82">
                <params>
                    <param name="s" type="BigInteger"/>
                    <param name="params" type="ECParameterSpec"/>
                </params>
                <comment line="85">
                    generate the encoding                    
                </comment>
                <comment line="90">
                    version 1                    
                </comment>
                <comment line="97">
                    should never occur                    
                </comment>
                <scope line="88">
                    <declaration name="out" type="DerOutputStream" line="89"/>
                    <declaration name="privBytes" type="byte[]" line="91"/>
                    <declaration name="val" type="DerValue" line="93"/>
                </scope>
                <scope line="96"/>
            </method>
            <method name="getAlgorithm" type="String" line="103"/>
            <method name="getS" type="BigInteger" line="108"/>
            <method name="getParams" type="ECParameterSpec" line="113"/>
            <javadoc line="117">
                Parse the key. Called by PKCS8Key.                
            </javadoc>
            <method name="parseKeyBits" type="void" line="120">
                <comment line="137">
                    ignore for now                    
                </comment>
                <comment line="139">
                    ignore for now                    
                </comment>
                <scope line="121">
                    <declaration name="in" type="DerInputStream" line="122"/>
                    <declaration name="derValue" type="DerValue" line="123"/>
                    <scope line="124"/>
                    <declaration name="data" type="DerInputStream" line="127"/>
                    <declaration name="version" type="int" line="128"/>
                    <scope line="129"/>
                    <declaration name="privData" type="byte[]" line="132"/>
                    <scope line="134">
                        <declaration name="value" type="DerValue" line="135"/>
                        <scope line="136"/>
                        <scope line="138"/>
                        <scope line="140"/>
                    </scope>
                    <declaration name="algParams" type="AlgorithmParameters" line="144"/>
                    <scope line="145"/>
                </scope>
                <scope line="150"/>
                <scope line="152"/>
            </method>
            <method name="toString" type="String" line="158"/>
        </class>
    </source>