<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.ec">
        <import package="java.security"/>
        <import package="java.security.interfaces"/>
        <import package="java.security.spec"/>
        <import package="javax.crypto"/>
        <import package="javax.crypto.spec"/>
        <class name="ECDHKeyAgreement" line="35">
            <extends class="KeyAgreementSpi"/>
            <comment line="43">
                private key, if initialized                
            </comment>
            <comment line="46">
                encoded public point, non-null between doPhase() &amp; generateSecret() only                
            </comment>
            <comment line="49">
                length of the secret to be derived                
            </comment>
            <comment line="58">
                see JCE spec                
            </comment>
            <comment line="70">
                see JCE spec                
            </comment>
            <comment line="82">
                see JCE spec                
            </comment>
            <comment line="116">
                see JCE spec                
            </comment>
            <comment line="137">
                see JCE spec                
            </comment>
            <comment line="150">
                see JCE spec                
            </comment>
            <javadoc line="35">
                KeyAgreement implementation for ECDH.                
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="privateKey" type="ECPrivateKey" line="43"/>
            <declaration name="publicValue" type="byte[]" line="46"/>
            <declaration name="secretLen" type="int" line="49"/>
            <javadoc line="51">
                Constructs a new ECDHKeyAgreement.                
            </javadoc>
            <method name="ECDHKeyAgreement" type="constructor" line="54"/>
            <method name="engineInit" type="void" line="60">
                <params>
                    <param name="key" type="Key"/>
                    <param name="random" type="SecureRandom"/>
                </params>
                <scope line="61"/>
            </method>
            <method name="engineInit" type="void" line="73">
                <params>
                    <param name="key" type="Key"/>
                    <param name="params" type="AlgorithmParameterSpec"/>
                    <param name="random" type="SecureRandom"/>
                </params>
                <scope line="74"/>
            </method>
            <method name="engineDoPhase" type="Key" line="84">
                <params>
                    <param name="key" type="Key"/>
                    <param name="lastPhase" type="boolean"/>
                </params>
                <comment line="105">
                    instanceof ECPublicKey                    
                </comment>
                <scope line="85"/>
                <scope line="88"/>
                <scope line="91"/>
                <scope line="95"/>
                <declaration name="ecKey" type="ECPublicKey" line="100"/>
                <declaration name="params" type="ECParameterSpec" line="101"/>
                <scope line="103"/>
                <scope line="105"/>
                <declaration name="keyLenBits" type="int" line="109"/>
            </method>
            <method name="engineGenerateSecret" type="byte[]" line="117">
                <comment line="124">
                    DER OID                    
                </comment>
                <scope line="118"/>
                <declaration name="s" type="byte[]" line="122"/>
                <declaration name="encodedParams" type="byte[]" line="123"/>
                <scope line="126"/>
                <scope line="130"/>
            </method>
            <method name="engineGenerateSecret" type="int" line="139">
                <params>
                    <param name="sharedSecret" type="byte[]"/>
                    <param name="offset" type="int"/>
                </params>
                <scope line="140"/>
                <declaration name="secret" type="byte[]" line="144"/>
            </method>
            <method name="engineGenerateSecret" type="SecretKey" line="153">
                <params>
                    <param name="algorithm" type="String"/>
                </params>
                <scope line="154"/>
                <scope line="157"/>
            </method>
            <method name="deriveKey" type="byte[]" line="164"/>
            <javadoc line="164">
                Generates a secret key using the public and private keys.                
                <param>
                    s the private key's S value.                    
                </param>
                <param>
                    w the public key's W point (in uncompressed form).                    
                </param>
                <param>
                    encodedParams the curve's DER encoded object identifier.                    
                </param>
                <return>
                    byte[] the secret key.                    
                </return>
            </javadoc>
        </class>
    </source>