<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.ec">
        <import package="java.security"/>
        <import package="java.security.interfaces"/>
        <import package="java.security.spec"/>
        <import package="javax.crypto"/>
        <import package="javax.crypto.spec"/>
        <class name="ECDHKeyAgreement" line="7">
            <extends class="KeyAgreementSpi"/>
            <javadoc line="7">
                KeyAgreement implementation for ECDH.                
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="privateKey" type="ECPrivateKey" line="12"/>
            <declaration name="publicValue" type="byte[]" line="13"/>
            <declaration name="secretLen" type="int" line="14"/>
            <javadoc line="15">
                Constructs a new ECDHKeyAgreement.                
            </javadoc>
            <method name="ECDHKeyAgreement" type="constructor" line="18"/>
            <method name="engineInit" type="void" line="20">
                <params>
                    <param name="key" type="Key"/>
                    <param name="random" type="SecureRandom"/>
                </params>
                <scope line="21"/>
            </method>
            <method name="engineInit" type="void" line="27">
                <params>
                    <param name="key" type="Key"/>
                    <param name="params" type="AlgorithmParameterSpec"/>
                    <param name="random" type="SecureRandom"/>
                </params>
                <scope line="28"/>
            </method>
            <method name="engineDoPhase" type="Key" line="33">
                <params>
                    <param name="key" type="Key"/>
                    <param name="lastPhase" type="boolean"/>
                </params>
                <scope line="34"/>
                <scope line="37"/>
                <scope line="40"/>
                <scope line="43"/>
                <declaration name="ecKey" type="ECPublicKey" line="46"/>
                <declaration name="params" type="ECParameterSpec" line="47"/>
                <scope line="48"/>
                <scope line="51"/>
                <declaration name="keyLenBits" type="int" line="54"/>
            </method>
            <method name="engineGenerateSecret" type="byte[]" line="58">
                <scope line="59"/>
                <declaration name="s" type="byte[]" line="62"/>
                <declaration name="encodedParams" type="byte[]" line="63"/>
                <scope line="64"/>
                <scope line="67"/>
            </method>
            <method name="engineGenerateSecret" type="int" line="71">
                <params>
                    <param name="sharedSecret" type="byte[]"/>
                    <param name="offset" type="int"/>
                </params>
                <scope line="72"/>
                <declaration name="secret" type="byte[]" line="75"/>
            </method>
            <method name="engineGenerateSecret" type="SecretKey" line="79">
                <params>
                    <param name="algorithm" type="String"/>
                </params>
                <scope line="80"/>
                <scope line="83"/>
            </method>
            <method name="deriveKey" type="byte[]" line="88"/>
            <javadoc line="88">
                Generates a secret key using the public and private keys.                
                <param>
                    s the private key&apos;s S value.                    
                </param>
                <param>
                    w the public key&apos;s W point (in uncompressed form).                    
                </param>
                <param>
                    encodedParams the curve&apos;s DER encoded object identifier.                    
                </param>
                <return>
                    byte[] the secret key.                    
                </return>
            </javadoc>
        </class>
    </source>