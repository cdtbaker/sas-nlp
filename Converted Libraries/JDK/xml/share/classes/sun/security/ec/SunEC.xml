<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.ec">
        <import package="java.util"/>
        <import package="java.security"/>
        <import package="sun.security.action.PutAllAction"/>
        <class name="SunEC" line="32">
            <extends class="Provider"/>
            <comment line="54">
                flag indicating whether the full EC implementation is present                
            </comment>
            <comment line="55">
                (when native library is absent then fewer EC algorithms are available)                
            </comment>
            <javadoc line="32">
                Provider class for the Elliptic Curve provider.
                  Supports EC keypair and parameter generation, ECDSA signing and
                  ECDH key agreement.
                  IMPLEMENTATION NOTE:
                  The Java classes in this provider access a native ECC implementation
                  via JNI to a C++ wrapper class which in turn calls C functions.
                  The Java classes are packaged into the signed sunec.jar in the JRE
                  extensions directory and the C++ and C functions are packaged into
                  libsunec.so or sunec.dll in the JRE native libraries directory.
                  If the native library is not present then this provider is registered
                  with support for fewer ECC algorithms (KeyPairGenerator, Signature and
                  KeyAgreement are omitted).                
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="51"/>
            <declaration name="useFullImplementation" type="boolean" line="55"/>
            <scope line="56">
                <scope line="57">
                    <anonymous_class line="58">
                        <method name="run" type="Void" line="59">
                            <comment line="60">
                                check for native library                                
                            </comment>
                        </method>
                    </anonymous_class>
                </scope>
                <scope line="64"/>
            </scope>
            <method name="SunEC" type="constructor" line="69">
                <comment line="72">
                    if there is no security manager installed, put directly into                    
                </comment>
                <comment line="73">
                    the provider. Otherwise, create a temporary map and use a                    
                </comment>
                <comment line="74">
                    doPrivileged() call at the end to transfer the contents                    
                </comment>
                <scope line="75"/>
                <scope line="77">
                    <declaration name="map" type="Map&lt;Object,Object&gt;" line="78"/>
                </scope>
            </method>
        </class>
    </source>