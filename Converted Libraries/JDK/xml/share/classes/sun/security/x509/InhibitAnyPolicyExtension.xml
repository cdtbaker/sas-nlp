<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.util.Enumeration"/>
        <import package="sun.security.util.Debug"/>
        <import package="sun.security.util.DerOutputStream"/>
        <import package="sun.security.util.DerValue"/>
        <import package="sun.security.util.ObjectIdentifier"/>
        <class name="InhibitAnyPolicyExtension" line="9">
            <extends class="Extension"/>
            <implements interface="CertAttrSet">
                <type_params>
                    <type_param name="String"/>
                </type_params>
            </implements>
            <javadoc line="9">
                This class represents the Inhibit Any-Policy Extension.
                  &lt;p&gt;The inhibit any-policy extension can be used in certificates issued
                  to CAs. The inhibit any-policy indicates that the special any-policy
                  OID, with the value {2 5 29 32 0}, is not considered an explicit
                  match for other certificate policies.  The value indicates the number
                  of additional certificates that may appear in the path before any-
                  policy is no longer permitted.  For example, a value of one indicates
                  that any-policy may be processed in certificates issued by the sub-
                  ject of this certificate, but not in additional certificates in the
                  path.
                  &lt;p&gt;
                  This extension MUST be critical.
                  &lt;p&gt;
                  The ASN.1 syntax for this extension is:
                  &lt;code&gt;&lt;pre&gt;
                  id-ce-inhibitAnyPolicy OBJECT IDENTIFIER ::=  { id-ce 54 }
                  InhibitAnyPolicy ::= SkipCerts
                  SkipCerts ::= INTEGER (0..MAX)
                  &lt;/pre&gt;&lt;/code&gt;                
                <author>
                    Anne Anderson                    
                </author>
                <see>
                    CertAttrSet                    
                </see>
                <see>
                    Extension                    
                </see>
            </javadoc>
            <declaration name="debug" type="Debug" line="34"/>
            <declaration name="IDENT" type="String" line="35"/>
            <javadoc line="35">
                Identifier for this attribute, to be used with the
                  get, set, delete methods of Certificate, x509 type.                
            </javadoc>
            <declaration name="AnyPolicy_Id" type="ObjectIdentifier" line="40"/>
            <javadoc line="40">
                Object identifier for &quot;any-policy&quot;                
            </javadoc>
            <scope line="44">
                <scope line="45"/>
                <scope line="48"/>
            </scope>
            <declaration name="NAME" type="String" line="51"/>
            <javadoc line="51">
                Attribute names.                
            </javadoc>
            <declaration name="SKIP_CERTS" type="String" line="55"/>
            <declaration name="skipCerts" type="int" line="56"/>
            <method name="encodeThis" type="void" line="57">
                <declaration name="out" type="DerOutputStream" line="58"/>
            </method>
            <javadoc line="62">
                Default constructor for this object.                
                <param>
                    skipCerts specifies the depth of the certification path.
                      Use value of -1 to request unlimited depth.                    
                </param>
            </javadoc>
            <method name="InhibitAnyPolicyExtension" type="constructor" line="67">
                <params>
                    <param name="skipCerts" type="int"/>
                </params>
            </method>
            <javadoc line="75">
                Create the extension from the passed DER encoded value of the same.                
                <param>
                    critical criticality flag to use.  Must be true for this
                      extension.                    
                </param>
                <param>
                    value a byte array holding the DER-encoded extension value.                    
                </param>
                <exception>
                    ClassCastException if value is not an array of bytes                    
                </exception>
                <exception>
                    IOException on error.                    
                </exception>
            </javadoc>
            <method name="InhibitAnyPolicyExtension" type="constructor" line="83">
                <params>
                    <param name="critical" type="Boolean"/>
                    <param name="value" type="Object"/>
                </params>
                <declaration name="val" type="DerValue" line="88"/>
                <declaration name="skipCertsValue" type="int" line="91"/>
                <scope line="93"/>
                <scope line="96"/>
            </method>
            <javadoc line="100">
                Return user readable form of extension.                
            </javadoc>
            <method name="toString" type="String" line="103">
                <declaration name="s" type="String" line="104"/>
            </method>
            <javadoc line="107">
                Encode this extension value to the output stream.                
                <param>
                    out the DerOutputStream to encode the extension to.                    
                </param>
            </javadoc>
            <method name="encode" type="void" line="111">
                <params>
                    <param name="out" type="OutputStream"/>
                </params>
                <declaration name="tmp" type="DerOutputStream" line="112"/>
                <scope line="113"/>
            </method>
            <javadoc line="121">
                Set the attribute value.                
                <param>
                    name name of attribute to set. Must be SKIP_CERTS.                    
                </param>
                <param>
                    obj  value to which attribute is to be set.  Must be Integer
                      type.                    
                </param>
                <throws>
                    IOException on error                    
                </throws>
            </javadoc>
            <method name="set" type="void" line="128">
                <params>
                    <param name="name" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="129">
                    <declaration name="skipCertsValue" type="int" line="131"/>
                    <scope line="133"/>
                    <scope line="136"/>
                </scope>
            </method>
            <javadoc line="143">
                Get the attribute value.                
                <param>
                    name name of attribute to get.  Must be SKIP_CERTS.                    
                </param>
                <returns>
                    value of the attribute.  In this case it will be of type
                      Integer.                    
                </returns>
                <throws>
                    IOException on error                    
                </throws>
            </javadoc>
            <method name="get" type="Object" line="150">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="154">
                Delete the attribute value.                
                <param>
                    name name of attribute to delete. Must be SKIP_CERTS.                    
                </param>
                <throws>
                    IOException on error.  In this case, IOException will always be
                      thrown, because the only attribute, SKIP_CERTS, is
                      required.                    
                </throws>
            </javadoc>
            <method name="delete" type="void" line="161">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="165">
                Return an enumeration of names of attributes existing within this
                  attribute.                
                <returns>
                    enumeration of elements                    
                </returns>
            </javadoc>
            <method name="getElements" type="Enumeration&lt;String&gt;" line="170">
                <declaration name="elements" type="AttributeNameEnumeration" line="171"/>
            </method>
            <javadoc line="175">
                Return the name of this attribute.                
                <returns>
                    name of attribute.                    
                </returns>
            </javadoc>
            <method name="getName" type="String" line="179"/>
        </class>
    </source>