<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.util.Enumeration"/>
        <import package="sun.security.util"/>
        <class name="SubjectAlternativeNameExtension" line="34">
            <extends class="Extension"/>
            <comment line="70">
                private data members                
            </comment>
            <comment line="73">
                Encode this extension                
            </comment>
            <implements interface="CertAttrSet">
                <type_params>
                    <type_param name="String"/>
                </type_params>
            </implements>
            <javadoc line="34">
                This represents the Subject Alternative Name Extension.
                  This extension, if present, allows the subject to specify multiple
                  alternative names.
                  &lt;p&gt;Extensions are represented as a sequence of the extension identifier
                  (Object Identifier), a boolean flag stating whether the extension is to
                  be treated as being critical and the extension value itself (this is again
                  a DER encoding of the extension value).
                  &lt;p&gt;
                  The ASN.1 syntax for this is:
                  &lt;pre&gt;
                  SubjectAltName ::= GeneralNames
                  GeneralNames ::= SEQUENCE SIZE (1..MAX) OF GeneralName
                  &lt;/pre&gt;                
                <author>
                    Amit Kapoor                    
                </author>
                <author>
                    Hemma Prafullchandra                    
                </author>
                <see>
                    Extension                    
                </see>
                <see>
                    CertAttrSet                    
                </see>
            </javadoc>
            <declaration name="IDENT" type="String" line="57"/>
            <javadoc line="57">
                Identifier for this attribute, to be used with the
                  get, set, delete methods of Certificate, x509 type.                
            </javadoc>
            <declaration name="NAME" type="String" line="63"/>
            <javadoc line="63">
                Attribute names.                
            </javadoc>
            <declaration name="SUBJECT_NAME" type="String" line="67"/>
            <declaration name="names" type="GeneralNames" line="70"/>
            <method name="encodeThis" type="void" line="73">
                <scope line="74"/>
                <declaration name="os" type="DerOutputStream" line="78"/>
            </method>
            <javadoc line="83">
                Create a SubjectAlternativeNameExtension with the passed GeneralNames.
                  The extension is marked non-critical.                
                <param>
                    names the GeneralNames for the subject.                    
                </param>
                <exception>
                    IOException on error.                    
                </exception>
            </javadoc>
            <method name="SubjectAlternativeNameExtension" type="constructor" line="91">
                <params>
                    <param name="names" type="GeneralNames"/>
                </params>
            </method>
            <javadoc line="95">
                Create a SubjectAlternativeNameExtension with the specified
                  criticality and GeneralNames.                
                <param>
                    critical true if the extension is to be treated as critical.                    
                </param>
                <param>
                    names the GeneralNames for the subject.                    
                </param>
                <exception>
                    IOException on error.                    
                </exception>
            </javadoc>
            <method name="SubjectAlternativeNameExtension" type="constructor" line="104">
                <params>
                    <param name="critical" type="Boolean"/>
                    <param name="names" type="GeneralNames"/>
                </params>
            </method>
            <javadoc line="111">
                Create a default SubjectAlternativeNameExtension. The extension
                  is marked non-critical.                
            </javadoc>
            <method name="SubjectAlternativeNameExtension" type="constructor" line="115"/>
            <javadoc line="121">
                Create the extension from the passed DER encoded value.                
                <param>
                    critical true if the extension is to be treated as critical.                    
                </param>
                <param>
                    value an array of DER encoded bytes of the actual value.                    
                </param>
                <exception>
                    ClassCastException if value is not an array of bytes                    
                </exception>
                <exception>
                    IOException on error.                    
                </exception>
            </javadoc>
            <method name="SubjectAlternativeNameExtension" type="constructor" line="130">
                <params>
                    <param name="critical" type="Boolean"/>
                    <param name="value" type="Object"/>
                </params>
                <declaration name="val" type="DerValue" line="135"/>
                <scope line="136"/>
            </method>
            <javadoc line="144">
                Returns a printable representation of the SubjectAlternativeName.                
            </javadoc>
            <method name="toString" type="String" line="147">
                <declaration name="result" type="String" line="149"/>
                <scope line="150"/>
                <scope line="152">
                    <scope line="153"/>
                </scope>
            </method>
            <javadoc line="161">
                Write the extension to the OutputStream.                
                <param>
                    out the OutputStream to write the extension to.                    
                </param>
                <exception>
                    IOException on encoding errors.                    
                </exception>
            </javadoc>
            <method name="encode" type="void" line="167">
                <params>
                    <param name="out" type="OutputStream"/>
                </params>
                <declaration name="tmp" type="DerOutputStream" line="168"/>
                <scope line="169"/>
            </method>
            <javadoc line="178">
                Set the attribute value.                
            </javadoc>
            <method name="set" type="void" line="181">
                <params>
                    <param name="name" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="182">
                    <scope line="183"/>
                </scope>
                <scope line="188"/>
            </method>
            <javadoc line="195">
                Get the attribute value.                
            </javadoc>
            <method name="get" type="Object" line="198">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="199"/>
                <scope line="201"/>
            </method>
            <javadoc line="207">
                Delete the attribute value.                
            </javadoc>
            <method name="delete" type="void" line="210">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="211"/>
                <scope line="213"/>
            </method>
            <javadoc line="220">
                Return an enumeration of names of attributes existing within this
                  attribute.                
            </javadoc>
            <method name="getElements" type="Enumeration<String>" line="224">
                <declaration name="elements" type="AttributeNameEnumeration" line="225"/>
            </method>
            <javadoc line="231">
                Return the name of this attribute.                
            </javadoc>
            <method name="getName" type="String" line="234"/>
        </class>
    </source>