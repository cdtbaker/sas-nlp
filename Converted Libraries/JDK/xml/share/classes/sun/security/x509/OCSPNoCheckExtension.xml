<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.util.Enumeration"/>
        <import package="sun.security.util"/>
        <class name="OCSPNoCheckExtension" line="6">
            <extends class="Extension"/>
            <implements interface="CertAttrSet">
                <type_params>
                    <type_param name="String"/>
                </type_params>
            </implements>
            <javadoc line="6">
                Represent the OCSP NoCheck Extension from RFC2560.
                  &lt;p&gt;
                  A CA may specify that an OCSP client can trust a responder for the
                  lifetime of the responder&apos;s certificate. The CA does so by including
                  the extension id-pkix-ocsp-nocheck. This SHOULD be a non-critical
                  extension. The value of the extension should be NULL. CAs issuing
                  such a certificate should realized that a compromise of the
                  responder&apos;s key, is as serious as the compromise of a CA key used to
                  sign CRLs, at least for the validity period of this certificate. CA&apos;s
                  may choose to issue this type of certificate with a very short
                  lifetime and renew it frequently.
                  &lt;pre&gt;
                  id-pkix-ocsp-nocheck OBJECT IDENTIFIER ::= { id-pkix-ocsp 5 }
                  &lt;/pre&gt;                
                <author>
                    Xuelei Fan                    
                </author>
                <see>
                    Extension                    
                </see>
                <see>
                    CertAttrSet                    
                </see>
            </javadoc>
            <declaration name="IDENT" type="String" line="26"/>
            <javadoc line="26">
                Identifier for this attribute, to be used with the
                  get, set, delete methods of Certificate, x509 type.                
            </javadoc>
            <declaration name="NAME" type="String" line="31"/>
            <javadoc line="31">
                Attribute names.                
            </javadoc>
            <javadoc line="35">
                Create a OCSPNoCheckExtension                
            </javadoc>
            <method name="OCSPNoCheckExtension" type="constructor" line="38"/>
            <javadoc line="43">
                Create the extension from the passed DER encoded value.                
                <param>
                    critical true if the extension is to be treated as critical.                    
                </param>
                <param>
                    value an array of DER encoded bytes of the actual value.                    
                </param>
                <exception>
                    IOException on error.                    
                </exception>
            </javadoc>
            <method name="OCSPNoCheckExtension" type="constructor" line="49">
                <params>
                    <param name="critical" type="Boolean"/>
                    <param name="value" type="Object"/>
                </params>
            </method>
            <javadoc line="54">
                Set the attribute value.                
            </javadoc>
            <method name="set" type="void" line="57">
                <params>
                    <param name="name" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <javadoc line="60">
                Get the attribute value.                
            </javadoc>
            <method name="get" type="Object" line="63">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="66">
                Delete the attribute value.                
            </javadoc>
            <method name="delete" type="void" line="69">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="72">
                Return an enumeration of names of attributes existing within this
                  attribute.                
            </javadoc>
            <method name="getElements" type="Enumeration&lt;String&gt;" line="76"/>
            <javadoc line="79">
                Return the name of this attribute.                
            </javadoc>
            <method name="getName" type="String" line="82"/>
        </class>
    </source>