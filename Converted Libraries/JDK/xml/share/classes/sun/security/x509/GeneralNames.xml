<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.util"/>
        <import package="java.io.IOException"/>
        <import package="sun.security.util"/>
        <class name="GeneralNames" line="5">
            <javadoc line="5">
                This object class represents the GeneralNames type required in
                  X509 certificates.
                  &lt;p&gt;The ASN.1 syntax for this is:
                  &lt;pre&gt;
                  GeneralNames ::= SEQUENCE SIZE (1..MAX) OF GeneralName
                  &lt;/pre&gt;                
                <author>
                    Amit Kapoor                    
                </author>
                <author>
                    Hemma Prafullchandra                    
                </author>
            </javadoc>
            <declaration name="names" type="List&lt;GeneralName&gt;" line="16"/>
            <javadoc line="17">
                Create the GeneralNames, decoding from the passed DerValue.                
                <param>
                    derVal the DerValue to construct the GeneralNames from.                    
                </param>
                <exception>
                    IOException on error.                    
                </exception>
            </javadoc>
            <method name="GeneralNames" type="constructor" line="22">
                <params>
                    <param name="derVal" type="DerValue"/>
                </params>
                <scope line="24"/>
                <scope line="27"/>
                <scope line="30">
                    <declaration name="encName" type="DerValue" line="31"/>
                    <declaration name="name" type="GeneralName" line="32"/>
                </scope>
            </method>
            <javadoc line="36">
                The default constructor for this class.                
            </javadoc>
            <method name="GeneralNames" type="constructor" line="39"/>
            <method name="add" type="GeneralNames" line="42">
                <params>
                    <param name="name" type="GeneralName"/>
                </params>
                <scope line="43"/>
            </method>
            <method name="get" type="GeneralName" line="49">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="isEmpty" type="boolean" line="52"/>
            <method name="size" type="int" line="55"/>
            <method name="iterator" type="Iterator<GeneralName>" line="58"/>
            <method name="names" type="List<GeneralName>" line="61"/>
            <javadoc line="64">
                Write the extension to the DerOutputStream.                
                <param>
                    out the DerOutputStream to write the extension to.                    
                </param>
                <exception>
                    IOException on error.                    
                </exception>
            </javadoc>
            <method name="encode" type="void" line="69">
                <params>
                    <param name="out" type="DerOutputStream"/>
                </params>
                <scope line="70"/>
                <declaration name="temp" type="DerOutputStream" line="73"/>
                <scope line="74"/>
            </method>
            <javadoc line="79">
                compare this GeneralNames to other object for equality                
                <returns>
                    true iff this equals other                    
                </returns>
            </javadoc>
            <method name="equals" type="boolean" line="83">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="84"/>
                <scope line="87"/>
                <declaration name="other" type="GeneralNames" line="90"/>
            </method>
            <method name="hashCode" type="int" line="93"/>
            <method name="toString" type="String" line="96"/>
        </class>
    </source>