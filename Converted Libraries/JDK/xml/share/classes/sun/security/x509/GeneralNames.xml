<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.util"/>
        <import package="java.io.IOException"/>
        <import package="sun.security.util"/>
        <class name="GeneralNames" line="33">
            <javadoc line="33">
                This object class represents the GeneralNames type required in
                  X509 certificates.
                  &lt;p&gt;The ASN.1 syntax for this is:
                  &lt;pre&gt;
                  GeneralNames ::= SEQUENCE SIZE (1..MAX) OF GeneralName
                  &lt;/pre&gt;                
                <author>
                    Amit Kapoor                    
                </author>
                <author>
                    Hemma Prafullchandra                    
                </author>
            </javadoc>
            <declaration name="names" type="List&lt;GeneralName&gt;" line="47"/>
            <javadoc line="49">
                Create the GeneralNames, decoding from the passed DerValue.                
                <param>
                    derVal the DerValue to construct the GeneralNames from.                    
                </param>
                <exception>
                    IOException on error.                    
                </exception>
            </javadoc>
            <method name="GeneralNames" type="constructor" line="55">
                <params>
                    <param name="derVal" type="DerValue"/>
                </params>
                <comment line="65">
                    Decode all the GeneralName&apos;s                    
                </comment>
                <scope line="57"/>
                <scope line="60"/>
                <scope line="65">
                    <declaration name="encName" type="DerValue" line="66"/>
                    <declaration name="name" type="GeneralName" line="68"/>
                </scope>
            </method>
            <javadoc line="73">
                The default constructor for this class.                
            </javadoc>
            <method name="GeneralNames" type="constructor" line="76"/>
            <method name="add" type="GeneralNames" line="80">
                <params>
                    <param name="name" type="GeneralName"/>
                </params>
                <scope line="81"/>
            </method>
            <method name="get" type="GeneralName" line="88">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="isEmpty" type="boolean" line="92"/>
            <method name="size" type="int" line="96"/>
            <method name="iterator" type="Iterator<GeneralName>" line="100"/>
            <method name="names" type="List<GeneralName>" line="104"/>
            <javadoc line="108">
                Write the extension to the DerOutputStream.                
                <param>
                    out the DerOutputStream to write the extension to.                    
                </param>
                <exception>
                    IOException on error.                    
                </exception>
            </javadoc>
            <method name="encode" type="void" line="114">
                <params>
                    <param name="out" type="DerOutputStream"/>
                </params>
                <scope line="115"/>
                <declaration name="temp" type="DerOutputStream" line="119"/>
                <scope line="120"/>
            </method>
            <javadoc line="126">
                compare this GeneralNames to other object for equality                
                <returns>
                    true iff this equals other                    
                </returns>
            </javadoc>
            <method name="equals" type="boolean" line="131">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="132"/>
                <scope line="135"/>
                <declaration name="other" type="GeneralNames" line="138"/>
            </method>
            <method name="hashCode" type="int" line="142"/>
            <method name="toString" type="String" line="146"/>
        </class>
    </source>