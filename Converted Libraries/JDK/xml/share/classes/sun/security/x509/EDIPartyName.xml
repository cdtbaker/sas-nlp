<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io.IOException"/>
        <import package="sun.security.util"/>
        <class name="EDIPartyName" line="31">
            <comment line="48">
                Private data members                
            </comment>
            <implements interface="GeneralNameInterface"/>
            <javadoc line="31">
                This class defines the EDIPartyName of the GeneralName choice.
                  The ASN.1 syntax for this is:
                  &lt;pre&gt;
                  EDIPartyName ::= SEQUENCE {
                  nameAssigner  [0]  DirectoryString OPTIONAL,
                  partyName     [1]  DirectoryString }
                  &lt;/pre&gt;                
                <author>
                    Hemma Prafullchandra                    
                </author>
                <see>
                    GeneralName                    
                </see>
                <see>
                    GeneralNames                    
                </see>
                <see>
                    GeneralNameInterface                    
                </see>
            </javadoc>
            <declaration name="TAG_ASSIGNER" type="byte" line="48"/>
            <declaration name="TAG_PARTYNAME" type="byte" line="49"/>
            <declaration name="assigner" type="String" line="51"/>
            <declaration name="party" type="String" line="52"/>
            <declaration name="myhash" type="int" line="54"/>
            <javadoc line="56">
                Create the EDIPartyName object from the specified names.                
                <param>
                    assignerName the name of the assigner                    
                </param>
                <param>
                    partyName the name of the EDI party.                    
                </param>
            </javadoc>
            <method name="EDIPartyName" type="constructor" line="62">
                <params>
                    <param name="assignerName" type="String"/>
                    <param name="partyName" type="String"/>
                </params>
            </method>
            <javadoc line="67">
                Create the EDIPartyName object from the specified name.                
                <param>
                    partyName the name of the EDI party.                    
                </param>
            </javadoc>
            <method name="EDIPartyName" type="constructor" line="72">
                <params>
                    <param name="partyName" type="String"/>
                </params>
            </method>
            <javadoc line="76">
                Create the EDIPartyName object from the passed encoded Der value.                
                <param>
                    derValue the encoded DER EDIPartyName.                    
                </param>
                <exception>
                    IOException on error.                    
                </exception>
            </javadoc>
            <method name="EDIPartyName" type="constructor" line="82">
                <params>
                    <param name="derValue" type="DerValue"/>
                </params>
                <declaration name="in" type="DerInputStream" line="83"/>
                <declaration name="seq" type="DerValue[]" line="84"/>
                <declaration name="len" type="int" line="86"/>
                <scope line="90">
                    <declaration name="opt" type="DerValue" line="91"/>
                    <scope line="93"/>
                    <scope line="101"/>
                </scope>
            </method>
            <javadoc line="111">
                Return the type of the GeneralName.                
            </javadoc>
            <method name="getType" type="int" line="114"/>
            <javadoc line="118">
                Encode the EDI party name into the DerOutputStream.                
                <param>
                    out the DER stream to encode the EDIPartyName to.                    
                </param>
                <exception>
                    IOException on encoding errors.                    
                </exception>
            </javadoc>
            <method name="encode" type="void" line="124">
                <params>
                    <param name="out" type="DerOutputStream"/>
                </params>
                <comment line="131">
                    XXX - shd check is chars fit into PrintableString                    
                </comment>
                <comment line="139">
                    XXX - shd check is chars fit into PrintableString                    
                </comment>
                <declaration name="tagged" type="DerOutputStream" line="125"/>
                <declaration name="tmp" type="DerOutputStream" line="126"/>
                <scope line="128">
                    <declaration name="tmp2" type="DerOutputStream" line="129"/>
                </scope>
            </method>
            <javadoc line="146">
                Return the assignerName                
                <returns>
                    String assignerName                    
                </returns>
            </javadoc>
            <method name="getAssignerName" type="String" line="151"/>
            <javadoc line="155">
                Return the partyName                
                <returns>
                    String partyName                    
                </returns>
            </javadoc>
            <method name="getPartyName" type="String" line="160"/>
            <javadoc line="164">
                Compare this EDIPartyName with another.  Does a byte-string
                  comparison without regard to type of the partyName and
                  the assignerName.                
                <returns>
                    true if the two names match                    
                </returns>
            </javadoc>
            <method name="equals" type="boolean" line="171">
                <params>
                    <param name="other" type="Object"/>
                </params>
                <declaration name="otherAssigner" type="String" line="174"/>
                <scope line="175"/>
                <scope line="178"/>
                <declaration name="otherParty" type="String" line="182"/>
                <scope line="183"/>
                <scope line="186"/>
            </method>
            <javadoc line="193">
                Returns the hash code value for this EDIPartyName.                
                <return>
                    a hash code value.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="198">
                <scope line="199">
                    <scope line="201"/>
                </scope>
            </method>
            <javadoc line="208">
                Return the printable string.                
            </javadoc>
            <method name="toString" type="String" line="211"/>
            <javadoc line="218">
                Return constraint type:&lt;ul&gt;
                  &lt;li&gt;NAME_DIFF_TYPE = -1: input name is different type from name (i.e. does not constrain)
                  &lt;li&gt;NAME_MATCH = 0: input name matches name
                  &lt;li&gt;NAME_NARROWS = 1: input name narrows name
                  &lt;li&gt;NAME_WIDENS = 2: input name widens name
                  &lt;li&gt;NAME_SAME_TYPE = 3: input name does not match or narrow name, but is same type
                  &lt;/ul&gt;.  These results are used in checking NameConstraints during
                  certification path verification.                
                <param>
                    inputName to be checked for being constrained                    
                </param>
                <returns>
                    constraint type above                    
                </returns>
                <throws>
                    UnsupportedOperationException if name is same type, but comparison operations are
                      not supported for this name type.                    
                </throws>
            </javadoc>
            <method name="constrains" type="int" line="233">
                <params>
                    <param name="inputName" type="GeneralNameInterface"/>
                </params>
                <declaration name="constraintType" type="int" line="234"/>
                <scope line="239"/>
            </method>
            <javadoc line="245">
                Return subtree depth of this name for purposes of determining
                  NameConstraints minimum and maximum bounds and for calculating
                  path lengths in name subtrees.                
                <returns>
                    distance of name from root                    
                </returns>
                <throws>
                    UnsupportedOperationException if not supported for this name type                    
                </throws>
            </javadoc>
            <method name="subtreeDepth" type="int" line="253"/>
        </class>
    </source>