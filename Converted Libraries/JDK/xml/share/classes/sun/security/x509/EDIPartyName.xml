<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io.IOException"/>
        <import package="sun.security.util"/>
        <class name="EDIPartyName" line="4">
            <implements interface="GeneralNameInterface"/>
            <javadoc line="4">
                This class defines the EDIPartyName of the GeneralName choice.
                  The ASN.1 syntax for this is:
                  &lt;pre&gt;
                  EDIPartyName ::= SEQUENCE {
                  nameAssigner  [0]  DirectoryString OPTIONAL,
                  partyName     [1]  DirectoryString }
                  &lt;/pre&gt;                
                <author>
                    Hemma Prafullchandra                    
                </author>
                <see>
                    GeneralName                    
                </see>
                <see>
                    GeneralNames                    
                </see>
                <see>
                    GeneralNameInterface                    
                </see>
            </javadoc>
            <declaration name="TAG_ASSIGNER" type="byte" line="18"/>
            <declaration name="TAG_PARTYNAME" type="byte" line="19"/>
            <declaration name="assigner" type="String" line="20"/>
            <declaration name="party" type="String" line="21"/>
            <declaration name="myhash" type="int" line="22"/>
            <javadoc line="23">
                Create the EDIPartyName object from the specified names.                
                <param>
                    assignerName the name of the assigner                    
                </param>
                <param>
                    partyName the name of the EDI party.                    
                </param>
            </javadoc>
            <method name="EDIPartyName" type="constructor" line="28">
                <params>
                    <param name="assignerName" type="String"/>
                    <param name="partyName" type="String"/>
                </params>
            </method>
            <javadoc line="32">
                Create the EDIPartyName object from the specified name.                
                <param>
                    partyName the name of the EDI party.                    
                </param>
            </javadoc>
            <method name="EDIPartyName" type="constructor" line="36">
                <params>
                    <param name="partyName" type="String"/>
                </params>
            </method>
            <javadoc line="39">
                Create the EDIPartyName object from the passed encoded Der value.                
                <param>
                    derValue the encoded DER EDIPartyName.                    
                </param>
                <exception>
                    IOException on error.                    
                </exception>
            </javadoc>
            <method name="EDIPartyName" type="constructor" line="44">
                <params>
                    <param name="derValue" type="DerValue"/>
                </params>
                <declaration name="in" type="DerInputStream" line="45"/>
                <declaration name="seq" type="DerValue[]" line="46"/>
                <declaration name="len" type="int" line="47"/>
                <scope line="49">
                    <declaration name="opt" type="DerValue" line="50"/>
                    <scope line="51"/>
                    <scope line="56"/>
                </scope>
            </method>
            <javadoc line="63">
                Return the type of the GeneralName.                
            </javadoc>
            <method name="getType" type="int" line="66"/>
            <javadoc line="69">
                Encode the EDI party name into the DerOutputStream.                
                <param>
                    out the DER stream to encode the EDIPartyName to.                    
                </param>
                <exception>
                    IOException on encoding errors.                    
                </exception>
            </javadoc>
            <method name="encode" type="void" line="74">
                <params>
                    <param name="out" type="DerOutputStream"/>
                </params>
                <declaration name="tagged" type="DerOutputStream" line="75"/>
                <declaration name="tmp" type="DerOutputStream" line="76"/>
                <scope line="77">
                    <declaration name="tmp2" type="DerOutputStream" line="78"/>
                </scope>
            </method>
            <javadoc line="87">
                Return the assignerName                
                <returns>
                    String assignerName                    
                </returns>
            </javadoc>
            <method name="getAssignerName" type="String" line="91"/>
            <javadoc line="94">
                Return the partyName                
                <returns>
                    String partyName                    
                </returns>
            </javadoc>
            <method name="getPartyName" type="String" line="98"/>
            <javadoc line="101">
                Compare this EDIPartyName with another.  Does a byte-string
                  comparison without regard to type of the partyName and
                  the assignerName.                
                <returns>
                    true if the two names match                    
                </returns>
            </javadoc>
            <method name="equals" type="boolean" line="107">
                <params>
                    <param name="other" type="Object"/>
                </params>
                <declaration name="otherAssigner" type="String" line="109"/>
                <scope line="110"/>
                <scope line="113"/>
                <declaration name="otherParty" type="String" line="116"/>
                <scope line="117"/>
                <scope line="120"/>
            </method>
            <javadoc line="125">
                Returns the hash code value for this EDIPartyName.                
                <return>
                    a hash code value.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="129">
                <scope line="130">
                    <scope line="132"/>
                </scope>
            </method>
            <javadoc line="138">
                Return the printable string.                
            </javadoc>
            <method name="toString" type="String" line="141"/>
            <javadoc line="144">
                Return constraint type:&lt;ul&gt;
                  &lt;li&gt;NAME_DIFF_TYPE = -1: input name is different type from name (i.e. does not constrain)
                  &lt;li&gt;NAME_MATCH = 0: input name matches name
                  &lt;li&gt;NAME_NARROWS = 1: input name narrows name
                  &lt;li&gt;NAME_WIDENS = 2: input name widens name
                  &lt;li&gt;NAME_SAME_TYPE = 3: input name does not match or narrow name, but is same type
                  &lt;/ul&gt;.  These results are used in checking NameConstraints during
                  certification path verification.                
                <param>
                    inputName to be checked for being constrained                    
                </param>
                <returns>
                    constraint type above                    
                </returns>
                <throws>
                    UnsupportedOperationException if name is same type, but comparison operations are
                      not supported for this name type.                    
                </throws>
            </javadoc>
            <method name="constrains" type="int" line="158">
                <params>
                    <param name="inputName" type="GeneralNameInterface"/>
                </params>
                <declaration name="constraintType" type="int" line="159"/>
                <scope line="162"/>
            </method>
            <javadoc line="167">
                Return subtree depth of this name for purposes of determining
                  NameConstraints minimum and maximum bounds and for calculating
                  path lengths in name subtrees.                
                <returns>
                    distance of name from root                    
                </returns>
                <throws>
                    UnsupportedOperationException if not supported for this name type                    
                </throws>
            </javadoc>
            <method name="subtreeDepth" type="int" line="174"/>
        </class>
    </source>