<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.lang.reflect.Constructor"/>
        <import package="java.lang.reflect.Field"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="java.security.cert.CertificateException"/>
        <import package="java.util"/>
        <import package="sun.misc.HexDumpEncoder"/>
        <import package="sun.security.util"/>
        <class name="CertificateExtensions" line="11">
            <implements interface="CertAttrSet">
                <type_params>
                    <type_param name="Extension"/>
                </type_params>
            </implements>
            <javadoc line="11">
                This class defines the Extensions attribute for the Certificate.                
                <author>
                    Amit Kapoor                    
                </author>
                <author>
                    Hemma Prafullchandra                    
                </author>
                <see>
                    CertAttrSet                    
                </see>
            </javadoc>
            <declaration name="IDENT" type="String" line="18"/>
            <javadoc line="18">
                Identifier for this attribute, to be used with the
                  get, set, delete methods of Certificate, x509 type.                
            </javadoc>
            <declaration name="NAME" type="String" line="23"/>
            <javadoc line="23">
                name                
            </javadoc>
            <declaration name="debug" type="Debug" line="27"/>
            <declaration name="map" type="Hashtable&amp;lt;String,Extension&amp;gt;" line="28"/>
            <declaration name="unsupportedCritExt" type="boolean" line="29"/>
            <declaration name="unparseableExtensions" type="Map&amp;lt;String,Extension&amp;gt;" line="30"/>
            <javadoc line="31">
                Default constructor.                
            </javadoc>
            <method name="CertificateExtensions" type="constructor" line="34"/>
            <javadoc line="36">
                Create the object, decoding the values from the passed DER stream.                
                <param>
                    in the DerInputStream to read the Extension from.                    
                </param>
                <exception>
                    IOException on decoding errors.                    
                </exception>
            </javadoc>
            <method name="CertificateExtensions" type="constructor" line="41">
                <params>
                    <param name="in" type="DerInputStream"/>
                </params>
            </method>
            <method name="init" type="void" line="44">
                <params>
                    <param name="in" type="DerInputStream"/>
                </params>
                <declaration name="exts" type="DerValue[]" line="45"/>
                <scope line="46">
                    <declaration name="ext" type="Extension" line="47"/>
                </scope>
            </method>
            <declaration name="PARAMS" type="Class[]" line="51"/>
            <method name="parseExtension" type="void" line="52">
                <params>
                    <param name="ext" type="Extension"/>
                </params>
                <scope line="53">
                    <declaration name="extClass" type="Class" line="54"/>
                    <scope line="55">
                        <scope line="56"/>
                        <scope line="59"/>
                        <scope line="62"/>
                    </scope>
                    <declaration name="cons" type="Constructor" line="66"/>
                    <declaration name="passed" type="Object[]" line="67"/>
                    <declaration name="certExt" type="CertAttrSet" line="68"/>
                    <scope line="69"/>
                </scope>
                <scope line="73">
                    <declaration name="e" type="Throwable" line="74"/>
                    <scope line="75">
                        <scope line="76"/>
                        <scope line="80">
                            <declaration name="h" type="HexDumpEncoder" line="83"/>
                        </scope>
                    </scope>
                    <scope line="88"/>
                    <scope line="91"/>
                </scope>
                <scope line="95"/>
                <scope line="98"/>
            </method>
            <javadoc line="102">
                Encode the extensions in DER form to the stream, setting
                  the context specific tag as needed in the X.509 v3 certificate.                
                <param>
                    out the DerOutputStream to marshal the contents to.                    
                </param>
                <exception>
                    CertificateException on encoding errors.                    
                </exception>
                <exception>
                    IOException on errors.                    
                </exception>
            </javadoc>
            <method name="encode" type="void" line="109">
                <params>
                    <param name="out" type="OutputStream"/>
                </params>
            </method>
            <javadoc line="112">
                Encode the extensions in DER form to the stream.                
                <param>
                    out the DerOutputStream to marshal the contents to.                    
                </param>
                <param>
                    isCertReq if true then no context specific tag is added.                    
                </param>
                <exception>
                    CertificateException on encoding errors.                    
                </exception>
                <exception>
                    IOException on errors.                    
                </exception>
            </javadoc>
            <method name="encode" type="void" line="119">
                <params>
                    <param name="out" type="OutputStream"/>
                    <param name="isCertReq" type="boolean"/>
                </params>
                <declaration name="extOut" type="DerOutputStream" line="120"/>
                <declaration name="allExts" type="Collection&amp;lt;Extension&amp;gt;" line="121"/>
                <declaration name="objs" type="Object[]" line="122"/>
                <scope line="123"/>
                <declaration name="seq" type="DerOutputStream" line="128"/>
                <declaration name="tmp" type="DerOutputStream" line="130"/>
                <scope line="131"/>
            </method>
            <javadoc line="138">
                Set the attribute value.                
                <param>
                    name the extension name used in the cache.                    
                </param>
                <param>
                    obj the object to set.                    
                </param>
                <exception>
                    IOException if the object could not be cached.                    
                </exception>
            </javadoc>
            <method name="set" type="void" line="144">
                <params>
                    <param name="name" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="145"/>
                <scope line="148"/>
            </method>
            <javadoc line="152">
                Get the attribute value.                
                <param>
                    name the extension name used in the lookup.                    
                </param>
                <exception>
                    IOException if named extension is not found.                    
                </exception>
            </javadoc>
            <method name="get" type="Object" line="157">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="obj" type="Object" line="158"/>
                <scope line="159"/>
            </method>
            <javadoc line="164">
                Delete the attribute value.                
                <param>
                    name the extension name used in the lookup.                    
                </param>
                <exception>
                    IOException if named extension is not found.                    
                </exception>
            </javadoc>
            <method name="delete" type="void" line="169">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="obj" type="Object" line="170"/>
                <scope line="171"/>
            </method>
            <method name="getNameByOid" type="String" line="176">
                <params>
                    <param name="oid" type="ObjectIdentifier"/>
                </params>
                <scope line="177">
                    <scope line="178"/>
                </scope>
            </method>
            <javadoc line="184">
                Return an enumeration of names of attributes existing within this
                  attribute.                
            </javadoc>
            <method name="getElements" type="Enumeration&lt;Extension&gt;" line="188"/>
            <javadoc line="191">
                Return a collection view of the extensions.                
                <return>
                    a collection view of the extensions in this Certificate.                    
                </return>
            </javadoc>
            <method name="getAllExtensions" type="Collection&lt;Extension&gt;" line="195"/>
            <method name="getUnparseableExtensions" type="Map&lt;String,Extension&gt;" line="198">
                <scope line="199"/>
                <scope line="202"/>
            </method>
            <javadoc line="206">
                Return the name of this attribute.                
            </javadoc>
            <method name="getName" type="String" line="209"/>
            <javadoc line="212">
                Return true if a critical extension is found that is
                  not supported, otherwise return false.                
            </javadoc>
            <method name="hasUnsupportedCriticalExtension" type="boolean" line="216"/>
            <javadoc line="219">
                Compares this CertificateExtensions for equality with the specified
                  object. If the &lt;code&gt;other&lt;/code&gt; object is an
                  &lt;code&gt;instanceof&lt;/code&gt; &lt;code&gt;CertificateExtensions&lt;/code&gt;, then
                  all the entries are compared with the entries from this.                
                <param>
                    other the object to test for equality with this
                      CertificateExtensions.                    
                </param>
                <return>
                    true iff all the entries match that of the Other,
                      false otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="229">
                <params>
                    <param name="other" type="Object"/>
                </params>
                <declaration name="otherC" type="Collection&amp;lt;Extension&amp;gt;" line="232"/>
                <declaration name="objs" type="Object[]" line="233"/>
                <declaration name="len" type="int" line="234"/>
                <declaration name="otherExt" type="Extension" line="236"/>
                <declaration name="key" type="String" line="237"/>
                <scope line="238"/>
            </method>
            <javadoc line="248">
                Returns a hashcode value for this CertificateExtensions.                
                <return>
                    the hashcode value.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="252"/>
            <javadoc line="255">
                Returns a string representation of this &lt;tt&gt;CertificateExtensions&lt;/tt&gt;
                  object in the form of a set of entries, enclosed in braces and separated
                  by the ASCII characters &quot;&lt;tt&gt;,&amp;nbsp;&lt;/tt&gt;&quot; (comma and space).
                  &lt;p&gt;Overrides to &lt;tt&gt;toString&lt;/tt&gt; method of &lt;tt&gt;Object&lt;/tt&gt;.                
                <return>
                    a string representation of this CertificateExtensions.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="262"/>
        </class>
        <class name="UnparseableExtension" line="266">
            <extends class="Extension"/>
            <declaration name="name" type="String" line="267"/>
            <declaration name="why" type="Throwable" line="268"/>
            <method name="UnparseableExtension" type="constructor" line="269">
                <params>
                    <param name="ext" type="Extension"/>
                    <param name="why" type="Throwable"/>
                </params>
                <scope line="272">
                    <declaration name="extClass" type="Class" line="273"/>
                    <scope line="274">
                        <declaration name="field" type="Field" line="275"/>
                    </scope>
                </scope>
                <scope line="279"/>
            </method>
            <method name="toString" type="String" line="283"/>
        </class>
    </source>