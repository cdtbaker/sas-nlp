<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io"/>
        <import package="sun.security.util"/>
        <class name="GeneralSubtree" line="32">
            <javadoc line="32">
                Represent the GeneralSubtree ASN.1 object, whose syntax is:
                  &lt;pre&gt;
                  GeneralSubtree ::= SEQUENCE {
                  base             GeneralName,
                  minimum  [0]     BaseDistance DEFAULT 0,
                  maximum  [1]     BaseDistance OPTIONAL
                  }
                  BaseDistance ::= INTEGER (0..MAX)
                  &lt;/pre&gt;                
                <author>
                    Amit Kapoor                    
                </author>
                <author>
                    Hemma Prafullchandra                    
                </author>
            </javadoc>
            <declaration name="TAG_MIN" type="byte" line="46"/>
            <declaration name="TAG_MAX" type="byte" line="47"/>
            <declaration name="MIN_DEFAULT" type="int" line="48"/>
            <declaration name="name" type="GeneralName" line="50"/>
            <declaration name="minimum" type="int" line="51"/>
            <declaration name="maximum" type="int" line="52"/>
            <declaration name="myhash" type="int" line="54"/>
            <javadoc line="56">
                The default constructor for the class.                
                <params>
                    name the GeneralName                    
                </params>
                <params>
                    min the minimum BaseDistance                    
                </params>
                <params>
                    max the maximum BaseDistance                    
                </params>
            </javadoc>
            <method name="GeneralSubtree" type="constructor" line="63">
                <params>
                    <param name="name" type="GeneralName"/>
                    <param name="min" type="int"/>
                    <param name="max" type="int"/>
                </params>
            </method>
            <javadoc line="69">
                Create the object from its DER encoded form.                
                <param>
                    val the DER encoded from of the same.                    
                </param>
            </javadoc>
            <method name="GeneralSubtree" type="constructor" line="74">
                <params>
                    <param name="val" type="DerValue"/>
                </params>
                <comment line="81">
                    NB. this is always encoded with the IMPLICIT tag
                     The checks only make sense if we assume implicit tagging,
                     with explicit tagging the form is always constructed.                    
                </comment>
                <scope line="75"/>
                <scope line="83">
                    <declaration name="opt" type="DerValue" line="84"/>
                    <scope line="86"/>
                    <scope line="90"/>
                </scope>
            </method>
            <javadoc line="98">
                Return the GeneralName.                
                <return>
                    the GeneralName                    
                </return>
            </javadoc>
            <method name="getName" type="GeneralName" line="103">
                <comment line="105">
                    XXXX May want to consider cloning this                    
                </comment>
            </method>
            <javadoc line="108">
                Return the minimum BaseDistance.                
                <return>
                    the minimum BaseDistance. Default is 0 if not set.                    
                </return>
            </javadoc>
            <method name="getMinimum" type="int" line="113"/>
            <javadoc line="117">
                Return the maximum BaseDistance.                
                <return>
                    the maximum BaseDistance, or -1 if not set.                    
                </return>
            </javadoc>
            <method name="getMaximum" type="int" line="122"/>
            <javadoc line="126">
                Return a printable string of the GeneralSubtree.                
            </javadoc>
            <method name="toString" type="String" line="129">
                <declaration name="s" type="String" line="130"/>
                <scope line="133"/>
            </method>
            <javadoc line="141">
                Compare this GeneralSubtree with another                
                <param>
                    other GeneralSubtree to compare to this                    
                </param>
                <returns>
                    true if match                    
                </returns>
            </javadoc>
            <method name="equals" type="boolean" line="147">
                <params>
                    <param name="other" type="Object"/>
                </params>
                <declaration name="otherGS" type="GeneralSubtree" line="150"/>
                <scope line="151">
                    <scope line="152"/>
                </scope>
                <scope line="155"/>
            </method>
            <javadoc line="166">
                Returns the hash code for this GeneralSubtree.                
                <return>
                    a hash code value.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="171">
                <scope line="172">
                    <scope line="174"/>
                    <scope line="177"/>
                    <scope line="180"/>
                </scope>
            </method>
            <javadoc line="187">
                Encode the GeneralSubtree.                
                <params>
                    out the DerOutputStream to encode this object to.                    
                </params>
            </javadoc>
            <method name="encode" type="void" line="192">
                <params>
                    <param name="out" type="DerOutputStream"/>
                </params>
                <declaration name="seq" type="DerOutputStream" line="193"/>
                <scope line="197">
                    <declaration name="tmp" type="DerOutputStream" line="198"/>
                </scope>
                <scope line="203">
                    <declaration name="tmp" type="DerOutputStream" line="204"/>
                </scope>
            </method>
        </class>
    </source>