<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.security.cert"/>
        <import package="java.util"/>
        <import package="sun.security.util"/>
        <import package="sun.misc.HexDumpEncoder"/>
        <class name="X509CertInfo" line="8">
            <implements interface="CertAttrSet">
                <type_params>
                    <type_param name="String"/>
                </type_params>
            </implements>
            <javadoc line="8">
                The X509CertInfo class represents X.509 certificate information.
                  &lt;P&gt;X.509 certificates have several base data elements, including:&lt;UL&gt;
                  &lt;LI&gt;The &lt;em&gt;Subject Name&lt;/em&gt;, an X.500 Distinguished Name for
                  the entity (subject) for which the certificate was issued.
                  &lt;LI&gt;The &lt;em&gt;Subject Public Key&lt;/em&gt;, the public key of the subject.
                  This is one of the most important parts of the certificate.
                  &lt;LI&gt;The &lt;em&gt;Validity Period&lt;/em&gt;, a time period (e.g. six months)
                  within which the certificate is valid (unless revoked).
                  &lt;LI&gt;The &lt;em&gt;Issuer Name&lt;/em&gt;, an X.500 Distinguished Name for the
                  Certificate Authority (CA) which issued the certificate.
                  &lt;LI&gt;A &lt;em&gt;Serial Number&lt;/em&gt; assigned by the CA, for use in
                  certificate revocation and other applications.                
                <author>
                    Amit Kapoor                    
                </author>
                <author>
                    Hemma Prafullchandra                    
                </author>
                <see>
                    CertAttrSet                    
                </see>
                <see>
                    X509CertImpl                    
                </see>
            </javadoc>
            <declaration name="IDENT" type="String" line="27"/>
            <javadoc line="27">
                Identifier for this attribute, to be used with the
                  get, set, delete methods of Certificate, x509 type.                
            </javadoc>
            <declaration name="NAME" type="String" line="32"/>
            <declaration name="VERSION" type="String" line="33"/>
            <declaration name="SERIAL_NUMBER" type="String" line="34"/>
            <declaration name="ALGORITHM_ID" type="String" line="35"/>
            <declaration name="ISSUER" type="String" line="36"/>
            <declaration name="VALIDITY" type="String" line="37"/>
            <declaration name="SUBJECT" type="String" line="38"/>
            <declaration name="KEY" type="String" line="39"/>
            <declaration name="ISSUER_ID" type="String" line="40"/>
            <declaration name="SUBJECT_ID" type="String" line="41"/>
            <declaration name="EXTENSIONS" type="String" line="42"/>
            <declaration name="version" type="CertificateVersion" line="43"/>
            <declaration name="serialNum" type="CertificateSerialNumber" line="44"/>
            <declaration name="algId" type="CertificateAlgorithmId" line="45"/>
            <declaration name="issuer" type="CertificateIssuerName" line="46"/>
            <declaration name="interval" type="CertificateValidity" line="47"/>
            <declaration name="subject" type="CertificateSubjectName" line="48"/>
            <declaration name="pubKey" type="CertificateX509Key" line="49"/>
            <declaration name="issuerUniqueId" type="CertificateIssuerUniqueIdentity" line="50"/>
            <declaration name="subjectUniqueId" type="CertificateSubjectUniqueIdentity" line="51"/>
            <declaration name="extensions" type="CertificateExtensions" line="52"/>
            <declaration name="ATTR_VERSION" type="int" line="53"/>
            <declaration name="ATTR_SERIAL" type="int" line="54"/>
            <declaration name="ATTR_ALGORITHM" type="int" line="55"/>
            <declaration name="ATTR_ISSUER" type="int" line="56"/>
            <declaration name="ATTR_VALIDITY" type="int" line="57"/>
            <declaration name="ATTR_SUBJECT" type="int" line="58"/>
            <declaration name="ATTR_KEY" type="int" line="59"/>
            <declaration name="ATTR_ISSUER_ID" type="int" line="60"/>
            <declaration name="ATTR_SUBJECT_ID" type="int" line="61"/>
            <declaration name="ATTR_EXTENSIONS" type="int" line="62"/>
            <declaration name="rawCertInfo" type="byte[]" line="63"/>
            <declaration name="map" type="Map&lt;String,Integer&gt;" line="64"/>
            <scope line="65"/>
            <javadoc line="77">
                Construct an uninitialized X509CertInfo on which &lt;a href=&quot;#decode&quot;&gt;
                  decode&lt;/a&gt; must later be called (or which may be deserialized).                
            </javadoc>
            <method name="X509CertInfo" type="constructor" line="81"/>
            <javadoc line="83">
                Unmarshals a certificate from its encoded form, parsing the
                  encoded bytes.  This form of constructor is used by agents which
                  need to examine and use certificate contents.  That is, this is
                  one of the more commonly used constructors.  Note that the buffer
                  must include only a certificate, and no &quot;garbage&quot; may be left at
                  the end.  If you need to ignore data at the end of a certificate,
                  use another constructor.                
                <param>
                    cert the encoded bytes, with no trailing data.                    
                </param>
                <exception>
                    CertificateParsingException on parsing errors.                    
                </exception>
            </javadoc>
            <method name="X509CertInfo" type="constructor" line="94">
                <params>
                    <param name="cert" type="byte[]"/>
                </params>
                <scope line="95">
                    <declaration name="in" type="DerValue" line="96"/>
                </scope>
                <scope line="99">
                    <declaration name="parseException" type="CertificateParsingException" line="100"/>
                </scope>
            </method>
            <javadoc line="105">
                Unmarshal a certificate from its encoded form, parsing a DER value.
                  This form of constructor is used by agents which need to examine
                  and use certificate contents.                
                <param>
                    derVal the der value containing the encoded cert.                    
                </param>
                <exception>
                    CertificateParsingException on parsing errors.                    
                </exception>
            </javadoc>
            <method name="X509CertInfo" type="constructor" line="112">
                <params>
                    <param name="derVal" type="DerValue"/>
                </params>
                <scope line="113"/>
                <scope line="116">
                    <declaration name="parseException" type="CertificateParsingException" line="117"/>
                </scope>
            </method>
            <javadoc line="122">
                Appends the certificate to an output stream.                
                <param>
                    out an output stream to which the certificate is appended.                    
                </param>
                <exception>
                    CertificateException on encoding errors.                    
                </exception>
                <exception>
                    IOException on other errors.                    
                </exception>
            </javadoc>
            <method name="encode" type="void" line="128">
                <params>
                    <param name="out" type="OutputStream"/>
                </params>
                <scope line="129">
                    <declaration name="tmp" type="DerOutputStream" line="130"/>
                </scope>
            </method>
            <javadoc line="136">
                Return an enumeration of names of attributes existing within this
                  attribute.                
            </javadoc>
            <method name="getElements" type="Enumeration<String>" line="140">
                <declaration name="elements" type="AttributeNameEnumeration" line="141"/>
            </method>
            <javadoc line="154">
                Return the name of this attribute.                
            </javadoc>
            <method name="getName" type="String" line="157"/>
            <javadoc line="160">
                Returns the encoded certificate info.                
                <exception>
                    CertificateEncodingException on encoding information errors.                    
                </exception>
            </javadoc>
            <method name="getEncodedInfo" type="byte[]" line="164">
                <scope line="165">
                    <scope line="166">
                        <declaration name="tmp" type="DerOutputStream" line="167"/>
                    </scope>
                </scope>
                <scope line="173"/>
                <scope line="176"/>
            </method>
            <javadoc line="180">
                Compares two X509CertInfo objects.  This is false if the
                  certificates are not both X.509 certs, otherwise it
                  compares them as binary data.                
                <param>
                    other the object being compared with this one                    
                </param>
                <return>
                    true iff the certificates are equivalent                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="187">
                <params>
                    <param name="other" type="Object"/>
                </params>
                <scope line="188"/>
                <scope line="191"/>
            </method>
            <javadoc line="195">
                Compares two certificates, returning false if any data
                  differs between the two.                
                <param>
                    other the object being compared with this one                    
                </param>
                <return>
                    true iff the certificates are equivalent                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="201">
                <params>
                    <param name="other" type="X509CertInfo"/>
                </params>
                <scope line="202"/>
                <scope line="205"/>
                <scope line="208"/>
                <scope line="211">
                    <scope line="212"/>
                </scope>
            </method>
            <javadoc line="218">
                Calculates a hash code value for the object.  Objects
                  which are equal will also have the same hashcode.                
            </javadoc>
            <method name="hashCode" type="int" line="222">
                <declaration name="retval" type="int" line="223"/>
                <scope line="224"/>
            </method>
            <javadoc line="229">
                Returns a printable representation of the certificate.                
            </javadoc>
            <method name="toString" type="String" line="232">
                <scope line="233"/>
                <declaration name="sb" type="StringBuilder" line="236"/>
                <scope line="245"/>
                <scope line="248"/>
                <scope line="251">
                    <declaration name="allExts" type="Collection" line="252"/>
                    <declaration name="objs" type="Object[]" line="253"/>
                    <scope line="255">
                        <declaration name="ext" type="Extension" line="257"/>
                        <scope line="258">
                            <scope line="259">
                                <declaration name="extValue" type="byte[]" line="261"/>
                                <scope line="262">
                                    <declaration name="out" type="DerOutputStream" line="263"/>
                                    <declaration name="enc" type="HexDumpEncoder" line="266"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="272"/>
                    </scope>
                    <declaration name="invalid" type="Map&lt;String,Extension&gt;" line="276"/>
                    <scope line="277">
                        <declaration name="i" type="int" line="279"/>
                        <scope line="280"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="289">
                Set the certificate attribute.                
                <params>
                    name the name of the Certificate attribute.                    
                </params>
                <params>
                    val the value of the Certificate attribute.                    
                </params>
                <exception>
                    CertificateException on invalid attributes.                    
                </exception>
                <exception>
                    IOException on other errors.                    
                </exception>
            </javadoc>
            <method name="set" type="void" line="296">
                <params>
                    <param name="name" type="String"/>
                    <param name="val" type="Object"/>
                </params>
                <declaration name="attrName" type="X509AttributeName" line="297"/>
                <declaration name="attr" type="int" line="298"/>
                <scope line="299"/>
                <declaration name="suffix" type="String" line="303"/>
                <scope line="306"/>
                <scope line="309"/>
                <scope line="314"/>
                <scope line="317"/>
                <scope line="322"/>
                <scope line="325"/>
                <scope line="330"/>
                <scope line="333"/>
                <scope line="338"/>
                <scope line="341"/>
                <scope line="346"/>
                <scope line="349"/>
                <scope line="354"/>
                <scope line="357"/>
                <scope line="362"/>
                <scope line="365"/>
                <scope line="370"/>
                <scope line="373"/>
                <scope line="378"/>
                <scope line="381"/>
            </method>
            <javadoc line="388">
                Delete the certificate attribute.                
                <params>
                    name the name of the Certificate attribute.                    
                </params>
                <exception>
                    CertificateException on invalid attributes.                    
                </exception>
                <exception>
                    IOException on other errors.                    
                </exception>
            </javadoc>
            <method name="delete" type="void" line="394">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="attrName" type="X509AttributeName" line="395"/>
                <declaration name="attr" type="int" line="396"/>
                <scope line="397"/>
                <declaration name="suffix" type="String" line="401"/>
                <scope line="404"/>
                <scope line="407"/>
                <scope line="412"/>
                <scope line="415"/>
                <scope line="420"/>
                <scope line="423"/>
                <scope line="428"/>
                <scope line="431"/>
                <scope line="436"/>
                <scope line="439"/>
                <scope line="444"/>
                <scope line="447"/>
                <scope line="452"/>
                <scope line="455"/>
                <scope line="460"/>
                <scope line="463"/>
                <scope line="468"/>
                <scope line="471"/>
                <scope line="476"/>
                <scope line="479"/>
            </method>
            <javadoc line="485">
                Get the certificate attribute.                
                <params>
                    name the name of the Certificate attribute.                    
                </params>
                <exception>
                    CertificateException on invalid attributes.                    
                </exception>
                <exception>
                    IOException on other errors.                    
                </exception>
            </javadoc>
            <method name="get" type="Object" line="491">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="attrName" type="X509AttributeName" line="492"/>
                <declaration name="attr" type="int" line="493"/>
                <scope line="494"/>
                <declaration name="suffix" type="String" line="497"/>
                <scope line="500"/>
                <scope line="503">
                    <scope line="504"/>
                    <scope line="507"/>
                </scope>
                <scope line="512"/>
                <scope line="515"/>
                <scope line="519"/>
                <scope line="522"/>
                <scope line="526"/>
                <scope line="529"/>
                <scope line="533"/>
                <scope line="536"/>
                <scope line="540"/>
                <scope line="543"/>
                <scope line="547"/>
                <scope line="550"/>
                <scope line="554"/>
                <scope line="557"/>
                <scope line="561"/>
                <scope line="564"/>
                <scope line="569"/>
                <scope line="572"/>
            </method>
            <method name="parse" type="void" line="579">
                <params>
                    <param name="val" type="DerValue"/>
                </params>
                <declaration name="in" type="DerInputStream" line="580"/>
                <declaration name="tmp" type="DerValue" line="581"/>
                <scope line="582"/>
                <scope line="588"/>
                <declaration name="issuerDN" type="X500Name" line="595"/>
                <scope line="596"/>
                <declaration name="subjectDN" type="X500Name" line="601"/>
                <scope line="602"/>
                <scope line="606">
                    <scope line="607"/>
                </scope>
                <scope line="611"/>
                <scope line="615"/>
                <scope line="620"/>
                <scope line="625"/>
                <scope line="628"/>
            </method>
            <method name="verifyCert" type="void" line="633">
                <params>
                    <param name="subject" type="CertificateSubjectName"/>
                    <param name="extensions" type="CertificateExtensions"/>
                </params>
                <declaration name="subjectDN" type="X500Name" line="634"/>
                <scope line="635">
                    <scope line="636"/>
                    <declaration name="subjectAltNameExt" type="SubjectAlternativeNameExtension" line="639"/>
                    <declaration name="extValue" type="SubjectAlternativeNameExtension" line="640"/>
                    <declaration name="names" type="GeneralNames" line="641"/>
                    <scope line="642"/>
                    <scope line="646"/>
                    <scope line="649"/>
                    <scope line="652"/>
                </scope>
            </method>
            <method name="emit" type="void" line="657">
                <params>
                    <param name="out" type="DerOutputStream"/>
                </params>
                <declaration name="tmp" type="DerOutputStream" line="658"/>
                <scope line="668"/>
                <scope line="671"/>
                <scope line="674"/>
            </method>
            <javadoc line="679">
                Returns the integer attribute number for the passed attribute name.                
            </javadoc>
            <method name="attributeMap" type="int" line="682">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="num" type="Integer" line="683"/>
                <scope line="684"/>
            </method>
            <javadoc line="689">
                Set the version number of the certificate.                
                <params>
                    val the Object class value for the Extensions                    
                </params>
                <exception>
                    CertificateException on invalid data.                    
                </exception>
            </javadoc>
            <method name="setVersion" type="void" line="694">
                <params>
                    <param name="val" type="Object"/>
                </params>
                <scope line="695"/>
            </method>
            <javadoc line="700">
                Set the serial number of the certificate.                
                <params>
                    val the Object class value for the CertificateSerialNumber                    
                </params>
                <exception>
                    CertificateException on invalid data.                    
                </exception>
            </javadoc>
            <method name="setSerialNumber" type="void" line="705">
                <params>
                    <param name="val" type="Object"/>
                </params>
                <scope line="706"/>
            </method>
            <javadoc line="711">
                Set the algorithm id of the certificate.                
                <params>
                    val the Object class value for the AlgorithmId                    
                </params>
                <exception>
                    CertificateException on invalid data.                    
                </exception>
            </javadoc>
            <method name="setAlgorithmId" type="void" line="716">
                <params>
                    <param name="val" type="Object"/>
                </params>
                <scope line="717"/>
            </method>
            <javadoc line="722">
                Set the issuer name of the certificate.                
                <params>
                    val the Object class value for the issuer                    
                </params>
                <exception>
                    CertificateException on invalid data.                    
                </exception>
            </javadoc>
            <method name="setIssuer" type="void" line="727">
                <params>
                    <param name="val" type="Object"/>
                </params>
                <scope line="728"/>
            </method>
            <javadoc line="733">
                Set the validity interval of the certificate.                
                <params>
                    val the Object class value for the CertificateValidity                    
                </params>
                <exception>
                    CertificateException on invalid data.                    
                </exception>
            </javadoc>
            <method name="setValidity" type="void" line="738">
                <params>
                    <param name="val" type="Object"/>
                </params>
                <scope line="739"/>
            </method>
            <javadoc line="744">
                Set the subject name of the certificate.                
                <params>
                    val the Object class value for the Subject                    
                </params>
                <exception>
                    CertificateException on invalid data.                    
                </exception>
            </javadoc>
            <method name="setSubject" type="void" line="749">
                <params>
                    <param name="val" type="Object"/>
                </params>
                <scope line="750"/>
            </method>
            <javadoc line="755">
                Set the public key in the certificate.                
                <params>
                    val the Object class value for the PublicKey                    
                </params>
                <exception>
                    CertificateException on invalid data.                    
                </exception>
            </javadoc>
            <method name="setKey" type="void" line="760">
                <params>
                    <param name="val" type="Object"/>
                </params>
                <scope line="761"/>
            </method>
            <javadoc line="766">
                Set the Issuer Unique Identity in the certificate.                
                <params>
                    val the Object class value for the IssuerUniqueId                    
                </params>
                <exception>
                    CertificateException                    
                </exception>
            </javadoc>
            <method name="setIssuerUniqueId" type="void" line="771">
                <params>
                    <param name="val" type="Object"/>
                </params>
                <scope line="772"/>
                <scope line="775"/>
            </method>
            <javadoc line="780">
                Set the Subject Unique Identity in the certificate.                
                <params>
                    val the Object class value for the SubjectUniqueId                    
                </params>
                <exception>
                    CertificateException                    
                </exception>
            </javadoc>
            <method name="setSubjectUniqueId" type="void" line="785">
                <params>
                    <param name="val" type="Object"/>
                </params>
                <scope line="786"/>
                <scope line="789"/>
            </method>
            <javadoc line="794">
                Set the extensions in the certificate.                
                <params>
                    val the Object class value for the Extensions                    
                </params>
                <exception>
                    CertificateException                    
                </exception>
            </javadoc>
            <method name="setExtensions" type="void" line="799">
                <params>
                    <param name="val" type="Object"/>
                </params>
                <scope line="800"/>
                <scope line="803"/>
            </method>
        </class>
    </source>