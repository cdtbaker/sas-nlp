<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.util.Enumeration"/>
        <import package="sun.security.util"/>
        <class name="AuthorityKeyIdentifierExtension" line="34">
            <extends class="Extension"/>
            <comment line="74">
                Private data members                
            </comment>
            <comment line="83">
                Encode only the extension value                
            </comment>
            <implements interface="CertAttrSet">
                <type_params>
                    <type_param name="String"/>
                </type_params>
            </implements>
            <javadoc line="34">
                This class represents the Authority Key Identifier Extension.
                  &lt;p&gt;The authority key identifier extension provides a means of
                  identifying the particular public key used to sign a certificate.
                  This extension would be used where an issuer has multiple signing
                  keys (either due to multiple concurrent key pairs or due to
                  changeover).
                  &lt;p&gt;
                  The ASN.1 syntax for this is:
                  &lt;pre&gt;
                  AuthorityKeyIdentifier ::= SEQUENCE {
                  keyIdentifier             [0] KeyIdentifier           OPTIONAL,
                  authorityCertIssuer       [1] GeneralNames            OPTIONAL,
                  authorityCertSerialNumber [2] CertificateSerialNumber OPTIONAL
                  }
                  KeyIdentifier ::= OCTET STRING
                  &lt;/pre&gt;                
                <author>
                    Amit Kapoor                    
                </author>
                <author>
                    Hemma Prafullchandra                    
                </author>
                <see>
                    Extension                    
                </see>
                <see>
                    CertAttrSet                    
                </see>
            </javadoc>
            <declaration name="IDENT" type="String" line="59"/>
            <javadoc line="59">
                Identifier for this attribute, to be used with the
                  get, set, delete methods of Certificate, x509 type.                
            </javadoc>
            <declaration name="NAME" type="String" line="65"/>
            <javadoc line="65">
                Attribute names.                
            </javadoc>
            <declaration name="KEY_ID" type="String" line="69"/>
            <declaration name="AUTH_NAME" type="String" line="70"/>
            <declaration name="SERIAL_NUMBER" type="String" line="71"/>
            <declaration name="TAG_ID" type="byte" line="74"/>
            <declaration name="TAG_NAMES" type="byte" line="75"/>
            <declaration name="TAG_SERIAL_NUM" type="byte" line="76"/>
            <declaration name="id" type="KeyIdentifier" line="78"/>
            <declaration name="names" type="GeneralNames" line="79"/>
            <declaration name="serialNum" type="SerialNumber" line="80"/>
            <method name="encodeThis" type="void" line="83">
                <scope line="84"/>
                <declaration name="seq" type="DerOutputStream" line="88"/>
                <declaration name="tmp" type="DerOutputStream" line="89"/>
                <scope line="90">
                    <declaration name="tmp1" type="DerOutputStream" line="91"/>
                </scope>
                <scope line="96">
                    <scope line="97">
                        <declaration name="tmp1" type="DerOutputStream" line="98"/>
                    </scope>
                </scope>
                <scope line="103"/>
                <scope line="106">
                    <declaration name="tmp1" type="DerOutputStream" line="107"/>
                </scope>
            </method>
            <javadoc line="116">
                The default constructor for this extension.  Null parameters make
                  the element optional (not present).                
                <param>
                    id the KeyIdentifier associated with this extension.                    
                </param>
                <param>
                    names the GeneralNames associated with this extension                    
                </param>
                <param>
                    serialNum the CertificateSerialNumber associated with
                      this extension.                    
                </param>
                <exception>
                    IOException on error.                    
                </exception>
            </javadoc>
            <method name="AuthorityKeyIdentifierExtension" type="constructor" line="128">
                <params>
                    <param name="kid" type="KeyIdentifier"/>
                    <param name="name" type="GeneralNames"/>
                    <param name="sn" type="SerialNumber"/>
                </params>
            </method>
            <javadoc line="138">
                Create the extension from the passed DER encoded value of the same.                
                <param>
                    critical true if the extension is to be treated as critical.                    
                </param>
                <param>
                    value an array of DER encoded bytes of the actual value.                    
                </param>
                <exception>
                    ClassCastException if value is not an array of bytes                    
                </exception>
                <exception>
                    IOException on error.                    
                </exception>
            </javadoc>
            <method name="AuthorityKeyIdentifierExtension" type="constructor" line="147">
                <params>
                    <param name="critical" type="Boolean"/>
                    <param name="value" type="Object"/>
                </params>
                <comment line="159">
                    Note that all the fields in AuthorityKeyIdentifier are defined as
                     being OPTIONAL, i.e., there could be an empty SEQUENCE, resulting
                     in val.data being null.                    
                </comment>
                <comment line="165">
                    NB. this is always encoded with the IMPLICIT tag
                     The checks only make sense if we assume implicit tagging,
                     with explicit tagging the form is always constructed.                    
                </comment>
                <declaration name="val" type="DerValue" line="152"/>
                <scope line="153"/>
                <scope line="161">
                    <declaration name="opt" type="DerValue" line="162"/>
                    <scope line="167"/>
                    <scope line="175"/>
                    <scope line="183"/>
                </scope>
            </method>
            <javadoc line="195">
                Return the object as a string.                
            </javadoc>
            <method name="toString" type="String" line="198">
                <comment line="202">
                    id already has a newline                    
                </comment>
                <declaration name="s" type="String" line="199"/>
                <scope line="200"/>
                <scope line="203"/>
                <scope line="206"/>
            </method>
            <javadoc line="212">
                Write the extension to the OutputStream.                
                <param>
                    out the OutputStream to write the extension to.                    
                </param>
                <exception>
                    IOException on error.                    
                </exception>
            </javadoc>
            <method name="encode" type="void" line="218">
                <params>
                    <param name="out" type="OutputStream"/>
                </params>
                <declaration name="tmp" type="DerOutputStream" line="219"/>
                <scope line="220"/>
            </method>
            <javadoc line="229">
                Set the attribute value.                
            </javadoc>
            <method name="set" type="void" line="232">
                <params>
                    <param name="name" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="233">
                    <scope line="234"/>
                </scope>
                <scope line="239">
                    <scope line="240"/>
                </scope>
                <scope line="245">
                    <scope line="246"/>
                </scope>
                <scope line="251"/>
            </method>
            <javadoc line="258">
                Get the attribute value.                
            </javadoc>
            <method name="get" type="Object" line="261">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="262"/>
                <scope line="264"/>
                <scope line="266"/>
                <scope line="268"/>
            </method>
            <javadoc line="274">
                Delete the attribute value.                
            </javadoc>
            <method name="delete" type="void" line="277">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="278"/>
                <scope line="280"/>
                <scope line="282"/>
                <scope line="284"/>
            </method>
            <javadoc line="291">
                Return an enumeration of names of attributes existing within this
                  attribute.                
            </javadoc>
            <method name="getElements" type="Enumeration<String>" line="295">
                <declaration name="elements" type="AttributeNameEnumeration" line="296"/>
            </method>
            <javadoc line="304">
                Return the name of this attribute.                
            </javadoc>
            <method name="getName" type="String" line="307"/>
        </class>
    </source>