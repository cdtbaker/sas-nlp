<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.util.Enumeration"/>
        <import package="sun.security.util"/>
        <class name="CertificateVersion" line="7">
            <implements interface="CertAttrSet">
                <type_params>
                    <type_param name="String"/>
                </type_params>
            </implements>
            <javadoc line="7">
                This class defines the version of the X509 Certificate.                
                <author>
                    Amit Kapoor                    
                </author>
                <author>
                    Hemma Prafullchandra                    
                </author>
                <see>
                    CertAttrSet                    
                </see>
            </javadoc>
            <declaration name="V1" type="int" line="14"/>
            <javadoc line="14">
                X509Certificate Version 1                
            </javadoc>
            <declaration name="V2" type="int" line="18"/>
            <javadoc line="18">
                X509Certificate Version 2                
            </javadoc>
            <declaration name="V3" type="int" line="22"/>
            <javadoc line="22">
                X509Certificate Version 3                
            </javadoc>
            <declaration name="IDENT" type="String" line="26"/>
            <javadoc line="26">
                Identifier for this attribute, to be used with the
                  get, set, delete methods of Certificate, x509 type.                
            </javadoc>
            <declaration name="NAME" type="String" line="31"/>
            <javadoc line="31">
                Sub attributes name for this CertAttrSet.                
            </javadoc>
            <declaration name="VERSION" type="String" line="35"/>
            <declaration name="version" type="int" line="36"/>
            <method name="getVersion" type="int" line="37"/>
            <method name="construct" type="void" line="40">
                <params>
                    <param name="derVal" type="DerValue"/>
                </params>
                <scope line="41">
                    <scope line="44"/>
                </scope>
            </method>
            <javadoc line="49">
                The default constructor for this class,
                  sets the version to 0 (i.e. X.509 version 1).                
            </javadoc>
            <method name="CertificateVersion" type="constructor" line="53"/>
            <javadoc line="56">
                The constructor for this class for the required version.                
                <param>
                    version the version for the certificate.                    
                </param>
                <exception>
                    IOException if the version is not valid.                    
                </exception>
            </javadoc>
            <method name="CertificateVersion" type="constructor" line="61">
                <params>
                    <param name="version" type="int"/>
                </params>
                <scope line="63"/>
            </method>
            <javadoc line="67">
                Create the object, decoding the values from the passed DER stream.                
                <param>
                    in the DerInputStream to read the CertificateVersion from.                    
                </param>
                <exception>
                    IOException on decoding errors.                    
                </exception>
            </javadoc>
            <method name="CertificateVersion" type="constructor" line="72">
                <params>
                    <param name="in" type="DerInputStream"/>
                </params>
                <declaration name="derVal" type="DerValue" line="74"/>
            </method>
            <javadoc line="77">
                Create the object, decoding the values from the passed stream.                
                <param>
                    in the InputStream to read the CertificateVersion from.                    
                </param>
                <exception>
                    IOException on decoding errors.                    
                </exception>
            </javadoc>
            <method name="CertificateVersion" type="constructor" line="82">
                <params>
                    <param name="in" type="InputStream"/>
                </params>
                <declaration name="derVal" type="DerValue" line="84"/>
            </method>
            <javadoc line="87">
                Create the object, decoding the values from the passed DerValue.                
                <param>
                    val the Der encoded value.                    
                </param>
                <exception>
                    IOException on decoding errors.                    
                </exception>
            </javadoc>
            <method name="CertificateVersion" type="constructor" line="92">
                <params>
                    <param name="val" type="DerValue"/>
                </params>
            </method>
            <javadoc line="96">
                Return the version number of the certificate.                
            </javadoc>
            <method name="toString" type="String" line="99"/>
            <javadoc line="102">
                Encode the CertificateVersion period in DER form to the stream.                
                <param>
                    out the OutputStream to marshal the contents to.                    
                </param>
                <exception>
                    IOException on errors.                    
                </exception>
            </javadoc>
            <method name="encode" type="void" line="107">
                <params>
                    <param name="out" type="OutputStream"/>
                </params>
                <scope line="108"/>
                <declaration name="tmp" type="DerOutputStream" line="111"/>
                <declaration name="seq" type="DerOutputStream" line="113"/>
            </method>
            <javadoc line="117">
                Set the attribute value.                
            </javadoc>
            <method name="set" type="void" line="120">
                <params>
                    <param name="name" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="121"/>
                <scope line="124"/>
                <scope line="127"/>
            </method>
            <javadoc line="131">
                Get the attribute value.                
            </javadoc>
            <method name="get" type="Object" line="134">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="135"/>
                <scope line="138"/>
            </method>
            <javadoc line="142">
                Delete the attribute value.                
            </javadoc>
            <method name="delete" type="void" line="145">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="146"/>
                <scope line="149"/>
            </method>
            <javadoc line="153">
                Return an enumeration of names of attributes existing within this
                  attribute.                
            </javadoc>
            <method name="getElements" type="Enumeration<String>" line="157">
                <declaration name="elements" type="AttributeNameEnumeration" line="158"/>
            </method>
            <javadoc line="162">
                Return the name of this attribute.                
            </javadoc>
            <method name="getName" type="String" line="165"/>
            <javadoc line="168">
                Compare versions.                
            </javadoc>
            <method name="compare" type="int" line="171">
                <params>
                    <param name="vers" type="int"/>
                </params>
            </method>
        </class>
    </source>