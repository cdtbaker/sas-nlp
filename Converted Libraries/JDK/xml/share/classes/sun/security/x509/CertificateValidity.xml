<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.security.cert"/>
        <import package="java.util.Date"/>
        <import package="java.util.Enumeration"/>
        <import package="sun.security.util"/>
        <class name="CertificateValidity" line="35">
            <comment line="57">
                Private data members                
            </comment>
            <comment line="61">
                Returns the first time the certificate is valid.                
            </comment>
            <comment line="66">
                Returns the last time the certificate is valid.                
            </comment>
            <comment line="71">
                Construct the class from the DerValue                
            </comment>
            <implements interface="CertAttrSet">
                <type_params>
                    <type_param name="String"/>
                </type_params>
            </implements>
            <javadoc line="35">
                This class defines the interval for which the certificate is valid.                
                <author>
                    Amit Kapoor                    
                </author>
                <author>
                    Hemma Prafullchandra                    
                </author>
                <see>
                    CertAttrSet                    
                </see>
            </javadoc>
            <declaration name="IDENT" type="String" line="43"/>
            <javadoc line="43">
                Identifier for this attribute, to be used with the
                  get, set, delete methods of Certificate, x509 type.                
            </javadoc>
            <declaration name="NAME" type="String" line="48"/>
            <javadoc line="48">
                Sub attributes name for this CertAttrSet.                
            </javadoc>
            <declaration name="NOT_BEFORE" type="String" line="52"/>
            <declaration name="NOT_AFTER" type="String" line="53"/>
            <declaration name="YR_2050" type="long" line="54"/>
            <declaration name="notBefore" type="Date" line="57"/>
            <declaration name="notAfter" type="Date" line="58"/>
            <method name="getNotBefore" type="Date" line="61"/>
            <method name="getNotAfter" type="Date" line="66"/>
            <method name="construct" type="void" line="71">
                <params>
                    <param name="derVal" type="DerValue"/>
                </params>
                <comment line="77">
                    check if UTCTime encoded or GeneralizedTime                    
                </comment>
                <scope line="72"/>
                <declaration name="derIn" type="DerInputStream" line="80"/>
                <declaration name="seq" type="DerValue[]" line="81"/>
                <scope line="85"/>
                <scope line="87"/>
                <scope line="89"/>
                <scope line="93"/>
                <scope line="95"/>
                <scope line="97"/>
            </method>
            <javadoc line="102">
                Default constructor for the class.                
            </javadoc>
            <method name="CertificateValidity" type="constructor" line="105"/>
            <javadoc line="107">
                The default constructor for this class for the specified interval.                
                <param>
                    notBefore the date and time before which the certificate
                      is not valid.                    
                </param>
                <param>
                    notAfter the date and time after which the certificate is
                      not valid.                    
                </param>
            </javadoc>
            <method name="CertificateValidity" type="constructor" line="115">
                <params>
                    <param name="notBefore" type="Date"/>
                    <param name="notAfter" type="Date"/>
                </params>
            </method>
            <javadoc line="120">
                Create the object, decoding the values from the passed DER stream.                
                <param>
                    in the DerInputStream to read the CertificateValidity from.                    
                </param>
                <exception>
                    IOException on decoding errors.                    
                </exception>
            </javadoc>
            <method name="CertificateValidity" type="constructor" line="126">
                <params>
                    <param name="in" type="DerInputStream"/>
                </params>
                <declaration name="derVal" type="DerValue" line="127"/>
            </method>
            <javadoc line="131">
                Return the validity period as user readable string.                
            </javadoc>
            <method name="toString" type="String" line="134"/>
            <javadoc line="141">
                Encode the CertificateValidity period in DER form to the stream.                
                <param>
                    out the OutputStream to marshal the contents to.                    
                </param>
                <exception>
                    IOException on errors.                    
                </exception>
            </javadoc>
            <method name="encode" type="void" line="147">
                <params>
                    <param name="out" type="OutputStream"/>
                </params>
                <comment line="150">
                    in cases where default constructor is used check for
                     null values                    
                </comment>
                <scope line="151"/>
                <declaration name="pair" type="DerOutputStream" line="155"/>
                <scope line="157"/>
                <scope line="162"/>
                <scope line="164"/>
                <declaration name="seq" type="DerOutputStream" line="167"/>
            </method>
            <javadoc line="173">
                Set the attribute value.                
            </javadoc>
            <method name="set" type="void" line="176">
                <params>
                    <param name="name" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="177"/>
                <scope line="180"/>
                <scope line="182"/>
                <scope line="184"/>
            </method>
            <javadoc line="190">
                Get the attribute value.                
            </javadoc>
            <method name="get" type="Object" line="193">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="194"/>
                <scope line="196"/>
                <scope line="198"/>
            </method>
            <javadoc line="204">
                Delete the attribute value.                
            </javadoc>
            <method name="delete" type="void" line="207">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="208"/>
                <scope line="210"/>
                <scope line="212"/>
            </method>
            <javadoc line="218">
                Return an enumeration of names of attributes existing within this
                  attribute.                
            </javadoc>
            <method name="getElements" type="Enumeration<String>" line="222">
                <declaration name="elements" type="AttributeNameEnumeration" line="223"/>
            </method>
            <javadoc line="230">
                Return the name of this attribute.                
            </javadoc>
            <method name="getName" type="String" line="233"/>
            <javadoc line="237">
                Verify that the current time is within the validity period.                
                <exception>
                    CertificateExpiredException if the certificate has expired.                    
                </exception>
                <exception>
                    CertificateNotYetValidException if the certificate is not
                      yet valid.                    
                </exception>
            </javadoc>
            <method name="valid" type="void" line="245">
                <declaration name="now" type="Date" line="246"/>
            </method>
            <javadoc line="250">
                Verify that the passed time is within the validity period.                
                <param>
                    now the Date against which to compare the validity
                      period.                    
                </param>
                <exception>
                    CertificateExpiredException if the certificate has expired
                      with respect to the <code>Date</code> supplied.                    
                </exception>
                <exception>
                    CertificateNotYetValidException if the certificate is not
                      yet valid with respect to the <code>Date</code> supplied.                    
                </exception>
            </javadoc>
            <method name="valid" type="void" line="262">
                <params>
                    <param name="now" type="Date"/>
                </params>
                <comment line="264">
                    we use the internal Dates rather than the passed in Date
                     because someone could override the Date methods after()
                     and before() to do something entirely different.                    
                </comment>
                <scope line="268"/>
                <scope line="272"/>
            </method>
        </class>
    </source>