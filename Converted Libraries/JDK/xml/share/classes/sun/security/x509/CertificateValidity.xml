<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.security.cert"/>
        <import package="java.util.Date"/>
        <import package="java.util.Enumeration"/>
        <import package="sun.security.util"/>
        <class name="CertificateValidity" line="8">
            <implements interface="CertAttrSet">
                <type_params>
                    <type_param name="String"/>
                </type_params>
            </implements>
            <javadoc line="8">
                This class defines the interval for which the certificate is valid.                
                <author>
                    Amit Kapoor                    
                </author>
                <author>
                    Hemma Prafullchandra                    
                </author>
                <see>
                    CertAttrSet                    
                </see>
            </javadoc>
            <declaration name="IDENT" type="String" line="15"/>
            <javadoc line="15">
                Identifier for this attribute, to be used with the
                  get, set, delete methods of Certificate, x509 type.                
            </javadoc>
            <declaration name="NAME" type="String" line="20"/>
            <javadoc line="20">
                Sub attributes name for this CertAttrSet.                
            </javadoc>
            <declaration name="NOT_BEFORE" type="String" line="24"/>
            <declaration name="NOT_AFTER" type="String" line="25"/>
            <declaration name="YR_2050" type="long" line="26"/>
            <declaration name="notBefore" type="Date" line="27"/>
            <declaration name="notAfter" type="Date" line="28"/>
            <method name="getNotBefore" type="Date" line="29"/>
            <method name="getNotAfter" type="Date" line="32"/>
            <method name="construct" type="void" line="35">
                <params>
                    <param name="derVal" type="DerValue"/>
                </params>
                <scope line="36"/>
                <declaration name="derIn" type="DerInputStream" line="40"/>
                <declaration name="seq" type="DerValue[]" line="41"/>
                <scope line="43"/>
                <scope line="46"/>
                <scope line="49"/>
                <scope line="52"/>
                <scope line="55"/>
                <scope line="58"/>
            </method>
            <javadoc line="62">
                Default constructor for the class.                
            </javadoc>
            <method name="CertificateValidity" type="constructor" line="65"/>
            <javadoc line="67">
                The default constructor for this class for the specified interval.                
                <param>
                    notBefore the date and time before which the certificate
                      is not valid.                    
                </param>
                <param>
                    notAfter the date and time after which the certificate is
                      not valid.                    
                </param>
            </javadoc>
            <method name="CertificateValidity" type="constructor" line="74">
                <params>
                    <param name="notBefore" type="Date"/>
                    <param name="notAfter" type="Date"/>
                </params>
            </method>
            <javadoc line="78">
                Create the object, decoding the values from the passed DER stream.                
                <param>
                    in the DerInputStream to read the CertificateValidity from.                    
                </param>
                <exception>
                    IOException on decoding errors.                    
                </exception>
            </javadoc>
            <method name="CertificateValidity" type="constructor" line="83">
                <params>
                    <param name="in" type="DerInputStream"/>
                </params>
                <declaration name="derVal" type="DerValue" line="84"/>
            </method>
            <javadoc line="87">
                Return the validity period as user readable string.                
            </javadoc>
            <method name="toString" type="String" line="90"/>
            <javadoc line="94">
                Encode the CertificateValidity period in DER form to the stream.                
                <param>
                    out the OutputStream to marshal the contents to.                    
                </param>
                <exception>
                    IOException on errors.                    
                </exception>
            </javadoc>
            <method name="encode" type="void" line="99">
                <params>
                    <param name="out" type="OutputStream"/>
                </params>
                <scope line="100"/>
                <declaration name="pair" type="DerOutputStream" line="103"/>
                <scope line="104"/>
                <scope line="108"/>
                <scope line="111"/>
                <declaration name="seq" type="DerOutputStream" line="114"/>
            </method>
            <javadoc line="118">
                Set the attribute value.                
            </javadoc>
            <method name="set" type="void" line="121">
                <params>
                    <param name="name" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="122"/>
                <scope line="125"/>
                <scope line="128"/>
                <scope line="131"/>
            </method>
            <javadoc line="135">
                Get the attribute value.                
            </javadoc>
            <method name="get" type="Object" line="138">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="139"/>
                <scope line="142"/>
                <scope line="145"/>
            </method>
            <javadoc line="149">
                Delete the attribute value.                
            </javadoc>
            <method name="delete" type="void" line="152">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="153"/>
                <scope line="156"/>
                <scope line="159"/>
            </method>
            <javadoc line="163">
                Return an enumeration of names of attributes existing within this
                  attribute.                
            </javadoc>
            <method name="getElements" type="Enumeration&lt;String&gt;" line="167">
                <declaration name="elements" type="AttributeNameEnumeration" line="168"/>
            </method>
            <javadoc line="173">
                Return the name of this attribute.                
            </javadoc>
            <method name="getName" type="String" line="176"/>
            <javadoc line="179">
                Verify that the current time is within the validity period.                
                <exception>
                    CertificateExpiredException if the certificate has expired.                    
                </exception>
                <exception>
                    CertificateNotYetValidException if the certificate is not
                      yet valid.                    
                </exception>
            </javadoc>
            <method name="valid" type="void" line="185">
                <declaration name="now" type="Date" line="186"/>
            </method>
            <javadoc line="189">
                Verify that the passed time is within the validity period.                
                <param>
                    now the Date against which to compare the validity
                      period.                    
                </param>
                <exception>
                    CertificateExpiredException if the certificate has expired
                      with respect to the &lt;code&gt;Date&lt;/code&gt; supplied.                    
                </exception>
                <exception>
                    CertificateNotYetValidException if the certificate is not
                      yet valid with respect to the &lt;code&gt;Date&lt;/code&gt; supplied.                    
                </exception>
            </javadoc>
            <method name="valid" type="void" line="198">
                <params>
                    <param name="now" type="Date"/>
                </params>
                <scope line="199"/>
                <scope line="202"/>
            </method>
        </class>
    </source>