<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io.IOException"/>
        <import package="sun.security.util"/>
        <class name="OIDName" line="32">
            <implements interface="GeneralNameInterface"/>
            <javadoc line="32">
                This class implements the OIDName as required by the GeneralNames
                  ASN.1 object.                
                <author>
                    Amit Kapoor                    
                </author>
                <author>
                    Hemma Prafullchandra                    
                </author>
                <see>
                    GeneralName                    
                </see>
                <see>
                    GeneralNames                    
                </see>
                <see>
                    GeneralNameInterface                    
                </see>
            </javadoc>
            <declaration name="oid" type="ObjectIdentifier" line="43"/>
            <javadoc line="45">
                Create the OIDName object from the passed encoded Der value.                
                <param>
                    derValue the encoded DER OIDName.                    
                </param>
                <exception>
                    IOException on error.                    
                </exception>
            </javadoc>
            <method name="OIDName" type="constructor" line="51">
                <params>
                    <param name="derValue" type="DerValue"/>
                </params>
            </method>
            <javadoc line="55">
                Create the OIDName object with the specified name.                
                <param>
                    name the OIDName.                    
                </param>
            </javadoc>
            <method name="OIDName" type="constructor" line="60">
                <params>
                    <param name="oid" type="ObjectIdentifier"/>
                </params>
            </method>
            <javadoc line="64">
                Create the OIDName from the String form of the OID                
                <param>
                    name the OIDName in form &quot;x.y.z...&quot;                    
                </param>
                <throws>
                    IOException on error                    
                </throws>
            </javadoc>
            <method name="OIDName" type="constructor" line="70">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="71"/>
                <scope line="73"/>
            </method>
            <javadoc line="78">
                Return the type of the GeneralName.                
            </javadoc>
            <method name="getType" type="int" line="81"/>
            <javadoc line="85">
                Encode the OID name into the DerOutputStream.                
                <param>
                    out the DER stream to encode the OIDName to.                    
                </param>
                <exception>
                    IOException on encoding errors.                    
                </exception>
            </javadoc>
            <method name="encode" type="void" line="91">
                <params>
                    <param name="out" type="DerOutputStream"/>
                </params>
            </method>
            <javadoc line="95">
                Convert the name into user readable string.                
            </javadoc>
            <method name="toString" type="String" line="98"/>
            <javadoc line="102">
                Returns this OID name.                
            </javadoc>
            <method name="getOID" type="ObjectIdentifier" line="105"/>
            <javadoc line="109">
                Compares this name with another, for equality.                
                <return>
                    true iff the names are identical                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="114">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <declaration name="other" type="OIDName" line="121"/>
            </method>
            <javadoc line="126">
                Returns the hash code value for this object.                
                <return>
                    a hash code value for this object.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="131"/>
            <javadoc line="135">
                Return type of constraint inputName places on this name:&lt;ul&gt;
                  &lt;li&gt;NAME_DIFF_TYPE = -1: input name is different type from name (i.e. does not constrain).
                  &lt;li&gt;NAME_MATCH = 0: input name matches name.
                  &lt;li&gt;NAME_NARROWS = 1: input name narrows name (is lower in the naming subtree)
                  &lt;li&gt;NAME_WIDENS = 2: input name widens name (is higher in the naming subtree)
                  &lt;li&gt;NAME_SAME_TYPE = 3: input name does not match or narrow name, but is same type.
                  &lt;/ul&gt;.  These results are used in checking NameConstraints during
                  certification path verification.                
                <param>
                    inputName to be checked for being constrained                    
                </param>
                <returns>
                    constraint type above                    
                </returns>
                <throws>
                    UnsupportedOperationException if name is not exact match, but narrowing and widening are
                      not supported for this name type.                    
                </throws>
            </javadoc>
            <method name="constrains" type="int" line="150">
                <params>
                    <param name="inputName" type="GeneralNameInterface"/>
                </params>
                <comment line="160">
                    widens and narrows not defined in RFC2459 for OIDName (aka registeredID)                    
                </comment>
                <declaration name="constraintType" type="int" line="151"/>
            </method>
            <javadoc line="164">
                Return subtree depth of this name for purposes of determining
                  NameConstraints minimum and maximum bounds and for calculating
                  path lengths in name subtrees.                
                <returns>
                    distance of name from root                    
                </returns>
                <throws>
                    UnsupportedOperationException if not supported for this name type                    
                </throws>
            </javadoc>
            <method name="subtreeDepth" type="int" line="172"/>
        </class>
    </source>