<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.util.Enumeration"/>
        <import package="sun.security.util"/>
        <class name="KeyUsageExtension" line="34">
            <extends class="Extension"/>
            <comment line="71">
                Private data members                
            </comment>
            <comment line="74">
                Encode this extension value                
            </comment>
            <implements interface="CertAttrSet">
                <type_params>
                    <type_param name="String"/>
                </type_params>
            </implements>
            <javadoc line="34">
                Represent the Key Usage Extension.
                  &lt;p&gt;This extension, if present, defines the purpose (e.g., encipherment,
                  signature, certificate signing) of the key contained in the certificate.
                  The usage restriction might be employed when a multipurpose key is to be
                  restricted (e.g., when an RSA key should be used only for signing or only
                  for key encipherment).                
                <author>
                    Amit Kapoor                    
                </author>
                <author>
                    Hemma Prafullchandra                    
                </author>
                <see>
                    Extension                    
                </see>
                <see>
                    CertAttrSet                    
                </see>
            </javadoc>
            <declaration name="IDENT" type="String" line="51"/>
            <javadoc line="51">
                Identifier for this attribute, to be used with the
                  get, set, delete methods of Certificate, x509 type.                
            </javadoc>
            <declaration name="NAME" type="String" line="56"/>
            <javadoc line="56">
                Attribute names.                
            </javadoc>
            <declaration name="DIGITAL_SIGNATURE" type="String" line="60"/>
            <declaration name="NON_REPUDIATION" type="String" line="61"/>
            <declaration name="KEY_ENCIPHERMENT" type="String" line="62"/>
            <declaration name="DATA_ENCIPHERMENT" type="String" line="63"/>
            <declaration name="KEY_AGREEMENT" type="String" line="64"/>
            <declaration name="KEY_CERTSIGN" type="String" line="65"/>
            <declaration name="CRL_SIGN" type="String" line="66"/>
            <declaration name="ENCIPHER_ONLY" type="String" line="67"/>
            <declaration name="DECIPHER_ONLY" type="String" line="68"/>
            <declaration name="bitString" type="boolean[]" line="71"/>
            <method name="encodeThis" type="void" line="74">
                <declaration name="os" type="DerOutputStream" line="75"/>
            </method>
            <javadoc line="80">
                Check if bit is set.                
                <param>
                    position the position in the bit string to check.                    
                </param>
            </javadoc>
            <method name="isSet" type="boolean" line="85">
                <params>
                    <param name="position" type="int"/>
                </params>
            </method>
            <javadoc line="89">
                Set the bit at the specified position.                
            </javadoc>
            <method name="set" type="void" line="92">
                <params>
                    <param name="position" type="int"/>
                    <param name="val" type="boolean"/>
                </params>
                <comment line="93">
                    enlarge bitString if necessary                    
                </comment>
                <scope line="94">
                    <declaration name="tmp" type="boolean[]" line="95"/>
                </scope>
            </method>
            <javadoc line="102">
                Create a KeyUsageExtension with the passed bit settings. The criticality
                  is set to true.                
                <param>
                    bitString the bits to be set for the extension.                    
                </param>
            </javadoc>
            <method name="KeyUsageExtension" type="constructor" line="108">
                <params>
                    <param name="bitString" type="byte[]"/>
                </params>
            </method>
            <javadoc line="116">
                Create a KeyUsageExtension with the passed bit settings. The criticality
                  is set to true.                
                <param>
                    bitString the bits to be set for the extension.                    
                </param>
            </javadoc>
            <method name="KeyUsageExtension" type="constructor" line="122">
                <params>
                    <param name="bitString" type="boolean[]"/>
                </params>
            </method>
            <javadoc line="129">
                Create a KeyUsageExtension with the passed bit settings. The criticality
                  is set to true.                
                <param>
                    bitString the bits to be set for the extension.                    
                </param>
            </javadoc>
            <method name="KeyUsageExtension" type="constructor" line="135">
                <params>
                    <param name="bitString" type="BitArray"/>
                </params>
            </method>
            <javadoc line="142">
                Create the extension from the passed DER encoded value of the same.
                  The DER encoded value may be wrapped in an OCTET STRING.                
                <param>
                    critical true if the extension is to be treated as critical.                    
                </param>
                <param>
                    value an array of DER encoded bytes of the actual value (possibly
                      wrapped in an OCTET STRING).                    
                </param>
                <exception>
                    ClassCastException if value is not an array of bytes                    
                </exception>
                <exception>
                    IOException on error.                    
                </exception>
            </javadoc>
            <method name="KeyUsageExtension" type="constructor" line="153">
                <params>
                    <param name="critical" type="Boolean"/>
                    <param name="value" type="Object"/>
                </params>
                <comment line="156">
                    The following check should be activated again after
                     the PKIX profiling work becomes standard and the check
                     is not a barrier to interoperability !
                     if (!this.critical) {
                       throw new IOException(&quot;KeyUsageExtension not marked critical,&quot;
                                             + &quot; invalid profile.&quot;);
                     }                    
                </comment>
                <declaration name="extValue" type="byte[]" line="165"/>
                <scope line="166"/>
                <scope line="168"/>
                <declaration name="val" type="DerValue" line="171"/>
            </method>
            <javadoc line="175">
                Create a default key usage.                
            </javadoc>
            <method name="KeyUsageExtension" type="constructor" line="178"/>
            <javadoc line="184">
                Set the attribute value.                
            </javadoc>
            <method name="set" type="void" line="187">
                <params>
                    <param name="name" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="188"/>
                <declaration name="val" type="boolean" line="191"/>
                <scope line="192"/>
                <scope line="194"/>
                <scope line="196"/>
                <scope line="198"/>
                <scope line="200"/>
                <scope line="202"/>
                <scope line="204"/>
                <scope line="206"/>
                <scope line="208"/>
                <scope line="210"/>
            </method>
            <javadoc line="217">
                Get the attribute value.                
            </javadoc>
            <method name="get" type="Object" line="220">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="221"/>
                <scope line="223"/>
                <scope line="225"/>
                <scope line="227"/>
                <scope line="229"/>
                <scope line="231"/>
                <scope line="233"/>
                <scope line="235"/>
                <scope line="237"/>
                <scope line="239"/>
            </method>
            <javadoc line="245">
                Delete the attribute value.                
            </javadoc>
            <method name="delete" type="void" line="248">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="249"/>
                <scope line="251"/>
                <scope line="253"/>
                <scope line="255"/>
                <scope line="257"/>
                <scope line="259"/>
                <scope line="261"/>
                <scope line="263"/>
                <scope line="265"/>
                <scope line="267"/>
            </method>
            <javadoc line="274">
                Returns a printable representation of the KeyUsage.                
            </javadoc>
            <method name="toString" type="String" line="277">
                <declaration name="s" type="String" line="278"/>
                <scope line="280">
                    <scope line="281"/>
                    <scope line="284"/>
                    <scope line="287"/>
                    <scope line="290"/>
                    <scope line="293"/>
                    <scope line="296"/>
                    <scope line="299"/>
                    <scope line="302"/>
                    <scope line="305"/>
                </scope>
                <scope line="308"/>
            </method>
            <javadoc line="315">
                Write the extension to the DerOutputStream.                
                <param>
                    out the DerOutputStream to write the extension to.                    
                </param>
                <exception>
                    IOException on encoding errors.                    
                </exception>
            </javadoc>
            <method name="encode" type="void" line="321">
                <params>
                    <param name="out" type="OutputStream"/>
                </params>
                <declaration name="tmp" type="DerOutputStream" line="322"/>
                <scope line="324"/>
            </method>
            <javadoc line="333">
                Return an enumeration of names of attributes existing within this
                  attribute.                
            </javadoc>
            <method name="getElements" type="Enumeration<String>" line="337">
                <declaration name="elements" type="AttributeNameEnumeration" line="338"/>
            </method>
            <method name="getBits" type="boolean[]" line="353"/>
            <javadoc line="357">
                Return the name of this attribute.                
            </javadoc>
            <method name="getName" type="String" line="360"/>
        </class>
    </source>