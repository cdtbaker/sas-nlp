<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.util.Enumeration"/>
        <import package="sun.security.util"/>
        <class name="BasicConstraintsExtension" line="34">
            <extends class="Extension"/>
            <comment line="68">
                Private data members                
            </comment>
            <comment line="72">
                Encode this extension value                
            </comment>
            <implements interface="CertAttrSet">
                <type_params>
                    <type_param name="String"/>
                </type_params>
            </implements>
            <javadoc line="34">
                This class represents the Basic Constraints Extension.
                  &lt;p&gt;The basic constraints extension identifies whether the subject of the
                  certificate is a CA and how deep a certification path may exist
                  through that CA.
                  &lt;pre&gt;
                  The ASN.1 syntax for this extension is:
                  BasicConstraints ::= SEQUENCE {
                  cA                BOOLEAN DEFAULT FALSE,
                  pathLenConstraint INTEGER (0..MAX) OPTIONAL
                  }
                  &lt;/pre&gt;                
                <author>
                    Amit Kapoor                    
                </author>
                <author>
                    Hemma Prafullchandra                    
                </author>
                <see>
                    CertAttrSet                    
                </see>
                <see>
                    Extension                    
                </see>
            </javadoc>
            <declaration name="IDENT" type="String" line="55"/>
            <javadoc line="55">
                Identifier for this attribute, to be used with the
                  get, set, delete methods of Certificate, x509 type.                
            </javadoc>
            <declaration name="NAME" type="String" line="60"/>
            <javadoc line="60">
                Attribute names.                
            </javadoc>
            <declaration name="IS_CA" type="String" line="64"/>
            <declaration name="PATH_LEN" type="String" line="65"/>
            <declaration name="ca" type="boolean" line="68"/>
            <declaration name="pathLen" type="int" line="69"/>
            <method name="encodeThis" type="void" line="72">
                <comment line="78">
                    Only encode pathLen when ca == true                    
                </comment>
                <declaration name="out" type="DerOutputStream" line="73"/>
                <declaration name="tmp" type="DerOutputStream" line="74"/>
                <scope line="76">
                    <scope line="79"/>
                </scope>
            </method>
            <javadoc line="87">
                Default constructor for this object. The extension is marked
                  critical if the ca flag is true, false otherwise.                
                <param>
                    ca true, if the subject of the Certificate is a CA.                    
                </param>
                <param>
                    len specifies the depth of the certification path.                    
                </param>
            </javadoc>
            <method name="BasicConstraintsExtension" type="constructor" line="94">
                <params>
                    <param name="ca" type="boolean"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <javadoc line="98">
                Constructor for this object with specified criticality.                
                <param>
                    critical true, if the extension should be marked critical                    
                </param>
                <param>
                    ca true, if the subject of the Certificate is a CA.                    
                </param>
                <param>
                    len specifies the depth of the certification path.                    
                </param>
            </javadoc>
            <method name="BasicConstraintsExtension" type="constructor" line="106">
                <params>
                    <param name="critical" type="Boolean"/>
                    <param name="ca" type="boolean"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <javadoc line="114">
                Create the extension from the passed DER encoded value of the same.                
                <param>
                    critical flag indicating if extension is critical or not                    
                </param>
                <param>
                    value an array containing the DER encoded bytes of the extension.                    
                </param>
                <exception>
                    ClassCastException if value is not an array of bytes                    
                </exception>
                <exception>
                    IOException on error.                    
                </exception>
            </javadoc>
            <method name="BasicConstraintsExtension" type="constructor" line="124">
                <params>
                    <param name="critical" type="Boolean"/>
                    <param name="value" type="Object"/>
                </params>
                <comment line="135">
                    non-CA cert (&quot;cA&quot; field is FALSE by default), return -1                    
                </comment>
                <comment line="140">
                    non-CA cert (&quot;cA&quot; field is FALSE by default), return -1                    
                </comment>
                <comment line="146">
                    From PKIX profile:                    
                </comment>
                <comment line="147">
                    Where pathLenConstraint does not appear, there is no                    
                </comment>
                <comment line="148">
                    limit to the allowed length of the certification path.                    
                </comment>
                <comment line="158">
                    Activate this check once again after PKIX profiling
                     is a standard and this check no longer imposes an
                     interoperability barrier.
                     if (ca) {
                       if (!this.critical) {
                       throw new IOException(&quot;Criticality cannot be false for CA.&quot;);
                       }
                     }                    
                </comment>
                <declaration name="val" type="DerValue" line="129"/>
                <scope line="130"/>
                <scope line="134"/>
                <declaration name="opt" type="DerValue" line="138"/>
                <scope line="139"/>
                <scope line="145"/>
                <scope line="154"/>
            </method>
            <javadoc line="170">
                Return user readable form of extension.                
            </javadoc>
            <method name="toString" type="String" line="173">
                <declaration name="s" type="String" line="174"/>
                <scope line="177"/>
                <scope line="179"/>
            </method>
            <javadoc line="185">
                Encode this extension value to the output stream.                
                <param>
                    out the DerOutputStream to encode the extension to.                    
                </param>
            </javadoc>
            <method name="encode" type="void" line="190">
                <params>
                    <param name="out" type="OutputStream"/>
                </params>
                <declaration name="tmp" type="DerOutputStream" line="191"/>
                <scope line="192">
                    <scope line="194"/>
                    <scope line="196"/>
                </scope>
            </method>
            <javadoc line="206">
                Set the attribute value.                
            </javadoc>
            <method name="set" type="void" line="209">
                <params>
                    <param name="name" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="210">
                    <scope line="211"/>
                </scope>
                <scope line="215">
                    <scope line="216"/>
                </scope>
                <scope line="220"/>
            </method>
            <javadoc line="227">
                Get the attribute value.                
            </javadoc>
            <method name="get" type="Object" line="230">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="231"/>
                <scope line="233"/>
                <scope line="235"/>
            </method>
            <javadoc line="241">
                Delete the attribute value.                
            </javadoc>
            <method name="delete" type="void" line="244">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="245"/>
                <scope line="247"/>
                <scope line="249"/>
            </method>
            <javadoc line="256">
                Return an enumeration of names of attributes existing within this
                  attribute.                
            </javadoc>
            <method name="getElements" type="Enumeration<String>" line="260">
                <declaration name="elements" type="AttributeNameEnumeration" line="261"/>
            </method>
            <javadoc line="268">
                Return the name of this attribute.                
            </javadoc>
            <method name="getName" type="String" line="271"/>
        </class>
    </source>