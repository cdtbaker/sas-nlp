<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.util.Enumeration"/>
        <import package="sun.security.util"/>
        <class name="BasicConstraintsExtension" line="6">
            <extends class="Extension"/>
            <implements interface="CertAttrSet">
                <type_params>
                    <type_param name="String"/>
                </type_params>
            </implements>
            <javadoc line="6">
                This class represents the Basic Constraints Extension.
                  &lt;p&gt;The basic constraints extension identifies whether the subject of the
                  certificate is a CA and how deep a certification path may exist
                  through that CA.
                  &lt;pre&gt;
                  The ASN.1 syntax for this extension is:
                  BasicConstraints ::= SEQUENCE {
                  cA                BOOLEAN DEFAULT FALSE,
                  pathLenConstraint INTEGER (0..MAX) OPTIONAL
                  }
                  &lt;/pre&gt;                
                <author>
                    Amit Kapoor                    
                </author>
                <author>
                    Hemma Prafullchandra                    
                </author>
                <see>
                    CertAttrSet                    
                </see>
                <see>
                    Extension                    
                </see>
            </javadoc>
            <declaration name="IDENT" type="String" line="24"/>
            <javadoc line="24">
                Identifier for this attribute, to be used with the
                  get, set, delete methods of Certificate, x509 type.                
            </javadoc>
            <declaration name="NAME" type="String" line="29"/>
            <javadoc line="29">
                Attribute names.                
            </javadoc>
            <declaration name="IS_CA" type="String" line="33"/>
            <declaration name="PATH_LEN" type="String" line="34"/>
            <declaration name="ca" type="boolean" line="35"/>
            <declaration name="pathLen" type="int" line="36"/>
            <method name="encodeThis" type="void" line="37">
                <declaration name="out" type="DerOutputStream" line="38"/>
                <declaration name="tmp" type="DerOutputStream" line="39"/>
                <scope line="40">
                    <scope line="42"/>
                </scope>
            </method>
            <javadoc line="49">
                Default constructor for this object. The extension is marked
                  critical if the ca flag is true, false otherwise.                
                <param>
                    ca true, if the subject of the Certificate is a CA.                    
                </param>
                <param>
                    len specifies the depth of the certification path.                    
                </param>
            </javadoc>
            <method name="BasicConstraintsExtension" type="constructor" line="55">
                <params>
                    <param name="ca" type="boolean"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <javadoc line="58">
                Constructor for this object with specified criticality.                
                <param>
                    critical true, if the extension should be marked critical                    
                </param>
                <param>
                    ca true, if the subject of the Certificate is a CA.                    
                </param>
                <param>
                    len specifies the depth of the certification path.                    
                </param>
            </javadoc>
            <method name="BasicConstraintsExtension" type="constructor" line="64">
                <params>
                    <param name="critical" type="Boolean"/>
                    <param name="ca" type="boolean"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <javadoc line="71">
                Create the extension from the passed DER encoded value of the same.                
                <param>
                    critical flag indicating if extension is critical or not                    
                </param>
                <param>
                    value an array containing the DER encoded bytes of the extension.                    
                </param>
                <exception>
                    ClassCastException if value is not an array of bytes                    
                </exception>
                <exception>
                    IOException on error.                    
                </exception>
            </javadoc>
            <method name="BasicConstraintsExtension" type="constructor" line="78">
                <params>
                    <param name="critical" type="Boolean"/>
                    <param name="value" type="Object"/>
                </params>
                <declaration name="val" type="DerValue" line="82"/>
                <scope line="83"/>
                <scope line="86"/>
                <declaration name="opt" type="DerValue" line="89"/>
                <scope line="90"/>
                <scope line="94"/>
                <scope line="99"/>
            </method>
            <javadoc line="104">
                Return user readable form of extension.                
            </javadoc>
            <method name="toString" type="String" line="107">
                <declaration name="s" type="String" line="108"/>
                <scope line="110"/>
                <scope line="113"/>
            </method>
            <javadoc line="118">
                Encode this extension value to the output stream.                
                <param>
                    out the DerOutputStream to encode the extension to.                    
                </param>
            </javadoc>
            <method name="encode" type="void" line="122">
                <params>
                    <param name="out" type="OutputStream"/>
                </params>
                <declaration name="tmp" type="DerOutputStream" line="123"/>
                <scope line="124">
                    <scope line="126"/>
                    <scope line="129"/>
                </scope>
            </method>
            <javadoc line="137">
                Set the attribute value.                
            </javadoc>
            <method name="set" type="void" line="140">
                <params>
                    <param name="name" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="141">
                    <scope line="142"/>
                </scope>
                <scope line="147">
                    <scope line="148"/>
                </scope>
                <scope line="153"/>
            </method>
            <javadoc line="158">
                Get the attribute value.                
            </javadoc>
            <method name="get" type="Object" line="161">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="162"/>
                <scope line="165"/>
                <scope line="168"/>
            </method>
            <javadoc line="172">
                Delete the attribute value.                
            </javadoc>
            <method name="delete" type="void" line="175">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="176"/>
                <scope line="179"/>
                <scope line="182"/>
            </method>
            <javadoc line="187">
                Return an enumeration of names of attributes existing within this
                  attribute.                
            </javadoc>
            <method name="getElements" type="Enumeration<String>" line="191">
                <declaration name="elements" type="AttributeNameEnumeration" line="192"/>
            </method>
            <javadoc line="197">
                Return the name of this attribute.                
            </javadoc>
            <method name="getName" type="String" line="200"/>
        </class>
    </source>