<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.util.Enumeration"/>
        <import package="sun.security.util"/>
        <class name="IssuerAlternativeNameExtension" line="6">
            <extends class="Extension"/>
            <implements interface="CertAttrSet">
                <type_params>
                    <type_param name="String"/>
                </type_params>
            </implements>
            <javadoc line="6">
                This represents the Issuer Alternative Name Extension.
                  This extension, if present, allows the issuer to specify multiple
                  alternative names.
                  &lt;p&gt;Extensions are represented as a sequence of the extension identifier
                  (Object Identifier), a boolean flag stating whether the extension is to
                  be treated as being critical and the extension value itself (this is again
                  a DER encoding of the extension value).                
                <author>
                    Amit Kapoor                    
                </author>
                <author>
                    Hemma Prafullchandra                    
                </author>
                <see>
                    Extension                    
                </see>
                <see>
                    CertAttrSet                    
                </see>
            </javadoc>
            <declaration name="IDENT" type="String" line="20"/>
            <javadoc line="20">
                Identifier for this attribute, to be used with the
                  get, set, delete methods of Certificate, x509 type.                
            </javadoc>
            <declaration name="NAME" type="String" line="25"/>
            <javadoc line="25">
                Attribute names.                
            </javadoc>
            <declaration name="ISSUER_NAME" type="String" line="29"/>
            <declaration name="names" type="GeneralNames" line="30"/>
            <method name="encodeThis" type="void" line="31">
                <scope line="32"/>
                <declaration name="os" type="DerOutputStream" line="36"/>
            </method>
            <javadoc line="40">
                Create a IssuerAlternativeNameExtension with the passed GeneralNames.                
                <param>
                    names the GeneralNames for the issuer.                    
                </param>
                <exception>
                    IOException on error.                    
                </exception>
            </javadoc>
            <method name="IssuerAlternativeNameExtension" type="constructor" line="45">
                <params>
                    <param name="names" type="GeneralNames"/>
                </params>
            </method>
            <javadoc line="51">
                Create a IssuerAlternativeNameExtension with the passed criticality
                  and GeneralNames.                
                <param>
                    critical true if the extension is to be treated as critical.                    
                </param>
                <param>
                    names the GeneralNames for the issuer.                    
                </param>
                <exception>
                    IOException on error.                    
                </exception>
            </javadoc>
            <method name="IssuerAlternativeNameExtension" type="constructor" line="58">
                <params>
                    <param name="critical" type="Boolean"/>
                    <param name="names" type="GeneralNames"/>
                </params>
            </method>
            <javadoc line="64">
                Create a default IssuerAlternativeNameExtension.                
            </javadoc>
            <method name="IssuerAlternativeNameExtension" type="constructor" line="67"/>
            <javadoc line="72">
                Create the extension from the passed DER encoded value.                
                <param>
                    critical true if the extension is to be treated as critical.                    
                </param>
                <param>
                    value an array of DER encoded bytes of the actual value.                    
                </param>
                <exception>
                    ClassCastException if value is not an array of bytes                    
                </exception>
                <exception>
                    IOException on error.                    
                </exception>
            </javadoc>
            <method name="IssuerAlternativeNameExtension" type="constructor" line="79">
                <params>
                    <param name="critical" type="Boolean"/>
                    <param name="value" type="Object"/>
                </params>
                <declaration name="val" type="DerValue" line="83"/>
                <scope line="84"/>
            </method>
            <javadoc line="90">
                Returns a printable representation of the IssuerAlternativeName.                
            </javadoc>
            <method name="toString" type="String" line="93">
                <declaration name="result" type="String" line="94"/>
                <scope line="95"/>
                <scope line="98">
                    <scope line="99"/>
                </scope>
            </method>
            <javadoc line="106">
                Write the extension to the OutputStream.                
                <param>
                    out the OutputStream to write the extension to.                    
                </param>
                <exception>
                    IOException on encoding error.                    
                </exception>
            </javadoc>
            <method name="encode" type="void" line="111">
                <params>
                    <param name="out" type="OutputStream"/>
                </params>
                <declaration name="tmp" type="DerOutputStream" line="112"/>
                <scope line="113"/>
            </method>
            <javadoc line="121">
                Set the attribute value.                
            </javadoc>
            <method name="set" type="void" line="124">
                <params>
                    <param name="name" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="125">
                    <scope line="126"/>
                </scope>
                <scope line="131"/>
            </method>
            <javadoc line="136">
                Get the attribute value.                
            </javadoc>
            <method name="get" type="Object" line="139">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="140"/>
                <scope line="143"/>
            </method>
            <javadoc line="147">
                Delete the attribute value.                
            </javadoc>
            <method name="delete" type="void" line="150">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="151"/>
                <scope line="154"/>
            </method>
            <javadoc line="159">
                Return an enumeration of names of attributes existing within this
                  attribute.                
            </javadoc>
            <method name="getElements" type="Enumeration<String>" line="163">
                <declaration name="elements" type="AttributeNameEnumeration" line="164"/>
            </method>
            <javadoc line="168">
                Return the name of this attribute.                
            </javadoc>
            <method name="getName" type="String" line="171"/>
        </class>
    </source>