<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io.IOException"/>
        <import package="java.util"/>
        <import package="sun.security.util.BitArray"/>
        <import package="sun.security.util.DerOutputStream"/>
        <import package="sun.security.util.DerValue"/>
        <class name="DistributionPoint" line="35">
            <comment line="99">
                reason flag bits                
            </comment>
            <comment line="100">
                NOTE that these are NOT quite the same as the CRL reason code extension                
            </comment>
            <comment line="122">
                context specific tag values                
            </comment>
            <comment line="130">
                only one of fullName and relativeName can be set                
            </comment>
            <comment line="134">
                reasonFlags or null                
            </comment>
            <comment line="137">
                crlIssuer or null                
            </comment>
            <comment line="140">
                cached hashCode value                
            </comment>
            <javadoc line="35">
                Represent the DistributionPoint sequence used in the CRL
                  Distribution Points Extension (OID = 2.5.29.31).
                  &lt;p&gt;
                  The ASN.1 definition for this is:
                  &lt;pre&gt;
                  DistributionPoint ::= SEQUENCE {
                  distributionPoint       [0]     DistributionPointName OPTIONAL,
                  reasons                 [1]     ReasonFlags OPTIONAL,
                  cRLIssuer               [2]     GeneralNames OPTIONAL }
                  DistributionPointName ::= CHOICE {
                  fullName                [0]     GeneralNames,
                  nameRelativeToCRLIssuer [1]     RelativeDistinguishedName }
                  ReasonFlags ::= BIT STRING {
                  unused                  (0),
                  keyCompromise           (1),
                  cACompromise            (2),
                  affiliationChanged      (3),
                  superseded              (4),
                  cessationOfOperation    (5),
                  certificateHold         (6),
                  privilegeWithdrawn      (7),
                  aACompromise            (8) }
                  GeneralNames ::= SEQUENCE SIZE (1..MAX) OF GeneralName
                  GeneralName ::= CHOICE {
                  otherName                   [0] INSTANCE OF OTHER-NAME,
                  rfc822Name                  [1] IA5String,
                  dNSName                     [2] IA5String,
                  x400Address                 [3] ORAddress,
                  directoryName               [4] Name,
                  ediPartyName                [5] EDIPartyName,
                  uniformResourceIdentifier   [6] IA5String,
                  iPAddress                   [7] OCTET STRING,
                  registeredID                [8] OBJECT IDENTIFIER }
                  RelativeDistinguishedName ::=
                  SET OF AttributeTypeAndValue
                  AttributeTypeAndValue ::= SEQUENCE {
                  type     AttributeType,
                  value    AttributeValue }
                  AttributeType ::= OBJECT IDENTIFIER
                  AttributeValue ::= ANY DEFINED BY AttributeType
                  &lt;/pre&gt;
                  &lt;p&gt;
                  Instances of this class are designed to be immutable. However, since this
                  is an internal API we do not use defensive cloning for values for
                  performance reasons. It is the responsibility of the consumer to ensure
                  that no mutable elements are modified.                
                <author>
                    Anne Anderson                    
                </author>
                <author>
                    Andreas Sterbenz                    
                </author>
                <since>
                    1.4.2                    
                </since>
                <see>
                    CRLDistributionPointsExtension                    
                </see>
            </javadoc>
            <declaration name="KEY_COMPROMISE" type="int" line="100"/>
            <declaration name="CA_COMPROMISE" type="int" line="101"/>
            <declaration name="AFFILIATION_CHANGED" type="int" line="102"/>
            <declaration name="SUPERSEDED" type="int" line="103"/>
            <declaration name="CESSATION_OF_OPERATION" type="int" line="104"/>
            <declaration name="CERTIFICATE_HOLD" type="int" line="105"/>
            <declaration name="PRIVILEGE_WITHDRAWN" type="int" line="106"/>
            <declaration name="AA_COMPROMISE" type="int" line="107"/>
            <declaration name="REASON_STRINGS" type="String[]" line="109"/>
            <declaration name="TAG_DIST_PT" type="byte" line="122"/>
            <declaration name="TAG_REASONS" type="byte" line="123"/>
            <declaration name="TAG_ISSUER" type="byte" line="124"/>
            <declaration name="TAG_FULL_NAME" type="byte" line="126"/>
            <declaration name="TAG_REL_NAME" type="byte" line="127"/>
            <declaration name="fullName" type="GeneralNames" line="130"/>
            <declaration name="relativeName" type="RDN" line="131"/>
            <declaration name="reasonFlags" type="boolean[]" line="134"/>
            <declaration name="crlIssuer" type="GeneralNames" line="137"/>
            <declaration name="hashCode" type="int" line="140"/>
            <javadoc line="142">
                Constructor for the class using GeneralNames for DistributionPointName                
                <param>
                    fullName the GeneralNames of the distribution point; may be null                    
                </param>
                <param>
                    reasons the CRL reasons included in the CRL at this distribution
                      point; may be null                    
                </param>
                <param>
                    issuer the name(s) of the CRL issuer for the CRL at this
                      distribution point; may be null                    
                </param>
            </javadoc>
            <method name="DistributionPoint" type="constructor" line="152">
                <params>
                    <param name="fullName" type="GeneralNames"/>
                    <param name="reasonFlags" type="boolean[]"/>
                    <param name="crlIssuer" type="GeneralNames"/>
                </params>
                <scope line="153"/>
            </method>
            <javadoc line="162">
                Constructor for the class using RelativeDistinguishedName for
                  DistributionPointName                
                <param>
                    relativeName the RelativeDistinguishedName of the distribution
                      point; may not be null                    
                </param>
                <param>
                    reasons the CRL reasons included in the CRL at this distribution
                      point; may be null                    
                </param>
                <param>
                    issuer the name(s) of the CRL issuer for the CRL at this
                      distribution point; may not be null or empty.                    
                </param>
            </javadoc>
            <method name="DistributionPoint" type="constructor" line="174">
                <params>
                    <param name="relativeName" type="RDN"/>
                    <param name="reasonFlags" type="boolean[]"/>
                    <param name="crlIssuer" type="GeneralNames"/>
                </params>
                <scope line="175"/>
            </method>
            <javadoc line="184">
                Create the object from the passed DER encoded form.                
                <param>
                    val the DER encoded form of the DistributionPoint                    
                </param>
                <throws>
                    IOException on error                    
                </throws>
            </javadoc>
            <method name="DistributionPoint" type="constructor" line="190">
                <params>
                    <param name="val" type="DerValue"/>
                </params>
                <comment line="195">
                    Note that all the fields in DistributionPoint are defined as                    
                </comment>
                <comment line="196">
                    being OPTIONAL, i.e., there could be an empty SEQUENCE, resulting                    
                </comment>
                <comment line="197">
                    in val.data being null.                    
                </comment>
                <scope line="191"/>
                <scope line="198">
                    <declaration name="opt" type="DerValue" line="199"/>
                    <scope line="201">
                        <scope line="202"/>
                        <declaration name="distPnt" type="DerValue" line="206"/>
                        <scope line="208"/>
                        <scope line="212"/>
                        <scope line="215"/>
                    </scope>
                    <scope line="220">
                        <scope line="221"/>
                    </scope>
                    <scope line="228">
                        <scope line="229"/>
                    </scope>
                    <scope line="235"/>
                </scope>
                <scope line="240"/>
            </method>
            <javadoc line="246">
                Return the full distribution point name or null if not set.                
            </javadoc>
            <method name="getFullName" type="GeneralNames" line="249"/>
            <javadoc line="253">
                Return the relative distribution point name or null if not set.                
            </javadoc>
            <method name="getRelativeName" type="RDN" line="256"/>
            <javadoc line="260">
                Return the reason flags or null if not set.                
            </javadoc>
            <method name="getReasonFlags" type="boolean[]" line="263"/>
            <javadoc line="267">
                Return the CRL issuer name or null if not set.                
            </javadoc>
            <method name="getCRLIssuer" type="GeneralNames" line="270"/>
            <javadoc line="274">
                Write the DistributionPoint value to the DerOutputStream.                
                <param>
                    out the DerOutputStream to write the extension to.                    
                </param>
                <exception>
                    IOException on error.                    
                </exception>
            </javadoc>
            <method name="encode" type="void" line="280">
                <params>
                    <param name="out" type="DerOutputStream"/>
                </params>
                <comment line="283">
                    NOTE: only one of pointNames and pointRDN can be set                    
                </comment>
                <declaration name="tagged" type="DerOutputStream" line="281"/>
                <scope line="284">
                    <declaration name="distributionPoint" type="DerOutputStream" line="285"/>
                    <scope line="286">
                        <declaration name="derOut" type="DerOutputStream" line="287"/>
                    </scope>
                    <scope line="292">
                        <declaration name="derOut" type="DerOutputStream" line="293"/>
                    </scope>
                </scope>
                <scope line="303">
                    <declaration name="reasons" type="DerOutputStream" line="304"/>
                    <declaration name="rf" type="BitArray" line="305"/>
                </scope>
                <scope line="311">
                    <declaration name="issuer" type="DerOutputStream" line="312"/>
                </scope>
            </method>
            <javadoc line="321">
                Utility function for a.equals(b) where both a and b may be null.                
            </javadoc>
            <method name="equals" type="boolean" line="324">
                <params>
                    <param name="a" type="Object"/>
                    <param name="b" type="Object"/>
                </params>
            </method>
            <javadoc line="328">
                Compare an object to this DistributionPoint for equality.                
                <param>
                    obj Object to be compared to this                    
                </param>
                <return>
                    true if objects match; false otherwise                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="334">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="335"/>
                <scope line="338"/>
                <declaration name="other" type="DistributionPoint" line="341"/>
                <declaration name="equal" type="boolean" line="343"/>
            </method>
            <method name="hashCode" type="int" line="350">
                <declaration name="hash" type="int" line="351"/>
                <scope line="352">
                    <scope line="354"/>
                    <scope line="357"/>
                    <scope line="360"/>
                    <scope line="363">
                        <scope line="364">
                            <scope line="365"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="375">
                Return a string representation for reasonFlag bit &apos;reason&apos;.                
            </javadoc>
            <method name="reasonToString" type="String" line="378">
                <params>
                    <param name="reason" type="int"/>
                </params>
                <scope line="379"/>
            </method>
            <javadoc line="385">
                Return a printable string of the Distribution Point.                
            </javadoc>
            <method name="toString" type="String" line="388">
                <declaration name="sb" type="StringBuilder" line="389"/>
                <scope line="390"/>
                <scope line="393"/>
                <scope line="397">
                    <scope line="399">
                        <scope line="400"/>
                    </scope>
                </scope>
                <scope line="405"/>
            </method>
        </class>
    </source>