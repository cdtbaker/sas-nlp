<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.lang.reflect.Constructor"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="java.security.cert.CRLException"/>
        <import package="java.security.cert.CertificateException"/>
        <import package="java.util.Collection"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.Hashtable"/>
        <import package="sun.security.util"/>
        <import package="sun.misc.HexDumpEncoder"/>
        <class name="CRLExtensions" line="13">
            <javadoc line="13">
                This class defines the CRL Extensions.
                  It is used for both CRL Extensions and CRL Entry Extensions,
                  which are defined are follows:
                  &lt;pre&gt;
                  TBSCertList  ::=  SEQUENCE  {
                  version              Version OPTIONAL,   -- if present, must be v2
                  signature            AlgorithmIdentifier,
                  issuer               Name,
                  thisUpdate           Time,
                  nextUpdate           Time  OPTIONAL,
                  revokedCertificates  SEQUENCE OF SEQUENCE  {
                  userCertificate         CertificateSerialNumber,
                  revocationDate          Time,
                  crlEntryExtensions      Extensions OPTIONAL  -- if present, must be v2
                  }  OPTIONAL,
                  crlExtensions        [0] EXPLICIT Extensions OPTIONAL  -- if present, must be v2
                  }
                  &lt;/pre&gt;                
                <author>
                    Hemma Prafullchandra                    
                </author>
            </javadoc>
            <declaration name="map" type="Hashtable&lt;String,Extension&gt;" line="35"/>
            <declaration name="unsupportedCritExt" type="boolean" line="36"/>
            <javadoc line="37">
                Default constructor.                
            </javadoc>
            <method name="CRLExtensions" type="constructor" line="40"/>
            <javadoc line="42">
                Create the object, decoding the values from the passed DER stream.                
                <param>
                    in the DerInputStream to read the Extension from, i.e. the
                      sequence of extensions.                    
                </param>
                <exception>
                    CRLException on decoding errors.                    
                </exception>
            </javadoc>
            <method name="CRLExtensions" type="constructor" line="48">
                <params>
                    <param name="in" type="DerInputStream"/>
                </params>
            </method>
            <method name="init" type="void" line="51">
                <params>
                    <param name="derStrm" type="DerInputStream"/>
                </params>
                <scope line="52">
                    <declaration name="str" type="DerInputStream" line="53"/>
                    <declaration name="nextByte" type="byte" line="54"/>
                    <scope line="55">
                        <declaration name="val" type="DerValue" line="56"/>
                    </scope>
                    <declaration name="exts" type="DerValue[]" line="59"/>
                    <scope line="60">
                        <declaration name="ext" type="Extension" line="61"/>
                    </scope>
                </scope>
                <scope line="65"/>
            </method>
            <declaration name="PARAMS" type="Class[]" line="69"/>
            <method name="parseExtension" type="void" line="70">
                <params>
                    <param name="ext" type="Extension"/>
                </params>
                <scope line="71">
                    <declaration name="extClass" type="Class" line="72"/>
                    <scope line="73"/>
                    <declaration name="cons" type="Constructor" line="78"/>
                    <declaration name="passed" type="Object[]" line="79"/>
                    <declaration name="crlExt" type="CertAttrSet" line="80"/>
                    <scope line="81"/>
                </scope>
                <scope line="85"/>
                <scope line="88"/>
            </method>
            <javadoc line="92">
                Encode the extensions in DER form to the stream.                
                <param>
                    out the DerOutputStream to marshal the contents to.                    
                </param>
                <param>
                    isExplicit the tag indicating whether this is an entry
                      extension (false) or a CRL extension (true).                    
                </param>
                <exception>
                    CRLException on encoding errors.                    
                </exception>
            </javadoc>
            <method name="encode" type="void" line="99">
                <params>
                    <param name="out" type="OutputStream"/>
                    <param name="isExplicit" type="boolean"/>
                </params>
                <scope line="100">
                    <declaration name="extOut" type="DerOutputStream" line="101"/>
                    <declaration name="allExts" type="Collection&lt;Extension&gt;" line="102"/>
                    <declaration name="objs" type="Object[]" line="103"/>
                    <scope line="104"/>
                    <declaration name="seq" type="DerOutputStream" line="109"/>
                    <declaration name="tmp" type="DerOutputStream" line="111"/>
                </scope>
                <scope line="116"/>
                <scope line="119"/>
            </method>
            <javadoc line="123">
                Get the extension with this alias.                
                <param>
                    alias the identifier string for the extension to retrieve.                    
                </param>
            </javadoc>
            <method name="get" type="Extension" line="127">
                <params>
                    <param name="alias" type="String"/>
                </params>
                <declaration name="attr" type="X509AttributeName" line="128"/>
                <declaration name="name" type="String" line="129"/>
                <declaration name="id" type="String" line="130"/>
                <scope line="131">
                    <declaration name="index" type="int" line="132"/>
                </scope>
            </method>
            <javadoc line="138">
                Set the extension value with this alias.                
                <param>
                    alias the identifier string for the extension to set.                    
                </param>
                <param>
                    obj the Object to set the extension identified by the
                      alias.                    
                </param>
            </javadoc>
            <method name="set" type="void" line="144">
                <params>
                    <param name="alias" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <javadoc line="147">
                Delete the extension value with this alias.                
                <param>
                    alias the identifier string for the extension to delete.                    
                </param>
            </javadoc>
            <method name="delete" type="void" line="151">
                <params>
                    <param name="alias" type="String"/>
                </params>
            </method>
            <javadoc line="154">
                Return an enumeration of the extensions.                
                <return>
                    an enumeration of the extensions in this CRL.                    
                </return>
            </javadoc>
            <method name="getElements" type="Enumeration<Extension>" line="158"/>
            <javadoc line="161">
                Return a collection view of the extensions.                
                <return>
                    a collection view of the extensions in this CRL.                    
                </return>
            </javadoc>
            <method name="getAllExtensions" type="Collection<Extension>" line="165"/>
            <javadoc line="168">
                Return true if a critical extension is found that is
                  not supported, otherwise return false.                
            </javadoc>
            <method name="hasUnsupportedCriticalExtension" type="boolean" line="172"/>
            <javadoc line="175">
                Compares this CRLExtensions for equality with the specified
                  object. If the &lt;code&gt;other&lt;/code&gt; object is an
                  &lt;code&gt;instanceof&lt;/code&gt; &lt;code&gt;CRLExtensions&lt;/code&gt;, then
                  all the entries are compared with the entries from this.                
                <param>
                    other the object to test for equality with this CRLExtensions.                    
                </param>
                <return>
                    true iff all the entries match that of the Other,
                      false otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="184">
                <params>
                    <param name="other" type="Object"/>
                </params>
                <declaration name="otherC" type="Collection&lt;Extension&gt;" line="187"/>
                <declaration name="objs" type="Object[]" line="188"/>
                <declaration name="len" type="int" line="189"/>
                <declaration name="otherExt" type="Extension" line="191"/>
                <declaration name="key" type="String" line="192"/>
                <scope line="193"/>
            </method>
            <javadoc line="203">
                Returns a hashcode value for this CRLExtensions.                
                <return>
                    the hashcode value.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="207"/>
            <javadoc line="210">
                Returns a string representation of this &lt;tt&gt;CRLExtensions&lt;/tt&gt; object
                  in the form of a set of entries, enclosed in braces and separated
                  by the ASCII characters &quot;&lt;tt&gt;,&amp;nbsp;&lt;/tt&gt;&quot; (comma and space).
                  &lt;p&gt;Overrides to &lt;tt&gt;toString&lt;/tt&gt; method of &lt;tt&gt;Object&lt;/tt&gt;.                
                <return>
                    a string representation of this CRLExtensions.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="217"/>
        </class>
    </source>