<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.util"/>
        <import package="sun.security.util.DerInputStream"/>
        <import package="sun.security.util.DerOutputStream"/>
        <import package="sun.security.util.DerValue"/>
        <class name="IssuingDistributionPointExtension" line="37">
            <extends class="Extension"/>
            <comment line="91">
                The distribution point name for the CRL.                
            </comment>
            <comment line="96">
                The scope settings for the CRL.                
            </comment>
            <comment line="105">
                ASN.1 context specific tag values                
            </comment>
            <comment line="377">
                Encodes this extension value                
            </comment>
            <implements interface="CertAttrSet">
                <type_params>
                    <type_param name="String"/>
                </type_params>
            </implements>
            <javadoc line="37">
                Represents the CRL Issuing Distribution Point Extension (OID = 2.5.29.28).
                  &lt;p&gt;
                  The issuing distribution point is a critical CRL extension that
                  identifies the CRL distribution point and scope for a particular CRL,
                  and it indicates whether the CRL covers revocation for end entity
                  certificates only, CA certificates only, attribute certificates only,
                  or a limited set of reason codes.
                  &lt;p&gt;
                  The extension is defined in Section 5.2.5 of
                  &lt;a href=&quot;http://www.ietf.org/rfc/rfc3280.txt&quot;&gt;Internet X.509 PKI Certific
                  ate and Certificate Revocation List (CRL) Profile&lt;/a&gt;.
                  &lt;p&gt;
                  Its ASN.1 definition is as follows:
                  &lt;pre&gt;
                  id-ce-issuingDistributionPoint OBJECT IDENTIFIER ::= { id-ce 28 }
                  issuingDistributionPoint ::= SEQUENCE {
                  distributionPoint          [0] DistributionPointName OPTIONAL,
                  onlyContainsUserCerts      [1] BOOLEAN DEFAULT FALSE,
                  onlyContainsCACerts        [2] BOOLEAN DEFAULT FALSE,
                  onlySomeReasons            [3] ReasonFlags OPTIONAL,
                  indirectCRL                [4] BOOLEAN DEFAULT FALSE,
                  onlyContainsAttributeCerts [5] BOOLEAN DEFAULT FALSE }
                  &lt;/pre&gt;                
                <see>
                    DistributionPoint                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="IDENT" type="String" line="72"/>
            <javadoc line="72">
                Identifier for this attribute, to be used with the
                  get, set, delete methods of Certificate, x509 type.                
            </javadoc>
            <declaration name="NAME" type="String" line="79"/>
            <javadoc line="79">
                Attribute names.                
            </javadoc>
            <declaration name="POINT" type="String" line="83"/>
            <declaration name="REASONS" type="String" line="84"/>
            <declaration name="ONLY_USER_CERTS" type="String" line="85"/>
            <declaration name="ONLY_CA_CERTS" type="String" line="86"/>
            <declaration name="ONLY_ATTRIBUTE_CERTS" type="String" line="87"/>
            <declaration name="INDIRECT_CRL" type="String" line="88"/>
            <declaration name="distributionPoint" type="DistributionPointName" line="93"/>
            <declaration name="revocationReasons" type="ReasonFlags" line="98"/>
            <declaration name="hasOnlyUserCerts" type="boolean" line="99"/>
            <declaration name="hasOnlyCACerts" type="boolean" line="100"/>
            <declaration name="hasOnlyAttributeCerts" type="boolean" line="101"/>
            <declaration name="isIndirectCRL" type="boolean" line="102"/>
            <declaration name="TAG_DISTRIBUTION_POINT" type="byte" line="107"/>
            <declaration name="TAG_ONLY_USER_CERTS" type="byte" line="108"/>
            <declaration name="TAG_ONLY_CA_CERTS" type="byte" line="109"/>
            <declaration name="TAG_ONLY_SOME_REASONS" type="byte" line="110"/>
            <declaration name="TAG_INDIRECT_CRL" type="byte" line="111"/>
            <declaration name="TAG_ONLY_ATTRIBUTE_CERTS" type="byte" line="112"/>
            <javadoc line="114">
                Creates a critical IssuingDistributionPointExtension.                
                <param>
                    distributionPoint the name of the distribution point, or null for
                      none.                    
                </param>
                <param>
                    revocationReasons the revocation reasons associated with the
                      distribution point, or null for none.                    
                </param>
                <param>
                    hasOnlyUserCerts if &lt;code&gt;true&lt;/code&gt; then scope of the CRL
                      includes only user certificates.                    
                </param>
                <param>
                    hasOnlyCACerts if &lt;code&gt;true&lt;/code&gt; then scope of the CRL
                      includes only CA certificates.                    
                </param>
                <param>
                    hasOnlyAttributeCerts if &lt;code&gt;true&lt;/code&gt; then scope of the CRL
                      includes only attribute certificates.                    
                </param>
                <param>
                    isIndirectCRL if &lt;code&gt;true&lt;/code&gt; then the scope of the CRL
                      includes certificates issued by authorities other than the CRL
                      issuer. The responsible authority is indicated by a certificate
                      issuer CRL entry extension.                    
                </param>
                <throws>
                    IllegalArgumentException if more than one of
                      &lt;code&gt;hasOnlyUserCerts&lt;/code&gt;, &lt;code&gt;hasOnlyCACerts&lt;/code&gt;,
                      &lt;code&gt;hasOnlyAttributeCerts&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.                    
                </throws>
                <throws>
                    IOException on encoding error.                    
                </throws>
            </javadoc>
            <method name="IssuingDistributionPointExtension" type="constructor" line="140">
                <params>
                    <param name="distributionPoint" type="DistributionPointName"/>
                    <param name="revocationReasons" type="ReasonFlags"/>
                    <param name="hasOnlyUserCerts" type="boolean"/>
                    <param name="hasOnlyCACerts" type="boolean"/>
                    <param name="hasOnlyAttributeCerts" type="boolean"/>
                    <param name="isIndirectCRL" type="boolean"/>
                </params>
                <scope line="144"/>
            </method>
            <javadoc line="160">
                Creates a critical IssuingDistributionPointExtension from its
                  DER-encoding.                
                <param>
                    critical true if the extension is to be treated as critical.                    
                </param>
                <param>
                    value the DER-encoded value. It must be a &lt;code&gt;byte[]&lt;/code&gt;.                    
                </param>
                <exception>
                    IOException on decoding error.                    
                </exception>
            </javadoc>
            <method name="IssuingDistributionPointExtension" type="constructor" line="169">
                <params>
                    <param name="critical" type="Boolean"/>
                    <param name="value" type="Object"/>
                </params>
                <comment line="185">
                    All the elements in issuingDistributionPoint are optional                    
                </comment>
                <comment line="208">
                    expects tag implicit                    
                </comment>
                <scope line="173"/>
                <declaration name="val" type="DerValue" line="178"/>
                <scope line="179"/>
                <scope line="185"/>
                <declaration name="in" type="DerInputStream" line="189"/>
                <scope line="190">
                    <declaration name="opt" type="DerValue" line="191"/>
                    <scope line="194"/>
                    <scope line="198"/>
                    <scope line="202"/>
                    <scope line="206"/>
                    <scope line="209"/>
                    <scope line="213"/>
                    <scope line="216"/>
                </scope>
            </method>
            <javadoc line="223">
                Returns the name of this attribute.                
            </javadoc>
            <method name="getName" type="String" line="226"/>
            <javadoc line="230">
                Encodes the issuing distribution point extension and writes it to the
                  DerOutputStream.                
                <param>
                    out the output stream.                    
                </param>
                <exception>
                    IOException on encoding error.                    
                </exception>
            </javadoc>
            <method name="encode" type="void" line="237">
                <params>
                    <param name="out" type="OutputStream"/>
                </params>
                <declaration name="tmp" type="DerOutputStream" line="238"/>
                <scope line="239"/>
            </method>
            <javadoc line="248">
                Sets the attribute value.                
            </javadoc>
            <method name="set" type="void" line="251">
                <params>
                    <param name="name" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="252">
                    <scope line="253"/>
                </scope>
                <scope line="259">
                    <scope line="260"/>
                </scope>
                <scope line="265">
                    <scope line="266"/>
                </scope>
                <scope line="272">
                    <scope line="273"/>
                </scope>
                <scope line="279">
                    <scope line="280"/>
                </scope>
                <scope line="286">
                    <scope line="287"/>
                </scope>
                <scope line="294"/>
            </method>
            <javadoc line="302">
                Gets the attribute value.                
            </javadoc>
            <method name="get" type="Object" line="305">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="306"/>
                <scope line="309"/>
                <scope line="312"/>
                <scope line="315"/>
                <scope line="318"/>
                <scope line="321"/>
                <scope line="324"/>
            </method>
            <javadoc line="331">
                Deletes the attribute value.                
            </javadoc>
            <method name="delete" type="void" line="334">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="335"/>
                <scope line="338"/>
                <scope line="341"/>
                <scope line="344"/>
                <scope line="347"/>
                <scope line="350"/>
                <scope line="353"/>
            </method>
            <javadoc line="361">
                Returns an enumeration of names of attributes existing within this
                  attribute.                
            </javadoc>
            <method name="getElements" type="Enumeration<String>" line="365">
                <declaration name="elements" type="AttributeNameEnumeration" line="366"/>
            </method>
            <method name="encodeThis" type="void" line="377">
                <scope line="384"/>
                <declaration name="tagged" type="DerOutputStream" line="391"/>
                <scope line="393">
                    <declaration name="tmp" type="DerOutputStream" line="394"/>
                </scope>
                <scope line="400">
                    <declaration name="tmp" type="DerOutputStream" line="401"/>
                </scope>
                <scope line="407">
                    <declaration name="tmp" type="DerOutputStream" line="408"/>
                </scope>
                <scope line="414">
                    <declaration name="tmp" type="DerOutputStream" line="415"/>
                </scope>
                <scope line="421">
                    <declaration name="tmp" type="DerOutputStream" line="422"/>
                </scope>
                <scope line="428">
                    <declaration name="tmp" type="DerOutputStream" line="429"/>
                </scope>
                <declaration name="seq" type="DerOutputStream" line="435"/>
            </method>
            <javadoc line="440">
                Returns the extension as user readable string.                
            </javadoc>
            <method name="toString" type="String" line="443">
                <declaration name="sb" type="StringBuilder" line="445"/>
                <scope line="448"/>
                <scope line="452"/>
            </method>
        </class>
    </source>