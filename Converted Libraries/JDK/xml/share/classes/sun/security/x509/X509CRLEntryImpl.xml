<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io.InputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.security.cert.CRLException"/>
        <import package="java.security.cert.CRLReason"/>
        <import package="java.security.cert.CertificateException"/>
        <import package="java.security.cert.X509CRLEntry"/>
        <import package="java.math.BigInteger"/>
        <import package="java.util.Collection"/>
        <import package="java.util.Date"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Map"/>
        <import package="java.util.Set"/>
        <import package="java.util.HashSet"/>
        <import package="javax.security.auth.x500.X500Principal"/>
        <import package="sun.security.util"/>
        <import package="sun.misc.HexDumpEncoder"/>
        <class name="X509CRLEntryImpl" line="19">
            <extends class="X509CRLEntry"/>
            <javadoc line="19">
                &lt;p&gt;Abstract class for a revoked certificate in a CRL.
                  This class is for each entry in the &lt;code&gt;revokedCertificates&lt;/code&gt;,
                  so it deals with the inner &lt;em&gt;SEQUENCE&lt;/em&gt;.
                  The ASN.1 definition for this is:
                  &lt;pre&gt;
                  revokedCertificates    SEQUENCE OF SEQUENCE  {
                  userCertificate    CertificateSerialNumber,
                  revocationDate     ChoiceOfTime,
                  crlEntryExtensions Extensions OPTIONAL
                  -- if present, must be v2
                  }  OPTIONAL
                  CertificateSerialNumber  ::=  INTEGER
                  Extensions  ::=  SEQUENCE SIZE (1..MAX) OF Extension
                  Extension  ::=  SEQUENCE  {
                  extnId        OBJECT IDENTIFIER,
                  critical      BOOLEAN DEFAULT FALSE,
                  extnValue     OCTET STRING
                  -- contains a DER encoding of a value
                  -- of the type registered for use with
                  -- the extnId object identifier value
                  }
                  &lt;/pre&gt;                
                <author>
                    Hemma Prafullchandra                    
                </author>
            </javadoc>
            <declaration name="serialNumber" type="SerialNumber" line="45"/>
            <declaration name="revocationDate" type="Date" line="46"/>
            <declaration name="extensions" type="CRLExtensions" line="47"/>
            <declaration name="revokedCert" type="byte[]" line="48"/>
            <declaration name="certIssuer" type="X500Principal" line="49"/>
            <declaration name="isExplicit" type="boolean" line="50"/>
            <declaration name="YR_2050" type="long" line="51"/>
            <javadoc line="52">
                Constructs a revoked certificate entry using the given
                  serial number and revocation date.                
                <param>
                    num the serial number of the revoked certificate.                    
                </param>
                <param>
                    date the Date on which revocation took place.                    
                </param>
            </javadoc>
            <method name="X509CRLEntryImpl" type="constructor" line="58">
                <params>
                    <param name="num" type="BigInteger"/>
                    <param name="date" type="Date"/>
                </params>
            </method>
            <javadoc line="62">
                Constructs a revoked certificate entry using the given
                  serial number, revocation date and the entry
                  extensions.                
                <param>
                    num the serial number of the revoked certificate.                    
                </param>
                <param>
                    date the Date on which revocation took place.                    
                </param>
                <param>
                    crlEntryExts the extensions for this entry.                    
                </param>
            </javadoc>
            <method name="X509CRLEntryImpl" type="constructor" line="70">
                <params>
                    <param name="num" type="BigInteger"/>
                    <param name="date" type="Date"/>
                    <param name="crlEntryExts" type="CRLExtensions"/>
                </params>
            </method>
            <javadoc line="75">
                Unmarshals a revoked certificate from its encoded form.                
                <param>
                    revokedCert the encoded bytes.                    
                </param>
                <exception>
                    CRLException on parsing errors.                    
                </exception>
            </javadoc>
            <method name="X509CRLEntryImpl" type="constructor" line="80">
                <params>
                    <param name="revokedCert" type="byte[]"/>
                </params>
                <scope line="81"/>
                <scope line="84"/>
            </method>
            <javadoc line="89">
                Unmarshals a revoked certificate from its encoded form.                
                <param>
                    derVal the DER value containing the revoked certificate.                    
                </param>
                <exception>
                    CRLException on parsing errors.                    
                </exception>
            </javadoc>
            <method name="X509CRLEntryImpl" type="constructor" line="94">
                <params>
                    <param name="derValue" type="DerValue"/>
                </params>
                <scope line="95"/>
                <scope line="98"/>
            </method>
            <javadoc line="103">
                Returns true if this revoked certificate entry has
                  extensions, otherwise false.                
                <return>
                    true if this CRL entry has extensions, otherwise
                      false.                    
                </return>
            </javadoc>
            <method name="hasExtensions" type="boolean" line="109"/>
            <javadoc line="112">
                Encodes the revoked certificate to an output stream.                
                <param>
                    outStrm an output stream to which the encoded revoked
                      certificate is written.                    
                </param>
                <exception>
                    CRLException on encoding errors.                    
                </exception>
            </javadoc>
            <method name="encode" type="void" line="118">
                <params>
                    <param name="outStrm" type="DerOutputStream"/>
                </params>
                <scope line="119">
                    <scope line="120">
                        <declaration name="tmp" type="DerOutputStream" line="121"/>
                        <scope line="123"/>
                        <scope line="126"/>
                        <declaration name="seq" type="DerOutputStream" line="130"/>
                    </scope>
                </scope>
                <scope line="136"/>
            </method>
            <javadoc line="140">
                Returns the ASN.1 DER-encoded form of this CRL Entry,
                  which corresponds to the inner SEQUENCE.                
                <exception>
                    CRLException if an encoding error occurs.                    
                </exception>
            </javadoc>
            <method name="getEncoded" type="byte[]" line="145"/>
            <method name="getCertificateIssuer" type="X500Principal" line="149"/>
            <method name="setCertificateIssuer" type="void" line="152">
                <params>
                    <param name="crlIssuer" type="X500Principal"/>
                    <param name="certIssuer" type="X500Principal"/>
                </params>
                <scope line="153"/>
                <scope line="156"/>
            </method>
            <javadoc line="160">
                Gets the serial number from this X509CRLEntry,
                  i.e. the &lt;em&gt;userCertificate&lt;/em&gt;.                
                <return>
                    the serial number.                    
                </return>
            </javadoc>
            <method name="getSerialNumber" type="BigInteger" line="165"/>
            <javadoc line="168">
                Gets the revocation date from this X509CRLEntry,
                  the &lt;em&gt;revocationDate&lt;/em&gt;.                
                <return>
                    the revocation date.                    
                </return>
            </javadoc>
            <method name="getRevocationDate" type="Date" line="173"/>
            <javadoc line="176">
                This method is the overridden implementation of the getRevocationReason
                  method in X509CRLEntry. It is better performance-wise since it returns
                  cached values.                
            </javadoc>
            <method name="getRevocationReason" type="CRLReason" line="181">
                <declaration name="ext" type="Extension" line="182"/>
                <scope line="183"/>
                <declaration name="rcExt" type="CRLReasonCodeExtension" line="186"/>
            </method>
            <javadoc line="189">
                This static method is the default implementation of the
                  getRevocationReason method in X509CRLEntry.                
            </javadoc>
            <method name="getRevocationReason" type="CRLReason" line="193">
                <params>
                    <param name="crlEntry" type="X509CRLEntry"/>
                </params>
                <scope line="194">
                    <declaration name="ext" type="byte[]" line="195"/>
                    <scope line="196"/>
                    <declaration name="val" type="DerValue" line="199"/>
                    <declaration name="data" type="byte[]" line="200"/>
                    <declaration name="rcExt" type="CRLReasonCodeExtension" line="201"/>
                </scope>
                <scope line="204"/>
            </method>
            <javadoc line="208">
                get Reason Code from CRL entry.                
                <returns>
                    Integer or null, if no such extension                    
                </returns>
                <throws>
                    IOException on error                    
                </throws>
            </javadoc>
            <method name="getReasonCode" type="Integer" line="213">
                <declaration name="obj" type="Object" line="214"/>
                <declaration name="reasonCode" type="CRLReasonCodeExtension" line="216"/>
            </method>
            <javadoc line="219">
                Returns a printable string of this revoked certificate.                
                <return>
                    value of this revoked certificate in a printable form.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="223">
                <declaration name="sb" type="StringBuilder" line="224"/>
                <scope line="227"/>
                <scope line="230">
                    <declaration name="allEntryExts" type="Collection" line="231"/>
                    <declaration name="objs" type="Object[]" line="232"/>
                    <scope line="234">
                        <declaration name="ext" type="Extension" line="236"/>
                        <scope line="237">
                            <scope line="238">
                                <declaration name="extValue" type="byte[]" line="240"/>
                                <scope line="241">
                                    <declaration name="out" type="DerOutputStream" line="242"/>
                                    <declaration name="enc" type="HexDumpEncoder" line="245"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="251"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="259">
                Return true if a critical extension is found that is
                  not supported, otherwise return false.                
            </javadoc>
            <method name="hasUnsupportedCriticalExtension" type="boolean" line="263"/>
            <javadoc line="267">
                Gets a Set of the extension(s) marked CRITICAL in this
                  X509CRLEntry.  In the returned set, each extension is
                  represented by its OID string.                
                <return>
                    a set of the extension oid strings in the
                      Object that are marked critical.                    
                </return>
            </javadoc>
            <method name="getCriticalExtensionOIDs" type="Set<String>" line="274">
                <scope line="275"/>
                <declaration name="extSet" type="Set&lt;String&gt;" line="278"/>
                <scope line="279">
                    <scope line="280"/>
                </scope>
            </method>
            <javadoc line="286">
                Gets a Set of the extension(s) marked NON-CRITICAL in this
                  X509CRLEntry. In the returned set, each extension is
                  represented by its OID string.                
                <return>
                    a set of the extension oid strings in the
                      Object that are marked critical.                    
                </return>
            </javadoc>
            <method name="getNonCriticalExtensionOIDs" type="Set<String>" line="293">
                <scope line="294"/>
                <declaration name="extSet" type="Set&lt;String&gt;" line="297"/>
                <scope line="298">
                    <scope line="299"/>
                </scope>
            </method>
            <javadoc line="305">
                Gets the DER encoded OCTET string for the extension value
                  (&lt;em&gt;extnValue&lt;/em&gt;) identified by the passed in oid String.
                  The &lt;code&gt;oid&lt;/code&gt; string is
                  represented by a set of positive whole number separated
                  by &quot;.&quot;, that means,&lt;br&gt;
                  &amp;lt;positive whole number&amp;gt;.&amp;lt;positive whole number&amp;gt;.&amp;lt;positive
                  whole number&amp;gt;.&amp;lt;...&amp;gt;                
                <param>
                    oid the Object Identifier value for the extension.                    
                </param>
                <return>
                    the DER encoded octet string of the extension value.                    
                </return>
            </javadoc>
            <method name="getExtensionValue" type="byte[]" line="316">
                <params>
                    <param name="oid" type="String"/>
                </params>
                <scope line="318">
                    <declaration name="extAlias" type="String" line="319"/>
                    <declaration name="crlExt" type="Extension" line="320"/>
                    <scope line="321">
                        <declaration name="findOID" type="ObjectIdentifier" line="322"/>
                        <declaration name="ex" type="Extension" line="323"/>
                        <declaration name="inCertOID" type="ObjectIdentifier" line="324"/>
                        <scope line="325">
                            <scope line="328"/>
                        </scope>
                    </scope>
                    <declaration name="extData" type="byte[]" line="336"/>
                    <declaration name="out" type="DerOutputStream" line="338"/>
                </scope>
                <scope line="342"/>
            </method>
            <javadoc line="346">
                get an extension                
                <param>
                    oid ObjectIdentifier of extension desired                    
                </param>
                <returns>
                    Extension of type <extension> or null, if not found                    
                </returns>
            </javadoc>
            <method name="getExtension" type="Extension" line="351">
                <params>
                    <param name="oid" type="ObjectIdentifier"/>
                </params>
            </method>
            <method name="parse" type="void" line="355">
                <params>
                    <param name="derVal" type="DerValue"/>
                </params>
                <scope line="356"/>
                <declaration name="in" type="DerInputStream" line="361"/>
                <declaration name="val" type="DerValue" line="362"/>
                <declaration name="nextByte" type="int" line="364"/>
                <scope line="365"/>
                <scope line="368"/>
            </method>
            <javadoc line="375">
                Utility method to convert an arbitrary instance of X509CRLEntry
                  to a X509CRLEntryImpl. Does a cast if possible, otherwise reparses
                  the encoding.                
            </javadoc>
            <method name="toImpl" type="X509CRLEntryImpl" line="380">
                <params>
                    <param name="entry" type="X509CRLEntry"/>
                </params>
                <scope line="381"/>
                <scope line="384"/>
            </method>
            <javadoc line="388">
                Returns the CertificateIssuerExtension                
                <return>
                    the CertificateIssuerExtension, or null if it does not exist                    
                </return>
            </javadoc>
            <method name="getCertificateIssuerExtension" type="CertificateIssuerExtension" line="392"/>
            <method name="getExtensions" type="Map<String,java.security.cert.Extension>" line="395">
                <declaration name="exts" type="Collection&lt;Extension&gt;" line="396"/>
                <declaration name="map" type="HashMap&lt;String,java.security.cert.Extension&gt;" line="397"/>
                <scope line="398"/>
            </method>
        </class>
    </source>