<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.util.Enumeration"/>
        <import package="sun.security.util"/>
        <class name="ReasonFlags" line="7">
            <javadoc line="7">
                Represent the CRL Reason Flags.
                  &lt;p&gt;This extension, if present, defines the identifies
                  the reason for the certificate revocation.
                  &lt;p&gt;The ASN.1 syntax for this is:
                  &lt;pre&gt;
                  ReasonFlags ::= BIT STRING {
                  unused                  (0),
                  keyCompromise           (1),
                  cACompromise            (2),
                  affiliationChanged      (3),
                  superseded              (4),
                  cessationOfOperation    (5),
                  certificateHold         (6),
                  privilegeWithdrawn      (7),
                  aACompromise            (8) }
                  &lt;/pre&gt;                
                <author>
                    Hemma Prafullchandra                    
                </author>
            </javadoc>
            <declaration name="UNUSED" type="String" line="27"/>
            <javadoc line="27">
                Reasons                
            </javadoc>
            <declaration name="KEY_COMPROMISE" type="String" line="31"/>
            <declaration name="CA_COMPROMISE" type="String" line="32"/>
            <declaration name="AFFILIATION_CHANGED" type="String" line="33"/>
            <declaration name="SUPERSEDED" type="String" line="34"/>
            <declaration name="CESSATION_OF_OPERATION" type="String" line="35"/>
            <declaration name="CERTIFICATE_HOLD" type="String" line="36"/>
            <declaration name="PRIVILEGE_WITHDRAWN" type="String" line="37"/>
            <declaration name="AA_COMPROMISE" type="String" line="38"/>
            <declaration name="NAMES" type="String[]" line="39"/>
            <method name="name2Index" type="int" line="40">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="41">
                    <scope line="42"/>
                </scope>
            </method>
            <declaration name="bitString" type="boolean[]" line="48"/>
            <javadoc line="49">
                Check if bit is set.                
                <param>
                    position the position in the bit string to check.                    
                </param>
            </javadoc>
            <method name="isSet" type="boolean" line="53">
                <params>
                    <param name="position" type="int"/>
                </params>
            </method>
            <javadoc line="56">
                Set the bit at the specified position.                
            </javadoc>
            <method name="set" type="void" line="59">
                <params>
                    <param name="position" type="int"/>
                    <param name="val" type="boolean"/>
                </params>
                <scope line="60">
                    <declaration name="tmp" type="boolean[]" line="61"/>
                </scope>
            </method>
            <javadoc line="67">
                Create a ReasonFlags with the passed bit settings.                
                <param>
                    reasons the bits to be set for the ReasonFlags.                    
                </param>
            </javadoc>
            <method name="ReasonFlags" type="constructor" line="71">
                <params>
                    <param name="reasons" type="byte[]"/>
                </params>
            </method>
            <javadoc line="74">
                Create a ReasonFlags with the passed bit settings.                
                <param>
                    reasons the bits to be set for the ReasonFlags.                    
                </param>
            </javadoc>
            <method name="ReasonFlags" type="constructor" line="78">
                <params>
                    <param name="reasons" type="boolean[]"/>
                </params>
            </method>
            <javadoc line="81">
                Create a ReasonFlags with the passed bit settings.                
                <param>
                    reasons the bits to be set for the ReasonFlags.                    
                </param>
            </javadoc>
            <method name="ReasonFlags" type="constructor" line="85">
                <params>
                    <param name="reasons" type="BitArray"/>
                </params>
            </method>
            <javadoc line="88">
                Create the object from the passed DER encoded value.                
                <param>
                    in the DerInputStream to read the ReasonFlags from.                    
                </param>
                <exception>
                    IOException on decoding errors.                    
                </exception>
            </javadoc>
            <method name="ReasonFlags" type="constructor" line="93">
                <params>
                    <param name="in" type="DerInputStream"/>
                </params>
                <declaration name="derVal" type="DerValue" line="94"/>
            </method>
            <javadoc line="97">
                Create the object from the passed DER encoded value.                
                <param>
                    derVal the DerValue decoded from the stream.                    
                </param>
                <exception>
                    IOException on decoding errors.                    
                </exception>
            </javadoc>
            <method name="ReasonFlags" type="constructor" line="102">
                <params>
                    <param name="derVal" type="DerValue"/>
                </params>
            </method>
            <javadoc line="105">
                Returns the reason flags as a boolean array.                
            </javadoc>
            <method name="getFlags" type="boolean[]" line="108"/>
            <javadoc line="111">
                Set the attribute value.                
            </javadoc>
            <method name="set" type="void" line="114">
                <params>
                    <param name="name" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="115"/>
                <declaration name="val" type="boolean" line="118"/>
            </method>
            <javadoc line="121">
                Get the attribute value.                
            </javadoc>
            <method name="get" type="Object" line="124">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="127">
                Delete the attribute value.                
            </javadoc>
            <method name="delete" type="void" line="130">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="133">
                Returns a printable representation of the ReasonFlags.                
            </javadoc>
            <method name="toString" type="String" line="136">
                <declaration name="s" type="String" line="137"/>
                <scope line="138"/>
                <scope line="149"/>
            </method>
            <javadoc line="154">
                Write the extension to the DerOutputStream.                
                <param>
                    out the DerOutputStream to write the extension to.                    
                </param>
                <exception>
                    IOException on encoding errors.                    
                </exception>
            </javadoc>
            <method name="encode" type="void" line="159">
                <params>
                    <param name="out" type="DerOutputStream"/>
                </params>
            </method>
            <javadoc line="162">
                Return an enumeration of names of attributes existing within this
                  attribute.                
            </javadoc>
            <method name="getElements" type="Enumeration<String>" line="166">
                <declaration name="elements" type="AttributeNameEnumeration" line="167"/>
                <scope line="168"/>
            </method>
        </class>
    </source>