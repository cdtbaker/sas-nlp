<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.util.Enumeration"/>
        <import package="sun.security.util"/>
        <class name="ReasonFlags" line="35">
            <comment line="94">
                Private data members                
            </comment>
            <javadoc line="35">
                Represent the CRL Reason Flags.
                  &lt;p&gt;This extension, if present, defines the identifies
                  the reason for the certificate revocation.
                  &lt;p&gt;The ASN.1 syntax for this is:
                  &lt;pre&gt;
                  ReasonFlags ::= BIT STRING {
                  unused                  (0),
                  keyCompromise           (1),
                  cACompromise            (2),
                  affiliationChanged      (3),
                  superseded              (4),
                  cessationOfOperation    (5),
                  certificateHold         (6),
                  privilegeWithdrawn      (7),
                  aACompromise            (8) }
                  &lt;/pre&gt;                
                <author>
                    Hemma Prafullchandra                    
                </author>
            </javadoc>
            <declaration name="UNUSED" type="String" line="58"/>
            <javadoc line="58">
                Reasons                
            </javadoc>
            <declaration name="KEY_COMPROMISE" type="String" line="62"/>
            <declaration name="CA_COMPROMISE" type="String" line="63"/>
            <declaration name="AFFILIATION_CHANGED" type="String" line="64"/>
            <declaration name="SUPERSEDED" type="String" line="65"/>
            <declaration name="CESSATION_OF_OPERATION" type="String" line="66"/>
            <declaration name="CERTIFICATE_HOLD" type="String" line="68"/>
            <declaration name="PRIVILEGE_WITHDRAWN" type="String" line="69"/>
            <declaration name="AA_COMPROMISE" type="String" line="70"/>
            <declaration name="NAMES" type="String[]" line="72"/>
            <method name="name2Index" type="int" line="84">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="85">
                    <scope line="86"/>
                </scope>
            </method>
            <declaration name="bitString" type="boolean[]" line="94"/>
            <javadoc line="96">
                Check if bit is set.                
                <param>
                    position the position in the bit string to check.                    
                </param>
            </javadoc>
            <method name="isSet" type="boolean" line="101">
                <params>
                    <param name="position" type="int"/>
                </params>
            </method>
            <javadoc line="105">
                Set the bit at the specified position.                
            </javadoc>
            <method name="set" type="void" line="108">
                <params>
                    <param name="position" type="int"/>
                    <param name="val" type="boolean"/>
                </params>
                <comment line="109">
                    enlarge bitString if necessary                    
                </comment>
                <scope line="110">
                    <declaration name="tmp" type="boolean[]" line="111"/>
                </scope>
            </method>
            <javadoc line="118">
                Create a ReasonFlags with the passed bit settings.                
                <param>
                    reasons the bits to be set for the ReasonFlags.                    
                </param>
            </javadoc>
            <method name="ReasonFlags" type="constructor" line="123">
                <params>
                    <param name="reasons" type="byte[]"/>
                </params>
            </method>
            <javadoc line="127">
                Create a ReasonFlags with the passed bit settings.                
                <param>
                    reasons the bits to be set for the ReasonFlags.                    
                </param>
            </javadoc>
            <method name="ReasonFlags" type="constructor" line="132">
                <params>
                    <param name="reasons" type="boolean[]"/>
                </params>
            </method>
            <javadoc line="136">
                Create a ReasonFlags with the passed bit settings.                
                <param>
                    reasons the bits to be set for the ReasonFlags.                    
                </param>
            </javadoc>
            <method name="ReasonFlags" type="constructor" line="141">
                <params>
                    <param name="reasons" type="BitArray"/>
                </params>
            </method>
            <javadoc line="145">
                Create the object from the passed DER encoded value.                
                <param>
                    in the DerInputStream to read the ReasonFlags from.                    
                </param>
                <exception>
                    IOException on decoding errors.                    
                </exception>
            </javadoc>
            <method name="ReasonFlags" type="constructor" line="151">
                <params>
                    <param name="in" type="DerInputStream"/>
                </params>
                <declaration name="derVal" type="DerValue" line="152"/>
            </method>
            <javadoc line="156">
                Create the object from the passed DER encoded value.                
                <param>
                    derVal the DerValue decoded from the stream.                    
                </param>
                <exception>
                    IOException on decoding errors.                    
                </exception>
            </javadoc>
            <method name="ReasonFlags" type="constructor" line="162">
                <params>
                    <param name="derVal" type="DerValue"/>
                </params>
            </method>
            <javadoc line="166">
                Returns the reason flags as a boolean array.                
            </javadoc>
            <method name="getFlags" type="boolean[]" line="169"/>
            <javadoc line="173">
                Set the attribute value.                
            </javadoc>
            <method name="set" type="void" line="176">
                <params>
                    <param name="name" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="177"/>
                <declaration name="val" type="boolean" line="180"/>
            </method>
            <javadoc line="184">
                Get the attribute value.                
            </javadoc>
            <method name="get" type="Object" line="187">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="191">
                Delete the attribute value.                
            </javadoc>
            <method name="delete" type="void" line="194">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="198">
                Returns a printable representation of the ReasonFlags.                
            </javadoc>
            <method name="toString" type="String" line="201">
                <declaration name="s" type="String" line="202"/>
                <scope line="204"/>
                <scope line="214"/>
            </method>
            <javadoc line="221">
                Write the extension to the DerOutputStream.                
                <param>
                    out the DerOutputStream to write the extension to.                    
                </param>
                <exception>
                    IOException on encoding errors.                    
                </exception>
            </javadoc>
            <method name="encode" type="void" line="227">
                <params>
                    <param name="out" type="DerOutputStream"/>
                </params>
            </method>
            <javadoc line="231">
                Return an enumeration of names of attributes existing within this
                  attribute.                
            </javadoc>
            <method name="getElements" type="Enumeration<String>" line="235">
                <declaration name="elements" type="AttributeNameEnumeration" line="236"/>
                <scope line="237"/>
            </method>
        </class>
    </source>