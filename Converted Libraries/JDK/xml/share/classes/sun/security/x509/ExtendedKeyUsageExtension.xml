<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="java.util.Vector"/>
        <import package="sun.security.util.DerValue"/>
        <import package="sun.security.util.DerOutputStream"/>
        <import package="sun.security.util.ObjectIdentifier"/>
        <class name="ExtendedKeyUsageExtension" line="13">
            <extends class="Extension"/>
            <implements interface="CertAttrSet">
                <type_params>
                    <type_param name="String"/>
                </type_params>
            </implements>
            <javadoc line="13">
                This class defines the Extended Key Usage Extension, which
                  indicates one or more purposes for which the certified public key
                  may be used, in addition to or in place of the basic purposes
                  indicated in the key usage extension field.  This field is defined
                  as follows:&lt;p&gt;
                  id-ce-extKeyUsage OBJECT IDENTIFIER ::= {id-ce 37}&lt;p&gt;
                  ExtKeyUsageSyntax ::= SEQUENCE SIZE (1..MAX) OF KeyPurposeId&lt;p&gt;
                  KeyPurposeId ::= OBJECT IDENTIFIER&lt;p&gt;
                  Key purposes may be defined by any organization with a need. Object
                  identifiers used to identify key purposes shall be assigned in
                  accordance with IANA or ITU-T Rec. X.660 | ISO/IEC/ITU 9834-1.&lt;p&gt;
                  This extension may, at the option of the certificate issuer, be
                  either critical or non-critical.&lt;p&gt;
                  If the extension is flagged critical, then the certificate MUST be
                  used only for one of the purposes indicated.&lt;p&gt;
                  If the extension is flagged non-critical, then it indicates the
                  intended purpose or purposes of the key, and may be used in finding
                  the correct key/certificate of an entity that has multiple
                  keys/certificates. It is an advisory field and does not imply that
                  usage of the key is restricted by the certification authority to
                  the purpose indicated. Certificate using applications may
                  nevertheless require that a particular purpose be indicated in
                  order for the certificate to be acceptable to that application.&lt;p&gt;
                  If a certificate contains both a critical key usage field and a
                  critical extended key usage field, then both fields MUST be
                  processed independently and the certificate MUST only be used for a
                  purpose consistent with both fields.  If there is no purpose
                  consistent with both fields, then the certificate MUST NOT be used
                  for any purpose.&lt;p&gt;                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="IDENT" type="String" line="46"/>
            <javadoc line="46">
                Identifier for this attribute, to be used with the
                  get, set, delete methods of Certificate, x509 type.                
            </javadoc>
            <declaration name="NAME" type="String" line="51"/>
            <javadoc line="51">
                Attribute names.                
            </javadoc>
            <declaration name="USAGES" type="String" line="55"/>
            <declaration name="map" type="Map&lt;ObjectIdentifier,String&gt;" line="56"/>
            <declaration name="anyExtendedKeyUsageOidData" type="int[]" line="57"/>
            <declaration name="serverAuthOidData" type="int[]" line="58"/>
            <declaration name="clientAuthOidData" type="int[]" line="59"/>
            <declaration name="codeSigningOidData" type="int[]" line="60"/>
            <declaration name="emailProtectionOidData" type="int[]" line="61"/>
            <declaration name="ipsecEndSystemOidData" type="int[]" line="62"/>
            <declaration name="ipsecTunnelOidData" type="int[]" line="63"/>
            <declaration name="ipsecUserOidData" type="int[]" line="64"/>
            <declaration name="timeStampingOidData" type="int[]" line="65"/>
            <declaration name="OCSPSigningOidData" type="int[]" line="66"/>
            <scope line="67"/>
            <declaration name="keyUsages" type="Vector&lt;ObjectIdentifier&gt;" line="79"/>
            <javadoc line="79">
                Vector of KeyUsages for this object.                
            </javadoc>
            <method name="encodeThis" type="void" line="83">
                <scope line="84"/>
                <declaration name="os" type="DerOutputStream" line="88"/>
                <declaration name="tmp" type="DerOutputStream" line="89"/>
                <scope line="90"/>
            </method>
            <javadoc line="96">
                Create a ExtendedKeyUsageExtension object from
                  a Vector of Key Usages; the criticality is set to false.                
                <param>
                    keyUsages the Vector of KeyUsages (ObjectIdentifiers)                    
                </param>
            </javadoc>
            <method name="ExtendedKeyUsageExtension" type="constructor" line="101">
                <params>
                    <param name="keyUsages" type="Vector<ObjectIdentifier>"/>
                </params>
            </method>
            <javadoc line="104">
                Create a ExtendedKeyUsageExtension object from
                  a Vector of KeyUsages with specified criticality.                
                <param>
                    critical true if the extension is to be treated as critical.                    
                </param>
                <param>
                    keyUsages the Vector of KeyUsages (ObjectIdentifiers)                    
                </param>
            </javadoc>
            <method name="ExtendedKeyUsageExtension" type="constructor" line="110">
                <params>
                    <param name="critical" type="Boolean"/>
                    <param name="keyUsages" type="Vector<ObjectIdentifier>"/>
                </params>
            </method>
            <javadoc line="116">
                Create the extension from its DER encoded value and criticality.                
                <param>
                    critical true if the extension is to be treated as critical.                    
                </param>
                <param>
                    value an array of DER encoded bytes of the actual value.                    
                </param>
                <exception>
                    ClassCastException if value is not an array of bytes                    
                </exception>
                <exception>
                    IOException on error.                    
                </exception>
            </javadoc>
            <method name="ExtendedKeyUsageExtension" type="constructor" line="123">
                <params>
                    <param name="critical" type="Boolean"/>
                    <param name="value" type="Object"/>
                </params>
                <declaration name="val" type="DerValue" line="127"/>
                <scope line="128"/>
                <scope line="132">
                    <declaration name="seq" type="DerValue" line="133"/>
                    <declaration name="usage" type="ObjectIdentifier" line="134"/>
                </scope>
            </method>
            <javadoc line="138">
                Return the extension as user readable string.                
            </javadoc>
            <method name="toString" type="String" line="141">
                <declaration name="usage" type="String" line="143"/>
                <declaration name="first" type="boolean" line="144"/>
                <scope line="145">
                    <scope line="146"/>
                    <declaration name="result" type="String" line="149"/>
                    <scope line="150"/>
                    <scope line="153"/>
                </scope>
            </method>
            <javadoc line="160">
                Write the extension to the DerOutputStream.                
                <param>
                    out the DerOutputStream to write the extension to.                    
                </param>
                <exception>
                    IOException on encoding errors.                    
                </exception>
            </javadoc>
            <method name="encode" type="void" line="165">
                <params>
                    <param name="out" type="OutputStream"/>
                </params>
                <declaration name="tmp" type="DerOutputStream" line="166"/>
                <scope line="167"/>
            </method>
            <javadoc line="175">
                Set the attribute value.                
            </javadoc>
            <method name="set" type="void" line="178">
                <params>
                    <param name="name" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="179">
                    <scope line="180"/>
                </scope>
                <scope line="185"/>
            </method>
            <javadoc line="190">
                Get the attribute value.                
            </javadoc>
            <method name="get" type="Object" line="193">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="194"/>
                <scope line="197"/>
            </method>
            <javadoc line="201">
                Delete the attribute value.                
            </javadoc>
            <method name="delete" type="void" line="204">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="205"/>
                <scope line="208"/>
            </method>
            <javadoc line="213">
                Return an enumeration of names of attributes existing within this
                  attribute.                
            </javadoc>
            <method name="getElements" type="Enumeration<String>" line="217">
                <declaration name="elements" type="AttributeNameEnumeration" line="218"/>
            </method>
            <javadoc line="222">
                Return the name of this attribute.                
            </javadoc>
            <method name="getName" type="String" line="225"/>
            <method name="getExtendedKeyUsage" type="List<String>" line="228">
                <declaration name="al" type="List&lt;String&gt;" line="229"/>
                <scope line="230"/>
            </method>
        </class>
    </source>