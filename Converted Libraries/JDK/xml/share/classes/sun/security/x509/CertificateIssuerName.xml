<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.x509">
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.util.Enumeration"/>
        <import package="javax.security.auth.x500.X500Principal"/>
        <import package="sun.security.util"/>
        <class name="CertificateIssuerName" line="37">
            <comment line="57">
                accessor name for cached X500Principal only
                 do not allow a set() of this value, do not advertise with getElements()                
            </comment>
            <comment line="61">
                Private data member                
            </comment>
            <comment line="64">
                cached X500Principal version of the name                
            </comment>
            <implements interface="CertAttrSet">
                <type_params>
                    <type_param name="String"/>
                </type_params>
            </implements>
            <javadoc line="37">
                This class defines the X500Name attribute for the Certificate.                
                <author>
                    Amit Kapoor                    
                </author>
                <author>
                    Hemma Prafullchandra                    
                </author>
                <see>
                    CertAttrSet                    
                </see>
            </javadoc>
            <declaration name="IDENT" type="String" line="45"/>
            <javadoc line="45">
                Identifier for this attribute, to be used with the
                  get, set, delete methods of Certificate, x509 type.                
            </javadoc>
            <declaration name="NAME" type="String" line="50"/>
            <javadoc line="50">
                Sub attributes name for this CertAttrSet.                
            </javadoc>
            <declaration name="DN_NAME" type="String" line="54"/>
            <declaration name="DN_PRINCIPAL" type="String" line="58"/>
            <declaration name="dnName" type="X500Name" line="61"/>
            <declaration name="dnPrincipal" type="X500Principal" line="64"/>
            <javadoc line="66">
                Default constructor for the certificate attribute.                
                <param>
                    name the X500Name                    
                </param>
            </javadoc>
            <method name="CertificateIssuerName" type="constructor" line="71">
                <params>
                    <param name="name" type="X500Name"/>
                </params>
            </method>
            <javadoc line="75">
                Create the object, decoding the values from the passed DER stream.                
                <param>
                    in the DerInputStream to read the X500Name from.                    
                </param>
                <exception>
                    IOException on decoding errors.                    
                </exception>
            </javadoc>
            <method name="CertificateIssuerName" type="constructor" line="81">
                <params>
                    <param name="in" type="DerInputStream"/>
                </params>
            </method>
            <javadoc line="85">
                Create the object, decoding the values from the passed stream.                
                <param>
                    in the InputStream to read the X500Name from.                    
                </param>
                <exception>
                    IOException on decoding errors.                    
                </exception>
            </javadoc>
            <method name="CertificateIssuerName" type="constructor" line="91">
                <params>
                    <param name="in" type="InputStream"/>
                </params>
                <declaration name="derVal" type="DerValue" line="92"/>
            </method>
            <javadoc line="96">
                Return the name as user readable string.                
            </javadoc>
            <method name="toString" type="String" line="99"/>
            <javadoc line="104">
                Encode the name in DER form to the stream.                
                <param>
                    out the DerOutputStream to marshal the contents to.                    
                </param>
                <exception>
                    IOException on errors.                    
                </exception>
            </javadoc>
            <method name="encode" type="void" line="110">
                <params>
                    <param name="out" type="OutputStream"/>
                </params>
                <declaration name="tmp" type="DerOutputStream" line="111"/>
            </method>
            <javadoc line="117">
                Set the attribute value.                
            </javadoc>
            <method name="set" type="void" line="120">
                <params>
                    <param name="name" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="121"/>
                <scope line="124"/>
                <scope line="127"/>
            </method>
            <javadoc line="133">
                Get the attribute value.                
            </javadoc>
            <method name="get" type="Object" line="136">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="137"/>
                <scope line="139">
                    <scope line="140"/>
                </scope>
                <scope line="144"/>
            </method>
            <javadoc line="150">
                Delete the attribute value.                
            </javadoc>
            <method name="delete" type="void" line="153">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="154"/>
                <scope line="157"/>
            </method>
            <javadoc line="163">
                Return an enumeration of names of attributes existing within this
                  attribute.                
            </javadoc>
            <method name="getElements" type="Enumeration<String>" line="167">
                <declaration name="elements" type="AttributeNameEnumeration" line="168"/>
            </method>
            <javadoc line="174">
                Return the name of this attribute.                
            </javadoc>
            <method name="getName" type="String" line="177"/>
        </class>
    </source>