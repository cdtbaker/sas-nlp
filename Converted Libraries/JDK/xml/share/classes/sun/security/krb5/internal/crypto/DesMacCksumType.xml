<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal.crypto">
        <import package="sun.security.krb5.Checksum"/>
        <import package="sun.security.krb5.Confounder"/>
        <import package="sun.security.krb5.KrbCryptoException"/>
        <import package="sun.security.krb5.internal"/>
        <import package="javax.crypto.spec.DESKeySpec"/>
        <import package="java.security.InvalidKeyException"/>
        <class name="DesMacCksumType" line="8">
            <extends class="CksumType"/>
            <method name="DesMacCksumType" type="constructor" line="9"/>
            <method name="confounderSize" type="int" line="11"/>
            <method name="cksumType" type="int" line="14"/>
            <method name="isSafe" type="boolean" line="17"/>
            <method name="cksumSize" type="int" line="20"/>
            <method name="keyType" type="int" line="23"/>
            <method name="keySize" type="int" line="26"/>
            <method name="calculateChecksum" type="byte[]" line="29">
                <params>
                    <param name="data" type="byte[]"/>
                    <param name="size" type="int"/>
                </params>
            </method>
            <javadoc line="32">
                Calculates keyed checksum.                
                <param>
                    data the data used to generate the checksum.                    
                </param>
                <param>
                    size length of the data.                    
                </param>
                <param>
                    key the key used to encrypt the checksum.                    
                </param>
                <return>
                    keyed checksum.                    
                </return>
                <modified>
                    by Yanni Zhang, 12/08/99.                    
                </modified>
            </javadoc>
            <method name="calculateKeyedChecksum" type="byte[]" line="40">
                <params>
                    <param name="data" type="byte[]"/>
                    <param name="size" type="int"/>
                    <param name="key" type="byte[]"/>
                    <param name="usage" type="int"/>
                </params>
                <declaration name="new_data" type="byte[]" line="41"/>
                <declaration name="conf" type="byte[]" line="42"/>
                <scope line="45">
                    <scope line="46"/>
                </scope>
                <scope line="50"/>
                <declaration name="residue_ivec" type="byte[]" line="52"/>
                <declaration name="residue" type="byte[]" line="53"/>
                <declaration name="cksum" type="byte[]" line="54"/>
                <declaration name="new_key" type="byte[]" line="57"/>
                <scope line="60">
                    <scope line="61"/>
                </scope>
                <scope line="65"/>
                <declaration name="ivec" type="byte[]" line="67"/>
                <declaration name="enc_cksum" type="byte[]" line="68"/>
            </method>
            <javadoc line="72">
                Verifies keyed checksum.                
                <param>
                    data the data.                    
                </param>
                <param>
                    size the length of data.                    
                </param>
                <param>
                    key the key used to encrypt the checksum.                    
                </param>
                <param>
                    checksum                    
                </param>
                <return>
                    true if verification is successful.                    
                </return>
                <modified>
                    by Yanni Zhang, 12/08/99.                    
                </modified>
            </javadoc>
            <method name="verifyKeyedChecksum" type="boolean" line="81">
                <params>
                    <param name="data" type="byte[]"/>
                    <param name="size" type="int"/>
                    <param name="key" type="byte[]"/>
                    <param name="checksum" type="byte[]"/>
                    <param name="usage" type="int"/>
                </params>
                <declaration name="cksum" type="byte[]" line="82"/>
                <declaration name="new_data" type="byte[]" line="83"/>
                <scope line="86">
                    <scope line="87"/>
                </scope>
                <scope line="91"/>
                <declaration name="ivec" type="byte[]" line="93"/>
                <declaration name="new_cksum" type="byte[]" line="94"/>
                <declaration name="orig_cksum" type="byte[]" line="95"/>
            </method>
            <javadoc line="99">
                Decrypts keyed checksum.                
                <param>
                    enc_cksum the buffer for encrypted checksum.                    
                </param>
                <param>
                    key the key.                    
                </param>
                <return>
                    the checksum.                    
                </return>
                <modified>
                    by Yanni Zhang, 12/08/99.                    
                </modified>
            </javadoc>
            <method name="decryptKeyedChecksum" type="byte[]" line="106">
                <params>
                    <param name="enc_cksum" type="byte[]"/>
                    <param name="key" type="byte[]"/>
                </params>
                <declaration name="new_key" type="byte[]" line="107"/>
                <scope line="110">
                    <scope line="111"/>
                </scope>
                <scope line="115"/>
                <declaration name="ivec" type="byte[]" line="117"/>
                <declaration name="cksum" type="byte[]" line="118"/>
            </method>
        </class>
    </source>