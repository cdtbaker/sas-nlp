<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal">
        <import package="sun.security.krb5"/>
        <import package="sun.security.util"/>
        <import package="java.io.IOException"/>
        <import package="java.math.BigInteger"/>
        <class name="APReq" line="38">
            <javadoc line="38">
                Implements the ASN.1 AP-REQ type.
                  &lt;xmp&gt;
                  AP-REQ               ::= [APPLICATION 14] SEQUENCE {
                  pvno            [0] INTEGER (5),
                  msg-type        [1] INTEGER (14),
                  ap-options      [2] APOptions,
                  ticket          [3] Ticket,
                  authenticator   [4] EncryptedData -- Authenticator
                  }
                  &lt;/xmp&gt;
                  &lt;p&gt;
                  This definition reflects the Network Working Group RFC 4120
                  specification available at
                  &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;
                  http://www.ietf.org/rfc/rfc4120.txt&lt;/a&gt;.                
            </javadoc>
            <declaration name="pvno" type="int" line="59"/>
            <declaration name="msgType" type="int" line="60"/>
            <declaration name="apOptions" type="APOptions" line="61"/>
            <declaration name="ticket" type="Ticket" line="62"/>
            <declaration name="authenticator" type="EncryptedData" line="63"/>
            <method name="APReq" type="constructor" line="68">
                <params>
                    <param name="new_apOptions" type="APOptions"/>
                    <param name="new_ticket" type="Ticket"/>
                    <param name="new_authenticator" type="EncryptedData"/>
                </params>
            </method>
            <method name="APReq" type="constructor" line="76">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
            </method>
            <method name="APReq" type="constructor" line="80">
                <params>
                    <param name="encoding" type="DerValue"/>
                </params>
            </method>
            <javadoc line="84">
                Initializes an APReq object.                
                <param>
                    encoding a single DER-encoded value.                    
                </param>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
                <exception>
                    KrbApErrException if the value read from the DER-encoded data stream does not match the pre-defined value.                    
                </exception>
                <exception>
                    RealmException if an error occurs while parsing a Realm object.                    
                </exception>
            </javadoc>
            <method name="init" type="void" line="93">
                <params>
                    <param name="encoding" type="DerValue"/>
                </params>
                <declaration name="der" type="DerValue" line="94"/>
                <scope line="97"/>
                <scope line="101"/>
                <scope line="105"/>
                <scope line="109"/>
                <scope line="113"/>
                <scope line="117"/>
                <scope line="123"/>
            </method>
            <javadoc line="128">
                Encodes an APReq object.                
                <return>
                    byte array of encoded APReq object.                    
                </return>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
            </javadoc>
            <method name="asn1Encode" type="byte[]" line="134">
                <declaration name="bytes" type="DerOutputStream" line="135"/>
                <declaration name="temp" type="DerOutputStream" line="136"/>
                <declaration name="apreq" type="DerOutputStream" line="147"/>
            </method>
        </class>
    </source>