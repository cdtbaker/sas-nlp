<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal">
        <import package="java.io.ObjectOutputStream"/>
        <import package="sun.security.krb5.PrincipalName"/>
        <import package="sun.security.krb5.Checksum"/>
        <import package="sun.security.krb5.Asn1Exception"/>
        <import package="sun.security.krb5.Realm"/>
        <import package="sun.security.krb5.RealmException"/>
        <import package="sun.security.util"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.math.BigInteger"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.List"/>
        <import package="sun.security.krb5.internal.util.KerberosString"/>
        <class name="KRBError" line="16">
            <implements interface="java.io.Serializable"/>
            <javadoc line="16">
                Implements the ASN.1 KRBError type.
                  &lt;xmp&gt;
                  KRB-ERROR       ::= [APPLICATION 30] SEQUENCE {
                  pvno            [0] INTEGER (5),
                  msg-type        [1] INTEGER (30),
                  ctime           [2] KerberosTime OPTIONAL,
                  cusec           [3] Microseconds OPTIONAL,
                  stime           [4] KerberosTime,
                  susec           [5] Microseconds,
                  error-code      [6] Int32,
                  crealm          [7] Realm OPTIONAL,
                  cname           [8] PrincipalName OPTIONAL,
                  realm           [9] Realm -- service realm --,
                  sname           [10] PrincipalName -- service name --,
                  e-text          [11] KerberosString OPTIONAL,
                  e-data          [12] OCTET STRING OPTIONAL
                  }
                  METHOD-DATA     ::= SEQUENCE OF PA-DATA
                  TYPED-DATA      ::= SEQUENCE SIZE (1..MAX) OF SEQUENCE {
                  data-type       [0] Int32,
                  data-value      [1] OCTET STRING OPTIONAL
                  }
                  &lt;/xmp&gt;
                  &lt;p&gt;
                  This definition reflects the Network Working Group RFC 4120
                  specification available at
                  &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;
                  http://www.ietf.org/rfc/rfc4120.txt&lt;/a&gt;.                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="47"/>
            <declaration name="pvno" type="int" line="48"/>
            <declaration name="msgType" type="int" line="49"/>
            <declaration name="cTime" type="KerberosTime" line="50"/>
            <declaration name="cuSec" type="Integer" line="51"/>
            <declaration name="sTime" type="KerberosTime" line="52"/>
            <declaration name="suSec" type="Integer" line="53"/>
            <declaration name="errorCode" type="int" line="54"/>
            <declaration name="crealm" type="Realm" line="55"/>
            <declaration name="cname" type="PrincipalName" line="56"/>
            <declaration name="realm" type="Realm" line="57"/>
            <declaration name="sname" type="PrincipalName" line="58"/>
            <declaration name="eText" type="String" line="59"/>
            <declaration name="eData" type="byte[]" line="60"/>
            <declaration name="eCksum" type="Checksum" line="61"/>
            <declaration name="pa" type="PAData[]" line="62"/>
            <declaration name="pa_eType" type="int" line="63"/>
            <declaration name="DEBUG" type="boolean" line="64"/>
            <method name="readObject" type="void" line="65">
                <params>
                    <param name="is" type="ObjectInputStream"/>
                </params>
                <scope line="66"/>
                <scope line="70"/>
            </method>
            <method name="writeObject" type="void" line="74">
                <params>
                    <param name="os" type="ObjectOutputStream"/>
                </params>
                <scope line="75"/>
                <scope line="78"/>
            </method>
            <method name="KRBError" type="constructor" line="82">
                <params>
                    <param name="new_apOptions" type="APOptions"/>
                    <param name="new_cTime" type="KerberosTime"/>
                    <param name="new_cuSec" type="Integer"/>
                    <param name="new_sTime" type="KerberosTime"/>
                    <param name="new_suSec" type="Integer"/>
                    <param name="new_errorCode" type="int"/>
                    <param name="new_crealm" type="Realm"/>
                    <param name="new_cname" type="PrincipalName"/>
                    <param name="new_realm" type="Realm"/>
                    <param name="new_sname" type="PrincipalName"/>
                    <param name="new_eText" type="String"/>
                    <param name="new_eData" type="byte[]"/>
                </params>
            </method>
            <method name="KRBError" type="constructor" line="98">
                <params>
                    <param name="new_apOptions" type="APOptions"/>
                    <param name="new_cTime" type="KerberosTime"/>
                    <param name="new_cuSec" type="Integer"/>
                    <param name="new_sTime" type="KerberosTime"/>
                    <param name="new_suSec" type="Integer"/>
                    <param name="new_errorCode" type="int"/>
                    <param name="new_crealm" type="Realm"/>
                    <param name="new_cname" type="PrincipalName"/>
                    <param name="new_realm" type="Realm"/>
                    <param name="new_sname" type="PrincipalName"/>
                    <param name="new_eText" type="String"/>
                    <param name="new_eData" type="byte[]"/>
                    <param name="new_eCksum" type="Checksum"/>
                </params>
            </method>
            <method name="KRBError" type="constructor" line="115">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
            </method>
            <method name="KRBError" type="constructor" line="119">
                <params>
                    <param name="encoding" type="DerValue"/>
                </params>
            </method>
            <method name="parseEData" type="void" line="124">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
                <scope line="125"/>
                <scope line="128">
                    <scope line="129"/>
                    <scope line="132">
                        <scope line="133"/>
                        <declaration name="ioe" type="IOException" line="136"/>
                    </scope>
                </scope>
                <scope line="141">
                    <scope line="142"/>
                </scope>
            </method>
            <javadoc line="147">
                Try parsing the data as a sequence of PA-DATA.                
                <param>
                    data the data block                    
                </param>
            </javadoc>
            <method name="parsePAData" type="void" line="151">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
                <declaration name="derPA" type="DerValue" line="152"/>
                <declaration name="paList" type="List&lt;PAData&gt;" line="153"/>
                <scope line="154">
                    <declaration name="tmp" type="DerValue" line="155"/>
                    <declaration name="pa_data" type="PAData" line="156"/>
                    <declaration name="pa_type" type="int" line="158"/>
                    <declaration name="pa_value" type="byte[]" line="159"/>
                    <scope line="160"/>
                    <scope line="166"/>
                    <scope line="171">
                        <declaration name="der" type="DerValue" line="172"/>
                        <scope line="173">
                            <declaration name="value" type="DerValue" line="174"/>
                            <declaration name="info" type="ETypeInfo" line="175"/>
                            <scope line="177"/>
                        </scope>
                    </scope>
                    <scope line="185">
                        <declaration name="der" type="DerValue" line="186"/>
                        <scope line="187">
                            <declaration name="value" type="DerValue" line="188"/>
                            <declaration name="info2" type="ETypeInfo2" line="189"/>
                            <scope line="191"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="getServerTime" type="KerberosTime" line="204"/>
            <method name="getClientTime" type="KerberosTime" line="207"/>
            <method name="getServerMicroSeconds" type="Integer" line="210"/>
            <method name="getClientMicroSeconds" type="Integer" line="213"/>
            <method name="getErrorCode" type="int" line="216"/>
            <method name="getPA" type="PAData[]" line="219"/>
            <method name="getEType" type="int" line="222"/>
            <method name="getErrorString" type="String" line="225"/>
            <javadoc line="228">
                Initializes a KRBError object.                
                <param>
                    encoding a DER-encoded data.                    
                </param>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
                <exception>
                    KrbApErrException if the value read from the DER-encoded data
                      stream does not match the pre-defined value.                    
                </exception>
                <exception>
                    RealmException if an error occurs while parsing a Realm object.                    
                </exception>
            </javadoc>
            <method name="init" type="void" line="237">
                <params>
                    <param name="encoding" type="DerValue"/>
                </params>
                <declaration name="der" type="DerValue" line="238"/>
                <scope line="239"/>
                <scope line="243"/>
                <scope line="247"/>
                <scope line="251"/>
                <scope line="255">
                    <scope line="257"/>
                </scope>
                <scope line="261"/>
                <scope line="265"/>
                <scope line="272"/>
                <scope line="277"/>
                <scope line="288">
                    <scope line="289"/>
                </scope>
                <scope line="294">
                    <scope line="295"/>
                </scope>
                <scope line="300"/>
            </method>
            <javadoc line="305">
                For debug use only                
            </javadoc>
            <method name="showDebug" type="void" line="308">
                <scope line="309">
                    <scope line="312"/>
                    <scope line="319"/>
                    <scope line="322"/>
                    <scope line="325"/>
                    <scope line="328"/>
                    <scope line="331"/>
                    <scope line="334"/>
                </scope>
            </method>
            <javadoc line="340">
                Encodes an KRBError object.                
                <return>
                    the byte array of encoded KRBError object.                    
                </return>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
            </javadoc>
            <method name="asn1Encode" type="byte[]" line="346">
                <declaration name="temp" type="DerOutputStream" line="347"/>
                <declaration name="bytes" type="DerOutputStream" line="348"/>
                <scope line="354"/>
                <scope line="357"/>
                <scope line="369"/>
                <scope line="372"/>
                <scope line="377"/>
                <scope line="382"/>
                <scope line="387"/>
            </method>
            <method name="equals" type="boolean" line="396">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="397"/>
                <scope line="400"/>
                <declaration name="other" type="KRBError" line="403"/>
            </method>
            <method name="isEqual" type="boolean" line="406">
                <params>
                    <param name="a" type="Object"/>
                    <param name="b" type="Object"/>
                </params>
            </method>
            <method name="hashCode" type="int" line="409">
                <declaration name="result" type="int" line="410"/>
            </method>
        </class>
    </source>