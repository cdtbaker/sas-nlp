<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal">
        <import package="sun.security.krb5.Config"/>
        <import package="sun.security.krb5.Asn1Exception"/>
        <import package="sun.security.util"/>
        <import package="java.net.InetAddress"/>
        <import package="java.net.Inet4Address"/>
        <import package="java.net.Inet6Address"/>
        <import package="java.net.UnknownHostException"/>
        <import package="java.io.IOException"/>
        <class name="HostAddress" line="43">
            <comment line="65">
                caches local inet address                
            </comment>
            <comment line="158">
                implicit default not in Config.java                
            </comment>
            <implements interface="Cloneable"/>
            <javadoc line="43">
                Implements the ASN.1 HostAddress type.
                  &lt;xmp&gt;
                  HostAddress     ::= SEQUENCE  {
                  addr-type       [0] Int32,
                  address         [1] OCTET STRING
                  }
                  &lt;/xmp&gt;
                  &lt;p&gt;
                  This definition reflects the Network Working Group RFC 4120
                  specification available at
                  &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;
                  http://www.ietf.org/rfc/rfc4120.txt&lt;/a&gt;.                
            </javadoc>
            <declaration name="addrType" type="int" line="61"/>
            <declaration name="address" type="byte[]" line="62"/>
            <declaration name="localInetAddress" type="InetAddress" line="64"/>
            <declaration name="DEBUG" type="boolean" line="65"/>
            <declaration name="hashCode" type="int" line="66"/>
            <method name="HostAddress" type="constructor" line="68">
                <params>
                    <param name="dummy" type="int"/>
                </params>
            </method>
            <method name="clone" type="Object" line="70">
                <declaration name="new_hostAddress" type="HostAddress" line="71"/>
                <scope line="73"/>
            </method>
            <method name="hashCode" type="int" line="80">
                <scope line="81">
                    <declaration name="result" type="int" line="82"/>
                    <scope line="84">
                        <scope line="85"/>
                    </scope>
                </scope>
            </method>
            <method name="equals" type="boolean" line="95">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="96"/>
                <scope line="100"/>
                <declaration name="h" type="HostAddress" line="104"/>
                <scope line="109"/>
            </method>
            <method name="getLocalInetAddress" type="InetAddress" line="120">
                <scope line="122"/>
                <scope line="125"/>
            </method>
            <javadoc line="131">
                Gets the InetAddress of this HostAddress.                
                <return>
                    the IP address for this specified host.                    
                </return>
                <exception>
                    if no IP address for the host could be found.                    
                </exception>
            </javadoc>
            <method name="getInetAddress" type="InetAddress" line="137">
                <comment line="138">
                    the type of internet addresses is 2.                    
                </comment>
                <comment line="143">
                    if it is other type (ISO address, XNS address, etc)                    
                </comment>
                <scope line="140"/>
                <scope line="142"/>
            </method>
            <method name="getAddrType" type="int" line="148">
                <params>
                    <param name="inetAddress" type="InetAddress"/>
                </params>
                <declaration name="addressType" type="int" line="149"/>
            </method>
            <method name="HostAddress" type="constructor" line="158">
                <declaration name="inetAddress" type="InetAddress" line="159"/>
            </method>
            <javadoc line="164">
                Creates a HostAddress from the specified address and address type.                
                <param>
                    new_addrType the value of the address type which matches the defined
                      address family constants in the Berkeley Standard
                      Distributions of Unix.                    
                </param>
                <param>
                    new_address network address.                    
                </param>
                <exception>
                    KrbApErrException if address type and address length do not match defined value.                    
                </exception>
            </javadoc>
            <method name="HostAddress" type="constructor" line="175">
                <params>
                    <param name="new_addrType" type="int"/>
                    <param name="new_address" type="byte[]"/>
                </params>
                <comment line="177">
                    Internet address                    
                </comment>
                <comment line="182">
                    CHAOSnet address                    
                </comment>
                <comment line="185">
                    ISO address                    
                </comment>
                <comment line="187">
                    XNS address                    
                </comment>
                <comment line="191">
                    AppleTalk DDP address                    
                </comment>
                <comment line="195">
                    DECnet Phase IV address                    
                </comment>
                <comment line="199">
                    Internet IPv6 address                    
                </comment>
                <scope line="206"/>
                <scope line="209">
                    <scope line="211"/>
                </scope>
            </method>
            <method name="HostAddress" type="constructor" line="218">
                <params>
                    <param name="inetAddress" type="InetAddress"/>
                </params>
            </method>
            <javadoc line="223">
                Constructs a host address from a single DER-encoded value.                
                <param>
                    encoding a single DER-encoded value.                    
                </param>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
            </javadoc>
            <method name="HostAddress" type="constructor" line="230">
                <params>
                    <param name="encoding" type="DerValue"/>
                </params>
                <declaration name="der" type="DerValue" line="231"/>
                <scope line="232"/>
                <scope line="238"/>
            </method>
            <javadoc line="247">
                Encodes a HostAddress object.                
                <return>
                    a byte array of encoded HostAddress object.                    
                </return>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
            </javadoc>
            <method name="asn1Encode" type="byte[]" line="255">
                <declaration name="bytes" type="DerOutputStream" line="256"/>
                <declaration name="temp" type="DerOutputStream" line="257"/>
            </method>
            <javadoc line="268">
                Parses (unmarshal) a host address from a DER input stream.  This form
                  parsing might be used when expanding a value which is part of
                  a constructed sequence and uses explicitly tagged type.                
                <exception>
                    Asn1Exception on error.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
                <param>
                    data the Der input stream value, which contains one or more marshaled value.                    
                </param>
                <param>
                    explicitTag tag number.                    
                </param>
                <param>
                    optional indicates if this data field is optional                    
                </param>
                <return>
                    an instance of HostAddress.                    
                </return>
            </javadoc>
            <method name="parse" type="HostAddress" line="283">
                <params>
                    <param name="data" type="DerInputStream"/>
                    <param name="explicitTag" type="byte"/>
                    <param name="optional" type="boolean"/>
                </params>
                <scope line="285"/>
                <declaration name="der" type="DerValue" line="288"/>
                <scope line="289"/>
                <scope line="292">
                    <declaration name="subDer" type="DerValue" line="293"/>
                </scope>
            </method>
        </class>
    </source>