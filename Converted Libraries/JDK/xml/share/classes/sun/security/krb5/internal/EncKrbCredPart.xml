<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal">
        <import package="sun.security.util"/>
        <import package="sun.security.krb5.Asn1Exception"/>
        <import package="sun.security.krb5.RealmException"/>
        <import package="java.util.Vector"/>
        <import package="java.io.IOException"/>
        <import package="java.math.BigInteger"/>
        <class name="EncKrbCredPart" line="40">
            <comment line="64">
                optional                
            </comment>
            <comment line="65">
                optional                
            </comment>
            <comment line="66">
                optional                
            </comment>
            <comment line="67">
                optional                
            </comment>
            <comment line="68">
                optional                
            </comment>
            <javadoc line="40">
                Implements the ASN.1 EncKrbCredPart type.
                  &lt;xmp&gt;
                  EncKrbCredPart  ::= [APPLICATION 29] SEQUENCE {
                  ticket-info     [0] SEQUENCE OF KrbCredInfo,
                  nonce           [1] UInt32 OPTIONAL,
                  timestamp       [2] KerberosTime OPTIONAL,
                  usec            [3] Microseconds OPTIONAL,
                  s-address       [4] HostAddress OPTIONAL,
                  r-address       [5] HostAddress OPTIONAL
                  }
                  &lt;/xmp&gt;
                  &lt;p&gt;
                  This definition reflects the Network Working Group RFC 4120
                  specification available at
                  &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;
                  http://www.ietf.org/rfc/rfc4120.txt&lt;/a&gt;.                
            </javadoc>
            <declaration name="ticketInfo" type="KrbCredInfo[]" line="62"/>
            <declaration name="timeStamp" type="KerberosTime" line="63"/>
            <declaration name="nonce" type="Integer" line="64"/>
            <declaration name="usec" type="Integer" line="65"/>
            <declaration name="sAddress" type="HostAddress" line="66"/>
            <declaration name="rAddress" type="HostAddresses" line="67"/>
            <method name="EncKrbCredPart" type="constructor" line="75">
                <params>
                    <param name="new_ticketInfo" type="KrbCredInfo[]"/>
                    <param name="new_timeStamp" type="KerberosTime"/>
                    <param name="new_usec" type="Integer"/>
                    <param name="new_nonce" type="Integer"/>
                    <param name="new_sAddress" type="HostAddress"/>
                    <param name="new_rAddress" type="HostAddresses"/>
                </params>
                <scope line="76">
                    <scope line="78">
                        <scope line="79"/>
                        <scope line="81"/>
                    </scope>
                </scope>
            </method>
            <method name="EncKrbCredPart" type="constructor" line="94">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
            </method>
            <method name="EncKrbCredPart" type="constructor" line="99">
                <params>
                    <param name="encoding" type="DerValue"/>
                </params>
            </method>
            <javadoc line="103">
                Initializes an EncKrbCredPart object.                
                <param>
                    encoding a single DER-encoded value.                    
                </param>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
                <exception>
                    RealmException if an error occurs while parsing a Realm object.                    
                </exception>
            </javadoc>
            <method name="init" type="void" line="111">
                <params>
                    <param name="encoding" type="DerValue"/>
                </params>
                <comment line="114">
                    may not be the correct error code for a tag
                    mismatch on an encrypted structure                    
                </comment>
                <declaration name="der" type="DerValue" line="112"/>
                <scope line="122"/>
                <scope line="126"/>
                <scope line="131">
                    <declaration name="derValues" type="DerValue" line="132"/>
                    <scope line="134"/>
                </scope>
                <scope line="137"/>
                <scope line="140">
                    <scope line="141"/>
                </scope>
                <scope line="146"/>
                <scope line="149">
                    <scope line="150"/>
                </scope>
                <scope line="155"/>
                <scope line="158"/>
                <scope line="161"/>
            </method>
            <javadoc line="166">
                Encodes an EncKrbCredPart object.                
                <return>
                    byte array of encoded EncKrbCredPart object.                    
                </return>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
            </javadoc>
            <method name="asn1Encode" type="byte[]" line="173">
                <declaration name="bytes" type="DerOutputStream" line="174"/>
                <declaration name="temp" type="DerOutputStream" line="175"/>
                <declaration name="tickets" type="DerValue[]" line="176"/>
                <scope line="177"/>
                <scope line="184"/>
                <scope line="190"/>
                <scope line="194"/>
                <scope line="200"/>
                <scope line="204"/>
            </method>
        </class>
    </source>