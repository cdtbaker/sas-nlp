<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal.ccache">
        <import package="java.io.IOException"/>
        <import package="java.io.FileOutputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="sun.security.krb5.internal.util.KrbDataOutputStream"/>
        <import package="sun.security.krb5"/>
        <import package="sun.security.krb5.internal"/>
        <class name="CCacheOutputStream" line="40">
            <extends class="KrbDataOutputStream"/>
            <implements interface="FileCCacheConstants"/>
            <javadoc line="40">
                This class implements a buffered output stream. It provides functions to write FCC-format data to a disk file.                
                <author>
                    Yanni Zhang                    
                </author>
            </javadoc>
            <method name="CCacheOutputStream" type="constructor" line="47">
                <params>
                    <param name="os" type="OutputStream"/>
                </params>
            </method>
            <method name="writeHeader" type="void" line="51">
                <params>
                    <param name="p" type="PrincipalName"/>
                    <param name="version" type="int"/>
                </params>
            </method>
            <javadoc line="57">
                Writes a credentials in FCC format to this cache output stream.                
                <param>
                    creds the credentials to be written to the output stream.                    
                </param>
                <exception>
                    IOException if an I/O exception occurs.                    
                </exception>
                <exception>
                    Asn1Exception  if an Asn1Exception occurs.                    
                </exception>
            </javadoc>
            <method name="addCreds" type="void" line="69">
                <params>
                    <param name="creds" type="Credentials"/>
                </params>
                <comment line="65">
                    For object data fields which themselves have multiple data fields, such as PrincipalName, EncryptionKey
                    HostAddresses, AuthorizationData, I created corresponding write methods (writePrincipal,
                    writeKey,...) in each class, since converting the object into FCC format data stream
                    should be encapsulated in object itself.                    
                </comment>
                <scope line="82"/>
                <scope line="92"/>
            </method>
            <method name="writeTicket" type="void" line="101">
                <params>
                    <param name="t" type="Ticket"/>
                </params>
                <scope line="102"/>
                <scope line="105">
                    <declaration name="bytes" type="byte[]" line="106"/>
                </scope>
            </method>
            <method name="writeFlags" type="void" line="112">
                <params>
                    <param name="flags" type="TicketFlags"/>
                </params>
                <declaration name="tFlags" type="int" line="113"/>
                <declaration name="f" type="boolean[]" line="114"/>
                <scope line="115"/>
                <scope line="118"/>
                <scope line="121"/>
                <scope line="124"/>
                <scope line="127"/>
                <scope line="130"/>
                <scope line="133"/>
                <scope line="136"/>
                <scope line="139"/>
                <scope line="142"/>
                <scope line="145"/>
            </method>
        </class>
    </source>