<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5">
        <import package="sun.security.krb5.internal"/>
        <import package="sun.security.krb5.internal.crypto"/>
        <import package="java.io.IOException"/>
        <import package="java.net.UnknownHostException"/>
        <class name="KrbTgsReq" line="6">
            <javadoc line="6">
                This class encapsulates a Kerberos TGS-REQ that is sent from the
                  client to the KDC.                
            </javadoc>
            <declaration name="princName" type="PrincipalName" line="11"/>
            <declaration name="servName" type="PrincipalName" line="12"/>
            <declaration name="tgsReqMessg" type="TGSReq" line="13"/>
            <declaration name="ctime" type="KerberosTime" line="14"/>
            <declaration name="secondTicket" type="Ticket" line="15"/>
            <declaration name="useSubkey" type="boolean" line="16"/>
            <declaration name="tgsReqKey" type="EncryptionKey" line="17"/>
            <declaration name="DEBUG" type="boolean" line="18"/>
            <declaration name="obuf" type="byte[]" line="19"/>
            <declaration name="ibuf" type="byte[]" line="20"/>
            <method name="KrbTgsReq" type="constructor" line="21">
                <params>
                    <param name="asCreds" type="Credentials"/>
                    <param name="sname" type="PrincipalName"/>
                </params>
            </method>
            <method name="KrbTgsReq" type="constructor" line="24">
                <params>
                    <param name="options" type="KDCOptions"/>
                    <param name="asCreds" type="Credentials"/>
                    <param name="sname" type="PrincipalName"/>
                    <param name="from" type="KerberosTime"/>
                    <param name="till" type="KerberosTime"/>
                    <param name="rtime" type="KerberosTime"/>
                    <param name="eTypes" type="int[]"/>
                    <param name="addresses" type="HostAddresses"/>
                    <param name="authorizationData" type="AuthorizationData"/>
                    <param name="additionalTickets" type="Ticket[]"/>
                    <param name="subKey" type="EncryptionKey"/>
                </params>
                <scope line="28"/>
                <scope line="31"/>
                <scope line="34"/>
                <scope line="37"/>
                <scope line="40"/>
                <scope line="43"/>
                <scope line="46"/>
                <scope line="49"/>
                <scope line="52"/>
                <scope line="55"/>
                <scope line="58"/>
                <scope line="62"/>
            </method>
            <javadoc line="69">
                Sends a TGS request to the realm of the target.                
                <throws>
                    KrbException                    
                </throws>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="send" type="void" line="74">
                <declaration name="realmStr" type="String" line="75"/>
                <declaration name="comm" type="KdcComm" line="77"/>
            </method>
            <method name="getReply" type="KrbTgsRep" line="80"/>
            <javadoc line="83">
                Sends the request, waits for a reply, and returns the Credentials.
                  Used in Credentials, KrbCred, and internal/CredentialsUtil.                
            </javadoc>
            <method name="sendAndGetCreds" type="Credentials" line="87">
                <declaration name="tgs_rep" type="KrbTgsRep" line="88"/>
                <declaration name="kdc" type="String" line="89"/>
            </method>
            <method name="getCtime" type="KerberosTime" line="94"/>
            <method name="createRequest" type="TGSReq" line="97">
                <params>
                    <param name="kdc_options" type="KDCOptions"/>
                    <param name="ticket" type="Ticket"/>
                    <param name="key" type="EncryptionKey"/>
                    <param name="ctime" type="KerberosTime"/>
                    <param name="cname" type="PrincipalName"/>
                    <param name="crealm" type="Realm"/>
                    <param name="sname" type="PrincipalName"/>
                    <param name="from" type="KerberosTime"/>
                    <param name="till" type="KerberosTime"/>
                    <param name="rtime" type="KerberosTime"/>
                    <param name="eTypes" type="int[]"/>
                    <param name="addresses" type="HostAddresses"/>
                    <param name="authorizationData" type="AuthorizationData"/>
                    <param name="additionalTickets" type="Ticket[]"/>
                    <param name="subKey" type="EncryptionKey"/>
                </params>
                <declaration name="req_till" type="KerberosTime" line="98"/>
                <scope line="99"/>
                <scope line="102"/>
                <declaration name="req_eTypes" type="int[]" line="106"/>
                <scope line="107">
                    <scope line="109"/>
                </scope>
                <scope line="113"/>
                <declaration name="reqKey" type="EncryptionKey" line="116"/>
                <declaration name="encAuthorizationData" type="EncryptedData" line="117"/>
                <scope line="118">
                    <declaration name="ad" type="byte[]" line="119"/>
                    <scope line="120"/>
                </scope>
                <declaration name="reqBody" type="KDCReqBody" line="128"/>
                <declaration name="temp" type="byte[]" line="129"/>
                <declaration name="cksum" type="Checksum" line="130"/>
                <declaration name="tgs_ap_req" type="byte[]" line="149"/>
                <declaration name="tgsPAData" type="PAData[]" line="150"/>
            </method>
            <method name="getMessage" type="TGSReq" line="154"/>
            <method name="getSecondTicket" type="Ticket" line="157"/>
            <method name="debug" type="void" line="160">
                <params>
                    <param name="message" type="String"/>
                </params>
            </method>
            <method name="usedSubkey" type="boolean" line="162"/>
        </class>
    </source>