<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal">
        <import package="sun.security.krb5"/>
        <import package="sun.security.util"/>
        <import package="java.io.IOException"/>
        <import package="java.math.BigInteger"/>
        <class name="KDCRep" line="6">
            <javadoc line="6">
                Implements the ASN.1 KDC-REP type.
                  &lt;xmp&gt;
                  KDC-REP         ::= SEQUENCE {
                  pvno            [0] INTEGER (5),
                  msg-type        [1] INTEGER (11 -- AS -- | 13 -- TGS --),
                  padata          [2] SEQUENCE OF PA-DATA OPTIONAL
                  -- NOTE: not empty --,
                  crealm          [3] Realm,
                  cname           [4] PrincipalName,
                  ticket          [5] Ticket,
                  enc-part        [6] EncryptedData
                  -- EncASRepPart or EncTGSRepPart,
                  -- as appropriate
                  }
                  &lt;/xmp&gt;
                  &lt;p&gt;
                  This definition reflects the Network Working Group RFC 4120
                  specification available at
                  &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;
                  http://www.ietf.org/rfc/rfc4120.txt&lt;/a&gt;.                
            </javadoc>
            <declaration name="crealm" type="Realm" line="29"/>
            <declaration name="cname" type="PrincipalName" line="30"/>
            <declaration name="ticket" type="Ticket" line="31"/>
            <declaration name="encPart" type="EncryptedData" line="32"/>
            <declaration name="encKDCRepPart" type="EncKDCRepPart" line="33"/>
            <declaration name="pvno" type="int" line="34"/>
            <declaration name="msgType" type="int" line="35"/>
            <declaration name="pAData" type="PAData[]" line="36"/>
            <declaration name="DEBUG" type="boolean" line="37"/>
            <method name="KDCRep" type="constructor" line="38">
                <params>
                    <param name="new_pAData" type="PAData[]"/>
                    <param name="new_crealm" type="Realm"/>
                    <param name="new_cname" type="PrincipalName"/>
                    <param name="new_ticket" type="Ticket"/>
                    <param name="new_encPart" type="EncryptedData"/>
                    <param name="req_type" type="int"/>
                </params>
                <scope line="41">
                    <scope line="43">
                        <scope line="44"/>
                        <scope line="47"/>
                    </scope>
                </scope>
            </method>
            <method name="KDCRep" type="constructor" line="57"/>
            <method name="KDCRep" type="constructor" line="59">
                <params>
                    <param name="data" type="byte[]"/>
                    <param name="req_type" type="int"/>
                </params>
            </method>
            <method name="KDCRep" type="constructor" line="62">
                <params>
                    <param name="encoding" type="DerValue"/>
                    <param name="req_type" type="int"/>
                </params>
            </method>
            <javadoc line="65">
                Initializes an KDCRep object.                
                <param>
                    encoding a single DER-encoded value.                    
                </param>
                <param>
                    req_type reply message type.                    
                </param>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
                <exception>
                    RealmException if an error occurs while constructing
                      a Realm object from DER-encoded data.                    
                </exception>
                <exception>
                    KrbApErrException if the value read from the DER-encoded
                      data stream does not match the pre-defined value.                    
                </exception>
            </javadoc>
            <method name="init" type="void" line="76">
                <params>
                    <param name="encoding" type="DerValue"/>
                    <param name="req_type" type="int"/>
                </params>
                <declaration name="der" type="DerValue" line="77"/>
                <scope line="78">
                    <scope line="79"/>
                </scope>
                <scope line="85"/>
                <scope line="89">
                    <scope line="91"/>
                </scope>
                <scope line="95"/>
                <scope line="99">
                    <scope line="101"/>
                </scope>
                <scope line="105"/>
                <scope line="108">
                    <declaration name="padata" type="DerValue[]" line="110"/>
                    <scope line="112"/>
                </scope>
                <scope line="116"/>
                <scope line="123"/>
            </method>
            <javadoc line="127">
                Encodes this object to a byte array.                
                <return>
                    byte array of encoded APReq object.                    
                </return>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
            </javadoc>
            <method name="asn1Encode" type="byte[]" line="133">
                <declaration name="bytes" type="DerOutputStream" line="134"/>
                <declaration name="temp" type="DerOutputStream" line="135"/>
                <scope line="141">
                    <declaration name="padata_stream" type="DerOutputStream" line="142"/>
                    <scope line="143"/>
                </scope>
            </method>
        </class>
    </source>