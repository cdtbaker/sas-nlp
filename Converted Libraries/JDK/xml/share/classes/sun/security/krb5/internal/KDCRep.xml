<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal">
        <import package="sun.security.krb5"/>
        <import package="sun.security.util"/>
        <import package="java.io.IOException"/>
        <import package="java.math.BigInteger"/>
        <class name="KDCRep" line="38">
            <comment line="69">
                not part of ASN.1 encoding                
            </comment>
            <comment line="72">
                optional                
            </comment>
            <comment line="113">
                Not used? Don&apos;t know what keyusage to use here %%%
                public void decrypt(EncryptionKey key) throws Asn1Exception,
                IOException, KrbException, RealmException {
                encKDCRepPart = new EncKDCRepPart(encPart.decrypt(key), msgType);
                }                
            </comment>
            <javadoc line="38">
                Implements the ASN.1 KDC-REP type.
                  &lt;xmp&gt;
                  KDC-REP         ::= SEQUENCE {
                  pvno            [0] INTEGER (5),
                  msg-type        [1] INTEGER (11 -- AS -- | 13 -- TGS --),
                  padata          [2] SEQUENCE OF PA-DATA OPTIONAL
                  -- NOTE: not empty --,
                  crealm          [3] Realm,
                  cname           [4] PrincipalName,
                  ticket          [5] Ticket,
                  enc-part        [6] EncryptedData
                  -- EncASRepPart or EncTGSRepPart,
                  -- as appropriate
                  }
                  &lt;/xmp&gt;
                  &lt;p&gt;
                  This definition reflects the Network Working Group RFC 4120
                  specification available at
                  &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;
                  http://www.ietf.org/rfc/rfc4120.txt&lt;/a&gt;.                
            </javadoc>
            <declaration name="crealm" type="Realm" line="64"/>
            <declaration name="cname" type="PrincipalName" line="65"/>
            <declaration name="ticket" type="Ticket" line="66"/>
            <declaration name="encPart" type="EncryptedData" line="67"/>
            <declaration name="encKDCRepPart" type="EncKDCRepPart" line="68"/>
            <declaration name="pvno" type="int" line="69"/>
            <declaration name="msgType" type="int" line="70"/>
            <declaration name="pAData" type="PAData[]" line="71"/>
            <declaration name="DEBUG" type="boolean" line="72"/>
            <method name="KDCRep" type="constructor" line="80">
                <params>
                    <param name="new_pAData" type="PAData[]"/>
                    <param name="new_crealm" type="Realm"/>
                    <param name="new_cname" type="PrincipalName"/>
                    <param name="new_ticket" type="Ticket"/>
                    <param name="new_encPart" type="EncryptedData"/>
                    <param name="req_type" type="int"/>
                </params>
                <scope line="83">
                    <scope line="85">
                        <scope line="86"/>
                        <scope line="88"/>
                    </scope>
                </scope>
            </method>
            <method name="KDCRep" type="constructor" line="99"/>
            <method name="KDCRep" type="constructor" line="103">
                <params>
                    <param name="data" type="byte[]"/>
                    <param name="req_type" type="int"/>
                </params>
            </method>
            <method name="KDCRep" type="constructor" line="108">
                <params>
                    <param name="encoding" type="DerValue"/>
                    <param name="req_type" type="int"/>
                </params>
            </method>
            <javadoc line="119">
                Initializes an KDCRep object.                
                <param>
                    encoding a single DER-encoded value.                    
                </param>
                <param>
                    req_type reply message type.                    
                </param>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
                <exception>
                    RealmException if an error occurs while constructing
                      a Realm object from DER-encoded data.                    
                </exception>
                <exception>
                    KrbApErrException if the value read from the DER-encoded
                      data stream does not match the pre-defined value.                    
                </exception>
            </javadoc>
            <method name="init" type="void" line="134">
                <params>
                    <param name="encoding" type="DerValue"/>
                    <param name="req_type" type="int"/>
                </params>
                <declaration name="der" type="DerValue" line="135"/>
                <scope line="136">
                    <scope line="137"/>
                </scope>
                <scope line="146"/>
                <scope line="150">
                    <scope line="152"/>
                </scope>
                <scope line="155"/>
                <scope line="159">
                    <scope line="161"/>
                </scope>
                <scope line="164"/>
                <scope line="167">
                    <declaration name="padata" type="DerValue[]" line="169"/>
                    <scope line="171"/>
                </scope>
                <scope line="174"/>
                <scope line="181"/>
            </method>
            <javadoc line="186">
                Encodes this object to a byte array.                
                <return>
                    byte array of encoded APReq object.                    
                </return>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
            </javadoc>
            <method name="asn1Encode" type="byte[]" line="193">
                <declaration name="bytes" type="DerOutputStream" line="195"/>
                <declaration name="temp" type="DerOutputStream" line="196"/>
                <scope line="204">
                    <declaration name="padata_stream" type="DerOutputStream" line="205"/>
                    <scope line="206"/>
                </scope>
            </method>
        </class>
    </source>