<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal.crypto">
        <import package="java.security.MessageDigestSpi"/>
        <import package="java.security.DigestException"/>
        <class name="crc32" line="36">
            <extends class="MessageDigestSpi"/>
            <comment line="38">
                32-bit                
            </comment>
            <comment line="41">
                buffer;                
            </comment>
            <comment line="42">
                private int bufferIndex, bufferLeft;                
            </comment>
            <comment line="246">
                sum from zero, i.e., no pre- or post-conditioning                
            </comment>
            <comment line="251">
                CCITT ITU-T 3309 CRC-32 w/ standard pre- and post-conditioning                
            </comment>
            <implements interface="Cloneable"/>
            <declaration name="CRC32_LENGTH" type="int" line="37"/>
            <declaration name="seed" type="int" line="38"/>
            <declaration name="DEBUG" type="boolean" line="39"/>
            <method name="crc32" type="constructor" line="43"/>
            <method name="clone" type="Object" line="47">
                <scope line="48">
                    <declaration name="crc" type="crc32" line="49"/>
                </scope>
                <scope line="53"/>
            </method>
            <javadoc line="58">
                Return the digest length in bytes                
            </javadoc>
            <method name="engineGetDigestLength" type="int" line="61"/>
            <javadoc line="65">
                                
            </javadoc>
            <method name="engineDigest" type="byte[]" line="67">
                <comment line="70">
                    processBuffer(buffer, 0, bufferIndex, result, 0);                    
                </comment>
                <declaration name="result" type="byte[]" line="68"/>
            </method>
            <javadoc line="75">
                                
            </javadoc>
            <method name="engineDigest" type="int" line="77">
                <params>
                    <param name="buf" type="byte[]"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <comment line="88">
                    processBuffer(buffer, 0, bufferIndex, result, 0);                    
                </comment>
                <comment line="89">
                    if (len &lt; CRC32_LENGTH) {
                    throw new DigestException(&quot;partial digests not returned&quot;);
                    }
                    if (buf.length - offset &lt; CRC32_LENGTH) {
                    throw new DigestException(&quot;insufficient space in the output &quot; +
                    &quot;buffer to store the digest&quot;);
                    }                    
                </comment>
                <declaration name="result" type="byte[]" line="78"/>
                <scope line="80"/>
                <scope line="83"/>
            </method>
            <javadoc line="100">
                Update adds the passed byte to the digested data.                
            </javadoc>
            <method name="engineUpdate" type="void" line="103">
                <params>
                    <param name="b" type="byte"/>
                </params>
                <comment line="106">
                    engineUpdate(input, 0, 1);                    
                </comment>
                <declaration name="input" type="byte[]" line="104"/>
            </method>
            <javadoc line="110">
                Update adds the selected part of an array of bytes to the digest.
                  This version is more efficient than the byte-at-a-time version;
                  it avoids data copies and reduces per-byte call overhead.                
            </javadoc>
            <method name="engineUpdate" type="void" line="116">
                <params>
                    <param name="input" type="byte"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <declaration name="crc32Table" type="int[]" line="119"/>
            <method name="engineReset" type="void" line="186"/>
            <javadoc line="190">
                Initialize the CRC32 information                
            </javadoc>
            <method name="init" type="void" line="193"/>
            <method name="processData" type="void" line="197">
                <params>
                    <param name="data" type="byte[]"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <declaration name="result" type="int" line="198"/>
            </method>
            <method name="int2crc32" type="int" line="204">
                <params>
                    <param name="b" type="int"/>
                </params>
                <declaration name="crc" type="int" line="205"/>
                <scope line="207"/>
            </method>
            <method name="printcrc32Table" type="void" line="216">
                <declaration name="temp" type="String" line="217"/>
                <declaration name="zerofill" type="String" line="218"/>
                <scope line="221"/>
            </method>
            <method name="byte2crc32sum" type="int" line="233">
                <params>
                    <param name="seed" type="int"/>
                    <param name="data" type="byte[]"/>
                    <param name="size" type="int"/>
                </params>
                <declaration name="crc" type="int" line="234"/>
            </method>
            <method name="byte2crc32sum" type="int" line="241">
                <params>
                    <param name="seed" type="int"/>
                    <param name="data" type="byte[]"/>
                </params>
            </method>
            <method name="byte2crc32sum" type="int" line="246">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
            </method>
            <method name="byte2crc32" type="int" line="251">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
            </method>
            <method name="byte2crc32sum_bytes" type="byte[]" line="255">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
                <declaration name="temp" type="int" line="256"/>
            </method>
            <method name="byte2crc32sum_bytes" type="byte[]" line="260">
                <params>
                    <param name="data" type="byte[]"/>
                    <param name="size" type="int"/>
                </params>
                <declaration name="temp" type="int" line="261"/>
                <scope line="262"/>
            </method>
            <method name="int2quad" type="byte[]" line="269">
                <params>
                    <param name="input" type="long"/>
                </params>
                <declaration name="output" type="byte[]" line="270"/>
                <scope line="271"/>
            </method>
        </class>
    </source>