<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal.crypto">
        <import package="sun.security.krb5.internal"/>
        <import package="sun.security.krb5.Config"/>
        <import package="sun.security.krb5.EncryptedData"/>
        <import package="sun.security.krb5.EncryptionKey"/>
        <import package="sun.security.krb5.KrbException"/>
        <import package="sun.security.krb5.KrbCryptoException"/>
        <import package="javax.crypto"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.List"/>
        <import package="java.util.ArrayList"/>
        <class name="EType" line="12">
            <declaration name="DEBUG" type="boolean" line="13"/>
            <declaration name="ALLOW_WEAK_CRYPTO" type="boolean" line="14"/>
            <scope line="15">
                <declaration name="allowed" type="boolean" line="16"/>
                <scope line="17">
                    <declaration name="cfg" type="Config" line="18"/>
                    <declaration name="temp" type="String" line="19"/>
                </scope>
                <scope line="22">
                    <scope line="23"/>
                </scope>
            </scope>
            <method name="getInstance" type="EType" line="29">
                <params>
                    <param name="eTypeConst" type="int"/>
                </params>
                <declaration name="eType" type="EType" line="30"/>
                <declaration name="eTypeName" type="String" line="31"/>
                <declaration name="msg" type="String" line="62"/>
                <scope line="65"/>
            </method>
            <method name="eType" type="int" line="70"/>
            <method name="minimumPadSize" type="int" line="71"/>
            <method name="confounderSize" type="int" line="72"/>
            <method name="checksumType" type="int" line="73"/>
            <method name="checksumSize" type="int" line="74"/>
            <method name="blockSize" type="int" line="75"/>
            <method name="keyType" type="int" line="76"/>
            <method name="keySize" type="int" line="77"/>
            <method name="encrypt" type="byte[]" line="78"/>
            <method name="encrypt" type="byte[]" line="79"/>
            <method name="decrypt" type="byte[]" line="80"/>
            <method name="decrypt" type="byte[]" line="81"/>
            <method name="dataSize" type="int" line="82">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
            </method>
            <method name="padSize" type="int" line="85">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
            </method>
            <method name="startOfChecksum" type="int" line="88"/>
            <method name="startOfData" type="int" line="91"/>
            <method name="startOfPad" type="int" line="94">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
            </method>
            <method name="decryptedData" type="byte[]" line="97">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
                <declaration name="tempSize" type="int" line="98"/>
                <declaration name="result" type="byte[]" line="99"/>
            </method>
            <declaration name="BUILTIN_ETYPES" type="int[]" line="103"/>
            <declaration name="BUILTIN_ETYPES_NOAES256" type="int[]" line="104"/>
            <method name="getBuiltInDefaults" type="int[]" line="105">
                <declaration name="allowed" type="int" line="106"/>
                <scope line="107"/>
                <scope line="110"/>
                <declaration name="result" type="int[]" line="112"/>
                <scope line="113"/>
                <scope line="116"/>
                <scope line="119"/>
            </method>
            <javadoc line="124">
                Retrieves the default etypes from the configuration file, or
                  if that&apos;s not available, return the built-in list of default etypes.                
            </javadoc>
            <method name="getDefaults" type="int[]" line="128">
                <params>
                    <param name="configName" type="String"/>
                </params>
                <scope line="129"/>
                <scope line="132">
                    <scope line="133"/>
                </scope>
            </method>
            <javadoc line="140">
                Retrieve the default etypes from the configuration file for
                  those etypes for which there are corresponding keys.
                  Used in scenario we have some keys from a keytab with etypes
                  different from those named in configName. Then, in order
                  to decrypt an AS-REP, we should only ask for etypes for which
                  we have keys.                
            </javadoc>
            <method name="getDefaults" type="int[]" line="148">
                <params>
                    <param name="configName" type="String"/>
                    <param name="keys" type="EncryptionKey[]"/>
                </params>
                <declaration name="answer" type="int[]" line="149"/>
                <scope line="150"/>
                <declaration name="list" type="List&amp;lt;Integer&amp;gt;" line="153"/>
                <scope line="154">
                    <scope line="155"/>
                </scope>
                <declaration name="len" type="int" line="159"/>
                <scope line="160">
                    <declaration name="keystr" type="StringBuffer" line="161"/>
                    <scope line="162"/>
                </scope>
                <scope line="168">
                    <scope line="170"/>
                </scope>
            </method>
            <method name="isSupported" type="boolean" line="176">
                <params>
                    <param name="eTypeConst" type="int"/>
                    <param name="config" type="int[]"/>
                </params>
                <scope line="177">
                    <scope line="178"/>
                </scope>
            </method>
            <method name="isSupported" type="boolean" line="184">
                <params>
                    <param name="eTypeConst" type="int"/>
                </params>
                <declaration name="enabledETypes" type="int[]" line="185"/>
            </method>
            <method name="toString" type="String" line="188">
                <params>
                    <param name="type" type="int"/>
                </params>
            </method>
        </class>
    </source>