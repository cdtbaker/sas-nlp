<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5">
        <import package="java.util.Arrays"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.Hashtable"/>
        <import package="java.util.NoSuchElementException"/>
        <import package="java.util.Random"/>
        <import package="java.util.StringTokenizer"/>
        <import package="java.util.List"/>
        <import package="javax.naming"/>
        <import package="javax.naming.directory"/>
        <import package="javax.naming.spi.NamingManager"/>
        <class name="KrbServiceLocator" line="12">
            <javadoc line="12">
                This class discovers the location of Kerberos services by querying DNS,
                  as defined in RFC 4120.                
                <author>
                    Seema Malkani                    
                </author>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="SRV_RR" type="String" line="19"/>
            <declaration name="SRV_RR_ATTR" type="String[]" line="20"/>
            <declaration name="SRV_TXT" type="String" line="21"/>
            <declaration name="SRV_TXT_ATTR" type="String[]" line="22"/>
            <declaration name="random" type="Random" line="23"/>
            <method name="KrbServiceLocator" type="constructor" line="24"/>
            <javadoc line="26">
                Locates the KERBEROS service for a given domain.
                  Queries DNS for a list of KERBEROS Service Text Records (TXT) for a
                  given domain name.
                  Information on the mapping of DNS hostnames and domain names
                  to Kerberos realms is stored using DNS TXT records                
                <param>
                    domainName A string domain name.                    
                </param>
                <param>
                    environment The possibly null environment of the context.                    
                </param>
                <return>
                    An ordered list of hostports for the Kerberos service or null if
                      the service has not been located.                    
                </return>
            </javadoc>
            <method name="getKerberosService" type="String[]" line="37">
                <params>
                    <param name="realmName" type="String"/>
                </params>
                <declaration name="dnsUrl" type="String" line="38"/>
                <declaration name="records" type="String[]" line="39"/>
                <scope line="40">
                    <declaration name="ctx" type="Context" line="41"/>
                    <scope line="42"/>
                    <declaration name="attrs" type="Attributes" line="45"/>
                    <declaration name="attr" type="Attribute" line="46"/>
                    <scope line="47">
                        <declaration name="numValues" type="int" line="48"/>
                        <declaration name="numRecords" type="int" line="49"/>
                        <declaration name="txtRecords" type="String[]" line="50"/>
                        <declaration name="i" type="int" line="51"/>
                        <declaration name="j" type="int" line="52"/>
                        <scope line="53">
                            <scope line="54"/>
                            <scope line="58"/>
                        </scope>
                        <scope line="63">
                            <declaration name="trimmed" type="String[]" line="64"/>
                        </scope>
                        <scope line="68"/>
                    </scope>
                </scope>
                <scope line="73"/>
            </method>
            <javadoc line="77">
                Locates the KERBEROS service for a given domain.
                  Queries DNS for a list of KERBEROS Service Location Records (SRV) for a
                  given domain name.                
                <param>
                    domainName A string domain name.                    
                </param>
                <return>
                    An ordered list of hostports for the Kerberos service or null if
                      the service has not been located.                    
                </return>
            </javadoc>
            <method name="getKerberosService" type="String[]" line="85">
                <params>
                    <param name="realmName" type="String"/>
                    <param name="protocol" type="String"/>
                </params>
                <declaration name="dnsUrl" type="String" line="86"/>
                <declaration name="hostports" type="String[]" line="87"/>
                <scope line="88">
                    <declaration name="ctx" type="Context" line="89"/>
                    <scope line="90"/>
                    <declaration name="attrs" type="Attributes" line="93"/>
                    <declaration name="attr" type="Attribute" line="94"/>
                    <scope line="95">
                        <declaration name="numValues" type="int" line="96"/>
                        <declaration name="numRecords" type="int" line="97"/>
                        <declaration name="srvRecords" type="SrvRecord[]" line="98"/>
                        <declaration name="i" type="int" line="99"/>
                        <declaration name="j" type="int" line="100"/>
                        <scope line="101">
                            <scope line="102"/>
                            <scope line="106"/>
                        </scope>
                        <scope line="111">
                            <declaration name="trimmed" type="SrvRecord[]" line="112"/>
                        </scope>
                        <scope line="116"/>
                    </scope>
                </scope>
                <scope line="122"/>
            </method>
            <javadoc line="126">
                Extract hosts and port numbers from a list of SRV records.
                  An array of hostports is returned or null if none were found.                
            </javadoc>
            <method name="extractHostports" type="String[]" line="130">
                <params>
                    <param name="srvRecords" type="SrvRecord[]"/>
                </params>
                <declaration name="hostports" type="String[]" line="131"/>
                <declaration name="head" type="int" line="132"/>
                <declaration name="tail" type="int" line="133"/>
                <declaration name="sublistLength" type="int" line="134"/>
                <declaration name="k" type="int" line="135"/>
                <scope line="136">
                    <scope line="137"/>
                    <scope line="141"/>
                    <scope line="146"/>
                </scope>
            </method>
            <method name="selectHostport" type="String" line="152">
                <params>
                    <param name="srvRecords" type="SrvRecord[]"/>
                    <param name="head" type="int"/>
                    <param name="tail" type="int"/>
                </params>
                <scope line="153"/>
                <declaration name="sum" type="int" line="156"/>
                <scope line="157">
                    <scope line="158"/>
                </scope>
                <declaration name="hostport" type="String" line="163"/>
                <declaration name="target" type="int" line="164"/>
                <scope line="165">
                    <scope line="166"/>
                </scope>
            </method>
            <class name="SrvRecord" line="174">
                <implements interface="Comparable"/>
                <javadoc line="174">
                    This class holds a DNS service (SRV) record.
                      See http://www.ietf.org/rfc/rfc2782.txt                    
                </javadoc>
                <declaration name="priority" type="int" line="179"/>
                <declaration name="weight" type="int" line="180"/>
                <declaration name="sum" type="int" line="181"/>
                <declaration name="hostport" type="String" line="182"/>
                <javadoc line="183">
                    Creates a service record object from a string record.
                      DNS supplies the string record in the following format:
                      &lt;pre&gt;
                      &lt;Priority&gt; &quot; &quot; &lt;Weight&gt; &quot; &quot; &lt;Port&gt; &quot; &quot; &lt;Host&gt;
                      &lt;/pre&gt;                    
                </javadoc>
                <method name="SrvRecord" type="constructor" line="190">
                    <params>
                        <param name="srvRecord" type="String"/>
                    </params>
                    <declaration name="tokenizer" type="StringTokenizer" line="191"/>
                    <declaration name="port" type="String" line="192"/>
                    <scope line="193"/>
                    <scope line="199"/>
                </method>
                <method name="compareTo" type="int" line="203">
                    <params>
                        <param name="o" type="Object"/>
                    </params>
                    <declaration name="that" type="SrvRecord" line="204"/>
                    <scope line="205"/>
                    <scope line="208"/>
                    <scope line="211"/>
                    <scope line="214"/>
                    <scope line="217"/>
                </method>
            </class>
        </class>
    </source>