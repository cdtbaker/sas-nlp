<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal.crypto">
        <import package="sun.security.krb5.Confounder"/>
        <import package="sun.security.krb5.KrbCryptoException"/>
        <import package="sun.security.krb5.internal"/>
        <class name="DesCbcEType" line="38">
            <extends class="EType"/>
            <comment line="187">
                Not used.
                public void setChecksum(byte[] data, int size) throws KrbCryptoException{
                resetChecksumField(data);
                byte[] cksum = calculateChecksum(data, size);
                copyChecksumField(data, cksum);
                }                
            </comment>
            <method name="calculateChecksum" type="byte[]" line="39"/>
            <method name="blockSize" type="int" line="42"/>
            <method name="keyType" type="int" line="46"/>
            <method name="keySize" type="int" line="50"/>
            <javadoc line="54">
                Encrypts the data using DES in CBC mode.                
                <param>
                    data the buffer for plain text.                    
                </param>
                <param>
                    key the key to encrypt the data.                    
                </param>
                <return>
                    the buffer for encrypted data.                    
                </return>
                <written>
                    by Yanni Zhang, Dec 6 99.                    
                </written>
            </javadoc>
            <method name="encrypt" type="byte[]" line="64">
                <params>
                    <param name="data" type="byte[]"/>
                    <param name="key" type="byte[]"/>
                    <param name="usage" type="int"/>
                </params>
                <declaration name="ivec" type="byte[]" line="65"/>
            </method>
            <javadoc line="69">
                Encrypts the data using DES in CBC mode.                
                <param>
                    data the buffer for plain text.                    
                </param>
                <param>
                    key the key to encrypt the data.                    
                </param>
                <param>
                    ivec initialization vector.                    
                </param>
                <return>
                    buffer for encrypted data.                    
                </return>
                <modified>
                    by Yanni Zhang, Feb 24 00.                    
                </modified>
            </javadoc>
            <method name="encrypt" type="byte[]" line="79">
                <params>
                    <param name="data" type="byte[]"/>
                    <param name="key" type="byte[]"/>
                    <param name="ivec" type="byte[]"/>
                    <param name="usage" type="int"/>
                </params>
                <comment line="81">
                    To meet export control requirements, double check that the
                     key being used is no longer than 64 bits.
                    
                     Note that from a protocol point of view, an
                     algorithm that is not DES will be rejected before this
                     point. Also, a  DES key that is not 64 bits will be
                     rejected by a good implementations of JCE.                    
                </comment>
                <comment line="96">
                    Data padding: using Kerberos 5 GSS-API mechanism (1.2.2.3), Jun 1996.
                    Before encryption, plaintext data is padded to the next higest multiple of blocksize.
                    by appending between 1 and 8 bytes, the value of each such byte being the total number
                    of pad bytes. For example, if new_size = 10, blockSize is 8, we should pad 2 bytes,
                    and the value of each byte is 2.
                    If plaintext data is a multiple of blocksize, we pad a 8 bytes of 8.                    
                </comment>
                <declaration name="new_size" type="int" line="93"/>
                <declaration name="new_data" type="byte[]" line="94"/>
                <declaration name="pad" type="byte" line="95"/>
                <scope line="103"/>
                <scope line="107"/>
                <scope line="111"/>
                <declaration name="conf" type="byte[]" line="114"/>
                <declaration name="cksum" type="byte[]" line="117"/>
                <declaration name="cipher" type="byte[]" line="120"/>
            </method>
            <javadoc line="125">
                Decrypts the data using DES in CBC mode.                
                <param>
                    cipher the input buffer.                    
                </param>
                <param>
                    key the key to decrypt the data.                    
                </param>
                <written>
                    by Yanni Zhang, Dec 6 99.                    
                </written>
            </javadoc>
            <method name="decrypt" type="byte[]" line="133">
                <params>
                    <param name="cipher" type="byte[]"/>
                    <param name="key" type="byte[]"/>
                    <param name="usage" type="int"/>
                </params>
                <declaration name="ivec" type="byte[]" line="134"/>
            </method>
            <javadoc line="138">
                Decrypts the data using DES in CBC mode.                
                <param>
                    cipher the input buffer.                    
                </param>
                <param>
                    key the key to decrypt the data.                    
                </param>
                <param>
                    ivec initialization vector.                    
                </param>
                <modified>
                    by Yanni Zhang, Dec 6 99.                    
                </modified>
            </javadoc>
            <method name="decrypt" type="byte[]" line="147">
                <params>
                    <param name="cipher" type="byte[]"/>
                    <param name="key" type="byte[]"/>
                    <param name="ivec" type="byte[]"/>
                    <param name="usage" type="int"/>
                </params>
                <comment line="149">
                    To meet export control requirements, double check that the
                     key being used is no longer than 64 bits.
                    
                     Note that from a protocol point of view, an
                     algorithm that is not DES will be rejected before this
                     point. Also, a DES key that is not 64 bits will be
                     rejected by a good JCE provider.                    
                </comment>
                <declaration name="data" type="byte[]" line="161"/>
            </method>
            <method name="copyChecksumField" type="void" line="168">
                <params>
                    <param name="data" type="byte[]"/>
                    <param name="cksum" type="byte[]"/>
                </params>
            </method>
            <method name="checksumField" type="byte[]" line="173">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
                <declaration name="result" type="byte[]" line="174"/>
            </method>
            <method name="resetChecksumField" type="void" line="180">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
            </method>
            <method name="generateChecksum" type="byte[]" line="195">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
                <declaration name="cksum1" type="byte[]" line="196"/>
                <declaration name="cksum2" type="byte[]" line="198"/>
            </method>
            <method name="isChecksumEqual" type="boolean" line="203">
                <params>
                    <param name="cksum1" type="byte[]"/>
                    <param name="cksum2" type="byte[]"/>
                </params>
            </method>
            <method name="isChecksumValid" type="boolean" line="217">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
                <declaration name="cksum1" type="byte[]" line="218"/>
                <declaration name="cksum2" type="byte[]" line="219"/>
            </method>
        </class>
    </source>