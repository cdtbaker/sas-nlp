<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal">
        <import package="sun.security.krb5.KrbException"/>
        <import package="sun.security.util"/>
        <import package="sun.security.krb5.Asn1Exception"/>
        <import package="java.io.IOException"/>
        <import package="sun.security.krb5.internal.util.KerberosString"/>
        <class name="PAData" line="39">
            <comment line="133">
                accessor methods                
            </comment>
            <javadoc line="39">
                Implements the ASN.1 PA-DATA type.
                  &lt;xmp&gt;
                  PA-DATA         ::= SEQUENCE {
                  -- NOTE: first tag is [1], not [0]
                  padata-type     [1] Int32,
                  padata-value    [2] OCTET STRING -- might be encoded AP-REQ
                  }
                  &lt;/xmp&gt;
                  &lt;p&gt;
                  This definition reflects the Network Working Group RFC 4120
                  specification available at
                  &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;
                  http://www.ietf.org/rfc/rfc4120.txt&lt;/a&gt;.                
            </javadoc>
            <declaration name="pADataType" type="int" line="58"/>
            <declaration name="pADataValue" type="byte[]" line="59"/>
            <declaration name="TAG_PATYPE" type="byte" line="60"/>
            <declaration name="TAG_PAVALUE" type="byte" line="61"/>
            <method name="PAData" type="constructor" line="63"/>
            <method name="PAData" type="constructor" line="66">
                <params>
                    <param name="new_pADataType" type="int"/>
                    <param name="new_pADataValue" type="byte[]"/>
                </params>
                <scope line="68"/>
            </method>
            <method name="clone" type="Object" line="73">
                <declaration name="new_pAData" type="PAData" line="74"/>
                <scope line="76"/>
            </method>
            <javadoc line="84">
                Constructs a PAData object.                
                <param>
                    encoding a Der-encoded data.                    
                </param>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
            </javadoc>
            <method name="PAData" type="constructor" line="90">
                <params>
                    <param name="encoding" type="DerValue"/>
                </params>
                <declaration name="der" type="DerValue" line="91"/>
                <scope line="92"/>
                <scope line="96"/>
                <scope line="102"/>
            </method>
            <javadoc line="109">
                Encodes this object to an OutputStream.                
                <return>
                    byte array of the encoded data.                    
                </return>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
                <exception>
                    Asn1Exception on encoding errors.                    
                </exception>
            </javadoc>
            <method name="asn1Encode" type="byte[]" line="116">
                <declaration name="bytes" type="DerOutputStream" line="118"/>
                <declaration name="temp" type="DerOutputStream" line="119"/>
            </method>
            <method name="getType" type="int" line="133"/>
            <method name="getValue" type="byte[]" line="137"/>
            <class name="SaltAndParams" line="141">
                <javadoc line="141">
                    A place to store a pair of salt and s2kparams.
                      An empty salt is changed to null, to be interopable
                      with Windows 2000 server.                    
                </javadoc>
                <declaration name="salt" type="String" line="147"/>
                <declaration name="params" type="byte[]" line="148"/>
                <method name="SaltAndParams" type="constructor" line="149">
                    <params>
                        <param name="s" type="String"/>
                        <param name="p" type="byte[]"/>
                    </params>
                </method>
            </class>
            <javadoc line="156">
                Fetches salt and s2kparams value for eType in a series of PA-DATAs.
                  The preference order is PA-ETYPE-INFO2 &gt; PA-ETYPE-INFO &gt; PA-PW-SALT.
                  If multiple PA-DATA for the same etype appears, use the last one.
                  (This is useful when PA-DATAs from KRB-ERROR and AS-REP are combined).                
                <return>
                    salt and s2kparams. never null, its field might be null.                    
                </return>
            </javadoc>
            <method name="getSaltAndParams" type="SaltAndParams" line="164">
                <params>
                    <param name="eType" type="int"/>
                    <param name="pas" type="PAData[]"/>
                </params>
                <comment line="201">
                    Ignored                    
                </comment>
                <scope line="166"/>
                <declaration name="paPwSalt" type="String" line="170"/>
                <declaration name="info2" type="ETypeInfo2" line="171"/>
                <declaration name="info" type="ETypeInfo" line="172"/>
                <scope line="174">
                    <scope line="175">
                        <scope line="176">
                            <declaration name="der" type="DerValue" line="183"/>
                            <scope line="184">
                                <declaration name="value" type="DerValue" line="185"/>
                                <declaration name="tmp" type="ETypeInfo" line="186"/>
                            </scope>
                            <scope line="192">
                                <declaration name="value" type="DerValue" line="193"/>
                                <declaration name="tmp" type="ETypeInfo2" line="194"/>
                            </scope>
                        </scope>
                        <scope line="199"/>
                    </scope>
                </scope>
                <scope line="204"/>
                <scope line="206"/>
            </method>
        </class>
    </source>