<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal">
        <import package="sun.security.krb5.KrbException"/>
        <import package="sun.security.util"/>
        <import package="sun.security.krb5.Asn1Exception"/>
        <import package="java.io.IOException"/>
        <import package="sun.security.krb5.internal.util.KerberosString"/>
        <class name="PAData" line="7">
            <javadoc line="7">
                Implements the ASN.1 PA-DATA type.
                  &lt;xmp&gt;
                  PA-DATA         ::= SEQUENCE {
                  -- NOTE: first tag is [1], not [0]
                  padata-type     [1] Int32,
                  padata-value    [2] OCTET STRING -- might be encoded AP-REQ
                  }
                  &lt;/xmp&gt;
                  &lt;p&gt;
                  This definition reflects the Network Working Group RFC 4120
                  specification available at
                  &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;
                  http://www.ietf.org/rfc/rfc4120.txt&lt;/a&gt;.                
            </javadoc>
            <declaration name="pADataType" type="int" line="23"/>
            <declaration name="pADataValue" type="byte[]" line="24"/>
            <declaration name="TAG_PATYPE" type="byte" line="25"/>
            <declaration name="TAG_PAVALUE" type="byte" line="26"/>
            <method name="PAData" type="constructor" line="27"/>
            <method name="PAData" type="constructor" line="29">
                <params>
                    <param name="new_pADataType" type="int"/>
                    <param name="new_pADataValue" type="byte[]"/>
                </params>
                <scope line="31"/>
            </method>
            <method name="clone" type="Object" line="35">
                <declaration name="new_pAData" type="PAData" line="36"/>
                <scope line="38"/>
            </method>
            <javadoc line="44">
                Constructs a PAData object.                
                <param>
                    encoding a Der-encoded data.                    
                </param>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
            </javadoc>
            <method name="PAData" type="constructor" line="50">
                <params>
                    <param name="encoding" type="DerValue"/>
                </params>
                <declaration name="der" type="DerValue" line="51"/>
                <scope line="52"/>
                <scope line="56"/>
                <scope line="61"/>
            </method>
            <javadoc line="66">
                Encodes this object to an OutputStream.                
                <return>
                    byte array of the encoded data.                    
                </return>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
                <exception>
                    Asn1Exception on encoding errors.                    
                </exception>
            </javadoc>
            <method name="asn1Encode" type="byte[]" line="72">
                <declaration name="bytes" type="DerOutputStream" line="73"/>
                <declaration name="temp" type="DerOutputStream" line="74"/>
            </method>
            <method name="getType" type="int" line="84"/>
            <method name="getValue" type="byte[]" line="87"/>
            <class name="SaltAndParams" line="90">
                <javadoc line="90">
                    A place to store a pair of salt and s2kparams.
                      An empty salt is changed to null, to be interopable
                      with Windows 2000 server.                    
                </javadoc>
                <declaration name="salt" type="String" line="96"/>
                <declaration name="params" type="byte[]" line="97"/>
                <method name="SaltAndParams" type="constructor" line="98">
                    <params>
                        <param name="s" type="String"/>
                        <param name="p" type="byte[]"/>
                    </params>
                </method>
            </class>
            <javadoc line="104">
                Fetches salt and s2kparams value for eType in a series of PA-DATAs.
                  The preference order is PA-ETYPE-INFO2 &gt; PA-ETYPE-INFO &gt; PA-PW-SALT.
                  If multiple PA-DATA for the same etype appears, use the last one.
                  (This is useful when PA-DATAs from KRB-ERROR and AS-REP are combined).                
                <return>
                    salt and s2kparams. never null, its field might be null.                    
                </return>
            </javadoc>
            <method name="getSaltAndParams" type="SaltAndParams" line="111">
                <params>
                    <param name="eType" type="int"/>
                    <param name="pas" type="PAData[]"/>
                </params>
                <scope line="112"/>
                <declaration name="paPwSalt" type="String" line="115"/>
                <declaration name="info2" type="ETypeInfo2" line="116"/>
                <declaration name="info" type="ETypeInfo" line="117"/>
                <scope line="118">
                    <scope line="119">
                        <scope line="120">
                            <declaration name="der" type="DerValue" line="126"/>
                            <scope line="127">
                                <declaration name="value" type="DerValue" line="128"/>
                                <declaration name="tmp" type="ETypeInfo" line="129"/>
                            </scope>
                            <scope line="135">
                                <declaration name="value" type="DerValue" line="136"/>
                                <declaration name="tmp" type="ETypeInfo2" line="137"/>
                            </scope>
                        </scope>
                        <scope line="143"/>
                    </scope>
                </scope>
                <scope line="147"/>
                <scope line="150"/>
            </method>
        </class>
    </source>