<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal">
        <import package="sun.security.util"/>
        <import package="sun.security.krb5.Asn1Exception"/>
        <import package="java.util.Vector"/>
        <import package="java.io.IOException"/>
        <import package="java.math.BigInteger"/>
        <class name="KRBSafeBody" line="39">
            <comment line="63">
                optional                
            </comment>
            <comment line="64">
                optional                
            </comment>
            <comment line="65">
                optional                
            </comment>
            <comment line="67">
                optional                
            </comment>
            <javadoc line="39">
                Implements the ASN.1 KRBSafeBody type.
                  &lt;xmp&gt;
                  KRB-SAFE-BODY   ::= SEQUENCE {
                  user-data       [0] OCTET STRING,
                  timestamp       [1] KerberosTime OPTIONAL,
                  usec            [2] Microseconds OPTIONAL,
                  seq-number      [3] UInt32 OPTIONAL,
                  s-address       [4] HostAddress,
                  r-address       [5] HostAddress OPTIONAL
                  }
                  &lt;/xmp&gt;
                  &lt;p&gt;
                  This definition reflects the Network Working Group RFC 4120
                  specification available at
                  &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;
                  http://www.ietf.org/rfc/rfc4120.txt&lt;/a&gt;.                
            </javadoc>
            <declaration name="userData" type="byte[]" line="61"/>
            <declaration name="timestamp" type="KerberosTime" line="62"/>
            <declaration name="usec" type="Integer" line="63"/>
            <declaration name="seqNumber" type="Integer" line="64"/>
            <declaration name="sAddress" type="HostAddress" line="65"/>
            <declaration name="rAddress" type="HostAddress" line="66"/>
            <method name="KRBSafeBody" type="constructor" line="75">
                <params>
                    <param name="new_userData" type="byte[]"/>
                    <param name="new_timestamp" type="KerberosTime"/>
                    <param name="new_usec" type="Integer"/>
                    <param name="new_seqNumber" type="Integer"/>
                    <param name="new_sAddress" type="HostAddress"/>
                    <param name="new_rAddress" type="HostAddress"/>
                </params>
                <scope line="76"/>
            </method>
            <javadoc line="87">
                Constructs a KRBSafeBody object.                
                <param>
                    encoding a Der-encoded data.                    
                </param>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
            </javadoc>
            <method name="KRBSafeBody" type="constructor" line="93">
                <params>
                    <param name="encoding" type="DerValue"/>
                </params>
                <declaration name="der" type="DerValue" line="94"/>
                <scope line="95"/>
                <scope line="99"/>
                <scope line="105"/>
                <scope line="109"/>
            </method>
            <javadoc line="120">
                Encodes an KRBSafeBody object.                
                <return>
                    the byte array of encoded KRBSafeBody object.                    
                </return>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
            </javadoc>
            <method name="asn1Encode" type="byte[]" line="126">
                <comment line="141">
                    encode as an unsigned integer (UInt32)                    
                </comment>
                <declaration name="bytes" type="DerOutputStream" line="127"/>
                <declaration name="temp" type="DerOutputStream" line="128"/>
                <scope line="133"/>
                <scope line="138"/>
            </method>
            <javadoc line="151">
                Parse (unmarshal) a KRBSafeBody from a DER input stream.  This form
                  parsing might be used when expanding a value which is part of
                  a constructed sequence and uses explicitly tagged type.                
                <exception>
                    Asn1Exception on error.                    
                </exception>
                <param>
                    data the Der input stream value, which contains one or more marshaled value.                    
                </param>
                <param>
                    explicitTag tag number.                    
                </param>
                <param>
                    optional indicates if this data field is optional                    
                </param>
                <return>
                    an instance of KRBSafeBody.                    
                </return>
            </javadoc>
            <method name="parse" type="KRBSafeBody" line="163">
                <params>
                    <param name="data" type="DerInputStream"/>
                    <param name="explicitTag" type="byte"/>
                    <param name="optional" type="boolean"/>
                </params>
                <declaration name="der" type="DerValue" line="166"/>
                <scope line="169">
                    <declaration name="subDer" type="DerValue" line="170"/>
                </scope>
            </method>
        </class>
    </source>