<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5">
        <import package="sun.security.krb5.internal"/>
        <import package="sun.security.krb5.internal.crypto.KeyUsage"/>
        <import package="java.io.IOException"/>
        <import package="sun.security.util.DerValue"/>
        <class name="KrbCred" line="6">
            <javadoc line="6">
                This class encapsulates the KRB-CRED message that a client uses to
                  send its delegated credentials to a server.
                  Supports delegation of one ticket only.                
                <author>
                    Mayank Upadhyay                    
                </author>
            </javadoc>
            <declaration name="DEBUG" type="boolean" line="13"/>
            <declaration name="obuf" type="byte[]" line="14"/>
            <declaration name="credMessg" type="KRBCred" line="15"/>
            <declaration name="ticket" type="Ticket" line="16"/>
            <declaration name="encPart" type="EncKrbCredPart" line="17"/>
            <declaration name="creds" type="Credentials" line="18"/>
            <declaration name="timeStamp" type="KerberosTime" line="19"/>
            <method name="KrbCred" type="constructor" line="20">
                <params>
                    <param name="tgt" type="Credentials"/>
                    <param name="serviceTicket" type="Credentials"/>
                    <param name="key" type="EncryptionKey"/>
                </params>
                <declaration name="client" type="PrincipalName" line="21"/>
                <declaration name="tgService" type="PrincipalName" line="22"/>
                <declaration name="server" type="PrincipalName" line="23"/>
                <declaration name="options" type="KDCOptions" line="25"/>
                <declaration name="sAddrs" type="HostAddresses" line="28"/>
                <declaration name="tgsReq" type="KrbTgsReq" line="30"/>
            </method>
            <method name="createMessage" type="KRBCred" line="34">
                <params>
                    <param name="delegatedCreds" type="Credentials"/>
                    <param name="key" type="EncryptionKey"/>
                </params>
                <declaration name="sessionKey" type="EncryptionKey" line="35"/>
                <declaration name="princ" type="PrincipalName" line="36"/>
                <declaration name="realm" type="Realm" line="37"/>
                <declaration name="tgService" type="PrincipalName" line="38"/>
                <declaration name="tgsRealm" type="Realm" line="39"/>
                <declaration name="credInfo" type="KrbCredInfo" line="40"/>
                <declaration name="credInfos" type="KrbCredInfo[]" line="42"/>
                <declaration name="encPart" type="EncKrbCredPart" line="43"/>
                <declaration name="encEncPart" type="EncryptedData" line="44"/>
                <declaration name="tickets" type="Ticket[]" line="45"/>
            </method>
            <method name="KrbCred" type="constructor" line="49">
                <params>
                    <param name="asn1Message" type="byte[]"/>
                    <param name="key" type="EncryptionKey"/>
                </params>
                <declaration name="temp" type="byte[]" line="52"/>
                <declaration name="plainText" type="byte[]" line="53"/>
                <declaration name="encoding" type="DerValue" line="54"/>
                <declaration name="encPart" type="EncKrbCredPart" line="55"/>
                <declaration name="credInfo" type="KrbCredInfo" line="57"/>
                <declaration name="credInfoKey" type="EncryptionKey" line="58"/>
                <declaration name="prealm" type="Realm" line="59"/>
                <declaration name="pname" type="PrincipalName" line="60"/>
                <declaration name="flags" type="TicketFlags" line="62"/>
                <declaration name="authtime" type="KerberosTime" line="63"/>
                <declaration name="starttime" type="KerberosTime" line="64"/>
                <declaration name="endtime" type="KerberosTime" line="65"/>
                <declaration name="renewTill" type="KerberosTime" line="66"/>
                <declaration name="srealm" type="Realm" line="67"/>
                <declaration name="sname" type="PrincipalName" line="68"/>
                <declaration name="caddr" type="HostAddresses" line="70"/>
                <scope line="71"/>
            </method>
            <javadoc line="76">
                Returns the delegated credentials from the peer.                
            </javadoc>
            <method name="getDelegatedCreds" type="Credentials[]" line="79">
                <declaration name="allCreds" type="Credentials[]" line="80"/>
            </method>
            <javadoc line="83">
                Returns the ASN.1 encoding that should be sent to the peer.                
            </javadoc>
            <method name="getMessage" type="byte[]" line="86"/>
        </class>
    </source>