<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal.crypto.dk">
        <import package="java.security"/>
        <import package="javax.crypto"/>
        <import package="javax.crypto.spec"/>
        <import package="java.util"/>
        <import package="sun.security.krb5.EncryptedData"/>
        <import package="sun.security.krb5.KrbCryptoException"/>
        <import package="sun.security.krb5.Confounder"/>
        <import package="sun.security.krb5.internal.crypto.KeyUsage"/>
        <class name="ArcFourCrypto" line="37">
            <extends class="DkCrypto"/>
            <comment line="73">
                String2Key(Password)
                 K = MD4(UNICODE(password))                
            </comment>
            <comment line="462">
                get the salt using key usage                
            </comment>
            <comment line="473">
                Key usage translation for MS                
            </comment>
            <javadoc line="37">
                Support for ArcFour in Kerberos
                  as defined in RFC 4757.
                  http://www.ietf.org/rfc/rfc4757.txt                
                <author>
                    Seema Malkani                    
                </author>
            </javadoc>
            <declaration name="debug" type="boolean" line="47"/>
            <declaration name="confounderSize" type="int" line="49"/>
            <declaration name="ZERO_IV" type="byte[]" line="50"/>
            <declaration name="hashSize" type="int" line="51"/>
            <declaration name="keyLength" type="int" line="52"/>
            <method name="ArcFourCrypto" type="constructor" line="54">
                <params>
                    <param name="length" type="int"/>
                </params>
            </method>
            <method name="getKeySeedLength" type="int" line="58">
                <comment line="59">
                    bits; RC4 key material                    
                </comment>
            </method>
            <method name="randomToKey" type="byte[]" line="62">
                <params>
                    <param name="in" type="byte[]"/>
                </params>
                <comment line="63">
                    simple identity operation                    
                </comment>
            </method>
            <method name="stringToKey" type="byte[]" line="68">
                <params>
                    <param name="passwd" type="char[]"/>
                </params>
            </method>
            <method name="stringToKey" type="byte[]" line="77">
                <params>
                    <param name="secret" type="char[]"/>
                    <param name="opaque" type="byte[]"/>
                </params>
                <comment line="86">
                    convert ascii to unicode                    
                </comment>
                <comment line="89">
                    provider for MD4                    
                </comment>
                <scope line="79"/>
                <declaration name="passwd" type="byte[]" line="83"/>
                <declaration name="digest" type="byte[]" line="84"/>
                <scope line="85">
                    <declaration name="md" type="MessageDigest" line="90"/>
                </scope>
                <scope line="93"/>
                <scope line="95">
                    <scope line="96"/>
                </scope>
            </method>
            <method name="getCipher" type="Cipher" line="105">
                <params>
                    <param name="key" type="byte[]"/>
                    <param name="ivec" type="byte[]"/>
                    <param name="mode" type="int"/>
                </params>
                <comment line="107">
                    IV                    
                </comment>
                <scope line="108"/>
                <declaration name="secretKey" type="SecretKeySpec" line="111"/>
                <declaration name="cipher" type="Cipher" line="112"/>
                <declaration name="encIv" type="IvParameterSpec" line="113"/>
            </method>
            <method name="getChecksumLength" type="int" line="118">
                <comment line="119">
                    bytes                    
                </comment>
            </method>
            <javadoc line="122">
                Get the HMAC-MD5                
            </javadoc>
            <method name="getHmac" type="byte[]" line="126">
                <params>
                    <param name="key" type="byte[]"/>
                    <param name="msg" type="byte[]"/>
                </params>
                <comment line="132">
                    generate hash                    
                </comment>
                <declaration name="keyKi" type="SecretKey" line="128"/>
                <declaration name="m" type="Mac" line="129"/>
                <declaration name="hash" type="byte[]" line="133"/>
            </method>
            <javadoc line="137">
                Calculate the checksum                
            </javadoc>
            <method name="calculateChecksum" type="byte[]" line="141">
                <params>
                    <param name="baseKey" type="byte[]"/>
                    <param name="usage" type="int"/>
                    <param name="input" type="byte[]"/>
                    <param name="start" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <comment line="154">
                    Derive signing key from session key                    
                </comment>
                <comment line="157">
                    need to append end-of-string 00                    
                </comment>
                <comment line="168">
                    get the salt using key usage                    
                </comment>
                <comment line="171">
                    Generate checksum of message                    
                </comment>
                <comment line="185">
                    Generate checksum                    
                </comment>
                <scope line="143"/>
                <scope line="148"/>
                <declaration name="Ksign" type="byte[]" line="153"/>
                <scope line="155">
                    <declaration name="ss" type="byte[]" line="156"/>
                    <declaration name="new_ss" type="byte[]" line="158"/>
                </scope>
                <scope line="161">
                    <declaration name="gse" type="GeneralSecurityException" line="162"/>
                </scope>
                <declaration name="salt" type="byte[]" line="169"/>
                <declaration name="messageDigest" type="MessageDigest" line="172"/>
                <scope line="173"/>
                <scope line="175">
                    <declaration name="gse" type="GeneralSecurityException" line="176"/>
                </scope>
                <declaration name="md5tmp" type="byte[]" line="183"/>
                <declaration name="hmac" type="byte[]" line="186"/>
                <scope line="187"/>
                <scope line="190"/>
                <scope line="192">
                    <declaration name="buf" type="byte[]" line="193"/>
                </scope>
                <scope line="196"/>
            </method>
            <javadoc line="202">
                Performs encryption of Sequence Number using derived key.                
            </javadoc>
            <method name="encryptSeq" type="byte[]" line="207">
                <params>
                    <param name="baseKey" type="byte[]"/>
                    <param name="usage" type="int"/>
                    <param name="checksum" type="byte[]"/>
                    <param name="plaintext" type="byte[]"/>
                    <param name="start" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <comment line="213">
                    derive encryption for sequence number                    
                </comment>
                <comment line="217">
                    derive new encryption key salted with sequence number                    
                </comment>
                <scope line="209"/>
                <declaration name="salt" type="byte[]" line="214"/>
                <declaration name="kSeq" type="byte[]" line="215"/>
                <declaration name="cipher" type="Cipher" line="220"/>
                <declaration name="secretKey" type="SecretKeySpec" line="221"/>
                <declaration name="output" type="byte[]" line="223"/>
            </method>
            <javadoc line="228">
                Performs decryption of Sequence Number using derived key.                
            </javadoc>
            <method name="decryptSeq" type="byte[]" line="233">
                <params>
                    <param name="baseKey" type="byte[]"/>
                    <param name="usage" type="int"/>
                    <param name="checksum" type="byte[]"/>
                    <param name="ciphertext" type="byte[]"/>
                    <param name="start" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <comment line="240">
                    derive decryption for sequence number                    
                </comment>
                <comment line="244">
                    derive new encryption key salted with sequence number                    
                </comment>
                <scope line="235"/>
                <declaration name="salt" type="byte[]" line="241"/>
                <declaration name="kSeq" type="byte[]" line="242"/>
                <declaration name="cipher" type="Cipher" line="247"/>
                <declaration name="secretKey" type="SecretKeySpec" line="248"/>
                <declaration name="output" type="byte[]" line="250"/>
            </method>
            <javadoc line="255">
                Performs encryption using derived key; adds confounder.                
            </javadoc>
            <method name="encrypt" type="byte[]" line="260">
                <params>
                    <param name="baseKey" type="byte[]"/>
                    <param name="usage" type="int"/>
                    <param name="ivec" type="byte[]"/>
                    <param name="new_ivec" type="byte[]"/>
                    <param name="plaintext" type="byte[]"/>
                    <param name="start" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <comment line="271">
                    get the confounder                    
                </comment>
                <comment line="274">
                    add confounder to the plaintext for encryption                    
                </comment>
                <comment line="281">
                                        
                </comment>
                <comment line="285">
                    get the salt using key usage                    
                </comment>
                <comment line="288">
                    compute K2 using K1                    
                </comment>
                <comment line="291">
                    generate checksum using K2                    
                </comment>
                <comment line="294">
                    compute K3 using K2 and checksum                    
                </comment>
                <comment line="302">
                    encryptedData + HMAC                    
                </comment>
                <scope line="262"/>
                <scope line="267"/>
                <declaration name="confounder" type="byte[]" line="272"/>
                <declaration name="plainSize" type="int" line="275"/>
                <declaration name="toBeEncrypted" type="byte[]" line="276"/>
                <declaration name="k1" type="byte[]" line="282"/>
                <declaration name="salt" type="byte[]" line="286"/>
                <declaration name="k2" type="byte[]" line="289"/>
                <declaration name="checksum" type="byte[]" line="292"/>
                <declaration name="k3" type="byte[]" line="295"/>
                <declaration name="cipher" type="Cipher" line="297"/>
                <declaration name="secretKey" type="SecretKeySpec" line="298"/>
                <declaration name="output" type="byte[]" line="300"/>
                <declaration name="result" type="byte[]" line="303"/>
            </method>
            <javadoc line="310">
                Performs encryption using derived key; does not add confounder.                
            </javadoc>
            <method name="encryptRaw" type="byte[]" line="315">
                <params>
                    <param name="baseKey" type="byte[]"/>
                    <param name="usage" type="int"/>
                    <param name="seqNum" type="byte[]"/>
                    <param name="plaintext" type="byte[]"/>
                    <param name="start" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <comment line="326">
                    Derive encryption key for data                    
                </comment>
                <comment line="327">
                    Key derivation salt = 0                    
                </comment>
                <comment line="335">
                    Note: When using this RC4 based encryption type, the sequence number                    
                </comment>
                <comment line="336">
                    is always sent in big-endian rather than little-endian order.                    
                </comment>
                <comment line="338">
                    new encryption key salted with sequence number                    
                </comment>
                <scope line="317"/>
                <scope line="322"/>
                <declaration name="klocal" type="byte[]" line="328"/>
                <scope line="329"/>
                <declaration name="salt" type="byte[]" line="332"/>
                <declaration name="kcrypt" type="byte[]" line="333"/>
                <declaration name="cipher" type="Cipher" line="341"/>
                <declaration name="secretKey" type="SecretKeySpec" line="342"/>
                <declaration name="output" type="byte[]" line="344"/>
            </method>
            <javadoc line="349">
                @param baseKey key from which keys are to be derived using usage                
                <param>
                    ciphertext  E(Ke, conf | plaintext | padding, ivec) | H1[1..h]                    
                </param>
            </javadoc>
            <method name="decrypt" type="byte[]" line="355">
                <params>
                    <param name="baseKey" type="byte[]"/>
                    <param name="usage" type="int"/>
                    <param name="ivec" type="byte[]"/>
                    <param name="ciphertext" type="byte[]"/>
                    <param name="start" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <comment line="365">
                    compute K1                    
                </comment>
                <comment line="369">
                    get the salt using key usage                    
                </comment>
                <comment line="372">
                    compute K2 using K1                    
                </comment>
                <comment line="375">
                    compute K3 using K2 and checksum                    
                </comment>
                <comment line="380">
                    Decrypt [confounder | plaintext ] (without checksum)                    
                </comment>
                <comment line="387">
                    Verify checksum                    
                </comment>
                <comment line="411">
                    Get rid of confounder                    
                </comment>
                <comment line="412">
                    [ confounder | plaintext ]                    
                </comment>
                <scope line="357"/>
                <scope line="361"/>
                <declaration name="k1" type="byte[]" line="366"/>
                <declaration name="salt" type="byte[]" line="370"/>
                <declaration name="k2" type="byte[]" line="373"/>
                <declaration name="checksum" type="byte[]" line="376"/>
                <declaration name="k3" type="byte[]" line="378"/>
                <declaration name="cipher" type="Cipher" line="381"/>
                <declaration name="secretKey" type="SecretKeySpec" line="382"/>
                <declaration name="plaintext" type="byte[]" line="384"/>
                <declaration name="calculatedHmac" type="byte[]" line="388"/>
                <scope line="389"/>
                <declaration name="cksumFailed" type="boolean" line="395"/>
                <scope line="396">
                    <scope line="397">
                        <scope line="398">
                            <scope line="400"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="407"/>
                <declaration name="output" type="byte[]" line="413"/>
            </method>
            <javadoc line="419">
                Decrypts data using specified key and initial vector.                
                <param>
                    baseKey encryption key to use                    
                </param>
                <param>
                    ciphertext  encrypted data to be decrypted                    
                </param>
                <param>
                    usage ignored                    
                </param>
            </javadoc>
            <method name="decryptRaw" type="byte[]" line="427">
                <params>
                    <param name="baseKey" type="byte[]"/>
                    <param name="usage" type="int"/>
                    <param name="ivec" type="byte[]"/>
                    <param name="ciphertext" type="byte[]"/>
                    <param name="start" type="int"/>
                    <param name="len" type="int"/>
                    <param name="seqNum" type="byte[]"/>
                </params>
                <comment line="437">
                    Derive encryption key for data                    
                </comment>
                <comment line="438">
                    Key derivation salt = 0                    
                </comment>
                <comment line="446">
                    need only first 4 bytes of sequence number                    
                </comment>
                <comment line="450">
                    new encryption key salted with sequence number                    
                </comment>
                <scope line="429"/>
                <scope line="433"/>
                <declaration name="klocal" type="byte[]" line="439"/>
                <scope line="440"/>
                <declaration name="salt" type="byte[]" line="443"/>
                <declaration name="kcrypt" type="byte[]" line="444"/>
                <declaration name="sequenceNum" type="byte[]" line="447"/>
                <declaration name="cipher" type="Cipher" line="453"/>
                <declaration name="secretKey" type="SecretKeySpec" line="454"/>
                <declaration name="output" type="byte[]" line="456"/>
            </method>
            <method name="getSalt" type="byte[]" line="462">
                <params>
                    <param name="usage" type="int"/>
                </params>
                <declaration name="ms_usage" type="int" line="463"/>
                <declaration name="salt" type="byte[]" line="464"/>
            </method>
            <method name="arcfour_translate_usage" type="int" line="473">
                <params>
                    <param name="usage" type="int"/>
                </params>
            </method>
        </class>
    </source>