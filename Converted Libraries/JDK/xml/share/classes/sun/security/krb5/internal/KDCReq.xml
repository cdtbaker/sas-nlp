<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal">
        <import package="sun.security.krb5"/>
        <import package="java.util.Vector"/>
        <import package="sun.security.util"/>
        <import package="java.io.IOException"/>
        <import package="java.math.BigInteger"/>
        <class name="KDCReq" line="7">
            <javadoc line="7">
                Implements the ASN.1 KRB_KDC_REQ type.
                  &lt;xmp&gt;
                  KDC-REQ              ::= SEQUENCE {
                  -- NOTE: first tag is [1], not [0]
                  pvno            [1] INTEGER (5) ,
                  msg-type        [2] INTEGER (10 -- AS -- | 12 -- TGS --),
                  padata          [3] SEQUENCE OF PA-DATA OPTIONAL
                  -- NOTE: not empty --,
                  req-body        [4] KDC-REQ-BODY
                  }
                  &lt;/xmp&gt;
                  &lt;p&gt;
                  This definition reflects the Network Working Group RFC 4120
                  specification available at
                  &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;
                  http://www.ietf.org/rfc/rfc4120.txt&lt;/a&gt;.                
            </javadoc>
            <declaration name="reqBody" type="KDCReqBody" line="26"/>
            <declaration name="pvno" type="int" line="27"/>
            <declaration name="msgType" type="int" line="28"/>
            <declaration name="pAData" type="PAData[]" line="29"/>
            <method name="KDCReq" type="constructor" line="30">
                <params>
                    <param name="new_pAData" type="PAData[]"/>
                    <param name="new_reqBody" type="KDCReqBody"/>
                    <param name="req_type" type="int"/>
                </params>
                <scope line="33">
                    <scope line="35">
                        <scope line="36"/>
                        <scope line="39"/>
                    </scope>
                </scope>
            </method>
            <method name="KDCReq" type="constructor" line="46"/>
            <method name="KDCReq" type="constructor" line="48">
                <params>
                    <param name="data" type="byte[]"/>
                    <param name="req_type" type="int"/>
                </params>
            </method>
            <javadoc line="51">
                Creates an KDCReq object from a DerValue object and asn1 type.                
                <param>
                    der a DER value of an KDCReq object.                    
                </param>
                <param>
                    req_type a encoded asn1 type value.                    
                </param>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
                <exceptoin>
                    KrbErrException                    
                </exceptoin>
            </javadoc>
            <method name="KDCReq" type="constructor" line="59">
                <params>
                    <param name="der" type="DerValue"/>
                    <param name="req_type" type="int"/>
                </params>
            </method>
            <javadoc line="62">
                Initializes a KDCReq object from a DerValue.  The DER encoding
                  must be in the format specified by the KRB_KDC_REQ ASN.1 notation.                
                <param>
                    encoding a DER-encoded KDCReq object.                    
                </param>
                <param>
                    req_type an int indicating whether it's KRB_AS_REQ or KRB_TGS_REQ type                    
                </param>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
                <exception>
                    KrbException if an error occurs while constructing a Realm object,
                      or a Krb object from DER-encoded data.                    
                </exception>
            </javadoc>
            <method name="init" type="void" line="72">
                <params>
                    <param name="encoding" type="DerValue"/>
                    <param name="req_type" type="int"/>
                </params>
                <declaration name="der" type="DerValue" line="73"/>
                <declaration name="bint" type="BigInteger" line="74"/>
                <scope line="75"/>
                <scope line="79"/>
                <scope line="83">
                    <scope line="86"/>
                </scope>
                <scope line="90"/>
                <scope line="94">
                    <scope line="97"/>
                </scope>
                <scope line="101"/>
                <scope line="104">
                    <declaration name="subsubDer" type="DerValue" line="106"/>
                    <scope line="107"/>
                    <declaration name="v" type="Vector&lt;PAData&gt;" line="110"/>
                    <scope line="111"/>
                    <scope line="114"/>
                </scope>
                <scope line="119"/>
                <scope line="123">
                    <declaration name="subsubDer" type="DerValue" line="124"/>
                </scope>
                <scope line="127"/>
            </method>
            <javadoc line="131">
                Encodes this object to a byte array.                
                <return>
                    an byte array of encoded data.                    
                </return>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
            </javadoc>
            <method name="asn1Encode" type="byte[]" line="137">
                <declaration name="temp" type="DerOutputStream" line="138"/>
                <scope line="146">
                    <scope line="148"/>
                </scope>
            </method>
            <method name="asn1EncodeReqBody" type="byte[]" line="162"/>
        </class>
    </source>