<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal">
        <import package="sun.security.krb5"/>
        <import package="sun.security.util"/>
        <import package="java.util.Vector"/>
        <import package="java.io.IOException"/>
        <import package="java.math.BigInteger"/>
        <class name="KDCReqBody" line="39">
            <comment line="75">
                optional in ASReq only                
            </comment>
            <comment line="77">
                optional                
            </comment>
            <comment line="78">
                optional                
            </comment>
            <comment line="80">
                optional                
            </comment>
            <comment line="81">
                optional                
            </comment>
            <comment line="84">
                a sequence; not optional                
            </comment>
            <comment line="85">
                optional                
            </comment>
            <comment line="86">
                optional                
            </comment>
            <javadoc line="39">
                Implements the ASN.1 KDC-REQ-BODY type.
                  &lt;xmp&gt;
                  KDC-REQ-BODY ::= SEQUENCE {
                  kdc-options             [0] KDCOptions,
                  cname                   [1] PrincipalName OPTIONAL
                  -- Used only in AS-REQ --,
                  realm                   [2] Realm
                  -- Server&apos;s realm
                  -- Also client&apos;s in AS-REQ --,
                  sname                   [3] PrincipalName OPTIONAL,
                  from                    [4] KerberosTime OPTIONAL,
                  till                    [5] KerberosTime,
                  rtime                   [6] KerberosTime OPTIONAL,
                  nonce                   [7] UInt32,
                  etype                   [8] SEQUENCE OF Int32 -- EncryptionType
                  -- in preference order --,
                  addresses               [9] HostAddresses OPTIONAL,
                  enc-authorization-data  [10] EncryptedData OPTIONAL
                  -- AuthorizationData --,
                  additional-tickets      [11] SEQUENCE OF Ticket OPTIONAL
                  -- NOTE: not empty
                  }
                  &lt;/xmp&gt;
                  &lt;p&gt;
                  This definition reflects the Network Working Group RFC 4120
                  specification available at
                  &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;
                  http://www.ietf.org/rfc/rfc4120.txt&lt;/a&gt;.                
            </javadoc>
            <declaration name="kdcOptions" type="KDCOptions" line="73"/>
            <declaration name="cname" type="PrincipalName" line="74"/>
            <declaration name="crealm" type="Realm" line="75"/>
            <declaration name="sname" type="PrincipalName" line="76"/>
            <declaration name="from" type="KerberosTime" line="77"/>
            <declaration name="till" type="KerberosTime" line="78"/>
            <declaration name="rtime" type="KerberosTime" line="79"/>
            <declaration name="addresses" type="HostAddresses" line="80"/>
            <declaration name="nonce" type="int" line="82"/>
            <declaration name="eType" type="int[]" line="83"/>
            <declaration name="encAuthorizationData" type="EncryptedData" line="84"/>
            <declaration name="additionalTickets" type="Ticket[]" line="85"/>
            <method name="KDCReqBody" type="constructor" line="100">
                <params>
                    <param name="new_kdcOptions" type="KDCOptions"/>
                    <param name="new_cname" type="PrincipalName"/>
                    <param name="new_crealm" type="Realm"/>
                    <param name="new_sname" type="PrincipalName"/>
                    <param name="new_from" type="KerberosTime"/>
                    <param name="new_till" type="KerberosTime"/>
                    <param name="new_rtime" type="KerberosTime"/>
                    <param name="new_nonce" type="int"/>
                    <param name="new_eType" type="int[]"/>
                    <param name="new_addresses" type="HostAddresses"/>
                    <param name="new_encAuthorizationData" type="EncryptedData"/>
                    <param name="new_additionalTickets" type="Ticket[]"/>
                </params>
                <comment line="90">
                    optional in ASReq only                    
                </comment>
                <comment line="92">
                    optional                    
                </comment>
                <comment line="93">
                    optional                    
                </comment>
                <comment line="95">
                    optional                    
                </comment>
                <comment line="97">
                    a sequence; not optional                    
                </comment>
                <comment line="98">
                    optional                    
                </comment>
                <comment line="99">
                    optional                    
                </comment>
                <comment line="100">
                    optional                    
                </comment>
                <scope line="109"/>
                <scope line="114">
                    <scope line="116">
                        <scope line="117"/>
                        <scope line="119"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="126">
                Constructs a KDCReqBody object.                
                <param>
                    encoding a DER-encoded data.                    
                </param>
                <param>
                    msgType an int indicating whether it's KRB_AS_REQ or KRB_TGS_REQ type.                    
                </param>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
                <exception>
                    RealmException if an error occurs while constructing a Realm object from the encoded data.                    
                </exception>
            </javadoc>
            <method name="KDCReqBody" type="constructor" line="136">
                <params>
                    <param name="encoding" type="DerValue"/>
                    <param name="msgType" type="int"/>
                </params>
                <declaration name="der" type="DerValue" line="137"/>
                <scope line="141"/>
                <scope line="146"/>
                <scope line="155"/>
                <scope line="157"/>
                <declaration name="v" type="Vector&lt;Integer&gt;" line="161"/>
                <scope line="162">
                    <scope line="165">
                        <scope line="166"/>
                        <scope line="170"/>
                    </scope>
                    <scope line="173"/>
                </scope>
                <scope line="176"/>
                <scope line="179"/>
                <scope line="182"/>
                <scope line="185">
                    <declaration name="tempTickets" type="Vector&lt;Ticket&gt;" line="186"/>
                    <scope line="188">
                        <scope line="190">
                            <scope line="191"/>
                        </scope>
                        <scope line="194"/>
                        <scope line="197"/>
                    </scope>
                    <scope line="201"/>
                </scope>
                <scope line="205"/>
            </method>
            <javadoc line="210">
                Encodes this object to an OutputStream.                
                <return>
                    an byte array of encoded data.                    
                </return>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
            </javadoc>
            <method name="asn1Encode" type="byte[]" line="218">
                <params>
                    <param name="msgType" type="int"/>
                </params>
                <comment line="241">
                    revisit, if empty eType sequences are allowed                    
                </comment>
                <declaration name="v" type="Vector&lt;DerValue&gt;" line="219"/>
                <scope line="221">
                    <scope line="222"/>
                </scope>
                <scope line="227"/>
                <scope line="230"/>
                <scope line="234"/>
                <declaration name="temp" type="DerOutputStream" line="237"/>
                <scope line="242"/>
                <declaration name="eTypetemp" type="DerOutputStream" line="245"/>
                <scope line="248"/>
                <scope line="251"/>
                <scope line="254">
                    <scope line="256"/>
                    <declaration name="ticketsTemp" type="DerOutputStream" line="259"/>
                </scope>
                <declaration name="der" type="DerValue" line="263"/>
            </method>
            <method name="getNonce" type="int" line="270"/>
        </class>
    </source>