<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal">
        <import package="sun.security.krb5"/>
        <import package="sun.security.util"/>
        <import package="java.util.Vector"/>
        <import package="java.io.IOException"/>
        <import package="java.math.BigInteger"/>
        <class name="KDCReqBody" line="7">
            <javadoc line="7">
                Implements the ASN.1 KDC-REQ-BODY type.
                  &lt;xmp&gt;
                  KDC-REQ-BODY ::= SEQUENCE {
                  kdc-options             [0] KDCOptions,
                  cname                   [1] PrincipalName OPTIONAL
                  -- Used only in AS-REQ --,
                  realm                   [2] Realm
                  -- Server&apos;s realm
                  -- Also client&apos;s in AS-REQ --,
                  sname                   [3] PrincipalName OPTIONAL,
                  from                    [4] KerberosTime OPTIONAL,
                  till                    [5] KerberosTime,
                  rtime                   [6] KerberosTime OPTIONAL,
                  nonce                   [7] UInt32,
                  etype                   [8] SEQUENCE OF Int32 -- EncryptionType
                  -- in preference order --,
                  addresses               [9] HostAddresses OPTIONAL,
                  enc-authorization-data  [10] EncryptedData OPTIONAL
                  -- AuthorizationData --,
                  additional-tickets      [11] SEQUENCE OF Ticket OPTIONAL
                  -- NOTE: not empty
                  }
                  &lt;/xmp&gt;
                  &lt;p&gt;
                  This definition reflects the Network Working Group RFC 4120
                  specification available at
                  &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;
                  http://www.ietf.org/rfc/rfc4120.txt&lt;/a&gt;.                
            </javadoc>
            <declaration name="kdcOptions" type="KDCOptions" line="38"/>
            <declaration name="cname" type="PrincipalName" line="39"/>
            <declaration name="crealm" type="Realm" line="40"/>
            <declaration name="sname" type="PrincipalName" line="41"/>
            <declaration name="from" type="KerberosTime" line="42"/>
            <declaration name="till" type="KerberosTime" line="43"/>
            <declaration name="rtime" type="KerberosTime" line="44"/>
            <declaration name="addresses" type="HostAddresses" line="45"/>
            <declaration name="nonce" type="int" line="46"/>
            <declaration name="eType" type="int[]" line="47"/>
            <declaration name="encAuthorizationData" type="EncryptedData" line="48"/>
            <declaration name="additionalTickets" type="Ticket[]" line="49"/>
            <method name="KDCReqBody" type="constructor" line="50">
                <params>
                    <param name="new_kdcOptions" type="KDCOptions"/>
                    <param name="new_cname" type="PrincipalName"/>
                    <param name="new_crealm" type="Realm"/>
                    <param name="new_sname" type="PrincipalName"/>
                    <param name="new_from" type="KerberosTime"/>
                    <param name="new_till" type="KerberosTime"/>
                    <param name="new_rtime" type="KerberosTime"/>
                    <param name="new_nonce" type="int"/>
                    <param name="new_eType" type="int[]"/>
                    <param name="new_addresses" type="HostAddresses"/>
                    <param name="new_encAuthorizationData" type="EncryptedData"/>
                    <param name="new_additionalTickets" type="Ticket[]"/>
                </params>
                <scope line="59"/>
                <scope line="64">
                    <scope line="66">
                        <scope line="67"/>
                        <scope line="70"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="76">
                Constructs a KDCReqBody object.                
                <param>
                    encoding a DER-encoded data.                    
                </param>
                <param>
                    msgType an int indicating whether it&apos;s KRB_AS_REQ or KRB_TGS_REQ type.                    
                </param>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
                <exception>
                    RealmException if an error occurs while constructing a Realm object from the encoded data.                    
                </exception>
            </javadoc>
            <method name="KDCReqBody" type="constructor" line="84">
                <params>
                    <param name="encoding" type="DerValue"/>
                    <param name="msgType" type="int"/>
                </params>
                <declaration name="der" type="DerValue" line="85"/>
                <scope line="89"/>
                <scope line="94"/>
                <scope line="103"/>
                <scope line="106"/>
                <declaration name="v" type="Vector&amp;lt;Integer&amp;gt;" line="110"/>
                <scope line="111">
                    <scope line="113">
                        <scope line="114"/>
                        <scope line="118"/>
                    </scope>
                    <scope line="122"/>
                </scope>
                <scope line="126"/>
                <scope line="129"/>
                <scope line="132"/>
                <scope line="135">
                    <declaration name="tempTickets" type="Vector&amp;lt;Ticket&amp;gt;" line="136"/>
                    <scope line="138">
                        <scope line="140">
                            <scope line="141"/>
                        </scope>
                        <scope line="145"/>
                        <scope line="148"/>
                    </scope>
                    <scope line="153"/>
                </scope>
                <scope line="157"/>
            </method>
            <javadoc line="161">
                Encodes this object to an OutputStream.                
                <return>
                    an byte array of encoded data.                    
                </return>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
            </javadoc>
            <method name="asn1Encode" type="byte[]" line="167">
                <params>
                    <param name="msgType" type="int"/>
                </params>
                <declaration name="v" type="Vector&amp;lt;DerValue&amp;gt;" line="168"/>
                <scope line="170">
                    <scope line="171"/>
                </scope>
                <scope line="176"/>
                <scope line="179"/>
                <scope line="183"/>
                <declaration name="temp" type="DerOutputStream" line="186"/>
                <scope line="190"/>
                <declaration name="eTypetemp" type="DerOutputStream" line="193"/>
                <scope line="196"/>
                <scope line="199"/>
                <scope line="202">
                    <scope line="204"/>
                    <declaration name="ticketsTemp" type="DerOutputStream" line="207"/>
                </scope>
                <declaration name="der" type="DerValue" line="211"/>
            </method>
            <method name="getNonce" type="int" line="217"/>
        </class>
    </source>