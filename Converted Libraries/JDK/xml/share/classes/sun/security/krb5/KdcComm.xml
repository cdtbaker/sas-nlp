<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5">
        <import package="java.security.PrivilegedAction"/>
        <import package="java.security.Security"/>
        <import package="java.util.Locale"/>
        <import package="sun.security.krb5.internal.Krb5"/>
        <import package="sun.security.krb5.internal.NetClient"/>
        <import package="java.io.IOException"/>
        <import package="java.net.SocketTimeoutException"/>
        <import package="java.util.StringTokenizer"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedExceptionAction"/>
        <import package="java.security.PrivilegedActionException"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="java.util.Set"/>
        <import package="java.util.HashSet"/>
        <import package="sun.security.krb5.internal.KRBError"/>
        <class name="KdcComm" line="51">
            <comment line="58">
                The following settings can be configured in [libdefaults]
                 section of krb5.conf, which are global for all realms. Each of
                 them can also be defined in a realm, which overrides value here.                
            </comment>
            <comment line="253">
                send the AS Request to the specified KDC                
            </comment>
            <javadoc line="51">
                KDC-REQ/KDC-REP communication. No more base class for KrbAsReq and
                  KrbTgsReq. This class is now communication only.                
            </javadoc>
            <declaration name="defaultKdcRetryLimit" type="int" line="61"/>
            <javadoc line="61">
                max retry time for a single KDC, default Krb5.KDC_RETRY_LIMIT (3)                
            </javadoc>
            <declaration name="defaultKdcTimeout" type="int" line="65"/>
            <javadoc line="65">
                timeout requesting a ticket from KDC, in millisec, default 30 sec                
            </javadoc>
            <declaration name="defaultUdpPrefLimit" type="int" line="69"/>
            <javadoc line="69">
                max UDP packet size, default unlimited (-1)                
            </javadoc>
            <declaration name="DEBUG" type="boolean" line="74"/>
            <declaration name="BAD_POLICY_KEY" type="String" line="76"/>
            <javadoc line="78">
                What to do when a KDC is unavailable, specified in the
                  java.security file with key krb5.kdc.bad.policy.
                  Possible values can be TRY_LAST or TRY_LESS. Reloaded when refreshed.                
            </javadoc>
            <declaration name="tryLessMaxRetries" type="int" line="86"/>
            <declaration name="tryLessTimeout" type="int" line="87"/>
            <declaration name="badPolicy" type="BpType" line="89"/>
            <scope line="91"/>
            <javadoc line="95">
                Read global settings                
            </javadoc>
            <method name="initStatic" type="void" line="98">
                <comment line="117">
                    Assign here in case of exception at params[1]                    
                </comment>
                <comment line="120">
                    Ignored. Please note that tryLess is recognized and
                     used, parameters using default values                    
                </comment>
                <comment line="153">
                    ignore any exceptions; use default values                    
                </comment>
                <comment line="160">
                    30 seconds                    
                </comment>
                <anonymous_class line="100">
                    <method name="run" type="String" line="101"/>
                </anonymous_class>
                <declaration name="value" type="String" line="99"/>
                <scope line="105">
                    <declaration name="ss" type="String[]" line="107"/>
                    <scope line="108">
                        <scope line="109">
                            <declaration name="params" type="String[]" line="110"/>
                            <scope line="111">
                                <declaration name="tmp0" type="int" line="112"/>
                                <scope line="113"/>
                            </scope>
                            <scope line="118">
                                <scope line="121"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="129"/>
                    <scope line="131"/>
                </scope>
                <scope line="134"/>
                <declaration name="timeout" type="int" line="139"/>
                <declaration name="max_retries" type="int" line="140"/>
                <declaration name="udf_pref_limit" type="int" line="141"/>
                <scope line="143">
                    <declaration name="cfg" type="Config" line="144"/>
                    <declaration name="temp" type="String" line="145"/>
                </scope>
                <scope line="151">
                    <scope line="153"/>
                </scope>
            </method>
            <declaration name="realm" type="String" line="167"/>
            <javadoc line="167">
                The instance fields                
            </javadoc>
            <method name="KdcComm" type="constructor" line="172">
                <params>
                    <param name="realm" type="String"/>
                </params>
                <scope line="173">
                    <scope line="175"/>
                </scope>
            </method>
            <method name="send" type="byte[]" line="184">
                <params>
                    <param name="obuf" type="byte[]"/>
                </params>
                <declaration name="udpPrefLimit" type="int" line="185"/>
                <declaration name="useTCP" type="boolean" line="188"/>
            </method>
            <method name="send" type="byte[]" line="195">
                <params>
                    <param name="obuf" type="byte[]"/>
                    <param name="useTCP" type="boolean"/>
                </params>
                <comment line="215">
                    may include the port number also                    
                </comment>
                <comment line="225">
                    OK                    
                </comment>
                <declaration name="savedException" type="Exception" line="199"/>
                <declaration name="cfg" type="Config" line="200"/>
                <scope line="202">
                    <scope line="204"/>
                </scope>
                <declaration name="kdcList" type="String" line="210"/>
                <scope line="211"/>
                <declaration name="tempKdc" type="String" line="214"/>
                <declaration name="ibuf" type="byte[]" line="215"/>
                <scope line="216">
                    <scope line="218">
                        <declaration name="ke" type="KRBError" line="220"/>
                        <scope line="221"/>
                        <scope line="223"/>
                        <scope line="227"/>
                    </scope>
                    <scope line="232">
                        <scope line="233"/>
                    </scope>
                </scope>
                <scope line="242">
                    <scope line="243"/>
                    <scope line="245"/>
                </scope>
            </method>
            <method name="send" type="byte[]" line="255">
                <params>
                    <param name="obuf" type="byte[]"/>
                    <param name="tempKdc" type="String"/>
                    <param name="useTCP" type="boolean"/>
                </params>
                <comment line="269">
                    less retries                    
                </comment>
                <comment line="272">
                    less time                    
                </comment>
                <comment line="279">
                    Explicit IPv6 in []                    
                </comment>
                <comment line="285">
                    with port number                    
                </comment>
                <comment line="293">
                    Hostname or IPv4 host only                    
                </comment>
                <comment line="297">
                    &gt;=2 &quot;:&quot;, IPv6 with no port                    
                </comment>
                <comment line="299">
                    1 &quot;:&quot;, hostname or IPv4 with port                    
                </comment>
                <declaration name="port" type="int" line="260"/>
                <declaration name="retries" type="int" line="261"/>
                <declaration name="timeout" type="int" line="263"/>
                <scope line="266">
                    <scope line="267"/>
                    <scope line="270"/>
                </scope>
                <declaration name="kdc" type="String" line="275"/>
                <declaration name="portStr" type="String" line="276"/>
                <scope line="278">
                    <declaration name="pos" type="int" line="279"/>
                    <scope line="280"/>
                    <scope line="284">
                        <scope line="285"/>
                    </scope>
                </scope>
                <scope line="290">
                    <declaration name="colon" type="int" line="291"/>
                    <scope line="292"/>
                    <scope line="294">
                        <declaration name="nextColon" type="int" line="295"/>
                        <scope line="296"/>
                        <scope line="298"/>
                    </scope>
                </scope>
                <scope line="304">
                    <declaration name="tempPort" type="int" line="305"/>
                </scope>
                <scope line="310"/>
                <declaration name="kdcCommunication" type="KdcCommunication" line="320"/>
                <scope line="322">
                    <declaration name="ibuf" type="byte[]" line="323"/>
                    <scope line="324"/>
                </scope>
                <scope line="329">
                    <declaration name="wrappedException" type="Exception" line="330"/>
                    <scope line="331"/>
                    <scope line="333"/>
                </scope>
            </method>
            <class name="KdcCommunication" line="339">
                <comment line="360">
                    The caller only casts IOException and KrbException so don&apos;t
                     add any new ones!                    
                </comment>
                <comment line="465">
                    Known bad KDCs                    
                </comment>
                <comment line="493">
                    Returns a preferred KDC list by putting the bad ones at the end                    
                </comment>
                <implements interface="PrivilegedExceptionAction">
                    <type_params>
                        <type_param name="byte[]"/>
                    </type_params>
                </implements>
                <declaration name="kdc" type="String" line="342"/>
                <declaration name="port" type="int" line="343"/>
                <declaration name="useTCP" type="boolean" line="344"/>
                <declaration name="timeout" type="int" line="345"/>
                <declaration name="retries" type="int" line="346"/>
                <declaration name="obuf" type="byte[]" line="347"/>
                <method name="KdcCommunication" type="constructor" line="350">
                    <params>
                        <param name="kdc" type="String"/>
                        <param name="port" type="int"/>
                        <param name="useTCP" type="boolean"/>
                        <param name="timeout" type="int"/>
                        <param name="retries" type="int"/>
                        <param name="obuf" type="byte[]"/>
                    </params>
                </method>
                <method name="run" type="byte[]" line="362">
                    <comment line="380">
                        Send the data to the kdc.                        
                    </comment>
                    <comment line="384">
                        And get a response.                        
                    </comment>
                    <declaration name="ibuf" type="byte[]" line="364"/>
                    <scope line="366">
                        <declaration name="proto" type="String" line="367"/>
                        <declaration name="kdcClient" type="NetClient" line="368"/>
                        <scope line="370"/>
                        <scope line="378"/>
                        <scope line="388">
                            <scope line="389"/>
                            <scope line="393"/>
                        </scope>
                        <scope line="397"/>
                    </scope>
                </method>
            </class>
            <javadoc line="405">
                Returns krb5.conf setting of {@code key} for a specfic realm,
                  which can be:
                  1. defined in the sub-stanza for the given realm inside [realms], or
                  2. defined in [libdefaults], or
                  3. defValue                
                <param>
                    realm the given realm in which the setting is requested. Returns
                      the global setting if null                    
                </param>
                <param>
                    key the key for the setting                    
                </param>
                <param>
                    defValue default value                    
                </param>
                <return>
                    a value for the key                    
                </return>
            </javadoc>
            <method name="getRealmSpecificValue" type="int" line="417">
                <params>
                    <param name="realm" type="String"/>
                    <param name="key" type="String"/>
                    <param name="defValue" type="int"/>
                </params>
                <comment line="429">
                    Ignored, defValue will be picked up                    
                </comment>
                <declaration name="v" type="int" line="418"/>
                <declaration name="temp" type="int" line="422"/>
                <scope line="423">
                    <declaration name="value" type="String" line="424"/>
                </scope>
                <scope line="427"/>
            </method>
            <method name="parsePositiveIntString" type="int" line="436">
                <params>
                    <param name="intString" type="String"/>
                </params>
                <declaration name="ret" type="int" line="440"/>
                <scope line="442"/>
                <scope line="444"/>
            </method>
            <class name="KdcAccessibility" line="454">
                <comment line="360">
                    The caller only casts IOException and KrbException so don&apos;t
                     add any new ones!                    
                </comment>
                <comment line="465">
                    Known bad KDCs                    
                </comment>
                <comment line="493">
                    Returns a preferred KDC list by putting the bad ones at the end                    
                </comment>
                <javadoc line="454">
                    Maintains a KDC accessible list. Unavailable KDCs are put into a
                      blacklist, when a KDC in the blacklist is available, it&apos;s removed
                      from there. No insertion order in the blacklist.
                      There are two methods to deal with KDCs in the blacklist. 1. Only try
                      them when there&apos;s no KDC not on the blacklist. 2. Still try them, but
                      with lesser number of retries and smaller timeout value.                    
                </javadoc>
                <declaration name="bads" type="Set&lt;String&gt;" line="465"/>
                <method name="addBad" type="void" line="467">
                    <params>
                        <param name="kdc" type="String"/>
                    </params>
                    <scope line="468"/>
                </method>
                <method name="removeBad" type="void" line="474">
                    <params>
                        <param name="kdc" type="String"/>
                    </params>
                    <scope line="475"/>
                </method>
                <method name="isBad" type="boolean" line="481">
                    <params>
                        <param name="kdc" type="String"/>
                    </params>
                </method>
                <method name="reset" type="void" line="485">
                    <scope line="486"/>
                </method>
                <method name="list" type="String[]" line="493">
                    <params>
                        <param name="kdcList" type="String"/>
                    </params>
                    <comment line="504">
                        Bad KDCs are put at last                        
                    </comment>
                    <comment line="507">
                        All KDCs are returned in their original order,
                         This include TRY_LESS and NONE                        
                    </comment>
                    <declaration name="st" type="StringTokenizer" line="494"/>
                    <declaration name="list" type="List&lt;String&gt;" line="495"/>
                    <scope line="496">
                        <declaration name="badkdcs" type="List&lt;String&gt;" line="497"/>
                        <scope line="498">
                            <declaration name="t" type="String" line="499"/>
                        </scope>
                    </scope>
                    <scope line="505">
                        <scope line="508"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>