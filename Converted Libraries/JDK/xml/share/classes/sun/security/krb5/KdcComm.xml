<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5">
        <import package="java.security.PrivilegedAction"/>
        <import package="java.security.Security"/>
        <import package="java.util.Locale"/>
        <import package="sun.security.krb5.internal.Krb5"/>
        <import package="sun.security.krb5.internal.NetClient"/>
        <import package="java.io.IOException"/>
        <import package="java.net.SocketTimeoutException"/>
        <import package="java.util.StringTokenizer"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedExceptionAction"/>
        <import package="java.security.PrivilegedActionException"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="java.util.Set"/>
        <import package="java.util.HashSet"/>
        <import package="sun.security.krb5.internal.KRBError"/>
        <class name="KdcComm" line="18">
            <javadoc line="18">
                KDC-REQ/KDC-REP communication. No more base class for KrbAsReq and
                  KrbTgsReq. This class is now communication only.                
            </javadoc>
            <declaration name="defaultKdcRetryLimit" type="int" line="23"/>
            <javadoc line="23">
                max retry time for a single KDC, default Krb5.KDC_RETRY_LIMIT (3)                
            </javadoc>
            <declaration name="defaultKdcTimeout" type="int" line="27"/>
            <javadoc line="27">
                timeout requesting a ticket from KDC, in millisec, default 30 sec                
            </javadoc>
            <declaration name="defaultUdpPrefLimit" type="int" line="31"/>
            <javadoc line="31">
                max UDP packet size, default unlimited (-1)                
            </javadoc>
            <declaration name="DEBUG" type="boolean" line="35"/>
            <declaration name="BAD_POLICY_KEY" type="String" line="36"/>
            <declaration name="BpType" type="enum" line="37"/>
            <javadoc line="37">
                What to do when a KDC is unavailable, specified in the
                  java.security file with key krb5.kdc.bad.policy.
                  Possible values can be TRY_LAST or TRY_LESS. Reloaded when refreshed.                
            </javadoc>
            <scope line="42"/>
            <declaration name="tryLessMaxRetries" type="int" line="43"/>
            <declaration name="tryLessTimeout" type="int" line="44"/>
            <declaration name="badPolicy" type="BpType" line="45"/>
            <scope line="46"/>
            <javadoc line="49">
                Read global settings                
            </javadoc>
            <method name="initStatic" type="void" line="52">
                <anonymous_class line="53">
                    <method name="run" type="String" line="54"/>
                </anonymous_class>
                <declaration name="value" type="String" line="53"/>
                <scope line="59">
                    <declaration name="ss" type="String[]" line="61"/>
                    <scope line="62">
                        <scope line="63">
                            <declaration name="params" type="String[]" line="64"/>
                            <scope line="65">
                                <declaration name="tmp0" type="int" line="66"/>
                                <scope line="67"/>
                            </scope>
                            <scope line="72">
                                <scope line="73"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="80"/>
                    <scope line="83"/>
                </scope>
                <scope line="87"/>
                <declaration name="timeout" type="int" line="90"/>
                <declaration name="max_retries" type="int" line="91"/>
                <declaration name="udf_pref_limit" type="int" line="92"/>
                <scope line="93">
                    <declaration name="cfg" type="Config" line="94"/>
                    <declaration name="temp" type="String" line="95"/>
                </scope>
                <scope line="102">
                    <scope line="103"/>
                </scope>
            </method>
            <declaration name="realm" type="String" line="112"/>
            <javadoc line="112">
                The instance fields                
            </javadoc>
            <method name="KdcComm" type="constructor" line="116">
                <params>
                    <param name="realm" type="String"/>
                </params>
                <scope line="117">
                    <scope line="119"/>
                </scope>
            </method>
            <method name="send" type="byte[]" line="125">
                <params>
                    <param name="obuf" type="byte[]"/>
                </params>
                <declaration name="udpPrefLimit" type="int" line="126"/>
                <declaration name="useTCP" type="boolean" line="127"/>
            </method>
            <method name="send" type="byte[]" line="130">
                <params>
                    <param name="obuf" type="byte[]"/>
                    <param name="useTCP" type="boolean"/>
                </params>
                <declaration name="savedException" type="Exception" line="132"/>
                <declaration name="cfg" type="Config" line="133"/>
                <scope line="134">
                    <scope line="136"/>
                </scope>
                <declaration name="kdcList" type="String" line="140"/>
                <scope line="141"/>
                <declaration name="tempKdc" type="String" line="144"/>
                <declaration name="ibuf" type="byte[]" line="145"/>
                <scope line="146">
                    <scope line="148">
                        <declaration name="ke" type="KRBError" line="150"/>
                        <scope line="151"/>
                        <scope line="154"/>
                        <scope line="156"/>
                    </scope>
                    <scope line="162">
                        <scope line="163"/>
                    </scope>
                </scope>
                <scope line="171">
                    <scope line="172"/>
                    <scope line="175"/>
                </scope>
            </method>
            <method name="send" type="byte[]" line="181">
                <params>
                    <param name="obuf" type="byte[]"/>
                    <param name="tempKdc" type="String"/>
                    <param name="useTCP" type="boolean"/>
                </params>
                <declaration name="port" type="int" line="183"/>
                <declaration name="retries" type="int" line="184"/>
                <declaration name="timeout" type="int" line="185"/>
                <scope line="186">
                    <scope line="187"/>
                    <scope line="190"/>
                </scope>
                <declaration name="kdc" type="String" line="194"/>
                <declaration name="portStr" type="String" line="195"/>
                <scope line="196">
                    <declaration name="pos" type="int" line="197"/>
                    <scope line="198"/>
                    <scope line="202">
                        <scope line="203"/>
                    </scope>
                </scope>
                <scope line="209">
                    <declaration name="colon" type="int" line="210"/>
                    <scope line="211"/>
                    <scope line="214">
                        <declaration name="nextColon" type="int" line="215"/>
                        <scope line="216"/>
                        <scope line="219"/>
                    </scope>
                </scope>
                <scope line="225">
                    <declaration name="tempPort" type="int" line="226"/>
                </scope>
                <scope line="229"/>
                <declaration name="kdcCommunication" type="KdcCommunication" line="232"/>
                <scope line="233">
                    <declaration name="ibuf" type="byte[]" line="234"/>
                    <scope line="235"/>
                </scope>
                <scope line="240">
                    <declaration name="wrappedException" type="Exception" line="241"/>
                    <scope line="242"/>
                    <scope line="245"/>
                </scope>
            </method>
            <class name="KdcCommunication" line="250">
                <implements interface="PrivilegedExceptionAction">
                    <type_params>
                        <type_param name="byte[]"/>
                    </type_params>
                </implements>
                <declaration name="kdc" type="String" line="251"/>
                <declaration name="port" type="int" line="252"/>
                <declaration name="useTCP" type="boolean" line="253"/>
                <declaration name="timeout" type="int" line="254"/>
                <declaration name="retries" type="int" line="255"/>
                <declaration name="obuf" type="byte[]" line="256"/>
                <method name="KdcCommunication" type="constructor" line="257">
                    <params>
                        <param name="kdc" type="String"/>
                        <param name="port" type="int"/>
                        <param name="useTCP" type="boolean"/>
                        <param name="timeout" type="int"/>
                        <param name="retries" type="int"/>
                        <param name="obuf" type="byte[]"/>
                    </params>
                </method>
                <method name="run" type="byte[]" line="265">
                    <declaration name="ibuf" type="byte[]" line="266"/>
                    <scope line="267">
                        <declaration name="proto" type="String" line="268"/>
                        <declaration name="kdcClient" type="NetClient" line="269"/>
                        <scope line="270"/>
                        <scope line="273"/>
                        <scope line="278">
                            <scope line="279"/>
                            <scope line="282"/>
                        </scope>
                        <scope line="287"/>
                    </scope>
                </method>
            </class>
            <javadoc line="294">
                Returns krb5.conf setting of {@code key} for a specfic realm,
                  which can be:
                  1. defined in the sub-stanza for the given realm inside [realms], or
                  2. defined in [libdefaults], or
                  3. defValue                
                <param>
                    realm the given realm in which the setting is requested. Returns
                      the global setting if null                    
                </param>
                <param>
                    key the key for the setting                    
                </param>
                <param>
                    defValue default value                    
                </param>
                <return>
                    a value for the key                    
                </return>
            </javadoc>
            <method name="getRealmSpecificValue" type="int" line="306">
                <params>
                    <param name="realm" type="String"/>
                    <param name="key" type="String"/>
                    <param name="defValue" type="int"/>
                </params>
                <declaration name="v" type="int" line="307"/>
                <declaration name="temp" type="int" line="309"/>
                <scope line="310">
                    <declaration name="value" type="String" line="311"/>
                </scope>
                <scope line="314"/>
            </method>
            <method name="parsePositiveIntString" type="int" line="319">
                <params>
                    <param name="intString" type="String"/>
                </params>
                <declaration name="ret" type="int" line="321"/>
                <scope line="322"/>
                <scope line="325"/>
            </method>
            <class name="KdcAccessibility" line="331">
                <javadoc line="331">
                    Maintains a KDC accessible list. Unavailable KDCs are put into a
                      blacklist, when a KDC in the blacklist is available, it&apos;s removed
                      from there. No insertion order in the blacklist.
                      There are two methods to deal with KDCs in the blacklist. 1. Only try
                      them when there&apos;s no KDC not on the blacklist. 2. Still try them, but
                      with lesser number of retries and smaller timeout value.                    
                </javadoc>
                <declaration name="bads" type="Set&amp;lt;String&amp;gt;" line="340"/>
                <method name="addBad" type="void" line="341">
                    <params>
                        <param name="kdc" type="String"/>
                    </params>
                    <scope line="342"/>
                </method>
                <method name="removeBad" type="void" line="347">
                    <params>
                        <param name="kdc" type="String"/>
                    </params>
                    <scope line="348"/>
                </method>
                <method name="isBad" type="boolean" line="353">
                    <params>
                        <param name="kdc" type="String"/>
                    </params>
                </method>
                <method name="reset" type="void" line="356">
                    <scope line="357"/>
                </method>
                <method name="list" type="String[]" line="362">
                    <params>
                        <param name="kdcList" type="String"/>
                    </params>
                    <declaration name="st" type="StringTokenizer" line="363"/>
                    <declaration name="list" type="List&amp;lt;String&amp;gt;" line="364"/>
                    <scope line="365">
                        <declaration name="badkdcs" type="List&amp;lt;String&amp;gt;" line="366"/>
                        <scope line="367">
                            <declaration name="t" type="String" line="368"/>
                        </scope>
                    </scope>
                    <scope line="374">
                        <scope line="375"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>