<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5">
        <import package="sun.security.krb5.internal"/>
        <import package="sun.security.krb5.internal.crypto.KeyUsage"/>
        <import package="sun.security.util"/>
        <import package="java.io.IOException"/>
        <class name="KrbApRep" line="39">
            <comment line="47">
                although in plain text                
            </comment>
            <javadoc line="39">
                This class encapsulates a KRB-AP-REP sent from the service to the
                  client.                
            </javadoc>
            <declaration name="obuf" type="byte[]" line="44"/>
            <declaration name="ibuf" type="byte[]" line="45"/>
            <declaration name="encPart" type="EncAPRepPart" line="46"/>
            <declaration name="apRepMessg" type="APRep" line="47"/>
            <javadoc line="49">
                Constructs a KRB-AP-REP to send to a client.                
                <throws>
                    KrbException                    
                </throws>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="KrbApRep" type="constructor" line="57">
                <params>
                    <param name="incomingReq" type="KrbApReq"/>
                    <param name="useSeqNumber" type="boolean"/>
                    <param name="useSubKey" type="boolean"/>
                </params>
                <comment line="55">
                    Used in AcceptSecContextToken                    
                </comment>
                <declaration name="subKey" type="EncryptionKey" line="59"/>
                <declaration name="seqNum" type="SeqNumber" line="62"/>
            </method>
            <javadoc line="67">
                Constructs a KRB-AP-REQ from the bytes received from a service.                
                <throws>
                    KrbException                    
                </throws>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="KrbApRep" type="constructor" line="74">
                <params>
                    <param name="message" type="byte[]"/>
                    <param name="tgtCreds" type="Credentials"/>
                    <param name="outgoingReq" type="KrbApReq"/>
                </params>
                <comment line="73">
                    Used in AcceptSecContextToken                    
                </comment>
            </method>
            <method name="init" type="void" line="82">
                <params>
                    <param name="apReq" type="KrbApReq"/>
                    <param name="subKey" type="EncryptionKey"/>
                    <param name="seqNumber" type="SeqNumber"/>
                </params>
            </method>
            <javadoc line="93">
                Constructs a KrbApRep object.                
                <param>
                    msg a byte array of reply message.                    
                </param>
                <param>
                    tgs_creds client's credential.                    
                </param>
                <exception>
                    KrbException                    
                </exception>
                <exception>
                    IOException                    
                </exception>
            </javadoc>
            <method name="KrbApRep" type="constructor" line="101">
                <params>
                    <param name="msg" type="byte[]"/>
                    <param name="tgs_creds" type="Credentials"/>
                </params>
            </method>
            <javadoc line="105">
                Constructs a KrbApRep object.                
                <param>
                    msg a byte array of reply message.                    
                </param>
                <param>
                    tgs_creds client's credential.                    
                </param>
                <exception>
                    KrbException                    
                </exception>
                <exception>
                    IOException                    
                </exception>
            </javadoc>
            <method name="KrbApRep" type="constructor" line="113">
                <params>
                    <param name="encoding" type="DerValue"/>
                    <param name="tgs_creds" type="Credentials"/>
                </params>
                <declaration name="rep" type="APRep" line="114"/>
                <scope line="115"/>
                <scope line="117">
                    <declaration name="err" type="KRBError" line="119"/>
                    <declaration name="errStr" type="String" line="120"/>
                    <declaration name="eText" type="String" line="121"/>
                    <declaration name="ke" type="KrbException" line="126"/>
                </scope>
                <declaration name="temp" type="byte[]" line="131"/>
                <declaration name="enc_ap_rep_part" type="byte[]" line="133"/>
            </method>
            <method name="authenticate" type="void" line="140">
                <params>
                    <param name="apReq" type="KrbApReq"/>
                </params>
            </method>
            <javadoc line="147">
                Returns the optional subkey stored in
                  this message. Returns null if none is stored.                
            </javadoc>
            <method name="getSubKey" type="EncryptionKey" line="151">
                <comment line="153">
                    XXX Can encPart be null                    
                </comment>
            </method>
            <javadoc line="157">
                Returns the optional sequence number stored in the
                  this message. Returns null if none is stored.                
            </javadoc>
            <method name="getSeqNumber" type="Integer" line="161">
                <comment line="163">
                    XXX Can encPart be null                    
                </comment>
            </method>
            <javadoc line="166">
                Returns the ASN.1 encoding that should be sent to the peer.                
            </javadoc>
            <method name="getMessage" type="byte[]" line="169"/>
            <method name="createMessage" type="void" line="180">
                <params>
                    <param name="key" type="EncryptionKey"/>
                    <param name="ctime" type="KerberosTime"/>
                    <param name="cusec" type="int"/>
                    <param name="subKey" type="EncryptionKey"/>
                    <param name="seqNumber" type="SeqNumber"/>
                </params>
                <declaration name="seqno" type="Integer" line="182"/>
                <declaration name="encPartEncoding" type="byte[]" line="192"/>
                <declaration name="encEncPart" type="EncryptedData" line="194"/>
            </method>
        </class>
    </source>