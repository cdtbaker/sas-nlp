<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal.ccache">
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.util.Hashtable"/>
        <import package="java.util.Vector"/>
        <import package="java.util.StringTokenizer"/>
        <import package="sun.security.krb5"/>
        <import package="sun.security.krb5.internal"/>
        <import package="sun.security.krb5.internal.util.KrbDataInputStream"/>
        <class name="CCacheInputStream" line="10">
            <extends class="KrbDataInputStream"/>
            <implements interface="FileCCacheConstants"/>
            <javadoc line="10">
                This class extends KrbDataInputStream. It is used for parsing FCC-format
                  data from file to memory.                
                <author>
                    Yanni Zhang                    
                </author>
            </javadoc>
            <declaration name="DEBUG" type="boolean" line="16"/>
            <method name="CCacheInputStream" type="constructor" line="17">
                <params>
                    <param name="is" type="InputStream"/>
                </params>
            </method>
            <method name="readTag" type="Tag" line="20">
                <declaration name="buf" type="char[]" line="21"/>
                <declaration name="bytes" type="byte[]" line="22"/>
                <declaration name="len" type="int" line="23"/>
                <declaration name="tag" type="int" line="24"/>
                <declaration name="taglen" type="int" line="25"/>
                <declaration name="time_offset" type="Integer" line="26"/>
                <declaration name="usec_offset" type="Integer" line="27"/>
                <scope line="29"/>
                <scope line="33"/>
                <scope line="36"/>
                <declaration name="result" type="Tag" line="48"/>
                <scope line="49"/>
            </method>
            <method name="readPrincipal" type="PrincipalName" line="54">
                <params>
                    <param name="version" type="int"/>
                </params>
                <declaration name="type" type="int" line="55"/>
                <declaration name="p" type="PrincipalName" line="56"/>
                <declaration name="pname" type="String[]" line="57"/>
                <declaration name="realm" type="String" line="58"/>
                <scope line="59"/>
                <scope line="62"/>
                <declaration name="result" type="String[]" line="66"/>
                <scope line="68">
                    <scope line="70"/>
                    <declaration name="bytes" type="byte[]" line="73"/>
                </scope>
                <scope line="77"/>
            </method>
            <method name="isRealm" type="boolean" line="87">
                <params>
                    <param name="str" type="String"/>
                </params>
                <scope line="88">
                    <declaration name="r" type="Realm" line="89"/>
                </scope>
                <scope line="91"/>
                <declaration name="st" type="StringTokenizer" line="94"/>
                <declaration name="s" type="String" line="95"/>
                <scope line="96">
                    <scope line="98">
                        <scope line="99"/>
                    </scope>
                </scope>
            </method>
            <method name="readKey" type="EncryptionKey" line="106">
                <params>
                    <param name="version" type="int"/>
                </params>
                <declaration name="keyType" type="int" line="107"/>
                <declaration name="bytes" type="byte[]" line="111"/>
                <scope line="112"/>
            </method>
            <method name="readTimes" type="long[]" line="117">
                <declaration name="times" type="long[]" line="118"/>
            </method>
            <method name="readskey" type="boolean" line="125">
                <scope line="126"/>
            </method>
            <method name="readAddr" type="HostAddress[]" line="131">
                <declaration name="numAddrs" type="int" line="132"/>
                <scope line="134">
                    <declaration name="addrs" type="HostAddress[]" line="135"/>
                    <scope line="136">
                        <scope line="139">
                            <scope line="140"/>
                        </scope>
                        <declaration name="result" type="byte[]" line="145"/>
                    </scope>
                </scope>
            </method>
            <method name="readAuth" type="AuthorizationDataEntry[]" line="153">
                <declaration name="num" type="int" line="154"/>
                <scope line="156">
                    <declaration name="auData" type="AuthorizationDataEntry[]" line="157"/>
                    <declaration name="data" type="byte[]" line="158"/>
                    <scope line="159">
                        <scope line="163"/>
                    </scope>
                </scope>
            </method>
            <method name="readData" type="byte[]" line="172">
                <declaration name="length" type="int" line="173"/>
                <scope line="175"/>
                <scope line="178">
                    <declaration name="bytes" type="byte[]" line="179"/>
                </scope>
            </method>
            <method name="readFlags" type="boolean[]" line="184">
                <declaration name="flags" type="boolean[]" line="185"/>
                <declaration name="ticketFlags" type="int" line="186"/>
                <scope line="199">
                    <declaration name="msg" type="String" line="200"/>
                    <scope line="201"/>
                    <scope line="204"/>
                    <scope line="207"/>
                    <scope line="210"/>
                    <scope line="213"/>
                    <scope line="216"/>
                    <scope line="219"/>
                    <scope line="222"/>
                    <scope line="225"/>
                    <scope line="228"/>
                    <scope line="231"/>
                </scope>
            </method>
            <javadoc line="238">
                Reads the next cred in stream.                
                <return>
                    the next cred, null if ticket or second_ticket unparseable.
                      Note: MIT krb5 1.8.1 might generate a config entry with server principal
                      X-CACHECONF:/krb5_ccache_conf_data/fast_avail/krbtgt/REALM@REALM. The
                      entry is used by KDC to inform the client that it support certain
                      features. Its ticket is not a valid krb5 ticket and thus this method
                      returns null.                    
                </return>
            </javadoc>
            <method name="readCred" type="Credentials" line="247">
                <params>
                    <param name="version" type="int"/>
                </params>
                <declaration name="cpname" type="PrincipalName" line="248"/>
                <declaration name="spname" type="PrincipalName" line="250"/>
                <declaration name="key" type="EncryptionKey" line="252"/>
                <declaration name="times" type="long" line="254"/>
                <declaration name="authtime" type="KerberosTime" line="255"/>
                <declaration name="starttime" type="KerberosTime" line="256"/>
                <declaration name="endtime" type="KerberosTime" line="257"/>
                <declaration name="renewTill" type="KerberosTime" line="258"/>
                <scope line="259"/>
                <declaration name="skey" type="boolean" line="265"/>
                <declaration name="flags" type="boolean" line="266"/>
                <declaration name="tFlags" type="TicketFlags" line="267"/>
                <declaration name="addr" type="HostAddress" line="268"/>
                <declaration name="addrs" type="HostAddresses" line="269"/>
                <scope line="270"/>
                <declaration name="auDataEntry" type="AuthorizationDataEntry[]" line="273"/>
                <declaration name="auData" type="AuthorizationData" line="274"/>
                <scope line="275"/>
                <declaration name="ticketData" type="byte[]" line="278"/>
                <declaration name="ticketData2" type="byte[]" line="279"/>
                <scope line="280"/>
                <scope line="283"/>
            </method>
        </class>
    </source>