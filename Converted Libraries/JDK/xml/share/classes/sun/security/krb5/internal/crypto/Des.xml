<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal.crypto">
        <import package="javax.crypto.Cipher"/>
        <import package="javax.crypto.spec.SecretKeySpec"/>
        <import package="javax.crypto.SecretKeyFactory"/>
        <import package="javax.crypto.SecretKey"/>
        <import package="java.security.GeneralSecurityException"/>
        <import package="javax.crypto.spec.IvParameterSpec"/>
        <import package="sun.security.krb5.KrbCryptoException"/>
        <import package="java.util.Arrays"/>
        <import package="sun.security.action.GetPropertyAction"/>
        <class name="Des" line="11">
            <declaration name="CHARSET" type="String" line="12"/>
            <declaration name="bad_keys" type="long[]" line="13"/>
            <declaration name="good_parity" type="byte[]" line="14"/>
            <method name="set_parity" type="byte[]" line="15">
                <params>
                    <param name="key" type="byte[]"/>
                </params>
                <scope line="16"/>
            </method>
            <method name="set_parity" type="long" line="21">
                <params>
                    <param name="key" type="long"/>
                </params>
            </method>
            <method name="bad_key" type="boolean" line="24">
                <params>
                    <param name="key" type="long"/>
                </params>
                <scope line="25">
                    <scope line="26"/>
                </scope>
            </method>
            <method name="bad_key" type="boolean" line="32">
                <params>
                    <param name="key" type="byte[]"/>
                </params>
            </method>
            <method name="octet2long" type="long" line="35">
                <params>
                    <param name="input" type="byte[]"/>
                </params>
            </method>
            <method name="octet2long" type="long" line="38">
                <params>
                    <param name="input" type="byte[]"/>
                    <param name="offset" type="int"/>
                </params>
                <declaration name="result" type="long" line="39"/>
                <scope line="40">
                    <scope line="41"/>
                </scope>
            </method>
            <method name="long2octet" type="byte[]" line="47">
                <params>
                    <param name="input" type="long"/>
                </params>
                <declaration name="output" type="byte[]" line="48"/>
                <scope line="49"/>
            </method>
            <method name="long2octet" type="void" line="54">
                <params>
                    <param name="input" type="long"/>
                    <param name="output" type="byte[]"/>
                </params>
            </method>
            <method name="long2octet" type="void" line="57">
                <params>
                    <param name="input" type="long"/>
                    <param name="output" type="byte[]"/>
                    <param name="offset" type="int"/>
                </params>
                <scope line="58">
                    <scope line="59"/>
                </scope>
            </method>
            <javadoc line="64">
                Creates a DES cipher in Electronic Codebook mode, with no padding.                
                <param>
                    input plain text.                    
                </param>
                <param>
                    output the buffer for the result.                    
                </param>
                <param>
                    key DES the key to encrypt the text.                    
                </param>
                <param>
                    ivec initialization vector.                    
                </param>
                <created>
                    by Yanni Zhang, Dec 6 99.                    
                </created>
            </javadoc>
            <method name="cbc_encrypt" type="void" line="72">
                <params>
                    <param name="input" type="byte[]"/>
                    <param name="output" type="byte[]"/>
                    <param name="key" type="byte[]"/>
                    <param name="ivec" type="byte[]"/>
                    <param name="encrypt" type="boolean"/>
                </params>
                <declaration name="cipher" type="Cipher" line="73"/>
                <scope line="74"/>
                <scope line="77">
                    <declaration name="ke" type="KrbCryptoException" line="78"/>
                </scope>
                <declaration name="params" type="IvParameterSpec" line="82"/>
                <declaration name="skSpec" type="SecretKeySpec" line="83"/>
                <scope line="84">
                    <declaration name="skf" type="SecretKeyFactory" line="85"/>
                    <declaration name="sk" type="SecretKey" line="86"/>
                    <declaration name="result" type="byte[]" line="89"/>
                </scope>
                <scope line="93">
                    <declaration name="ke" type="KrbCryptoException" line="94"/>
                </scope>
            </method>
            <javadoc line="99">
                Generates DES key from the password.                
                <param>
                    password a char[] used to create the key.                    
                </param>
                <return>
                    DES key.                    
                </return>
                <modified>
                    by Yanni Zhang, Dec 6, 99                    
                </modified>
            </javadoc>
            <method name="char_to_key" type="long" line="105">
                <params>
                    <param name="passwdChars" type="char[]"/>
                </params>
                <declaration name="key" type="long" line="106"/>
                <declaration name="octet" type="long" line="107"/>
                <declaration name="cbytes" type="byte[]" line="108"/>
                <scope line="109">
                    <scope line="110"/>
                    <scope line="113"/>
                </scope>
                <scope line="117">
                    <scope line="118"/>
                    <declaration name="ce" type="KrbCryptoException" line="121"/>
                </scope>
                <declaration name="passwdBytes" type="byte[]" line="125"/>
                <declaration name="newkey" type="byte[]" line="126"/>
                <declaration name="length" type="int" line="127"/>
                <scope line="128">
                    <scope line="130">
                        <scope line="132"/>
                    </scope>
                </scope>
                <scope line="140">
                    <declaration name="temp" type="byte[]" line="141"/>
                </scope>
                <scope line="147">
                    <declaration name="temp" type="byte[]" line="148"/>
                </scope>
                <scope line="152"/>
                <scope line="155"/>
            </method>
            <javadoc line="160">
                Encrypts the message blocks using DES CBC and output the
                  final block of 8-byte ciphertext.                
                <param>
                    ivec Initialization vector.                    
                </param>
                <param>
                    msg Input message as an byte array.                    
                </param>
                <param>
                    key DES key to encrypt the message.                    
                </param>
                <return>
                    the last block of ciphertext.                    
                </return>
                <created>
                    by Yanni Zhang, Dec 6, 99.                    
                </created>
            </javadoc>
            <method name="des_cksum" type="byte[]" line="169">
                <params>
                    <param name="ivec" type="byte[]"/>
                    <param name="msg" type="byte[]"/>
                    <param name="key" type="byte[]"/>
                </params>
                <declaration name="cipher" type="Cipher" line="170"/>
                <declaration name="result" type="byte[]" line="171"/>
                <scope line="172"/>
                <scope line="175">
                    <declaration name="ke" type="KrbCryptoException" line="176"/>
                </scope>
                <declaration name="params" type="IvParameterSpec" line="180"/>
                <declaration name="skSpec" type="SecretKeySpec" line="181"/>
                <scope line="182">
                    <declaration name="skf" type="SecretKeyFactory" line="183"/>
                    <declaration name="sk" type="SecretKey" line="184"/>
                    <scope line="186"/>
                </scope>
                <scope line="191">
                    <declaration name="ke" type="KrbCryptoException" line="192"/>
                </scope>
            </method>
            <javadoc line="198">
                Pads the data so that its length is a multiple of 8 bytes.                
                <param>
                    data the raw data.                    
                </param>
                <return>
                    the data being padded.                    
                </return>
                <created>
                    by Yanni Zhang, Dec 6 99. //Kerberos does not use PKCS5 padding.                    
                </created>
            </javadoc>
            <method name="pad" type="byte[]" line="204">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
                <declaration name="len" type="int" line="205"/>
                <scope line="209">
                    <declaration name="padding" type="byte[]" line="210"/>
                    <scope line="211"/>
                </scope>
            </method>
            <method name="string_to_key_bytes" type="byte[]" line="218">
                <params>
                    <param name="passwdChars" type="char[]"/>
                </params>
            </method>
        </class>
    </source>