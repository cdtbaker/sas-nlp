<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal.crypto">
        <import package="javax.crypto.Cipher"/>
        <import package="javax.crypto.spec.SecretKeySpec"/>
        <import package="javax.crypto.SecretKeyFactory"/>
        <import package="javax.crypto.SecretKey"/>
        <import package="java.security.GeneralSecurityException"/>
        <import package="javax.crypto.spec.IvParameterSpec"/>
        <import package="sun.security.krb5.KrbCryptoException"/>
        <import package="java.util.Arrays"/>
        <import package="sun.security.action.GetPropertyAction"/>
        <class name="Des" line="43">
            <comment line="46">
                RFC 3961 demands that UTF-8 encoding be used in DES&apos;s
                 string-to-key function. For historical reasons, some
                 implementations use a locale-specific encoding. Even
                 so, when the client and server use different locales,
                 they must agree on a common value, normally the one
                 used when the password is set/reset.
                
                 The following system property is provided to perform the
                 string-to-key encoding. When set, the specified charset
                 name is used. Otherwise, the system default charset.                
            </comment>
            <comment line="364">
                Caller is responsible for clearing password                
            </comment>
            <declaration name="CHARSET" type="String" line="56"/>
            <declaration name="bad_keys" type="long[]" line="60"/>
            <declaration name="good_parity" type="byte[]" line="71"/>
            <method name="set_parity" type="byte[]" line="122">
                <params>
                    <param name="key" type="byte[]"/>
                </params>
                <scope line="123"/>
            </method>
            <method name="set_parity" type="long" line="129">
                <params>
                    <param name="key" type="long"/>
                </params>
            </method>
            <method name="bad_key" type="boolean" line="133">
                <params>
                    <param name="key" type="long"/>
                </params>
                <scope line="134">
                    <scope line="135"/>
                </scope>
            </method>
            <method name="bad_key" type="boolean" line="142">
                <params>
                    <param name="key" type="byte[]"/>
                </params>
            </method>
            <method name="octet2long" type="long" line="146">
                <params>
                    <param name="input" type="byte[]"/>
                </params>
            </method>
            <method name="octet2long" type="long" line="150">
                <params>
                    <param name="input" type="byte[]"/>
                    <param name="offset" type="int"/>
                </params>
                <declaration name="result" type="long" line="151"/>
                <scope line="152">
                    <scope line="153"/>
                </scope>
            </method>
            <method name="long2octet" type="byte[]" line="160">
                <params>
                    <param name="input" type="long"/>
                </params>
                <declaration name="output" type="byte[]" line="161"/>
                <scope line="162"/>
            </method>
            <method name="long2octet" type="void" line="168">
                <params>
                    <param name="input" type="long"/>
                    <param name="output" type="byte[]"/>
                </params>
            </method>
            <method name="long2octet" type="void" line="172">
                <params>
                    <param name="input" type="long"/>
                    <param name="output" type="byte[]"/>
                    <param name="offset" type="int"/>
                </params>
                <scope line="173">
                    <scope line="174"/>
                </scope>
            </method>
            <javadoc line="181">
                Creates a DES cipher in Electronic Codebook mode, with no padding.                
                <param>
                    input plain text.                    
                </param>
                <param>
                    output the buffer for the result.                    
                </param>
                <param>
                    key DES the key to encrypt the text.                    
                </param>
                <param>
                    ivec initialization vector.                    
                </param>
                <created>
                    by Yanni Zhang, Dec 6 99.                    
                </created>
            </javadoc>
            <method name="cbc_encrypt" type="void" line="195">
                <params>
                    <param name="input" type="byte[]"/>
                    <param name="output" type="byte[]"/>
                    <param name="key" type="byte[]"/>
                    <param name="ivec" type="byte[]"/>
                    <param name="encrypt" type="boolean"/>
                </params>
                <comment line="212">
                    SecretKey sk = skf.generateSecret(skSpec);                    
                </comment>
                <declaration name="cipher" type="Cipher" line="197"/>
                <scope line="199"/>
                <scope line="201">
                    <declaration name="ke" type="KrbCryptoException" line="202"/>
                </scope>
                <declaration name="params" type="IvParameterSpec" line="207"/>
                <declaration name="skSpec" type="SecretKeySpec" line="208"/>
                <scope line="209">
                    <declaration name="skf" type="SecretKeyFactory" line="210"/>
                    <declaration name="sk" type="SecretKey" line="212"/>
                    <declaration name="result" type="byte[]" line="217"/>
                </scope>
                <scope line="220">
                    <declaration name="ke" type="KrbCryptoException" line="221"/>
                </scope>
            </method>
            <javadoc line="227">
                Generates DES key from the password.                
                <param>
                    password a char[] used to create the key.                    
                </param>
                <return>
                    DES key.                    
                </return>
                <modified>
                    by Yanni Zhang, Dec 6, 99                    
                </modified>
            </javadoc>
            <method name="char_to_key" type="long" line="234">
                <params>
                    <param name="passwdChars" type="char[]"/>
                </params>
                <comment line="240">
                    Convert password to byte array                    
                </comment>
                <comment line="248">
                    clear-up sensitive information                    
                </comment>
                <comment line="258">
                    pad data                    
                </comment>
                <comment line="289">
                    clear-up sensitive information                    
                </comment>
                <declaration name="key" type="long" line="235"/>
                <declaration name="octet" type="long" line="236"/>
                <declaration name="cbytes" type="byte[]" line="237"/>
                <scope line="240">
                    <scope line="241"/>
                    <scope line="243"/>
                </scope>
                <scope line="246">
                    <scope line="248"/>
                    <declaration name="ce" type="KrbCryptoException" line="251"/>
                </scope>
                <declaration name="passwdBytes" type="byte[]" line="258"/>
                <declaration name="newkey" type="byte[]" line="260"/>
                <declaration name="length" type="int" line="261"/>
                <scope line="262">
                    <scope line="264">
                        <scope line="266"/>
                    </scope>
                </scope>
                <scope line="274">
                    <declaration name="temp" type="byte[]" line="275"/>
                </scope>
                <scope line="282">
                    <declaration name="temp" type="byte[]" line="283"/>
                </scope>
                <scope line="289"/>
                <scope line="292"/>
            </method>
            <javadoc line="299">
                Encrypts the message blocks using DES CBC and output the
                  final block of 8-byte ciphertext.                
                <param>
                    ivec Initialization vector.                    
                </param>
                <param>
                    msg Input message as an byte array.                    
                </param>
                <param>
                    key DES key to encrypt the message.                    
                </param>
                <return>
                    the last block of ciphertext.                    
                </return>
                <created>
                    by Yanni Zhang, Dec 6, 99.                    
                </created>
            </javadoc>
            <method name="des_cksum" type="byte[]" line="309">
                <params>
                    <param name="ivec" type="byte[]"/>
                    <param name="msg" type="byte[]"/>
                    <param name="key" type="byte[]"/>
                </params>
                <comment line="326">
                    SecretKey sk = skf.generateSecret(skSpec);                    
                </comment>
                <declaration name="cipher" type="Cipher" line="310"/>
                <declaration name="result" type="byte[]" line="312"/>
                <scope line="313"/>
                <scope line="315">
                    <declaration name="ke" type="KrbCryptoException" line="316"/>
                </scope>
                <declaration name="params" type="IvParameterSpec" line="321"/>
                <declaration name="skSpec" type="SecretKeySpec" line="322"/>
                <scope line="323">
                    <declaration name="skf" type="SecretKeyFactory" line="324"/>
                    <declaration name="sk" type="SecretKey" line="326"/>
                    <scope line="328"/>
                </scope>
                <scope line="333">
                    <declaration name="ke" type="KrbCryptoException" line="334"/>
                </scope>
            </method>
            <javadoc line="341">
                Pads the data so that its length is a multiple of 8 bytes.                
                <param>
                    data the raw data.                    
                </param>
                <return>
                    the data being padded.                    
                </return>
                <created>
                    by Yanni Zhang, Dec 6 99. //Kerberos does not use PKCS5 padding.                    
                </created>
            </javadoc>
            <method name="pad" type="byte[]" line="348">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
                <declaration name="len" type="int" line="349"/>
                <scope line="353">
                    <declaration name="padding" type="byte[]" line="354"/>
                    <scope line="355"/>
                </scope>
            </method>
            <method name="string_to_key_bytes" type="byte[]" line="365">
                <params>
                    <param name="passwdChars" type="char[]"/>
                </params>
            </method>
        </class>
    </source>