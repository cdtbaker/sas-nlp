<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal">
        <import package="sun.security.krb5.PrincipalName"/>
        <import package="sun.security.krb5.KrbException"/>
        <import package="sun.security.krb5.Asn1Exception"/>
        <import package="sun.security.util"/>
        <import package="java.util.Vector"/>
        <import package="java.util.ArrayList"/>
        <import package="java.net.InetAddress"/>
        <import package="java.net.Inet4Address"/>
        <import package="java.net.Inet6Address"/>
        <import package="java.net.UnknownHostException"/>
        <import package="java.io.IOException"/>
        <import package="sun.security.krb5.internal.ccache.CCacheOutputStream"/>
        <class name="HostAddresses" line="47">
            <implements interface="Cloneable"/>
            <javadoc line="47">
                Implements the ASN.1 HostAddresses type.
                  &lt;xmp&gt;
                  HostAddresses   -- NOTE: subtly different from rfc1510,
                  -- but has a value mapping and encodes the same
                  ::= SEQUENCE OF HostAddress
                  HostAddress     ::= SEQUENCE  {
                  addr-type       [0] Int32,
                  address         [1] OCTET STRING
                  }
                  &lt;/xmp&gt;
                  &lt;p&gt;
                  This definition reflects the Network Working Group RFC 4120
                  specification available at
                  &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;
                  http://www.ietf.org/rfc/rfc4120.txt&lt;/a&gt;.                
            </javadoc>
            <declaration name="DEBUG" type="boolean" line="69"/>
            <declaration name="addresses" type="HostAddress[]" line="70"/>
            <declaration name="hashCode" type="int" line="71"/>
            <method name="HostAddresses" type="constructor" line="73">
                <params>
                    <param name="new_addresses" type="HostAddress[]"/>
                </params>
                <scope line="74">
                    <scope line="76">
                        <scope line="77"/>
                        <scope line="79"/>
                    </scope>
                </scope>
            </method>
            <method name="HostAddresses" type="constructor" line="86"/>
            <method name="HostAddresses" type="constructor" line="91">
                <params>
                    <param name="dummy" type="int"/>
                </params>
            </method>
            <method name="HostAddresses" type="constructor" line="94">
                <params>
                    <param name="serverPrincipal" type="PrincipalName"/>
                </params>
                <declaration name="components" type="String[]" line="96"/>
                <declaration name="host" type="String" line="102"/>
                <declaration name="addr" type="InetAddress" line="103"/>
                <declaration name="hAddrs" type="HostAddress" line="104"/>
                <scope line="106"/>
            </method>
            <method name="clone" type="Object" line="113">
                <declaration name="new_hostAddresses" type="HostAddresses" line="114"/>
                <scope line="115">
                    <scope line="117"/>
                </scope>
            </method>
            <method name="inList" type="boolean" line="125">
                <params>
                    <param name="addr" type="HostAddress"/>
                </params>
                <scope line="126"/>
            </method>
            <method name="hashCode" type="int" line="134">
                <scope line="135">
                    <declaration name="result" type="int" line="136"/>
                    <scope line="137">
                        <scope line="138"/>
                    </scope>
                </scope>
            </method>
            <method name="equals" type="boolean" line="149">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="150"/>
                <scope line="154"/>
                <declaration name="addrs" type="HostAddresses" line="158"/>
                <scope line="162"/>
            </method>
            <javadoc line="172">
                Constructs a new &lt;code&gt;HostAddresses&lt;/code&gt; object.                
                <param>
                    encoding a single DER-encoded value.                    
                </param>
                <exception>
                    Asn1Exception if an error occurs while decoding an
                      ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading
                      encoded data.                    
                </exception>
            </javadoc>
            <method name="HostAddresses" type="constructor" line="181">
                <params>
                    <param name="encoding" type="DerValue"/>
                </params>
                <declaration name="tempAddresses" type="Vector&lt;HostAddress&gt;" line="182"/>
                <declaration name="der" type="DerValue" line="183"/>
                <scope line="184"/>
                <scope line="188"/>
            </method>
            <javadoc line="195">
                Encodes a &lt;code&gt;HostAddresses&lt;/code&gt; object.                
                <return>
                    byte array of encoded <code>HostAddresses</code> object.                    
                </return>
                <exception>
                    Asn1Exception if an error occurs while decoding an
                      ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading
                      encoded data.                    
                </exception>
            </javadoc>
            <method name="asn1Encode" type="byte[]" line="203">
                <declaration name="bytes" type="DerOutputStream" line="204"/>
                <declaration name="temp" type="DerOutputStream" line="205"/>
                <scope line="207"/>
            </method>
            <javadoc line="215">
                Parse (unmarshal) a &lt;code&gt;HostAddresses&lt;/code&gt; from a DER input stream.
                  This form
                  parsing might be used when expanding a value which is part of
                  a constructed sequence and uses explicitly tagged type.                
                <exception>
                    Asn1Exception if an Asn1Exception occurs.                    
                </exception>
                <param>
                    data the Der input stream value, which contains one or more
                      marshaled value.                    
                </param>
                <param>
                    explicitTag tag number.                    
                </param>
                <param>
                    optional indicates if this data field is optional.                    
                </param>
                <return>
                    an instance of <code>HostAddresses</code>.                    
                </return>
            </javadoc>
            <method name="parse" type="HostAddresses" line="230">
                <params>
                    <param name="data" type="DerInputStream"/>
                    <param name="explicitTag" type="byte"/>
                    <param name="optional" type="boolean"/>
                </params>
                <declaration name="der" type="DerValue" line="234"/>
                <scope line="235"/>
                <scope line="237">
                    <declaration name="subDer" type="DerValue" line="238"/>
                </scope>
            </method>
            <javadoc line="243">
                Writes data field values in &lt;code&gt;HostAddresses&lt;/code&gt; in FCC
                  format to a &lt;code&gt;CCacheOutputStream&lt;/code&gt;.                
                <param>
                    cos a <code>CCacheOutputStream</code> to be written to.                    
                </param>
                <exception>
                    IOException if an I/O exception occurs.                    
                </exception>
                <see>
                    sun.security.krb5.internal.ccache.CCacheOutputStream                    
                </see>
            </javadoc>
            <method name="writeAddrs" type="void" line="252">
                <params>
                    <param name="cos" type="CCacheOutputStream"/>
                </params>
                <scope line="254"/>
            </method>
            <method name="getInetAddresses" type="InetAddress[]" line="263">
                <comment line="277">
                    Should not happen since IP address given                    
                </comment>
                <declaration name="ipAddrs" type="ArrayList&lt;InetAddress&gt;" line="268"/>
                <scope line="270">
                    <scope line="271">
                        <scope line="273"/>
                    </scope>
                    <scope line="276"/>
                </scope>
                <declaration name="retVal" type="InetAddress[]" line="282"/>
            </method>
            <javadoc line="287">
                Returns all the IP addresses of the local host.                
            </javadoc>
            <method name="getLocalAddresses" type="HostAddresses" line="291">
                <declaration name="hostname" type="String" line="292"/>
                <declaration name="inetAddresses" type="InetAddress[]" line="293"/>
                <scope line="294">
                    <declaration name="localHost" type="InetAddress" line="295"/>
                    <declaration name="hAddresses" type="HostAddress[]" line="298"/>
                    <scope line="300"/>
                    <scope line="303">
                        <scope line="307"/>
                    </scope>
                </scope>
                <scope line="316"/>
            </method>
            <javadoc line="322">
                Creates a new HostAddresses instance from the supplied list
                  of InetAddresses.                
            </javadoc>
            <method name="HostAddresses" type="constructor" line="327">
                <params>
                    <param name="inetAddresses" type="InetAddress[]"/>
                </params>
                <scope line="329"/>
            </method>
        </class>
    </source>