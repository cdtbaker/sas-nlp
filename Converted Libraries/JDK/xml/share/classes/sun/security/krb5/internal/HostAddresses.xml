<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal">
        <import package="sun.security.krb5.PrincipalName"/>
        <import package="sun.security.krb5.KrbException"/>
        <import package="sun.security.krb5.Asn1Exception"/>
        <import package="sun.security.util"/>
        <import package="java.util.Vector"/>
        <import package="java.util.ArrayList"/>
        <import package="java.net.InetAddress"/>
        <import package="java.net.Inet4Address"/>
        <import package="java.net.Inet6Address"/>
        <import package="java.net.UnknownHostException"/>
        <import package="java.io.IOException"/>
        <import package="sun.security.krb5.internal.ccache.CCacheOutputStream"/>
        <class name="HostAddresses" line="14">
            <implements interface="Cloneable"/>
            <javadoc line="14">
                Implements the ASN.1 HostAddresses type.
                  &lt;xmp&gt;
                  HostAddresses   -- NOTE: subtly different from rfc1510,
                  -- but has a value mapping and encodes the same
                  ::= SEQUENCE OF HostAddress
                  HostAddress     ::= SEQUENCE  {
                  addr-type       [0] Int32,
                  address         [1] OCTET STRING
                  }
                  &lt;/xmp&gt;
                  &lt;p&gt;
                  This definition reflects the Network Working Group RFC 4120
                  specification available at
                  &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;
                  http://www.ietf.org/rfc/rfc4120.txt&lt;/a&gt;.                
            </javadoc>
            <declaration name="DEBUG" type="boolean" line="32"/>
            <declaration name="addresses" type="HostAddress[]" line="33"/>
            <declaration name="hashCode" type="int" line="34"/>
            <method name="HostAddresses" type="constructor" line="35">
                <params>
                    <param name="new_addresses" type="HostAddress[]"/>
                </params>
                <scope line="36">
                    <scope line="38">
                        <scope line="39"/>
                        <scope line="42"/>
                    </scope>
                </scope>
            </method>
            <method name="HostAddresses" type="constructor" line="48"/>
            <method name="HostAddresses" type="constructor" line="52">
                <params>
                    <param name="dummy" type="int"/>
                </params>
            </method>
            <method name="HostAddresses" type="constructor" line="54">
                <params>
                    <param name="serverPrincipal" type="PrincipalName"/>
                </params>
                <declaration name="components" type="String[]" line="55"/>
                <declaration name="host" type="String" line="57"/>
                <declaration name="addr" type="InetAddress" line="58"/>
                <declaration name="hAddrs" type="HostAddress" line="59"/>
                <scope line="60"/>
            </method>
            <method name="clone" type="Object" line="65">
                <declaration name="new_hostAddresses" type="HostAddresses" line="66"/>
                <scope line="67">
                    <scope line="69"/>
                </scope>
            </method>
            <method name="inList" type="boolean" line="75">
                <params>
                    <param name="addr" type="HostAddress"/>
                </params>
                <scope line="76"/>
            </method>
            <method name="hashCode" type="int" line="81">
                <scope line="82">
                    <declaration name="result" type="int" line="83"/>
                    <scope line="84">
                        <scope line="85"/>
                    </scope>
                </scope>
            </method>
            <method name="equals" type="boolean" line="93">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="94"/>
                <scope line="97"/>
                <declaration name="addrs" type="HostAddresses" line="100"/>
                <scope line="102"/>
            </method>
            <javadoc line="108">
                Constructs a new &lt;code&gt;HostAddresses&lt;/code&gt; object.                
                <param>
                    encoding a single DER-encoded value.                    
                </param>
                <exception>
                    Asn1Exception if an error occurs while decoding an
                      ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading
                      encoded data.                    
                </exception>
            </javadoc>
            <method name="HostAddresses" type="constructor" line="116">
                <params>
                    <param name="encoding" type="DerValue"/>
                </params>
                <declaration name="tempAddresses" type="Vector&amp;lt;HostAddress&amp;gt;" line="117"/>
                <declaration name="der" type="DerValue" line="118"/>
                <scope line="119"/>
                <scope line="123"/>
            </method>
            <javadoc line="128">
                Encodes a &lt;code&gt;HostAddresses&lt;/code&gt; object.                
                <return>
                    byte array of encoded &lt;code&gt;HostAddresses&lt;/code&gt; object.                    
                </return>
                <exception>
                    Asn1Exception if an error occurs while decoding an
                      ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading
                      encoded data.                    
                </exception>
            </javadoc>
            <method name="asn1Encode" type="byte[]" line="136">
                <declaration name="bytes" type="DerOutputStream" line="137"/>
                <declaration name="temp" type="DerOutputStream" line="138"/>
                <scope line="139"/>
            </method>
            <javadoc line="145">
                Parse (unmarshal) a &lt;code&gt;HostAddresses&lt;/code&gt; from a DER input stream.
                  This form
                  parsing might be used when expanding a value which is part of
                  a constructed sequence and uses explicitly tagged type.                
                <exception>
                    Asn1Exception if an Asn1Exception occurs.                    
                </exception>
                <param>
                    data the Der input stream value, which contains one or more
                      marshaled value.                    
                </param>
                <param>
                    explicitTag tag number.                    
                </param>
                <param>
                    optional indicates if this data field is optional.                    
                </param>
                <return>
                    an instance of &lt;code&gt;HostAddresses&lt;/code&gt;.                    
                </return>
            </javadoc>
            <method name="parse" type="HostAddresses" line="157">
                <params>
                    <param name="data" type="DerInputStream"/>
                    <param name="explicitTag" type="byte"/>
                    <param name="optional" type="boolean"/>
                </params>
                <declaration name="der" type="DerValue" line="159"/>
                <scope line="160"/>
                <scope line="163">
                    <declaration name="subDer" type="DerValue" line="164"/>
                </scope>
            </method>
            <javadoc line="168">
                Writes data field values in &lt;code&gt;HostAddresses&lt;/code&gt; in FCC
                  format to a &lt;code&gt;CCacheOutputStream&lt;/code&gt;.                
                <param>
                    cos a &lt;code&gt;CCacheOutputStream&lt;/code&gt; to be written to.                    
                </param>
                <exception>
                    IOException if an I/O exception occurs.                    
                </exception>
                <see>
                    sun.security.krb5.internal.ccache.CCacheOutputStream                    
                </see>
            </javadoc>
            <method name="writeAddrs" type="void" line="175">
                <params>
                    <param name="cos" type="CCacheOutputStream"/>
                </params>
                <scope line="177"/>
            </method>
            <method name="getInetAddresses" type="InetAddress[]" line="183">
                <declaration name="ipAddrs" type="ArrayList&amp;lt;InetAddress&amp;gt;" line="185"/>
                <scope line="186">
                    <scope line="187">
                        <scope line="188"/>
                    </scope>
                    <scope line="192"/>
                </scope>
                <declaration name="retVal" type="InetAddress[]" line="196"/>
            </method>
            <javadoc line="199">
                Returns all the IP addresses of the local host.                
            </javadoc>
            <method name="getLocalAddresses" type="HostAddresses" line="202">
                <declaration name="hostname" type="String" line="203"/>
                <declaration name="inetAddresses" type="InetAddress[]" line="204"/>
                <scope line="205">
                    <declaration name="localHost" type="InetAddress" line="206"/>
                    <declaration name="hAddresses" type="HostAddress[]" line="209"/>
                    <scope line="210"/>
                    <scope line="213">
                        <scope line="215"/>
                    </scope>
                </scope>
                <scope line="223"/>
            </method>
            <javadoc line="227">
                Creates a new HostAddresses instance from the supplied list
                  of InetAddresses.                
            </javadoc>
            <method name="HostAddresses" type="constructor" line="231">
                <params>
                    <param name="inetAddresses" type="InetAddress[]"/>
                </params>
                <scope line="232"/>
            </method>
        </class>
    </source>