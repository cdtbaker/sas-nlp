<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5">
        <import package="sun.security.krb5.internal"/>
        <import package="sun.security.krb5.internal.crypto.KeyUsage"/>
        <import package="sun.security.krb5.internal.crypto.EType"/>
        <import package="sun.security.util"/>
        <import package="java.io.IOException"/>
        <import package="java.util.Objects"/>
        <import package="javax.security.auth.kerberos.KeyTab"/>
        <import package="sun.security.jgss.krb5.Krb5Util"/>
        <class name="KrbAsRep" line="10">
            <extends class="KrbKdcRep"/>
            <javadoc line="10">
                This class encapsulates a AS-REP message that the KDC sends to the
                  client.                
            </javadoc>
            <declaration name="rep" type="ASRep" line="15"/>
            <declaration name="creds" type="Credentials" line="16"/>
            <declaration name="DEBUG" type="boolean" line="17"/>
            <method name="KrbAsRep" type="constructor" line="18">
                <params>
                    <param name="ibuf" type="byte[]"/>
                </params>
                <declaration name="encoding" type="DerValue" line="19"/>
                <scope line="20"/>
                <scope line="23">
                    <declaration name="err" type="KRBError" line="25"/>
                    <declaration name="errStr" type="String" line="26"/>
                    <declaration name="eText" type="String" line="27"/>
                    <scope line="28"/>
                    <declaration name="ke" type="KrbException" line="32"/>
                    <scope line="33"/>
                    <scope line="36">
                        <scope line="37"/>
                    </scope>
                </scope>
            </method>
            <method name="getPA" type="PAData[]" line="46"/>
            <javadoc line="49">
                Called by KrbAsReqBuilder to resolve a AS-REP message using a keytab.                
                <param>
                    ktab the keytab, not null                    
                </param>
                <param>
                    asReq the original AS-REQ sent, used to validate AS-REP                    
                </param>
                <param>
                    cname the user principal name, used to locate keys in ktab                    
                </param>
            </javadoc>
            <method name="decryptUsingKeyTab" type="void" line="55">
                <params>
                    <param name="ktab" type="KeyTab"/>
                    <param name="asReq" type="KrbAsReq"/>
                    <param name="cname" type="PrincipalName"/>
                </params>
                <declaration name="dkey" type="EncryptionKey" line="56"/>
                <declaration name="encPartKeyType" type="int" line="57"/>
                <declaration name="encPartKvno" type="Integer" line="58"/>
                <scope line="59"/>
                <scope line="62">
                    <scope line="63"/>
                </scope>
                <scope line="67"/>
            </method>
            <javadoc line="72">
                Called by KrbAsReqBuilder to resolve a AS-REP message using a password.                
                <param>
                    password user provided password. not null                    
                </param>
                <param>
                    asReq the original AS-REQ sent, used to validate AS-REP                    
                </param>
                <param>
                    cname the user principal name, used to provide salt                    
                </param>
            </javadoc>
            <method name="decryptUsingPassword" type="void" line="78">
                <params>
                    <param name="password" type="char[]"/>
                    <param name="asReq" type="KrbAsReq"/>
                    <param name="cname" type="PrincipalName"/>
                </params>
                <declaration name="encPartKeyType" type="int" line="79"/>
                <declaration name="snp" type="PAData.SaltAndParams" line="80"/>
                <declaration name="dkey" type="EncryptionKey" line="81"/>
            </method>
            <javadoc line="85">
                Decrypts encrypted content inside AS-REP. Called by initiator.                
                <param>
                    dkey the decryption key to use                    
                </param>
                <param>
                    asReq the original AS-REQ sent, used to validate AS-REP                    
                </param>
            </javadoc>
            <method name="decrypt" type="void" line="90">
                <params>
                    <param name="dkey" type="EncryptionKey"/>
                    <param name="asReq" type="KrbAsReq"/>
                </params>
                <declaration name="enc_as_rep_bytes" type="byte[]" line="91"/>
                <declaration name="enc_as_rep_part" type="byte[]" line="92"/>
                <declaration name="encoding" type="DerValue" line="93"/>
                <declaration name="enc_part" type="EncASRepPart" line="94"/>
                <declaration name="req" type="ASReq" line="97"/>
                <scope line="100"/>
            </method>
            <method name="getCreds" type="Credentials" line="104"/>
            <method name="getCCreds" type="sun.security.krb5.internal.ccache.Credentials" line="107"/>
        </class>
    </source>