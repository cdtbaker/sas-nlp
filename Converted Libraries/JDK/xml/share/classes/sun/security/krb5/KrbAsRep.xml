<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5">
        <import package="sun.security.krb5.internal"/>
        <import package="sun.security.krb5.internal.crypto.KeyUsage"/>
        <import package="sun.security.krb5.internal.crypto.EType"/>
        <import package="sun.security.util"/>
        <import package="java.io.IOException"/>
        <import package="java.util.Objects"/>
        <import package="javax.security.auth.kerberos.KeyTab"/>
        <import package="sun.security.jgss.krb5.Krb5Util"/>
        <class name="KrbAsRep" line="43">
            <extends class="KrbKdcRep"/>
            <comment line="50">
                The AS-REP message                
            </comment>
            <comment line="51">
                The Credentials provide by the AS-REP
                 message, created by initiator after calling
                 the decrypt() method                
            </comment>
            <comment line="90">
                KrbAsReqBuilder need to read back the PA for key generation                
            </comment>
            <javadoc line="43">
                This class encapsulates a AS-REP message that the KDC sends to the
                  client.                
            </javadoc>
            <declaration name="rep" type="ASRep" line="49"/>
            <declaration name="creds" type="Credentials" line="50"/>
            <declaration name="DEBUG" type="boolean" line="54"/>
            <method name="KrbAsRep" type="constructor" line="57">
                <params>
                    <param name="ibuf" type="byte[]"/>
                </params>
                <comment line="66">
                    pick up text sent by the server (if any)                    
                </comment>
                <comment line="76">
                    no text sent from server                    
                </comment>
                <comment line="82">
                    override default text with server text                    
                </comment>
                <declaration name="encoding" type="DerValue" line="58"/>
                <scope line="59"/>
                <scope line="61">
                    <declaration name="err" type="KRBError" line="63"/>
                    <declaration name="errStr" type="String" line="64"/>
                    <declaration name="eText" type="String" line="65"/>
                    <scope line="67"/>
                    <declaration name="ke" type="KrbException" line="73"/>
                    <scope line="74"/>
                    <scope line="77">
                        <scope line="78"/>
                    </scope>
                </scope>
            </method>
            <method name="getPA" type="PAData[]" line="90"/>
            <javadoc line="94">
                Called by KrbAsReqBuilder to resolve a AS-REP message using a keytab.                
                <param>
                    ktab the keytab, not null                    
                </param>
                <param>
                    asReq the original AS-REQ sent, used to validate AS-REP                    
                </param>
                <param>
                    cname the user principal name, used to locate keys in ktab                    
                </param>
            </javadoc>
            <method name="decryptUsingKeyTab" type="void" line="101">
                <params>
                    <param name="ktab" type="KeyTab"/>
                    <param name="asReq" type="KrbAsReq"/>
                    <param name="cname" type="PrincipalName"/>
                </params>
                <comment line="111">
                    Fallback to no kvno. In some cases, keytab is generated
                     not by sysadmin but Java&apos;s ktab command                    
                </comment>
                <declaration name="dkey" type="EncryptionKey" line="102"/>
                <declaration name="encPartKeyType" type="int" line="103"/>
                <declaration name="encPartKvno" type="Integer" line="104"/>
                <scope line="105"/>
                <scope line="108">
                    <scope line="109"/>
                </scope>
                <scope line="116"/>
            </method>
            <javadoc line="124">
                Called by KrbAsReqBuilder to resolve a AS-REP message using a password.                
                <param>
                    password user provided password. not null                    
                </param>
                <param>
                    asReq the original AS-REQ sent, used to validate AS-REP                    
                </param>
                <param>
                    cname the user principal name, used to provide salt                    
                </param>
            </javadoc>
            <method name="decryptUsingPassword" type="void" line="132">
                <params>
                    <param name="password" type="char[]"/>
                    <param name="asReq" type="KrbAsReq"/>
                    <param name="cname" type="PrincipalName"/>
                </params>
                <declaration name="encPartKeyType" type="int" line="133"/>
                <declaration name="snp" type="PAData.SaltAndParams" line="134"/>
                <declaration name="dkey" type="EncryptionKey" line="136"/>
            </method>
            <javadoc line="144">
                Decrypts encrypted content inside AS-REP. Called by initiator.                
                <param>
                    dkey the decryption key to use                    
                </param>
                <param>
                    asReq the original AS-REQ sent, used to validate AS-REP                    
                </param>
            </javadoc>
            <method name="decrypt" type="void" line="150">
                <params>
                    <param name="dkey" type="EncryptionKey"/>
                    <param name="asReq" type="KrbAsReq"/>
                </params>
                <declaration name="enc_as_rep_bytes" type="byte[]" line="151"/>
                <declaration name="enc_as_rep_part" type="byte[]" line="153"/>
                <declaration name="encoding" type="DerValue" line="155"/>
                <declaration name="enc_part" type="EncASRepPart" line="156"/>
                <declaration name="req" type="ASReq" line="160"/>
                <scope line="174"/>
            </method>
            <method name="getCreds" type="Credentials" line="180"/>
            <method name="getCCreds" type="sun.security.krb5.internal.ccache.Credentials" line="184"/>
        </class>
    </source>