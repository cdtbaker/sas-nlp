<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal">
        <import package="sun.security.krb5.Checksum"/>
        <import package="sun.security.krb5.Asn1Exception"/>
        <import package="sun.security.krb5.RealmException"/>
        <import package="sun.security.util"/>
        <import package="java.io.IOException"/>
        <import package="java.math.BigInteger"/>
        <class name="KRBSafe" line="40">
            <javadoc line="40">
                Implements the ASN.1 KRBSafe type.
                  &lt;xmp&gt;
                  KRB-SAFE        ::= [APPLICATION 20] SEQUENCE {
                  pvno            [0] INTEGER (5),
                  msg-type        [1] INTEGER (20),
                  safe-body       [2] KRB-SAFE-BODY,
                  cksum           [3] Checksum
                  }
                  &lt;/xmp&gt;
                  &lt;p&gt;
                  This definition reflects the Network Working Group RFC 4120
                  specifications available at
                  &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;
                  http://www.ietf.org/rfc/rfc4120.txt&lt;/a&gt;.                
            </javadoc>
            <declaration name="pvno" type="int" line="60"/>
            <declaration name="msgType" type="int" line="61"/>
            <declaration name="safeBody" type="KRBSafeBody" line="62"/>
            <declaration name="cksum" type="Checksum" line="63"/>
            <method name="KRBSafe" type="constructor" line="65">
                <params>
                    <param name="new_safeBody" type="KRBSafeBody"/>
                    <param name="new_cksum" type="Checksum"/>
                </params>
            </method>
            <method name="KRBSafe" type="constructor" line="73">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
            </method>
            <method name="KRBSafe" type="constructor" line="78">
                <params>
                    <param name="encoding" type="DerValue"/>
                </params>
            </method>
            <javadoc line="82">
                Initializes an KRBSafe object.                
                <param>
                    encoding a single DER-encoded value.                    
                </param>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
                <exception>
                    RealmException if an error occurs while parsing a Realm object.                    
                </exception>
                <exception>
                    KrbApErrException if the value read from the DER-encoded data
                      stream does not match the pre-defined value.                    
                </exception>
            </javadoc>
            <method name="init" type="void" line="92">
                <params>
                    <param name="encoding" type="DerValue"/>
                </params>
                <declaration name="der" type="DerValue" line="93"/>
                <scope line="102"/>
                <scope line="110"/>
            </method>
            <javadoc line="124">
                Encodes an KRBSafe object.                
                <return>
                    byte array of encoded KRBSafe object.                    
                </return>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
            </javadoc>
            <method name="asn1Encode" type="byte[]" line="130">
                <declaration name="temp" type="DerOutputStream" line="131"/>
                <declaration name="bytes" type="DerOutputStream" line="132"/>
            </method>
        </class>
    </source>