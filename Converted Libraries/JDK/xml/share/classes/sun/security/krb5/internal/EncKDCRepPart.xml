<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal">
        <import package="sun.security.krb5"/>
        <import package="sun.security.krb5.EncryptionKey"/>
        <import package="sun.security.util"/>
        <import package="java.util.Vector"/>
        <import package="java.io.IOException"/>
        <import package="java.math.BigInteger"/>
        <class name="EncKDCRepPart" line="40">
            <comment line="72">
                optional                
            </comment>
            <comment line="75">
                optional                
            </comment>
            <comment line="77">
                optional                
            </comment>
            <comment line="80">
                optional                
            </comment>
            <comment line="81">
                not included in sequence                
            </comment>
            <javadoc line="40">
                Implements the ASN.1 EncKDCRepPart type.
                  &lt;xmp&gt;
                  EncKDCRepPart        ::= SEQUENCE {
                  key             [0] EncryptionKey,
                  last-req        [1] LastReq,
                  nonce           [2] UInt32,
                  key-expiration  [3] KerberosTime OPTIONAL,
                  flags           [4] TicketFlags,
                  authtime        [5] KerberosTime,
                  starttime       [6] KerberosTime OPTIONAL,
                  endtime         [7] KerberosTime,
                  renew-till      [8] KerberosTime OPTIONAL,
                  srealm          [9] Realm,
                  sname           [10] PrincipalName,
                  caddr           [11] HostAddresses OPTIONAL
                  }
                  &lt;/xmp&gt;
                  &lt;p&gt;
                  This definition reflects the Network Working Group RFC 4120
                  specification available at
                  &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;
                  http://www.ietf.org/rfc/rfc4120.txt&lt;/a&gt;.                
            </javadoc>
            <declaration name="key" type="EncryptionKey" line="68"/>
            <declaration name="lastReq" type="LastReq" line="69"/>
            <declaration name="nonce" type="int" line="70"/>
            <declaration name="keyExpiration" type="KerberosTime" line="71"/>
            <declaration name="flags" type="TicketFlags" line="72"/>
            <declaration name="authtime" type="KerberosTime" line="73"/>
            <declaration name="starttime" type="KerberosTime" line="74"/>
            <declaration name="endtime" type="KerberosTime" line="75"/>
            <declaration name="renewTill" type="KerberosTime" line="76"/>
            <declaration name="srealm" type="Realm" line="77"/>
            <declaration name="sname" type="PrincipalName" line="78"/>
            <declaration name="caddr" type="HostAddresses" line="79"/>
            <declaration name="msgType" type="int" line="80"/>
            <method name="EncKDCRepPart" type="constructor" line="95">
                <params>
                    <param name="new_key" type="EncryptionKey"/>
                    <param name="new_lastReq" type="LastReq"/>
                    <param name="new_nonce" type="int"/>
                    <param name="new_keyExpiration" type="KerberosTime"/>
                    <param name="new_flags" type="TicketFlags"/>
                    <param name="new_authtime" type="KerberosTime"/>
                    <param name="new_starttime" type="KerberosTime"/>
                    <param name="new_endtime" type="KerberosTime"/>
                    <param name="new_renewTill" type="KerberosTime"/>
                    <param name="new_srealm" type="Realm"/>
                    <param name="new_sname" type="PrincipalName"/>
                    <param name="new_caddr" type="HostAddresses"/>
                    <param name="new_msgType" type="int"/>
                </params>
            </method>
            <method name="EncKDCRepPart" type="constructor" line="111"/>
            <method name="EncKDCRepPart" type="constructor" line="115">
                <params>
                    <param name="data" type="byte[]"/>
                    <param name="rep_type" type="int"/>
                </params>
            </method>
            <method name="EncKDCRepPart" type="constructor" line="120">
                <params>
                    <param name="encoding" type="DerValue"/>
                    <param name="rep_type" type="int"/>
                </params>
            </method>
            <javadoc line="124">
                Initializes an EncKDCRepPart object.                
                <param>
                    encoding a single DER-encoded value.                    
                </param>
                <param>
                    rep_type type of the encrypted reply message.                    
                </param>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
                <exception>
                    RealmException if an error occurs while decoding an Realm object.                    
                </exception>
            </javadoc>
            <method name="init" type="void" line="134">
                <params>
                    <param name="encoding" type="DerValue"/>
                    <param name="rep_type" type="int"/>
                </params>
                <comment line="137">
                    implementations return the incorrect tag value, so
                    we don&apos;t use the above line; instead we use the following                    
                </comment>
                <declaration name="der" type="DerValue" line="135"/>
                <scope line="140"/>
                <scope line="144"/>
                <scope line="150"/>
                <scope line="152"/>
                <scope line="163"/>
                <scope line="166"/>
            </method>
            <javadoc line="171">
                Encodes an EncKDCRepPart object.                
                <param>
                    rep_type type of encrypted reply message.                    
                </param>
                <return>
                    byte array of encoded EncKDCRepPart object.                    
                </return>
                <exception>
                    Asn1Exception if an error occurs while decoding an ASN1 encoded data.                    
                </exception>
                <exception>
                    IOException if an I/O error occurs while reading encoded data.                    
                </exception>
            </javadoc>
            <method name="asn1Encode" type="byte[]" line="179">
                <params>
                    <param name="rep_type" type="int"/>
                </params>
                <comment line="217">
                    should use the rep_type to build the encoding
                    but other implementations do not; it is ignored and
                    the cached msgType is used instead                    
                </comment>
                <declaration name="temp" type="DerOutputStream" line="180"/>
                <declaration name="bytes" type="DerOutputStream" line="181"/>
                <scope line="190"/>
                <scope line="198"/>
                <scope line="204"/>
                <scope line="212"/>
            </method>
        </class>
    </source>