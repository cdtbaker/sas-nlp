<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.timestamp">
        <import package="java.io.IOException"/>
        <import package="java.math.BigInteger"/>
        <import package="java.util.Date"/>
        <import package="sun.security.util.DerValue"/>
        <import package="sun.security.util.ObjectIdentifier"/>
        <import package="sun.security.x509.AlgorithmId"/>
        <class name="TimestampToken" line="35">
            <comment line="110">
                should only be used internally, otherwise return a clone                
            </comment>
            <comment line="119">
                Parses the timestamp token info.
                
                 @param timestampTokenInfo A buffer containing an ASN.1 BER encoded
                                           TSTInfo.
                 @throws IOException The exception is thrown if a problem is encountered
                         while parsing.                
            </comment>
            <javadoc line="35">
                This class provides the timestamp token info resulting from a successful
                  timestamp request, as defined in
                  &lt;a href=&quot;http://www.ietf.org/rfc/rfc3161.txt&quot;&gt;RFC 3161&lt;/a&gt;.
                  The timestampTokenInfo ASN.1 type has the following definition:
                  &lt;pre&gt;
                  TSTInfo ::= SEQUENCE {
                  version                INTEGER  { v1(1) },
                  policy                 TSAPolicyId,
                  messageImprint         MessageImprint,
                  -- MUST have the same value as the similar field in
                  -- TimeStampReq
                  serialNumber           INTEGER,
                  -- Time-Stamping users MUST be ready to accommodate integers
                  -- up to 160 bits.
                  genTime                GeneralizedTime,
                  accuracy               Accuracy                 OPTIONAL,
                  ordering               BOOLEAN             DEFAULT FALSE,
                  nonce                  INTEGER                  OPTIONAL,
                  -- MUST be present if the similar field was present
                  -- in TimeStampReq.  In that case it MUST have the same value.
                  tsa                    [0] GeneralName          OPTIONAL,
                  extensions             [1] IMPLICIT Extensions  OPTIONAL }
                  Accuracy ::= SEQUENCE {
                  seconds        INTEGER           OPTIONAL,
                  millis     [0] INTEGER  (1..999) OPTIONAL,
                  micros     [1] INTEGER  (1..999) OPTIONAL  }
                  &lt;/pre&gt;                
                <since>
                    1.5                    
                </since>
                <see>
                    Timestamper                    
                </see>
                <author>
                    Vincent Ryan                    
                </author>
            </javadoc>
            <declaration name="version" type="int" line="75"/>
            <declaration name="policy" type="ObjectIdentifier" line="76"/>
            <declaration name="serialNumber" type="BigInteger" line="77"/>
            <declaration name="hashAlgorithm" type="AlgorithmId" line="78"/>
            <declaration name="hashedMessage" type="byte[]" line="79"/>
            <declaration name="genTime" type="Date" line="80"/>
            <declaration name="nonce" type="BigInteger" line="81"/>
            <javadoc line="83">
                Constructs an object to store a timestamp token.                
                <param>
                    status A buffer containing the ASN.1 BER encoding of the
                      TSTInfo element defined in RFC 3161.                    
                </param>
            </javadoc>
            <method name="TimestampToken" type="constructor" line="89">
                <params>
                    <param name="timestampTokenInfo" type="byte[]"/>
                </params>
                <scope line="90"/>
            </method>
            <javadoc line="96">
                Extract the date and time from the timestamp token.                
                <return>
                    The date and time when the timestamp was generated.                    
                </return>
            </javadoc>
            <method name="getDate" type="Date" line="101"/>
            <method name="getHashAlgorithm" type="AlgorithmId" line="105"/>
            <method name="getHashedMessage" type="byte[]" line="110"/>
            <method name="getNonce" type="BigInteger" line="114"/>
            <method name="parse" type="void" line="126">
                <params>
                    <param name="timestampTokenInfo" type="byte[]"/>
                </params>
                <comment line="132">
                    Parse version                    
                </comment>
                <comment line="135">
                    Parse policy                    
                </comment>
                <comment line="138">
                    Parse messageImprint                    
                </comment>
                <comment line="143">
                    Parse serialNumber                    
                </comment>
                <comment line="146">
                    Parse genTime                    
                </comment>
                <comment line="149">
                    Parse optional elements, if present                    
                </comment>
                <comment line="152">
                    must be the nonce                    
                </comment>
                <comment line="157">
                    Additional fields:                    
                </comment>
                <comment line="158">
                    Parse accuracy                    
                </comment>
                <comment line="159">
                    Parse ordering                    
                </comment>
                <comment line="160">
                    Parse tsa                    
                </comment>
                <comment line="161">
                    Parse extensions                    
                </comment>
                <declaration name="tstInfo" type="DerValue" line="128"/>
                <scope line="129"/>
                <declaration name="messageImprint" type="DerValue" line="139"/>
                <scope line="150">
                    <declaration name="d" type="DerValue" line="151"/>
                    <scope line="152"/>
                </scope>
            </method>
        </class>
    </source>