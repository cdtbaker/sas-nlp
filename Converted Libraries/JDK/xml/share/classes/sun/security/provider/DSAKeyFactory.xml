<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.provider">
        <import package="java.util"/>
        <import package="java.lang"/>
        <import package="java.security.Key"/>
        <import package="java.security.PublicKey"/>
        <import package="java.security.PrivateKey"/>
        <import package="java.security.KeyFactorySpi"/>
        <import package="java.security.InvalidKeyException"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.security.interfaces.DSAParams"/>
        <import package="java.security.spec.DSAPublicKeySpec"/>
        <import package="java.security.spec.DSAPrivateKeySpec"/>
        <import package="java.security.spec.KeySpec"/>
        <import package="java.security.spec.InvalidKeySpecException"/>
        <import package="java.security.spec.X509EncodedKeySpec"/>
        <import package="java.security.spec.PKCS8EncodedKeySpec"/>
        <import package="sun.security.action.GetPropertyAction"/>
        <class name="DSAKeyFactory" line="19">
            <extends class="KeyFactorySpi"/>
            <javadoc line="19">
                This class implements the DSA key factory of the Sun provider.                
                <author>
                    Jan Luehe                    
                </author>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <declaration name="SERIAL_INTEROP" type="boolean" line="25"/>
            <declaration name="SERIAL_PROP" type="String" line="26"/>
            <scope line="27">
                <declaration name="prop" type="String" line="28"/>
            </scope>
            <javadoc line="31">
                Generates a public key object from the provided key specification
                  (key material).                
                <param>
                    keySpec the specification (key material) of the public key                    
                </param>
                <return>
                    the public key                    
                </return>
                <exception>
                    InvalidKeySpecException if the given key specification
                      is inappropriate for this key factory to produce a public key.                    
                </exception>
            </javadoc>
            <method name="engineGeneratePublic" type="PublicKey" line="39">
                <params>
                    <param name="keySpec" type="KeySpec"/>
                </params>
                <scope line="40">
                    <scope line="41">
                        <declaration name="dsaPubKeySpec" type="DSAPublicKeySpec" line="42"/>
                        <scope line="43"/>
                        <scope line="46"/>
                    </scope>
                    <scope line="50">
                        <scope line="51"/>
                        <scope line="54"/>
                    </scope>
                    <scope line="58"/>
                </scope>
                <scope line="62"/>
            </method>
            <javadoc line="66">
                Generates a private key object from the provided key specification
                  (key material).                
                <param>
                    keySpec the specification (key material) of the private key                    
                </param>
                <return>
                    the private key                    
                </return>
                <exception>
                    InvalidKeySpecException if the given key specification
                      is inappropriate for this key factory to produce a private key.                    
                </exception>
            </javadoc>
            <method name="engineGeneratePrivate" type="PrivateKey" line="74">
                <params>
                    <param name="keySpec" type="KeySpec"/>
                </params>
                <scope line="75">
                    <scope line="76">
                        <declaration name="dsaPrivKeySpec" type="DSAPrivateKeySpec" line="77"/>
                    </scope>
                    <scope line="80"/>
                    <scope line="83"/>
                </scope>
                <scope line="87"/>
            </method>
            <javadoc line="91">
                Returns a specification (key material) of the given key object
                  in the requested format.                
                <param>
                    key the key                    
                </param>
                <param>
                    keySpec the requested format in which the key material shall be
                      returned                    
                </param>
                <return>
                    the underlying key specification (key material) in the
                      requested format                    
                </return>
                <exception>
                    InvalidKeySpecException if the requested key specification is
                      inappropriate for the given key, or the given key cannot be processed
                      (e.g., the given key has an unrecognized algorithm or format).                    
                </exception>
            </javadoc>
            <method name="engineGetKeySpec" type="T" line="103">
                <params>
                    <param name="key" type="Key"/>
                    <param name="keySpec" type="Class<T>"/>
                </params>
                <declaration name="params" type="DSAParams" line="104"/>
                <scope line="105">
                    <scope line="106">
                        <declaration name="dsaPubKeySpec" type="Class&lt;?&gt;" line="107"/>
                        <declaration name="x509KeySpec" type="Class&lt;?&gt;" line="108"/>
                        <scope line="109">
                            <declaration name="dsaPubKey" type="java.security.interfaces.DSAPublicKey" line="110"/>
                        </scope>
                        <scope line="114"/>
                        <scope line="117"/>
                    </scope>
                    <scope line="121">
                        <declaration name="dsaPrivKeySpec" type="Class&lt;?&gt;" line="122"/>
                        <declaration name="pkcs8KeySpec" type="Class&lt;?&gt;" line="123"/>
                        <scope line="124">
                            <declaration name="dsaPrivKey" type="java.security.interfaces.DSAPrivateKey" line="125"/>
                        </scope>
                        <scope line="129"/>
                        <scope line="132"/>
                    </scope>
                    <scope line="136"/>
                </scope>
                <scope line="140"/>
            </method>
            <javadoc line="144">
                Translates a key object, whose provider may be unknown or potentially
                  untrusted, into a corresponding key object of this key factory.                
                <param>
                    key the key whose provider is unknown or untrusted                    
                </param>
                <return>
                    the translated key                    
                </return>
                <exception>
                    InvalidKeyException if the given key cannot be processed by
                      this key factory.                    
                </exception>
            </javadoc>
            <method name="engineTranslateKey" type="Key" line="152">
                <params>
                    <param name="key" type="Key"/>
                </params>
                <scope line="153">
                    <scope line="154">
                        <scope line="155"/>
                        <declaration name="dsaPubKeySpec" type="DSAPublicKeySpec" line="158"/>
                    </scope>
                    <scope line="161">
                        <scope line="162"/>
                        <declaration name="dsaPrivKeySpec" type="DSAPrivateKeySpec" line="165"/>
                    </scope>
                    <scope line="168"/>
                </scope>
                <scope line="172"/>
            </method>
        </class>
    </source>