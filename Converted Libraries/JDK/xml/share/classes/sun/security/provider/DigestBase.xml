<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.provider">
        <import package="java.security.MessageDigestSpi"/>
        <import package="java.security.DigestException"/>
        <import package="java.security.ProviderException"/>
        <class name="DigestBase" line="5">
            <extends class="MessageDigestSpi"/>
            <implements interface="Cloneable"/>
            <javadoc line="5">
                Common base message digest implementation for the Sun provider.
                  It implements all the JCA methods as suitable for a Java message digest
                  implementation of an algorithm based on a compression function (as all
                  commonly used algorithms are). The individual digest subclasses only need to
                  implement the following methods:
                  . abstract void implCompress(byte[] b, int ofs);
                  . abstract void implDigest(byte[] out, int ofs);
                  . abstract void implReset();
                  . public abstract Object clone();
                  See the inline documentation for details.                
                <since>
                    1.5                    
                </since>
                <author>
                    Andreas Sterbenz                    
                </author>
            </javadoc>
            <declaration name="oneByte" type="byte[]" line="20"/>
            <declaration name="algorithm" type="String" line="21"/>
            <declaration name="digestLength" type="int" line="22"/>
            <declaration name="blockSize" type="int" line="23"/>
            <declaration name="buffer" type="byte[]" line="24"/>
            <declaration name="bufOfs" type="int" line="25"/>
            <declaration name="bytesProcessed" type="long" line="26"/>
            <javadoc line="27">
                Main constructor.                
            </javadoc>
            <method name="DigestBase" type="constructor" line="30">
                <params>
                    <param name="algorithm" type="String"/>
                    <param name="digestLength" type="int"/>
                    <param name="blockSize" type="int"/>
                </params>
            </method>
            <javadoc line="37">
                Constructor for cloning. Replicates common data.                
            </javadoc>
            <method name="DigestBase" type="constructor" line="40">
                <params>
                    <param name="base" type="DigestBase"/>
                </params>
            </method>
            <method name="engineGetDigestLength" type="int" line="48"/>
            <method name="engineUpdate" type="void" line="51">
                <params>
                    <param name="b" type="byte"/>
                </params>
                <scope line="52"/>
            </method>
            <method name="engineUpdate" type="void" line="58">
                <params>
                    <param name="b" type="byte[]"/>
                    <param name="ofs" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="59"/>
                <scope line="62"/>
                <scope line="65"/>
                <scope line="69">
                    <declaration name="n" type="int" line="70"/>
                    <scope line="75"/>
                </scope>
                <scope line="80"/>
                <scope line="85"/>
            </method>
            <method name="engineReset" type="void" line="90">
                <scope line="91"/>
            </method>
            <method name="engineDigest" type="byte[]" line="98">
                <declaration name="b" type="byte[]" line="99"/>
                <scope line="100"/>
                <scope line="103"/>
            </method>
            <method name="engineDigest" type="int" line="108">
                <params>
                    <param name="out" type="byte[]"/>
                    <param name="ofs" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="109"/>
                <scope line="112"/>
                <scope line="115"/>
            </method>
            <method name="implCompress" type="void" line="122"/>
            <javadoc line="122">
                Core compression function. Processes blockSize bytes at a time
                  and updates the state of this object.                
            </javadoc>
            <method name="implDigest" type="void" line="127"/>
            <javadoc line="127">
                Return the digest. Subclasses do not need to reset() themselves,
                  DigestBase calls implReset() when necessary.                
            </javadoc>
            <method name="implReset" type="void" line="132"/>
            <javadoc line="132">
                Reset subclass specific state to their initial values. DigestBase
                  calls this method when necessary.                
            </javadoc>
            <method name="clone" type="Object" line="137"/>
            <javadoc line="137">
                Clone this digest. Should be implemented as &quot;return new MyDigest(this)&quot;.
                  That constructor should first call &quot;super(baseDigest)&quot; and then copy
                  subclass specific data.                
            </javadoc>
            <declaration name="padding" type="byte[]" line="143"/>
            <scope line="144"/>
        </class>
    </source>