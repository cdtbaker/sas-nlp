<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.provider">
        <import package="java.security"/>
        <import package="sun.security.provider.ByteArrayAccess"/>
        <class name="MD4" line="4">
            <extends class="DigestBase"/>
            <javadoc line="4">
                The MD4 class is used to compute an MD4 message digest over a given
                  buffer of bytes. It is an implementation of the RSA Data Security Inc
                  MD4 algorithim as described in internet RFC 1320.
                  &lt;p&gt;The MD4 algorithm is very weak and should not be used unless it is
                  unavoidable. Therefore, it is not registered in our standard providers. To
                  obtain an implementation, call the static getInstance() method in this
                  class.                
                <author>
                    Andreas Sterbenz                    
                </author>
            </javadoc>
            <declaration name="state" type="int[]" line="15"/>
            <declaration name="x" type="int[]" line="16"/>
            <declaration name="S11" type="int" line="17"/>
            <declaration name="S12" type="int" line="18"/>
            <declaration name="S13" type="int" line="19"/>
            <declaration name="S14" type="int" line="20"/>
            <declaration name="S21" type="int" line="21"/>
            <declaration name="S22" type="int" line="22"/>
            <declaration name="S23" type="int" line="23"/>
            <declaration name="S24" type="int" line="24"/>
            <declaration name="S31" type="int" line="25"/>
            <declaration name="S32" type="int" line="26"/>
            <declaration name="S33" type="int" line="27"/>
            <declaration name="S34" type="int" line="28"/>
            <declaration name="md4Provider" type="Provider" line="29"/>
            <scope line="30">
                <anonymous_class line="31"/>
                <anonymous_class line="34">
                    <method name="run" type="Void" line="35"/>
                </anonymous_class>
            </scope>
            <method name="getInstance" type="MessageDigest" line="42">
                <scope line="43"/>
                <scope line="46"/>
            </method>
            <method name="MD4" type="constructor" line="50"/>
            <method name="MD4" type="constructor" line="56">
                <params>
                    <param name="base" type="MD4"/>
                </params>
            </method>
            <method name="clone" type="Object" line="61"/>
            <javadoc line="64">
                Reset the state of this object.                
            </javadoc>
            <method name="implReset" type="void" line="67"/>
            <javadoc line="73">
                Perform the final computations, any buffered bytes are added
                  to the digest, the count is added to the digest, and the resulting
                  digest is stored.                
            </javadoc>
            <method name="implDigest" type="void" line="78">
                <params>
                    <param name="out" type="byte[]"/>
                    <param name="ofs" type="int"/>
                </params>
                <declaration name="bitsProcessed" type="long" line="79"/>
                <declaration name="index" type="int" line="80"/>
                <declaration name="padLen" type="int" line="81"/>
            </method>
            <method name="FF" type="int" line="88">
                <params>
                    <param name="a" type="int"/>
                    <param name="b" type="int"/>
                    <param name="c" type="int"/>
                    <param name="d" type="int"/>
                    <param name="x" type="int"/>
                    <param name="s" type="int"/>
                </params>
            </method>
            <method name="GG" type="int" line="92">
                <params>
                    <param name="a" type="int"/>
                    <param name="b" type="int"/>
                    <param name="c" type="int"/>
                    <param name="d" type="int"/>
                    <param name="x" type="int"/>
                    <param name="s" type="int"/>
                </params>
            </method>
            <method name="HH" type="int" line="96">
                <params>
                    <param name="a" type="int"/>
                    <param name="b" type="int"/>
                    <param name="c" type="int"/>
                    <param name="d" type="int"/>
                    <param name="x" type="int"/>
                    <param name="s" type="int"/>
                </params>
            </method>
            <javadoc line="100">
                This is where the functions come together as the generic MD4
                  transformation operation. It consumes sixteen
                  bytes from the buffer, beginning at the specified offset.                
            </javadoc>
            <method name="implCompress" type="void" line="105">
                <params>
                    <param name="buf" type="byte[]"/>
                    <param name="ofs" type="int"/>
                </params>
                <declaration name="a" type="int" line="107"/>
                <declaration name="b" type="int" line="108"/>
                <declaration name="c" type="int" line="109"/>
                <declaration name="d" type="int" line="110"/>
            </method>
        </class>
    </source>