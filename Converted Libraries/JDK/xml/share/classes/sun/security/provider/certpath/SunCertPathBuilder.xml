<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.provider.certpath">
        <import package="java.io.IOException"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.GeneralSecurityException"/>
        <import package="java.security.InvalidAlgorithmParameterException"/>
        <import package="java.security.Principal"/>
        <import package="java.security.PublicKey"/>
        <import package="java.security.cert"/>
        <import package="java.security.cert.PKIXReason"/>
        <import package="java.security.interfaces.DSAPublicKey"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Collection"/>
        <import package="java.util.Collections"/>
        <import package="java.util.Comparator"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="java.util.LinkedList"/>
        <import package="java.util.Set"/>
        <import package="javax.security.auth.x500.X500Principal"/>
        <import package="sun.security.action.GetBooleanSecurityPropertyAction"/>
        <import package="sun.security.x509.X500Name"/>
        <import package="sun.security.x509.PKIXExtensions"/>
        <import package="sun.security.util.Debug"/>
        <class name="SunCertPathBuilder" line="25">
            <extends class="CertPathBuilderSpi"/>
            <javadoc line="25">
                This class is able to build certification paths in either the forward
                  or reverse directions.
                  &lt;p&gt; If successful, it returns a certification path which has succesfully
                  satisfied all the constraints and requirements specified in the
                  PKIXBuilderParameters object and has been validated according to the PKIX
                  path validation algorithm defined in RFC 3280.
                  &lt;p&gt; This implementation uses a depth-first search approach to finding
                  certification paths. If it comes to a point in which it cannot find
                  any more certificates leading to the target OR the path length is too long
                  it backtracks to previous paths until the target has been found or
                  all possible paths have been exhausted.
                  &lt;p&gt; This implementation is not thread-safe.                
                <since>
                    1.4                    
                </since>
                <author>
                    Sean Mullan                    
                </author>
                <author>
                    Yassir Elley                    
                </author>
            </javadoc>
            <declaration name="debug" type="Debug" line="43"/>
            <declaration name="buildParams" type="PKIXBuilderParameters" line="44"/>
            <declaration name="cf" type="CertificateFactory" line="45"/>
            <declaration name="pathCompleted" type="boolean" line="46"/>
            <declaration name="targetSubjectDN" type="X500Principal" line="47"/>
            <declaration name="policyTreeResult" type="PolicyNode" line="48"/>
            <declaration name="trustAnchor" type="TrustAnchor" line="49"/>
            <declaration name="finalPublicKey" type="PublicKey" line="50"/>
            <declaration name="targetSel" type="X509CertSelector" line="51"/>
            <declaration name="orderedCertStores" type="List&lt;CertStore&gt;" line="52"/>
            <declaration name="onlyEECert" type="boolean" line="53"/>
            <javadoc line="54">
                Create an instance of &lt;code&gt;SunCertPathBuilder&lt;/code&gt;.                
                <throws>
                    CertPathBuilderException if an error occurs                    
                </throws>
            </javadoc>
            <method name="SunCertPathBuilder" type="constructor" line="58">
                <scope line="59"/>
                <scope line="62"/>
            </method>
            <javadoc line="67">
                Attempts to build a certification path using the Sun build
                  algorithm from a trusted anchor(s) to a target subject, which must both
                  be specified in the input parameter set. By default, this method will
                  attempt to build in the forward direction. In order to build in the
                  reverse direction, the caller needs to pass in an instance of
                  SunCertPathBuilderParameters with the buildForward flag set to false.
                  &lt;p&gt;The certification path that is constructed is validated
                  according to the PKIX specification.                
                <param>
                    params the parameter set for building a path. Must be an instance
                      of <code>PKIXBuilderParameters</code>.                    
                </param>
                <return>
                    a certification path builder result.                    
                </return>
                <exception>
                    CertPathBuilderException Exception thrown if builder is
                      unable to build a complete certification path from the trusted anchor(s)
                      to the target subject.                    
                </exception>
                <throws>
                    InvalidAlgorithmParameterException if the given parameters are
                      inappropriate for this certification path builder.                    
                </throws>
            </javadoc>
            <method name="engineBuild" type="CertPathBuilderResult" line="85">
                <params>
                    <param name="params" type="CertPathParameters"/>
                </params>
                <scope line="86"/>
                <scope line="89"/>
                <declaration name="buildForward" type="boolean" line="92"/>
                <scope line="93"/>
                <scope line="97">
                    <scope line="98"/>
                </scope>
                <declaration name="sel" type="CertSelector" line="102"/>
                <scope line="103"/>
                <scope line="108">
                    <declaration name="targetCert" type="X509Certificate" line="109"/>
                    <scope line="110"/>
                </scope>
                <scope line="116"/>
                <scope line="119"/>
                <declaration name="adjList" type="List&lt;List&lt;Vertex&gt;&gt;" line="122"/>
                <declaration name="result" type="CertPathBuilderResult" line="123"/>
                <scope line="124">
                    <scope line="125"/>
                    <scope line="130"/>
                </scope>
            </method>
            <method name="buildCertPath" type="CertPathBuilderResult" line="136">
                <params>
                    <param name="buildForward" type="boolean"/>
                    <param name="searchAllCertStores" type="boolean"/>
                    <param name="adjList" type="List<List<Vertex>>"/>
                </params>
                <declaration name="certPathList" type="LinkedList&lt;X509Certificate&gt;" line="141"/>
                <scope line="142">
                    <scope line="143"/>
                    <scope line="146"/>
                </scope>
                <scope line="150">
                    <scope line="151"/>
                </scope>
                <scope line="157">
                    <scope line="158"/>
                </scope>
                <scope line="164">
                    <scope line="165"/>
                </scope>
            </method>
            <method name="buildReverse" type="void" line="173">
                <params>
                    <param name="adjacencyList" type="List<List<Vertex>>"/>
                    <param name="certPathList" type="LinkedList<X509Certificate>"/>
                </params>
                <scope line="174"/>
                <declaration name="currentState" type="ReverseState" line="178"/>
                <declaration name="iter" type="Iterator&lt;TrustAnchor&gt;" line="181"/>
                <scope line="182">
                    <declaration name="anchor" type="TrustAnchor" line="183"/>
                    <scope line="184"/>
                    <scope line="194"/>
                    <scope line="197"/>
                </scope>
                <scope line="203"/>
            </method>
            <method name="buildForward" type="void" line="208">
                <params>
                    <param name="adjacencyList" type="List<List<Vertex>>"/>
                    <param name="certPathList" type="LinkedList<X509Certificate>"/>
                    <param name="searchAllCertStores" type="boolean"/>
                </params>
                <scope line="209"/>
                <declaration name="currentState" type="ForwardState" line="212"/>
            </method>
            <method name="depthFirstSearchForward" type="void" line="219">
                <params>
                    <param name="dN" type="X500Principal"/>
                    <param name="currentState" type="ForwardState"/>
                    <param name="builder" type="ForwardBuilder"/>
                    <param name="adjList" type="List<List<Vertex>>"/>
                    <param name="certPathList" type="LinkedList<X509Certificate>"/>
                </params>
                <scope line="220"/>
                <declaration name="vertices" type="List&lt;Vertex&gt;" line="223"/>
                <scope line="224"/>
                <scope line="227">
                    <declaration name="nextState" type="ForwardState" line="228"/>
                    <declaration name="cert" type="X509Certificate" line="229"/>
                    <scope line="230"/>
                    <scope line="233">
                        <scope line="234"/>
                    </scope>
                    <scope line="241">
                        <declaration name="basicChecker" type="BasicChecker" line="242"/>
                        <declaration name="appendedCerts" type="ArrayList&lt;X509Certificate&gt;" line="244"/>
                        <scope line="245"/>
                        <declaration name="initExpPolSet" type="HashSet&lt;String&gt;" line="248"/>
                        <declaration name="rootNode" type="PolicyNodeImpl" line="250"/>
                        <declaration name="policyChecker" type="PolicyChecker" line="251"/>
                        <declaration name="userCheckers" type="List&lt;PKIXCertPathChecker&gt;" line="252"/>
                        <declaration name="mustCheck" type="int" line="253"/>
                        <scope line="258">
                            <declaration name="rootKey" type="PublicKey" line="259"/>
                            <scope line="260"/>
                            <declaration name="anchor" type="TrustAnchor" line="264"/>
                            <scope line="268"/>
                        </scope>
                        <scope line="273">
                            <declaration name="currCert" type="X509Certificate" line="274"/>
                            <declaration name="unresCritExts" type="Set&lt;String&gt;" line="276"/>
                            <scope line="277"/>
                            <scope line="280">
                                <declaration name="currChecker" type="PKIXCertPathChecker" line="281"/>
                                <scope line="282">
                                    <scope line="283">
                                        <scope line="285"/>
                                    </scope>
                                    <scope line="289"/>
                                    <scope line="292"/>
                                </scope>
                            </scope>
                            <scope line="299">
                                <scope line="300">
                                    <declaration name="suppExts" type="Set&lt;String&gt;" line="301"/>
                                    <scope line="302"/>
                                </scope>
                            </scope>
                            <scope line="307">
                                <scope line="317"/>
                            </scope>
                        </scope>
                        <scope line="326"/>
                        <scope line="329">
                            <declaration name="finalCert" type="Certificate" line="330"/>
                            <scope line="331"/>
                            <scope line="334"/>
                        </scope>
                    </scope>
                    <scope line="342"/>
                    <scope line="349"/>
                    <scope line="352"/>
                </scope>
            </method>
            <method name="depthFirstSearchReverse" type="void" line="358">
                <params>
                    <param name="dN" type="X500Principal"/>
                    <param name="currentState" type="ReverseState"/>
                    <param name="builder" type="ReverseBuilder"/>
                    <param name="adjList" type="List<List<Vertex>>"/>
                    <param name="certPathList" type="LinkedList<X509Certificate>"/>
                </params>
                <declaration name="vertices" type="List&lt;Vertex&gt;" line="360"/>
                <scope line="362">
                    <declaration name="nextState" type="ReverseState" line="363"/>
                    <declaration name="cert" type="X509Certificate" line="364"/>
                    <scope line="365"/>
                    <scope line="368"/>
                    <scope line="375">
                        <declaration name="rootNode" type="PolicyNodeImpl" line="378"/>
                        <scope line="380"/>
                        <scope line="385"/>
                    </scope>
                    <scope line="394"/>
                    <scope line="397"/>
                </scope>
            </method>
            <method name="addVertices" type="List<Vertex>" line="404">
                <params>
                    <param name="certs" type="Collection<X509Certificate>"/>
                    <param name="adjList" type="List<List<Vertex>>"/>
                </params>
                <declaration name="l" type="List&lt;Vertex&gt;" line="405"/>
                <scope line="406">
                    <declaration name="v" type="Vertex" line="407"/>
                </scope>
            </method>
            <javadoc line="412">
                Returns true if trust anchor certificate matches specified
                  certificate constraints.                
            </javadoc>
            <method name="anchorIsTarget" type="boolean" line="416">
                <params>
                    <param name="anchor" type="TrustAnchor"/>
                    <param name="sel" type="X509CertSelector"/>
                </params>
                <declaration name="anchorCert" type="X509Certificate" line="417"/>
                <scope line="418"/>
            </method>
            <class name="CertStoreComparator" line="423">
                <implements interface="Comparator">
                    <type_params>
                        <type_param name="CertStore"/>
                    </type_params>
                </implements>
                <javadoc line="423">
                    Comparator that orders CertStores so that local CertStores come before
                      remote CertStores.                    
                </javadoc>
                <method name="compare" type="int" line="428">
                    <params>
                        <param name="store1" type="CertStore"/>
                        <param name="store2" type="CertStore"/>
                    </params>
                    <scope line="429"/>
                    <scope line="432"/>
                </method>
            </class>
            <javadoc line="437">
                Returns the target subject DN from the first X509Certificate that
                  is fetched that matches the specified X509CertSelector.                
            </javadoc>
            <method name="getTargetSubjectDN" type="X500Principal" line="441">
                <params>
                    <param name="stores" type="List<CertStore>"/>
                    <param name="targetSel" type="X509CertSelector"/>
                </params>
                <scope line="442">
                    <scope line="443">
                        <declaration name="targetCerts" type="Collection&lt;? extends Certificate&gt;" line="444"/>
                        <scope line="445">
                            <declaration name="targetCert" type="X509Certificate" line="446"/>
                        </scope>
                    </scope>
                    <scope line="450">
                        <scope line="451"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>