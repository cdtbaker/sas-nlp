<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.provider.certpath">
        <import package="java.util.Collection"/>
        <import package="java.util.Collections"/>
        <import package="java.util.Set"/>
        <import package="java.util.HashSet"/>
        <import package="java.io.IOException"/>
        <import package="java.security.cert.Certificate"/>
        <import package="java.security.cert.CertificateException"/>
        <import package="java.security.cert.CertPathValidatorException"/>
        <import package="java.security.cert.X509Certificate"/>
        <import package="java.security.cert.PKIXCertPathChecker"/>
        <import package="java.security.cert.PKIXReason"/>
        <import package="sun.security.util.Debug"/>
        <import package="sun.security.x509.PKIXExtensions"/>
        <import package="sun.security.x509.NameConstraintsExtension"/>
        <import package="sun.security.x509.X509CertImpl"/>
        <class name="ConstraintsChecker" line="17">
            <extends class="PKIXCertPathChecker"/>
            <javadoc line="17">
                ConstraintsChecker is a &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; that checks
                  constraints information on a PKIX certificate, namely basic constraints
                  and name constraints.                
                <since>
                    1.4                    
                </since>
                <author>
                    Yassir Elley                    
                </author>
            </javadoc>
            <declaration name="debug" type="Debug" line="25"/>
            <declaration name="certPathLength" type="int" line="26"/>
            <declaration name="maxPathLength" type="int" line="27"/>
            <declaration name="i" type="int" line="28"/>
            <declaration name="prevNC" type="NameConstraintsExtension" line="29"/>
            <declaration name="supportedExts" type="Set&lt;String&gt;" line="30"/>
            <javadoc line="31">
                Creates a ConstraintsChecker.                
                <param>
                    certPathLength the length of the certification path                    
                </param>
                <throws>
                    CertPathValidatorException if the checker cannot be initialized                    
                </throws>
            </javadoc>
            <method name="ConstraintsChecker" type="constructor" line="36">
                <params>
                    <param name="certPathLength" type="int"/>
                </params>
            </method>
            <method name="init" type="void" line="40">
                <params>
                    <param name="forward" type="boolean"/>
                </params>
                <scope line="41"/>
                <scope line="46"/>
            </method>
            <method name="isForwardCheckingSupported" type="boolean" line="50"/>
            <method name="getSupportedExtensions" type="Set<String>" line="53">
                <scope line="54"/>
            </method>
            <javadoc line="62">
                Performs the basic constraints and name constraints
                  checks on the certificate using its internal state.                
                <param>
                    cert the <code>Certificate</code> to be checked                    
                </param>
                <param>
                    unresCritExts a <code>Collection</code> of OID strings
                      representing the current set of unresolved critical extensions                    
                </param>
                <throws>
                    CertPathValidatorException if the specified certificate
                      does not pass the check                    
                </throws>
            </javadoc>
            <method name="check" type="void" line="71">
                <params>
                    <param name="cert" type="Certificate"/>
                    <param name="unresCritExts" type="Collection<String>"/>
                </params>
                <declaration name="currCert" type="X509Certificate" line="72"/>
                <scope line="76"/>
            </method>
            <javadoc line="81">
                Internal method to check the name constraints against a cert                
            </javadoc>
            <method name="verifyNameConstraints" type="void" line="84">
                <params>
                    <param name="currCert" type="X509Certificate"/>
                </params>
                <declaration name="msg" type="String" line="85"/>
                <scope line="86"/>
                <scope line="89">
                    <scope line="90"/>
                    <scope line="94">
                        <scope line="95"/>
                    </scope>
                    <scope line="99"/>
                </scope>
            </method>
            <javadoc line="106">
                Helper to fold sets of name constraints together                
            </javadoc>
            <method name="mergeNameConstraints" type="NameConstraintsExtension" line="109">
                <params>
                    <param name="currCert" type="X509Certificate"/>
                    <param name="prevNC" type="NameConstraintsExtension"/>
                </params>
                <declaration name="currCertImpl" type="X509CertImpl" line="110"/>
                <scope line="111"/>
                <scope line="114"/>
                <declaration name="newConstraints" type="NameConstraintsExtension" line="117"/>
                <scope line="118"/>
                <scope line="122">
                    <scope line="123"/>
                    <scope line="126"/>
                    <scope line="129"/>
                </scope>
                <scope line="133">
                    <scope line="134"/>
                    <scope line="137"/>
                    <scope line="140"/>
                </scope>
            </method>
            <javadoc line="146">
                Internal method to check that a given cert meets basic constraints.                
            </javadoc>
            <method name="checkBasicConstraints" type="void" line="149">
                <params>
                    <param name="currCert" type="X509Certificate"/>
                </params>
                <declaration name="msg" type="String" line="150"/>
                <scope line="151"/>
                <scope line="156">
                    <declaration name="pathLenConstraint" type="int" line="157"/>
                    <scope line="158">
                        <scope line="159">
                            <scope line="160"/>
                        </scope>
                    </scope>
                    <scope line="165"/>
                    <scope line="168"/>
                    <scope line="171">
                        <scope line="172"/>
                    </scope>
                </scope>
                <scope line="179"/>
            </method>
            <javadoc line="184">
                Merges the specified maxPathLength with the pathLenConstraint
                  obtained from the certificate.                
                <param>
                    cert the <code>X509Certificate</code>                    
                </param>
                <param>
                    maxPathLength the previous maximum path length                    
                </param>
                <return>
                    the new maximum path length constraint (-1 means no more
                      certificates can follow, Integer.MAX_VALUE means path length is
                      unconstrained)                    
                </return>
            </javadoc>
            <method name="mergeBasicConstraints" type="int" line="193">
                <params>
                    <param name="cert" type="X509Certificate"/>
                    <param name="maxPathLength" type="int"/>
                </params>
                <declaration name="pathLenConstraint" type="int" line="194"/>
                <scope line="195"/>
                <scope line="198"/>
            </method>
        </class>
    </source>