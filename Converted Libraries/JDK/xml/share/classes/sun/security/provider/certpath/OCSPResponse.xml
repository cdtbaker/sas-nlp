<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.provider.certpath">
        <import package="java.io"/>
        <import package="java.math.BigInteger"/>
        <import package="java.security"/>
        <import package="java.security.cert.CertificateException"/>
        <import package="java.security.cert.CertificateParsingException"/>
        <import package="java.security.cert.CertPathValidatorException"/>
        <import package="java.security.cert.CRLReason"/>
        <import package="java.security.cert.TrustAnchor"/>
        <import package="java.security.cert.X509Certificate"/>
        <import package="java.util.Collections"/>
        <import package="java.util.Date"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="sun.misc.HexDumpEncoder"/>
        <import package="sun.security.x509"/>
        <import package="sun.security.util"/>
        <class name="OCSPResponse" line="19">
            <javadoc line="19">
                This class is used to process an OCSP response.
                  The OCSP Response is defined
                  in RFC 2560 and the ASN.1 encoding is as follows:
                  &lt;pre&gt;
                  OCSPResponse ::= SEQUENCE {
                  responseStatus         OCSPResponseStatus,
                  responseBytes          [0] EXPLICIT ResponseBytes OPTIONAL }
                  OCSPResponseStatus ::= ENUMERATED {
                  successful            (0),  --Response has valid confirmations
                  malformedRequest      (1),  --Illegal confirmation request
                  internalError         (2),  --Internal error in issuer
                  tryLater              (3),  --Try again later
                  --(4) is not used
                  sigRequired           (5),  --Must sign the request
                  unauthorized          (6)   --Request unauthorized
                  }
                  ResponseBytes ::=       SEQUENCE {
                  responseType   OBJECT IDENTIFIER,
                  response       OCTET STRING }
                  BasicOCSPResponse       ::= SEQUENCE {
                  tbsResponseData      ResponseData,
                  signatureAlgorithm   AlgorithmIdentifier,
                  signature            BIT STRING,
                  certs                [0] EXPLICIT SEQUENCE OF Certificate OPTIONAL }
                  The value for signature SHALL be computed on the hash of the DER
                  encoding ResponseData.
                  ResponseData ::= SEQUENCE {
                  version              [0] EXPLICIT Version DEFAULT v1,
                  responderID              ResponderID,
                  producedAt               GeneralizedTime,
                  responses                SEQUENCE OF SingleResponse,
                  responseExtensions   [1] EXPLICIT Extensions OPTIONAL }
                  ResponderID ::= CHOICE {
                  byName               [1] Name,
                  byKey                [2] KeyHash }
                  KeyHash ::= OCTET STRING -- SHA-1 hash of responder&apos;s public key
                  (excluding the tag and length fields)
                  SingleResponse ::= SEQUENCE {
                  certID                       CertID,
                  certStatus                   CertStatus,
                  thisUpdate                   GeneralizedTime,
                  nextUpdate         [0]       EXPLICIT GeneralizedTime OPTIONAL,
                  singleExtensions   [1]       EXPLICIT Extensions OPTIONAL }
                  CertStatus ::= CHOICE {
                  good        [0]     IMPLICIT NULL,
                  revoked     [1]     IMPLICIT RevokedInfo,
                  unknown     [2]     IMPLICIT UnknownInfo }
                  RevokedInfo ::= SEQUENCE {
                  revocationTime              GeneralizedTime,
                  revocationReason    [0]     EXPLICIT CRLReason OPTIONAL }
                  UnknownInfo ::= NULL -- this can be replaced with an enumeration
                  &lt;/pre&gt;                
                <author>
                    Ram Marti                    
                </author>
            </javadoc>
            <declaration name="ResponseStatus" type="enum" line="75"/>
            <scope line="75"/>
            <declaration name="rsvalues" type="ResponseStatus[]" line="76"/>
            <declaration name="DEBUG" type="Debug" line="77"/>
            <declaration name="dump" type="boolean" line="78"/>
            <declaration name="OCSP_BASIC_RESPONSE_OID" type="ObjectIdentifier" line="79"/>
            <declaration name="OCSP_NONCE_EXTENSION_OID" type="ObjectIdentifier" line="80"/>
            <declaration name="CERT_STATUS_GOOD" type="int" line="81"/>
            <declaration name="CERT_STATUS_REVOKED" type="int" line="82"/>
            <declaration name="CERT_STATUS_UNKNOWN" type="int" line="83"/>
            <declaration name="NAME_TAG" type="int" line="84"/>
            <declaration name="KEY_TAG" type="int" line="85"/>
            <declaration name="KP_OCSP_SIGNING_OID" type="String" line="86"/>
            <declaration name="responseStatus" type="ResponseStatus" line="87"/>
            <declaration name="singleResponseMap" type="Map&amp;lt;CertId,SingleResponse&amp;gt;" line="88"/>
            <declaration name="MAX_CLOCK_SKEW" type="long" line="89"/>
            <declaration name="values" type="CRLReason[]" line="90"/>
            <method name="OCSPResponse" type="constructor" line="91">
                <params>
                    <param name="bytes" type="byte[]"/>
                    <param name="dateCheckedAgainst" type="Date"/>
                    <param name="responderCert" type="X509Certificate"/>
                </params>
                <scope line="92">
                    <declaration name="hexEnc" type="HexDumpEncoder" line="93"/>
                </scope>
                <declaration name="der" type="DerValue" line="97"/>
                <scope line="98"/>
                <declaration name="derIn" type="DerInputStream" line="101"/>
                <declaration name="status" type="int" line="102"/>
                <scope line="103"/>
                <scope line="106"/>
                <scope line="109"/>
                <scope line="112"/>
                <scope line="117"/>
                <declaration name="tmp" type="DerValue" line="120"/>
                <scope line="121"/>
                <declaration name="responseType" type="ObjectIdentifier" line="125"/>
                <scope line="126">
                    <scope line="127"/>
                </scope>
                <scope line="131">
                    <scope line="132"/>
                </scope>
                <declaration name="basicOCSPResponse" type="DerInputStream" line="137"/>
                <declaration name="seqTmp" type="DerValue[]" line="138"/>
                <scope line="139"/>
                <declaration name="responseData" type="DerValue" line="142"/>
                <declaration name="responseDataDer" type="byte[]" line="143"/>
                <scope line="144"/>
                <declaration name="seqDerIn" type="DerInputStream" line="147"/>
                <declaration name="seq" type="DerValue" line="148"/>
                <scope line="149">
                    <scope line="150">
                        <declaration name="version" type="int" line="152"/>
                        <scope line="153"/>
                    </scope>
                </scope>
                <declaration name="tag" type="short" line="159"/>
                <scope line="160">
                    <scope line="161">
                        <declaration name="responderName" type="X500Name" line="162"/>
                    </scope>
                </scope>
                <scope line="166"/>
                <scope line="168"/>
                <scope line="172">
                    <declaration name="producedAtDate" type="Date" line="173"/>
                </scope>
                <declaration name="singleResponseDer" type="DerValue[]" line="176"/>
                <scope line="178"/>
                <scope line="181">
                    <declaration name="singleResponse" type="SingleResponse" line="182"/>
                </scope>
                <scope line="185">
                    <scope line="187">
                        <declaration name="responseExtDer" type="DerValue[]" line="188"/>
                        <scope line="189">
                            <declaration name="responseExtension" type="Extension" line="190"/>
                            <scope line="191"/>
                            <scope line="194"/>
                            <scope line="196"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="sigAlgId" type="AlgorithmId" line="202"/>
                <declaration name="signature" type="byte[]" line="203"/>
                <declaration name="x509Certs" type="X509CertImpl[]" line="204"/>
                <scope line="205">
                    <declaration name="seqCert" type="DerValue" line="206"/>
                    <scope line="207"/>
                    <declaration name="certs" type="DerValue[]" line="210"/>
                    <scope line="212">
                        <scope line="213"/>
                    </scope>
                    <scope line="217"/>
                </scope>
                <scope line="221">
                    <declaration name="cert" type="X509CertImpl" line="222"/>
                    <scope line="223"/>
                    <scope line="225">
                        <scope line="226">
                            <declaration name="keyPurposes" type="List&amp;lt;String&amp;gt;" line="227"/>
                            <scope line="228"/>
                        </scope>
                        <scope line="232"/>
                        <declaration name="algChecker" type="AlgorithmChecker" line="235"/>
                        <scope line="238">
                            <scope line="239"/>
                            <scope line="242"/>
                        </scope>
                        <scope line="246"/>
                        <declaration name="noCheck" type="Extension" line="249"/>
                        <scope line="250">
                            <scope line="251"/>
                        </scope>
                        <scope line="255"/>
                        <scope line="257"/>
                        <scope line="261"/>
                    </scope>
                    <scope line="265"/>
                </scope>
                <scope line="269">
                    <scope line="271"/>
                </scope>
                <scope line="275"/>
            </method>
            <javadoc line="279">
                Returns the OCSP ResponseStatus.                
            </javadoc>
            <method name="getResponseStatus" type="ResponseStatus" line="282"/>
            <method name="verifyResponse" type="boolean" line="285">
                <params>
                    <param name="responseData" type="byte[]"/>
                    <param name="cert" type="X509Certificate"/>
                    <param name="sigAlgId" type="AlgorithmId"/>
                    <param name="signBytes" type="byte[]"/>
                </params>
                <scope line="286">
                    <declaration name="respSignature" type="Signature" line="287"/>
                    <scope line="290">
                        <scope line="291"/>
                    </scope>
                    <scope line="296">
                        <scope line="297"/>
                    </scope>
                </scope>
                <scope line="303"/>
                <scope line="306"/>
                <scope line="309"/>
            </method>
            <javadoc line="313">
                Returns the SingleResponse of the specified CertId, or null if
                  there is no response for that CertId.                
            </javadoc>
            <method name="getSingleResponse" type="SingleResponse" line="317">
                <params>
                    <param name="certId" type="CertId"/>
                </params>
            </method>
            <class name="SingleResponse" line="320">
                <implements interface="OCSP.RevocationStatus"/>
                <declaration name="certId" type="CertId" line="321"/>
                <declaration name="certStatus" type="CertStatus" line="322"/>
                <declaration name="thisUpdate" type="Date" line="323"/>
                <declaration name="nextUpdate" type="Date" line="324"/>
                <declaration name="revocationTime" type="Date" line="325"/>
                <declaration name="revocationReason" type="CRLReason" line="326"/>
                <declaration name="singleExtensions" type="Map&amp;lt;String,java.security.cert.Extension&amp;gt;" line="327"/>
                <method name="SingleResponse" type="constructor" line="328">
                    <params>
                        <param name="der" type="DerValue"/>
                    </params>
                    <scope line="329"/>
                    <declaration name="tmp" type="DerInputStream" line="332"/>
                    <declaration name="derVal" type="DerValue" line="334"/>
                    <declaration name="tag" type="short" line="335"/>
                    <scope line="336">
                        <scope line="339">
                            <declaration name="dv" type="DerValue" line="340"/>
                            <scope line="342">
                                <declaration name="reason" type="int" line="343"/>
                                <scope line="344"/>
                                <scope line="347"/>
                            </scope>
                            <scope line="351"/>
                        </scope>
                        <scope line="355"/>
                        <scope line="358"/>
                    </scope>
                    <scope line="363">
                        <scope line="366"/>
                        <scope line="369"/>
                        <scope line="372"/>
                    </scope>
                    <scope line="377"/>
                    <scope line="380">
                        <scope line="383">
                            <scope line="385"/>
                            <scope line="387"/>
                        </scope>
                        <scope line="392"/>
                    </scope>
                    <scope line="396">
                        <scope line="398">
                            <declaration name="singleExtDer" type="DerValue[]" line="399"/>
                            <scope line="401">
                                <declaration name="ext" type="Extension" line="402"/>
                                <scope line="403"/>
                                <scope line="406"/>
                            </scope>
                        </scope>
                        <scope line="412"/>
                    </scope>
                    <scope line="416"/>
                    <declaration name="now" type="long" line="419"/>
                    <declaration name="nowPlusSkew" type="Date" line="420"/>
                    <declaration name="nowMinusSkew" type="Date" line="421"/>
                    <scope line="422">
                        <declaration name="until" type="String" line="423"/>
                        <scope line="424"/>
                    </scope>
                    <scope line="429">
                        <scope line="430"/>
                    </scope>
                </method>
                <method name="getCertStatus" type="CertStatus" line="436"/>
                <method name="getCertId" type="CertId" line="439"/>
                <method name="getRevocationTime" type="Date" line="442"/>
                <method name="getRevocationReason" type="CRLReason" line="445"/>
                <method name="getSingleExtensions" type="Map&lt;String,java.security.cert.Extension&gt;" line="448"/>
                <javadoc line="451">
                    Construct a string representation of a single OCSP response.                    
                </javadoc>
                <method name="toString" type="String" line="454">
                    <declaration name="sb" type="StringBuilder" line="455"/>
                    <scope line="459"/>
                    <scope line="464"/>
                </method>
            </class>
        </class>
    </source>