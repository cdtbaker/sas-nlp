<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.provider.certpath">
        <import package="java.io.IOException"/>
        <import package="java.util.Date"/>
        <import package="java.security.cert.Certificate"/>
        <import package="java.security.cert.X509Certificate"/>
        <import package="java.security.cert.X509CertSelector"/>
        <import package="java.security.cert.CertificateException"/>
        <import package="sun.security.util.DerOutputStream"/>
        <import package="sun.security.x509.SerialNumber"/>
        <import package="sun.security.x509.KeyIdentifier"/>
        <import package="sun.security.x509.AuthorityKeyIdentifierExtension"/>
        <class name="AdaptableX509CertSelector" line="41">
            <extends class="X509CertSelector"/>
            <comment line="49">
                The start date of a validity period.                
            </comment>
            <comment line="52">
                The end date of a validity period.                
            </comment>
            <comment line="55">
                Is subject key identifier sensitive?                
            </comment>
            <comment line="58">
                Is serial number sensitive?                
            </comment>
            <javadoc line="41">
                An adaptable X509 certificate selector for forward certification path
                  building.                
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="startDate" type="Date" line="49"/>
            <declaration name="endDate" type="Date" line="52"/>
            <declaration name="isSKIDSensitive" type="boolean" line="55"/>
            <declaration name="isSNSensitive" type="boolean" line="58"/>
            <method name="AdaptableX509CertSelector" type="constructor" line="60"/>
            <javadoc line="64">
                Sets the criterion of the X509Certificate validity period.
                  Normally, we may not have to check that a certificate validity period
                  must fall within its issuer&apos;s certificate validity period. However,
                  when we face root CA key updates for version 1 certificates, according
                  to scheme of RFC 4210 or 2510, the validity periods should be checked
                  to determine the right issuer&apos;s certificate.
                  Conservatively, we will only check the validity periods for version
                  1 and version 2 certificates. For version 3 certificates, we can
                  determine the right issuer by authority and subject key identifier
                  extensions.                
                <param>
                    startDate the start date of a validity period that must fall
                      within the certificate validity period for the X509Certificate                    
                </param>
                <param>
                    endDate the end date of a validity period that must fall
                      within the certificate validity period for the X509Certificate                    
                </param>
            </javadoc>
            <method name="setValidityPeriod" type="void" line="83">
                <params>
                    <param name="startDate" type="Date"/>
                    <param name="endDate" type="Date"/>
                </params>
            </method>
            <javadoc line="88">
                Parse the authority key identifier extension.
                  If the keyIdentifier field of the extension is non-null, set the
                  subjectKeyIdentifier criterion. If the authorityCertSerialNumber
                  field is non-null, set the serialNumber criterion.
                  Note that we will not set the subject criterion according to the
                  authorityCertIssuer field of the extension. The caller MUST set
                  the subject criterion before call match().                
                <param>
                    akidext the authorityKeyIdentifier extension                    
                </param>
            </javadoc>
            <method name="parseAuthorityKeyIdentifierExtension" type="void" line="102">
                <params>
                    <param name="akidext" type="AuthorityKeyIdentifierExtension"/>
                </params>
                <comment line="107">
                    Do not override the previous setting for initial selection.                    
                </comment>
                <comment line="120">
                    Do not override the previous setting for initial selection.                    
                </comment>
                <comment line="127">
                    the subject criterion should be set by the caller.                    
                </comment>
                <scope line="103">
                    <declaration name="akid" type="KeyIdentifier" line="104"/>
                    <scope line="105">
                        <scope line="107">
                            <declaration name="derout" type="DerOutputStream" line="108"/>
                        </scope>
                    </scope>
                    <declaration name="asn" type="SerialNumber" line="116"/>
                    <scope line="118">
                        <scope line="120"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="130">
                Decides whether a &lt;code&gt;Certificate&lt;/code&gt; should be selected.
                  For the purpose of compatibility, when a certificate is of
                  version 1 and version 2, or the certificate does not include
                  a subject key identifier extension, the selection criterion
                  of subjectKeyIdentifier will be disabled.                
            </javadoc>
            <method name="match" type="boolean" line="139">
                <params>
                    <param name="cert" type="Certificate"/>
                </params>
                <comment line="148">
                    Check the validity period for version 1 and 2 certificate.                    
                </comment>
                <comment line="167">
                    If no SubjectKeyIdentifier extension, don&apos;t bother to check it.                    
                </comment>
                <comment line="173">
                    In practice, a CA may replace its root certificate and require that
                     the existing certificate is still valid, even if the AKID extension
                     does not match the replacement root certificate fields.
                    
                     Conservatively, we only support the replacement for version 1 and
                     version 2 certificate. As for version 2, the certificate extension
                     may contain sensitive information (for example, policies), the
                     AKID need to be respected to seek the exact certificate in case
                     of key or certificate abuse.                    
                </comment>
                <scope line="140"/>
                <declaration name="xcert" type="X509Certificate" line="144"/>
                <declaration name="version" type="int" line="145"/>
                <scope line="148">
                    <scope line="149">
                        <scope line="150"/>
                        <scope line="152"/>
                    </scope>
                    <scope line="157">
                        <scope line="158"/>
                        <scope line="160"/>
                    </scope>
                </scope>
                <scope line="168"/>
                <scope line="181"/>
            </method>
            <method name="clone" type="Object" line="189">
                <declaration name="copy" type="AdaptableX509CertSelector" line="190"/>
                <scope line="192"/>
                <scope line="196"/>
            </method>
        </class>
    </source>