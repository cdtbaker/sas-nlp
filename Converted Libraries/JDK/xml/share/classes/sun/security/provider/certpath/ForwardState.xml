<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.provider.certpath">
        <import package="java.io.IOException"/>
        <import package="java.security.PublicKey"/>
        <import package="java.security.cert.CertificateException"/>
        <import package="java.security.cert.CertPathValidatorException"/>
        <import package="java.security.cert.PKIXCertPathChecker"/>
        <import package="java.security.cert.X509Certificate"/>
        <import package="java.security.interfaces.DSAPublicKey"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="java.util.ListIterator"/>
        <import package="javax.security.auth.x500.X500Principal"/>
        <import package="sun.security.util.Debug"/>
        <import package="sun.security.x509.SubjectAlternativeNameExtension"/>
        <import package="sun.security.x509.GeneralNames"/>
        <import package="sun.security.x509.GeneralName"/>
        <import package="sun.security.x509.GeneralNameInterface"/>
        <import package="sun.security.x509.X500Name"/>
        <import package="sun.security.x509.X509CertImpl"/>
        <class name="ForwardState" line="22">
            <implements interface="State"/>
            <javadoc line="22">
                A specification of a forward PKIX validation state
                  which is initialized by each build and updated each time a
                  certificate is added to the current path.                
                <since>
                    1.4                    
                </since>
                <author>
                    Yassir Elley                    
                </author>
            </javadoc>
            <declaration name="debug" type="Debug" line="30"/>
            <declaration name="issuerDN" type="X500Principal" line="31"/>
            <declaration name="cert" type="X509CertImpl" line="32"/>
            <declaration name="subjectNamesTraversed" type="HashSet&amp;lt;GeneralNameInterface&amp;gt;" line="33"/>
            <declaration name="traversedCACerts" type="int" line="34"/>
            <declaration name="init" type="boolean" line="35"/>
            <declaration name="crlChecker" type="CrlRevocationChecker" line="36"/>
            <declaration name="forwardCheckers" type="ArrayList&amp;lt;PKIXCertPathChecker&amp;gt;" line="37"/>
            <declaration name="keyParamsNeededFlag" type="boolean" line="38"/>
            <javadoc line="39">
                Returns a boolean flag indicating if the state is initial
                  (just starting)                
                <return>
                    boolean flag indicating if the state is initial (just starting)                    
                </return>
            </javadoc>
            <method name="isInitial" type="boolean" line="44"/>
            <javadoc line="47">
                Return boolean flag indicating whether a public key that needs to inherit
                  key parameters has been encountered.                
                <return>
                    boolean true if key needing to inherit parameters has been
                      encountered; false otherwise.                    
                </return>
            </javadoc>
            <method name="keyParamsNeeded" type="boolean" line="53"/>
            <javadoc line="56">
                Display state for debugging purposes                
            </javadoc>
            <method name="toString" type="String" line="59">
                <declaration name="sb" type="StringBuffer" line="60"/>
                <scope line="61"/>
                <scope line="70">
                    <scope line="71"/>
                </scope>
            </method>
            <javadoc line="78">
                Initialize the state.                
                <param>
                    certPathCheckers the list of user-defined PKIXCertPathCheckers                    
                </param>
            </javadoc>
            <method name="initState" type="void" line="82">
                <params>
                    <param name="certPathCheckers" type="List&lt;PKIXCertPathChecker&gt;"/>
                </params>
                <scope line="86">
                    <scope line="87">
                        <scope line="88"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="96">
                Update the state with the next certificate added to the path.                
                <param>
                    cert the certificate which is used to update the state                    
                </param>
            </javadoc>
            <method name="updateState" type="void" line="100">
                <params>
                    <param name="cert" type="X509Certificate"/>
                </params>
                <declaration name="icert" type="X509CertImpl" line="102"/>
                <declaration name="newKey" type="PublicKey" line="103"/>
                <scope line="104"/>
                <scope line="109">
                    <scope line="110"/>
                </scope>
                <scope line="114">
                    <declaration name="subjName" type="X500Principal" line="115"/>
                    <scope line="117">
                        <declaration name="subjAltNameExt" type="SubjectAlternativeNameExtension" line="118"/>
                        <scope line="119">
                            <declaration name="gNames" type="GeneralNames" line="120"/>
                            <scope line="121">
                                <declaration name="gName" type="GeneralNameInterface" line="122"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="127">
                        <scope line="128"/>
                    </scope>
                </scope>
            </method>
            <method name="clone" type="Object" line="137">
                <scope line="138">
                    <declaration name="clonedState" type="ForwardState" line="139"/>
                    <declaration name="li" type="ListIterator&amp;lt;PKIXCertPathChecker&amp;gt;" line="141"/>
                    <scope line="142">
                        <declaration name="checker" type="PKIXCertPathChecker" line="143"/>
                        <scope line="144"/>
                    </scope>
                </scope>
                <scope line="151"/>
            </method>
        </class>
    </source>