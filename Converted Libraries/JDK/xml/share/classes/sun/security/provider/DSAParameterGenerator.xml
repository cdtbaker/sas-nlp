<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.provider">
        <import package="java.math.BigInteger"/>
        <import package="java.security.AlgorithmParameterGeneratorSpi"/>
        <import package="java.security.AlgorithmParameters"/>
        <import package="java.security.InvalidAlgorithmParameterException"/>
        <import package="java.security.NoSuchAlgorithmException"/>
        <import package="java.security.NoSuchProviderException"/>
        <import package="java.security.InvalidParameterException"/>
        <import package="java.security.SecureRandom"/>
        <import package="java.security.spec.AlgorithmParameterSpec"/>
        <import package="java.security.spec.InvalidParameterSpecException"/>
        <import package="java.security.spec.DSAParameterSpec"/>
        <class name="DSAParameterGenerator" line="13">
            <extends class="AlgorithmParameterGeneratorSpi"/>
            <javadoc line="13">
                This class generates parameters for the DSA algorithm. It uses a default
                  prime modulus size of 1024 bits, which can be overwritten during
                  initialization.                
                <author>
                    Jan Luehe                    
                </author>
                <see>
                    java.security.AlgorithmParameters                    
                </see>
                <see>
                    java.security.spec.AlgorithmParameterSpec                    
                </see>
                <see>
                    DSAParameters                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <declaration name="modLen" type="int" line="24"/>
            <declaration name="random" type="SecureRandom" line="25"/>
            <declaration name="ZERO" type="BigInteger" line="26"/>
            <declaration name="ONE" type="BigInteger" line="27"/>
            <declaration name="TWO" type="BigInteger" line="28"/>
            <declaration name="sha" type="SHA" line="29"/>
            <method name="DSAParameterGenerator" type="constructor" line="30"/>
            <javadoc line="33">
                Initializes this parameter generator for a certain strength
                  and source of randomness.                
                <param>
                    strength the strength (size of prime) in bits                    
                </param>
                <param>
                    random the source of randomness                    
                </param>
            </javadoc>
            <method name="engineInit" type="void" line="39">
                <params>
                    <param name="strength" type="int"/>
                    <param name="random" type="SecureRandom"/>
                </params>
                <scope line="40"/>
            </method>
            <javadoc line="46">
                Initializes this parameter generator with a set of
                  algorithm-specific parameter generation values.                
                <param>
                    params the set of algorithm-specific parameter generation values                    
                </param>
                <param>
                    random the source of randomness                    
                </param>
                <exception>
                    InvalidAlgorithmParameterException if the given parameter
                      generation values are inappropriate for this parameter generator                    
                </exception>
            </javadoc>
            <method name="engineInit" type="void" line="54">
                <params>
                    <param name="genParamSpec" type="AlgorithmParameterSpec"/>
                    <param name="random" type="SecureRandom"/>
                </params>
            </method>
            <javadoc line="57">
                Generates the parameters.                
                <return>
                    the new AlgorithmParameters object                    
                </return>
            </javadoc>
            <method name="engineGenerateParameters" type="AlgorithmParameters" line="61">
                <declaration name="algParams" type="AlgorithmParameters" line="62"/>
                <scope line="63">
                    <scope line="64"/>
                    <declaration name="pAndQ" type="BigInteger[]" line="67"/>
                    <declaration name="paramP" type="BigInteger" line="68"/>
                    <declaration name="paramQ" type="BigInteger" line="69"/>
                    <declaration name="paramG" type="BigInteger" line="70"/>
                    <declaration name="dsaParamSpec" type="DSAParameterSpec" line="71"/>
                </scope>
                <scope line="75"/>
                <scope line="78"/>
                <scope line="81"/>
            </method>
            <method name="generatePandQ" type="BigInteger[]" line="86">
                <params>
                    <param name="random" type="SecureRandom"/>
                    <param name="L" type="int"/>
                </params>
                <declaration name="result" type="BigInteger[]" line="87"/>
                <declaration name="seed" type="byte[]" line="88"/>
                <scope line="89">
                    <scope line="90"/>
                </scope>
            </method>
            <method name="generatePandQ" type="BigInteger[]" line="97">
                <params>
                    <param name="seed" type="byte[]"/>
                    <param name="L" type="int"/>
                </params>
                <declaration name="g" type="int" line="98"/>
                <declaration name="n" type="int" line="99"/>
                <declaration name="b" type="int" line="100"/>
                <declaration name="SEED" type="BigInteger" line="101"/>
                <declaration name="TWOG" type="BigInteger" line="102"/>
                <declaration name="U1" type="byte[]" line="103"/>
                <declaration name="U2" type="byte[]" line="104"/>
                <declaration name="U" type="byte[]" line="106"/>
                <declaration name="q" type="BigInteger" line="109"/>
                <scope line="110"/>
                <scope line="113">
                    <declaration name="V" type="BigInteger" line="114"/>
                    <declaration name="offset" type="BigInteger" line="115"/>
                    <scope line="116">
                        <scope line="117">
                            <declaration name="K" type="BigInteger" line="118"/>
                            <declaration name="tmp" type="BigInteger" line="119"/>
                        </scope>
                        <declaration name="W" type="BigInteger" line="122"/>
                        <scope line="123"/>
                        <declaration name="TWOLm1" type="BigInteger" line="127"/>
                        <declaration name="X" type="BigInteger" line="128"/>
                        <declaration name="c" type="BigInteger" line="129"/>
                        <declaration name="p" type="BigInteger" line="130"/>
                        <scope line="131">
                            <declaration name="result" type="BigInteger[]" line="132"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="generateG" type="BigInteger" line="140">
                <params>
                    <param name="p" type="BigInteger"/>
                    <param name="q" type="BigInteger"/>
                </params>
                <declaration name="h" type="BigInteger" line="141"/>
                <declaration name="pMinusOneOverQ" type="BigInteger" line="142"/>
                <declaration name="g" type="BigInteger" line="143"/>
                <scope line="144"/>
            </method>
            <method name="SHA" type="byte[]" line="150">
                <params>
                    <param name="array" type="byte[]"/>
                </params>
            </method>
            <method name="toByteArray" type="byte[]" line="155">
                <params>
                    <param name="bigInt" type="BigInteger"/>
                </params>
                <declaration name="result" type="byte[]" line="156"/>
                <scope line="157">
                    <declaration name="tmp" type="byte[]" line="158"/>
                </scope>
            </method>
            <method name="xor" type="void" line="164">
                <params>
                    <param name="U1" type="byte[]"/>
                    <param name="U2" type="byte[]"/>
                </params>
                <scope line="165"/>
            </method>
        </class>
    </source>