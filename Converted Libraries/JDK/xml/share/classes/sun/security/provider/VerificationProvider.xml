<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.provider">
        <import package="java.util"/>
        <import package="java.security"/>
        <import package="sun.security.action.PutAllAction"/>
        <import package="sun.security.rsa.SunRsaSignEntries"/>
        <class name="VerificationProvider" line="35">
            <extends class="Provider"/>
            <javadoc line="35">
                Provider used for verification of signed JAR files if the Sun and
                  SunRsaSign main classes have been removed. Otherwise, this provider is not
                  necessary and registers no algorithms. This functionality only exists to
                  support a use case required by a specific customer and is not generally
                  supported.                
                <since>
                    1.7                    
                </since>
                <author>
                    Andreas Sterbenz                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="47"/>
            <declaration name="ACTIVE" type="boolean" line="49"/>
            <scope line="51">
                <declaration name="b" type="boolean" line="52"/>
                <scope line="53"/>
                <scope line="57"/>
            </scope>
            <method name="VerificationProvider" type="constructor" line="63">
                <comment line="65">
                    register all algorithms normally registered by the Sun and SunRsaSign                    
                </comment>
                <comment line="66">
                    providers, but only if they are missing                    
                </comment>
                <comment line="71">
                    if there is no security manager installed, put directly into                    
                </comment>
                <comment line="72">
                    the provider. Otherwise, create a temporary map and use a                    
                </comment>
                <comment line="73">
                    doPrivileged() call at the end to transfer the contents                    
                </comment>
                <comment line="78">
                    use LinkedHashMap to preserve the order of the PRNGs                    
                </comment>
                <scope line="67"/>
                <scope line="74"/>
                <scope line="77">
                    <declaration name="map" type="Map&lt;Object,Object&gt;" line="79"/>
                </scope>
            </method>
        </class>
    </source>