<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.provider">
        <import package="java.security"/>
        <import package="java.math.BigInteger"/>
        <import package="sun.security.provider.ByteArrayAccess"/>
        <class name="SHA5" line="33">
            <extends class="DigestBase"/>
            <comment line="54">
                Constants for each round/iteration                
            </comment>
            <comment line="85">
                buffer used by implCompress()                
            </comment>
            <comment line="88">
                state of this object                
            </comment>
            <comment line="91">
                initial state value. different between SHA-384 and SHA-512                
            </comment>
            <javadoc line="33">
                This class implements the Secure Hash Algorithm SHA-384 and SHA-512
                  developed by the National Institute of Standards and Technology along
                  with the National Security Agency.
                  The two algorithms are almost identical. This file contains a base
                  class SHA5 and two nested static subclasses as the classes to be used
                  by the JCA framework.
                  &lt;p&gt;It implements java.security.MessageDigestSpi, and can be used
                  through Java Cryptography Architecture (JCA), as a pluggable
                  MessageDigest implementation.                
                <since>
                    1.4.2                    
                </since>
                <author>
                    Valerie Peng                    
                </author>
                <author>
                    Andreas Sterbenz                    
                </author>
            </javadoc>
            <declaration name="ITERATION" type="int" line="52"/>
            <declaration name="ROUND_CONSTS" type="long[]" line="54"/>
            <declaration name="W" type="long[]" line="85"/>
            <declaration name="state" type="long[]" line="88"/>
            <declaration name="initialHashes" type="long[]" line="91"/>
            <javadoc line="93">
                Creates a new SHA object.                
            </javadoc>
            <method name="SHA5" type="constructor" line="96">
                <params>
                    <param name="name" type="String"/>
                    <param name="digestLength" type="int"/>
                    <param name="initialHashes" type="long[]"/>
                </params>
            </method>
            <javadoc line="104">
                Creates a SHA object with state (for cloning)                
            </javadoc>
            <method name="SHA5" type="constructor" line="107">
                <params>
                    <param name="base" type="SHA5"/>
                </params>
            </method>
            <method name="implReset" type="void" line="114"/>
            <method name="implDigest" type="void" line="118">
                <params>
                    <param name="out" type="byte[]"/>
                    <param name="ofs" type="int"/>
                </params>
                <declaration name="bitsProcessed" type="long" line="119"/>
                <declaration name="index" type="int" line="121"/>
                <declaration name="padLen" type="int" line="122"/>
            </method>
            <javadoc line="132">
                logical function ch(x,y,z) as defined in spec:                
                <return>
                    (x and y) xor ((complement x) and z)                    
                </return>
                <param>
                    x long                    
                </param>
                <param>
                    y long                    
                </param>
                <param>
                    z long                    
                </param>
            </javadoc>
            <method name="lf_ch" type="long" line="139">
                <params>
                    <param name="x" type="long"/>
                    <param name="y" type="long"/>
                    <param name="z" type="long"/>
                </params>
            </method>
            <javadoc line="143">
                logical function maj(x,y,z) as defined in spec:                
                <return>
                    (x and y) xor (x and z) xor (y and z)                    
                </return>
                <param>
                    x long                    
                </param>
                <param>
                    y long                    
                </param>
                <param>
                    z long                    
                </param>
            </javadoc>
            <method name="lf_maj" type="long" line="150">
                <params>
                    <param name="x" type="long"/>
                    <param name="y" type="long"/>
                    <param name="z" type="long"/>
                </params>
            </method>
            <javadoc line="154">
                logical function R(x,s) - right shift                
                <return>
                    x right shift for s times                    
                </return>
                <param>
                    x long                    
                </param>
                <param>
                    s int                    
                </param>
            </javadoc>
            <method name="lf_R" type="long" line="160">
                <params>
                    <param name="x" type="long"/>
                    <param name="s" type="int"/>
                </params>
            </method>
            <javadoc line="164">
                logical function S(x,s) - right rotation                
                <return>
                    x circular right shift for s times                    
                </return>
                <param>
                    x long                    
                </param>
                <param>
                    s int                    
                </param>
            </javadoc>
            <method name="lf_S" type="long" line="170">
                <params>
                    <param name="x" type="long"/>
                    <param name="s" type="int"/>
                </params>
            </method>
            <javadoc line="174">
                logical function sigma0(x) - xor of results of right rotations                
                <return>
                    S(x,28) xor S(x,34) xor S(x,39)                    
                </return>
                <param>
                    x long                    
                </param>
            </javadoc>
            <method name="lf_sigma0" type="long" line="179">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <javadoc line="183">
                logical function sigma1(x) - xor of results of right rotations                
                <return>
                    S(x,14) xor S(x,18) xor S(x,41)                    
                </return>
                <param>
                    x long                    
                </param>
            </javadoc>
            <method name="lf_sigma1" type="long" line="188">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <javadoc line="192">
                logical function delta0(x) - xor of results of right shifts/rotations                
                <return>
                    long                    
                </return>
                <param>
                    x long                    
                </param>
            </javadoc>
            <method name="lf_delta0" type="long" line="197">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <javadoc line="201">
                logical function delta1(x) - xor of results of right shifts/rotations                
                <return>
                    long                    
                </return>
                <param>
                    x long                    
                </param>
            </javadoc>
            <method name="lf_delta1" type="long" line="206">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <javadoc line="210">
                Compute the hash for the current block.
                  This is in the same vein as Peter Gutmann&apos;s algorithm listed in
                  the back of Applied Cryptography, Compact implementation of
                  &quot;old&quot; NIST Secure Hash Algorithm.                
            </javadoc>
            <method name="implCompress" type="void" line="217">
                <params>
                    <param name="buf" type="byte[]"/>
                    <param name="ofs" type="int"/>
                </params>
                <comment line="221">
                    The first 16 longs are from the byte stream, compute the rest of
                     the W[]&apos;s                    
                </comment>
                <scope line="222"/>
                <declaration name="a" type="long" line="227"/>
                <declaration name="b" type="long" line="228"/>
                <declaration name="c" type="long" line="229"/>
                <declaration name="d" type="long" line="230"/>
                <declaration name="e" type="long" line="231"/>
                <declaration name="f" type="long" line="232"/>
                <declaration name="g" type="long" line="233"/>
                <declaration name="h" type="long" line="234"/>
                <scope line="236">
                    <declaration name="T1" type="long" line="237"/>
                    <declaration name="T2" type="long" line="238"/>
                </scope>
            </method>
            <class name="SHA512" line="258">
                <extends class="SHA5"/>
                <javadoc line="258">
                    SHA-512 implementation class.                    
                </javadoc>
                <declaration name="INITIAL_HASHES" type="long[]" line="263"/>
                <method name="SHA512" type="constructor" line="270"/>
                <method name="SHA512" type="constructor" line="274">
                    <params>
                        <param name="base" type="SHA512"/>
                    </params>
                </method>
                <method name="clone" type="Object" line="278"/>
            </class>
            <class name="SHA384" line="283">
                <extends class="SHA5"/>
                <javadoc line="283">
                    SHA-384 implementation class.                    
                </javadoc>
                <declaration name="INITIAL_HASHES" type="long[]" line="288"/>
                <method name="SHA384" type="constructor" line="295"/>
                <method name="SHA384" type="constructor" line="299">
                    <params>
                        <param name="base" type="SHA384"/>
                    </params>
                </method>
                <method name="clone" type="Object" line="303"/>
            </class>
        </class>
    </source>