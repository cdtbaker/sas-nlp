<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.provider">
        <import package="java.security"/>
        <import package="java.math.BigInteger"/>
        <import package="sun.security.provider.ByteArrayAccess"/>
        <class name="SHA5" line="5">
            <extends class="DigestBase"/>
            <javadoc line="5">
                This class implements the Secure Hash Algorithm SHA-384 and SHA-512
                  developed by the National Institute of Standards and Technology along
                  with the National Security Agency.
                  The two algorithms are almost identical. This file contains a base
                  class SHA5 and two nested static subclasses as the classes to be used
                  by the JCA framework.
                  &lt;p&gt;It implements java.security.MessageDigestSpi, and can be used
                  through Java Cryptography Architecture (JCA), as a pluggable
                  MessageDigest implementation.                
                <since>
                    1.4.2                    
                </since>
                <author>
                    Valerie Peng                    
                </author>
                <author>
                    Andreas Sterbenz                    
                </author>
            </javadoc>
            <declaration name="ITERATION" type="int" line="20"/>
            <declaration name="ROUND_CONSTS" type="long[]" line="21"/>
            <declaration name="W" type="long[]" line="22"/>
            <declaration name="state" type="long[]" line="23"/>
            <declaration name="initialHashes" type="long[]" line="24"/>
            <javadoc line="25">
                Creates a new SHA object.                
            </javadoc>
            <method name="SHA5" type="constructor" line="28">
                <params>
                    <param name="name" type="String"/>
                    <param name="digestLength" type="int"/>
                    <param name="initialHashes" type="long[]"/>
                </params>
            </method>
            <javadoc line="35">
                Creates a SHA object with state (for cloning)                
            </javadoc>
            <method name="SHA5" type="constructor" line="38">
                <params>
                    <param name="base" type="SHA5"/>
                </params>
            </method>
            <method name="implReset" type="void" line="44"/>
            <method name="implDigest" type="void" line="47">
                <params>
                    <param name="out" type="byte[]"/>
                    <param name="ofs" type="int"/>
                </params>
                <declaration name="bitsProcessed" type="long" line="48"/>
                <declaration name="index" type="int" line="49"/>
                <declaration name="padLen" type="int" line="50"/>
            </method>
            <javadoc line="57">
                logical function ch(x,y,z) as defined in spec:                
                <return>
                    (x and y) xor ((complement x) and z)                    
                </return>
                <param>
                    x long                    
                </param>
                <param>
                    y long                    
                </param>
                <param>
                    z long                    
                </param>
            </javadoc>
            <method name="lf_ch" type="long" line="64">
                <params>
                    <param name="x" type="long"/>
                    <param name="y" type="long"/>
                    <param name="z" type="long"/>
                </params>
            </method>
            <javadoc line="67">
                logical function maj(x,y,z) as defined in spec:                
                <return>
                    (x and y) xor (x and z) xor (y and z)                    
                </return>
                <param>
                    x long                    
                </param>
                <param>
                    y long                    
                </param>
                <param>
                    z long                    
                </param>
            </javadoc>
            <method name="lf_maj" type="long" line="74">
                <params>
                    <param name="x" type="long"/>
                    <param name="y" type="long"/>
                    <param name="z" type="long"/>
                </params>
            </method>
            <javadoc line="77">
                logical function R(x,s) - right shift                
                <return>
                    x right shift for s times                    
                </return>
                <param>
                    x long                    
                </param>
                <param>
                    s int                    
                </param>
            </javadoc>
            <method name="lf_R" type="long" line="83">
                <params>
                    <param name="x" type="long"/>
                    <param name="s" type="int"/>
                </params>
            </method>
            <javadoc line="86">
                logical function S(x,s) - right rotation                
                <return>
                    x circular right shift for s times                    
                </return>
                <param>
                    x long                    
                </param>
                <param>
                    s int                    
                </param>
            </javadoc>
            <method name="lf_S" type="long" line="92">
                <params>
                    <param name="x" type="long"/>
                    <param name="s" type="int"/>
                </params>
            </method>
            <javadoc line="95">
                logical function sigma0(x) - xor of results of right rotations                
                <return>
                    S(x,28) xor S(x,34) xor S(x,39)                    
                </return>
                <param>
                    x long                    
                </param>
            </javadoc>
            <method name="lf_sigma0" type="long" line="100">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <javadoc line="103">
                logical function sigma1(x) - xor of results of right rotations                
                <return>
                    S(x,14) xor S(x,18) xor S(x,41)                    
                </return>
                <param>
                    x long                    
                </param>
            </javadoc>
            <method name="lf_sigma1" type="long" line="108">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <javadoc line="111">
                logical function delta0(x) - xor of results of right shifts/rotations                
                <return>
                    long                    
                </return>
                <param>
                    x long                    
                </param>
            </javadoc>
            <method name="lf_delta0" type="long" line="116">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <javadoc line="119">
                logical function delta1(x) - xor of results of right shifts/rotations                
                <return>
                    long                    
                </return>
                <param>
                    x long                    
                </param>
            </javadoc>
            <method name="lf_delta1" type="long" line="124">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <javadoc line="127">
                Compute the hash for the current block.
                  This is in the same vein as Peter Gutmann&apos;s algorithm listed in
                  the back of Applied Cryptography, Compact implementation of
                  &quot;old&quot; NIST Secure Hash Algorithm.                
            </javadoc>
            <method name="implCompress" type="void" line="133">
                <params>
                    <param name="buf" type="byte[]"/>
                    <param name="ofs" type="int"/>
                </params>
                <scope line="135"/>
                <declaration name="a" type="long" line="138"/>
                <declaration name="b" type="long" line="139"/>
                <declaration name="c" type="long" line="140"/>
                <declaration name="d" type="long" line="141"/>
                <declaration name="e" type="long" line="142"/>
                <declaration name="f" type="long" line="143"/>
                <declaration name="g" type="long" line="144"/>
                <declaration name="h" type="long" line="145"/>
                <scope line="146">
                    <declaration name="T1" type="long" line="147"/>
                    <declaration name="T2" type="long" line="148"/>
                </scope>
            </method>
            <class name="SHA512" line="167">
                <extends class="SHA5"/>
                <javadoc line="167">
                    SHA-512 implementation class.                    
                </javadoc>
                <declaration name="INITIAL_HASHES" type="long[]" line="171"/>
                <method name="SHA512" type="constructor" line="172"/>
                <method name="SHA512" type="constructor" line="175">
                    <params>
                        <param name="base" type="SHA512"/>
                    </params>
                </method>
                <method name="clone" type="Object" line="178"/>
            </class>
            <class name="SHA384" line="182">
                <extends class="SHA5"/>
                <javadoc line="182">
                    SHA-384 implementation class.                    
                </javadoc>
                <declaration name="INITIAL_HASHES" type="long[]" line="186"/>
                <method name="SHA384" type="constructor" line="187"/>
                <method name="SHA384" type="constructor" line="190">
                    <params>
                        <param name="base" type="SHA384"/>
                    </params>
                </method>
                <method name="clone" type="Object" line="193"/>
            </class>
        </class>
    </source>