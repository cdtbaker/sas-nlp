<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.provider.certpath">
        <import package="java.util.Set"/>
        <import package="java.security.InvalidAlgorithmParameterException"/>
        <import package="java.security.KeyStore"/>
        <import package="java.security.KeyStoreException"/>
        <import package="java.security.cert"/>
        <class name="SunCertPathBuilderParameters" line="7">
            <extends class="PKIXBuilderParameters"/>
            <javadoc line="7">
                This class specifies the set of parameters used as input for the Sun
                  certification path build algorithm. It is identical to PKIXBuilderParameters
                  with the addition of a &lt;code&gt;buildForward&lt;/code&gt; parameter which allows
                  the caller to specify whether or not the path should be constructed in
                  the forward direction.
                  The default for the &lt;code&gt;buildForward&lt;/code&gt; parameter is
                  true, which means that the build algorithm should construct paths
                  from the target subject back to the trusted anchor.                
                <since>
                    1.4                    
                </since>
                <author>
                    Sean Mullan                    
                </author>
                <author>
                    Yassir Elley                    
                </author>
            </javadoc>
            <declaration name="buildForward" type="boolean" line="21"/>
            <javadoc line="22">
                Creates an instance of &lt;code&gt;SunCertPathBuilderParameters&lt;/code&gt; with the
                  specified parameter values.                
                <param>
                    trustAnchors a &lt;code&gt;Set&lt;/code&gt; of &lt;code&gt;TrustAnchor&lt;/code&gt;s                    
                </param>
                <param>
                    targetConstraints a &lt;code&gt;CertSelector&lt;/code&gt; specifying the
                      constraints on the target certificate                    
                </param>
                <throws>
                    InvalidAlgorithmParameterException if the specified
                      &lt;code&gt;Set&lt;/code&gt; is empty &lt;code&gt;(trustAnchors.isEmpty() == true)&lt;/code&gt;                    
                </throws>
                <throws>
                    NullPointerException if the specified &lt;code&gt;Set&lt;/code&gt; is
                      &lt;code&gt;null&lt;/code&gt;                    
                </throws>
                <throws>
                    ClassCastException if any of the elements in the &lt;code&gt;Set&lt;/code&gt;
                      are not of type &lt;code&gt;java.security.cert.TrustAnchor&lt;/code&gt;                    
                </throws>
            </javadoc>
            <method name="SunCertPathBuilderParameters" type="constructor" line="35">
                <params>
                    <param name="trustAnchors" type="Set&lt;TrustAnchor&gt;"/>
                    <param name="targetConstraints" type="CertSelector"/>
                </params>
            </method>
            <javadoc line="39">
                Creates an instance of &lt;code&gt;SunCertPathBuilderParameters&lt;/code&gt; that
                  uses the specified &lt;code&gt;KeyStore&lt;/code&gt; to populate the set
                  of most-trusted CA certificates.                
                <param>
                    keystore A keystore from which the set of most-trusted
                      CA certificates will be populated.                    
                </param>
                <param>
                    targetConstraints a &lt;code&gt;CertSelector&lt;/code&gt; specifying the
                      constraints on the target certificate                    
                </param>
                <throws>
                    KeyStoreException if the keystore has not been initialized.                    
                </throws>
                <throws>
                    InvalidAlgorithmParameterException if the keystore does
                      not contain at least one trusted certificate entry                    
                </throws>
                <throws>
                    NullPointerException if the keystore is &lt;code&gt;null&lt;/code&gt;                    
                </throws>
            </javadoc>
            <method name="SunCertPathBuilderParameters" type="constructor" line="52">
                <params>
                    <param name="keystore" type="KeyStore"/>
                    <param name="targetConstraints" type="CertSelector"/>
                </params>
            </method>
            <javadoc line="56">
                Returns the value of the buildForward flag.                
                <return>
                    the value of the buildForward flag                    
                </return>
            </javadoc>
            <method name="getBuildForward" type="boolean" line="60"/>
            <javadoc line="63">
                Sets the value of the buildForward flag. If true, paths
                  are built from the target subject to the trusted anchor.
                  If false, paths are built from the trusted anchor to the
                  target subject. The default value if not specified is true.                
                <param>
                    buildForward the value of the buildForward flag                    
                </param>
            </javadoc>
            <method name="setBuildForward" type="void" line="70">
                <params>
                    <param name="buildForward" type="boolean"/>
                </params>
            </method>
            <javadoc line="73">
                Returns a formatted string describing the parameters.                
                <return>
                    a formatted string describing the parameters.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="77">
                <declaration name="sb" type="StringBuffer" line="78"/>
            </method>
        </class>
    </source>