<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.provider.certpath">
        <import package="java.io.BufferedInputStream"/>
        <import package="java.io.ByteArrayInputStream"/>
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.security.cert.CertificateEncodingException"/>
        <import package="java.security.cert.Certificate"/>
        <import package="java.security.cert.CertificateException"/>
        <import package="java.security.cert.CertificateFactory"/>
        <import package="java.security.cert.X509Certificate"/>
        <import package="java.util"/>
        <import package="java.security.cert.CertPath"/>
        <import package="sun.security.pkcs.ContentInfo"/>
        <import package="sun.security.pkcs.PKCS7"/>
        <import package="sun.security.pkcs.SignerInfo"/>
        <import package="sun.security.x509.AlgorithmId"/>
        <import package="sun.security.util.DerValue"/>
        <import package="sun.security.util.DerOutputStream"/>
        <import package="sun.security.util.DerInputStream"/>
        <class name="X509CertPath" line="49">
            <extends class="CertPath"/>
            <comment line="246">
                Reads the entire contents of an InputStream into a byte array.
                
                 @param is the InputStream to read from
                 @return the bytes read from the InputStream                
            </comment>
            <javadoc line="49">
                A {@link java.security.cert.CertPath CertPath} (certification path)
                  consisting exclusively of{@link java.security.cert.X509Certificate X509Certificate}s.
                  &lt;p&gt;
                  By convention, X.509 &lt;code&gt;CertPath&lt;/code&gt;s are stored from target
                  to trust anchor.
                  That is, the issuer of one certificate is the subject of the following
                  one. However, unvalidated X.509 &lt;code&gt;CertPath&lt;/code&gt;s may not follow
                  this convention. PKIX &lt;code&gt;CertPathValidator&lt;/code&gt;s will detect any
                  departure from this convention and throw a
                  &lt;code&gt;CertPathValidatorException&lt;/code&gt;.                
                <author>
                    Yassir Elley                    
                </author>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="67"/>
            <declaration name="certs" type="List&lt;X509Certificate&gt;" line="69"/>
            <javadoc line="69">
                List of certificates in this chain                
            </javadoc>
            <declaration name="COUNT_ENCODING" type="String" line="74"/>
            <javadoc line="74">
                The names of our encodings.  PkiPath is the default.                
            </javadoc>
            <declaration name="PKCS7_ENCODING" type="String" line="78"/>
            <declaration name="PKIPATH_ENCODING" type="String" line="79"/>
            <declaration name="encodingList" type="Collection&lt;String&gt;" line="81"/>
            <javadoc line="81">
                List of supported encodings                
            </javadoc>
            <scope line="86">
                <declaration name="list" type="List&lt;String&gt;" line="87"/>
            </scope>
            <javadoc line="93">
                Creates an &lt;code&gt;X509CertPath&lt;/code&gt; from a &lt;code&gt;List&lt;/code&gt; of
                  &lt;code&gt;X509Certificate&lt;/code&gt;s.
                  &lt;p&gt;
                  The certificates are copied out of the supplied &lt;code&gt;List&lt;/code&gt;
                  object.                
                <param>
                    certs a <code>List</code> of <code>X509Certificate</code>s                    
                </param>
                <exception>
                    CertificateException if <code>certs</code> contains an element
                      that is not an <code>X509Certificate</code>                    
                </exception>
            </javadoc>
            <method name="X509CertPath" type="constructor" line="104">
                <params>
                    <param name="certs" type="List<? extends Certificate>"/>
                </params>
                <comment line="107">
                    Ensure that the List contains only X509Certificates                    
                </comment>
                <comment line="116">
                    Assumes that the resulting List is thread-safe. This is true                    
                </comment>
                <comment line="117">
                    because we ensure that it cannot be modified after construction                    
                </comment>
                <comment line="118">
                    and the methods in the Sun JDK 1.4 implementation of ArrayList that                    
                </comment>
                <comment line="119">
                    allow read-only access are thread-safe.                    
                </comment>
                <scope line="108">
                    <scope line="109"/>
                </scope>
            </method>
            <javadoc line="124">
                Creates an &lt;code&gt;X509CertPath&lt;/code&gt;, reading the encoded form
                  from an &lt;code&gt;InputStream&lt;/code&gt;. The data is assumed to be in
                  the default encoding.                
                <param>
                    is the <code>InputStream</code> to read the data from                    
                </param>
                <exception>
                    CertificateException if an exception occurs while decoding                    
                </exception>
            </javadoc>
            <method name="X509CertPath" type="constructor" line="132">
                <params>
                    <param name="is" type="InputStream"/>
                </params>
            </method>
            <javadoc line="136">
                Creates an &lt;code&gt;X509CertPath&lt;/code&gt;, reading the encoded form
                  from an InputStream. The data is assumed to be in the specified
                  encoding.                
                <param>
                    is the <code>InputStream</code> to read the data from                    
                </param>
                <param>
                    encoding the encoding used                    
                </param>
                <exception>
                    CertificateException if an exception occurs while decoding or
                      the encoding requested is not supported                    
                </exception>
            </javadoc>
            <method name="X509CertPath" type="constructor" line="147">
                <params>
                    <param name="is" type="InputStream"/>
                    <param name="encoding" type="String"/>
                </params>
                <scope line="150"/>
                <scope line="152"/>
                <scope line="154"/>
            </method>
            <javadoc line="159">
                Parse a PKIPATH format CertPath from an InputStream. Return an
                  unmodifiable List of the certificates.                
                <param>
                    is the <code>InputStream</code> to read the data from                    
                </param>
                <return>
                    an unmodifiable List of the certificates                    
                </return>
                <exception>
                    CertificateException if an exception occurs                    
                </exception>
            </javadoc>
            <method name="parsePKIPATH" type="List<X509Certificate>" line="168">
                <params>
                    <param name="is" type="InputStream"/>
                </params>
                <comment line="186">
                    append certs in reverse order (target to trust anchor)                    
                </comment>
                <declaration name="certList" type="List&lt;X509Certificate&gt;" line="169"/>
                <declaration name="certFac" type="CertificateFactory" line="170"/>
                <scope line="172"/>
                <scope line="176">
                    <declaration name="dis" type="DerInputStream" line="177"/>
                    <declaration name="seq" type="DerValue[]" line="178"/>
                    <scope line="179"/>
                    <scope line="187"/>
                </scope>
                <scope line="194">
                    <declaration name="ce" type="CertificateException" line="195"/>
                </scope>
            </method>
            <javadoc line="202">
                Parse a PKCS#7 format CertPath from an InputStream. Return an
                  unmodifiable List of the certificates.                
                <param>
                    is the <code>InputStream</code> to read the data from                    
                </param>
                <return>
                    an unmodifiable List of the certificates                    
                </return>
                <exception>
                    CertificateException if an exception occurs                    
                </exception>
            </javadoc>
            <method name="parsePKCS7" type="List<X509Certificate>" line="211">
                <params>
                    <param name="is" type="InputStream"/>
                </params>
                <comment line="220">
                    Copy the entire input stream into an InputStream that does                    
                </comment>
                <comment line="221">
                    support mark                    
                </comment>
                <comment line="227">
                    certs are optional in PKCS #7                    
                </comment>
                <comment line="231">
                    no certs provided                    
                </comment>
                <comment line="238">
                    Assumes that the resulting List is thread-safe. This is true                    
                </comment>
                <comment line="239">
                    because we ensure that it cannot be modified after construction                    
                </comment>
                <comment line="240">
                    and the methods in the Sun JDK 1.4 implementation of ArrayList that                    
                </comment>
                <comment line="241">
                    allow read-only access are thread-safe.                    
                </comment>
                <declaration name="certList" type="List&lt;X509Certificate&gt;" line="212"/>
                <scope line="214"/>
                <scope line="218">
                    <scope line="219"/>
                    <declaration name="pkcs7" type="PKCS7" line="224"/>
                    <declaration name="certArray" type="X509Certificate[]" line="226"/>
                    <scope line="228"/>
                    <scope line="230"/>
                </scope>
                <scope line="234"/>
            </method>
            <method name="readAllBytes" type="byte[]" line="251">
                <params>
                    <param name="is" type="InputStream"/>
                </params>
                <declaration name="buffer" type="byte[]" line="252"/>
                <declaration name="baos" type="ByteArrayOutputStream" line="253"/>
                <declaration name="n" type="int" line="254"/>
                <scope line="255"/>
            </method>
            <javadoc line="261">
                Returns the encoded form of this certification path, using the
                  default encoding.                
                <return>
                    the encoded bytes                    
                </return>
                <exception>
                    CertificateEncodingException if an encoding error occurs                    
                </exception>
            </javadoc>
            <method name="getEncoded" type="byte[]" line="268">
                <comment line="269">
                    @@@ Should cache the encoded form                    
                </comment>
            </method>
            <javadoc line="273">
                Encode the CertPath using PKIPATH format.                
                <return>
                    a byte array containing the binary encoding of the PkiPath object                    
                </return>
                <exception>
                    CertificateEncodingException if an exception occurs                    
                </exception>
            </javadoc>
            <method name="encodePKIPATH" type="byte[]" line="279">
                <comment line="284">
                    encode certs in reverse order (trust anchor to target)                    
                </comment>
                <comment line="285">
                    according to PkiPath format                    
                </comment>
                <comment line="288">
                    check for duplicate cert                    
                </comment>
                <comment line="293">
                    get encoded certificates                    
                </comment>
                <comment line="298">
                    Wrap the data in a SEQUENCE                    
                </comment>
                <declaration name="li" type="ListIterator&lt;X509Certificate&gt;" line="281"/>
                <scope line="282">
                    <declaration name="bytes" type="DerOutputStream" line="283"/>
                    <scope line="286">
                        <declaration name="cert" type="X509Certificate" line="287"/>
                        <scope line="289"/>
                        <declaration name="encoded" type="byte[]" line="294"/>
                    </scope>
                    <declaration name="derout" type="DerOutputStream" line="299"/>
                </scope>
                <scope line="303">
                    <declaration name="ce" type="CertificateEncodingException" line="304"/>
                </scope>
            </method>
            <javadoc line="311">
                Encode the CertPath using PKCS#7 format.                
                <return>
                    a byte array containing the binary encoding of the PKCS#7 object                    
                </return>
                <exception>
                    CertificateEncodingException if an exception occurs                    
                </exception>
            </javadoc>
            <method name="encodePKCS7" type="byte[]" line="317">
                <declaration name="p7" type="PKCS7" line="318"/>
                <declaration name="derout" type="DerOutputStream" line="322"/>
                <scope line="323"/>
                <scope line="325"/>
            </method>
            <javadoc line="331">
                Returns the encoded form of this certification path, using the
                  specified encoding.                
                <param>
                    encoding the name of the encoding to use                    
                </param>
                <return>
                    the encoded bytes                    
                </return>
                <exception>
                    CertificateEncodingException if an encoding error occurs or
                      the encoding requested is not supported                    
                </exception>
            </javadoc>
            <method name="getEncoded" type="byte[]" line="341">
                <params>
                    <param name="encoding" type="String"/>
                </params>
                <scope line="342"/>
                <scope line="344"/>
                <scope line="346"/>
            </method>
            <javadoc line="351">
                Returns the encodings supported by this certification path, with the
                  default encoding first.                
                <return>
                    an <code>Iterator</code> over the names of the supported
                      encodings (as Strings)                    
                </return>
            </javadoc>
            <method name="getEncodingsStatic" type="Iterator<String>" line="358"/>
            <javadoc line="362">
                Returns an iteration of the encodings supported by this certification
                  path, with the default encoding first.
                  &lt;p&gt;
                  Attempts to modify the returned &lt;code&gt;Iterator&lt;/code&gt; via its
                  &lt;code&gt;remove&lt;/code&gt; method result in an
                  &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.                
                <return>
                    an <code>Iterator</code> over the names of the supported
                      encodings (as Strings)                    
                </return>
            </javadoc>
            <method name="getEncodings" type="Iterator<String>" line="373"/>
            <javadoc line="377">
                Returns the list of certificates in this certification path.
                  The &lt;code&gt;List&lt;/code&gt; returned must be immutable and thread-safe.                
                <return>
                    an immutable <code>List</code> of <code>X509Certificate</code>s
                      (may be empty, but not null)                    
                </return>
            </javadoc>
            <method name="getCertificates" type="List<X509Certificate>" line="384"/>
        </class>
    </source>