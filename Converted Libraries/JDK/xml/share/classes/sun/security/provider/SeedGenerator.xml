<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.provider">
        <import package="java.security"/>
        <import package="java.io"/>
        <import package="java.util.Properties"/>
        <import package="java.util.Enumeration"/>
        <import package="java.net"/>
        <import package="java.nio.file.DirectoryStream"/>
        <import package="java.nio.file.Files"/>
        <import package="java.nio.file.Path"/>
        <import package="java.util.Random"/>
        <import package="sun.security.util.Debug"/>
        <class name="SeedGenerator" line="77">
            <comment line="80">
                Static instance is created at link time                
            </comment>
            <comment line="88">
                Static initializer to hook in selected or best performing generator                
            </comment>
            <comment line="231">
                This method helps the test utility receive unprocessed seed bytes.
                public static int genTestSeed() {
                return myself.getByte();
                }                
            </comment>
            <declaration name="instance" type="SeedGenerator" line="80"/>
            <declaration name="debug" type="Debug" line="82"/>
            <declaration name="URL_DEV_RANDOM" type="String" line="84"/>
            <declaration name="URL_DEV_URANDOM" type="String" line="85"/>
            <scope line="88">
                <declaration name="egdSource" type="String" line="89"/>
                <scope line="100">
                    <scope line="101">
                        <scope line="103"/>
                    </scope>
                    <scope line="106">
                        <scope line="107"/>
                    </scope>
                </scope>
                <scope line="112">
                    <scope line="113">
                        <scope line="115"/>
                    </scope>
                    <scope line="119"/>
                </scope>
                <scope line="127">
                    <scope line="128"/>
                </scope>
            </scope>
            <javadoc line="135">
                Fill result with bytes from the queue. Wait for it if it isn&apos;t ready.                
            </javadoc>
            <method name="generateSeed" type="void" line="138">
                <params>
                    <param name="result" type="byte[]"/>
                </params>
            </method>
            <method name="getSeedBytes" type="void" line="142"/>
            <javadoc line="144">
                Retrieve some system information, hashed.                
            </javadoc>
            <method name="getSystemEntropy" type="byte[]" line="147">
                <comment line="158">
                    The current time in millis                    
                </comment>
                <comment line="167">
                    System properties can change from machine to machine                    
                </comment>
                <comment line="180">
                    The temporary dir                    
                </comment>
                <comment line="184">
                    We use a Random object to choose what file names
                     should be used. Otherwise on a machine with too
                     many files, the same first 1024 files always get
                     used. Any, We make sure the first 512 files are
                     always used.                    
                </comment>
                <comment line="203">
                    get Runtime memory stats                    
                </comment>
                <declaration name="ba" type="byte[]" line="148"/>
                <declaration name="md" type="MessageDigest" line="149"/>
                <scope line="151"/>
                <scope line="153"/>
                <declaration name="b" type="byte" line="158"/>
                <anonymous_class line="162">
                    <method name="run" type="Void" line="163">
                        <comment line="167">
                            System properties can change from machine to machine                            
                        </comment>
                        <comment line="180">
                            The temporary dir                            
                        </comment>
                        <comment line="184">
                            We use a Random object to choose what file names
                             should be used. Otherwise on a machine with too
                             many files, the same first 1024 files always get
                             used. Any, We make sure the first 512 files are
                             always used.                            
                        </comment>
                        <comment line="203">
                            get Runtime memory stats                            
                        </comment>
                        <scope line="165">
                            <declaration name="s" type="String" line="167"/>
                            <declaration name="p" type="Properties" line="168"/>
                            <declaration name="e" type="Enumeration&lt;?&gt;" line="169"/>
                            <scope line="170"/>
                            <declaration name="f" type="File" line="180"/>
                            <declaration name="count" type="int" line="181"/>
                            <scope line="182">
                                <declaration name="r" type="Random" line="188"/>
                                <scope line="189">
                                    <scope line="190"/>
                                    <scope line="193"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="198"/>
                        <declaration name="rt" type="Runtime" line="203"/>
                        <declaration name="memBytes" type="byte[]" line="204"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="215">
                Helper function to convert a long into a byte array (least significant
                  byte first).                
            </javadoc>
            <method name="longToByteArray" type="byte[]" line="219">
                <params>
                    <param name="l" type="long"/>
                </params>
                <declaration name="retVal" type="byte[]" line="220"/>
                <scope line="222"/>
            </method>
            <class name="ThreadedSeedGenerator" line="238">
                <extends class="SeedGenerator"/>
                <comment line="240">
                    Queue is used to collect seed bytes                    
                </comment>
                <comment line="244">
                    Thread group for our threads                    
                </comment>
                <comment line="391">
                    The permutation was calculated by generating 64k of random
                     data and using it to mix the trivial permutation.
                     It should be evenly distributed. The specific values
                     are not crucial to the security of this class.                    
                </comment>
                <comment line="492">
                    Use a URI to access this File. Previous code used a URL
                     which is less strict on syntax. If we encounter a
                     URISyntaxException we make best efforts for backwards
                     compatibility. e.g. space character in deviceName string.
                    
                     Method called within PrivilegedExceptionAction block.                    
                </comment>
                <implements interface="Runnable"/>
                <declaration name="pool" type="byte[]" line="240"/>
                <declaration name="start" type="int" line="241"/>
                <declaration name="seedGroup" type="ThreadGroup" line="244"/>
                <javadoc line="246">
                    The constructor is only called once to construct the one
                      instance we actually use. It instantiates the message digest
                      and starts the thread going.                    
                </javadoc>
                <method name="ThreadedSeedGenerator" type="constructor" line="252">
                    <declaration name="digest" type="MessageDigest" line="256"/>
                    <scope line="258"/>
                    <scope line="260"/>
                    <declaration name="finalsg" type="ThreadGroup[]" line="264"/>
                    <anonymous_class line="266">
                        <method name="run" type="Thread" line="267">
                            <declaration name="parent" type="ThreadGroup" line="268"/>
                            <declaration name="newT" type="Thread" line="274"/>
                        </method>
                    </anonymous_class>
                    <declaration name="t" type="Thread" line="265"/>
                </method>
                <javadoc line="286">
                    This method does the actual work. It collects random bytes and
                      pushes them into the queue.                    
                </javadoc>
                <method name="run" type="void" line="290">
                    <comment line="294">
                        Queue full? Wait till there&apos;s room.                        
                    </comment>
                    <comment line="303">
                        Spin count must not be under 64000                        
                    </comment>
                    <comment line="307">
                        Start some noisy threads                        
                    </comment>
                    <comment line="318">
                        We wait 250milli quanta, so the minimum wait time
                         cannot be under 250milli.                        
                    </comment>
                    <comment line="328">
                        Translate the value using the permutation, and xor
                         it with previous values gathered.                        
                    </comment>
                    <comment line="334">
                        Push it into the queue and notify anybody who might
                         be waiting for it.                        
                    </comment>
                    <scope line="291">
                        <scope line="292">
                            <scope line="294"/>
                            <declaration name="counter" type="int" line="299"/>
                            <declaration name="v" type="byte" line="300"/>
                            <scope line="304">
                                <scope line="307">
                                    <declaration name="bt" type="BogusThread" line="308"/>
                                    <declaration name="t" type="Thread" line="309"/>
                                </scope>
                                <scope line="312"/>
                                <declaration name="latch" type="int" line="319"/>
                                <declaration name="l" type="long" line="321"/>
                                <scope line="322">
                                    <scope line="323"/>
                                </scope>
                            </scope>
                            <scope line="335"/>
                        </scope>
                    </scope>
                    <scope line="345"/>
                </method>
                <method name="getSeedBytes" type="void" line="352">
                    <params>
                        <param name="result" type="byte[]"/>
                    </params>
                    <scope line="353"/>
                </method>
                <method name="getSeedByte" type="byte" line="358">
                    <comment line="363">
                        Wait for it...                        
                    </comment>
                    <comment line="375">
                        Get it from the queue                        
                    </comment>
                    <comment line="383">
                        Notify the daemon thread, just in case it is
                         waiting for us to make room in the queue.                        
                    </comment>
                    <declaration name="b" type="byte" line="359"/>
                    <scope line="361">
                        <scope line="363"/>
                    </scope>
                    <scope line="367"/>
                    <scope line="373"/>
                </method>
                <declaration name="rndTab" type="byte[]" line="394"/>
                <class name="BogusThread" line="423">
                    <implements interface="Runnable"/>
                    <javadoc line="423">
                        This inner thread causes the thread scheduler to become &apos;noisy&apos;,
                          thus adding entropy to the system load.
                          At least one instance of this class is generated for every seed byte.                        
                    </javadoc>
                    <method name="run" type="void" line="430">
                        <comment line="435">
                            System.gc();                            
                        </comment>
                        <scope line="431"/>
                        <scope line="435"/>
                    </method>
                </class>
            </class>
            <class name="URLSeedGenerator" line="441">
                <extends class="SeedGenerator"/>
                <comment line="240">
                    Queue is used to collect seed bytes                    
                </comment>
                <comment line="244">
                    Thread group for our threads                    
                </comment>
                <comment line="391">
                    The permutation was calculated by generating 64k of random
                     data and using it to mix the trivial permutation.
                     It should be evenly distributed. The specific values
                     are not crucial to the security of this class.                    
                </comment>
                <comment line="492">
                    Use a URI to access this File. Previous code used a URL
                     which is less strict on syntax. If we encounter a
                     URISyntaxException we make best efforts for backwards
                     compatibility. e.g. space character in deviceName string.
                    
                     Method called within PrivilegedExceptionAction block.                    
                </comment>
                <declaration name="deviceName" type="String" line="443"/>
                <declaration name="devRandom" type="InputStream" line="444"/>
                <javadoc line="446">
                    The constructor is only called once to construct the one
                      instance we actually use. It opens the entropy gathering device
                      which will supply the randomness.                    
                </javadoc>
                <method name="URLSeedGenerator" type="constructor" line="452">
                    <params>
                        <param name="egdurl" type="String"/>
                    </params>
                    <scope line="453"/>
                </method>
                <method name="URLSeedGenerator" type="constructor" line="460"/>
                <method name="init" type="void" line="464">
                    <comment line="471">
                        return a FileInputStream for file URLs and
                         avoid buffering. The openStream() call wraps
                         InputStream in a BufferedInputStream which
                         can buffer up to 8K bytes. This read is a
                         performance issue for entropy sources which
                         can be slow to replenish.                        
                    </comment>
                    <declaration name="device" type="URL" line="465"/>
                    <scope line="466">
                        <anonymous_class line="468">
                            <method name="run" type="InputStream" line="469">
                                <comment line="471">
                                    return a FileInputStream for file URLs and
                                     avoid buffering. The openStream() call wraps
                                     InputStream in a BufferedInputStream which
                                     can buffer up to 8K bytes. This read is a
                                     performance issue for entropy sources which
                                     can be slow to replenish.                                    
                                </comment>
                                <scope line="478">
                                    <declaration name="deviceFile" type="File" line="479"/>
                                </scope>
                                <scope line="481"/>
                            </method>
                        </anonymous_class>
                    </scope>
                    <scope line="486"/>
                </method>
                <method name="getDeviceFile" type="File" line="499">
                    <params>
                        <param name="device" type="URL"/>
                    </params>
                    <comment line="504">
                        File constructor does not accept opaque URI                        
                    </comment>
                    <comment line="513">
                        Make best effort to access this File.
                         We can try using the URL path.                        
                    </comment>
                    <scope line="500">
                        <declaration name="deviceURI" type="URI" line="501"/>
                        <scope line="502">
                            <declaration name="localDir" type="URI" line="504"/>
                            <declaration name="uriPath" type="String" line="505"/>
                        </scope>
                        <scope line="508"/>
                    </scope>
                    <scope line="511"/>
                </method>
                <method name="getSeedBytes" type="void" line="521">
                    <params>
                        <param name="result" type="byte[]"/>
                    </params>
                    <comment line="528">
                        /dev/random blocks - should never have EOF                        
                    </comment>
                    <declaration name="len" type="int" line="522"/>
                    <declaration name="read" type="int" line="523"/>
                    <scope line="524">
                        <scope line="525">
                            <declaration name="count" type="int" line="526"/>
                        </scope>
                    </scope>
                    <scope line="533"/>
                </method>
            </class>
        </class>
    </source>