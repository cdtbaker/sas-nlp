<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.provider">
        <import package="java.security"/>
        <import package="java.io"/>
        <import package="java.util.Properties"/>
        <import package="java.util.Enumeration"/>
        <import package="java.net"/>
        <import package="java.nio.file.DirectoryStream"/>
        <import package="java.nio.file.Files"/>
        <import package="java.nio.file.Path"/>
        <import package="java.util.Random"/>
        <import package="sun.security.util.Debug"/>
        <class name="SeedGenerator" line="12">
            <declaration name="instance" type="SeedGenerator" line="13"/>
            <declaration name="debug" type="Debug" line="14"/>
            <declaration name="URL_DEV_RANDOM" type="String" line="15"/>
            <declaration name="URL_DEV_URANDOM" type="String" line="16"/>
            <scope line="17">
                <declaration name="egdSource" type="String" line="18"/>
                <scope line="19">
                    <scope line="20">
                        <scope line="22"/>
                    </scope>
                    <scope line="26">
                        <scope line="27"/>
                    </scope>
                </scope>
                <scope line="32">
                    <scope line="33">
                        <scope line="35"/>
                    </scope>
                    <scope line="39"/>
                </scope>
                <scope line="43">
                    <scope line="44"/>
                </scope>
            </scope>
            <javadoc line="50">
                Fill result with bytes from the queue. Wait for it if it isn&apos;t ready.                
            </javadoc>
            <method name="generateSeed" type="void" line="53">
                <params>
                    <param name="result" type="byte[]"/>
                </params>
            </method>
            <method name="getSeedBytes" type="void" line="56"/>
            <javadoc line="57">
                Retrieve some system information, hashed.                
            </javadoc>
            <method name="getSystemEntropy" type="byte[]" line="60"/>
            <javadoc line="111">
                Helper function to convert a long into a byte array (least significant
                  byte first).                
            </javadoc>
            <method name="longToByteArray" type="byte[]" line="115">
                <params>
                    <param name="l" type="long"/>
                </params>
                <declaration name="retVal" type="byte[]" line="116"/>
                <scope line="117"/>
            </method>
            <class name="ThreadedSeedGenerator" line="123">
                <extends class="SeedGenerator"/>
                <implements interface="Runnable"/>
                <declaration name="pool" type="byte[]" line="124"/>
                <declaration name="start" type="int" line="125"/>
                <declaration name="seedGroup" type="ThreadGroup" line="126"/>
                <javadoc line="127">
                    The constructor is only called once to construct the one
                      instance we actually use. It instantiates the message digest
                      and starts the thread going.                    
                </javadoc>
                <method name="ThreadedSeedGenerator" type="constructor" line="132">
                    <declaration name="digest" type="MessageDigest" line="135"/>
                    <scope line="136"/>
                    <scope line="139"/>
                    <declaration name="finalsg" type="ThreadGroup[]" line="142"/>
                    <anonymous_class line="143">
                        <method name="run" type="Thread" line="144">
                            <declaration name="parent" type="ThreadGroup" line="145"/>
                            <declaration name="newT" type="Thread" line="148"/>
                        </method>
                    </anonymous_class>
                    <declaration name="t" type="Thread" line="143"/>
                </method>
                <javadoc line="158">
                    This method does the actual work. It collects random bytes and
                      pushes them into the queue.                    
                </javadoc>
                <method name="run" type="void" line="162">
                    <scope line="163">
                        <scope line="164">
                            <scope line="165"/>
                            <declaration name="counter" type="int" line="168"/>
                            <declaration name="v" type="byte" line="169"/>
                            <scope line="170">
                                <scope line="171">
                                    <declaration name="bt" type="BogusThread" line="172"/>
                                    <declaration name="t" type="Thread" line="173"/>
                                </scope>
                                <scope line="176"/>
                                <declaration name="latch" type="int" line="179"/>
                                <declaration name="l" type="long" line="181"/>
                                <scope line="182">
                                    <scope line="183"/>
                                </scope>
                            </scope>
                            <scope line="191"/>
                        </scope>
                    </scope>
                    <scope line="200"/>
                </method>
                <method name="getSeedBytes" type="void" line="204">
                    <params>
                        <param name="result" type="byte[]"/>
                    </params>
                    <scope line="205"/>
                </method>
                <method name="getSeedByte" type="byte" line="209">
                    <declaration name="b" type="byte" line="210"/>
                    <scope line="211">
                        <scope line="212"/>
                    </scope>
                    <scope line="216"/>
                    <scope line="219"/>
                </method>
                <declaration name="rndTab" type="byte[]" line="229"/>
                <class name="BogusThread" line="230">
                    <implements interface="Runnable"/>
                    <javadoc line="230">
                        This inner thread causes the thread scheduler to become &apos;noisy&apos;,
                          thus adding entropy to the system load.
                          At least one instance of this class is generated for every seed byte.                        
                    </javadoc>
                    <method name="run" type="void" line="236">
                        <scope line="237"/>
                        <scope line="240"/>
                    </method>
                </class>
            </class>
            <class name="URLSeedGenerator" line="245">
                <extends class="SeedGenerator"/>
                <declaration name="deviceName" type="String" line="246"/>
                <declaration name="devRandom" type="InputStream" line="247"/>
                <javadoc line="248">
                    The constructor is only called once to construct the one
                      instance we actually use. It opens the entropy gathering device
                      which will supply the randomness.                    
                </javadoc>
                <method name="URLSeedGenerator" type="constructor" line="253">
                    <params>
                        <param name="egdurl" type="String"/>
                    </params>
                    <scope line="254"/>
                </method>
                <method name="URLSeedGenerator" type="constructor" line="260"/>
                <method name="init" type="void" line="263">
                    <declaration name="device" type="URL" line="264"/>
                    <scope line="265">
                        <anonymous_class line="266">
                            <method name="run" type="InputStream" line="267">
                                <scope line="268">
                                    <declaration name="deviceFile" type="File" line="269"/>
                                </scope>
                                <scope line="272"/>
                            </method>
                        </anonymous_class>
                    </scope>
                    <scope line="279"/>
                </method>
                <method name="getDeviceFile" type="File" line="283">
                    <params>
                        <param name="device" type="URL"/>
                    </params>
                    <scope line="284">
                        <declaration name="deviceURI" type="URI" line="285"/>
                        <scope line="286">
                            <declaration name="localDir" type="URI" line="287"/>
                            <declaration name="uriPath" type="String" line="288"/>
                        </scope>
                        <scope line="291"/>
                    </scope>
                    <scope line="295"/>
                </method>
                <method name="getSeedBytes" type="void" line="299">
                    <params>
                        <param name="result" type="byte[]"/>
                    </params>
                    <declaration name="len" type="int" line="300"/>
                    <declaration name="read" type="int" line="301"/>
                    <scope line="302">
                        <scope line="303">
                            <declaration name="count" type="int" line="304"/>
                        </scope>
                    </scope>
                    <scope line="309"/>
                </method>
            </class>
        </class>
    </source>