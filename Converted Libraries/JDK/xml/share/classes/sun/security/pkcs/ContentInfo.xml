<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.pkcs">
        <import package="java.io"/>
        <import package="sun.security.util"/>
        <class name="ContentInfo" line="4">
            <javadoc line="4">
                A ContentInfo type, as defined in PKCS#7.                
                <author>
                    Benjamin Renaud                    
                </author>
            </javadoc>
            <declaration name="pkcs7" type="int[]" line="9"/>
            <declaration name="data" type="int[]" line="10"/>
            <declaration name="sdata" type="int[]" line="11"/>
            <declaration name="edata" type="int[]" line="12"/>
            <declaration name="sedata" type="int[]" line="13"/>
            <declaration name="ddata" type="int[]" line="14"/>
            <declaration name="crdata" type="int[]" line="15"/>
            <declaration name="nsdata" type="int[]" line="16"/>
            <declaration name="tstInfo" type="int[]" line="17"/>
            <declaration name="OLD_SDATA" type="int[]" line="18"/>
            <declaration name="OLD_DATA" type="int[]" line="19"/>
            <declaration name="PKCS7_OID" type="ObjectIdentifier" line="20"/>
            <declaration name="DATA_OID" type="ObjectIdentifier" line="21"/>
            <declaration name="SIGNED_DATA_OID" type="ObjectIdentifier" line="22"/>
            <declaration name="ENVELOPED_DATA_OID" type="ObjectIdentifier" line="23"/>
            <declaration name="SIGNED_AND_ENVELOPED_DATA_OID" type="ObjectIdentifier" line="24"/>
            <declaration name="DIGESTED_DATA_OID" type="ObjectIdentifier" line="25"/>
            <declaration name="ENCRYPTED_DATA_OID" type="ObjectIdentifier" line="26"/>
            <declaration name="OLD_SIGNED_DATA_OID" type="ObjectIdentifier" line="27"/>
            <declaration name="OLD_DATA_OID" type="ObjectIdentifier" line="28"/>
            <declaration name="NETSCAPE_CERT_SEQUENCE_OID" type="ObjectIdentifier" line="29"/>
            <declaration name="TIMESTAMP_TOKEN_INFO_OID" type="ObjectIdentifier" line="30"/>
            <scope line="31"/>
            <declaration name="contentType" type="ObjectIdentifier" line="44"/>
            <declaration name="content" type="DerValue" line="45"/>
            <method name="ContentInfo" type="constructor" line="46">
                <params>
                    <param name="contentType" type="ObjectIdentifier"/>
                    <param name="content" type="DerValue"/>
                </params>
            </method>
            <javadoc line="50">
                Make a contentInfo of type data.                
            </javadoc>
            <method name="ContentInfo" type="constructor" line="53">
                <params>
                    <param name="bytes" type="byte[]"/>
                </params>
                <declaration name="octetString" type="DerValue" line="54"/>
            </method>
            <javadoc line="58">
                Parses a PKCS#7 content info.                
            </javadoc>
            <method name="ContentInfo" type="constructor" line="61">
                <params>
                    <param name="derin" type="DerInputStream"/>
                </params>
            </method>
            <javadoc line="64">
                Parses a PKCS#7 content info.
                  &lt;p&gt;This constructor is used only for backwards compatibility with
                  PKCS#7 blocks that were generated using JDK1.1.x.                
                <param>
                    derin the ASN.1 encoding of the content info.                    
                </param>
                <param>
                    oldStyle flag indicating whether or not the given content info
                      is encoded according to JDK1.1.x.                    
                </param>
            </javadoc>
            <method name="ContentInfo" type="constructor" line="72">
                <params>
                    <param name="derin" type="DerInputStream"/>
                    <param name="oldStyle" type="boolean"/>
                </params>
                <declaration name="disType" type="DerInputStream" line="73"/>
                <declaration name="disTaggedContent" type="DerInputStream" line="74"/>
                <declaration name="type" type="DerValue" line="75"/>
                <declaration name="taggedContent" type="DerValue" line="76"/>
                <declaration name="typeAndContent" type="DerValue[]" line="77"/>
                <declaration name="contents" type="DerValue[]" line="78"/>
                <scope line="83"/>
                <scope line="86">
                    <scope line="87"/>
                </scope>
            </method>
            <method name="getContent" type="DerValue" line="95"/>
            <method name="getContentType" type="ObjectIdentifier" line="98"/>
            <method name="getData" type="byte[]" line="101">
                <scope line="102"/>
            </method>
            <method name="encode" type="void" line="108">
                <params>
                    <param name="out" type="DerOutputStream"/>
                </params>
                <declaration name="contentDerCode" type="DerOutputStream" line="109"/>
                <declaration name="seq" type="DerOutputStream" line="110"/>
                <scope line="113">
                    <declaration name="taggedContent" type="DerValue" line="114"/>
                </scope>
            </method>
            <javadoc line="122">
                Returns a byte array representation of the data held in
                  the content field.                
            </javadoc>
            <method name="getContentBytes" type="byte[]" line="126">
                <declaration name="dis" type="DerInputStream" line="128"/>
            </method>
            <method name="toString" type="String" line="131">
                <declaration name="out" type="String" line="132"/>
            </method>
        </class>
    </source>