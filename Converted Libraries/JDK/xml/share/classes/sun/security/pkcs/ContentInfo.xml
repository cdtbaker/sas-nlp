<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.pkcs">
        <import package="java.io"/>
        <import package="sun.security.util"/>
        <class name="ContentInfo" line="32">
            <comment line="41">
                pkcs7 pre-defined content types                
            </comment>
            <comment line="50">
                timestamp token (id-ct-TSTInfo) from RFC 3161                
            </comment>
            <comment line="52">
                this is for backwards-compatibility with JDK 1.1.x                
            </comment>
            <comment line="88">
                OPTIONAL                
            </comment>
            <javadoc line="32">
                A ContentInfo type, as defined in PKCS#7.                
                <author>
                    Benjamin Renaud                    
                </author>
            </javadoc>
            <declaration name="pkcs7" type="int[]" line="41"/>
            <declaration name="data" type="int[]" line="42"/>
            <declaration name="sdata" type="int[]" line="43"/>
            <declaration name="edata" type="int[]" line="44"/>
            <declaration name="sedata" type="int[]" line="45"/>
            <declaration name="ddata" type="int[]" line="46"/>
            <declaration name="crdata" type="int[]" line="47"/>
            <declaration name="nsdata" type="int[]" line="48"/>
            <declaration name="tstInfo" type="int[]" line="50"/>
            <declaration name="OLD_SDATA" type="int[]" line="52"/>
            <declaration name="OLD_DATA" type="int[]" line="53"/>
            <declaration name="PKCS7_OID" type="ObjectIdentifier" line="54"/>
            <declaration name="DATA_OID" type="ObjectIdentifier" line="55"/>
            <declaration name="SIGNED_DATA_OID" type="ObjectIdentifier" line="56"/>
            <declaration name="ENVELOPED_DATA_OID" type="ObjectIdentifier" line="57"/>
            <declaration name="SIGNED_AND_ENVELOPED_DATA_OID" type="ObjectIdentifier" line="58"/>
            <declaration name="DIGESTED_DATA_OID" type="ObjectIdentifier" line="59"/>
            <declaration name="ENCRYPTED_DATA_OID" type="ObjectIdentifier" line="60"/>
            <declaration name="OLD_SIGNED_DATA_OID" type="ObjectIdentifier" line="61"/>
            <declaration name="OLD_DATA_OID" type="ObjectIdentifier" line="62"/>
            <declaration name="NETSCAPE_CERT_SEQUENCE_OID" type="ObjectIdentifier" line="63"/>
            <declaration name="TIMESTAMP_TOKEN_INFO_OID" type="ObjectIdentifier" line="64"/>
            <scope line="66"/>
            <declaration name="contentType" type="ObjectIdentifier" line="86"/>
            <declaration name="content" type="DerValue" line="87"/>
            <method name="ContentInfo" type="constructor" line="89">
                <params>
                    <param name="contentType" type="ObjectIdentifier"/>
                    <param name="content" type="DerValue"/>
                </params>
            </method>
            <javadoc line="94">
                Make a contentInfo of type data.                
            </javadoc>
            <method name="ContentInfo" type="constructor" line="97">
                <params>
                    <param name="bytes" type="byte[]"/>
                </params>
                <declaration name="octetString" type="DerValue" line="98"/>
            </method>
            <javadoc line="103">
                Parses a PKCS#7 content info.                
            </javadoc>
            <method name="ContentInfo" type="constructor" line="108">
                <params>
                    <param name="derin" type="DerInputStream"/>
                </params>
            </method>
            <javadoc line="112">
                Parses a PKCS#7 content info.
                  &lt;p&gt;This constructor is used only for backwards compatibility with
                  PKCS#7 blocks that were generated using JDK1.1.x.                
                <param>
                    derin the ASN.1 encoding of the content info.                    
                </param>
                <param>
                    oldStyle flag indicating whether or not the given content info
                      is encoded according to JDK1.1.x.                    
                </param>
            </javadoc>
            <method name="ContentInfo" type="constructor" line="124">
                <params>
                    <param name="derin" type="DerInputStream"/>
                    <param name="oldStyle" type="boolean"/>
                </params>
                <comment line="134">
                    Parse the content type                    
                </comment>
                <comment line="140">
                    JDK1.1.x-style encoding                    
                </comment>
                <comment line="143">
                    This is the correct, standards-compliant encoding.                    
                </comment>
                <comment line="144">
                    Parse the content (OPTIONAL field).                    
                </comment>
                <comment line="145">
                    Skip the [0] EXPLICIT tag by pretending that the content is the                    
                </comment>
                <comment line="146">
                    one and only element in an implicitly tagged set                    
                </comment>
                <comment line="147">
                    content is OPTIONAL                    
                </comment>
                <declaration name="disType" type="DerInputStream" line="125"/>
                <declaration name="disTaggedContent" type="DerInputStream" line="126"/>
                <declaration name="type" type="DerValue" line="127"/>
                <declaration name="taggedContent" type="DerValue" line="128"/>
                <declaration name="typeAndContent" type="DerValue[]" line="129"/>
                <declaration name="contents" type="DerValue[]" line="130"/>
                <scope line="139"/>
                <scope line="142">
                    <scope line="147"/>
                </scope>
            </method>
            <method name="getContent" type="DerValue" line="157"/>
            <method name="getContentType" type="ObjectIdentifier" line="161"/>
            <method name="getData" type="byte[]" line="165">
                <scope line="168"/>
            </method>
            <method name="encode" type="void" line="177">
                <params>
                    <param name="out" type="DerOutputStream"/>
                </params>
                <comment line="184">
                    content is optional, it could be external                    
                </comment>
                <comment line="190">
                    Add the [0] EXPLICIT tag in front of the content encoding                    
                </comment>
                <declaration name="contentDerCode" type="DerOutputStream" line="178"/>
                <declaration name="seq" type="DerOutputStream" line="179"/>
                <scope line="185">
                    <declaration name="taggedContent" type="DerValue" line="186"/>
                </scope>
            </method>
            <javadoc line="199">
                Returns a byte array representation of the data held in
                  the content field.                
            </javadoc>
            <method name="getContentBytes" type="byte[]" line="203">
                <declaration name="dis" type="DerInputStream" line="207"/>
            </method>
            <method name="toString" type="String" line="211">
                <declaration name="out" type="String" line="212"/>
            </method>
        </class>
    </source>