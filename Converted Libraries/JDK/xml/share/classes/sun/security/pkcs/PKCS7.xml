<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.pkcs">
        <import package="java.io"/>
        <import package="java.math.BigInteger"/>
        <import package="java.util"/>
        <import package="java.security.cert.X509Certificate"/>
        <import package="java.security.cert.CertificateException"/>
        <import package="java.security.cert.X509CRL"/>
        <import package="java.security.cert.CRLException"/>
        <import package="java.security.cert.CertificateFactory"/>
        <import package="java.security"/>
        <import package="sun.security.util"/>
        <import package="sun.security.x509.AlgorithmId"/>
        <import package="sun.security.x509.CertificateIssuerName"/>
        <import package="sun.security.x509.X509CertImpl"/>
        <import package="sun.security.x509.X509CertInfo"/>
        <import package="sun.security.x509.X509CRLImpl"/>
        <import package="sun.security.x509.X500Name"/>
        <class name="PKCS7" line="46">
            <comment line="60">
                the ASN.1 members for a signedData (and other) contentTypes                
            </comment>
            <comment line="68">
                Is this JDK1.1.x-style?                
            </comment>
            <comment line="118">
                Parses a PKCS#7 block.                
            </comment>
            <comment line="357">
                Parses an old-style SignedData encoding (for backwards
                 compatibility with JDK1.1.x).                
            </comment>
            <javadoc line="46">
                PKCS7 as defined in RSA Laboratories PKCS7 Technical Note. Profile
                  Supports only &lt;tt&gt;SignedData&lt;/tt&gt; ContentInfo
                  type, where to the type of data signed is plain Data.
                  For signedData, &lt;tt&gt;crls&lt;/tt&gt;, &lt;tt&gt;attributes&lt;/tt&gt; and
                  PKCS#6 Extended Certificates are not supported.                
                <author>
                    Benjamin Renaud                    
                </author>
            </javadoc>
            <declaration name="contentType" type="ObjectIdentifier" line="57"/>
            <declaration name="version" type="BigInteger" line="60"/>
            <declaration name="digestAlgorithmIds" type="AlgorithmId[]" line="61"/>
            <declaration name="contentInfo" type="ContentInfo" line="62"/>
            <declaration name="certificates" type="X509Certificate[]" line="63"/>
            <declaration name="crls" type="X509CRL[]" line="64"/>
            <declaration name="signerInfos" type="SignerInfo[]" line="65"/>
            <declaration name="oldStyle" type="boolean" line="67"/>
            <declaration name="certIssuerNames" type="Principal[]" line="69"/>
            <javadoc line="71">
                Unmarshals a PKCS7 block from its encoded form, parsing the
                  encoded bytes from the InputStream.                
                <param>
                    in an input stream holding at least one PKCS7 block.                    
                </param>
                <exception>
                    ParsingException on parsing errors.                    
                </exception>
                <exception>
                    IOException on other errors.                    
                </exception>
            </javadoc>
            <method name="PKCS7" type="constructor" line="79">
                <params>
                    <param name="in" type="InputStream"/>
                </params>
                <declaration name="dis" type="DataInputStream" line="80"/>
                <declaration name="data" type="byte[]" line="81"/>
            </method>
            <javadoc line="87">
                Unmarshals a PKCS7 block from its encoded form, parsing the
                  encoded bytes from the DerInputStream.                
                <param>
                    derin a DerInputStream holding at least one PKCS7 block.                    
                </param>
                <exception>
                    ParsingException on parsing errors.                    
                </exception>
            </javadoc>
            <method name="PKCS7" type="constructor" line="94">
                <params>
                    <param name="derin" type="DerInputStream"/>
                </params>
            </method>
            <javadoc line="98">
                Unmarshals a PKCS7 block from its encoded form, parsing the
                  encoded bytes.                
                <param>
                    bytes the encoded bytes.                    
                </param>
                <exception>
                    ParsingException on parsing errors.                    
                </exception>
            </javadoc>
            <method name="PKCS7" type="constructor" line="105">
                <params>
                    <param name="bytes" type="byte[]"/>
                </params>
                <scope line="106">
                    <declaration name="derin" type="DerInputStream" line="107"/>
                </scope>
                <scope line="109">
                    <declaration name="pe" type="ParsingException" line="110"/>
                </scope>
            </method>
            <method name="parse" type="void" line="122">
                <params>
                    <param name="derin" type="DerInputStream"/>
                </params>
                <comment line="126">
                    try new (i.e., JDK1.2) style                    
                </comment>
                <comment line="131">
                    try old (i.e., JDK1.1.x) style                    
                </comment>
                <scope line="123"/>
                <scope line="127">
                    <scope line="128"/>
                    <scope line="133">
                        <declaration name="pe" type="ParsingException" line="134"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="142">
                Parses a PKCS#7 block.                
                <param>
                    derin the ASN.1 encoding of the PKCS#7 block.                    
                </param>
                <param>
                    oldStyle flag indicating whether or not the given PKCS#7 block
                      is encoded according to JDK1.1.x.                    
                </param>
            </javadoc>
            <method name="parse" type="void" line="151">
                <params>
                    <param name="derin" type="DerInputStream"/>
                    <param name="oldStyle" type="boolean"/>
                </params>
                <comment line="160">
                    This is for backwards compatibility with JDK 1.1.x                    
                </comment>
                <declaration name="content" type="DerValue" line="154"/>
                <scope line="156"/>
                <scope line="158"/>
                <scope line="161"/>
                <scope line="163"/>
            </method>
            <javadoc line="169">
                Construct an initialized PKCS7 block.                
                <param>
                    digestAlgorithmIds the message digest algorithm identifiers.                    
                </param>
                <param>
                    contentInfo the content information.                    
                </param>
                <param>
                    certificates an array of X.509 certificates.                    
                </param>
                <param>
                    crls an array of CRLs                    
                </param>
                <param>
                    signerInfos an array of signer information.                    
                </param>
            </javadoc>
            <method name="PKCS7" type="constructor" line="182">
                <params>
                    <param name="digestAlgorithmIds" type="AlgorithmId[]"/>
                    <param name="contentInfo" type="ContentInfo"/>
                    <param name="certificates" type="X509Certificate[]"/>
                    <param name="crls" type="X509CRL[]"/>
                    <param name="signerInfos" type="SignerInfo[]"/>
                </params>
            </method>
            <method name="PKCS7" type="constructor" line="195">
                <params>
                    <param name="digestAlgorithmIds" type="AlgorithmId[]"/>
                    <param name="contentInfo" type="ContentInfo"/>
                    <param name="certificates" type="X509Certificate[]"/>
                    <param name="signerInfos" type="SignerInfo[]"/>
                </params>
            </method>
            <method name="parseNetscapeCertChain" type="void" line="200">
                <params>
                    <param name="val" type="DerValue"/>
                </params>
                <comment line="210">
                    do nothing                    
                </comment>
                <declaration name="dis" type="DerInputStream" line="201"/>
                <declaration name="contents" type="DerValue[]" line="202"/>
                <declaration name="certfac" type="CertificateFactory" line="205"/>
                <scope line="206"/>
                <scope line="208"/>
                <scope line="212">
                    <declaration name="bais" type="ByteArrayInputStream" line="213"/>
                    <scope line="214">
                        <scope line="217">
                            <declaration name="encoded" type="byte[]" line="218"/>
                        </scope>
                    </scope>
                    <scope line="225">
                        <declaration name="pe" type="ParsingException" line="226"/>
                    </scope>
                    <scope line="229">
                        <declaration name="pe" type="ParsingException" line="230"/>
                    </scope>
                    <scope line="233"/>
                </scope>
            </method>
            <method name="parseSignedData" type="void" line="241">
                <params>
                    <param name="val" type="DerValue"/>
                </params>
                <comment line="246">
                    Version                    
                </comment>
                <comment line="249">
                    digestAlgorithmIds                    
                </comment>
                <comment line="266">
                    contentInfo                    
                </comment>
                <comment line="273">
                    do nothing                    
                </comment>
                <comment line="276">
                    check if certificates (implicit tag) are provided
                     (certificates are OPTIONAL)                    
                </comment>
                <comment line="314">
                    check if crls (implicit tag) are provided (crls are OPTIONAL)                    
                </comment>
                <comment line="345">
                    signerInfos                    
                </comment>
                <declaration name="dis" type="DerInputStream" line="243"/>
                <declaration name="digestAlgorithmIdVals" type="DerValue[]" line="249"/>
                <declaration name="len" type="int" line="250"/>
                <scope line="252">
                    <scope line="253">
                        <declaration name="oid" type="DerValue" line="254"/>
                    </scope>
                </scope>
                <scope line="258">
                    <declaration name="pe" type="ParsingException" line="259"/>
                </scope>
                <declaration name="certfac" type="CertificateFactory" line="268"/>
                <scope line="269"/>
                <scope line="271"/>
                <scope line="279">
                    <declaration name="certVals" type="DerValue[]" line="280"/>
                    <scope line="285">
                        <declaration name="bais" type="ByteArrayInputStream" line="286"/>
                        <scope line="287">
                            <scope line="290">
                                <declaration name="encoded" type="byte[]" line="291"/>
                            </scope>
                        </scope>
                        <scope line="298">
                            <declaration name="pe" type="ParsingException" line="299"/>
                        </scope>
                        <scope line="302">
                            <declaration name="pe" type="ParsingException" line="303"/>
                        </scope>
                        <scope line="306"/>
                    </scope>
                </scope>
                <scope line="314">
                    <declaration name="crlVals" type="DerValue[]" line="315"/>
                    <scope line="320">
                        <declaration name="bais" type="ByteArrayInputStream" line="321"/>
                        <scope line="322">
                            <scope line="325">
                                <declaration name="encoded" type="byte[]" line="326"/>
                            </scope>
                        </scope>
                        <scope line="332">
                            <declaration name="pe" type="ParsingException" line="333"/>
                        </scope>
                        <scope line="337"/>
                    </scope>
                </scope>
                <declaration name="signerInfoVals" type="DerValue[]" line="345"/>
                <scope line="350">
                    <declaration name="in" type="DerInputStream" line="351"/>
                </scope>
            </method>
            <method name="parseOldSignedData" type="void" line="362">
                <params>
                    <param name="val" type="DerValue"/>
                </params>
                <comment line="366">
                    Version                    
                </comment>
                <comment line="369">
                    digestAlgorithmIds                    
                </comment>
                <comment line="383">
                    contentInfo                    
                </comment>
                <comment line="386">
                    certificates                    
                </comment>
                <comment line="391">
                    do nothing                    
                </comment>
                <comment line="424">
                    crls are ignored.                    
                </comment>
                <comment line="427">
                    signerInfos                    
                </comment>
                <declaration name="dis" type="DerInputStream" line="363"/>
                <declaration name="digestAlgorithmIdVals" type="DerValue[]" line="369"/>
                <declaration name="len" type="int" line="370"/>
                <scope line="373">
                    <scope line="374">
                        <declaration name="oid" type="DerValue" line="375"/>
                    </scope>
                </scope>
                <scope line="378"/>
                <declaration name="certfac" type="CertificateFactory" line="386"/>
                <scope line="387"/>
                <scope line="389"/>
                <declaration name="certVals" type="DerValue[]" line="392"/>
                <scope line="396">
                    <declaration name="bais" type="ByteArrayInputStream" line="397"/>
                    <scope line="398">
                        <scope line="401">
                            <declaration name="encoded" type="byte[]" line="402"/>
                        </scope>
                    </scope>
                    <scope line="409">
                        <declaration name="pe" type="ParsingException" line="410"/>
                    </scope>
                    <scope line="413">
                        <declaration name="pe" type="ParsingException" line="414"/>
                    </scope>
                    <scope line="417"/>
                </scope>
                <declaration name="signerInfoVals" type="DerValue[]" line="427"/>
                <scope line="430">
                    <declaration name="in" type="DerInputStream" line="431"/>
                </scope>
            </method>
            <javadoc line="436">
                Encodes the signed data to an output stream.                
                <param>
                    out the output stream to write the encoded data to.                    
                </param>
                <exception>
                    IOException on encoding errors.                    
                </exception>
            </javadoc>
            <method name="encodeSignedData" type="void" line="442">
                <params>
                    <param name="out" type="OutputStream"/>
                </params>
                <declaration name="derout" type="DerOutputStream" line="443"/>
            </method>
            <javadoc line="448">
                Encodes the signed data to a DerOutputStream.                
                <param>
                    out the DerOutputStream to write the encoded data to.                    
                </param>
                <exception>
                    IOException on encoding errors.                    
                </exception>
            </javadoc>
            <method name="encodeSignedData" type="void" line="456">
                <params>
                    <param name="out" type="DerOutputStream"/>
                </params>
                <comment line="460">
                    version                    
                </comment>
                <comment line="463">
                    digestAlgorithmIds                    
                </comment>
                <comment line="466">
                    contentInfo                    
                </comment>
                <comment line="469">
                    certificates (optional)                    
                </comment>
                <comment line="471">
                    cast to X509CertImpl[] since X509CertImpl implements DerEncoder                    
                </comment>
                <comment line="488">
                    Add the certificate set (tagged with [0] IMPLICIT)
                     to the signed data                    
                </comment>
                <comment line="493">
                    CRLs (optional)                    
                </comment>
                <comment line="495">
                    cast to X509CRLImpl[] since X509CRLImpl implements DerEncoder                    
                </comment>
                <comment line="512">
                    Add the CRL set (tagged with [1] IMPLICIT)
                     to the signed data                    
                </comment>
                <comment line="518">
                    signerInfos                    
                </comment>
                <comment line="521">
                    making it a signed data block                    
                </comment>
                <comment line="525">
                    making it a content info sequence                    
                </comment>
                <comment line="529">
                    writing out the contentInfo sequence                    
                </comment>
                <declaration name="signedData" type="DerOutputStream" line="457"/>
                <scope line="469">
                    <declaration name="implCerts" type="X509CertImpl" line="471"/>
                    <scope line="472">
                        <scope line="475">
                            <scope line="476">
                                <declaration name="encoded" type="byte[]" line="477"/>
                            </scope>
                            <scope line="479">
                                <declaration name="ie" type="IOException" line="480"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="493">
                    <declaration name="implCRLs" type="Set&lt;X509CRLImpl&gt;" line="495"/>
                    <scope line="496">
                        <scope line="499">
                            <scope line="500">
                                <declaration name="encoded" type="byte[]" line="501"/>
                            </scope>
                            <scope line="503">
                                <declaration name="ie" type="IOException" line="504"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <declaration name="signedDataSeq" type="DerValue" line="521"/>
                <declaration name="block" type="ContentInfo" line="525"/>
            </method>
            <javadoc line="532">
                This verifies a given SignerInfo.                
                <param>
                    info the signer information.                    
                </param>
                <param>
                    bytes the DER encoded content information.                    
                </param>
                <exception>
                    NoSuchAlgorithmException on unrecognized algorithms.                    
                </exception>
                <exception>
                    SignatureException on signature handling errors.                    
                </exception>
            </javadoc>
            <method name="verify" type="SignerInfo" line="542">
                <params>
                    <param name="info" type="SignerInfo"/>
                    <param name="bytes" type="byte[]"/>
                </params>
            </method>
            <javadoc line="546">
                Returns all signerInfos which self-verify.                
                <param>
                    bytes the DER encoded content information.                    
                </param>
                <exception>
                    NoSuchAlgorithmException on unrecognized algorithms.                    
                </exception>
                <exception>
                    SignatureException on signature handling errors.                    
                </exception>
            </javadoc>
            <method name="verify" type="SignerInfo[]" line="555">
                <params>
                    <param name="bytes" type="byte[]"/>
                </params>
                <declaration name="intResult" type="Vector&lt;SignerInfo&gt;" line="557"/>
                <scope line="558">
                    <declaration name="signerInfo" type="SignerInfo" line="560"/>
                    <scope line="561"/>
                </scope>
                <scope line="565">
                    <declaration name="result" type="SignerInfo[]" line="567"/>
                </scope>
            </method>
            <javadoc line="574">
                Returns all signerInfos which self-verify.                
                <exception>
                    NoSuchAlgorithmException on unrecognized algorithms.                    
                </exception>
                <exception>
                    SignatureException on signature handling errors.                    
                </exception>
            </javadoc>
            <method name="verify" type="SignerInfo[]" line="581"/>
            <javadoc line="585">
                Returns the version number of this PKCS7 block.                
                <return>
                    the version or null if version is not specified
                      for the content type.                    
                </return>
            </javadoc>
            <method name="getVersion" type="BigInteger" line="590"/>
            <javadoc line="594">
                Returns the message digest algorithms specified in this PKCS7 block.                
                <return>
                    the array of Digest Algorithms or null if none are specified
                      for the content type.                    
                </return>
            </javadoc>
            <method name="getDigestAlgorithmIds" type="AlgorithmId[]" line="599"/>
            <javadoc line="603">
                Returns the content information specified in this PKCS7 block.                
            </javadoc>
            <method name="getContentInfo" type="ContentInfo" line="606"/>
            <javadoc line="610">
                Returns the X.509 certificates listed in this PKCS7 block.                
                <return>
                    a clone of the array of X.509 certificates or null if
                      none are specified for the content type.                    
                </return>
            </javadoc>
            <method name="getCertificates" type="X509Certificate[]" line="615"/>
            <javadoc line="622">
                Returns the X.509 crls listed in this PKCS7 block.                
                <return>
                    a clone of the array of X.509 crls or null if none
                      are specified for the content type.                    
                </return>
            </javadoc>
            <method name="getCRLs" type="X509CRL[]" line="627"/>
            <javadoc line="634">
                Returns the signer&apos;s information specified in this PKCS7 block.                
                <return>
                    the array of Signer Infos or null if none are specified
                      for the content type.                    
                </return>
            </javadoc>
            <method name="getSignerInfos" type="SignerInfo[]" line="639"/>
            <javadoc line="643">
                Returns the X.509 certificate listed in this PKCS7 block
                  which has a matching serial number and Issuer name, or
                  null if one is not found.                
                <param>
                    serial the serial number of the certificate to retrieve.                    
                </param>
                <param>
                    issuerName the Distinguished Name of the Issuer.                    
                </param>
            </javadoc>
            <method name="getCertificate" type="X509Certificate" line="651">
                <params>
                    <param name="serial" type="BigInteger"/>
                    <param name="issuerName" type="X500Name"/>
                </params>
                <scope line="652">
                    <scope line="655">
                        <declaration name="cert" type="X509Certificate" line="656"/>
                        <declaration name="thisSerial" type="BigInteger" line="657"/>
                        <scope line="660"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="668">
                Populate array of Issuer DNs from certificates and convert
                  each Principal to type X500Name if necessary.                
            </javadoc>
            <method name="populateCertIssuerNames" type="void" line="672">
                <comment line="682">
                    must extract the original encoded form of DN for
                     subsequent name comparison checks (converting to a
                     String and back to an encoded DN could cause the
                     types of String attribute values to be changed)                    
                </comment>
                <comment line="693">
                    error generating X500Name object from the cert&apos;s
                     issuer DN, leave name as is.                    
                </comment>
                <scope line="677">
                    <declaration name="cert" type="X509Certificate" line="678"/>
                    <declaration name="certIssuerName" type="Principal" line="679"/>
                    <scope line="680">
                        <scope line="685">
                            <declaration name="tbsCert" type="X509CertInfo" line="686"/>
                        </scope>
                        <scope line="691"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="700">
                Returns the PKCS7 block in a printable string form.                
            </javadoc>
            <method name="toString" type="String" line="703">
                <declaration name="out" type="String" line="704"/>
                <scope line="709"/>
                <scope line="714"/>
                <scope line="719"/>
                <scope line="724"/>
            </method>
            <javadoc line="732">
                Returns true if this is a JDK1.1.x-style PKCS#7 block, and false
                  otherwise.                
            </javadoc>
            <method name="isOldStyle" type="boolean" line="736"/>
        </class>
    </source>