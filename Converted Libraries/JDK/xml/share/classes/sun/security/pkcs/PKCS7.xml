<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.pkcs">
        <import package="java.io"/>
        <import package="java.math.BigInteger"/>
        <import package="java.util"/>
        <import package="java.security.cert.X509Certificate"/>
        <import package="java.security.cert.CertificateException"/>
        <import package="java.security.cert.X509CRL"/>
        <import package="java.security.cert.CRLException"/>
        <import package="java.security.cert.CertificateFactory"/>
        <import package="java.security"/>
        <import package="sun.security.util"/>
        <import package="sun.security.x509.AlgorithmId"/>
        <import package="sun.security.x509.CertificateIssuerName"/>
        <import package="sun.security.x509.X509CertImpl"/>
        <import package="sun.security.x509.X509CertInfo"/>
        <import package="sun.security.x509.X509CRLImpl"/>
        <import package="sun.security.x509.X500Name"/>
        <class name="PKCS7" line="18">
            <javadoc line="18">
                PKCS7 as defined in RSA Laboratories PKCS7 Technical Note. Profile
                  Supports only &lt;tt&gt;SignedData&lt;/tt&gt; ContentInfo
                  type, where to the type of data signed is plain Data.
                  For signedData, &lt;tt&gt;crls&lt;/tt&gt;, &lt;tt&gt;attributes&lt;/tt&gt; and
                  PKCS#6 Extended Certificates are not supported.                
                <author>
                    Benjamin Renaud                    
                </author>
            </javadoc>
            <declaration name="contentType" type="ObjectIdentifier" line="27"/>
            <declaration name="version" type="BigInteger" line="28"/>
            <declaration name="digestAlgorithmIds" type="AlgorithmId[]" line="29"/>
            <declaration name="contentInfo" type="ContentInfo" line="30"/>
            <declaration name="certificates" type="X509Certificate[]" line="31"/>
            <declaration name="crls" type="X509CRL[]" line="32"/>
            <declaration name="signerInfos" type="SignerInfo[]" line="33"/>
            <declaration name="oldStyle" type="boolean" line="34"/>
            <declaration name="certIssuerNames" type="Principal[]" line="35"/>
            <javadoc line="36">
                Unmarshals a PKCS7 block from its encoded form, parsing the
                  encoded bytes from the InputStream.                
                <param>
                    in an input stream holding at least one PKCS7 block.                    
                </param>
                <exception>
                    ParsingException on parsing errors.                    
                </exception>
                <exception>
                    IOException on other errors.                    
                </exception>
            </javadoc>
            <method name="PKCS7" type="constructor" line="43">
                <params>
                    <param name="in" type="InputStream"/>
                </params>
                <declaration name="dis" type="DataInputStream" line="44"/>
                <declaration name="data" type="byte[]" line="45"/>
            </method>
            <javadoc line="49">
                Unmarshals a PKCS7 block from its encoded form, parsing the
                  encoded bytes from the DerInputStream.                
                <param>
                    derin a DerInputStream holding at least one PKCS7 block.                    
                </param>
                <exception>
                    ParsingException on parsing errors.                    
                </exception>
            </javadoc>
            <method name="PKCS7" type="constructor" line="55">
                <params>
                    <param name="derin" type="DerInputStream"/>
                </params>
            </method>
            <javadoc line="58">
                Unmarshals a PKCS7 block from its encoded form, parsing the
                  encoded bytes.                
                <param>
                    bytes the encoded bytes.                    
                </param>
                <exception>
                    ParsingException on parsing errors.                    
                </exception>
            </javadoc>
            <method name="PKCS7" type="constructor" line="64">
                <params>
                    <param name="bytes" type="byte[]"/>
                </params>
                <scope line="65">
                    <declaration name="derin" type="DerInputStream" line="66"/>
                </scope>
                <scope line="69">
                    <declaration name="pe" type="ParsingException" line="70"/>
                </scope>
            </method>
            <method name="parse" type="void" line="75">
                <params>
                    <param name="derin" type="DerInputStream"/>
                </params>
                <scope line="76"/>
                <scope line="80">
                    <scope line="81"/>
                    <scope line="86">
                        <declaration name="pe" type="ParsingException" line="87"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="93">
                Parses a PKCS#7 block.                
                <param>
                    derin the ASN.1 encoding of the PKCS#7 block.                    
                </param>
                <param>
                    oldStyle flag indicating whether or not the given PKCS#7 block
                      is encoded according to JDK1.1.x.                    
                </param>
            </javadoc>
            <method name="parse" type="void" line="99">
                <params>
                    <param name="derin" type="DerInputStream"/>
                    <param name="oldStyle" type="boolean"/>
                </params>
                <declaration name="content" type="DerValue" line="102"/>
                <scope line="103"/>
                <scope line="106"/>
                <scope line="109"/>
                <scope line="112"/>
            </method>
            <javadoc line="116">
                Construct an initialized PKCS7 block.                
                <param>
                    digestAlgorithmIds the message digest algorithm identifiers.                    
                </param>
                <param>
                    contentInfo the content information.                    
                </param>
                <param>
                    certificates an array of X.509 certificates.                    
                </param>
                <param>
                    crls an array of CRLs                    
                </param>
                <param>
                    signerInfos an array of signer information.                    
                </param>
            </javadoc>
            <method name="PKCS7" type="constructor" line="124">
                <params>
                    <param name="digestAlgorithmIds" type="AlgorithmId[]"/>
                    <param name="contentInfo" type="ContentInfo"/>
                    <param name="certificates" type="X509Certificate[]"/>
                    <param name="crls" type="X509CRL[]"/>
                    <param name="signerInfos" type="SignerInfo[]"/>
                </params>
            </method>
            <method name="PKCS7" type="constructor" line="132">
                <params>
                    <param name="digestAlgorithmIds" type="AlgorithmId[]"/>
                    <param name="contentInfo" type="ContentInfo"/>
                    <param name="certificates" type="X509Certificate[]"/>
                    <param name="signerInfos" type="SignerInfo[]"/>
                </params>
            </method>
            <method name="parseNetscapeCertChain" type="void" line="135">
                <params>
                    <param name="val" type="DerValue"/>
                </params>
                <declaration name="dis" type="DerInputStream" line="136"/>
                <declaration name="contents" type="DerValue[]" line="137"/>
                <declaration name="certfac" type="CertificateFactory" line="139"/>
                <scope line="140"/>
                <scope line="143"/>
                <scope line="145">
                    <declaration name="bais" type="ByteArrayInputStream" line="146"/>
                    <scope line="147">
                        <scope line="149">
                            <declaration name="encoded" type="byte[]" line="150"/>
                        </scope>
                    </scope>
                    <scope line="157">
                        <declaration name="pe" type="ParsingException" line="158"/>
                    </scope>
                    <scope line="162">
                        <declaration name="pe" type="ParsingException" line="163"/>
                    </scope>
                    <scope line="167"/>
                </scope>
            </method>
            <method name="parseSignedData" type="void" line="172">
                <params>
                    <param name="val" type="DerValue"/>
                </params>
                <declaration name="dis" type="DerInputStream" line="173"/>
                <declaration name="digestAlgorithmIdVals" type="DerValue[]" line="175"/>
                <declaration name="len" type="int" line="176"/>
                <scope line="178">
                    <scope line="179">
                        <declaration name="oid" type="DerValue" line="180"/>
                    </scope>
                </scope>
                <scope line="184">
                    <declaration name="pe" type="ParsingException" line="185"/>
                </scope>
                <declaration name="certfac" type="CertificateFactory" line="190"/>
                <scope line="191"/>
                <scope line="194"/>
                <scope line="196">
                    <declaration name="certVals" type="DerValue[]" line="197"/>
                    <scope line="200">
                        <declaration name="bais" type="ByteArrayInputStream" line="201"/>
                        <scope line="202">
                            <scope line="204">
                                <declaration name="encoded" type="byte[]" line="205"/>
                            </scope>
                        </scope>
                        <scope line="212">
                            <declaration name="pe" type="ParsingException" line="213"/>
                        </scope>
                        <scope line="217">
                            <declaration name="pe" type="ParsingException" line="218"/>
                        </scope>
                        <scope line="222"/>
                    </scope>
                </scope>
                <scope line="227">
                    <declaration name="crlVals" type="DerValue[]" line="228"/>
                    <scope line="231">
                        <declaration name="bais" type="ByteArrayInputStream" line="232"/>
                        <scope line="233">
                            <scope line="235">
                                <declaration name="encoded" type="byte[]" line="236"/>
                            </scope>
                        </scope>
                        <scope line="243">
                            <declaration name="pe" type="ParsingException" line="244"/>
                        </scope>
                        <scope line="248"/>
                    </scope>
                </scope>
                <declaration name="signerInfoVals" type="DerValue[]" line="253"/>
                <scope line="256">
                    <declaration name="in" type="DerInputStream" line="257"/>
                </scope>
            </method>
            <method name="parseOldSignedData" type="void" line="261">
                <params>
                    <param name="val" type="DerValue"/>
                </params>
                <declaration name="dis" type="DerInputStream" line="262"/>
                <declaration name="digestAlgorithmIdVals" type="DerValue[]" line="264"/>
                <declaration name="len" type="int" line="265"/>
                <scope line="267">
                    <scope line="268">
                        <declaration name="oid" type="DerValue" line="269"/>
                    </scope>
                </scope>
                <scope line="273"/>
                <declaration name="certfac" type="CertificateFactory" line="277"/>
                <scope line="278"/>
                <scope line="281"/>
                <declaration name="certVals" type="DerValue[]" line="283"/>
                <scope line="286">
                    <declaration name="bais" type="ByteArrayInputStream" line="287"/>
                    <scope line="288">
                        <scope line="290">
                            <declaration name="encoded" type="byte[]" line="291"/>
                        </scope>
                    </scope>
                    <scope line="298">
                        <declaration name="pe" type="ParsingException" line="299"/>
                    </scope>
                    <scope line="303">
                        <declaration name="pe" type="ParsingException" line="304"/>
                    </scope>
                    <scope line="308"/>
                </scope>
                <declaration name="signerInfoVals" type="DerValue[]" line="313"/>
                <scope line="316">
                    <declaration name="in" type="DerInputStream" line="317"/>
                </scope>
            </method>
            <javadoc line="321">
                Encodes the signed data to an output stream.                
                <param>
                    out the output stream to write the encoded data to.                    
                </param>
                <exception>
                    IOException on encoding errors.                    
                </exception>
            </javadoc>
            <method name="encodeSignedData" type="void" line="326">
                <params>
                    <param name="out" type="OutputStream"/>
                </params>
                <declaration name="derout" type="DerOutputStream" line="327"/>
            </method>
            <javadoc line="331">
                Encodes the signed data to a DerOutputStream.                
                <param>
                    out the DerOutputStream to write the encoded data to.                    
                </param>
                <exception>
                    IOException on encoding errors.                    
                </exception>
            </javadoc>
            <method name="encodeSignedData" type="void" line="336">
                <params>
                    <param name="out" type="DerOutputStream"/>
                </params>
                <declaration name="signedData" type="DerOutputStream" line="337"/>
                <scope line="341">
                    <declaration name="implCerts" type="X509CertImpl" line="342"/>
                    <scope line="343">
                        <scope line="345">
                            <scope line="346">
                                <declaration name="encoded" type="byte[]" line="347"/>
                            </scope>
                            <scope line="350">
                                <declaration name="ie" type="IOException" line="351"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="359">
                    <declaration name="implCRLs" type="Set&amp;lt;X509CRLImpl&amp;gt;" line="360"/>
                    <scope line="361">
                        <scope line="363">
                            <scope line="364">
                                <declaration name="encoded" type="byte[]" line="365"/>
                            </scope>
                            <scope line="368">
                                <declaration name="ie" type="IOException" line="369"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <declaration name="signedDataSeq" type="DerValue" line="378"/>
                <declaration name="block" type="ContentInfo" line="379"/>
            </method>
            <javadoc line="382">
                This verifies a given SignerInfo.                
                <param>
                    info the signer information.                    
                </param>
                <param>
                    bytes the DER encoded content information.                    
                </param>
                <exception>
                    NoSuchAlgorithmException on unrecognized algorithms.                    
                </exception>
                <exception>
                    SignatureException on signature handling errors.                    
                </exception>
            </javadoc>
            <method name="verify" type="SignerInfo" line="389">
                <params>
                    <param name="info" type="SignerInfo"/>
                    <param name="bytes" type="byte[]"/>
                </params>
            </method>
            <javadoc line="392">
                Returns all signerInfos which self-verify.                
                <param>
                    bytes the DER encoded content information.                    
                </param>
                <exception>
                    NoSuchAlgorithmException on unrecognized algorithms.                    
                </exception>
                <exception>
                    SignatureException on signature handling errors.                    
                </exception>
            </javadoc>
            <method name="verify" type="SignerInfo[]" line="398">
                <params>
                    <param name="bytes" type="byte[]"/>
                </params>
                <declaration name="intResult" type="Vector&amp;lt;SignerInfo&amp;gt;" line="399"/>
                <scope line="400">
                    <declaration name="signerInfo" type="SignerInfo" line="401"/>
                    <scope line="402"/>
                </scope>
                <scope line="406">
                    <declaration name="result" type="SignerInfo[]" line="407"/>
                </scope>
            </method>
            <javadoc line="413">
                Returns all signerInfos which self-verify.                
                <exception>
                    NoSuchAlgorithmException on unrecognized algorithms.                    
                </exception>
                <exception>
                    SignatureException on signature handling errors.                    
                </exception>
            </javadoc>
            <method name="verify" type="SignerInfo[]" line="418"/>
            <javadoc line="421">
                Returns the version number of this PKCS7 block.                
                <return>
                    the version or null if version is not specified
                      for the content type.                    
                </return>
            </javadoc>
            <method name="getVersion" type="BigInteger" line="426"/>
            <javadoc line="429">
                Returns the message digest algorithms specified in this PKCS7 block.                
                <return>
                    the array of Digest Algorithms or null if none are specified
                      for the content type.                    
                </return>
            </javadoc>
            <method name="getDigestAlgorithmIds" type="AlgorithmId[]" line="434"/>
            <javadoc line="437">
                Returns the content information specified in this PKCS7 block.                
            </javadoc>
            <method name="getContentInfo" type="ContentInfo" line="440"/>
            <javadoc line="443">
                Returns the X.509 certificates listed in this PKCS7 block.                
                <return>
                    a clone of the array of X.509 certificates or null if
                      none are specified for the content type.                    
                </return>
            </javadoc>
            <method name="getCertificates" type="X509Certificate[]" line="448"/>
            <javadoc line="452">
                Returns the X.509 crls listed in this PKCS7 block.                
                <return>
                    a clone of the array of X.509 crls or null if none
                      are specified for the content type.                    
                </return>
            </javadoc>
            <method name="getCRLs" type="X509CRL[]" line="457"/>
            <javadoc line="461">
                Returns the signer&apos;s information specified in this PKCS7 block.                
                <return>
                    the array of Signer Infos or null if none are specified
                      for the content type.                    
                </return>
            </javadoc>
            <method name="getSignerInfos" type="SignerInfo[]" line="466"/>
            <javadoc line="469">
                Returns the X.509 certificate listed in this PKCS7 block
                  which has a matching serial number and Issuer name, or
                  null if one is not found.                
                <param>
                    serial the serial number of the certificate to retrieve.                    
                </param>
                <param>
                    issuerName the Distinguished Name of the Issuer.                    
                </param>
            </javadoc>
            <method name="getCertificate" type="X509Certificate" line="476">
                <params>
                    <param name="serial" type="BigInteger"/>
                    <param name="issuerName" type="X500Name"/>
                </params>
                <scope line="477">
                    <scope line="479">
                        <declaration name="cert" type="X509Certificate" line="480"/>
                        <declaration name="thisSerial" type="BigInteger" line="481"/>
                        <scope line="482"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="489">
                Populate array of Issuer DNs from certificates and convert
                  each Principal to type X500Name if necessary.                
            </javadoc>
            <method name="populateCertIssuerNames" type="void" line="493">
                <scope line="496">
                    <declaration name="cert" type="X509Certificate" line="497"/>
                    <declaration name="certIssuerName" type="Principal" line="498"/>
                    <scope line="499">
                        <scope line="500">
                            <declaration name="tbsCert" type="X509CertInfo" line="501"/>
                        </scope>
                        <scope line="504"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="510">
                Returns the PKCS7 block in a printable string form.                
            </javadoc>
            <method name="toString" type="String" line="513">
                <declaration name="out" type="String" line="514"/>
                <scope line="517"/>
                <scope line="521"/>
                <scope line="525"/>
                <scope line="529"/>
            </method>
            <javadoc line="535">
                Returns true if this is a JDK1.1.x-style PKCS#7 block, and false
                  otherwise.                
            </javadoc>
            <method name="isOldStyle" type="boolean" line="539"/>
        </class>
    </source>