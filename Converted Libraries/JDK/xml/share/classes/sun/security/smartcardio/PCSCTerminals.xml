<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.smartcardio">
        <import package="java.util"/>
        <import package="java.lang.ref"/>
        <import package="javax.smartcardio"/>
        <import package="javax.smartcardio.CardTerminals.State"/>
        <import package="sun.security.smartcardio.PCSC"/>
        <class name="PCSCTerminals" line="36">
            <extends class="CardTerminals"/>
            <comment line="45">
                SCARDCONTEXT, currently shared between all threads/terminals                
            </comment>
            <comment line="48">
                terminal state used by waitForCard()                
            </comment>
            <javadoc line="36">
                TerminalFactorySpi implementation class.                
                <since>
                    1.6                    
                </since>
                <author>
                    Andreas Sterbenz                    
                </author>
            </javadoc>
            <declaration name="contextId" type="long" line="45"/>
            <declaration name="stateMap" type="Map&lt;String,ReaderState&gt;" line="48"/>
            <method name="PCSCTerminals" type="constructor" line="50">
                <comment line="51">
                    empty                    
                </comment>
            </method>
            <method name="initContext" type="void" line="54">
                <scope line="55"/>
            </method>
            <declaration name="terminals" type="Map&lt;String,Reference&lt;TerminalImpl&gt;&gt;" line="60"/>
            <method name="implGetTerminal" type="TerminalImpl" line="63">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="ref" type="Reference&lt;TerminalImpl&gt;" line="64"/>
                <declaration name="terminal" type="TerminalImpl" line="65"/>
                <scope line="66"/>
            </method>
            <method name="list" type="List<CardTerminal>" line="75">
                <params>
                    <param name="state" type="State"/>
                </params>
                <comment line="83">
                    If waitForChange() has never been called, treat event                    
                </comment>
                <comment line="84">
                    queries as status queries.                    
                </comment>
                <scope line="76"/>
                <scope line="79">
                    <declaration name="readerNames" type="String[]" line="80"/>
                    <declaration name="list" type="List&lt;CardTerminal&gt;" line="81"/>
                    <scope line="82">
                        <scope line="85"/>
                        <scope line="87"/>
                    </scope>
                    <scope line="91">
                        <declaration name="terminal" type="CardTerminal" line="92"/>
                        <declaration name="readerState" type="ReaderState" line="93"/>
                        <scope line="99"/>
                        <scope line="104"/>
                        <scope line="110"/>
                        <scope line="116"/>
                    </scope>
                </scope>
                <scope line="125"/>
            </method>
            <class name="ReaderState" line="130">
                <declaration name="current" type="int" line="131"/>
                <method name="ReaderState" type="constructor" line="132"/>
                <method name="get" type="int" line="136"/>
                <method name="update" type="void" line="139">
                    <params>
                        <param name="newState" type="int"/>
                    </params>
                </method>
                <method name="isInsertion" type="boolean" line="143"/>
                <method name="isRemoval" type="boolean" line="146"/>
                <method name="present" type="boolean" line="149">
                    <params>
                        <param name="state" type="int"/>
                    </params>
                </method>
            </class>
            <method name="waitForChange" type="boolean" line="154">
                <params>
                    <param name="timeout" type="long"/>
                </params>
                <comment line="160">
                    We need to initialize the state database.                    
                </comment>
                <comment line="161">
                    Do that with a recursive call, which will return immediately                    
                </comment>
                <comment line="162">
                    because we pass SCARD_STATE_UNAWARE.                    
                </comment>
                <comment line="163">
                    After that, proceed with the real call.                    
                </comment>
                <comment line="188">
                    remove any readers that are no longer available                    
                </comment>
                <scope line="155"/>
                <scope line="159"/>
                <scope line="167"/>
                <scope line="170">
                    <declaration name="readerNames" type="String[]" line="171"/>
                    <declaration name="n" type="int" line="172"/>
                    <scope line="173"/>
                    <declaration name="status" type="int[]" line="176"/>
                    <declaration name="readerStates" type="ReaderState[]" line="177"/>
                    <scope line="178">
                        <declaration name="name" type="String" line="179"/>
                        <declaration name="state" type="ReaderState" line="180"/>
                        <scope line="181"/>
                    </scope>
                    <scope line="189">
                        <declaration name="state" type="ReaderState" line="190"/>
                    </scope>
                </scope>
                <scope line="195">
                    <scope line="196"/>
                    <scope line="198"/>
                </scope>
            </method>
            <method name="waitForCards" type="List<CardTerminal>" line="205">
                <params>
                    <param name="terminals" type="List<? extends CardTerminal>"/>
                    <param name="timeout" type="long"/>
                    <param name="wantPresent" type="boolean"/>
                </params>
                <comment line="206">
                    the argument sanity checks are performed in                    
                </comment>
                <comment line="207">
                    javax.smartcardio.TerminalFactory or TerminalImpl                    
                </comment>
                <comment line="214">
                    if timeout is not infinite, do the initial call that retrieves                    
                </comment>
                <comment line="215">
                    the status with a 0 timeout. Otherwise, we might get incorrect                    
                </comment>
                <comment line="216">
                    timeout exceptions (seen on Solaris with PC/SC shim)                    
                </comment>
                <comment line="236">
                    note that we pass &quot;timeout&quot; on each native PC/SC call                    
                </comment>
                <comment line="237">
                    that means that if we end up making multiple (more than 2)                    
                </comment>
                <comment line="238">
                    calls, we might wait too long.                    
                </comment>
                <comment line="239">
                    for now assume that is unlikely and not a problem.                    
                </comment>
                <declaration name="thisTimeout" type="long" line="209"/>
                <scope line="210"/>
                <scope line="213"/>
                <declaration name="names" type="String[]" line="220"/>
                <declaration name="i" type="int" line="221"/>
                <scope line="222">
                    <scope line="223"/>
                    <declaration name="impl" type="TerminalImpl" line="227"/>
                </scope>
                <declaration name="status" type="int[]" line="231"/>
                <scope line="234">
                    <scope line="235">
                        <declaration name="results" type="List&lt;CardTerminal&gt;" line="243"/>
                        <scope line="244">
                            <declaration name="nowPresent" type="boolean" line="245"/>
                            <scope line="246">
                                <scope line="247"/>
                            </scope>
                        </scope>
                        <scope line="254"/>
                    </scope>
                </scope>
                <scope line="258">
                    <scope line="259"/>
                    <scope line="261"/>
                </scope>
            </method>
        </class>
    </source>