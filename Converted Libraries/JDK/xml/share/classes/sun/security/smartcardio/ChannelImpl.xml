<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.smartcardio">
        <import package="java.nio"/>
        <import package="java.security.AccessController"/>
        <import package="javax.smartcardio"/>
        <import package="sun.security.smartcardio.PCSC"/>
        <import package="sun.security.action.GetPropertyAction"/>
        <class name="ChannelImpl" line="37">
            <extends class="CardChannel"/>
            <comment line="46">
                the card this channel is associated with                
            </comment>
            <comment line="49">
                the channel number, 0 for the basic logical channel                
            </comment>
            <comment line="52">
                whether this channel has been closed. only logical channels can be closed                
            </comment>
            <javadoc line="37">
                CardChannel implementation.                
                <since>
                    1.6                    
                </since>
                <author>
                    Andreas Sterbenz                    
                </author>
            </javadoc>
            <declaration name="card" type="CardImpl" line="46"/>
            <declaration name="channel" type="int" line="49"/>
            <declaration name="isClosed" type="boolean" line="52"/>
            <method name="ChannelImpl" type="constructor" line="54">
                <params>
                    <param name="card" type="CardImpl"/>
                    <param name="channel" type="int"/>
                </params>
            </method>
            <method name="checkClosed" type="void" line="59">
                <scope line="61"/>
            </method>
            <method name="getCard" type="Card" line="66"/>
            <method name="getChannelNumber" type="int" line="70"/>
            <method name="checkManageChannel" type="void" line="75">
                <params>
                    <param name="b" type="byte[]"/>
                </params>
                <scope line="76"/>
                <scope line="80"/>
            </method>
            <method name="transmit" type="ResponseAPDU" line="86">
                <params>
                    <param name="command" type="CommandAPDU"/>
                </params>
                <declaration name="commandBytes" type="byte[]" line="89"/>
                <declaration name="responseBytes" type="byte[]" line="90"/>
            </method>
            <method name="transmit" type="int" line="94">
                <params>
                    <param name="command" type="ByteBuffer"/>
                    <param name="response" type="ByteBuffer"/>
                </params>
                <scope line="97"/>
                <scope line="100"/>
                <scope line="103"/>
                <scope line="107"/>
                <declaration name="commandBytes" type="byte[]" line="111"/>
                <declaration name="responseBytes" type="byte[]" line="113"/>
            </method>
            <declaration name="t0GetResponse" type="boolean" line="118"/>
            <declaration name="t1GetResponse" type="boolean" line="121"/>
            <declaration name="t1StripLe" type="boolean" line="124"/>
            <method name="getBooleanProperty" type="boolean" line="127">
                <params>
                    <param name="name" type="String"/>
                    <param name="def" type="boolean"/>
                </params>
                <declaration name="val" type="String" line="128"/>
                <scope line="129"/>
                <scope line="132"/>
                <scope line="134"/>
                <scope line="136"/>
            </method>
            <method name="concat" type="byte[]" line="142">
                <params>
                    <param name="b1" type="byte[]"/>
                    <param name="b2" type="byte[]"/>
                    <param name="n2" type="int"/>
                </params>
                <declaration name="n1" type="int" line="143"/>
                <scope line="144"/>
                <declaration name="res" type="byte[]" line="147"/>
            </method>
            <declaration name="B0" type="byte[]" line="153"/>
            <method name="doTransmit" type="byte[]" line="155">
                <params>
                    <param name="command" type="byte[]"/>
                </params>
                <comment line="156">
                    note that we modify the &apos;command&apos; array in some cases, so it must                    
                </comment>
                <comment line="157">
                    be a copy of the application provided data.                    
                </comment>
                <comment line="192">
                    see ISO 7816/2005, 5.1.3                    
                </comment>
                <comment line="194">
                    Resend command using SW2 as short Le field                    
                </comment>
                <comment line="199">
                    Issue a GET RESPONSE command with the same CLA                    
                </comment>
                <comment line="200">
                    using SW2 as short Le field                    
                </comment>
                <scope line="158">
                    <declaration name="n" type="int" line="161"/>
                    <declaration name="t0" type="boolean" line="162"/>
                    <declaration name="t1" type="boolean" line="163"/>
                    <scope line="164"/>
                    <scope line="168">
                        <declaration name="lc" type="int" line="169"/>
                        <scope line="170">
                            <scope line="171"/>
                        </scope>
                        <scope line="174">
                            <scope line="176"/>
                        </scope>
                    </scope>
                    <declaration name="getresponse" type="boolean" line="181"/>
                    <declaration name="k" type="int" line="182"/>
                    <declaration name="result" type="byte[]" line="183"/>
                    <scope line="184">
                        <scope line="185"/>
                        <declaration name="response" type="byte[]" line="188"/>
                        <declaration name="rn" type="int" line="190"/>
                        <scope line="191">
                            <scope line="193"/>
                            <scope line="198">
                                <scope line="201"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="217"/>
            </method>
            <method name="getSW" type="int" line="223">
                <params>
                    <param name="res" type="byte[]"/>
                </params>
                <scope line="224"/>
                <declaration name="sw1" type="int" line="227"/>
                <declaration name="sw2" type="int" line="228"/>
            </method>
            <method name="isOK" type="boolean" line="232">
                <params>
                    <param name="res" type="byte[]"/>
                </params>
            </method>
            <method name="setChannel" type="void" line="236">
                <params>
                    <param name="com" type="byte[]"/>
                </params>
                <comment line="239">
                    proprietary class format, cannot set or check logical channel                    
                </comment>
                <comment line="240">
                    for now, just return                    
                </comment>
                <comment line="243">
                    classes 001x xxxx is reserved for future use in ISO, ignore                    
                </comment>
                <comment line="247">
                    see ISO 7816/2005, table 2 and 3                    
                </comment>
                <comment line="249">
                    mask of bits 7, 1, 0 (channel number)                    
                </comment>
                <comment line="250">
                    0xbc == 1011 1100                    
                </comment>
                <comment line="254">
                    mask of bits 7, 3, 2, 1, 0 (channel number)                    
                </comment>
                <comment line="255">
                    0xbc == 1011 0000                    
                </comment>
                <declaration name="cla" type="int" line="237"/>
                <scope line="238"/>
                <scope line="244"/>
                <scope line="248"/>
                <scope line="253"/>
                <scope line="259"/>
            </method>
            <method name="close" type="void" line="264">
                <scope line="265"/>
                <scope line="268"/>
                <scope line="272">
                    <declaration name="com" type="byte[]" line="273"/>
                    <declaration name="res" type="byte[]" line="276"/>
                    <scope line="277"/>
                </scope>
                <scope line="280"/>
                <scope line="283"/>
            </method>
            <method name="toString" type="String" line="288"/>
        </class>
    </source>