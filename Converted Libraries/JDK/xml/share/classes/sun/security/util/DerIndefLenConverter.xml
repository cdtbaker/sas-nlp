<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.util">
        <import package="java.io.IOException"/>
        <import package="java.util.ArrayList"/>
        <class name="DerIndefLenConverter" line="4">
            <javadoc line="4">
                A package private utility class to convert indefinite length DER
                  encoded byte arrays to definite length DER encoded byte arrays.
                  This assumes that the basic data structure is &quot;tag, length, value&quot;
                  triplet. In the case where the length is &quot;indefinite&quot;, terminating
                  end-of-contents bytes are expected.                
                <author>
                    Hemma Prafullchandra                    
                </author>
            </javadoc>
            <declaration name="TAG_MASK" type="int" line="13"/>
            <declaration name="FORM_MASK" type="int" line="14"/>
            <declaration name="CLASS_MASK" type="int" line="15"/>
            <declaration name="LEN_LONG" type="int" line="16"/>
            <declaration name="LEN_MASK" type="int" line="17"/>
            <declaration name="SKIP_EOC_BYTES" type="int" line="18"/>
            <declaration name="data" type="byte[]" line="19"/>
            <declaration name="newDataPos" type="int" line="20"/>
            <declaration name="unresolved" type="int" line="21"/>
            <declaration name="ndefsList" type="ArrayList&amp;lt;Object&amp;gt;" line="22"/>
            <declaration name="numOfTotalLenBytes" type="int" line="23"/>
            <method name="isEOC" type="boolean" line="24">
                <params>
                    <param name="tag" type="int"/>
                </params>
            </method>
            <method name="isLongForm" type="boolean" line="27">
                <params>
                    <param name="lengthByte" type="int"/>
                </params>
            </method>
            <method name="DerIndefLenConverter" type="constructor" line="30"/>
            <javadoc line="32">
                Checks whether the given length byte is of the form
                  &lt;em&gt;Indefinite&lt;/em&gt;.                
                <param>
                    lengthByte the length byte from a DER encoded
                      object.                    
                </param>
                <return>
                    true if the byte is of Indefinite form otherwise
                      returns false.                    
                </return>
            </javadoc>
            <method name="isIndefinite" type="boolean" line="40">
                <params>
                    <param name="lengthByte" type="int"/>
                </params>
            </method>
            <javadoc line="43">
                Parse the tag and if it is an end-of-contents tag then
                  add the current position to the &lt;code&gt;eocList&lt;/code&gt; vector.                
            </javadoc>
            <method name="parseTag" type="void" line="47">
                <scope line="49">
                    <declaration name="numOfEncapsulatedLenBytes" type="int" line="50"/>
                    <declaration name="elem" type="Object" line="51"/>
                    <declaration name="index" type="int" line="52"/>
                    <scope line="53">
                        <scope line="55"/>
                        <scope line="58"/>
                    </scope>
                    <scope line="62"/>
                    <declaration name="sectionLen" type="int" line="65"/>
                    <declaration name="sectionLenBytes" type="byte[]" line="66"/>
                </scope>
            </method>
            <javadoc line="73">
                Write the tag and if it is an end-of-contents tag
                  then skip the tag and its 1 byte length of zero.                
            </javadoc>
            <method name="writeTag" type="void" line="77">
                <declaration name="tag" type="int" line="79"/>
                <scope line="80"/>
            </method>
            <javadoc line="86">
                Parse the length and if it is an indefinite length then add
                  the current position to the &lt;code&gt;ndefsList&lt;/code&gt; vector.                
            </javadoc>
            <method name="parseLength" type="int" line="90">
                <declaration name="curLen" type="int" line="91"/>
                <declaration name="lenByte" type="int" line="93"/>
                <scope line="94"/>
                <scope line="99"/>
                <scope line="105"/>
            </method>
            <javadoc line="110">
                Write the length and if it is an indefinite length
                  then calculate the definite length from the positions
                  of the indefinite length and its matching EOC terminator.
                  Then, write the value.                
            </javadoc>
            <method name="writeLengthAndValue" type="void" line="116">
                <declaration name="curLen" type="int" line="118"/>
                <declaration name="lenByte" type="int" line="119"/>
                <scope line="120">
                    <declaration name="lenBytes" type="byte[]" line="121"/>
                </scope>
                <scope line="126"/>
            </method>
            <method name="writeLength" type="void" line="134">
                <params>
                    <param name="curLen" type="int"/>
                </params>
                <scope line="135"/>
                <scope line="138"/>
                <scope line="142"/>
                <scope line="147"/>
                <scope line="153"/>
            </method>
            <method name="getLengthBytes" type="byte[]" line="161">
                <params>
                    <param name="curLen" type="int"/>
                </params>
                <declaration name="lenBytes" type="byte[]" line="162"/>
                <declaration name="index" type="int" line="163"/>
                <scope line="164"/>
                <scope line="168"/>
                <scope line="173"/>
                <scope line="179"/>
                <scope line="186"/>
            </method>
            <method name="getNumOfLenBytes" type="int" line="196">
                <params>
                    <param name="len" type="int"/>
                </params>
                <declaration name="numOfLenBytes" type="int" line="197"/>
                <scope line="198"/>
                <scope line="201"/>
                <scope line="204"/>
                <scope line="207"/>
                <scope line="210"/>
            </method>
            <javadoc line="215">
                Parse the value;                
            </javadoc>
            <method name="parseValue" type="void" line="218">
                <params>
                    <param name="curLen" type="int"/>
                </params>
            </method>
            <javadoc line="221">
                Write the value;                
            </javadoc>
            <method name="writeValue" type="void" line="224">
                <params>
                    <param name="curLen" type="int"/>
                </params>
            </method>
            <javadoc line="227">
                Converts a indefinite length DER encoded byte array to
                  a definte length DER encoding.                
                <param>
                    indefData the byte array holding the indefinite
                      length encoding.                    
                </param>
                <return>
                    the byte array containing the definite length
                      DER encoding.                    
                </return>
                <exception>
                    IOException on parsing or re-writing errors.                    
                </exception>
            </javadoc>
            <method name="convert" type="byte[]" line="236">
                <params>
                    <param name="indefData" type="byte[]"/>
                </params>
                <declaration name="len" type="int" line="241"/>
                <declaration name="unused" type="int" line="242"/>
                <scope line="243">
                    <scope line="247"/>
                </scope>
                <scope line="257"/>
            </method>
        </class>
    </source>