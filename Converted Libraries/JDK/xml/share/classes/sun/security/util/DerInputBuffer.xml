<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.util">
        <import package="java.io.ByteArrayInputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.math.BigInteger"/>
        <import package="java.util.Date"/>
        <import package="sun.util.calendar.CalendarDate"/>
        <import package="sun.util.calendar.CalendarSystem"/>
        <class name="DerInputBuffer" line="9">
            <extends class="ByteArrayInputStream"/>
            <implements interface="Cloneable"/>
            <javadoc line="9">
                DER input buffer ... this is the main abstraction in the DER library
                  which actively works with the &quot;untyped byte stream&quot; abstraction.  It
                  does so with impunity, since it&apos;s not intended to be exposed to
                  anyone who could violate the &quot;typed value stream&quot; DER model and hence
                  corrupt the input stream of DER values.                
                <author>
                    David Brownell                    
                </author>
            </javadoc>
            <method name="DerInputBuffer" type="constructor" line="18">
                <params>
                    <param name="buf" type="byte[]"/>
                </params>
            </method>
            <method name="DerInputBuffer" type="constructor" line="21">
                <params>
                    <param name="buf" type="byte[]"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <method name="dup" type="DerInputBuffer" line="24">
                <scope line="25">
                    <declaration name="retval" type="DerInputBuffer" line="26"/>
                </scope>
                <scope line="30"/>
            </method>
            <method name="toByteArray" type="byte[]" line="34">
                <declaration name="len" type="int" line="35"/>
                <declaration name="retval" type="byte[]" line="37"/>
            </method>
            <method name="peek" type="int" line="41"/>
            <javadoc line="45">
                Compares this DerInputBuffer for equality with the specified
                  object.                
            </javadoc>
            <method name="equals" type="boolean" line="49">
                <params>
                    <param name="other" type="Object"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="53">
                <params>
                    <param name="other" type="DerInputBuffer"/>
                </params>
                <declaration name="max" type="int" line="55"/>
                <scope line="57">
                    <scope line="58"/>
                </scope>
            </method>
            <javadoc line="64">
                Returns a hashcode for this DerInputBuffer.                
                <return>
                    a hashcode for this DerInputBuffer.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="68">
                <declaration name="retval" type="int" line="69"/>
                <declaration name="len" type="int" line="70"/>
                <declaration name="p" type="int" line="71"/>
            </method>
            <method name="truncate" type="void" line="75">
                <params>
                    <param name="len" type="int"/>
                </params>
            </method>
            <javadoc line="79">
                Returns the integer which takes up the specified number
                  of bytes in this buffer as a BigInteger.                
                <param>
                    len the number of bytes to use.                    
                </param>
                <param>
                    makePositive whether to always return a positive value,
                      irrespective of actual encoding                    
                </param>
                <return>
                    the integer as a BigInteger.                    
                </return>
            </javadoc>
            <method name="getBigInteger" type="BigInteger" line="87">
                <params>
                    <param name="len" type="int"/>
                    <param name="makePositive" type="boolean"/>
                </params>
                <scope line="89"/>
                <declaration name="bytes" type="byte[]" line="92"/>
                <scope line="95"/>
                <scope line="98"/>
            </method>
            <javadoc line="102">
                Returns the integer which takes up the specified number
                  of bytes in this buffer.                
                <throws>
                    IOException if the result is not within the valid
                      range for integer, i.e. between Integer.MIN_VALUE and
                      Integer.MAX_VALUE.                    
                </throws>
                <param>
                    len the number of bytes to use.                    
                </param>
                <return>
                    the integer.                    
                </return>
            </javadoc>
            <method name="getInteger" type="int" line="111">
                <params>
                    <param name="len" type="int"/>
                </params>
                <declaration name="result" type="BigInteger" line="112"/>
                <scope line="113"/>
                <scope line="116"/>
            </method>
            <javadoc line="121">
                Returns the bit string which takes up the specified
                  number of bytes in this buffer.                
            </javadoc>
            <method name="getBitString" type="byte[]" line="125">
                <params>
                    <param name="len" type="int"/>
                </params>
                <scope line="127"/>
                <declaration name="numOfPadBits" type="int" line="130"/>
                <scope line="131"/>
                <declaration name="retval" type="byte[]" line="134"/>
                <scope line="136"/>
            </method>
            <javadoc line="142">
                Returns the bit string which takes up the rest of this buffer.                
            </javadoc>
            <method name="getBitString" type="byte[]" line="145"/>
            <javadoc line="148">
                Returns the bit string which takes up the rest of this buffer.
                  The bit string need not be byte-aligned.                
            </javadoc>
            <method name="getUnalignedBitString" type="BitArray" line="152">
                <declaration name="len" type="int" line="154"/>
                <declaration name="unusedBits" type="int" line="155"/>
                <scope line="156"/>
                <declaration name="bits" type="byte[]" line="159"/>
                <declaration name="length" type="int" line="160"/>
                <declaration name="bitArray" type="BitArray" line="162"/>
            </method>
            <javadoc line="166">
                Returns the UTC Time value that takes up the specified number
                  of bytes in this buffer.                
                <param>
                    len the number of bytes to use                    
                </param>
            </javadoc>
            <method name="getUTCTime" type="Date" line="171">
                <params>
                    <param name="len" type="int"/>
                </params>
            </method>
            <javadoc line="176">
                Returns the Generalized Time value that takes up the specified
                  number of bytes in this buffer.                
                <param>
                    len the number of bytes to use                    
                </param>
            </javadoc>
            <method name="getGeneralizedTime" type="Date" line="181">
                <params>
                    <param name="len" type="int"/>
                </params>
            </method>
            <javadoc line="186">
                Private helper routine to extract time from the der value.                
                <param>
                    len the number of bytes to use                    
                </param>
                <param>
                    generalized true if Generalized Time is to be read, false
                      if UTC Time is to be read.                    
                </param>
            </javadoc>
            <method name="getTime" type="Date" line="192">
                <params>
                    <param name="len" type="int"/>
                    <param name="generalized" type="boolean"/>
                </params>
                <declaration name="year" type="int" line="193"/>
                <declaration name="type" type="String" line="194"/>
                <scope line="195"/>
                <scope line="203"/>
                <scope line="220">
                    <scope line="224">
                        <declaration name="precision" type="int" line="227"/>
                        <declaration name="peek" type="int" line="228"/>
                        <scope line="229"/>
                    </scope>
                </scope>
                <declaration name="gcal" type="CalendarSystem" line="254"/>
                <declaration name="date" type="CalendarDate" line="255"/>
                <declaration name="time" type="long" line="258"/>
                <declaration name="hr" type="int" line="260"/>
            </method>
        </class>
    </source>