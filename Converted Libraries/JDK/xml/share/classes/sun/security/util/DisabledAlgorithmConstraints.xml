<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.util">
        <import package="java.security.AlgorithmConstraints"/>
        <import package="java.security.CryptoPrimitive"/>
        <import package="java.security.AlgorithmParameters"/>
        <import package="java.security.Key"/>
        <import package="java.security.Security"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.interfaces.ECKey"/>
        <import package="java.security.interfaces.RSAKey"/>
        <import package="java.security.interfaces.DSAKey"/>
        <import package="javax.crypto.SecretKey"/>
        <import package="javax.crypto.interfaces.DHKey"/>
        <import package="java.util.Locale"/>
        <import package="java.util.Set"/>
        <import package="java.util.Collections"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Map"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.regex.Pattern"/>
        <import package="java.util.regex.Matcher"/>
        <class name="DisabledAlgorithmConstraints" line="51">
            <comment line="60">
                the known security property, jdk.certpath.disabledAlgorithms                
            </comment>
            <comment line="64">
                the known security property, jdk.tls.disabledAlgorithms                
            </comment>
            <comment line="241">
                Check algorithm constraints                
            </comment>
            <comment line="270">
                Get disabled algorithm constraints from the specified security property.                
            </comment>
            <implements interface="AlgorithmConstraints"/>
            <javadoc line="51">
                Algorithm constraints for disabled algorithms property
                  See the &quot;jdk.certpath.disabledAlgorithms&quot; specification in java.security
                  for the syntax of the disabled algorithm string.                
            </javadoc>
            <declaration name="PROPERTY_CERTPATH_DISABLED_ALGS" type="String" line="60"/>
            <declaration name="PROPERTY_TLS_DISABLED_ALGS" type="String" line="64"/>
            <declaration name="disabledAlgorithmsMap" type="Map&lt;String,String[]&gt;" line="67"/>
            <declaration name="keySizeConstraintsMap" type="Map&lt;String,KeySizeConstraints&gt;" line="69"/>
            <declaration name="disabledAlgorithms" type="String[]" line="72"/>
            <declaration name="keySizeConstraints" type="KeySizeConstraints" line="73"/>
            <javadoc line="75">
                Initialize algorithm constraints with the specified security property.                
                <param>
                    propertyName the security property name that define the disabled
                      algorithm constraints                    
                </param>
            </javadoc>
            <method name="DisabledAlgorithmConstraints" type="constructor" line="81">
                <params>
                    <param name="propertyName" type="String"/>
                </params>
                <scope line="82">
                    <scope line="83"/>
                </scope>
            </method>
            <method name="permits" type="boolean" line="94">
                <params>
                    <param name="primitives" type="Set<CryptoPrimitive>"/>
                    <param name="algorithm" type="String"/>
                    <param name="parameters" type="AlgorithmParameters"/>
                </params>
                <comment line="111">
                    check the full name                    
                </comment>
                <comment line="116">
                    decompose the algorithm into sub-elements                    
                </comment>
                <comment line="121">
                    check the items of the algorithm                    
                </comment>
                <scope line="96"/>
                <scope line="100"/>
                <declaration name="elements" type="Set&lt;String&gt;" line="105"/>
                <scope line="106">
                    <scope line="107"/>
                    <scope line="112"/>
                    <scope line="117"/>
                    <scope line="122">
                        <scope line="123"/>
                    </scope>
                </scope>
            </method>
            <method name="permits" type="boolean" line="133">
                <params>
                    <param name="primitives" type="Set<CryptoPrimitive>"/>
                    <param name="key" type="Key"/>
                </params>
            </method>
            <method name="permits" type="boolean" line="139">
                <params>
                    <param name="primitives" type="Set<CryptoPrimitive>"/>
                    <param name="algorithm" type="String"/>
                    <param name="key" type="Key"/>
                    <param name="parameters" type="AlgorithmParameters"/>
                </params>
                <scope line="141"/>
            </method>
            <javadoc line="148">
                Decompose the standard algorithm name into sub-elements.
                  &lt;p&gt;
                  For example, we need to decompose &quot;SHA1WithRSA&quot; into &quot;SHA1&quot; and &quot;RSA&quot;
                  so that we can check the &quot;SHA1&quot; and &quot;RSA&quot; algorithm constraints
                  separately.
                  &lt;p&gt;
                  Please override the method if need to support more name pattern.                
            </javadoc>
            <method name="decomposes" type="Set<String>" line="157">
                <params>
                    <param name="algorithm" type="String"/>
                </params>
                <comment line="162">
                    algorithm/mode/padding                    
                </comment>
                <comment line="172">
                    PBEWith&lt;digest&gt;And&lt;encryption&gt;                    
                </comment>
                <comment line="173">
                    PBEWith&lt;prf&gt;And&lt;encryption&gt;                    
                </comment>
                <comment line="174">
                    OAEPWith&lt;digest&gt;And&lt;mgf&gt;Padding                    
                </comment>
                <comment line="175">
                    &lt;digest&gt;with&lt;encryption&gt;                    
                </comment>
                <comment line="176">
                    &lt;digest&gt;with&lt;encryption&gt;and&lt;mgf&gt;                    
                </comment>
                <comment line="190">
                    In Java standard algorithm name specification, for different                    
                </comment>
                <comment line="191">
                    purpose, the SHA-1 and SHA-2 algorithm names are different. For                    
                </comment>
                <comment line="192">
                    example, for MessageDigest, the standard name is &quot;SHA-256&quot;, while                    
                </comment>
                <comment line="193">
                    for Signature, the digest algorithm component is &quot;SHA256&quot; for                    
                </comment>
                <comment line="194">
                    signature algorithm &quot;SHA256withRSA&quot;. So we need to check both                    
                </comment>
                <comment line="195">
                    &quot;SHA-256&quot; and &quot;SHA256&quot; to make the right constraint checking.                    
                </comment>
                <comment line="197">
                    handle special name: SHA-1 and SHA1                    
                </comment>
                <comment line="205">
                    handle special name: SHA-224 and SHA224                    
                </comment>
                <comment line="213">
                    handle special name: SHA-256 and SHA256                    
                </comment>
                <comment line="221">
                    handle special name: SHA-384 and SHA384                    
                </comment>
                <comment line="229">
                    handle special name: SHA-512 and SHA512                    
                </comment>
                <scope line="158"/>
                <declaration name="transPattern" type="Pattern" line="163"/>
                <declaration name="transTockens" type="String[]" line="164"/>
                <declaration name="elements" type="Set&lt;String&gt;" line="166"/>
                <scope line="167">
                    <scope line="168"/>
                    <declaration name="pattern" type="Pattern" line="177"/>
                    <declaration name="tokens" type="String[]" line="179"/>
                    <scope line="181">
                        <scope line="182"/>
                    </scope>
                </scope>
                <scope line="198"/>
                <scope line="201"/>
                <scope line="206"/>
                <scope line="209"/>
                <scope line="214"/>
                <scope line="217"/>
                <scope line="222"/>
                <scope line="225"/>
                <scope line="230"/>
                <scope line="233"/>
            </method>
            <method name="checkConstraints" type="boolean" line="242">
                <params>
                    <param name="primitives" type="Set<CryptoPrimitive>"/>
                    <param name="algorithm" type="String"/>
                    <param name="key" type="Key"/>
                    <param name="parameters" type="AlgorithmParameters"/>
                </params>
                <comment line="244">
                    check the key parameter, it cannot be null.                    
                </comment>
                <comment line="249">
                    check the target algorithm                    
                </comment>
                <comment line="256">
                    check the key algorithm                    
                </comment>
                <comment line="261">
                    check the key constraints                    
                </comment>
                <scope line="245"/>
                <scope line="250">
                    <scope line="251"/>
                </scope>
                <scope line="257"/>
                <scope line="262"/>
            </method>
            <method name="loadDisabledAlgorithmsMap" type="void" line="271">
                <params>
                    <param name="propertyName" type="String"/>
                </params>
                <comment line="284">
                    remove double quote marks from beginning/end of the property                    
                </comment>
                <comment line="296">
                    map the disabled algorithms                    
                </comment>
                <comment line="302">
                    map the key constraints                    
                </comment>
                <anonymous_class line="274">
                    <method name="run" type="String" line="275"/>
                </anonymous_class>
                <declaration name="property" type="String" line="273"/>
                <declaration name="algorithmsInProperty" type="String[]" line="280"/>
                <scope line="282">
                    <scope line="286"/>
                    <scope line="291"/>
                </scope>
                <scope line="297"/>
                <declaration name="keySizeConstraints" type="KeySizeConstraints" line="303"/>
            </method>
            <class name="KeySizeConstraints" line="308">
                <comment line="352">
                    Does this KeySizeConstraints disable the specified key?                    
                </comment>
                <comment line="377">
                    operator                    
                </comment>
                <comment line="407">
                    the minimal available key size                    
                </comment>
                <comment line="408">
                    the maximal available key size                    
                </comment>
                <comment line="409">
                    unavailable key sizes                    
                </comment>
                <comment line="445">
                    Does this key constraint disable the specified key?                    
                </comment>
                <javadoc line="308">
                    key constraints                    
                </javadoc>
                <declaration name="pattern" type="Pattern" line="312"/>
                <declaration name="constraintsMap" type="Map&lt;String,Set&lt;KeySizeConstraint&gt;&gt;" line="315"/>
                <method name="KeySizeConstraints" type="constructor" line="319">
                    <params>
                        <param name="restrictions" type="String[]"/>
                    </params>
                    <scope line="320">
                        <scope line="321"/>
                        <declaration name="matcher" type="Matcher" line="325"/>
                        <scope line="326">
                            <declaration name="algorithm" type="String" line="327"/>
                            <declaration name="operator" type="KeySizeConstraint.Operator" line="329"/>
                            <declaration name="length" type="int" line="331"/>
                            <scope line="335">
                                <scope line="336"/>
                                <declaration name="constraintSet" type="Set&lt;KeySizeConstraint&gt;" line="341"/>
                                <declaration name="constraint" type="KeySizeConstraint" line="343"/>
                            </scope>
                        </scope>
                    </scope>
                </method>
                <method name="disables" type="boolean" line="352">
                    <params>
                        <param name="key" type="Key"/>
                    </params>
                    <declaration name="algorithm" type="String" line="353"/>
                    <scope line="354">
                        <scope line="355">
                            <declaration name="constraintSet" type="Set&lt;KeySizeConstraint&gt;" line="356"/>
                            <scope line="358">
                                <scope line="359"/>
                            </scope>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="KeySizeConstraint" line="370">
                <comment line="352">
                    Does this KeySizeConstraints disable the specified key?                    
                </comment>
                <comment line="377">
                    operator                    
                </comment>
                <comment line="407">
                    the minimal available key size                    
                </comment>
                <comment line="408">
                    the maximal available key size                    
                </comment>
                <comment line="409">
                    unavailable key sizes                    
                </comment>
                <comment line="445">
                    Does this key constraint disable the specified key?                    
                </comment>
                <javadoc line="370">
                    Key size constraint.
                      e.g.  &quot;keysize &lt;= 1024&quot;                    
                </javadoc>
                <method name="of" type="Operator" line="385">
                    <params>
                        <param name="s" type="String"/>
                    </params>
                </method>
                <declaration name="minSize" type="int" line="406"/>
                <declaration name="maxSize" type="int" line="407"/>
                <declaration name="prohibitedSize" type="int" line="408"/>
                <method name="KeySizeConstraint" type="constructor" line="410">
                    <params>
                        <param name="operator" type="Operator"/>
                        <param name="length" type="int"/>
                    </params>
                    <comment line="412">
                        an unavailable key size                        
                    </comment>
                    <comment line="438">
                        unlikely to happen                        
                    </comment>
                </method>
                <method name="disables" type="boolean" line="445">
                    <params>
                        <param name="key" type="Key"/>
                    </params>
                    <comment line="448">
                        it is a SecretKey                        
                    </comment>
                    <comment line="457">
                        it is an asymmetric key                        
                    </comment>
                    <comment line="470">
                        else, it is not a key we know.                        
                    </comment>
                    <comment line="473">
                        we don&apos;t allow any key of size 0.                        
                    </comment>
                    <declaration name="size" type="int" line="446"/>
                    <scope line="449">
                        <declaration name="sk" type="SecretKey" line="450"/>
                        <scope line="451"/>
                    </scope>
                    <scope line="458">
                        <declaration name="pubk" type="RSAKey" line="459"/>
                    </scope>
                    <scope line="461">
                        <declaration name="pubk" type="ECKey" line="462"/>
                    </scope>
                    <scope line="464">
                        <declaration name="pubk" type="DSAKey" line="465"/>
                    </scope>
                    <scope line="467">
                        <declaration name="pubk" type="DHKey" line="468"/>
                    </scope>
                    <scope line="472"/>
                    <scope line="476"/>
                </method>
            </class>
        </class>
    </source>