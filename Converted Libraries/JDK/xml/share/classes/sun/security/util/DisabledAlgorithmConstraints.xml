<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.util">
        <import package="java.security.AlgorithmConstraints"/>
        <import package="java.security.CryptoPrimitive"/>
        <import package="java.security.AlgorithmParameters"/>
        <import package="java.security.Key"/>
        <import package="java.security.Security"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.interfaces.ECKey"/>
        <import package="java.security.interfaces.RSAKey"/>
        <import package="java.security.interfaces.DSAKey"/>
        <import package="javax.crypto.SecretKey"/>
        <import package="javax.crypto.interfaces.DHKey"/>
        <import package="java.util.Locale"/>
        <import package="java.util.Set"/>
        <import package="java.util.Collections"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Map"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.regex.Pattern"/>
        <import package="java.util.regex.Matcher"/>
        <class name="DisabledAlgorithmConstraints" line="22">
            <implements interface="AlgorithmConstraints"/>
            <javadoc line="22">
                Algorithm constraints for disabled algorithms property
                  See the &quot;jdk.certpath.disabledAlgorithms&quot; specification in java.security
                  for the syntax of the disabled algorithm string.                
            </javadoc>
            <declaration name="PROPERTY_CERTPATH_DISABLED_ALGS" type="String" line="28"/>
            <declaration name="PROPERTY_TLS_DISABLED_ALGS" type="String" line="29"/>
            <declaration name="disabledAlgorithmsMap" type="Map&amp;lt;String,String[]&amp;gt;" line="30"/>
            <declaration name="keySizeConstraintsMap" type="Map&amp;lt;String,KeySizeConstraints&amp;gt;" line="31"/>
            <declaration name="disabledAlgorithms" type="String[]" line="32"/>
            <declaration name="keySizeConstraints" type="KeySizeConstraints" line="33"/>
            <javadoc line="34">
                Initialize algorithm constraints with the specified security property.                
                <param>
                    propertyName the security property name that define the disabled
                      algorithm constraints                    
                </param>
            </javadoc>
            <method name="DisabledAlgorithmConstraints" type="constructor" line="39">
                <params>
                    <param name="propertyName" type="String"/>
                </params>
                <scope line="40">
                    <scope line="41"/>
                </scope>
            </method>
            <method name="permits" type="boolean" line="48">
                <params>
                    <param name="primitives" type="Set&lt;CryptoPrimitive&gt;"/>
                    <param name="algorithm" type="String"/>
                    <param name="parameters" type="AlgorithmParameters"/>
                </params>
                <scope line="49"/>
                <scope line="52"/>
                <declaration name="elements" type="Set&amp;lt;String&amp;gt;" line="55"/>
                <scope line="56">
                    <scope line="57"/>
                    <scope line="60"/>
                    <scope line="63"/>
                    <scope line="66">
                        <scope line="67"/>
                    </scope>
                </scope>
            </method>
            <method name="permits" type="boolean" line="74">
                <params>
                    <param name="primitives" type="Set&lt;CryptoPrimitive&gt;"/>
                    <param name="key" type="Key"/>
                </params>
            </method>
            <method name="permits" type="boolean" line="77">
                <params>
                    <param name="primitives" type="Set&lt;CryptoPrimitive&gt;"/>
                    <param name="algorithm" type="String"/>
                    <param name="key" type="Key"/>
                    <param name="parameters" type="AlgorithmParameters"/>
                </params>
                <scope line="78"/>
            </method>
            <javadoc line="83">
                Decompose the standard algorithm name into sub-elements.
                  &lt;p&gt;
                  For example, we need to decompose &quot;SHA1WithRSA&quot; into &quot;SHA1&quot; and &quot;RSA&quot;
                  so that we can check the &quot;SHA1&quot; and &quot;RSA&quot; algorithm constraints
                  separately.
                  &lt;p&gt;
                  Please override the method if need to support more name pattern.                
            </javadoc>
            <method name="decomposes" type="Set&lt;String&gt;" line="92">
                <params>
                    <param name="algorithm" type="String"/>
                </params>
                <scope line="93"/>
                <declaration name="transPattern" type="Pattern" line="96"/>
                <declaration name="transTockens" type="String[]" line="97"/>
                <declaration name="elements" type="Set&amp;lt;String&amp;gt;" line="98"/>
                <scope line="99">
                    <scope line="100"/>
                    <declaration name="pattern" type="Pattern" line="103"/>
                    <declaration name="tokens" type="String[]" line="104"/>
                    <scope line="105">
                        <scope line="106"/>
                    </scope>
                </scope>
                <scope line="112"/>
                <scope line="115"/>
                <scope line="118"/>
                <scope line="121"/>
                <scope line="124"/>
                <scope line="127"/>
                <scope line="130"/>
                <scope line="133"/>
                <scope line="136"/>
                <scope line="139"/>
            </method>
            <method name="checkConstraints" type="boolean" line="144">
                <params>
                    <param name="primitives" type="Set&lt;CryptoPrimitive&gt;"/>
                    <param name="algorithm" type="String"/>
                    <param name="key" type="Key"/>
                    <param name="parameters" type="AlgorithmParameters"/>
                </params>
                <scope line="145"/>
                <scope line="148">
                    <scope line="149"/>
                </scope>
                <scope line="153"/>
                <scope line="156"/>
            </method>
            <method name="loadDisabledAlgorithmsMap" type="void" line="161">
                <params>
                    <param name="propertyName" type="String"/>
                </params>
                <anonymous_class line="162">
                    <method name="run" type="String" line="163"/>
                </anonymous_class>
                <declaration name="property" type="String" line="162"/>
                <declaration name="algorithmsInProperty" type="String[]" line="168"/>
                <scope line="169">
                    <scope line="170"/>
                    <scope line="174"/>
                </scope>
                <scope line="178"/>
                <declaration name="keySizeConstraints" type="KeySizeConstraints" line="182"/>
            </method>
            <class name="KeySizeConstraints" line="185">
                <javadoc line="185">
                    key constraints                    
                </javadoc>
                <declaration name="pattern" type="Pattern" line="189"/>
                <declaration name="constraintsMap" type="Map&amp;lt;String,Set&amp;lt;KeySizeConstraint&amp;gt;&amp;gt;" line="190"/>
                <method name="KeySizeConstraints" type="constructor" line="191">
                    <params>
                        <param name="restrictions" type="String[]"/>
                    </params>
                    <scope line="192">
                        <scope line="193"/>
                        <declaration name="matcher" type="Matcher" line="196"/>
                        <scope line="197">
                            <declaration name="algorithm" type="String" line="198"/>
                            <declaration name="operator" type="KeySizeConstraint.Operator" line="199"/>
                            <declaration name="length" type="int" line="200"/>
                            <scope line="202">
                                <scope line="203"/>
                                <declaration name="constraintSet" type="Set&amp;lt;KeySizeConstraint&amp;gt;" line="206"/>
                                <declaration name="constraint" type="KeySizeConstraint" line="207"/>
                            </scope>
                        </scope>
                    </scope>
                </method>
                <method name="disables" type="boolean" line="213">
                    <params>
                        <param name="key" type="Key"/>
                    </params>
                    <declaration name="algorithm" type="String" line="214"/>
                    <scope line="215">
                        <scope line="216">
                            <declaration name="constraintSet" type="Set&amp;lt;KeySizeConstraint&amp;gt;" line="217"/>
                            <scope line="218">
                                <scope line="219"/>
                            </scope>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="KeySizeConstraint" line="228">
                <javadoc line="228">
                    Key size constraint.
                      e.g.  &quot;keysize &lt;= 1024&quot;                    
                </javadoc>
                <declaration name="Operator" type="enum" line="233"/>
                <scope line="233"/>
                <method name="of" type="Operator" line="233">
                    <params>
                        <param name="s" type="String"/>
                    </params>
                </method>
            </class>
            <declaration name="minSize" type="int" line="251"/>
            <declaration name="maxSize" type="int" line="252"/>
            <declaration name="prohibitedSize" type="int" line="253"/>
            <method name="KeySizeConstraint" type="constructor" line="254">
                <params>
                    <param name="operator" type="Operator"/>
                    <param name="length" type="int"/>
                </params>
            </method>
            <method name="disables" type="boolean" line="286">
                <params>
                    <param name="key" type="Key"/>
                </params>
                <declaration name="size" type="int" line="287"/>
                <scope line="288">
                    <declaration name="sk" type="SecretKey" line="289"/>
                    <scope line="290"/>
                </scope>
                <scope line="294">
                    <declaration name="pubk" type="RSAKey" line="295"/>
                </scope>
                <scope line="298">
                    <declaration name="pubk" type="ECKey" line="299"/>
                </scope>
                <scope line="302">
                    <declaration name="pubk" type="DSAKey" line="303"/>
                </scope>
                <scope line="306">
                    <declaration name="pubk" type="DHKey" line="307"/>
                </scope>
                <scope line="310"/>
                <scope line="313"/>
            </method>
        </class>
    </source>