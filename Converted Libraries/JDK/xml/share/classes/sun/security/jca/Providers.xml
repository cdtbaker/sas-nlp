<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.jca">
        <import package="java.util"/>
        <import package="java.security.Provider"/>
        <import package="java.security.Security"/>
        <class name="Providers" line="5">
            <javadoc line="5">
                Collection of methods to get and set provider list. Also includes
                  special code for the provider list during JAR verification.                
                <author>
                    Andreas Sterbenz                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="threadLists" type="ThreadLocal&lt;ProviderList&gt;" line="12"/>
            <declaration name="threadListsUsed" type="int" line="13"/>
            <declaration name="providerList" type="ProviderList" line="14"/>
            <scope line="15"/>
            <method name="Providers" type="constructor" line="19"/>
            <declaration name="BACKUP_PROVIDER_CLASSNAME" type="String" line="21"/>
            <declaration name="jarVerificationProviders" type="String[]" line="22"/>
            <method name="getSunProvider" type="Provider" line="23">
                <scope line="24">
                    <declaration name="clazz" type="Class" line="25"/>
                </scope>
                <scope line="28">
                    <scope line="29">
                        <declaration name="clazz" type="Class" line="30"/>
                    </scope>
                    <scope line="33"/>
                </scope>
            </method>
            <javadoc line="38">
                Start JAR verification. This sets a special provider list for
                  the current thread. You MUST save the return value from this
                  method and you MUST call stopJarVerification() with that object
                  once you are done.                
            </javadoc>
            <method name="startJarVerification" type="Object" line="44">
                <declaration name="currentList" type="ProviderList" line="45"/>
                <declaration name="jarList" type="ProviderList" line="46"/>
            </method>
            <javadoc line="49">
                Stop JAR verification. Call once you have completed JAR verification.                
            </javadoc>
            <method name="stopJarVerification" type="void" line="52">
                <params>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <javadoc line="55">
                Return the current ProviderList. If the thread-local list is set,
                  it is returned. Otherwise, the system wide list is returned.                
            </javadoc>
            <method name="getProviderList" type="ProviderList" line="59">
                <declaration name="list" type="ProviderList" line="60"/>
                <scope line="61"/>
            </method>
            <javadoc line="66">
                Set the current ProviderList. Affects the thread-local list if set,
                  otherwise the system wide list.                
            </javadoc>
            <method name="setProviderList" type="void" line="70">
                <params>
                    <param name="newList" type="ProviderList"/>
                </params>
                <scope line="71"/>
                <scope line="74"/>
            </method>
            <javadoc line="78">
                Get the full provider list with invalid providers (those that
                  could not be loaded) removed. This is the list we need to
                  present to applications.                
            </javadoc>
            <method name="getFullProviderList" type="ProviderList" line="83">
                <declaration name="list" type="ProviderList" line="84"/>
                <scope line="85">
                    <scope line="87">
                        <declaration name="newList" type="ProviderList" line="88"/>
                        <scope line="89"/>
                    </scope>
                </scope>
                <declaration name="newList" type="ProviderList" line="97"/>
                <scope line="98"/>
            </method>
            <method name="getSystemProviderList" type="ProviderList" line="104"/>
            <method name="setSystemProviderList" type="void" line="107">
                <params>
                    <param name="list" type="ProviderList"/>
                </params>
            </method>
            <method name="getThreadProviderList" type="ProviderList" line="110">
                <scope line="111"/>
            </method>
            <method name="changeThreadProviderList" type="void" line="116">
                <params>
                    <param name="list" type="ProviderList"/>
                </params>
            </method>
            <javadoc line="119">
                Methods to manipulate the thread local provider list. It is for use by
                  JAR verification (see above) and the SunJSSE FIPS mode only.
                  It should be used as follows:
                  ProviderList list = ...;
                  ProviderList oldList = Providers.beginThreadProviderList(list);
                  try {
                  // code that needs thread local provider list
                  } finally {
                  Providers.endThreadProviderList(oldList);
                  }                
            </javadoc>
            <method name="beginThreadProviderList" type="ProviderList" line="131">
                <params>
                    <param name="list" type="ProviderList"/>
                </params>
                <scope line="132"/>
                <declaration name="oldList" type="ProviderList" line="135"/>
            </method>
            <method name="endThreadProviderList" type="void" line="140">
                <params>
                    <param name="list" type="ProviderList"/>
                </params>
                <scope line="141">
                    <scope line="142"/>
                </scope>
                <scope line="147">
                    <scope line="148"/>
                </scope>
            </method>
        </class>
    </source>