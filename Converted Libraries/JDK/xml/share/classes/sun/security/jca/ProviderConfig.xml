<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.jca">
        <import package="java.io.File"/>
        <import package="java.lang.reflect"/>
        <import package="java.security"/>
        <import package="sun.security.util.PropertyExpander"/>
        <class name="ProviderConfig" line="35">
            <comment line="49">
                classname of the SunPKCS11-Solaris provider                
            </comment>
            <comment line="53">
                config file argument of the SunPKCS11-Solaris provider                
            </comment>
            <comment line="57">
                maximum number of times to try loading a provider before giving up                
            </comment>
            <comment line="60">
                parameters for the Provider(String) constructor,
                 use by doLoadProvider()                
            </comment>
            <comment line="64">
                name of the provider class                
            </comment>
            <comment line="67">
                argument to the provider constructor,
                 empty string indicates no-arg constructor                
            </comment>
            <comment line="71">
                number of times we have already tried to load this provider                
            </comment>
            <comment line="74">
                Provider object, if loaded                
            </comment>
            <comment line="77">
                flag indicating if we are currently trying to load the provider
                 used to detect recursion                
            </comment>
            <comment line="99">
                check if we should try to load the SunPKCS11-Solaris provider
                 avoid if not available (pre Solaris 10) to reduce startup time
                 or if disabled via system property                
            </comment>
            <comment line="126">
                should we try to load this provider?                
            </comment>
            <comment line="131">
                do not try to load this provider again                
            </comment>
            <javadoc line="35">
                Class representing a configured provider. Encapsulates configuration
                  (className plus optional argument), the provider loading logic, and
                  the loaded Provider object itself.                
                <author>
                    Andreas Sterbenz                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="debug" type="sun.security.util.Debug" line="45"/>
            <declaration name="P11_SOL_NAME" type="String" line="49"/>
            <declaration name="P11_SOL_ARG" type="String" line="53"/>
            <declaration name="MAX_LOAD_TRIES" type="int" line="57"/>
            <declaration name="CL_STRING" type="Class[]" line="61"/>
            <declaration name="className" type="String" line="64"/>
            <declaration name="argument" type="String" line="68"/>
            <declaration name="tries" type="int" line="71"/>
            <declaration name="provider" type="Provider" line="74"/>
            <declaration name="isLoading" type="boolean" line="78"/>
            <method name="ProviderConfig" type="constructor" line="80">
                <params>
                    <param name="className" type="String"/>
                    <param name="argument" type="String"/>
                </params>
                <scope line="81"/>
            </method>
            <method name="ProviderConfig" type="constructor" line="88">
                <params>
                    <param name="className" type="String"/>
                </params>
            </method>
            <method name="ProviderConfig" type="constructor" line="92">
                <params>
                    <param name="provider" type="Provider"/>
                </params>
            </method>
            <method name="checkSunPKCS11Solaris" type="void" line="101">
                <anonymous_class line="103">
                    <method name="run" type="Boolean" line="104">
                        <declaration name="file" type="File" line="105"/>
                        <scope line="106"/>
                        <scope line="110"/>
                    </method>
                </anonymous_class>
                <declaration name="o" type="Boolean" line="102"/>
                <scope line="116"/>
            </method>
            <method name="hasArgument" type="boolean" line="121"/>
            <method name="shouldLoad" type="boolean" line="126"/>
            <method name="disableLoad" type="void" line="131"/>
            <method name="isLoaded" type="boolean" line="135"/>
            <method name="equals" type="boolean" line="139">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="140"/>
                <scope line="143"/>
                <declaration name="other" type="ProviderConfig" line="146"/>
            </method>
            <method name="hashCode" type="int" line="151"/>
            <method name="toString" type="String" line="155">
                <scope line="156"/>
                <scope line="158"/>
            </method>
            <javadoc line="163">
                Get the provider object. Loads the provider if it is not already loaded.                
            </javadoc>
            <method name="getProvider" type="Provider" line="166">
                <comment line="168">
                    volatile variable load                    
                </comment>
                <comment line="177">
                    because this method is synchronized, this can only
                     happen if there is recursion.                    
                </comment>
                <declaration name="p" type="Provider" line="168"/>
                <scope line="169"/>
                <scope line="172"/>
                <scope line="175">
                    <scope line="178"/>
                </scope>
                <scope line="184"/>
                <scope line="188"/>
            </method>
            <javadoc line="195">
                Load and instantiate the Provider described by this class.
                  NOTE use of doPrivileged().                
                <return>
                    null if the Provider could not be loaded                    
                </return>
                <throws>
                    ProviderException if executing the Provider&apos;s constructor
                      throws a ProviderException. All other Exceptions are ignored.                    
                </throws>
            </javadoc>
            <method name="doLoadProvider" type="Provider" line="205">
                <comment line="250">
                    provider indicates fatal error, pass through exception                    
                </comment>
                <comment line="254">
                    provider indicates that loading should not be retried                    
                </comment>
                <anonymous_class line="206">
                    <method name="run" type="Provider" line="207">
                        <comment line="250">
                            provider indicates fatal error, pass through exception                            
                        </comment>
                        <comment line="254">
                            provider indicates that loading should not be retried                            
                        </comment>
                        <scope line="208"/>
                        <scope line="211">
                            <declaration name="cl" type="ClassLoader" line="212"/>
                            <declaration name="provClass" type="Class&lt;?&gt;" line="213"/>
                            <scope line="214"/>
                            <scope line="216"/>
                            <declaration name="obj" type="Object" line="219"/>
                            <scope line="220"/>
                            <scope line="222">
                                <declaration name="cons" type="Constructor&lt;?&gt;" line="223"/>
                            </scope>
                            <scope line="226">
                                <scope line="227"/>
                            </scope>
                            <scope line="231">
                                <scope line="232"/>
                            </scope>
                        </scope>
                        <scope line="238">
                            <declaration name="t" type="Throwable" line="239"/>
                            <scope line="240"/>
                            <scope line="242"/>
                            <scope line="245"/>
                            <scope line="250"/>
                            <scope line="254"/>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="263">
                Perform property expansion of the provider value.
                  NOTE use of doPrivileged().                
            </javadoc>
            <method name="expand" type="String" line="268">
                <params>
                    <param name="value" type="String"/>
                </params>
                <comment line="270">
                    shortcut if value does not contain any properties                    
                </comment>
                <scope line="270"/>
                <anonymous_class line="273">
                    <method name="run" type="String" line="274">
                        <scope line="275"/>
                        <scope line="277"/>
                    </method>
                </anonymous_class>
            </method>
        </class>
    </source>