<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.jca">
        <import package="java.io.File"/>
        <import package="java.lang.reflect"/>
        <import package="java.security"/>
        <import package="sun.security.util.PropertyExpander"/>
        <class name="ProviderConfig" line="6">
            <javadoc line="6">
                Class representing a configured provider. Encapsulates configuration
                  (className plus optional argument), the provider loading logic, and
                  the loaded Provider object itself.                
                <author>
                    Andreas Sterbenz                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="debug" type="sun.security.util.Debug" line="14"/>
            <declaration name="P11_SOL_NAME" type="String" line="15"/>
            <declaration name="P11_SOL_ARG" type="String" line="16"/>
            <declaration name="MAX_LOAD_TRIES" type="int" line="17"/>
            <declaration name="CL_STRING" type="Class[]" line="18"/>
            <declaration name="className" type="String" line="19"/>
            <declaration name="argument" type="String" line="20"/>
            <declaration name="tries" type="int" line="21"/>
            <declaration name="provider" type="Provider" line="22"/>
            <declaration name="isLoading" type="boolean" line="23"/>
            <method name="ProviderConfig" type="constructor" line="24">
                <params>
                    <param name="className" type="String"/>
                    <param name="argument" type="String"/>
                </params>
                <scope line="25"/>
            </method>
            <method name="ProviderConfig" type="constructor" line="31">
                <params>
                    <param name="className" type="String"/>
                </params>
            </method>
            <method name="ProviderConfig" type="constructor" line="34">
                <params>
                    <param name="provider" type="Provider"/>
                </params>
            </method>
            <method name="checkSunPKCS11Solaris" type="void" line="39">
                <anonymous_class line="40">
                    <method name="run" type="Boolean" line="41">
                        <declaration name="file" type="File" line="42"/>
                        <scope line="43"/>
                        <scope line="46"/>
                    </method>
                </anonymous_class>
                <declaration name="o" type="Boolean" line="40"/>
                <scope line="53"/>
            </method>
            <method name="hasArgument" type="boolean" line="57"/>
            <method name="shouldLoad" type="boolean" line="60"/>
            <method name="disableLoad" type="void" line="63"/>
            <method name="isLoaded" type="boolean" line="66"/>
            <method name="equals" type="boolean" line="69">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="70"/>
                <scope line="73"/>
                <declaration name="other" type="ProviderConfig" line="76"/>
            </method>
            <method name="hashCode" type="int" line="79"/>
            <method name="toString" type="String" line="82">
                <scope line="83"/>
                <scope line="86"/>
            </method>
            <javadoc line="90">
                Get the provider object. Loads the provider if it is not already loaded.                
            </javadoc>
            <method name="getProvider" type="Provider" line="93">
                <declaration name="p" type="Provider" line="94"/>
                <scope line="95"/>
                <scope line="98"/>
                <scope line="101">
                    <scope line="102"/>
                </scope>
                <scope line="108"/>
                <scope line="113"/>
            </method>
            <javadoc line="119">
                Load and instantiate the Provider described by this class.
                  NOTE use of doPrivileged().                
                <return>
                    null if the Provider could not be loaded                    
                </return>
                <throws>
                    ProviderException if executing the Provider's constructor
                      throws a ProviderException. All other Exceptions are ignored.                    
                </throws>
            </javadoc>
            <method name="doLoadProvider" type="Provider" line="126">
                <anonymous_class line="127">
                    <method name="run" type="Provider" line="128">
                        <scope line="129"/>
                        <scope line="132">
                            <declaration name="cl" type="ClassLoader" line="133"/>
                            <declaration name="provClass" type="Class&lt;?&gt;" line="134"/>
                            <scope line="135"/>
                            <scope line="138"/>
                            <declaration name="obj" type="Object" line="141"/>
                            <scope line="142"/>
                            <scope line="145">
                                <declaration name="cons" type="Constructor&lt;?&gt;" line="146"/>
                            </scope>
                            <scope line="149">
                                <scope line="150"/>
                            </scope>
                            <scope line="155">
                                <scope line="156"/>
                            </scope>
                        </scope>
                        <scope line="163">
                            <declaration name="t" type="Throwable" line="164"/>
                            <scope line="165"/>
                            <scope line="168"/>
                            <scope line="171"/>
                            <scope line="175"/>
                            <scope line="178"/>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="187">
                Perform property expansion of the provider value.
                  NOTE use of doPrivileged().                
            </javadoc>
            <method name="expand" type="String" line="191">
                <params>
                    <param name="value" type="String"/>
                </params>
                <scope line="192"/>
                <anonymous_class line="195">
                    <method name="run" type="String" line="196">
                        <scope line="197"/>
                        <scope line="200"/>
                    </method>
                </anonymous_class>
            </method>
        </class>
    </source>