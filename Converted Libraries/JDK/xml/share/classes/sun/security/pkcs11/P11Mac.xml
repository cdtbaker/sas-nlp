<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.pkcs11">
        <import package="java.util"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.security"/>
        <import package="java.security.spec.AlgorithmParameterSpec"/>
        <import package="javax.crypto.MacSpi"/>
        <import package="sun.nio.ch.DirectBuffer"/>
        <import package="sun.security.pkcs11.wrapper"/>
        <import package="sun.security.pkcs11.wrapper.PKCS11Constants"/>
        <class name="P11Mac" line="10">
            <extends class="MacSpi"/>
            <javadoc line="10">
                MAC implementation class. This class currently supports HMAC using
                  MD5, SHA-1, SHA-256, SHA-384, and SHA-512 and the SSL3 MAC using MD5
                  and SHA-1.
                  Note that unlike other classes (e.g. Signature), this does not
                  composite various operations if the token only supports part of the
                  required functionality. The MAC implementations in SunJCE already
                  do exactly that by implementing an MAC on top of MessageDigests. We
                  could not do any better than they.                
                <author>
                    Andreas Sterbenz                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="S_UNINIT" type="int" line="23"/>
            <declaration name="S_RESET" type="int" line="24"/>
            <declaration name="S_UPDATE" type="int" line="25"/>
            <declaration name="S_DOFINAL" type="int" line="26"/>
            <declaration name="token" type="Token" line="27"/>
            <declaration name="algorithm" type="String" line="28"/>
            <declaration name="mechanism" type="long" line="29"/>
            <declaration name="ckMechanism" type="CK_MECHANISM" line="30"/>
            <declaration name="macLength" type="int" line="31"/>
            <declaration name="p11Key" type="P11Key" line="32"/>
            <declaration name="session" type="Session" line="33"/>
            <declaration name="state" type="int" line="34"/>
            <declaration name="oneByte" type="byte[]" line="35"/>
            <method name="P11Mac" type="constructor" line="36">
                <params>
                    <param name="token" type="Token"/>
                    <param name="algorithm" type="String"/>
                    <param name="mechanism" type="long"/>
                </params>
                <declaration name="params" type="Long" line="41"/>
            </method>
            <method name="ensureInitialized" type="void" line="73">
                <scope line="75"/>
            </method>
            <method name="cancelOperation" type="void" line="79">
                <scope line="81"/>
                <scope line="85"/>
                <scope line="88"/>
                <scope line="91"/>
            </method>
            <method name="initialize" type="void" line="95">
                <scope line="96"/>
                <scope line="99"/>
                <scope line="102"/>
                <scope line="106"/>
            </method>
            <method name="engineGetMacLength" type="int" line="110"/>
            <method name="engineReset" type="void" line="113">
                <scope line="114"/>
                <scope line="119"/>
                <scope line="122"/>
            </method>
            <method name="engineInit" type="void" line="126">
                <params>
                    <param name="key" type="Key"/>
                    <param name="params" type="AlgorithmParameterSpec"/>
                </params>
                <scope line="127"/>
                <scope line="132"/>
                <scope line="135"/>
            </method>
            <method name="engineDoFinal" type="byte[]" line="139">
                <scope line="140">
                    <declaration name="mac" type="byte[]" line="142"/>
                </scope>
                <scope line="146"/>
                <scope line="149"/>
            </method>
            <method name="engineUpdate" type="void" line="153">
                <params>
                    <param name="input" type="byte"/>
                </params>
                <scope line="154"/>
            </method>
            <method name="engineUpdate" type="void" line="160">
                <params>
                    <param name="b" type="byte[]"/>
                    <param name="ofs" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="161"/>
                <scope line="166"/>
            </method>
            <method name="engineUpdate" type="void" line="170">
                <params>
                    <param name="byteBuffer" type="ByteBuffer"/>
                </params>
                <scope line="171">
                    <declaration name="len" type="int" line="173"/>
                    <scope line="174"/>
                    <scope line="177"/>
                    <declaration name="addr" type="long" line="181"/>
                    <declaration name="ofs" type="int" line="182"/>
                </scope>
                <scope line="187"/>
            </method>
        </class>
    </source>