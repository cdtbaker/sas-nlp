<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.pkcs11">
        <import package="java.util"/>
        <import package="java.security.ProviderException"/>
        <import package="sun.security.util.Debug"/>
        <import package="sun.security.pkcs11.wrapper"/>
        <import package="sun.security.pkcs11.wrapper.PKCS11Constants"/>
        <class name="SessionManager" line="7">
            <javadoc line="7">
                Session manager. There is one session manager object per PKCS#11
                  provider. It allows code to checkout a session, release it
                  back to the pool, or force it to be closed.
                  The session manager pools sessions to minimize the number of
                  C_OpenSession() and C_CloseSession() that have to be made. It
                  maintains two pools: one for &quot;object&quot; sessions and one for
                  &quot;operation&quot; sessions.
                  The reason for this separation is how PKCS#11 deals with session objects.
                  It defines that when a session is closed, all objects created within
                  that session are destroyed. In other words, we may never close a session
                  while a Key created it in is still in use. We would like to keep the
                  number of such sessions low. Note that we occasionally want to explicitly
                  close a session, see P11Signature.
                  NOTE that sessions obtained from this class SHOULD be returned using
                  either releaseSession() or closeSession() using a finally block when
                  not needed anymore. Otherwise, they will be left for cleanup via the
                  PhantomReference mechanism when GC kicks in, but it&apos;s best not to rely
                  on that since GC may not run timely enough since the native PKCS11 library
                  is also consuming memory.
                  Note that sessions are automatically closed when they are not used for a
                  period of time, see Session.                
                <author>
                    Andreas Sterbenz                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="DEFAULT_MAX_SESSIONS" type="int" line="33"/>
            <declaration name="debug" type="Debug" line="34"/>
            <declaration name="token" type="Token" line="35"/>
            <declaration name="maxSessions" type="int" line="36"/>
            <declaration name="activeSessions" type="int" line="37"/>
            <declaration name="objSessions" type="Pool" line="38"/>
            <declaration name="opSessions" type="Pool" line="39"/>
            <declaration name="maxActiveSessions" type="int" line="40"/>
            <declaration name="openSessionFlags" type="long" line="41"/>
            <method name="SessionManager" type="constructor" line="42">
                <params>
                    <param name="token" type="Token"/>
                </params>
                <declaration name="n" type="long" line="43"/>
                <scope line="44"/>
                <scope line="48"/>
                <scope line="52"/>
                <scope line="55"/>
            </method>
            <method name="lowMaxSessions" type="boolean" line="63"/>
            <method name="getObjSession" type="Session" line="66">
                <declaration name="session" type="Session" line="67"/>
                <scope line="68"/>
                <scope line="72"/>
            </method>
            <method name="getOpSession" type="Session" line="78">
                <declaration name="session" type="Session" line="79"/>
                <scope line="80"/>
                <scope line="83"/>
                <scope line="88"/>
            </method>
            <method name="ensureValid" type="Session" line="93">
                <params>
                    <param name="session" type="Session"/>
                </params>
            </method>
            <method name="killSession" type="Session" line="97">
                <params>
                    <param name="session" type="Session"/>
                </params>
                <scope line="98"/>
                <scope line="101">
                    <declaration name="location" type="String" line="102"/>
                </scope>
            </method>
            <method name="releaseSession" type="Session" line="108">
                <params>
                    <param name="session" type="Session"/>
                </params>
                <scope line="109"/>
                <scope line="112"/>
                <scope line="115"/>
            </method>
            <method name="demoteObjSession" type="void" line="120">
                <params>
                    <param name="session" type="Session"/>
                </params>
                <scope line="121"/>
                <scope line="124"/>
                <declaration name="present" type="boolean" line="127"/>
                <scope line="128"/>
            </method>
            <method name="openSession" type="Session" line="133">
                <scope line="134"/>
                <declaration name="id" type="long" line="137"/>
                <declaration name="session" type="Session" line="138"/>
                <scope line="140">
                    <scope line="141">
                        <scope line="143"/>
                    </scope>
                </scope>
            </method>
            <method name="closeSession" type="void" line="150">
                <params>
                    <param name="session" type="Session"/>
                </params>
            </method>
            <class name="Pool" line="154">
                <declaration name="mgr" type="SessionManager" line="155"/>
                <declaration name="pool" type="List&lt;Session&gt;" line="156"/>
                <method name="Pool" type="constructor" line="157">
                    <params>
                        <param name="mgr" type="SessionManager"/>
                    </params>
                </method>
                <method name="remove" type="boolean" line="161">
                    <params>
                        <param name="session" type="Session"/>
                    </params>
                </method>
                <method name="poll" type="Session" line="164">
                    <declaration name="n" type="int" line="165"/>
                    <scope line="166"/>
                    <declaration name="session" type="Session" line="169"/>
                </method>
                <method name="release" type="void" line="172">
                    <params>
                        <param name="session" type="Session"/>
                    </params>
                    <scope line="174"/>
                    <declaration name="n" type="int" line="177"/>
                    <scope line="178"/>
                    <declaration name="oldestSession" type="Session" line="181"/>
                    <declaration name="time" type="long" line="182"/>
                    <scope line="183"/>
                    <declaration name="i" type="int" line="187"/>
                    <scope line="188">
                        <scope line="190"/>
                    </scope>
                    <scope line="196"/>
                    <declaration name="subList" type="List&lt;Session&gt;" line="199"/>
                </method>
            </class>
        </class>
    </source>