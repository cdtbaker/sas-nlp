<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.pkcs11">
        <import package="java.security"/>
        <import package="java.security.spec"/>
        <import package="sun.security.pkcs11.wrapper.PKCS11Exception"/>
        <import package="sun.security.pkcs11.wrapper.PKCS11Constants"/>
        <class name="P11KeyFactory" line="6">
            <extends class="KeyFactorySpi"/>
            <javadoc line="6">
                KeyFactory base class. Provides common infrastructure for the RSA, DSA,
                  and DH implementations.
                  The subclasses support conversion between keys and keyspecs
                  using X.509, PKCS#8, and their individual algorithm specific formats,
                  assuming keys are extractable.                
                <author>
                    Andreas Sterbenz                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="token" type="Token" line="16"/>
            <declaration name="algorithm" type="String" line="17"/>
            <method name="P11KeyFactory" type="constructor" line="18">
                <params>
                    <param name="token" type="Token"/>
                    <param name="algorithm" type="String"/>
                </params>
            </method>
            <javadoc line="23">
                Convert an arbitrary key of algorithm into a P11Key of token.
                  Used by P11Signature.init() and RSACipher.init().                
            </javadoc>
            <method name="convertKey" type="P11Key" line="27">
                <params>
                    <param name="token" type="Token"/>
                    <param name="key" type="Key"/>
                    <param name="algorithm" type="String"/>
                </params>
            </method>
            <method name="engineGetKeySpec" type="T" line="30">
                <params>
                    <param name="key" type="Key"/>
                    <param name="keySpec" type="Class&lt;T&gt;"/>
                </params>
                <scope line="32"/>
                <scope line="35">
                    <scope line="36"/>
                    <scope line="39"/>
                </scope>
                <declaration name="p11Key" type="P11Key" line="43"/>
                <scope line="44"/>
                <scope line="47"/>
                <declaration name="session" type="Session[]" line="50"/>
                <scope line="51">
                    <scope line="52"/>
                    <scope line="55"/>
                </scope>
                <scope line="59"/>
                <scope line="62"/>
            </method>
            <method name="engineTranslateKey" type="Key" line="66">
                <params>
                    <param name="key" type="Key"/>
                </params>
                <scope line="68"/>
                <scope line="71"/>
                <scope line="74">
                    <declaration name="p11Key" type="P11Key" line="75"/>
                    <scope line="76"/>
                </scope>
                <declaration name="p11Key" type="P11Key" line="80"/>
                <scope line="81"/>
                <scope line="84">
                    <declaration name="publicKey" type="PublicKey" line="85"/>
                </scope>
                <scope line="89">
                    <declaration name="privateKey" type="PrivateKey" line="90"/>
                </scope>
                <scope line="94"/>
            </method>
            <method name="implGetPublicKeySpec" type="KeySpec" line="98"/>
            <method name="implGetPrivateKeySpec" type="KeySpec" line="99"/>
            <method name="implTranslatePublicKey" type="PublicKey" line="100"/>
            <method name="implTranslatePrivateKey" type="PrivateKey" line="101"/>
            <method name="implGetSoftwareFactory" type="KeyFactory" line="102"/>
        </class>
    </source>