<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.pkcs11">
        <import package="java.util"/>
        <import package="java.io"/>
        <import package="java.security"/>
        <import package="sun.security.pkcs11.wrapper"/>
        <import package="sun.security.pkcs11.wrapper.PKCS11Constants"/>
        <class name="P11SecureRandom" line="7">
            <extends class="SecureRandomSpi"/>
            <javadoc line="7">
                SecureRandom implementation class. Some tokens support only
                  C_GenerateRandom() and not C_SeedRandom(). In order not to lose an
                  application specified seed, we create a SHA1PRNG that we mix with in that
                  case.
                  Note that since SecureRandom is thread safe, we only need one
                  instance per PKCS#11 token instance. It is created on demand and cached
                  in the SunPKCS11 class.
                  Also note that we obtain the PKCS#11 session on demand, no need to tie one
                  up.                
                <author>
                    Andreas Sterbenz                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="21"/>
            <declaration name="token" type="Token" line="22"/>
            <declaration name="mixRandom" type="SecureRandom" line="23"/>
            <declaration name="mixBuffer" type="byte[]" line="24"/>
            <declaration name="buffered" type="int" line="25"/>
            <declaration name="MAX_IBUFFER_TIME" type="long" line="26"/>
            <declaration name="IBUFFER_SIZE" type="int" line="27"/>
            <declaration name="iBuffer" type="byte[]" line="28"/>
            <declaration name="ibuffered" type="int" line="29"/>
            <declaration name="lastRead" type="long" line="30"/>
            <method name="P11SecureRandom" type="constructor" line="31">
                <params>
                    <param name="token" type="Token"/>
                </params>
            </method>
            <method name="engineSetSeed" type="void" line="34">
                <params>
                    <param name="seed" type="byte[]"/>
                </params>
                <scope line="35"/>
                <declaration name="session" type="Session" line="38"/>
                <scope line="39"/>
                <scope line="43">
                    <declaration name="random" type="SecureRandom" line="44"/>
                    <scope line="45"/>
                    <scope line="48">
                        <scope line="49"/>
                        <scope line="55"/>
                    </scope>
                </scope>
                <scope line="60"/>
            </method>
            <method name="engineNextBytes" type="void" line="64">
                <params>
                    <param name="bytes" type="byte[]"/>
                </params>
                <scope line="65"/>
                <scope line="68">
                    <declaration name="ofs" type="int" line="69"/>
                    <scope line="70">
                        <scope line="71">
                            <declaration name="time" type="long" line="72"/>
                            <scope line="73"/>
                            <scope line="78"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="84"/>
            </method>
            <method name="engineGenerateSeed" type="byte[]" line="88">
                <params>
                    <param name="numBytes" type="int"/>
                </params>
                <declaration name="b" type="byte[]" line="89"/>
            </method>
            <method name="mix" type="void" line="93">
                <params>
                    <param name="b" type="byte[]"/>
                </params>
                <declaration name="random" type="SecureRandom" line="94"/>
                <scope line="95"/>
                <scope line="98">
                    <declaration name="ofs" type="int" line="99"/>
                    <declaration name="len" type="int" line="100"/>
                    <scope line="101">
                        <scope line="102"/>
                    </scope>
                </scope>
            </method>
            <method name="implNextBytes" type="void" line="111">
                <params>
                    <param name="bytes" type="byte[]"/>
                </params>
                <declaration name="session" type="Session" line="112"/>
                <scope line="113"/>
                <scope line="118"/>
                <scope line="121"/>
            </method>
            <method name="readObject" type="void" line="125">
                <params>
                    <param name="in" type="ObjectInputStream"/>
                </params>
            </method>
        </class>
    </source>