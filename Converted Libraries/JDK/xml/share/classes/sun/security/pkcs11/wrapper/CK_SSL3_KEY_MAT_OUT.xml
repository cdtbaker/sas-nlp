<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.pkcs11.wrapper">
        <class name="CK_SSL3_KEY_MAT_OUT" line="52">
            <javadoc line="52">
                class CK_SSL3_KEY_MAT_OUT contains the resulting key handles and
                  initialization vectors after performing a C_DeriveKey function with the
                  CKM_SSL3_KEY_AND_MAC_DERIVE mechanism.&lt;p&gt;
                  &lt;B&gt;PKCS#11 structure:&lt;/B&gt;
                  &lt;PRE&gt;
                  typedef struct CK_SSL3_KEY_MAT_OUT {
                  CK_OBJECT_HANDLE hClientMacSecret;
                  CK_OBJECT_HANDLE hServerMacSecret;
                  CK_OBJECT_HANDLE hClientKey;
                  CK_OBJECT_HANDLE hServerKey;
                  CK_BYTE_PTR pIVClient;
                  CK_BYTE_PTR pIVServer;
                  } CK_SSL3_KEY_MAT_OUT;
                  &lt;/PRE&gt;                
                <author>
                    Karl Scheibelhofer &lt;Karl.Scheibelhofer@iaik.at&gt;                    
                </author>
                <author>
                    Martin Schlaeffer &lt;schlaeff@sbox.tugraz.at&gt;                    
                </author>
            </javadoc>
            <declaration name="hClientMacSecret" type="long" line="73"/>
            <javadoc line="73">
                &lt;B&gt;PKCS#11:&lt;/B&gt;
                  &lt;PRE&gt;
                  CK_OBJECT_HANDLE hClientMacSecret;
                  &lt;/PRE&gt;                
            </javadoc>
            <declaration name="hServerMacSecret" type="long" line="81"/>
            <javadoc line="81">
                &lt;B&gt;PKCS#11:&lt;/B&gt;
                  &lt;PRE&gt;
                  CK_OBJECT_HANDLE hServerMacSecret;
                  &lt;/PRE&gt;                
            </javadoc>
            <declaration name="hClientKey" type="long" line="89"/>
            <javadoc line="89">
                &lt;B&gt;PKCS#11:&lt;/B&gt;
                  &lt;PRE&gt;
                  CK_OBJECT_HANDLE hClientKey;
                  &lt;/PRE&gt;                
            </javadoc>
            <declaration name="hServerKey" type="long" line="97"/>
            <javadoc line="97">
                &lt;B&gt;PKCS#11:&lt;/B&gt;
                  &lt;PRE&gt;
                  CK_OBJECT_HANDLE hServerKey;
                  &lt;/PRE&gt;                
            </javadoc>
            <declaration name="pIVClient" type="byte[]" line="105"/>
            <javadoc line="105">
                &lt;B&gt;PKCS#11:&lt;/B&gt;
                  &lt;PRE&gt;
                  CK_BYTE_PTR pIVClient;
                  &lt;/PRE&gt;                
            </javadoc>
            <declaration name="pIVServer" type="byte[]" line="113"/>
            <javadoc line="113">
                &lt;B&gt;PKCS#11:&lt;/B&gt;
                  &lt;PRE&gt;
                  CK_BYTE_PTR pIVServer;
                  &lt;/PRE&gt;                
            </javadoc>
            <javadoc line="121">
                Returns the string representation of CK_SSL3_KEY_MAT_OUT.                
                <return>
                    the string representation of CK_SSL3_KEY_MAT_OUT                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="126">
                <comment line="158">
                    buffer.append(Constants.NEWLINE);                    
                </comment>
                <declaration name="buffer" type="StringBuilder" line="127"/>
            </method>
        </class>
    </source>