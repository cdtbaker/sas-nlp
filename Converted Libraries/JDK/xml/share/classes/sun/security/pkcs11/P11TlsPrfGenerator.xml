<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.pkcs11">
        <import package="java.security"/>
        <import package="java.security.spec.AlgorithmParameterSpec"/>
        <import package="javax.crypto"/>
        <import package="javax.crypto.spec"/>
        <import package="sun.security.internal.spec.TlsPrfParameterSpec"/>
        <import package="sun.security.pkcs11.TemplateManager"/>
        <import package="sun.security.pkcs11.wrapper"/>
        <import package="sun.security.pkcs11.wrapper.PKCS11Constants"/>
        <class name="P11TlsPrfGenerator" line="40">
            <extends class="KeyGeneratorSpi"/>
            <comment line="58">
                token instance                
            </comment>
            <comment line="61">
                algorithm name                
            </comment>
            <comment line="64">
                mechanism id                
            </comment>
            <comment line="100">
                SecretKeySpec does not allow zero length keys, so we define our own class.                
            </comment>
            <javadoc line="40">
                KeyGenerator for the TLS PRF. Note that although the PRF is used in a number
                  of places during the handshake, this class is usually only used to calculate
                  the Finished messages. The reason is that for those other uses more specific
                  PKCS#11 mechanisms have been defined (CKM_SSL3_MASTER_KEY_DERIVE, etc.).
                  &lt;p&gt;This class supports the CKM_TLS_PRF mechanism from PKCS#11 v2.20 and
                  the older NSS private mechanism.                
                <author>
                    Andreas Sterbenz                    
                </author>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="MSG" type="String" line="54"/>
            <declaration name="token" type="Token" line="58"/>
            <declaration name="algorithm" type="String" line="61"/>
            <declaration name="mechanism" type="long" line="64"/>
            <declaration name="spec" type="TlsPrfParameterSpec" line="66"/>
            <declaration name="p11Key" type="P11Key" line="68"/>
            <method name="P11TlsPrfGenerator" type="constructor" line="71">
                <params>
                    <param name="token" type="Token"/>
                    <param name="algorithm" type="String"/>
                    <param name="mechanism" type="long"/>
                </params>
            </method>
            <method name="engineInit" type="void" line="78">
                <params>
                    <param name="random" type="SecureRandom"/>
                </params>
            </method>
            <method name="engineInit" type="void" line="83">
                <params>
                    <param name="params" type="AlgorithmParameterSpec"/>
                    <param name="random" type="SecureRandom"/>
                </params>
                <scope line="84"/>
                <declaration name="key" type="SecretKey" line="88"/>
                <scope line="89"/>
                <scope line="92"/>
                <scope line="94"/>
            </method>
            <declaration name="NULL_KEY" type="SecretKey" line="100"/>
            <anonymous_class line="100">
                <method name="getEncoded" type="byte[]" line="101"/>
                <method name="getFormat" type="String" line="104"/>
                <method name="getAlgorithm" type="String" line="107"/>
            </anonymous_class>
            <method name="engineInit" type="void" line="112">
                <params>
                    <param name="keysize" type="int"/>
                    <param name="random" type="SecureRandom"/>
                </params>
            </method>
            <method name="engineGenerateKey" type="SecretKey" line="116">
                <comment line="142">
                    mechanism == CKM_TLS_PRF                    
                </comment>
                <comment line="152">
                    ignore keyID, returned PRF bytes are in &apos;out&apos;                    
                </comment>
                <scope line="117"/>
                <declaration name="label" type="byte[]" line="120"/>
                <declaration name="seed" type="byte[]" line="121"/>
                <scope line="123">
                    <declaration name="session" type="Session" line="124"/>
                    <scope line="125">
                        <declaration name="out" type="byte[]" line="131"/>
                    </scope>
                    <scope line="134"/>
                    <scope line="136"/>
                </scope>
                <declaration name="out" type="byte[]" line="143"/>
                <declaration name="params" type="CK_TLS_PRF_PARAMS" line="144"/>
                <declaration name="session" type="Session" line="146"/>
                <scope line="147">
                    <declaration name="keyID" type="long" line="149"/>
                </scope>
                <scope line="153"/>
                <scope line="155"/>
            </method>
        </class>
    </source>