<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.pkcs11">
        <import package="java.lang.ref"/>
        <import package="java.util"/>
        <import package="java.util.concurrent.atomic.AtomicInteger"/>
        <import package="java.security"/>
        <import package="sun.security.pkcs11.wrapper"/>
        <class name="Session" line="36">
            <comment line="47">
                time after which to close idle sessions, in milliseconds (3 minutes)                
            </comment>
            <comment line="50">
                token instance                
            </comment>
            <comment line="53">
                session id                
            </comment>
            <comment line="56">
                number of objects created within this session                
            </comment>
            <comment line="59">
                time this session was last used
                 not synchronized/volatile for performance, so may be unreliable
                 this could lead to idle sessions being closed early, but that is harmless                
            </comment>
            <comment line="155">
                handle to the native session                
            </comment>
            <implements interface="Comparable">
                <type_params>
                    <type_param name="Session"/>
                </type_params>
            </implements>
            <javadoc line="36">
                A session object. Sessions are obtained via the SessionManager,
                  see there for details. Most code will only ever need one method in
                  this class, the id() method to obtain the session id.                
                <author>
                    Andreas Sterbenz                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="MAX_IDLE_TIME" type="long" line="47"/>
            <declaration name="token" type="Token" line="50"/>
            <declaration name="id" type="long" line="53"/>
            <declaration name="createdObjects" type="AtomicInteger" line="56"/>
            <declaration name="lastAccess" type="long" line="61"/>
            <declaration name="sessionRef" type="SessionRef" line="63"/>
            <method name="Session" type="constructor" line="65">
                <params>
                    <param name="token" type="Token"/>
                    <param name="id" type="long"/>
                </params>
            </method>
            <method name="compareTo" type="int" line="73">
                <params>
                    <param name="other" type="Session"/>
                </params>
                <scope line="74"/>
                <scope line="76"/>
            </method>
            <method name="isLive" type="boolean" line="81">
                <params>
                    <param name="currentTime" type="long"/>
                </params>
            </method>
            <method name="idInternal" type="long" line="85"/>
            <method name="id" type="long" line="89">
                <scope line="90"/>
            </method>
            <method name="addObject" type="void" line="97">
                <comment line="100">
                    XXX update statistics in session manager if n == 1                    
                </comment>
                <declaration name="n" type="int" line="98"/>
            </method>
            <method name="removeObject" type="void" line="102">
                <declaration name="n" type="int" line="103"/>
                <scope line="104"/>
                <scope line="106"/>
            </method>
            <method name="hasObjects" type="boolean" line="111"/>
            <method name="close" type="void" line="115">
                <scope line="116"/>
            </method>
        </class>
        <class name="SessionRef" line="129">
            <extends class="PhantomReference">
                <type_params>
                    <type_param name="Session"/>
                </type_params>
            </extends>
            <comment line="47">
                time after which to close idle sessions, in milliseconds (3 minutes)                
            </comment>
            <comment line="50">
                token instance                
            </comment>
            <comment line="53">
                session id                
            </comment>
            <comment line="56">
                number of objects created within this session                
            </comment>
            <comment line="59">
                time this session was last used
                 not synchronized/volatile for performance, so may be unreliable
                 this could lead to idle sessions being closed early, but that is harmless                
            </comment>
            <comment line="155">
                handle to the native session                
            </comment>
            <implements interface="Comparable">
                <type_params>
                    <type_param name="SessionRef"/>
                </type_params>
            </implements>
            <declaration name="refQueue" type="ReferenceQueue&lt;Session&gt;" line="132"/>
            <declaration name="refList" type="Set&lt;SessionRef&gt;" line="135"/>
            <method name="referenceQueue" type="ReferenceQueue<Session>" line="138"/>
            <method name="totalCount" type="int" line="142"/>
            <method name="drainRefQueueBounded" type="void" line="146">
                <scope line="147">
                    <declaration name="next" type="SessionRef" line="148"/>
                </scope>
            </method>
            <declaration name="id" type="long" line="155"/>
            <declaration name="token" type="Token" line="156"/>
            <method name="SessionRef" type="constructor" line="158">
                <params>
                    <param name="session" type="Session"/>
                    <param name="id" type="long"/>
                    <param name="token" type="Token"/>
                </params>
                <comment line="164">
                    TBD: run at some interval and not every time?                    
                </comment>
            </method>
            <method name="dispose" type="void" line="167">
                <comment line="173">
                    ignore                    
                </comment>
                <comment line="175">
                    ignore                    
                </comment>
                <scope line="169"/>
                <scope line="171"/>
                <scope line="173"/>
                <scope line="175"/>
            </method>
            <method name="compareTo" type="int" line="180">
                <params>
                    <param name="other" type="SessionRef"/>
                </params>
                <scope line="181"/>
                <scope line="183"/>
            </method>
        </class>
    </source>