<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.pkcs11">
        <import package="java.lang.ref"/>
        <import package="java.util"/>
        <import package="java.util.concurrent.atomic.AtomicInteger"/>
        <import package="java.security"/>
        <import package="sun.security.pkcs11.wrapper"/>
        <class name="Session" line="7">
            <implements interface="Comparable">
                <type_params>
                    <type_param name="Session"/>
                </type_params>
            </implements>
            <javadoc line="7">
                A session object. Sessions are obtained via the SessionManager,
                  see there for details. Most code will only ever need one method in
                  this class, the id() method to obtain the session id.                
                <author>
                    Andreas Sterbenz                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="MAX_IDLE_TIME" type="long" line="15"/>
            <declaration name="token" type="Token" line="16"/>
            <declaration name="id" type="long" line="17"/>
            <declaration name="createdObjects" type="AtomicInteger" line="18"/>
            <declaration name="lastAccess" type="long" line="19"/>
            <declaration name="sessionRef" type="SessionRef" line="20"/>
            <method name="Session" type="constructor" line="21">
                <params>
                    <param name="token" type="Token"/>
                    <param name="id" type="long"/>
                </params>
            </method>
            <method name="compareTo" type="int" line="28">
                <params>
                    <param name="other" type="Session"/>
                </params>
                <scope line="29"/>
                <scope line="32"/>
            </method>
            <method name="isLive" type="boolean" line="36">
                <params>
                    <param name="currentTime" type="long"/>
                </params>
            </method>
            <method name="idInternal" type="long" line="39"/>
            <method name="id" type="long" line="42">
                <scope line="43"/>
            </method>
            <method name="addObject" type="void" line="49">
                <declaration name="n" type="int" line="50"/>
            </method>
            <method name="removeObject" type="void" line="52">
                <declaration name="n" type="int" line="53"/>
                <scope line="54"/>
                <scope line="57"/>
            </method>
            <method name="hasObjects" type="boolean" line="61"/>
            <method name="close" type="void" line="64">
                <scope line="65"/>
            </method>
        </class>
        <class name="SessionRef" line="71">
            <extends class="PhantomReference">
                <type_params>
                    <type_param name="Session"/>
                </type_params>
            </extends>
            <implements interface="Comparable">
                <type_params>
                    <type_param name="SessionRef"/>
                </type_params>
            </implements>
            <declaration name="refQueue" type="ReferenceQueue&amp;lt;Session&amp;gt;" line="72"/>
            <declaration name="refList" type="Set&amp;lt;SessionRef&amp;gt;" line="73"/>
            <method name="referenceQueue" type="ReferenceQueue&lt;Session&gt;" line="74"/>
            <method name="totalCount" type="int" line="77"/>
            <method name="drainRefQueueBounded" type="void" line="80">
                <scope line="81">
                    <declaration name="next" type="SessionRef" line="82"/>
                </scope>
            </method>
            <declaration name="id" type="long" line="87"/>
            <declaration name="token" type="Token" line="88"/>
            <method name="SessionRef" type="constructor" line="89">
                <params>
                    <param name="session" type="Session"/>
                    <param name="id" type="long"/>
                    <param name="token" type="Token"/>
                </params>
            </method>
            <method name="dispose" type="void" line="96">
                <scope line="98"/>
                <scope line="101"/>
                <scope line="103"/>
                <scope line="105"/>
            </method>
            <method name="compareTo" type="int" line="109">
                <params>
                    <param name="other" type="SessionRef"/>
                </params>
                <scope line="110"/>
                <scope line="113"/>
            </method>
        </class>
    </source>