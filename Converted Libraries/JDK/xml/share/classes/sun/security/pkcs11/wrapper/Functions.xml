<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.pkcs11.wrapper">
        <import package="java.math.BigInteger"/>
        <import package="java.util"/>
        <import package="sun.security.pkcs11.wrapper.PKCS11Constants"/>
        <class name="Functions" line="56">
            <comment line="66">
                maps between ids and their names, forward and reverse
                 ids are stored as Integers to save space
                 since only the lower 32 bits are ever used anyway                
            </comment>
            <comment line="70">
                mechanisms (CKM_*)                
            </comment>
            <comment line="77">
                key types (CKK_*)                
            </comment>
            <comment line="84">
                attributes (CKA_*)                
            </comment>
            <comment line="91">
                object classes (CKO_*)                
            </comment>
            <javadoc line="56">
                This class contains onyl static methods. It is the place for all functions
                  that are used by several classes in this package.                
                <author>
                    Karl Scheibelhofer &lt;Karl.Scheibelhofer@iaik.at&gt;                    
                </author>
                <author>
                    Martin Schlaeffer &lt;schlaeff@sbox.tugraz.at&gt;                    
                </author>
            </javadoc>
            <declaration name="mechNames" type="Map&lt;Integer,String&gt;" line="70"/>
            <declaration name="mechIds" type="Map&lt;String,Integer&gt;" line="73"/>
            <declaration name="keyNames" type="Map&lt;Integer,String&gt;" line="77"/>
            <declaration name="keyIds" type="Map&lt;String,Integer&gt;" line="80"/>
            <declaration name="attributeNames" type="Map&lt;Integer,String&gt;" line="84"/>
            <declaration name="attributeIds" type="Map&lt;String,Integer&gt;" line="87"/>
            <declaration name="objectClassNames" type="Map&lt;Integer,String&gt;" line="91"/>
            <declaration name="objectClassIds" type="Map&lt;String,Integer&gt;" line="94"/>
            <declaration name="HEX_DIGITS" type="char[]" line="98"/>
            <javadoc line="98">
                For converting numbers to their hex presentation.                
            </javadoc>
            <javadoc line="103">
                Converts a long value to a hexadecimal String of length 16. Includes
                  leading zeros if necessary.                
                <param>
                    value The long value to be converted.                    
                </param>
                <return>
                    The hexadecimal string representation of the long value.                    
                </return>
            </javadoc>
            <method name="toFullHexString" type="String" line="110">
                <params>
                    <param name="value" type="long"/>
                </params>
                <declaration name="currentValue" type="long" line="111"/>
                <declaration name="stringBuffer" type="StringBuffer" line="112"/>
                <scope line="113">
                    <declaration name="currentDigit" type="int" line="114"/>
                </scope>
            </method>
            <javadoc line="122">
                Converts a int value to a hexadecimal String of length 8. Includes
                  leading zeros if necessary.                
                <param>
                    value The int value to be converted.                    
                </param>
                <return>
                    The hexadecimal string representation of the int value.                    
                </return>
            </javadoc>
            <method name="toFullHexString" type="String" line="129">
                <params>
                    <param name="value" type="int"/>
                </params>
                <declaration name="currentValue" type="int" line="130"/>
                <declaration name="stringBuffer" type="StringBuffer" line="131"/>
                <scope line="132">
                    <declaration name="currentDigit" type="int" line="133"/>
                </scope>
            </method>
            <javadoc line="141">
                converts a long value to a hexadecimal String                
                <param>
                    value the long value to be converted                    
                </param>
                <return>
                    the hexadecimal string representation of the long value                    
                </return>
            </javadoc>
            <method name="toHexString" type="String" line="147">
                <params>
                    <param name="value" type="long"/>
                </params>
            </method>
            <javadoc line="151">
                Converts a byte array to a hexadecimal String. Each byte is presented by
                  its two digit hex-code; 0x0A -&gt; &quot;0a&quot;, 0x00 -&gt; &quot;00&quot;. No leading &quot;0x&quot; is
                  included in the result.                
                <param>
                    value the byte array to be converted                    
                </param>
                <return>
                    the hexadecimal string representation of the byte array                    
                </return>
            </javadoc>
            <method name="toHexString" type="String" line="159">
                <params>
                    <param name="value" type="byte[]"/>
                </params>
                <scope line="160"/>
                <declaration name="buffer" type="StringBuffer" line="164"/>
                <declaration name="single" type="int" line="165"/>
                <scope line="167">
                    <scope line="170"/>
                </scope>
            </method>
            <javadoc line="180">
                converts a long value to a binary String                
                <param>
                    value the long value to be converted                    
                </param>
                <return>
                    the binary string representation of the long value                    
                </return>
            </javadoc>
            <method name="toBinaryString" type="String" line="186">
                <params>
                    <param name="value" type="long"/>
                </params>
            </method>
            <javadoc line="190">
                converts a byte array to a binary String                
                <param>
                    value the byte array to be converted                    
                </param>
                <return>
                    the binary string representation of the byte array                    
                </return>
            </javadoc>
            <method name="toBinaryString" type="String" line="196">
                <params>
                    <param name="value" type="byte[]"/>
                </params>
                <declaration name="helpBigInteger" type="BigInteger" line="197"/>
            </method>
            <class name="Flags" line="202">
                <declaration name="flagIds" type="long[]" line="203"/>
                <declaration name="flagNames" type="String[]" line="204"/>
                <method name="Flags" type="constructor" line="205">
                    <params>
                        <param name="flagIds" type="long[]"/>
                        <param name="flagNames" type="String[]"/>
                    </params>
                    <scope line="206"/>
                </method>
                <method name="toString" type="String" line="212">
                    <params>
                        <param name="val" type="long"/>
                    </params>
                    <declaration name="sb" type="StringBuilder" line="213"/>
                    <declaration name="first" type="boolean" line="214"/>
                    <scope line="215">
                        <scope line="216">
                            <scope line="217"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <declaration name="slotInfoFlags" type="Flags" line="228"/>
            <javadoc line="238">
                converts the long value flags to a SlotInfoFlag string                
                <param>
                    flags the flags to be converted                    
                </param>
                <return>
                    the SlotInfoFlag string representation of the flags                    
                </return>
            </javadoc>
            <method name="slotInfoFlagsToString" type="String" line="244">
                <params>
                    <param name="flags" type="long"/>
                </params>
            </method>
            <declaration name="tokenInfoFlags" type="Flags" line="248"/>
            <javadoc line="288">
                converts long value flags to a TokenInfoFlag string                
                <param>
                    flags the flags to be converted                    
                </param>
                <return>
                    the TokenInfoFlag string representation of the flags                    
                </return>
            </javadoc>
            <method name="tokenInfoFlagsToString" type="String" line="294">
                <params>
                    <param name="flags" type="long"/>
                </params>
            </method>
            <declaration name="sessionInfoFlags" type="Flags" line="298"/>
            <javadoc line="306">
                converts the long value flags to a SessionInfoFlag string                
                <param>
                    flags the flags to be converted                    
                </param>
                <return>
                    the SessionInfoFlag string representation of the flags                    
                </return>
            </javadoc>
            <method name="sessionInfoFlagsToString" type="String" line="312">
                <params>
                    <param name="flags" type="long"/>
                </params>
            </method>
            <javadoc line="316">
                converts the long value state to a SessionState string                
                <param>
                    state the state to be converted                    
                </param>
                <return>
                    the SessionState string representation of the state                    
                </return>
            </javadoc>
            <method name="sessionStateToString" type="String" line="322">
                <params>
                    <param name="state" type="long"/>
                </params>
                <declaration name="name" type="String" line="323"/>
                <scope line="325"/>
                <scope line="327"/>
                <scope line="329"/>
                <scope line="331"/>
                <scope line="333"/>
                <scope line="335"/>
            </method>
            <declaration name="mechanismInfoFlags" type="Flags" line="342"/>
            <javadoc line="386">
                converts the long value flags to a MechanismInfoFlag string                
                <param>
                    flags the flags to be converted                    
                </param>
                <return>
                    the MechanismInfoFlag string representation of the flags                    
                </return>
            </javadoc>
            <method name="mechanismInfoFlagsToString" type="String" line="392">
                <params>
                    <param name="flags" type="long"/>
                </params>
            </method>
            <method name="getName" type="String" line="396">
                <params>
                    <param name="nameMap" type="Map<Integer,String>"/>
                    <param name="id" type="long"/>
                </params>
                <declaration name="name" type="String" line="397"/>
                <scope line="398"/>
                <scope line="401"/>
            </method>
            <method name="getId" type="long" line="407">
                <params>
                    <param name="idMap" type="Map<String,Integer>"/>
                    <param name="name" type="String"/>
                </params>
                <declaration name="mech" type="Integer" line="408"/>
                <scope line="409"/>
            </method>
            <method name="getMechanismName" type="String" line="415">
                <params>
                    <param name="id" type="long"/>
                </params>
            </method>
            <method name="getMechanismId" type="long" line="419">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="getKeyName" type="String" line="423">
                <params>
                    <param name="id" type="long"/>
                </params>
            </method>
            <method name="getKeyId" type="long" line="427">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="getAttributeName" type="String" line="431">
                <params>
                    <param name="id" type="long"/>
                </params>
            </method>
            <method name="getAttributeId" type="long" line="435">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="getObjectClassName" type="String" line="439">
                <params>
                    <param name="id" type="long"/>
                </params>
            </method>
            <method name="getObjectClassId" type="long" line="443">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="447">
                Check the given arrays for equalitiy. This method considers both arrays as
                  equal, if both are &lt;code&gt;null&lt;/code&gt; or both have the same length and
                  contain exactly the same byte values.                
                <param>
                    array1 The first array.                    
                </param>
                <param>
                    array2 The second array.                    
                </param>
                <return>
                    True, if both arrays are &lt;code&gt;null&lt;/code&gt; or both have the same
                      length and contain exactly the same byte values. False, otherwise.                    
                </return>
                <preconditions>
                                        
                </preconditions>
                <postconditions>
                                        
                </postconditions>
            </javadoc>
            <method name="equals" type="boolean" line="459">
                <params>
                    <param name="array1" type="byte[]"/>
                    <param name="array2" type="byte[]"/>
                </params>
            </method>
            <javadoc line="463">
                Check the given arrays for equalitiy. This method considers both arrays as
                  equal, if both are &lt;code&gt;null&lt;/code&gt; or both have the same length and
                  contain exactly the same char values.                
                <param>
                    array1 The first array.                    
                </param>
                <param>
                    array2 The second array.                    
                </param>
                <return>
                    True, if both arrays are &lt;code&gt;null&lt;/code&gt; or both have the same
                      length and contain exactly the same char values. False, otherwise.                    
                </return>
                <preconditions>
                                        
                </preconditions>
                <postconditions>
                                        
                </postconditions>
            </javadoc>
            <method name="equals" type="boolean" line="475">
                <params>
                    <param name="array1" type="char[]"/>
                    <param name="array2" type="char[]"/>
                </params>
            </method>
            <javadoc line="479">
                Check the given dates for equalitiy. This method considers both dates as
                  equal, if both are &lt;code&gt;null&lt;/code&gt; or both contain exactly the same char
                  values.                
                <param>
                    date1 The first date.                    
                </param>
                <param>
                    date2 The second date.                    
                </param>
                <return>
                    True, if both dates are &lt;code&gt;null&lt;/code&gt; or both contain the same
                      char values. False, otherwise.                    
                </return>
                <preconditions>
                                        
                </preconditions>
                <postconditions>
                                        
                </postconditions>
            </javadoc>
            <method name="equals" type="boolean" line="491">
                <params>
                    <param name="date1" type="CK_DATE"/>
                    <param name="date2" type="CK_DATE"/>
                </params>
                <declaration name="equal" type="boolean" line="492"/>
                <scope line="494"/>
                <scope line="496"/>
                <scope line="500"/>
            </method>
            <javadoc line="507">
                Calculate a hash code for the given byte array.                
                <param>
                    array The byte array.                    
                </param>
                <return>
                    A hash code for the given array.                    
                </return>
                <preconditions>
                                        
                </preconditions>
                <postconditions>
                                        
                </postconditions>
            </javadoc>
            <method name="hashCode" type="int" line="515">
                <params>
                    <param name="array" type="byte[]"/>
                </params>
                <declaration name="hash" type="int" line="516"/>
                <scope line="518">
                    <scope line="519"/>
                </scope>
            </method>
            <javadoc line="527">
                Calculate a hash code for the given char array.                
                <param>
                    array The char array.                    
                </param>
                <return>
                    A hash code for the given array.                    
                </return>
                <preconditions>
                                        
                </preconditions>
                <postconditions>
                                        
                </postconditions>
            </javadoc>
            <method name="hashCode" type="int" line="535">
                <params>
                    <param name="array" type="char[]"/>
                </params>
                <declaration name="hash" type="int" line="536"/>
                <scope line="538">
                    <scope line="539"/>
                </scope>
            </method>
            <javadoc line="547">
                Calculate a hash code for the given date object.                
                <param>
                    date The date object.                    
                </param>
                <return>
                    A hash code for the given date.                    
                </return>
                <preconditions>
                                        
                </preconditions>
                <postconditions>
                                        
                </postconditions>
            </javadoc>
            <method name="hashCode" type="int" line="555">
                <params>
                    <param name="date" type="CK_DATE"/>
                </params>
                <declaration name="hash" type="int" line="556"/>
                <scope line="558">
                    <scope line="559"/>
                    <scope line="565"/>
                    <scope line="569"/>
                </scope>
            </method>
            <method name="addMapping" type="void" line="579">
                <params>
                    <param name="nameMap" type="Map<Integer,String>"/>
                    <param name="idMap" type="Map<String,Integer>"/>
                    <param name="id" type="long"/>
                    <param name="name" type="String"/>
                </params>
                <scope line="580"/>
                <declaration name="intId" type="Integer" line="583"/>
                <scope line="584"/>
                <scope line="587"/>
            </method>
            <method name="addMech" type="void" line="592">
                <params>
                    <param name="id" type="long"/>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="addKeyType" type="void" line="596">
                <params>
                    <param name="id" type="long"/>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="addAttribute" type="void" line="600">
                <params>
                    <param name="id" type="long"/>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="addObjectClass" type="void" line="604">
                <params>
                    <param name="id" type="long"/>
                    <param name="name" type="String"/>
                </params>
            </method>
            <scope line="608"/>
        </class>
    </source>