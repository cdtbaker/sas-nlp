<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.pkcs11.wrapper">
        <import package="java.util"/>
        <class name="PKCS11Exception" line="3">
            <extends class="Exception"/>
            <javadoc line="3">
                This is the superclass of all checked exceptions used by this package. An
                  exception of this class indicates that a function call to the underlying
                  PKCS#11 module returned a value not equal to CKR_OK. The application can get
                  the returned value by calling getErrorCode(). A return value not equal to
                  CKR_OK is the only reason for such an exception to be thrown.
                  PKCS#11 defines the meaning of an error-code, which may depend on the
                  context in which the error occurs.                
                <author>
                    <a href="mailto:Karl.Scheibelhofer@iaik.at"> Karl Scheibelhofer </a>                    
                </author>
                <invariants>
                                        
                </invariants>
            </javadoc>
            <declaration name="errorCode_" type="long" line="15"/>
            <javadoc line="15">
                The code of the error which was the reason for this exception.                
            </javadoc>
            <declaration name="errorMap" type="Map&lt;Long,String&gt;" line="19"/>
            <scope line="20">
                <declaration name="errorCodes" type="int[]" line="21"/>
                <declaration name="errorMessages" type="String[]" line="22"/>
                <scope line="24"/>
            </scope>
            <javadoc line="28">
                Constructor taking the error code as defined for the CKR_ constants
                  in PKCS#11.                
            </javadoc>
            <method name="PKCS11Exception" type="constructor" line="32">
                <params>
                    <param name="errorCode" type="long"/>
                </params>
            </method>
            <javadoc line="35">
                This method gets the corresponding text error message from
                  a property file. If this file is not available, it returns the error
                  code as a hex-string.                
                <return>
                    The message or the error code; e.g. "CKR_DEVICE_ERROR" or
                      "0x00000030".                    
                </return>
                <preconditions>
                                        
                </preconditions>
                <postconditions>
                    (result <> null)                    
                </postconditions>
            </javadoc>
            <method name="getMessage" type="String" line="44">
                <declaration name="message" type="String" line="45"/>
                <scope line="46"/>
            </method>
            <javadoc line="51">
                Returns the PKCS#11 error code.                
                <return>
                    The error code; e.g. 0x00000030.                    
                </return>
                <preconditions>
                                        
                </preconditions>
                <postconditions>
                                        
                </postconditions>
            </javadoc>
            <method name="getErrorCode" type="long" line="57"/>
        </class>
    </source>