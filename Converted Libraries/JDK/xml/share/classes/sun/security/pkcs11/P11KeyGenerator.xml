<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.pkcs11">
        <import package="java.security"/>
        <import package="java.security.spec.AlgorithmParameterSpec"/>
        <import package="javax.crypto"/>
        <import package="sun.security.pkcs11.TemplateManager"/>
        <import package="sun.security.pkcs11.wrapper"/>
        <import package="sun.security.pkcs11.wrapper.PKCS11Constants"/>
        <class name="P11KeyGenerator" line="37">
            <extends class="KeyGeneratorSpi"/>
            <comment line="47">
                token instance                
            </comment>
            <comment line="50">
                algorithm name                
            </comment>
            <comment line="53">
                mechanism id                
            </comment>
            <comment line="56">
                raw key size in bits, e.g. 64 for DES. Always valid.                
            </comment>
            <comment line="59">
                bits of entropy in the key, e.g. 56 for DES. Always valid.                
            </comment>
            <comment line="62">
                keyType (CKK_*), needed for TemplateManager call only.                
            </comment>
            <comment line="65">
                for determining if both 112 and 168 bits of DESede key lengths
                 are supported.                
            </comment>
            <comment line="169">
                set default keysize and also initialize keyType                
            </comment>
            <comment line="206">
                see JCE spec                
            </comment>
            <comment line="212">
                see JCE spec                
            </comment>
            <comment line="219">
                see JCE spec                
            </comment>
            <comment line="250">
                see JCE spec                
            </comment>
            <javadoc line="37">
                KeyGenerator implementation class. This class currently supports
                  DES, DESede, AES, ARCFOUR, and Blowfish.                
                <author>
                    Andreas Sterbenz                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="token" type="Token" line="47"/>
            <declaration name="algorithm" type="String" line="50"/>
            <declaration name="mechanism" type="long" line="53"/>
            <declaration name="keySize" type="int" line="56"/>
            <declaration name="significantKeySize" type="int" line="59"/>
            <declaration name="keyType" type="long" line="62"/>
            <declaration name="supportBothKeySizes" type="boolean" line="66"/>
            <javadoc line="68">
                Utility method for checking if the specified key size is valid
                  and within the supported range. Return the significant key size
                  upon successful validation.                
                <param>
                    keyGenMech the PKCS#11 key generation mechanism.                    
                </param>
                <param>
                    keySize the to-be-checked key size for this mechanism.                    
                </param>
                <param>
                    token token which provides this mechanism.                    
                </param>
                <return>
                    the significant key size (in bits) corresponding to the
                      specified key size.                    
                </return>
                <throws>
                    InvalidParameterException if the specified key size is invalid.                    
                </throws>
                <throws>
                    ProviderException if this mechanism isn&apos;t supported by SunPKCS11
                      or underlying native impl.                    
                </throws>
            </javadoc>
            <method name="checkKeySize" type="int" line="82">
                <params>
                    <param name="keyGenMech" type="long"/>
                    <param name="keySize" type="int"/>
                    <param name="token" type="Token"/>
                </params>
                <comment line="105">
                    Handle all variable-key-length algorithms here                    
                </comment>
                <comment line="110">
                    Should never happen                    
                </comment>
                <comment line="115">
                    XXX Unable to retrieve the supported key length from
                     the underlying native impl. Skip the checking for now.                    
                </comment>
                <comment line="119">
                    PKCS#11 defines these to be in number of bytes except for
                     RC4 which is in bits. However, some PKCS#11 impls still use
                     bytes for all mechs, e.g. NSS. We try to detect this
                     inconsistency if the minKeySize seems unreasonably small.                    
                </comment>
                <comment line="129">
                    Explicitly disallow keys shorter than 40-bits for security                    
                </comment>
                <declaration name="sigKeySize" type="int" line="83"/>
                <scope line="86"/>
                <scope line="94"/>
                <scope line="96"/>
                <scope line="98"/>
                <declaration name="info" type="CK_MECHANISM_INFO" line="105"/>
                <scope line="106"/>
                <scope line="108"/>
                <scope line="113"/>
                <declaration name="minKeySize" type="int" line="122"/>
                <declaration name="maxKeySize" type="int" line="123"/>
                <scope line="124"/>
                <scope line="130"/>
                <scope line="135">
                    <scope line="137"/>
                </scope>
            </method>
            <method name="P11KeyGenerator" type="constructor" line="150">
                <params>
                    <param name="token" type="Token"/>
                    <param name="algorithm" type="String"/>
                    <param name="mechanism" type="long"/>
                </params>
                <comment line="158">
                    Given the current lookup order specified in SunPKCS11.java,
                    if CKM_DES2_KEY_GEN is used to construct this object, it
                    means that CKM_DES3_KEY_GEN is disabled or unsupported.                    
                </comment>
                <scope line="156"/>
            </method>
            <method name="setDefaultKeySize" type="void" line="169">
                <scope line="198"/>
                <scope line="200"/>
            </method>
            <method name="engineInit" type="void" line="206">
                <params>
                    <param name="random" type="SecureRandom"/>
                </params>
            </method>
            <method name="engineInit" type="void" line="213">
                <params>
                    <param name="params" type="AlgorithmParameterSpec"/>
                    <param name="random" type="SecureRandom"/>
                </params>
            </method>
            <method name="engineInit" type="void" line="219">
                <params>
                    <param name="keySize" type="int"/>
                    <param name="random" type="SecureRandom"/>
                </params>
                <comment line="236">
                    Adjust keyType to reflect the mechanism change                    
                </comment>
                <declaration name="newSignificantKeySize" type="int" line="221"/>
                <scope line="222"/>
                <scope line="224"/>
                <scope line="229">
                    <declaration name="newMechanism" type="long" line="230"/>
                    <scope line="232">
                        <scope line="233"/>
                        <scope line="238"/>
                    </scope>
                </scope>
            </method>
            <method name="engineGenerateKey" type="SecretKey" line="250">
                <comment line="260">
                    fixed length, do not specify CKA_VALUE_LEN                    
                </comment>
                <declaration name="session" type="Session" line="251"/>
                <scope line="252">
                    <declaration name="attributes" type="CK_ATTRIBUTE[]" line="254"/>
                    <declaration name="keyID" type="long" line="273"/>
                </scope>
                <scope line="277"/>
                <scope line="279"/>
            </method>
        </class>
    </source>