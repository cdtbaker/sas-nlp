<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.pkcs11">
        <import package="java.io"/>
        <import package="java.util"/>
        <import package="java.security"/>
        <import package="java.security.interfaces"/>
        <import package="javax.crypto.interfaces"/>
        <import package="javax.security.auth.Subject"/>
        <import package="javax.security.auth.login.LoginException"/>
        <import package="javax.security.auth.login.FailedLoginException"/>
        <import package="javax.security.auth.callback.Callback"/>
        <import package="javax.security.auth.callback.CallbackHandler"/>
        <import package="javax.security.auth.callback.ConfirmationCallback"/>
        <import package="javax.security.auth.callback.PasswordCallback"/>
        <import package="javax.security.auth.callback.TextOutputCallback"/>
        <import package="sun.security.util.Debug"/>
        <import package="sun.security.util.ResourcesMgr"/>
        <import package="sun.security.pkcs11.Secmod"/>
        <import package="sun.security.pkcs11.wrapper"/>
        <import package="sun.security.pkcs11.wrapper.PKCS11Constants"/>
        <class name="SunPKCS11" line="20">
            <extends class="AuthProvider"/>
            <javadoc line="20">
                PKCS#11 provider main class.                
                <author>
                    Andreas Sterbenz                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="26"/>
            <declaration name="debug" type="Debug" line="27"/>
            <declaration name="dummyConfigId" type="int" line="28"/>
            <declaration name="p11" type="PKCS11" line="29"/>
            <declaration name="configName" type="String" line="30"/>
            <declaration name="config" type="Config" line="31"/>
            <declaration name="slotID" type="long" line="32"/>
            <declaration name="pHandler" type="CallbackHandler" line="33"/>
            <declaration name="LOCK_HANDLER" type="Object" line="34"/>
            <declaration name="removable" type="boolean" line="35"/>
            <declaration name="nssModule" type="Module" line="36"/>
            <declaration name="nssUseSecmodTrust" type="boolean" line="37"/>
            <declaration name="token" type="Token" line="38"/>
            <declaration name="poller" type="TokenPoller" line="39"/>
            <method name="getToken" type="Token" line="40"/>
            <method name="SunPKCS11" type="constructor" line="43"/>
            <method name="SunPKCS11" type="constructor" line="47">
                <params>
                    <param name="configName" type="String"/>
                </params>
            </method>
            <method name="SunPKCS11" type="constructor" line="50">
                <params>
                    <param name="configStream" type="InputStream"/>
                </params>
            </method>
            <method name="checkNull" type="T" line="53">
                <params>
                    <param name="obj" type="T"/>
                </params>
                <scope line="54"/>
            </method>
            <method name="getDummyConfigName" type="String" line="59">
                <declaration name="id" type="int" line="60"/>
            </method>
            <javadoc line="63">
                @deprecated use new SunPKCS11(String) or new SunPKCS11(InputStream)
                  instead                
            </javadoc>
            <method name="SunPKCS11" type="constructor" line="67">
                <params>
                    <param name="configName" type="String"/>
                    <param name="configStream" type="InputStream"/>
                </params>
                <scope line="71"/>
                <declaration name="library" type="String" line="74"/>
                <declaration name="functionList" type="String" line="75"/>
                <declaration name="slotID" type="long" line="76"/>
                <declaration name="slotListIndex" type="int" line="77"/>
                <declaration name="useSecmod" type="boolean" line="78"/>
                <declaration name="nssUseSecmodTrust" type="boolean" line="79"/>
                <declaration name="nssModule" type="Module" line="80"/>
                <scope line="81">
                    <declaration name="secmod" type="Secmod" line="82"/>
                    <declaration name="nssDbMode" type="DbMode" line="83"/>
                    <scope line="84">
                        <declaration name="nssLibraryDirectory" type="String" line="85"/>
                        <declaration name="nssSecmodDirectory" type="String" line="86"/>
                        <scope line="87">
                            <scope line="88">
                                <declaration name="s" type="String" line="89"/>
                                <scope line="90"/>
                            </scope>
                            <scope line="94">
                                <declaration name="s" type="String" line="95"/>
                                <scope line="96"/>
                            </scope>
                        </scope>
                        <scope line="101">
                            <scope line="102">
                                <scope line="103"/>
                            </scope>
                            <scope line="107">
                                <scope line="108"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="115"/>
                    <declaration name="modules" type="List&amp;lt;Module&amp;gt;" line="118"/>
                    <scope line="119"/>
                    <declaration name="moduleName" type="String" line="122"/>
                    <scope line="123">
                        <scope line="125"/>
                        <scope line="128"/>
                    </scope>
                    <scope line="132"/>
                    <scope line="137"/>
                    <scope line="141"/>
                    <scope line="144"/>
                    <scope line="148">
                        <declaration name="moduleIndex" type="int" line="149"/>
                        <scope line="150"/>
                        <scope line="153"/>
                        <scope line="156"/>
                        <declaration name="k" type="int" line="159"/>
                        <scope line="160">
                            <scope line="161">
                                <scope line="162"/>
                            </scope>
                        </scope>
                        <scope line="168"/>
                    </scope>
                    <scope line="172"/>
                    <scope line="175"/>
                    <scope line="178"/>
                </scope>
                <declaration name="libraryFile" type="File" line="186"/>
                <scope line="187">
                    <scope line="188">
                        <declaration name="msg" type="String" line="189"/>
                        <scope line="190"/>
                        <scope line="193"/>
                    </scope>
                </scope>
                <scope line="198">
                    <scope line="199"/>
                    <declaration name="initArgs" type="CK_C_INITIALIZE_ARGS" line="202"/>
                    <declaration name="nssArgs" type="String" line="203"/>
                    <scope line="204"/>
                    <declaration name="tmpPKCS11" type="PKCS11" line="208"/>
                    <scope line="209"/>
                    <scope line="212">
                        <scope line="213"/>
                        <scope line="216"/>
                        <scope line="219"/>
                        <scope line="222"/>
                    </scope>
                    <declaration name="p11Info" type="CK_INFO" line="228"/>
                    <scope line="229"/>
                    <declaration name="showInfo" type="boolean" line="232"/>
                    <scope line="233"/>
                    <scope line="238">
                        <declaration name="slots" type="long[]" line="239"/>
                        <scope line="240"/>
                        <scope line="245">
                            <scope line="246"/>
                        </scope>
                    </scope>
                    <declaration name="slotInfo" type="CK_SLOT_INFO" line="253"/>
                    <scope line="256"/>
                </scope>
                <scope line="260">
                    <scope line="261"/>
                    <scope line="264"/>
                </scope>
            </method>
            <method name="toString" type="String" line="269">
                <params>
                    <param name="longs" type="long[]"/>
                </params>
                <scope line="270"/>
                <declaration name="sb" type="StringBuilder" line="273"/>
                <scope line="275"/>
            </method>
            <method name="equals" type="boolean" line="281">
                <params>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <method name="hashCode" type="int" line="284"/>
            <method name="s" type="String[]" line="287">
                <params>
                    <param name="s1" type="String"/>
                </params>
            </method>
            <method name="s" type="String[]" line="290">
                <params>
                    <param name="s1" type="String"/>
                    <param name="s2" type="String"/>
                </params>
            </method>
            <class name="Descriptor" line="293">
                <declaration name="type" type="String" line="294"/>
                <declaration name="algorithm" type="String" line="295"/>
                <declaration name="className" type="String" line="296"/>
                <declaration name="aliases" type="String[]" line="297"/>
                <declaration name="mechanisms" type="int[]" line="298"/>
                <method name="Descriptor" type="constructor" line="299">
                    <params>
                        <param name="type" type="String"/>
                        <param name="algorithm" type="String"/>
                        <param name="className" type="String"/>
                        <param name="aliases" type="String[]"/>
                        <param name="mechanisms" type="int[]"/>
                    </params>
                </method>
                <method name="service" type="P11Service" line="306">
                    <params>
                        <param name="token" type="Token"/>
                        <param name="mechanism" type="int"/>
                    </params>
                </method>
                <method name="toString" type="String" line="309"/>
            </class>
            <declaration name="descriptors" type="Map&amp;lt;Integer,List&amp;lt;Descriptor&amp;gt;&amp;gt;" line="313"/>
            <method name="m" type="int[]" line="314">
                <params>
                    <param name="m1" type="long"/>
                </params>
            </method>
            <method name="m" type="int[]" line="317">
                <params>
                    <param name="m1" type="long"/>
                    <param name="m2" type="long"/>
                </params>
            </method>
            <method name="m" type="int[]" line="320">
                <params>
                    <param name="m1" type="long"/>
                    <param name="m2" type="long"/>
                    <param name="m3" type="long"/>
                </params>
            </method>
            <method name="m" type="int[]" line="323">
                <params>
                    <param name="m1" type="long"/>
                    <param name="m2" type="long"/>
                    <param name="m3" type="long"/>
                    <param name="m4" type="long"/>
                </params>
            </method>
            <method name="d" type="void" line="326">
                <params>
                    <param name="type" type="String"/>
                    <param name="algorithm" type="String"/>
                    <param name="className" type="String"/>
                    <param name="m" type="int[]"/>
                </params>
            </method>
            <method name="d" type="void" line="329">
                <params>
                    <param name="type" type="String"/>
                    <param name="algorithm" type="String"/>
                    <param name="className" type="String"/>
                    <param name="aliases" type="String[]"/>
                    <param name="m" type="int[]"/>
                </params>
            </method>
            <method name="register" type="void" line="332">
                <params>
                    <param name="d" type="Descriptor"/>
                </params>
                <scope line="333">
                    <declaration name="m" type="int" line="334"/>
                    <declaration name="key" type="Integer" line="335"/>
                    <declaration name="list" type="List&amp;lt;Descriptor&amp;gt;" line="336"/>
                    <scope line="337"/>
                </scope>
            </method>
            <declaration name="MD" type="String" line="344"/>
            <declaration name="SIG" type="String" line="345"/>
            <declaration name="KPG" type="String" line="346"/>
            <declaration name="KG" type="String" line="347"/>
            <declaration name="AGP" type="String" line="348"/>
            <declaration name="KF" type="String" line="349"/>
            <declaration name="SKF" type="String" line="350"/>
            <declaration name="CIP" type="String" line="351"/>
            <declaration name="MAC" type="String" line="352"/>
            <declaration name="KA" type="String" line="353"/>
            <declaration name="KS" type="String" line="354"/>
            <declaration name="SR" type="String" line="355"/>
            <scope line="356">
                <declaration name="P11Digest" type="String" line="357"/>
                <declaration name="P11MAC" type="String" line="358"/>
                <declaration name="P11KeyPairGenerator" type="String" line="359"/>
                <declaration name="P11KeyGenerator" type="String" line="360"/>
                <declaration name="P11RSAKeyFactory" type="String" line="361"/>
                <declaration name="P11DSAKeyFactory" type="String" line="362"/>
                <declaration name="P11DHKeyFactory" type="String" line="363"/>
                <declaration name="P11KeyAgreement" type="String" line="364"/>
                <declaration name="P11SecretKeyFactory" type="String" line="365"/>
                <declaration name="P11Cipher" type="String" line="366"/>
                <declaration name="P11RSACipher" type="String" line="367"/>
                <declaration name="P11Signature" type="String" line="368"/>
            </scope>
            <class name="TokenPoller" line="435">
                <implements interface="Runnable"/>
                <declaration name="provider" type="SunPKCS11" line="436"/>
                <declaration name="enabled" type="boolean" line="437"/>
                <method name="TokenPoller" type="constructor" line="438">
                    <params>
                        <param name="provider" type="SunPKCS11"/>
                    </params>
                </method>
                <method name="run" type="void" line="442">
                    <declaration name="interval" type="int" line="443"/>
                    <scope line="444">
                        <scope line="445"/>
                        <scope line="448"/>
                        <scope line="451"/>
                        <scope line="454"/>
                        <scope line="457"/>
                    </scope>
                </method>
                <method name="disable" type="void" line="461"/>
            </class>
            <method name="createPoller" type="void" line="465">
                <scope line="466"/>
                <declaration name="poller" type="TokenPoller" line="469"/>
                <declaration name="t" type="Thread" line="470"/>
            </method>
            <method name="destroyPoller" type="void" line="476">
                <scope line="477"/>
            </method>
            <method name="hasValidToken" type="boolean" line="482">
                <declaration name="token" type="Token" line="483"/>
            </method>
            <method name="uninitToken" type="void" line="486">
                <params>
                    <param name="token" type="Token"/>
                </params>
                <scope line="487"/>
                <anonymous_class line="492">
                    <method name="run" type="Object" line="493"/>
                </anonymous_class>
            </method>
            <method name="initToken" type="void" line="501">
                <params>
                    <param name="slotInfo" type="CK_SLOT_INFO"/>
                </params>
                <scope line="502"/>
                <scope line="505"/>
                <declaration name="showInfo" type="boolean" line="510"/>
                <scope line="511"/>
                <declaration name="token" type="Token" line="515"/>
                <scope line="516"/>
                <declaration name="supportedMechanisms" type="long[]" line="520"/>
                <declaration name="supportedAlgs" type="Map&amp;lt;Descriptor,Integer&amp;gt;" line="521"/>
                <scope line="522">
                    <declaration name="longMech" type="long" line="523"/>
                    <declaration name="isEnabled" type="boolean" line="524"/>
                    <scope line="525">
                        <declaration name="mechInfo" type="CK_MECHANISM_INFO" line="526"/>
                        <scope line="528"/>
                    </scope>
                    <scope line="533"/>
                    <scope line="536"/>
                    <declaration name="mech" type="int" line="539"/>
                    <declaration name="integerMech" type="Integer" line="540"/>
                    <declaration name="ds" type="List&amp;lt;Descriptor&amp;gt;" line="541"/>
                    <scope line="542"/>
                    <scope line="545">
                        <declaration name="oldMech" type="Integer" line="546"/>
                        <scope line="547"/>
                        <declaration name="intOldMech" type="int" line="551"/>
                        <scope line="552">
                            <declaration name="nextMech" type="int" line="553"/>
                            <scope line="554"/>
                            <scope line="558"/>
                        </scope>
                    </scope>
                </scope>
                <anonymous_class line="564">
                    <method name="run" type="Object" line="565">
                        <scope line="566">
                            <declaration name="d" type="Descriptor" line="567"/>
                            <declaration name="mechanism" type="int" line="568"/>
                            <declaration name="s" type="Service" line="569"/>
                        </scope>
                        <scope line="572"/>
                        <scope line="575"/>
                    </method>
                </anonymous_class>
            </method>
            <class name="P11Service" line="584">
                <extends class="Service"/>
                <declaration name="token" type="Token" line="585"/>
                <declaration name="mechanism" type="long" line="586"/>
                <method name="P11Service" type="constructor" line="587">
                    <params>
                        <param name="token" type="Token"/>
                        <param name="type" type="String"/>
                        <param name="algorithm" type="String"/>
                        <param name="className" type="String"/>
                        <param name="al" type="String[]"/>
                        <param name="mechanism" type="long"/>
                    </params>
                </method>
                <method name="toList" type="List&lt;String&gt;" line="592">
                    <params>
                        <param name="aliases" type="String[]"/>
                    </params>
                </method>
                <method name="newInstance" type="Object" line="595">
                    <params>
                        <param name="param" type="Object"/>
                    </params>
                    <scope line="596"/>
                    <scope line="599"/>
                    <scope line="602"/>
                </method>
                <method name="newInstance0" type="Object" line="606">
                    <params>
                        <param name="param" type="Object"/>
                    </params>
                    <declaration name="algorithm" type="String" line="607"/>
                    <declaration name="type" type="String" line="608"/>
                    <scope line="609"/>
                    <scope line="612">
                        <scope line="613"/>
                        <scope line="616"/>
                    </scope>
                    <scope line="620"/>
                    <scope line="623"/>
                    <scope line="626"/>
                    <scope line="629">
                        <scope line="630"/>
                        <scope line="633"/>
                    </scope>
                    <scope line="637"/>
                    <scope line="640"/>
                    <scope line="643">
                        <scope line="644"/>
                        <scope line="647"/>
                        <scope line="650"/>
                        <scope line="653"/>
                        <scope line="656"/>
                    </scope>
                    <scope line="660"/>
                    <scope line="663"/>
                    <scope line="666"/>
                    <scope line="669"/>
                </method>
                <method name="supportsParameter" type="boolean" line="673">
                    <params>
                        <param name="param" type="Object"/>
                    </params>
                    <scope line="674"/>
                    <scope line="677"/>
                    <declaration name="algorithm" type="String" line="680"/>
                    <declaration name="type" type="String" line="681"/>
                    <declaration name="key" type="Key" line="682"/>
                    <declaration name="keyAlgorithm" type="String" line="683"/>
                    <scope line="684">
                        <scope line="685"/>
                    </scope>
                    <scope line="690">
                        <scope line="691"/>
                    </scope>
                    <scope line="696">
                        <scope line="697"/>
                    </scope>
                    <scope line="702"/>
                    <scope line="705">
                        <scope line="706"/>
                    </scope>
                </method>
                <method name="isLocalKey" type="boolean" line="713">
                    <params>
                        <param name="key" type="Key"/>
                    </params>
                </method>
                <method name="toString" type="String" line="716"/>
            </class>
            <javadoc line="720">
                Log in to this provider.
                  &lt;p&gt; If the token expects a PIN to be supplied by the caller,
                  the &lt;code&gt;handler&lt;/code&gt; implementation must support
                  a &lt;code&gt;PasswordCallback&lt;/code&gt;.
                  &lt;p&gt; To determine if the token supports a protected authentication path,
                  the CK_TOKEN_INFO flag, CKF_PROTECTED_AUTHENTICATION_PATH, is consulted.                
                <param>
                    subject this parameter is ignored                    
                </param>
                <param>
                    handler the &lt;code&gt;CallbackHandler&lt;/code&gt; used by
                      this provider to communicate with the caller                    
                </param>
                <exception>
                    LoginException if the login operation fails                    
                </exception>
                <exception>
                    SecurityException if the does not pass a security check for
                      &lt;code&gt;SecurityPermission(&quot;authProvider.&lt;i&gt;name&lt;/i&gt;&quot;)&lt;/code&gt;,
                      where &lt;i&gt;name&lt;/i&gt; is the value returned by
                      this provider&apos;s &lt;code&gt;getName&lt;/code&gt; method                    
                </exception>
            </javadoc>
            <method name="login" type="void" line="736">
                <params>
                    <param name="subject" type="Subject"/>
                    <param name="handler" type="CallbackHandler"/>
                </params>
                <declaration name="sm" type="SecurityManager" line="737"/>
                <scope line="738">
                    <scope line="739"/>
                </scope>
                <scope line="744"/>
                <scope line="747">
                    <scope line="748"/>
                </scope>
                <scope line="753">
                    <scope line="754">
                        <scope line="755"/>
                    </scope>
                </scope>
                <scope line="761"/>
                <declaration name="pin" type="char[]" line="763"/>
                <scope line="764">
                    <declaration name="myHandler" type="CallbackHandler" line="765"/>
                    <scope line="766"/>
                    <declaration name="form" type="java.text.MessageFormat" line="769"/>
                    <declaration name="source" type="Object[]" line="770"/>
                    <declaration name="pcall" type="PasswordCallback" line="771"/>
                    <declaration name="callbacks" type="Callback[]" line="772"/>
                    <scope line="773"/>
                    <scope line="776">
                        <declaration name="le" type="LoginException" line="777"/>
                    </scope>
                    <scope line="783">
                        <scope line="784"/>
                    </scope>
                </scope>
                <declaration name="session" type="Session" line="789"/>
                <scope line="790">
                    <scope line="793"/>
                </scope>
                <scope line="797">
                    <scope line="798">
                        <scope line="799"/>
                    </scope>
                    <scope line="804">
                        <declaration name="fle" type="FailedLoginException" line="805"/>
                    </scope>
                    <scope line="809">
                        <declaration name="le" type="LoginException" line="810"/>
                    </scope>
                </scope>
                <scope line="815">
                    <scope line="817"/>
                </scope>
            </method>
            <javadoc line="822">
                Log out from this provider                
                <exception>
                    LoginException if the logout operation fails                    
                </exception>
                <exception>
                    SecurityException if the does not pass a security check for
                      &lt;code&gt;SecurityPermission(&quot;authProvider.&lt;i&gt;name&lt;/i&gt;&quot;)&lt;/code&gt;,
                      where &lt;i&gt;name&lt;/i&gt; is the value returned by
                      this provider&apos;s &lt;code&gt;getName&lt;/code&gt; method                    
                </exception>
            </javadoc>
            <method name="logout" type="void" line="830">
                <declaration name="sm" type="SecurityManager" line="831"/>
                <scope line="832"/>
                <scope line="835"/>
                <scope line="838">
                    <scope line="839"/>
                </scope>
                <scope line="844">
                    <scope line="845">
                        <scope line="846"/>
                    </scope>
                </scope>
                <scope line="852"/>
                <declaration name="session" type="Session" line="854"/>
                <scope line="855">
                    <scope line="858"/>
                </scope>
                <scope line="862">
                    <scope line="863">
                        <scope line="864"/>
                    </scope>
                    <declaration name="le" type="LoginException" line="869"/>
                </scope>
                <scope line="873"/>
            </method>
            <javadoc line="877">
                Set a &lt;code&gt;CallbackHandler&lt;/code&gt;
                  &lt;p&gt; The provider uses this handler if one is not passed to the
                  &lt;code&gt;login&lt;/code&gt; method.  The provider also uses this handler
                  if it invokes &lt;code&gt;login&lt;/code&gt; on behalf of callers.
                  In either case if a handler is not set via this method,
                  the provider queries the
                  &lt;i&gt;auth.login.defaultCallbackHandler&lt;/i&gt; security property
                  for the fully qualified class name of a default handler implementation.
                  If the security property is not set,
                  the provider is assumed to have alternative means
                  for obtaining authentication information.                
                <param>
                    handler a &lt;code&gt;CallbackHandler&lt;/code&gt; for obtaining
                      authentication information, which may be &lt;code&gt;null&lt;/code&gt;                    
                </param>
                <exception>
                    SecurityException if the caller does not pass a
                      security check for
                      &lt;code&gt;SecurityPermission(&quot;authProvider.&lt;i&gt;name&lt;/i&gt;&quot;)&lt;/code&gt;,
                      where &lt;i&gt;name&lt;/i&gt; is the value returned by
                      this provider&apos;s &lt;code&gt;getName&lt;/code&gt; method                    
                </exception>
            </javadoc>
            <method name="setCallbackHandler" type="void" line="897">
                <params>
                    <param name="handler" type="CallbackHandler"/>
                </params>
                <declaration name="sm" type="SecurityManager" line="898"/>
                <scope line="899"/>
                <scope line="902"/>
            </method>
            <method name="getCallbackHandler" type="CallbackHandler" line="906">
                <params>
                    <param name="handler" type="CallbackHandler"/>
                </params>
                <scope line="907"/>
                <scope line="910"/>
                <scope line="913">
                    <scope line="914"/>
                    <scope line="917">
                        <scope line="918"/>
                        <anonymous_class line="921">
                            <method name="run" type="CallbackHandler" line="922">
                                <declaration name="defaultHandler" type="String" line="923"/>
                                <scope line="924">
                                    <scope line="925"/>
                                </scope>
                                <declaration name="c" type="Class" line="930"/>
                            </method>
                        </anonymous_class>
                        <declaration name="myHandler" type="CallbackHandler" line="921"/>
                    </scope>
                    <scope line="938">
                        <scope line="939"/>
                    </scope>
                </scope>
            </method>
            <method name="writeReplace" type="Object" line="947"/>
            <class name="SunPKCS11Rep" line="950">
                <implements interface="Serializable"/>
                <javadoc line="950">
                    Serialized representation of the SunPKCS11 provider.                    
                </javadoc>
                <declaration name="serialVersionUID" type="long" line="954"/>
                <declaration name="providerName" type="String" line="955"/>
                <declaration name="configName" type="String" line="956"/>
                <method name="SunPKCS11Rep" type="constructor" line="957">
                    <params>
                        <param name="provider" type="SunPKCS11"/>
                    </params>
                    <scope line="960"/>
                </method>
                <method name="readResolve" type="Object" line="964">
                    <declaration name="p" type="SunPKCS11" line="965"/>
                    <scope line="966"/>
                </method>
            </class>
        </class>
    </source>