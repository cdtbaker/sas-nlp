<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.pkcs11.wrapper">
        <interface name="PKCS11Constants">
            <comment line="106">
                                
            </comment>
            <comment line="108">
                Cryptoki defines CK_UNAVAILABLE_INFORMATION as (~0UL)
                 This means it is 0xffffffff in ILP32/LLP64 but 0xffffffffffffffff in LP64.
                 To avoid these differences on the Java side, the native code treats
                 CK_UNAVAILABLE_INFORMATION specially and always returns (long)-1 for it.
                 See ckULongSpecialToJLong() in pkcs11wrapper.h                
            </comment>
            <comment line="116">
                                
            </comment>
            <comment line="117">
                                
            </comment>
            <comment line="120">
                CK_NOTIFICATION enumerates the types of notifications that                
            </comment>
            <comment line="122">
                CK_NOTIFICATION has been changed from an enum to a CK_ULONG                
            </comment>
            <comment line="126">
                flags: bit flags that provide capabilities of the slot
                      Bit Flag              Mask        Meaning                
            </comment>
            <comment line="133">
                The flags parameter is defined as follows:
                      Bit Flag                    Mask        Meaning                
            </comment>
            <comment line="136">
                                
            </comment>
            <comment line="139">
                                
            </comment>
            <comment line="142">
                                
            </comment>
            <comment line="145">
                                
            </comment>
            <comment line="148">
                CKF_RESTORE_KEY_NOT_NEEDED is new for v2.0.  If it is set,
                 that means that every time the state of cryptographic
                 operations of a session is successfully saved, all keys                
            </comment>
            <comment line="154">
                CKF_CLOCK_ON_TOKEN is new for v2.0.  If it is set, that means
                 that the token has some sort of clock.  The time on that                
            </comment>
            <comment line="159">
                CKF_PROTECTED_AUTHENTICATION_PATH is new for v2.0.  If it is
                 set, that means that there is some way for the user to login                
            </comment>
            <comment line="164">
                CKF_DUAL_CRYPTO_OPERATIONS is new for v2.0.  If it is true,
                 that means that a single session with the token can perform
                 dual simultaneous cryptographic operations (digest and
                 encrypt; decrypt and digest; sign and encrypt; and decrypt                
            </comment>
            <comment line="171">
                CKF_TOKEN_INITIALIZED if new for v2.10. If it is true, the
                 token has been initialized using C_InitializeToken or an
                 equivalent mechanism outside the scope of PKCS #11.
                 Calling C_InitializeToken when this flag is set will cause                
            </comment>
            <comment line="178">
                CKF_SECONDARY_AUTHENTICATION if new for v2.10. If it is
                 true, the token supports secondary authentication for                
            </comment>
            <comment line="183">
                CKF_USER_PIN_COUNT_LOW if new for v2.10. If it is true, an
                 incorrect user login PIN has been entered at least once                
            </comment>
            <comment line="188">
                CKF_USER_PIN_FINAL_TRY if new for v2.10. If it is true,                
            </comment>
            <comment line="192">
                CKF_USER_PIN_LOCKED if new for v2.10. If it is true, the
                 user PIN has been locked. User login to the token is not                
            </comment>
            <comment line="197">
                CKF_USER_PIN_TO_BE_CHANGED if new for v2.10. If it is true,
                 the user PIN value is the default value set by token                
            </comment>
            <comment line="202">
                CKF_SO_PIN_COUNT_LOW if new for v2.10. If it is true, an
                 incorrect SO login PIN has been entered at least once since                
            </comment>
            <comment line="207">
                CKF_SO_PIN_FINAL_TRY if new for v2.10. If it is true,                
            </comment>
            <comment line="211">
                CKF_SO_PIN_LOCKED if new for v2.10. If it is true, the SO
                 PIN has been locked. SO login to the token is not possible.                
            </comment>
            <comment line="216">
                CKF_SO_PIN_TO_BE_CHANGED if new for v2.10. If it is true,
                 the SO PIN value is the default value set by token                
            </comment>
            <comment line="222">
                                
            </comment>
            <comment line="223">
                CK_USER_TYPE has been changed from an enum to a CK_ULONG for                
            </comment>
            <comment line="225">
                                
            </comment>
            <comment line="227">
                                
            </comment>
            <comment line="230">
                                
            </comment>
            <comment line="231">
                CK_STATE has been changed from an enum to a CK_ULONG for                
            </comment>
            <comment line="240">
                The flags are defined in the following table:
                      Bit Flag                Mask        Meaning                
            </comment>
            <comment line="243">
                                
            </comment>
            <comment line="245">
                                
            </comment>
            <comment line="249">
                                
            </comment>
            <comment line="250">
                                
            </comment>
            <comment line="251">
                                
            </comment>
            <comment line="261">
                pseudo object class ANY (for template manager)                
            </comment>
            <comment line="265">
                                
            </comment>
            <comment line="270">
                                
            </comment>
            <comment line="275">
                                
            </comment>
            <comment line="276">
                                
            </comment>
            <comment line="289">
                                
            </comment>
            <comment line="292">
                                
            </comment>
            <comment line="294">
                                
            </comment>
            <comment line="303">
                v2.20                
            </comment>
            <comment line="308">
                new for v2.20 amendment 3
                public static final long  CKK_CAMELLIA          = 0x00000025L;
                public static final long  CKK_ARIA              = 0x00000026L;                
            </comment>
            <comment line="312">
                pseudo key type ANY (for template manager)                
            </comment>
            <comment line="321">
                                
            </comment>
            <comment line="322">
                                
            </comment>
            <comment line="328">
                                
            </comment>
            <comment line="336">
                                
            </comment>
            <comment line="343">
                CKA_AC_ISSUER, CKA_OWNER, and CKA_ATTR_TYPES are new L;                
            </comment>
            <comment line="349">
                                
            </comment>
            <comment line="380">
                                
            </comment>
            <comment line="387">
                CKA_EXTRACTABLE, CKA_LOCAL, CKA_NEVER_EXTRACTABLE,
                 CKA_ALWAYS_SENSITIVE, CKA_MODIFIABLE, CKA_ECDSA_PARAMS,                
            </comment>
            <comment line="395">
                                
            </comment>
            <comment line="400">
                CKA_ECDSA_PARAMS is deprecated in v2.11,                
            </comment>
            <comment line="406">
                CKA_SECONDARY_AUTH, CKA_AUTH_PIN_FLAGS,
                 CKA_HW_FEATURE_TYPE, CKA_RESET_ON_INIT, and CKA_HAS_RESET                
            </comment>
            <comment line="417">
                                
            </comment>
            <comment line="423">
                CKM_MD2_RSA_PKCS, CKM_MD5_RSA_PKCS, and CKM_SHA1_RSA_PKCS                
            </comment>
            <comment line="429">
                CKM_RIPEMD128_RSA_PKCS, CKM_RIPEMD160_RSA_PKCS, and                
            </comment>
            <comment line="435">
                CKM_RSA_X9_31_KEY_PAIR_GEN, CKM_RSA_X9_31, CKM_SHA1_RSA_X9_31,                
            </comment>
            <comment line="449">
                CKM_X9_42_DH_KEY_PAIR_GEN, CKM_X9_42_DH_DERIVE,
                 CKM_X9_42_DH_HYBRID_DERIVE, and CKM_X9_42_MQV_DERIVE are new for                
            </comment>
            <comment line="457">
                v2.20                
            </comment>
            <comment line="467">
                                
            </comment>
            <comment line="478">
                                
            </comment>
            <comment line="488">
                CKM_DES3_MAC_GENERAL, CKM_DES3_CBC_PAD, CKM_CDMF_KEY_GEN,
                 CKM_CDMF_ECB, CKM_CDMF_CBC, CKM_CDMF_MAC,                
            </comment>
            <comment line="502">
                                
            </comment>
            <comment line="508">
                                
            </comment>
            <comment line="514">
                                
            </comment>
            <comment line="518">
                CKM_RIPEMD128, CKM_RIPEMD128_HMAC,
                 CKM_RIPEMD128_HMAC_GENERAL, CKM_RIPEMD160, CKM_RIPEMD160_HMAC,                
            </comment>
            <comment line="528">
                v2.20                
            </comment>
            <comment line="541">
                                
            </comment>
            <comment line="542">
                                
            </comment>
            <comment line="589">
                CKM_SSL3_MASTER_KEY_DERIVE_DH, CKM_TLS_PRE_MASTER_KEY_GEN,
                 CKM_TLS_MASTER_KEY_DERIVE, CKM_TLS_KEY_AND_MAC_DERIVE, and                
            </comment>
            <comment line="605">
                v2.20                
            </comment>
            <comment line="625">
                                
            </comment>
            <comment line="632">
                                
            </comment>
            <comment line="655">
                CKM_ECDSA_KEY_PAIR_GEN is deprecated in v2.11,                
            </comment>
            <comment line="663">
                CKM_ECDH1_DERIVE, CKM_ECDH1_COFACTOR_DERIVE, and CKM_ECMQV_DERIVE                
            </comment>
            <comment line="677">
                CKM_AES_KEY_GEN, CKM_AES_ECB, CKM_AES_CBC, CKM_AES_MAC,
                 CKM_AES_MAC_GENERAL, CKM_AES_CBC_PAD, CKM_DSA_PARAMETER_GEN,
                 CKM_DH_PKCS_PARAMETER_GEN, and CKM_X9_42_DH_PARAMETER_GEN are                
            </comment>
            <comment line="687">
                v2.20                
            </comment>
            <comment line="696">
                new for v2.20 amendment 3                
            </comment>
            <comment line="704">
                public static final long  CKM_CAMELLIA_KEY_GEN           = 0x00000550L;
                public static final long  CKM_CAMELLIA_ECB               = 0x00000551L;
                public static final long  CKM_CAMELLIA_CBC               = 0x00000552L;
                public static final long  CKM_CAMELLIA_MAC               = 0x00000553L;
                public static final long  CKM_CAMELLIA_MAC_GENERAL       = 0x00000554L;
                public static final long  CKM_CAMELLIA_CBC_PAD           = 0x00000555L;
                public static final long  CKM_CAMELLIA_ECB_ENCRYPT_DATA  = 0x00000556L;
                public static final long  CKM_CAMELLIA_CBC_ENCRYPT_DATA  = 0x00000557L;
                public static final long  CKM_CAMELLIA_CTR               = 0x00000558L;
                public static final long  CKM_ARIA_KEY_GEN               = 0x00000560L;
                public static final long  CKM_ARIA_ECB                   = 0x00000561L;
                public static final long  CKM_ARIA_CBC                   = 0x00000562L;
                public static final long  CKM_ARIA_MAC                   = 0x00000563L;
                public static final long  CKM_ARIA_MAC_GENERAL           = 0x00000564L;
                public static final long  CKM_ARIA_CBC_PAD               = 0x00000565L;
                public static final long  CKM_ARIA_ECB_ENCRYPT_DATA      = 0x00000566L;
                public static final long  CKM_ARIA_CBC_ENCRYPT_DATA      = 0x00000567L;                
            </comment>
            <comment line="724">
                NSS private                
            </comment>
            <comment line="727">
                ids for our pseudo mechanisms SecureRandom and KeyStore                
            </comment>
            <comment line="731">
                The flags are defined as follows:                
            </comment>
            <comment line="733">
                                
            </comment>
            <comment line="736">
                The flags CKF_ENCRYPT, CKF_DECRYPT, CKF_DIGEST, CKF_SIGN,
                 CKG_SIGN_RECOVER, CKF_VERIFY, CKF_VERIFY_RECOVER,
                 CKF_GENERATE, CKF_GENERATE_KEY_PAIR, CKF_WRAP, CKF_UNWRAP,
                 and CKF_DERIVE are new for v2.0.  They specify whether or not                
            </comment>
            <comment line="754">
                CKF_EC_F_P, CKF_EC_F_2M, CKF_EC_ECPARAMETERS, CKF_EC_NAMEDCURVE,
                 CKF_EC_UNCOMPRESS, and CKF_EC_COMPRESS are new for v2.11. They
                 describe a token&apos;s EC capabilities not available in mechanism                
            </comment>
            <comment line="765">
                                
            </comment>
            <comment line="769">
                CK_RV is a value that identifies the return value of a                
            </comment>
            <comment line="771">
                                
            </comment>
            <comment line="777">
                                
            </comment>
            <comment line="779">
                                
            </comment>
            <comment line="783">
                CKR_ARGUMENTS_BAD, CKR_NO_EVENT, CKR_NEED_TO_CREATE_THREADS,                
            </comment>
            <comment line="804">
                                
            </comment>
            <comment line="809">
                                
            </comment>
            <comment line="814">
                CKR_KEY_NOT_NEEDED, CKR_KEY_CHANGED, CKR_KEY_NEEDED,
                 CKR_KEY_INDIGESTIBLE, CKR_KEY_FUNCTION_NOT_PERMITTED,
                 CKR_KEY_NOT_WRAPPABLE, and CKR_KEY_UNEXTRACTABLE are new for                
            </comment>
            <comment line="829">
                CKR_OBJECT_CLASS_INCONSISTENT and CKR_OBJECT_CLASS_INVALID                
            </comment>
            <comment line="838">
                                
            </comment>
            <comment line="849">
                CKR_SESSION_READ_ONLY_EXISTS and                
            </comment>
            <comment line="869">
                CKR_USER_ANOTHER_ALREADY_LOGGED_IN and CKR_USER_TOO_MANY_TYPES                
            </comment>
            <comment line="881">
                                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="887">
                                
            </comment>
            <comment line="893">
                                
            </comment>
            <comment line="902">
                flags: bit flags that provide capabilities of the slot
                        Bit Flag = Mask                
            </comment>
            <comment line="909">
                                
            </comment>
            <comment line="913">
                                
            </comment>
            <comment line="915">
                new for v2.20 amendment 3                
            </comment>
            <comment line="918">
                                
            </comment>
            <comment line="922">
                                
            </comment>
            <comment line="926">
                                
            </comment>
            <comment line="929">
                                
            </comment>
            <comment line="933">
                                
            </comment>
            <comment line="938">
                private NSS attribute (for DSA and DH private keys)                
            </comment>
            <comment line="941">
                base number of NSS private attributes                
            </comment>
            <comment line="944">
                object type for NSS trust                
            </comment>
            <comment line="947">
                base number for NSS trust attributes                
            </comment>
            <comment line="950">
                attributes for NSS trust                
            </comment>
            <comment line="958">
                trust values for each of the NSS trust attributes                
            </comment>
            <comment line="963">
                                
            </comment>
            <javadoc line="50">
                This interface holds constants of the PKCS#11 v2.11 standard.
                  This is mainly the content of the &apos;pkcs11t.h&apos; header file.
                  Mapping of primitiv data types to Java types:
                  &lt;pre&gt;
                  TRUE .......................................... true
                  FALSE ......................................... false
                  CK_BYTE ....................................... byte
                  CK_CHAR ....................................... char
                  CK_UTF8CHAR ................................... char
                  CK_BBOOL ...................................... boolean
                  CK_ULONG ...................................... long
                  CK_LONG ....................................... long
                  CK_FLAGS ...................................... long
                  CK_NOTIFICATION ............................... long
                  CK_SLOT_ID .................................... long
                  CK_SESSION_HANDLE ............................. long
                  CK_USER_TYPE .................................. long
                  CK_SESSION_HANDLE ............................. long
                  CK_STATE ...................................... long
                  CK_OBJECT_HANDLE .............................. long
                  CK_OBJECT_CLASS ............................... long
                  CK_HW_FEATURE_TYPE ............................ long
                  CK_KEY_TYPE ................................... long
                  CK_CERTIFICATE_TYPE ........................... long
                  CK_ATTRIBUTE_TYPE ............................. long
                  CK_VOID_PTR ................................... Object[]
                  CK_BYTE_PTR ................................... byte[]
                  CK_CHAR_PTR ................................... char[]
                  CK_UTF8CHAR_PTR ............................... char[]
                  CK_MECHANISM_TYPE ............................. long
                  CK_RV ......................................... long
                  CK_RSA_PKCS_OAEP_MGF_TYPE ..................... long
                  CK_RSA_PKCS_OAEP_SOURCE_TYPE .................. long
                  CK_RC2_PARAMS ................................. long
                  CK_MAC_GENERAL_PARAMS ......................... long
                  CK_EXTRACT_PARAMS ............................. long
                  CK_PKCS5_PBKD2_PSEUDO_RANDOM_FUNCTION_TYPE .... long
                  CK_PKCS5_PBKDF2_SALT_SOURCE_TYPE .............. long
                  CK_EC_KDF_TYPE ................................ long
                  CK_X9_42_DH_KDF_TYPE .......................... long
                  &lt;/pre&gt;                
                <author>
                    <a href="mailto:Karl.Scheibelhofer@iaik.at"> Karl Scheibelhofer </a>                    
                </author>
                <invariants>
                                        
                </invariants>
            </javadoc>
            <declaration name="TRUE" type="boolean" line="99"/>
            <declaration name="FALSE" type="boolean" line="101"/>
            <declaration name="NULL_PTR" type="Object" line="103"/>
            <declaration name="CK_UNAVAILABLE_INFORMATION" type="long" line="112"/>
            <declaration name="CK_EFFECTIVELY_INFINITE" type="long" line="113"/>
            <declaration name="CK_INVALID_HANDLE" type="long" line="117"/>
            <declaration name="CKN_SURRENDER" type="long" line="123"/>
            <declaration name="CKF_TOKEN_PRESENT" type="long" line="128"/>
            <declaration name="CKF_REMOVABLE_DEVICE" type="long" line="129"/>
            <declaration name="CKF_HW_SLOT" type="long" line="130"/>
            <declaration name="CKF_RNG" type="long" line="136"/>
            <declaration name="CKF_WRITE_PROTECTED" type="long" line="139"/>
            <declaration name="CKF_LOGIN_REQUIRED" type="long" line="142"/>
            <declaration name="CKF_USER_PIN_INITIALIZED" type="long" line="145"/>
            <declaration name="CKF_RESTORE_KEY_NOT_NEEDED" type="long" line="151"/>
            <declaration name="CKF_CLOCK_ON_TOKEN" type="long" line="156"/>
            <declaration name="CKF_PROTECTED_AUTHENTICATION_PATH" type="long" line="161"/>
            <declaration name="CKF_DUAL_CRYPTO_OPERATIONS" type="long" line="168"/>
            <declaration name="CKF_TOKEN_INITIALIZED" type="long" line="175"/>
            <declaration name="CKF_SECONDARY_AUTHENTICATION" type="long" line="180"/>
            <declaration name="CKF_USER_PIN_COUNT_LOW" type="long" line="185"/>
            <declaration name="CKF_USER_PIN_FINAL_TRY" type="long" line="189"/>
            <declaration name="CKF_USER_PIN_LOCKED" type="long" line="194"/>
            <declaration name="CKF_USER_PIN_TO_BE_CHANGED" type="long" line="199"/>
            <declaration name="CKF_SO_PIN_COUNT_LOW" type="long" line="204"/>
            <declaration name="CKF_SO_PIN_FINAL_TRY" type="long" line="208"/>
            <declaration name="CKF_SO_PIN_LOCKED" type="long" line="213"/>
            <declaration name="CKF_SO_PIN_TO_BE_CHANGED" type="long" line="218"/>
            <declaration name="CKU_SO" type="long" line="225"/>
            <declaration name="CKU_USER" type="long" line="227"/>
            <declaration name="CKS_RO_PUBLIC_SESSION" type="long" line="232"/>
            <declaration name="CKS_RO_USER_FUNCTIONS" type="long" line="233"/>
            <declaration name="CKS_RW_PUBLIC_SESSION" type="long" line="234"/>
            <declaration name="CKS_RW_USER_FUNCTIONS" type="long" line="235"/>
            <declaration name="CKS_RW_SO_FUNCTIONS" type="long" line="236"/>
            <declaration name="CKF_RW_SESSION" type="long" line="243"/>
            <declaration name="CKF_SERIAL_SESSION" type="long" line="245"/>
            <declaration name="CKO_DATA" type="long" line="251"/>
            <declaration name="CKO_CERTIFICATE" type="long" line="252"/>
            <declaration name="CKO_PUBLIC_KEY" type="long" line="253"/>
            <declaration name="CKO_PRIVATE_KEY" type="long" line="254"/>
            <declaration name="CKO_SECRET_KEY" type="long" line="255"/>
            <declaration name="CKO_HW_FEATURE" type="long" line="256"/>
            <declaration name="CKO_DOMAIN_PARAMETERS" type="long" line="257"/>
            <declaration name="CKO_VENDOR_DEFINED" type="long" line="258"/>
            <declaration name="PCKO_ANY" type="long" line="261"/>
            <declaration name="CKH_MONOTONIC_COUNTER" type="long" line="265"/>
            <declaration name="CKH_CLOCK" type="long" line="266"/>
            <declaration name="CKH_VENDOR_DEFINED" type="long" line="267"/>
            <declaration name="CKK_RSA" type="long" line="270"/>
            <declaration name="CKK_DSA" type="long" line="271"/>
            <declaration name="CKK_DH" type="long" line="272"/>
            <declaration name="CKK_ECDSA" type="long" line="276"/>
            <declaration name="CKK_EC" type="long" line="277"/>
            <declaration name="CKK_X9_42_DH" type="long" line="278"/>
            <declaration name="CKK_KEA" type="long" line="279"/>
            <declaration name="CKK_GENERIC_SECRET" type="long" line="281"/>
            <declaration name="CKK_RC2" type="long" line="282"/>
            <declaration name="CKK_RC4" type="long" line="283"/>
            <declaration name="CKK_DES" type="long" line="284"/>
            <declaration name="CKK_DES2" type="long" line="285"/>
            <declaration name="CKK_DES3" type="long" line="286"/>
            <declaration name="CKK_CAST" type="long" line="289"/>
            <declaration name="CKK_CAST3" type="long" line="290"/>
            <declaration name="CKK_CAST5" type="long" line="292"/>
            <declaration name="CKK_CAST128" type="long" line="294"/>
            <declaration name="CKK_RC5" type="long" line="295"/>
            <declaration name="CKK_IDEA" type="long" line="296"/>
            <declaration name="CKK_SKIPJACK" type="long" line="297"/>
            <declaration name="CKK_BATON" type="long" line="298"/>
            <declaration name="CKK_JUNIPER" type="long" line="299"/>
            <declaration name="CKK_CDMF" type="long" line="300"/>
            <declaration name="CKK_AES" type="long" line="301"/>
            <declaration name="CKK_BLOWFISH" type="long" line="303"/>
            <declaration name="CKK_VENDOR_DEFINED" type="long" line="305"/>
            <declaration name="PCKK_ANY" type="long" line="312"/>
            <declaration name="PCKK_HMAC" type="long" line="314"/>
            <declaration name="PCKK_SSLMAC" type="long" line="315"/>
            <declaration name="PCKK_TLSPREMASTER" type="long" line="316"/>
            <declaration name="PCKK_TLSRSAPREMASTER" type="long" line="317"/>
            <declaration name="PCKK_TLSMASTER" type="long" line="318"/>
            <declaration name="CKC_X_509" type="long" line="322"/>
            <declaration name="CKC_X_509_ATTR_CERT" type="long" line="323"/>
            <declaration name="CKC_VENDOR_DEFINED" type="long" line="324"/>
            <declaration name="CKA_CLASS" type="long" line="328"/>
            <declaration name="CKA_TOKEN" type="long" line="329"/>
            <declaration name="CKA_PRIVATE" type="long" line="330"/>
            <declaration name="CKA_LABEL" type="long" line="331"/>
            <declaration name="CKA_APPLICATION" type="long" line="332"/>
            <declaration name="CKA_VALUE" type="long" line="333"/>
            <declaration name="CKA_OBJECT_ID" type="long" line="336"/>
            <declaration name="CKA_CERTIFICATE_TYPE" type="long" line="338"/>
            <declaration name="CKA_ISSUER" type="long" line="339"/>
            <declaration name="CKA_SERIAL_NUMBER" type="long" line="340"/>
            <declaration name="CKA_AC_ISSUER" type="long" line="344"/>
            <declaration name="CKA_OWNER" type="long" line="345"/>
            <declaration name="CKA_ATTR_TYPES" type="long" line="346"/>
            <declaration name="CKA_TRUSTED" type="long" line="349"/>
            <declaration name="CKA_KEY_TYPE" type="long" line="351"/>
            <declaration name="CKA_SUBJECT" type="long" line="352"/>
            <declaration name="CKA_ID" type="long" line="353"/>
            <declaration name="CKA_SENSITIVE" type="long" line="354"/>
            <declaration name="CKA_ENCRYPT" type="long" line="355"/>
            <declaration name="CKA_DECRYPT" type="long" line="356"/>
            <declaration name="CKA_WRAP" type="long" line="357"/>
            <declaration name="CKA_UNWRAP" type="long" line="358"/>
            <declaration name="CKA_SIGN" type="long" line="359"/>
            <declaration name="CKA_SIGN_RECOVER" type="long" line="360"/>
            <declaration name="CKA_VERIFY" type="long" line="361"/>
            <declaration name="CKA_VERIFY_RECOVER" type="long" line="362"/>
            <declaration name="CKA_DERIVE" type="long" line="363"/>
            <declaration name="CKA_START_DATE" type="long" line="364"/>
            <declaration name="CKA_END_DATE" type="long" line="365"/>
            <declaration name="CKA_MODULUS" type="long" line="366"/>
            <declaration name="CKA_MODULUS_BITS" type="long" line="367"/>
            <declaration name="CKA_PUBLIC_EXPONENT" type="long" line="368"/>
            <declaration name="CKA_PRIVATE_EXPONENT" type="long" line="369"/>
            <declaration name="CKA_PRIME_1" type="long" line="370"/>
            <declaration name="CKA_PRIME_2" type="long" line="371"/>
            <declaration name="CKA_EXPONENT_1" type="long" line="372"/>
            <declaration name="CKA_EXPONENT_2" type="long" line="373"/>
            <declaration name="CKA_COEFFICIENT" type="long" line="374"/>
            <declaration name="CKA_PRIME" type="long" line="375"/>
            <declaration name="CKA_SUBPRIME" type="long" line="376"/>
            <declaration name="CKA_BASE" type="long" line="377"/>
            <declaration name="CKA_PRIME_BITS" type="long" line="380"/>
            <declaration name="CKA_SUB_PRIME_BITS" type="long" line="381"/>
            <declaration name="CKA_VALUE_BITS" type="long" line="383"/>
            <declaration name="CKA_VALUE_LEN" type="long" line="384"/>
            <declaration name="CKA_EXTRACTABLE" type="long" line="389"/>
            <declaration name="CKA_LOCAL" type="long" line="390"/>
            <declaration name="CKA_NEVER_EXTRACTABLE" type="long" line="391"/>
            <declaration name="CKA_ALWAYS_SENSITIVE" type="long" line="392"/>
            <declaration name="CKA_KEY_GEN_MECHANISM" type="long" line="395"/>
            <declaration name="CKA_MODIFIABLE" type="long" line="397"/>
            <declaration name="CKA_ECDSA_PARAMS" type="long" line="401"/>
            <declaration name="CKA_EC_PARAMS" type="long" line="402"/>
            <declaration name="CKA_EC_POINT" type="long" line="403"/>
            <declaration name="CKA_SECONDARY_AUTH" type="long" line="408"/>
            <declaration name="CKA_AUTH_PIN_FLAGS" type="long" line="409"/>
            <declaration name="CKA_HW_FEATURE_TYPE" type="long" line="410"/>
            <declaration name="CKA_RESET_ON_INIT" type="long" line="411"/>
            <declaration name="CKA_HAS_RESET" type="long" line="412"/>
            <declaration name="CKA_VENDOR_DEFINED" type="long" line="414"/>
            <declaration name="CKM_RSA_PKCS_KEY_PAIR_GEN" type="long" line="417"/>
            <declaration name="CKM_RSA_PKCS" type="long" line="418"/>
            <declaration name="CKM_RSA_9796" type="long" line="419"/>
            <declaration name="CKM_RSA_X_509" type="long" line="420"/>
            <declaration name="CKM_MD2_RSA_PKCS" type="long" line="424"/>
            <declaration name="CKM_MD5_RSA_PKCS" type="long" line="425"/>
            <declaration name="CKM_SHA1_RSA_PKCS" type="long" line="426"/>
            <declaration name="CKM_RIPEMD128_RSA_PKCS" type="long" line="430"/>
            <declaration name="CKM_RIPEMD160_RSA_PKCS" type="long" line="431"/>
            <declaration name="CKM_RSA_PKCS_OAEP" type="long" line="432"/>
            <declaration name="CKM_RSA_X9_31_KEY_PAIR_GEN" type="long" line="436"/>
            <declaration name="CKM_RSA_X9_31" type="long" line="437"/>
            <declaration name="CKM_SHA1_RSA_X9_31" type="long" line="438"/>
            <declaration name="CKM_RSA_PKCS_PSS" type="long" line="439"/>
            <declaration name="CKM_SHA1_RSA_PKCS_PSS" type="long" line="440"/>
            <declaration name="CKM_DSA_KEY_PAIR_GEN" type="long" line="442"/>
            <declaration name="CKM_DSA" type="long" line="443"/>
            <declaration name="CKM_DSA_SHA1" type="long" line="444"/>
            <declaration name="CKM_DH_PKCS_KEY_PAIR_GEN" type="long" line="445"/>
            <declaration name="CKM_DH_PKCS_DERIVE" type="long" line="446"/>
            <declaration name="CKM_X9_42_DH_KEY_PAIR_GEN" type="long" line="451"/>
            <declaration name="CKM_X9_42_DH_DERIVE" type="long" line="452"/>
            <declaration name="CKM_X9_42_DH_HYBRID_DERIVE" type="long" line="453"/>
            <declaration name="CKM_X9_42_MQV_DERIVE" type="long" line="454"/>
            <declaration name="CKM_SHA256_RSA_PKCS" type="long" line="457"/>
            <declaration name="CKM_SHA384_RSA_PKCS" type="long" line="458"/>
            <declaration name="CKM_SHA512_RSA_PKCS" type="long" line="459"/>
            <declaration name="CKM_RC2_KEY_GEN" type="long" line="461"/>
            <declaration name="CKM_RC2_ECB" type="long" line="462"/>
            <declaration name="CKM_RC2_CBC" type="long" line="463"/>
            <declaration name="CKM_RC2_MAC" type="long" line="464"/>
            <declaration name="CKM_RC2_MAC_GENERAL" type="long" line="467"/>
            <declaration name="CKM_RC2_CBC_PAD" type="long" line="468"/>
            <declaration name="CKM_RC4_KEY_GEN" type="long" line="470"/>
            <declaration name="CKM_RC4" type="long" line="471"/>
            <declaration name="CKM_DES_KEY_GEN" type="long" line="472"/>
            <declaration name="CKM_DES_ECB" type="long" line="473"/>
            <declaration name="CKM_DES_CBC" type="long" line="474"/>
            <declaration name="CKM_DES_MAC" type="long" line="475"/>
            <declaration name="CKM_DES_MAC_GENERAL" type="long" line="478"/>
            <declaration name="CKM_DES_CBC_PAD" type="long" line="479"/>
            <declaration name="CKM_DES2_KEY_GEN" type="long" line="481"/>
            <declaration name="CKM_DES3_KEY_GEN" type="long" line="482"/>
            <declaration name="CKM_DES3_ECB" type="long" line="483"/>
            <declaration name="CKM_DES3_CBC" type="long" line="484"/>
            <declaration name="CKM_DES3_MAC" type="long" line="485"/>
            <declaration name="CKM_DES3_MAC_GENERAL" type="long" line="490"/>
            <declaration name="CKM_DES3_CBC_PAD" type="long" line="491"/>
            <declaration name="CKM_CDMF_KEY_GEN" type="long" line="492"/>
            <declaration name="CKM_CDMF_ECB" type="long" line="493"/>
            <declaration name="CKM_CDMF_CBC" type="long" line="494"/>
            <declaration name="CKM_CDMF_MAC" type="long" line="495"/>
            <declaration name="CKM_CDMF_MAC_GENERAL" type="long" line="496"/>
            <declaration name="CKM_CDMF_CBC_PAD" type="long" line="497"/>
            <declaration name="CKM_MD2" type="long" line="499"/>
            <declaration name="CKM_MD2_HMAC" type="long" line="502"/>
            <declaration name="CKM_MD2_HMAC_GENERAL" type="long" line="503"/>
            <declaration name="CKM_MD5" type="long" line="505"/>
            <declaration name="CKM_MD5_HMAC" type="long" line="508"/>
            <declaration name="CKM_MD5_HMAC_GENERAL" type="long" line="509"/>
            <declaration name="CKM_SHA_1" type="long" line="511"/>
            <declaration name="CKM_SHA_1_HMAC" type="long" line="514"/>
            <declaration name="CKM_SHA_1_HMAC_GENERAL" type="long" line="515"/>
            <declaration name="CKM_RIPEMD128" type="long" line="520"/>
            <declaration name="CKM_RIPEMD128_HMAC" type="long" line="521"/>
            <declaration name="CKM_RIPEMD128_HMAC_GENERAL" type="long" line="522"/>
            <declaration name="CKM_RIPEMD160" type="long" line="523"/>
            <declaration name="CKM_RIPEMD160_HMAC" type="long" line="524"/>
            <declaration name="CKM_RIPEMD160_HMAC_GENERAL" type="long" line="525"/>
            <declaration name="CKM_SHA256" type="long" line="528"/>
            <declaration name="CKM_SHA256_HMAC" type="long" line="529"/>
            <declaration name="CKM_SHA256_HMAC_GENERAL" type="long" line="530"/>
            <declaration name="CKM_SHA384" type="long" line="532"/>
            <declaration name="CKM_SHA384_HMAC" type="long" line="533"/>
            <declaration name="CKM_SHA384_HMAC_GENERAL" type="long" line="534"/>
            <declaration name="CKM_SHA512" type="long" line="536"/>
            <declaration name="CKM_SHA512_HMAC" type="long" line="537"/>
            <declaration name="CKM_SHA512_HMAC_GENERAL" type="long" line="538"/>
            <declaration name="CKM_CAST_KEY_GEN" type="long" line="542"/>
            <declaration name="CKM_CAST_ECB" type="long" line="543"/>
            <declaration name="CKM_CAST_CBC" type="long" line="544"/>
            <declaration name="CKM_CAST_MAC" type="long" line="545"/>
            <declaration name="CKM_CAST_MAC_GENERAL" type="long" line="546"/>
            <declaration name="CKM_CAST_CBC_PAD" type="long" line="547"/>
            <declaration name="CKM_CAST3_KEY_GEN" type="long" line="548"/>
            <declaration name="CKM_CAST3_ECB" type="long" line="549"/>
            <declaration name="CKM_CAST3_CBC" type="long" line="550"/>
            <declaration name="CKM_CAST3_MAC" type="long" line="551"/>
            <declaration name="CKM_CAST3_MAC_GENERAL" type="long" line="552"/>
            <declaration name="CKM_CAST3_CBC_PAD" type="long" line="553"/>
            <declaration name="CKM_CAST5_KEY_GEN" type="long" line="554"/>
            <declaration name="CKM_CAST128_KEY_GEN" type="long" line="555"/>
            <declaration name="CKM_CAST5_ECB" type="long" line="556"/>
            <declaration name="CKM_CAST128_ECB" type="long" line="557"/>
            <declaration name="CKM_CAST5_CBC" type="long" line="558"/>
            <declaration name="CKM_CAST128_CBC" type="long" line="559"/>
            <declaration name="CKM_CAST5_MAC" type="long" line="560"/>
            <declaration name="CKM_CAST128_MAC" type="long" line="561"/>
            <declaration name="CKM_CAST5_MAC_GENERAL" type="long" line="562"/>
            <declaration name="CKM_CAST128_MAC_GENERAL" type="long" line="563"/>
            <declaration name="CKM_CAST5_CBC_PAD" type="long" line="564"/>
            <declaration name="CKM_CAST128_CBC_PAD" type="long" line="565"/>
            <declaration name="CKM_RC5_KEY_GEN" type="long" line="566"/>
            <declaration name="CKM_RC5_ECB" type="long" line="567"/>
            <declaration name="CKM_RC5_CBC" type="long" line="568"/>
            <declaration name="CKM_RC5_MAC" type="long" line="569"/>
            <declaration name="CKM_RC5_MAC_GENERAL" type="long" line="570"/>
            <declaration name="CKM_RC5_CBC_PAD" type="long" line="571"/>
            <declaration name="CKM_IDEA_KEY_GEN" type="long" line="572"/>
            <declaration name="CKM_IDEA_ECB" type="long" line="573"/>
            <declaration name="CKM_IDEA_CBC" type="long" line="574"/>
            <declaration name="CKM_IDEA_MAC" type="long" line="575"/>
            <declaration name="CKM_IDEA_MAC_GENERAL" type="long" line="576"/>
            <declaration name="CKM_IDEA_CBC_PAD" type="long" line="577"/>
            <declaration name="CKM_GENERIC_SECRET_KEY_GEN" type="long" line="578"/>
            <declaration name="CKM_CONCATENATE_BASE_AND_KEY" type="long" line="579"/>
            <declaration name="CKM_CONCATENATE_BASE_AND_DATA" type="long" line="580"/>
            <declaration name="CKM_CONCATENATE_DATA_AND_BASE" type="long" line="581"/>
            <declaration name="CKM_XOR_BASE_AND_DATA" type="long" line="582"/>
            <declaration name="CKM_EXTRACT_KEY_FROM_KEY" type="long" line="583"/>
            <declaration name="CKM_SSL3_PRE_MASTER_KEY_GEN" type="long" line="584"/>
            <declaration name="CKM_SSL3_MASTER_KEY_DERIVE" type="long" line="585"/>
            <declaration name="CKM_SSL3_KEY_AND_MAC_DERIVE" type="long" line="586"/>
            <declaration name="CKM_SSL3_MASTER_KEY_DERIVE_DH" type="long" line="591"/>
            <declaration name="CKM_TLS_PRE_MASTER_KEY_GEN" type="long" line="592"/>
            <declaration name="CKM_TLS_MASTER_KEY_DERIVE" type="long" line="593"/>
            <declaration name="CKM_TLS_KEY_AND_MAC_DERIVE" type="long" line="594"/>
            <declaration name="CKM_TLS_MASTER_KEY_DERIVE_DH" type="long" line="595"/>
            <declaration name="CKM_TLS_PRF" type="long" line="596"/>
            <declaration name="CKM_SSL3_MD5_MAC" type="long" line="598"/>
            <declaration name="CKM_SSL3_SHA1_MAC" type="long" line="599"/>
            <declaration name="CKM_MD5_KEY_DERIVATION" type="long" line="600"/>
            <declaration name="CKM_MD2_KEY_DERIVATION" type="long" line="601"/>
            <declaration name="CKM_SHA1_KEY_DERIVATION" type="long" line="602"/>
            <declaration name="CKM_SHA256_KEY_DERIVATION" type="long" line="605"/>
            <declaration name="CKM_SHA384_KEY_DERIVATION" type="long" line="606"/>
            <declaration name="CKM_SHA512_KEY_DERIVATION" type="long" line="607"/>
            <declaration name="CKM_PBE_MD2_DES_CBC" type="long" line="609"/>
            <declaration name="CKM_PBE_MD5_DES_CBC" type="long" line="610"/>
            <declaration name="CKM_PBE_MD5_CAST_CBC" type="long" line="611"/>
            <declaration name="CKM_PBE_MD5_CAST3_CBC" type="long" line="612"/>
            <declaration name="CKM_PBE_MD5_CAST5_CBC" type="long" line="613"/>
            <declaration name="CKM_PBE_MD5_CAST128_CBC" type="long" line="614"/>
            <declaration name="CKM_PBE_SHA1_CAST5_CBC" type="long" line="615"/>
            <declaration name="CKM_PBE_SHA1_CAST128_CBC" type="long" line="616"/>
            <declaration name="CKM_PBE_SHA1_RC4_128" type="long" line="617"/>
            <declaration name="CKM_PBE_SHA1_RC4_40" type="long" line="618"/>
            <declaration name="CKM_PBE_SHA1_DES3_EDE_CBC" type="long" line="619"/>
            <declaration name="CKM_PBE_SHA1_DES2_EDE_CBC" type="long" line="620"/>
            <declaration name="CKM_PBE_SHA1_RC2_128_CBC" type="long" line="621"/>
            <declaration name="CKM_PBE_SHA1_RC2_40_CBC" type="long" line="622"/>
            <declaration name="CKM_PKCS5_PBKD2" type="long" line="625"/>
            <declaration name="CKM_PBA_SHA1_WITH_SHA1_HMAC" type="long" line="627"/>
            <declaration name="CKM_KEY_WRAP_LYNKS" type="long" line="628"/>
            <declaration name="CKM_KEY_WRAP_SET_OAEP" type="long" line="629"/>
            <declaration name="CKM_SKIPJACK_KEY_GEN" type="long" line="632"/>
            <declaration name="CKM_SKIPJACK_ECB64" type="long" line="633"/>
            <declaration name="CKM_SKIPJACK_CBC64" type="long" line="634"/>
            <declaration name="CKM_SKIPJACK_OFB64" type="long" line="635"/>
            <declaration name="CKM_SKIPJACK_CFB64" type="long" line="636"/>
            <declaration name="CKM_SKIPJACK_CFB32" type="long" line="637"/>
            <declaration name="CKM_SKIPJACK_CFB16" type="long" line="638"/>
            <declaration name="CKM_SKIPJACK_CFB8" type="long" line="639"/>
            <declaration name="CKM_SKIPJACK_WRAP" type="long" line="640"/>
            <declaration name="CKM_SKIPJACK_PRIVATE_WRAP" type="long" line="641"/>
            <declaration name="CKM_SKIPJACK_RELAYX" type="long" line="642"/>
            <declaration name="CKM_KEA_KEY_PAIR_GEN" type="long" line="643"/>
            <declaration name="CKM_KEA_KEY_DERIVE" type="long" line="644"/>
            <declaration name="CKM_FORTEZZA_TIMESTAMP" type="long" line="645"/>
            <declaration name="CKM_BATON_KEY_GEN" type="long" line="646"/>
            <declaration name="CKM_BATON_ECB128" type="long" line="647"/>
            <declaration name="CKM_BATON_ECB96" type="long" line="648"/>
            <declaration name="CKM_BATON_CBC128" type="long" line="649"/>
            <declaration name="CKM_BATON_COUNTER" type="long" line="650"/>
            <declaration name="CKM_BATON_SHUFFLE" type="long" line="651"/>
            <declaration name="CKM_BATON_WRAP" type="long" line="652"/>
            <declaration name="CKM_ECDSA_KEY_PAIR_GEN" type="long" line="656"/>
            <declaration name="CKM_EC_KEY_PAIR_GEN" type="long" line="657"/>
            <declaration name="CKM_ECDSA" type="long" line="659"/>
            <declaration name="CKM_ECDSA_SHA1" type="long" line="660"/>
            <declaration name="CKM_ECDH1_DERIVE" type="long" line="664"/>
            <declaration name="CKM_ECDH1_COFACTOR_DERIVE" type="long" line="665"/>
            <declaration name="CKM_ECMQV_DERIVE" type="long" line="666"/>
            <declaration name="CKM_JUNIPER_KEY_GEN" type="long" line="668"/>
            <declaration name="CKM_JUNIPER_ECB128" type="long" line="669"/>
            <declaration name="CKM_JUNIPER_CBC128" type="long" line="670"/>
            <declaration name="CKM_JUNIPER_COUNTER" type="long" line="671"/>
            <declaration name="CKM_JUNIPER_SHUFFLE" type="long" line="672"/>
            <declaration name="CKM_JUNIPER_WRAP" type="long" line="673"/>
            <declaration name="CKM_FASTHASH" type="long" line="674"/>
            <declaration name="CKM_AES_KEY_GEN" type="long" line="680"/>
            <declaration name="CKM_AES_ECB" type="long" line="681"/>
            <declaration name="CKM_AES_CBC" type="long" line="682"/>
            <declaration name="CKM_AES_MAC" type="long" line="683"/>
            <declaration name="CKM_AES_MAC_GENERAL" type="long" line="684"/>
            <declaration name="CKM_AES_CBC_PAD" type="long" line="685"/>
            <declaration name="CKM_BLOWFISH_KEY_GEN" type="long" line="687"/>
            <declaration name="CKM_BLOWFISH_CBC" type="long" line="688"/>
            <declaration name="CKM_DSA_PARAMETER_GEN" type="long" line="689"/>
            <declaration name="CKM_DH_PKCS_PARAMETER_GEN" type="long" line="690"/>
            <declaration name="CKM_X9_42_DH_PARAMETER_GEN" type="long" line="691"/>
            <declaration name="CKM_VENDOR_DEFINED" type="long" line="693"/>
            <declaration name="CKM_SHA224" type="long" line="696"/>
            <declaration name="CKM_SHA224_HMAC" type="long" line="697"/>
            <declaration name="CKM_SHA224_HMAC_GENERAL" type="long" line="698"/>
            <declaration name="CKM_SHA224_KEY_DERIVATION" type="long" line="699"/>
            <declaration name="CKM_SHA224_RSA_PKCS" type="long" line="700"/>
            <declaration name="CKM_SHA224_RSA_PKCS_PSS" type="long" line="701"/>
            <declaration name="CKM_AES_CTR" type="long" line="702"/>
            <declaration name="CKM_NSS_TLS_PRF_GENERAL" type="long" line="724"/>
            <declaration name="PCKM_SECURERANDOM" type="long" line="727"/>
            <declaration name="PCKM_KEYSTORE" type="long" line="728"/>
            <declaration name="CKF_HW" type="long" line="733"/>
            <declaration name="CKF_ENCRYPT" type="long" line="740"/>
            <declaration name="CKF_DECRYPT" type="long" line="741"/>
            <declaration name="CKF_DIGEST" type="long" line="742"/>
            <declaration name="CKF_SIGN" type="long" line="743"/>
            <declaration name="CKF_SIGN_RECOVER" type="long" line="744"/>
            <declaration name="CKF_VERIFY" type="long" line="745"/>
            <declaration name="CKF_VERIFY_RECOVER" type="long" line="746"/>
            <declaration name="CKF_GENERATE" type="long" line="747"/>
            <declaration name="CKF_GENERATE_KEY_PAIR" type="long" line="748"/>
            <declaration name="CKF_WRAP" type="long" line="749"/>
            <declaration name="CKF_UNWRAP" type="long" line="750"/>
            <declaration name="CKF_DERIVE" type="long" line="751"/>
            <declaration name="CKF_EC_F_P" type="long" line="757"/>
            <declaration name="CKF_EC_F_2M" type="long" line="758"/>
            <declaration name="CKF_EC_ECPARAMETERS" type="long" line="759"/>
            <declaration name="CKF_EC_NAMEDCURVE" type="long" line="760"/>
            <declaration name="CKF_EC_UNCOMPRESS" type="long" line="761"/>
            <declaration name="CKF_EC_COMPRESS" type="long" line="762"/>
            <declaration name="CKF_EXTENSION" type="long" line="765"/>
            <declaration name="CKR_OK" type="long" line="771"/>
            <declaration name="CKR_CANCEL" type="long" line="772"/>
            <declaration name="CKR_HOST_MEMORY" type="long" line="773"/>
            <declaration name="CKR_SLOT_ID_INVALID" type="long" line="774"/>
            <declaration name="CKR_GENERAL_ERROR" type="long" line="779"/>
            <declaration name="CKR_FUNCTION_FAILED" type="long" line="780"/>
            <declaration name="CKR_ARGUMENTS_BAD" type="long" line="784"/>
            <declaration name="CKR_NO_EVENT" type="long" line="785"/>
            <declaration name="CKR_NEED_TO_CREATE_THREADS" type="long" line="786"/>
            <declaration name="CKR_CANT_LOCK" type="long" line="787"/>
            <declaration name="CKR_ATTRIBUTE_READ_ONLY" type="long" line="789"/>
            <declaration name="CKR_ATTRIBUTE_SENSITIVE" type="long" line="790"/>
            <declaration name="CKR_ATTRIBUTE_TYPE_INVALID" type="long" line="791"/>
            <declaration name="CKR_ATTRIBUTE_VALUE_INVALID" type="long" line="792"/>
            <declaration name="CKR_DATA_INVALID" type="long" line="793"/>
            <declaration name="CKR_DATA_LEN_RANGE" type="long" line="794"/>
            <declaration name="CKR_DEVICE_ERROR" type="long" line="795"/>
            <declaration name="CKR_DEVICE_MEMORY" type="long" line="796"/>
            <declaration name="CKR_DEVICE_REMOVED" type="long" line="797"/>
            <declaration name="CKR_ENCRYPTED_DATA_INVALID" type="long" line="798"/>
            <declaration name="CKR_ENCRYPTED_DATA_LEN_RANGE" type="long" line="799"/>
            <declaration name="CKR_FUNCTION_CANCELED" type="long" line="800"/>
            <declaration name="CKR_FUNCTION_NOT_PARALLEL" type="long" line="801"/>
            <declaration name="CKR_FUNCTION_NOT_SUPPORTED" type="long" line="804"/>
            <declaration name="CKR_KEY_HANDLE_INVALID" type="long" line="806"/>
            <declaration name="CKR_KEY_SIZE_RANGE" type="long" line="810"/>
            <declaration name="CKR_KEY_TYPE_INCONSISTENT" type="long" line="811"/>
            <declaration name="CKR_KEY_NOT_NEEDED" type="long" line="817"/>
            <declaration name="CKR_KEY_CHANGED" type="long" line="818"/>
            <declaration name="CKR_KEY_NEEDED" type="long" line="819"/>
            <declaration name="CKR_KEY_INDIGESTIBLE" type="long" line="820"/>
            <declaration name="CKR_KEY_FUNCTION_NOT_PERMITTED" type="long" line="821"/>
            <declaration name="CKR_KEY_NOT_WRAPPABLE" type="long" line="822"/>
            <declaration name="CKR_KEY_UNEXTRACTABLE" type="long" line="823"/>
            <declaration name="CKR_MECHANISM_INVALID" type="long" line="825"/>
            <declaration name="CKR_MECHANISM_PARAM_INVALID" type="long" line="826"/>
            <declaration name="CKR_OBJECT_HANDLE_INVALID" type="long" line="830"/>
            <declaration name="CKR_OPERATION_ACTIVE" type="long" line="831"/>
            <declaration name="CKR_OPERATION_NOT_INITIALIZED" type="long" line="832"/>
            <declaration name="CKR_PIN_INCORRECT" type="long" line="833"/>
            <declaration name="CKR_PIN_INVALID" type="long" line="834"/>
            <declaration name="CKR_PIN_LEN_RANGE" type="long" line="835"/>
            <declaration name="CKR_PIN_EXPIRED" type="long" line="838"/>
            <declaration name="CKR_PIN_LOCKED" type="long" line="839"/>
            <declaration name="CKR_SESSION_CLOSED" type="long" line="841"/>
            <declaration name="CKR_SESSION_COUNT" type="long" line="842"/>
            <declaration name="CKR_SESSION_HANDLE_INVALID" type="long" line="843"/>
            <declaration name="CKR_SESSION_PARALLEL_NOT_SUPPORTED" type="long" line="844"/>
            <declaration name="CKR_SESSION_READ_ONLY" type="long" line="845"/>
            <declaration name="CKR_SESSION_EXISTS" type="long" line="846"/>
            <declaration name="CKR_SESSION_READ_ONLY_EXISTS" type="long" line="850"/>
            <declaration name="CKR_SESSION_READ_WRITE_SO_EXISTS" type="long" line="851"/>
            <declaration name="CKR_SIGNATURE_INVALID" type="long" line="853"/>
            <declaration name="CKR_SIGNATURE_LEN_RANGE" type="long" line="854"/>
            <declaration name="CKR_TEMPLATE_INCOMPLETE" type="long" line="855"/>
            <declaration name="CKR_TEMPLATE_INCONSISTENT" type="long" line="856"/>
            <declaration name="CKR_TOKEN_NOT_PRESENT" type="long" line="857"/>
            <declaration name="CKR_TOKEN_NOT_RECOGNIZED" type="long" line="858"/>
            <declaration name="CKR_TOKEN_WRITE_PROTECTED" type="long" line="859"/>
            <declaration name="CKR_UNWRAPPING_KEY_HANDLE_INVALID" type="long" line="860"/>
            <declaration name="CKR_UNWRAPPING_KEY_SIZE_RANGE" type="long" line="861"/>
            <declaration name="CKR_UNWRAPPING_KEY_TYPE_INCONSISTENT" type="long" line="862"/>
            <declaration name="CKR_USER_ALREADY_LOGGED_IN" type="long" line="863"/>
            <declaration name="CKR_USER_NOT_LOGGED_IN" type="long" line="864"/>
            <declaration name="CKR_USER_PIN_NOT_INITIALIZED" type="long" line="865"/>
            <declaration name="CKR_USER_TYPE_INVALID" type="long" line="866"/>
            <declaration name="CKR_USER_ANOTHER_ALREADY_LOGGED_IN" type="long" line="870"/>
            <declaration name="CKR_USER_TOO_MANY_TYPES" type="long" line="871"/>
            <declaration name="CKR_WRAPPED_KEY_INVALID" type="long" line="873"/>
            <declaration name="CKR_WRAPPED_KEY_LEN_RANGE" type="long" line="874"/>
            <declaration name="CKR_WRAPPING_KEY_HANDLE_INVALID" type="long" line="875"/>
            <declaration name="CKR_WRAPPING_KEY_SIZE_RANGE" type="long" line="876"/>
            <declaration name="CKR_WRAPPING_KEY_TYPE_INCONSISTENT" type="long" line="877"/>
            <declaration name="CKR_RANDOM_SEED_NOT_SUPPORTED" type="long" line="878"/>
            <declaration name="CKR_RANDOM_NO_RNG" type="long" line="881"/>
            <declaration name="CKR_DOMAIN_PARAMS_INVALID" type="long" line="884"/>
            <declaration name="CKR_BUFFER_TOO_SMALL" type="long" line="887"/>
            <declaration name="CKR_SAVED_STATE_INVALID" type="long" line="888"/>
            <declaration name="CKR_INFORMATION_SENSITIVE" type="long" line="889"/>
            <declaration name="CKR_STATE_UNSAVEABLE" type="long" line="890"/>
            <declaration name="CKR_CRYPTOKI_NOT_INITIALIZED" type="long" line="893"/>
            <declaration name="CKR_CRYPTOKI_ALREADY_INITIALIZED" type="long" line="894"/>
            <declaration name="CKR_MUTEX_BAD" type="long" line="895"/>
            <declaration name="CKR_MUTEX_NOT_LOCKED" type="long" line="896"/>
            <declaration name="CKR_VENDOR_DEFINED" type="long" line="898"/>
            <declaration name="CKF_LIBRARY_CANT_CREATE_OS_THREADS" type="long" line="904"/>
            <declaration name="CKF_OS_LOCKING_OK" type="long" line="905"/>
            <declaration name="CKF_DONT_BLOCK" type="long" line="909"/>
            <declaration name="CKG_MGF1_SHA1" type="long" line="913"/>
            <declaration name="CKG_MGF1_SHA224" type="long" line="915"/>
            <declaration name="CKZ_DATA_SPECIFIED" type="long" line="918"/>
            <declaration name="CKP_PKCS5_PBKD2_HMAC_SHA1" type="long" line="922"/>
            <declaration name="CKZ_SALT_SPECIFIED" type="long" line="926"/>
            <declaration name="CKD_NULL" type="long" line="929"/>
            <declaration name="CKD_SHA1_KDF" type="long" line="930"/>
            <declaration name="CKD_SHA1_KDF_ASN1" type="long" line="933"/>
            <declaration name="CKD_SHA1_KDF_CONCATENATE" type="long" line="934"/>
            <declaration name="CKA_NETSCAPE_DB" type="long" line="938"/>
            <declaration name="CKA_NETSCAPE_BASE" type="long" line="941"/>
            <declaration name="CKO_NETSCAPE_TRUST" type="long" line="944"/>
            <declaration name="CKA_NETSCAPE_TRUST_BASE" type="long" line="947"/>
            <declaration name="CKA_NETSCAPE_TRUST_SERVER_AUTH" type="long" line="950"/>
            <declaration name="CKA_NETSCAPE_TRUST_CLIENT_AUTH" type="long" line="951"/>
            <declaration name="CKA_NETSCAPE_TRUST_CODE_SIGNING" type="long" line="952"/>
            <declaration name="CKA_NETSCAPE_TRUST_EMAIL_PROTECTION" type="long" line="953"/>
            <declaration name="CKA_NETSCAPE_CERT_SHA1_HASH" type="long" line="954"/>
            <declaration name="CKA_NETSCAPE_CERT_MD5_HASH" type="long" line="955"/>
            <declaration name="CKT_NETSCAPE_TRUSTED" type="long" line="958"/>
            <declaration name="CKT_NETSCAPE_TRUSTED_DELEGATOR" type="long" line="959"/>
            <declaration name="CKT_NETSCAPE_UNTRUSTED" type="long" line="960"/>
            <declaration name="CKT_NETSCAPE_MUST_VERIFY" type="long" line="961"/>
            <declaration name="CKT_NETSCAPE_TRUST_UNKNOWN" type="long" line="962"/>
            <declaration name="CKT_NETSCAPE_VALID" type="long" line="963"/>
            <declaration name="CKT_NETSCAPE_VALID_DELEGATOR" type="long" line="964"/>
        </interface>
    </source>