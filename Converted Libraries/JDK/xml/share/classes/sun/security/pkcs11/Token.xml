<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.pkcs11">
        <import package="java.util"/>
        <import package="java.io"/>
        <import package="java.lang.ref"/>
        <import package="java.security"/>
        <import package="javax.security.auth.login.LoginException"/>
        <import package="sun.security.jca.JCAUtil"/>
        <import package="sun.security.pkcs11.wrapper"/>
        <import package="sun.security.pkcs11.wrapper.PKCS11Constants"/>
        <class name="Token" line="40">
            <comment line="49">
                need to be serializable to allow SecureRandom to be serialized                
            </comment>
            <comment line="52">
                how often to check if the token is still present (in ms)                
            </comment>
            <comment line="53">
                this is different from checking if a token has been inserted,                
            </comment>
            <comment line="54">
                that is done in SunPKCS11. Currently 50 ms.                
            </comment>
            <comment line="65">
                session manager to pool sessions                
            </comment>
            <comment line="68">
                template manager to customize the attributes used when creating objects                
            </comment>
            <comment line="71">
                flag indicating whether we need to explicitly cancel operations                
            </comment>
            <comment line="72">
                we started on the token. If false, we assume operations are                
            </comment>
            <comment line="73">
                automatically cancelled once we start another one                
            </comment>
            <comment line="76">
                translation cache for secret keys                
            </comment>
            <comment line="79">
                translation cache for asymmetric keys (public and private)                
            </comment>
            <comment line="82">
                cached instances of the various key factories, initialized on demand                
            </comment>
            <comment line="85">
                table which maps mechanisms to the corresponding cached                
            </comment>
            <comment line="86">
                MechanismInfo objects                
            </comment>
            <comment line="89">
                single SecureRandomSpi instance we use per token                
            </comment>
            <comment line="90">
                initialized on demand (if supported)                
            </comment>
            <comment line="93">
                single KeyStoreSpi instance we use per provider                
            </comment>
            <comment line="94">
                initialized on demand                
            </comment>
            <comment line="97">
                whether this token is a removable token                
            </comment>
            <comment line="100">
                for removable tokens: whether this token is valid or has been removed                
            </comment>
            <comment line="103">
                for removable tokens: time last checked for token presence                
            </comment>
            <comment line="106">
                unique token id, used for serialization only                
            </comment>
            <comment line="109">
                flag indicating whether the token is write protected                
            </comment>
            <comment line="112">
                flag indicating whether we are logged in                
            </comment>
            <comment line="115">
                time we last checked login status                
            </comment>
            <comment line="118">
                mutex for token-present-check                
            </comment>
            <comment line="121">
                object for indicating unsupported mechanism in &apos;mechInfoMap&apos;                
            </comment>
            <comment line="163">
                return whether we are logged in                
            </comment>
            <comment line="164">
                uses cached result if current. session is optional and may be null                
            </comment>
            <comment line="176">
                return whether we are logged in now                
            </comment>
            <comment line="177">
                does not use cache                
            </comment>
            <comment line="196">
                ensure that we are logged in                
            </comment>
            <comment line="197">
                call provider.login() if not                
            </comment>
            <comment line="204">
                return whether this token object is valid (i.e. token not removed)                
            </comment>
            <comment line="205">
                returns value from last check, does not perform new check                
            </comment>
            <comment line="219">
                return whether a token is present (i.e. token not removed)                
            </comment>
            <comment line="220">
                returns cached value if current, otherwise performs new check                
            </comment>
            <comment line="376">
                list of all tokens that have been serialized within this VM                
            </comment>
            <comment line="377">
                NOTE that elements are never removed from this list                
            </comment>
            <comment line="378">
                the assumption is that the number of tokens that are serialized                
            </comment>
            <comment line="379">
                is relatively small                
            </comment>
            <comment line="390">
                serialized representation of a token                
            </comment>
            <comment line="391">
                tokens can only be de-serialized within the same VM invocation                
            </comment>
            <comment line="392">
                and if the token has not been removed in the meantime                
            </comment>
            <implements interface="Serializable"/>
            <javadoc line="40">
                PKCS#11 token.                
                <author>
                    Andreas Sterbenz                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="49"/>
            <declaration name="CHECK_INTERVAL" type="long" line="54"/>
            <declaration name="provider" type="SunPKCS11" line="56"/>
            <declaration name="p11" type="PKCS11" line="58"/>
            <declaration name="config" type="Config" line="60"/>
            <declaration name="tokenInfo" type="CK_TOKEN_INFO" line="62"/>
            <declaration name="sessionManager" type="SessionManager" line="65"/>
            <declaration name="templateManager" type="TemplateManager" line="68"/>
            <declaration name="explicitCancel" type="boolean" line="73"/>
            <declaration name="secretCache" type="KeyCache" line="76"/>
            <declaration name="privateCache" type="KeyCache" line="79"/>
            <declaration name="rsaFactory" type="P11KeyFactory" line="82"/>
            <declaration name="mechInfoMap" type="Map&lt;Long,CK_MECHANISM_INFO&gt;" line="86"/>
            <declaration name="secureRandom" type="P11SecureRandom" line="90"/>
            <declaration name="keyStore" type="P11KeyStore" line="94"/>
            <declaration name="removable" type="boolean" line="97"/>
            <declaration name="valid" type="boolean" line="100"/>
            <declaration name="lastPresentCheck" type="long" line="103"/>
            <declaration name="tokenId" type="byte[]" line="106"/>
            <declaration name="writeProtected" type="boolean" line="109"/>
            <declaration name="loggedIn" type="boolean" line="112"/>
            <declaration name="lastLoginCheck" type="long" line="115"/>
            <declaration name="CHECK_LOCK" type="Object" line="118"/>
            <declaration name="INVALID_MECH" type="CK_MECHANISM_INFO" line="121"/>
            <method name="Token" type="constructor" line="124">
                <params>
                    <param name="provider" type="SunPKCS11"/>
                </params>
                <comment line="132">
                    create session manager and open a test session                    
                </comment>
                <comment line="142">
                    token might not permit RW sessions even though                    
                </comment>
                <comment line="143">
                    CKF_WRITE_PROTECTED is not set                    
                </comment>
                <declaration name="sessionManager" type="SessionManager" line="133"/>
                <scope line="134">
                    <declaration name="s" type="Session" line="136"/>
                </scope>
                <scope line="138">
                    <scope line="139"/>
                    <declaration name="s" type="Session" line="146"/>
                </scope>
            </method>
            <method name="isWriteProtected" type="boolean" line="158"/>
            <method name="isLoggedIn" type="boolean" line="164">
                <params>
                    <param name="session" type="Session"/>
                </params>
                <comment line="165">
                    volatile load first                    
                </comment>
                <declaration name="loggedIn" type="boolean" line="166"/>
                <declaration name="time" type="long" line="167"/>
                <scope line="168"/>
            </method>
            <method name="isLoggedInNow" type="boolean" line="177">
                <params>
                    <param name="session" type="Session"/>
                </params>
                <declaration name="allocSession" type="boolean" line="178"/>
                <scope line="179">
                    <scope line="180"/>
                    <declaration name="info" type="CK_SESSION_INFO" line="183"/>
                    <declaration name="loggedIn" type="boolean" line="184"/>
                </scope>
                <scope line="188">
                    <scope line="189"/>
                </scope>
            </method>
            <method name="ensureLoggedIn" type="void" line="197">
                <params>
                    <param name="session" type="Session"/>
                </params>
                <scope line="198"/>
            </method>
            <method name="isValid" type="boolean" line="205">
                <scope line="206"/>
            </method>
            <method name="ensureValid" type="void" line="212">
                <scope line="213"/>
            </method>
            <method name="isPresent" type="boolean" line="220">
                <params>
                    <param name="session" type="Session"/>
                </params>
                <comment line="233">
                    check if token still present                    
                </comment>
                <comment line="237">
                    if the token has been removed and re-inserted,                    
                </comment>
                <comment line="238">
                    the token should return an error                    
                </comment>
                <comment line="245">
                    empty                    
                </comment>
                <scope line="221"/>
                <scope line="224"/>
                <declaration name="time" type="long" line="227"/>
                <scope line="228">
                    <scope line="229">
                        <scope line="230">
                            <declaration name="ok" type="boolean" line="231"/>
                            <scope line="232">
                                <declaration name="slotInfo" type="CK_SLOT_INFO" line="234"/>
                                <scope line="236">
                                    <declaration name="sessInfo" type="CK_SESSION_INFO" line="239"/>
                                </scope>
                            </scope>
                            <scope line="244"/>
                            <scope line="249"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="destroy" type="void" line="258"/>
            <method name="getObjSession" type="Session" line="263"/>
            <method name="getOpSession" type="Session" line="267"/>
            <method name="releaseSession" type="Session" line="271">
                <params>
                    <param name="session" type="Session"/>
                </params>
            </method>
            <method name="killSession" type="Session" line="275">
                <params>
                    <param name="session" type="Session"/>
                </params>
            </method>
            <method name="getAttributes" type="CK_ATTRIBUTE[]" line="280">
                <params>
                    <param name="op" type="String"/>
                    <param name="type" type="long"/>
                    <param name="alg" type="long"/>
                    <param name="attrs" type="CK_ATTRIBUTE[]"/>
                </params>
                <comment line="292">
                    break once we have found a CKA_TOKEN attribute                    
                </comment>
                <declaration name="newAttrs" type="CK_ATTRIBUTE[]" line="281"/>
                <scope line="283">
                    <scope line="284">
                        <scope line="285">
                            <scope line="286"/>
                            <scope line="288"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="getKeyFactory" type="P11KeyFactory" line="299">
                <params>
                    <param name="algorithm" type="String"/>
                </params>
                <declaration name="f" type="P11KeyFactory" line="300"/>
                <scope line="301">
                    <scope line="303"/>
                </scope>
                <scope line="307">
                    <scope line="309"/>
                </scope>
                <scope line="313">
                    <scope line="315"/>
                </scope>
                <scope line="319">
                    <scope line="321"/>
                </scope>
                <scope line="325"/>
            </method>
            <method name="getRandom" type="P11SecureRandom" line="331">
                <scope line="332"/>
            </method>
            <method name="getKeyStore" type="P11KeyStore" line="338">
                <scope line="339"/>
            </method>
            <method name="getMechanismInfo" type="CK_MECHANISM_INFO" line="345">
                <params>
                    <param name="mechanism" type="long"/>
                </params>
                <declaration name="result" type="CK_MECHANISM_INFO" line="346"/>
                <scope line="347">
                    <scope line="348"/>
                    <scope line="352">
                        <scope line="353"/>
                        <scope line="355"/>
                    </scope>
                </scope>
                <scope line="359"/>
            </method>
            <method name="getTokenId" type="byte[]" line="365">
                <scope line="366">
                    <declaration name="random" type="SecureRandom" line="367"/>
                </scope>
            </method>
            <declaration name="serializedTokens" type="List&lt;Reference&lt;Token&gt;&gt;" line="379"/>
            <method name="writeReplace" type="Object" line="382">
                <scope line="383"/>
            </method>
            <class name="TokenRep" line="392">
                <implements interface="Serializable"/>
                <declaration name="serialVersionUID" type="long" line="394"/>
                <declaration name="tokenId" type="byte[]" line="396"/>
                <method name="TokenRep" type="constructor" line="398">
                    <params>
                        <param name="token" type="Token"/>
                    </params>
                </method>
                <method name="readResolve" type="Object" line="402">
                    <scope line="403">
                        <declaration name="token" type="Token" line="404"/>
                        <scope line="405">
                            <scope line="406"/>
                        </scope>
                    </scope>
                </method>
            </class>
        </class>
    </source>