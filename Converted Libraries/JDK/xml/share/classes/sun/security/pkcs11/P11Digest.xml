<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.pkcs11">
        <import package="java.util"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.security"/>
        <import package="javax.crypto.SecretKey"/>
        <import package="sun.nio.ch.DirectBuffer"/>
        <import package="sun.security.pkcs11.wrapper"/>
        <import package="sun.security.pkcs11.wrapper.PKCS11Constants"/>
        <class name="P11Digest" line="40">
            <extends class="MessageDigestSpi"/>
            <comment line="55">
                                
            </comment>
            <comment line="58">
                data in buffer, all fields valid, session acquired                
            </comment>
            <comment line="59">
                but digest not initialized                
            </comment>
            <comment line="62">
                                
            </comment>
            <comment line="67">
                token instance                
            </comment>
            <comment line="70">
                algorithm name                
            </comment>
            <comment line="73">
                mechanism id                
            </comment>
            <comment line="76">
                length of the digest in bytes                
            </comment>
            <comment line="79">
                associated session, if any                
            </comment>
            <comment line="82">
                current state, one of S_* above                
            </comment>
            <comment line="85">
                one byte buffer for the update(byte) method, initialized on demand                
            </comment>
            <comment line="88">
                buffer to reduce number of JNI calls                
            </comment>
            <comment line="91">
                offset into the buffer                
            </comment>
            <comment line="124">
                see JCA spec                
            </comment>
            <comment line="154">
                see JCA spec                
            </comment>
            <comment line="169">
                see JCA spec                
            </comment>
            <comment line="180">
                see JCA spec                
            </comment>
            <comment line="212">
                see JCA spec                
            </comment>
            <comment line="221">
                see JCA spec                
            </comment>
            <comment line="239">
                Called by SunJSSE via reflection during the SSL 3.0 handshake if                
            </comment>
            <comment line="240">
                the master secret is sensitive. We may want to consider making this                
            </comment>
            <comment line="241">
                method public in a future release.                
            </comment>
            <comment line="269">
                see JCA spec                
            </comment>
            <javadoc line="40">
                MessageDigest implementation class. This class currently supports
                  MD2, MD5, SHA-1, SHA-256, SHA-384, and SHA-512.
                  Note that many digest operations are on fairly small amounts of data
                  (less than 100 bytes total). For example, the 2nd hashing in HMAC or
                  the PRF in TLS. In order to speed those up, we use some buffering to
                  minimize number of the Java-&gt;native transitions.                
                <author>
                    Andreas Sterbenz                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="S_BLANK" type="int" line="55"/>
            <declaration name="S_BUFFERED" type="int" line="59"/>
            <declaration name="S_INIT" type="int" line="62"/>
            <declaration name="BUFFER_SIZE" type="int" line="64"/>
            <declaration name="token" type="Token" line="67"/>
            <declaration name="algorithm" type="String" line="70"/>
            <declaration name="mechanism" type="long" line="73"/>
            <declaration name="digestLength" type="int" line="76"/>
            <declaration name="session" type="Session" line="79"/>
            <declaration name="state" type="int" line="82"/>
            <declaration name="oneByte" type="byte[]" line="85"/>
            <declaration name="buffer" type="byte[]" line="88"/>
            <declaration name="bufOfs" type="int" line="91"/>
            <method name="P11Digest" type="constructor" line="93">
                <params>
                    <param name="token" type="Token"/>
                    <param name="algorithm" type="String"/>
                    <param name="mechanism" type="long"/>
                </params>
            </method>
            <method name="engineGetDigestLength" type="int" line="124"/>
            <method name="cancelOperation" type="void" line="128">
                <comment line="136">
                    need to explicitly &quot;cancel&quot; active op by finishing it                    
                </comment>
                <scope line="130"/>
                <scope line="133"/>
                <scope line="137"/>
                <scope line="139"/>
                <scope line="141"/>
            </method>
            <method name="fetchSession" type="void" line="146">
                <scope line="148"/>
            </method>
            <method name="engineReset" type="void" line="154">
                <scope line="155">
                    <scope line="158"/>
                </scope>
                <scope line="162"/>
            </method>
            <method name="engineDigest" type="byte[]" line="169">
                <scope line="170">
                    <declaration name="digest" type="byte[]" line="171"/>
                    <declaration name="n" type="int" line="172"/>
                </scope>
                <scope line="174"/>
            </method>
            <method name="engineDigest" type="int" line="181">
                <params>
                    <param name="digest" type="byte[]"/>
                    <param name="ofs" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="182"/>
                <scope line="186">
                    <declaration name="n" type="int" line="187"/>
                    <scope line="188"/>
                    <scope line="192">
                        <scope line="193"/>
                    </scope>
                    <scope line="198"/>
                </scope>
                <scope line="202"/>
                <scope line="204"/>
            </method>
            <method name="engineUpdate" type="void" line="212">
                <params>
                    <param name="in" type="byte"/>
                </params>
                <scope line="213"/>
            </method>
            <method name="engineUpdate" type="void" line="221">
                <params>
                    <param name="in" type="byte[]"/>
                    <param name="ofs" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="223"/>
                <scope line="226"/>
                <scope line="230"/>
                <scope line="232"/>
            </method>
            <method name="implUpdate" type="void" line="241">
                <params>
                    <param name="key" type="SecretKey"/>
                </params>
                <comment line="247">
                    SunJSSE calls this method only if the key does not have a RAW                    
                </comment>
                <comment line="248">
                    encoding, i.e. if it is sensitive. Therefore, no point in calling                    
                </comment>
                <comment line="249">
                    SecretKeyFactory to try to convert it. Just verify it ourselves.                    
                </comment>
                <scope line="243"/>
                <scope line="250"/>
                <declaration name="p11Key" type="P11Key" line="253"/>
                <scope line="254"/>
                <scope line="257">
                    <scope line="258"/>
                </scope>
                <scope line="263"/>
            </method>
            <method name="engineUpdate" type="void" line="269">
                <params>
                    <param name="byteBuffer" type="ByteBuffer"/>
                </params>
                <declaration name="len" type="int" line="271"/>
                <scope line="272"/>
                <scope line="275"/>
                <declaration name="addr" type="long" line="279"/>
                <declaration name="ofs" type="int" line="280"/>
                <scope line="281">
                    <scope line="282">
                        <scope line="285"/>
                    </scope>
                </scope>
                <scope line="292"/>
            </method>
            <method name="doUpdate" type="void" line="297">
                <params>
                    <param name="in" type="byte[]"/>
                    <param name="ofs" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="298"/>
                <scope line="301">
                    <scope line="302"/>
                </scope>
                <scope line="307"/>
            </method>
        </class>
    </source>