<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.pkcs11">
        <import package="java.util"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.security"/>
        <import package="javax.crypto.SecretKey"/>
        <import package="sun.nio.ch.DirectBuffer"/>
        <import package="sun.security.pkcs11.wrapper"/>
        <import package="sun.security.pkcs11.wrapper.PKCS11Constants"/>
        <class name="P11Digest" line="9">
            <extends class="MessageDigestSpi"/>
            <javadoc line="9">
                MessageDigest implementation class. This class currently supports
                  MD2, MD5, SHA-1, SHA-256, SHA-384, and SHA-512.
                  Note that many digest operations are on fairly small amounts of data
                  (less than 100 bytes total). For example, the 2nd hashing in HMAC or
                  the PRF in TLS. In order to speed those up, we use some buffering to
                  minimize number of the Java-&gt;native transitions.                
                <author>
                    Andreas Sterbenz                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="S_BLANK" type="int" line="20"/>
            <declaration name="S_BUFFERED" type="int" line="21"/>
            <declaration name="S_INIT" type="int" line="22"/>
            <declaration name="BUFFER_SIZE" type="int" line="23"/>
            <declaration name="token" type="Token" line="24"/>
            <declaration name="algorithm" type="String" line="25"/>
            <declaration name="mechanism" type="long" line="26"/>
            <declaration name="digestLength" type="int" line="27"/>
            <declaration name="session" type="Session" line="28"/>
            <declaration name="state" type="int" line="29"/>
            <declaration name="oneByte" type="byte[]" line="30"/>
            <declaration name="buffer" type="byte[]" line="31"/>
            <declaration name="bufOfs" type="int" line="32"/>
            <method name="P11Digest" type="constructor" line="33">
                <params>
                    <param name="token" type="Token"/>
                    <param name="algorithm" type="String"/>
                    <param name="mechanism" type="long"/>
                </params>
            </method>
            <method name="engineGetDigestLength" type="int" line="62"/>
            <method name="cancelOperation" type="void" line="65">
                <scope line="67"/>
                <scope line="70"/>
                <scope line="73"/>
                <scope line="76"/>
                <scope line="79"/>
            </method>
            <method name="fetchSession" type="void" line="83">
                <scope line="85"/>
            </method>
            <method name="engineReset" type="void" line="89">
                <scope line="90">
                    <scope line="93"/>
                </scope>
                <scope line="98"/>
            </method>
            <method name="engineDigest" type="byte[]" line="103">
                <scope line="104">
                    <declaration name="digest" type="byte[]" line="105"/>
                    <declaration name="n" type="int" line="106"/>
                </scope>
                <scope line="109"/>
            </method>
            <method name="engineDigest" type="int" line="113">
                <params>
                    <param name="digest" type="byte[]"/>
                    <param name="ofs" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="114"/>
                <scope line="118">
                    <declaration name="n" type="int" line="119"/>
                    <scope line="120"/>
                    <scope line="123">
                        <scope line="124"/>
                    </scope>
                    <scope line="129"/>
                </scope>
                <scope line="134"/>
                <scope line="137"/>
            </method>
            <method name="engineUpdate" type="void" line="143">
                <params>
                    <param name="in" type="byte"/>
                </params>
                <scope line="144"/>
            </method>
            <method name="engineUpdate" type="void" line="150">
                <params>
                    <param name="in" type="byte[]"/>
                    <param name="ofs" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="152"/>
                <scope line="155"/>
                <scope line="159"/>
                <scope line="162"/>
            </method>
            <method name="implUpdate" type="void" line="167">
                <params>
                    <param name="key" type="SecretKey"/>
                </params>
                <scope line="169"/>
                <scope line="173"/>
                <declaration name="p11Key" type="P11Key" line="176"/>
                <scope line="177"/>
                <scope line="180">
                    <scope line="181"/>
                </scope>
                <scope line="187"/>
            </method>
            <method name="engineUpdate" type="void" line="191">
                <params>
                    <param name="byteBuffer" type="ByteBuffer"/>
                </params>
                <declaration name="len" type="int" line="193"/>
                <scope line="194"/>
                <scope line="197"/>
                <declaration name="addr" type="long" line="201"/>
                <declaration name="ofs" type="int" line="202"/>
                <scope line="203">
                    <scope line="204">
                        <scope line="207"/>
                    </scope>
                </scope>
                <scope line="215"/>
            </method>
            <method name="doUpdate" type="void" line="219">
                <params>
                    <param name="in" type="byte[]"/>
                    <param name="ofs" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="220"/>
                <scope line="223">
                    <scope line="224"/>
                </scope>
                <scope line="230"/>
            </method>
        </class>
    </source>