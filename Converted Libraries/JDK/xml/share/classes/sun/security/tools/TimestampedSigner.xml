<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.tools">
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.math.BigInteger"/>
        <import package="java.net.URI"/>
        <import package="java.security.MessageDigest"/>
        <import package="java.security.NoSuchAlgorithmException"/>
        <import package="java.security.Principal"/>
        <import package="java.security.SecureRandom"/>
        <import package="java.security.cert.CertificateException"/>
        <import package="java.security.cert.X509Certificate"/>
        <import package="java.util.List"/>
        <import package="com.sun.jarsigner"/>
        <import package="java.util.Arrays"/>
        <import package="sun.security.pkcs"/>
        <import package="sun.security.timestamp"/>
        <import package="sun.security.util"/>
        <import package="sun.security.x509"/>
        <class name="TimestampedSigner" line="47">
            <extends class="ContentSigner"/>
            <comment line="60">
                Random number generator for creating nonce values                
            </comment>
            <comment line="74">
                Object identifier for the subject information access X.509 certificate
                 extension.                
            </comment>
            <comment line="80">
                Object identifier for the timestamping key purpose.                
            </comment>
            <comment line="85">
                Object identifier for extendedKeyUsage extension                
            </comment>
            <comment line="90">
                Object identifier for the timestamping access descriptors.                
            </comment>
            <comment line="104">
                Location of the TSA.                
            </comment>
            <comment line="109">
                TSA&apos;s X.509 certificate.                
            </comment>
            <comment line="114">
                Generates an SHA-1 hash value for the data to be timestamped.                
            </comment>
            <comment line="119">
                Parameters for the timestamping protocol.                
            </comment>
            <comment line="296">
                Returns a timestamp token from a TSA for the given content.
                 Performs a basic check on the token to confirm that it has been signed
                 by a certificate that is permitted to sign timestamps.
                
                 @param  toBeTimestamped The data to be timestamped.
                 @throws IOException The exception is throw if an error occurs while
                                     communicating with the TSA.
                 @throws CertificateException The exception is throw if the TSA&apos;s
                                     certificate is not permitted for timestamping.                
            </comment>
            <javadoc line="47">
                This class implements a content signing service.
                  It generates a timestamped signature for a given content according to
                  &lt;a href=&quot;http://www.ietf.org/rfc/rfc3161.txt&quot;&gt;RFC 3161&lt;/a&gt;.
                  The signature along with a trusted timestamp and the signer&apos;s certificate
                  are all packaged into a standard PKCS #7 Signed Data message.                
                <author>
                    Vincent Ryan                    
                </author>
            </javadoc>
            <declaration name="RANDOM" type="SecureRandom" line="62"/>
            <scope line="63">
                <declaration name="tmp" type="SecureRandom" line="64"/>
                <scope line="65"/>
                <scope line="67"/>
            </scope>
            <declaration name="SUBJECT_INFO_ACCESS_OID" type="String" line="77"/>
            <declaration name="KP_TIMESTAMPING_OID" type="String" line="82"/>
            <declaration name="EXTENDED_KEY_USAGE_OID" type="String" line="87"/>
            <declaration name="AD_TIMESTAMPING_Id" type="ObjectIdentifier" line="92"/>
            <scope line="93">
                <declaration name="tmp" type="ObjectIdentifier" line="94"/>
                <scope line="95"/>
                <scope line="97"/>
            </scope>
            <declaration name="tsaUrl" type="String" line="106"/>
            <declaration name="tsaCertificate" type="X509Certificate" line="111"/>
            <declaration name="messageDigest" type="MessageDigest" line="116"/>
            <declaration name="tsRequestCertificate" type="boolean" line="121"/>
            <javadoc line="123">
                Instantiates a content signer that supports timestamped signatures.                
            </javadoc>
            <method name="TimestampedSigner" type="constructor" line="126"/>
            <javadoc line="129">
                Generates a PKCS #7 signed data message that includes a signature
                  timestamp.
                  This method is used when a signature has already been generated.
                  The signature, a signature timestamp, the signer&apos;s certificate chain,
                  and optionally the content that was signed, are packaged into a PKCS #7
                  signed data message.                
                <param>
                    parameters The non-null input parameters.                    
                </param>
                <param>
                    omitContent true if the content should be omitted from the
                      signed data message. Otherwise the content is included.                    
                </param>
                <param>
                    applyTimestamp true if the signature should be timestamped.
                      Otherwise timestamping is not performed.                    
                </param>
                <return>
                    A PKCS #7 signed data message including a signature timestamp.                    
                </return>
                <throws>
                    NoSuchAlgorithmException The exception is thrown if the signature
                      algorithm is unrecognised.                    
                </throws>
                <throws>
                    CertificateException The exception is thrown if an error occurs
                      while processing the signer's certificate or the TSA's
                      certificate.                    
                </throws>
                <throws>
                    IOException The exception is thrown if an error occurs while
                      generating the signature timestamp or while generating the signed
                      data message.                    
                </throws>
                <throws>
                    NullPointerException The exception is thrown if parameters is
                      null.                    
                </throws>
            </javadoc>
            <method name="generateSignedData" type="byte[]" line="156">
                <params>
                    <param name="parameters" type="ContentSignerParameters"/>
                    <param name="omitContent" type="boolean"/>
                    <param name="applyTimestamp" type="boolean"/>
                </params>
                <comment line="163">
                    Parse the signature algorithm to extract the digest and key
                     algorithms. The expected format is:
                         &quot;&lt;digest&gt;with&lt;encryption&gt;&quot;
                     or  &quot;&lt;digest&gt;with&lt;encryption&gt;and&lt;mgf&gt;&quot;                    
                </comment>
                <comment line="174">
                    Examine signer&apos;s certificate                    
                </comment>
                <comment line="179">
                    must extract the original encoded form of DN for subsequent
                     name comparison checks (converting to a String and back to
                     an encoded DN could cause the types of String attribute
                     values to be changed)                    
                </comment>
                <comment line="191">
                    Include or exclude content                    
                </comment>
                <comment line="200">
                    Generate the timestamp token                    
                </comment>
                <comment line="210">
                    Examine TSA cert                    
                </comment>
                <comment line="219">
                    Timestamp the signature                    
                </comment>
                <comment line="222">
                    Insert the timestamp token into the PKCS #7 signer info element
                     (as an unsigned attribute)                    
                </comment>
                <comment line="240">
                    Create the PKCS #7 signed data message                    
                </comment>
                <scope line="158"/>
                <declaration name="signatureAlgorithm" type="String" line="166"/>
                <declaration name="keyAlgorithm" type="String" line="167"/>
                <declaration name="digestAlgorithm" type="String" line="169"/>
                <declaration name="digestAlgorithmId" type="AlgorithmId" line="171"/>
                <declaration name="signerCertificateChain" type="X509Certificate[]" line="174"/>
                <declaration name="issuerName" type="Principal" line="176"/>
                <scope line="177">
                    <declaration name="tbsCert" type="X509CertInfo" line="182"/>
                </scope>
                <declaration name="serialNumber" type="BigInteger" line="188"/>
                <declaration name="content" type="byte[]" line="191"/>
                <declaration name="contentInfo" type="ContentInfo" line="192"/>
                <scope line="193"/>
                <scope line="195"/>
                <declaration name="signature" type="byte[]" line="200"/>
                <declaration name="signerInfo" type="SignerInfo" line="201"/>
                <scope line="202">
                    <declaration name="tsaUri" type="URI" line="205"/>
                    <scope line="206"/>
                    <scope line="208">
                        <declaration name="certUrl" type="String" line="210"/>
                        <scope line="211"/>
                    </scope>
                    <declaration name="tsToken" type="byte[]" line="219"/>
                    <declaration name="unsignedAttrs" type="PKCS9Attributes" line="223"/>
                </scope>
                <scope line="231"/>
                <declaration name="signerInfos" type="SignerInfo[]" line="236"/>
                <declaration name="algorithms" type="AlgorithmId[]" line="237"/>
                <declaration name="p7" type="PKCS7" line="240"/>
                <declaration name="p7out" type="ByteArrayOutputStream" line="242"/>
            </method>
            <javadoc line="248">
                Examine the certificate for a Subject Information Access extension
                  (&lt;a href=&quot;http://www.ietf.org/rfc/rfc3280.txt&quot;&gt;RFC 3280&lt;/a&gt;).
                  The extension&apos;s &lt;tt&gt;accessMethod&lt;/tt&gt; field should contain the object
                  identifier defined for timestamping: 1.3.6.1.5.5.7.48.3 and its
                  &lt;tt&gt;accessLocation&lt;/tt&gt; field should contain an HTTP or HTTPS URL.                
                <param>
                    tsaCertificate An X.509 certificate for the TSA.                    
                </param>
                <return>
                    An HTTP or HTTPS URL or null if none was found.                    
                </return>
            </javadoc>
            <method name="getTimestampingUrl" type="String" line="258">
                <params>
                    <param name="tsaCertificate" type="X509Certificate"/>
                </params>
                <comment line="264">
                    Parse the extensions                    
                </comment>
                <comment line="291">
                    ignore                    
                </comment>
                <scope line="260"/>
                <scope line="264">
                    <declaration name="extensionValue" type="byte[]" line="265"/>
                    <scope line="267"/>
                    <declaration name="der" type="DerInputStream" line="270"/>
                    <declaration name="derValue" type="DerValue[]" line="272"/>
                    <declaration name="description" type="AccessDescription" line="273"/>
                    <declaration name="location" type="GeneralName" line="274"/>
                    <declaration name="uri" type="URIName" line="275"/>
                    <scope line="276">
                        <scope line="278">
                            <scope line="280">
                                <scope line="283"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="289"/>
            </method>
            <method name="generateTimestampToken" type="byte[]" line="307">
                <params>
                    <param name="toBeTimestamped" type="byte[]"/>
                </params>
                <comment line="310">
                    Generate hash value for the data to be timestamped
                     SHA-1 is always used.                    
                </comment>
                <comment line="316">
                    ignore                    
                </comment>
                <comment line="321">
                    Generate a timestamp                    
                </comment>
                <comment line="323">
                    Generate a nonce                    
                </comment>
                <comment line="331">
                    use supplied TSA                    
                </comment>
                <comment line="334">
                    Handle TSP error                    
                </comment>
                <comment line="365">
                    Examine the TSA&apos;s certificate (if present)                    
                </comment>
                <comment line="369">
                    Error, we&apos;ve already set tsRequestCertificate = true                    
                </comment>
                <scope line="311">
                    <scope line="312"/>
                    <scope line="314"/>
                </scope>
                <declaration name="digest" type="byte[]" line="318"/>
                <declaration name="tsQuery" type="TSRequest" line="321"/>
                <declaration name="nonce" type="BigInteger" line="323"/>
                <scope line="324"/>
                <declaration name="tsa" type="Timestamper" line="330"/>
                <declaration name="tsReply" type="TSResponse" line="331"/>
                <declaration name="status" type="int" line="332"/>
                <scope line="334">
                    <declaration name="failureCode" type="int" line="335"/>
                    <scope line="336"/>
                    <scope line="339"/>
                </scope>
                <declaration name="tsToken" type="PKCS7" line="345"/>
                <declaration name="tst" type="TimestampToken" line="347"/>
                <scope line="349"/>
                <scope line="352"/>
                <declaration name="replyNonce" type="BigInteger" line="356"/>
                <scope line="357"/>
                <scope line="360"/>
                <scope line="365">
                    <declaration name="cert" type="X509Certificate" line="366"/>
                    <scope line="367"/>
                    <scope line="371">
                        <scope line="373"/>
                        <declaration name="keyPurposes" type="List" line="377"/>
                        <scope line="379"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>