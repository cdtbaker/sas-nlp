<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.tools">
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.math.BigInteger"/>
        <import package="java.net.URI"/>
        <import package="java.security.MessageDigest"/>
        <import package="java.security.NoSuchAlgorithmException"/>
        <import package="java.security.Principal"/>
        <import package="java.security.SecureRandom"/>
        <import package="java.security.cert.CertificateException"/>
        <import package="java.security.cert.X509Certificate"/>
        <import package="java.util.List"/>
        <import package="com.sun.jarsigner"/>
        <import package="java.util.Arrays"/>
        <import package="sun.security.pkcs"/>
        <import package="sun.security.timestamp"/>
        <import package="sun.security.util"/>
        <import package="sun.security.x509"/>
        <class name="TimestampedSigner" line="19">
            <extends class="ContentSigner"/>
            <javadoc line="19">
                This class implements a content signing service.
                  It generates a timestamped signature for a given content according to
                  &lt;a href=&quot;http://www.ietf.org/rfc/rfc3161.txt&quot;&gt;RFC 3161&lt;/a&gt;.
                  The signature along with a trusted timestamp and the signer&apos;s certificate
                  are all packaged into a standard PKCS #7 Signed Data message.                
                <author>
                    Vincent Ryan                    
                </author>
            </javadoc>
            <declaration name="RANDOM" type="SecureRandom" line="28"/>
            <scope line="29">
                <declaration name="tmp" type="SecureRandom" line="30"/>
                <scope line="31"/>
                <scope line="34"/>
            </scope>
            <declaration name="SUBJECT_INFO_ACCESS_OID" type="String" line="38"/>
            <declaration name="KP_TIMESTAMPING_OID" type="String" line="39"/>
            <declaration name="EXTENDED_KEY_USAGE_OID" type="String" line="40"/>
            <declaration name="AD_TIMESTAMPING_Id" type="ObjectIdentifier" line="41"/>
            <scope line="42">
                <declaration name="tmp" type="ObjectIdentifier" line="43"/>
                <scope line="44"/>
                <scope line="47"/>
            </scope>
            <declaration name="tsaUrl" type="String" line="51"/>
            <declaration name="tsaCertificate" type="X509Certificate" line="52"/>
            <declaration name="messageDigest" type="MessageDigest" line="53"/>
            <declaration name="tsRequestCertificate" type="boolean" line="54"/>
            <javadoc line="55">
                Instantiates a content signer that supports timestamped signatures.                
            </javadoc>
            <method name="TimestampedSigner" type="constructor" line="58"/>
            <javadoc line="60">
                Generates a PKCS #7 signed data message that includes a signature
                  timestamp.
                  This method is used when a signature has already been generated.
                  The signature, a signature timestamp, the signer&apos;s certificate chain,
                  and optionally the content that was signed, are packaged into a PKCS #7
                  signed data message.                
                <param>
                    parameters The non-null input parameters.                    
                </param>
                <param>
                    omitContent true if the content should be omitted from the
                      signed data message. Otherwise the content is included.                    
                </param>
                <param>
                    applyTimestamp true if the signature should be timestamped.
                      Otherwise timestamping is not performed.                    
                </param>
                <return>
                    A PKCS #7 signed data message including a signature timestamp.                    
                </return>
                <throws>
                    NoSuchAlgorithmException The exception is thrown if the signature
                      algorithm is unrecognised.                    
                </throws>
                <throws>
                    CertificateException The exception is thrown if an error occurs
                      while processing the signer's certificate or the TSA's
                      certificate.                    
                </throws>
                <throws>
                    IOException The exception is thrown if an error occurs while
                      generating the signature timestamp or while generating the signed
                      data message.                    
                </throws>
                <throws>
                    NullPointerException The exception is thrown if parameters is
                      null.                    
                </throws>
            </javadoc>
            <method name="generateSignedData" type="byte[]" line="84">
                <params>
                    <param name="parameters" type="ContentSignerParameters"/>
                    <param name="omitContent" type="boolean"/>
                    <param name="applyTimestamp" type="boolean"/>
                </params>
                <scope line="85"/>
                <declaration name="signatureAlgorithm" type="String" line="88"/>
                <declaration name="keyAlgorithm" type="String" line="89"/>
                <declaration name="digestAlgorithm" type="String" line="90"/>
                <declaration name="digestAlgorithmId" type="AlgorithmId" line="91"/>
                <declaration name="signerCertificateChain" type="X509Certificate[]" line="92"/>
                <declaration name="issuerName" type="Principal" line="93"/>
                <scope line="94">
                    <declaration name="tbsCert" type="X509CertInfo" line="95"/>
                </scope>
                <declaration name="serialNumber" type="BigInteger" line="98"/>
                <declaration name="content" type="byte[]" line="99"/>
                <declaration name="contentInfo" type="ContentInfo" line="100"/>
                <scope line="101"/>
                <scope line="104"/>
                <declaration name="signature" type="byte[]" line="107"/>
                <declaration name="signerInfo" type="SignerInfo" line="108"/>
                <scope line="109">
                    <declaration name="tsaUri" type="URI" line="111"/>
                    <scope line="112"/>
                    <scope line="115">
                        <declaration name="certUrl" type="String" line="116"/>
                        <scope line="117"/>
                    </scope>
                    <declaration name="tsToken" type="byte[]" line="122"/>
                    <declaration name="unsignedAttrs" type="PKCS9Attributes" line="123"/>
                </scope>
                <scope line="126"/>
                <declaration name="signerInfos" type="SignerInfo[]" line="129"/>
                <declaration name="algorithms" type="AlgorithmId[]" line="130"/>
                <declaration name="p7" type="PKCS7" line="131"/>
                <declaration name="p7out" type="ByteArrayOutputStream" line="132"/>
            </method>
            <javadoc line="136">
                Examine the certificate for a Subject Information Access extension
                  (&lt;a href=&quot;http://www.ietf.org/rfc/rfc3280.txt&quot;&gt;RFC 3280&lt;/a&gt;).
                  The extension&apos;s &lt;tt&gt;accessMethod&lt;/tt&gt; field should contain the object
                  identifier defined for timestamping: 1.3.6.1.5.5.7.48.3 and its
                  &lt;tt&gt;accessLocation&lt;/tt&gt; field should contain an HTTP or HTTPS URL.                
                <param>
                    tsaCertificate An X.509 certificate for the TSA.                    
                </param>
                <return>
                    An HTTP or HTTPS URL or null if none was found.                    
                </return>
            </javadoc>
            <method name="getTimestampingUrl" type="String" line="145">
                <params>
                    <param name="tsaCertificate" type="X509Certificate"/>
                </params>
                <scope line="146"/>
                <scope line="149">
                    <declaration name="extensionValue" type="byte[]" line="150"/>
                    <scope line="151"/>
                    <declaration name="der" type="DerInputStream" line="154"/>
                    <declaration name="derValue" type="DerValue[]" line="156"/>
                    <declaration name="description" type="AccessDescription" line="157"/>
                    <declaration name="location" type="GeneralName" line="158"/>
                    <declaration name="uri" type="URIName" line="159"/>
                    <scope line="160">
                        <scope line="162">
                            <scope line="164">
                                <scope line="166"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="173"/>
            </method>
            <method name="generateTimestampToken" type="byte[]" line="177">
                <params>
                    <param name="toBeTimestamped" type="byte[]"/>
                </params>
                <scope line="178">
                    <scope line="179"/>
                    <scope line="182"/>
                </scope>
                <declaration name="digest" type="byte[]" line="185"/>
                <declaration name="tsQuery" type="TSRequest" line="186"/>
                <declaration name="nonce" type="BigInteger" line="187"/>
                <scope line="188"/>
                <declaration name="tsa" type="Timestamper" line="193"/>
                <declaration name="tsReply" type="TSResponse" line="194"/>
                <declaration name="status" type="int" line="195"/>
                <scope line="196">
                    <declaration name="failureCode" type="int" line="197"/>
                    <scope line="198"/>
                    <scope line="201"/>
                </scope>
                <declaration name="tsToken" type="PKCS7" line="205"/>
                <declaration name="tst" type="TimestampToken" line="206"/>
                <scope line="207"/>
                <scope line="210"/>
                <declaration name="replyNonce" type="BigInteger" line="214"/>
                <scope line="215"/>
                <scope line="218"/>
                <scope line="221">
                    <declaration name="cert" type="X509Certificate" line="222"/>
                    <scope line="223"/>
                    <scope line="226">
                        <scope line="227"/>
                        <declaration name="keyPurposes" type="List" line="230"/>
                        <scope line="231"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>