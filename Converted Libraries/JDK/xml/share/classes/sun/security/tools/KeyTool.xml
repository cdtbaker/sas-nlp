<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.tools">
        <import package="java.io"/>
        <import package="java.security.CodeSigner"/>
        <import package="java.security.KeyStore"/>
        <import package="java.security.KeyStoreException"/>
        <import package="java.security.MessageDigest"/>
        <import package="java.security.Key"/>
        <import package="java.security.PublicKey"/>
        <import package="java.security.PrivateKey"/>
        <import package="java.security.Security"/>
        <import package="java.security.Signature"/>
        <import package="java.security.Timestamp"/>
        <import package="java.security.UnrecoverableEntryException"/>
        <import package="java.security.UnrecoverableKeyException"/>
        <import package="java.security.Principal"/>
        <import package="java.security.Provider"/>
        <import package="java.security.cert.Certificate"/>
        <import package="java.security.cert.CertificateFactory"/>
        <import package="java.security.cert.CRL"/>
        <import package="java.security.cert.X509Certificate"/>
        <import package="java.security.cert.CertificateException"/>
        <import package="java.text.Collator"/>
        <import package="java.text.MessageFormat"/>
        <import package="java.util"/>
        <import package="java.util.jar.JarEntry"/>
        <import package="java.util.jar.JarFile"/>
        <import package="java.lang.reflect.Constructor"/>
        <import package="java.math.BigInteger"/>
        <import package="java.net.URI"/>
        <import package="java.net.URL"/>
        <import package="java.net.URLClassLoader"/>
        <import package="java.security.cert.CertStore"/>
        <import package="java.security.cert.X509CRL"/>
        <import package="java.security.cert.X509CRLEntry"/>
        <import package="java.security.cert.X509CRLSelector"/>
        <import package="javax.security.auth.x500.X500Principal"/>
        <import package="sun.misc.BASE64Encoder"/>
        <import package="sun.security.util.ObjectIdentifier"/>
        <import package="sun.security.pkcs.PKCS10"/>
        <import package="sun.security.provider.X509Factory"/>
        <import package="sun.security.util.Password"/>
        <import package="sun.security.util.PathList"/>
        <import package="javax.crypto.KeyGenerator"/>
        <import package="javax.crypto.SecretKey"/>
        <import package="javax.net.ssl.HostnameVerifier"/>
        <import package="javax.net.ssl.HttpsURLConnection"/>
        <import package="javax.net.ssl.SSLContext"/>
        <import package="javax.net.ssl.SSLSession"/>
        <import package="javax.net.ssl.TrustManager"/>
        <import package="javax.net.ssl.X509TrustManager"/>
        <import package="sun.misc.BASE64Decoder"/>
        <import package="sun.security.pkcs.PKCS10Attribute"/>
        <import package="sun.security.pkcs.PKCS9Attribute"/>
        <import package="sun.security.provider.certpath.ldap.LDAPCertStoreHelper"/>
        <import package="sun.security.util.DerValue"/>
        <import package="sun.security.x509"/>
        <import package="java.security.KeyStore"/>
        <import package="sun.security.tools.KeyTool.Command"/>
        <import package="sun.security.tools.KeyTool.Option"/>
        <class name="KeyTool" line="60">
            <javadoc line="60">
                This tool manages keystores.                
                <author>
                    Jan Luehe                    
                </author>
                <see>
                    java.security.KeyStore                    
                </see>
                <see>
                    sun.security.provider.KeyProtector                    
                </see>
                <see>
                    sun.security.provider.JavaKeyStore                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <declaration name="debug" type="boolean" line="69"/>
            <declaration name="command" type="Command" line="70"/>
            <declaration name="sigAlgName" type="String" line="71"/>
            <declaration name="keyAlgName" type="String" line="72"/>
            <declaration name="verbose" type="boolean" line="73"/>
            <declaration name="keysize" type="int" line="74"/>
            <declaration name="rfc" type="boolean" line="75"/>
            <declaration name="validity" type="long" line="76"/>
            <declaration name="alias" type="String" line="77"/>
            <declaration name="dname" type="String" line="78"/>
            <declaration name="dest" type="String" line="79"/>
            <declaration name="filename" type="String" line="80"/>
            <declaration name="infilename" type="String" line="81"/>
            <declaration name="outfilename" type="String" line="82"/>
            <declaration name="srcksfname" type="String" line="83"/>
            <declaration name="providers" type="Set&amp;lt;Pair&amp;lt;String,String&amp;gt;&amp;gt;" line="84"/>
            <declaration name="storetype" type="String" line="85"/>
            <declaration name="srcProviderName" type="String" line="86"/>
            <declaration name="providerName" type="String" line="87"/>
            <declaration name="pathlist" type="String" line="88"/>
            <declaration name="storePass" type="char[]" line="89"/>
            <declaration name="storePassNew" type="char[]" line="90"/>
            <declaration name="keyPass" type="char[]" line="91"/>
            <declaration name="keyPassNew" type="char[]" line="92"/>
            <declaration name="newPass" type="char[]" line="93"/>
            <declaration name="destKeyPass" type="char[]" line="94"/>
            <declaration name="srckeyPass" type="char[]" line="95"/>
            <declaration name="ksfname" type="String" line="96"/>
            <declaration name="ksfile" type="File" line="97"/>
            <declaration name="ksStream" type="InputStream" line="98"/>
            <declaration name="sslserver" type="String" line="99"/>
            <declaration name="jarfile" type="String" line="100"/>
            <declaration name="keyStore" type="KeyStore" line="101"/>
            <declaration name="token" type="boolean" line="102"/>
            <declaration name="nullStream" type="boolean" line="103"/>
            <declaration name="kssave" type="boolean" line="104"/>
            <declaration name="noprompt" type="boolean" line="105"/>
            <declaration name="trustcacerts" type="boolean" line="106"/>
            <declaration name="protectedPath" type="boolean" line="107"/>
            <declaration name="srcprotectedPath" type="boolean" line="108"/>
            <declaration name="cf" type="CertificateFactory" line="109"/>
            <declaration name="caks" type="KeyStore" line="110"/>
            <declaration name="srcstorePass" type="char[]" line="111"/>
            <declaration name="srcstoretype" type="String" line="112"/>
            <declaration name="passwords" type="Set&amp;lt;char[]&amp;gt;" line="113"/>
            <declaration name="startDate" type="String" line="114"/>
            <declaration name="ids" type="List&amp;lt;String&amp;gt;" line="115"/>
            <declaration name="v3ext" type="List&amp;lt;String&amp;gt;" line="116"/>
            <declaration name="Command" type="enum" line="117"/>
            <scope line="117"/>
            <method name="Command" type="constructor" line="119">
                <params>
                    <param name="d" type="String"/>
                    <param name="o" type="Option"/>
                </params>
            </method>
            <method name="toString" type="String" line="123"/>
            <declaration name="Option" type="enum" line="127"/>
            <method name="ALIAS" type="constructor" line="127"/>
            <method name="Option" type="constructor" line="128">
                <params>
                    <param name="name" type="String"/>
                    <param name="arg" type="String"/>
                    <param name="description" type="String"/>
                </params>
            </method>
            <method name="toString" type="String" line="133"/>
            <declaration name="PARAM_STRING" type="Class[]" line="137"/>
            <declaration name="JKS" type="String" line="138"/>
            <declaration name="NONE" type="String" line="139"/>
            <declaration name="P11KEYSTORE" type="String" line="140"/>
            <declaration name="P12KEYSTORE" type="String" line="141"/>
            <declaration name="keyAlias" type="String" line="142"/>
            <declaration name="rb" type="java.util.ResourceBundle" line="143"/>
            <declaration name="collator" type="Collator" line="144"/>
            <scope line="145"/>
            <method name="KeyTool" type="constructor" line="148"/>
            <method name="main" type="void" line="150">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <declaration name="kt" type="KeyTool" line="151"/>
            </method>
            <method name="run" type="void" line="154">
                <params>
                    <param name="args" type="String[]"/>
                    <param name="out" type="PrintStream"/>
                </params>
                <scope line="155">
                    <scope line="157"/>
                </scope>
                <scope line="161">
                    <scope line="163"/>
                    <scope line="166"/>
                    <scope line="169"/>
                </scope>
                <scope line="173">
                    <scope line="174">
                        <scope line="175"/>
                    </scope>
                    <scope line="180"/>
                </scope>
            </method>
            <javadoc line="185">
                Parse command line arguments.                
            </javadoc>
            <method name="parseArgs" type="void" line="188">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <declaration name="i" type="int" line="189"/>
                <declaration name="help" type="boolean" line="190"/>
                <scope line="191">
                    <declaration name="flags" type="String" line="192"/>
                    <scope line="193">
                        <scope line="194">
                            <scope line="195"/>
                        </scope>
                    </scope>
                    <declaration name="modifier" type="String" line="201"/>
                    <declaration name="pos" type="int" line="202"/>
                    <scope line="203"/>
                    <declaration name="isCommand" type="boolean" line="207"/>
                    <scope line="208">
                        <scope line="209"/>
                    </scope>
                    <scope line="215"/>
                    <scope line="217"/>
                    <scope line="220"/>
                    <scope line="223"/>
                    <scope line="226"/>
                    <scope line="229"/>
                    <scope line="232"/>
                    <scope line="236"/>
                    <scope line="239"/>
                    <scope line="243"/>
                    <scope line="246"/>
                    <scope line="250"/>
                    <scope line="253"/>
                    <scope line="256"/>
                    <scope line="259"/>
                    <scope line="263"/>
                    <scope line="267"/>
                    <scope line="271"/>
                    <scope line="274"/>
                    <scope line="277"/>
                    <scope line="280"/>
                    <scope line="283"/>
                    <scope line="286"/>
                    <scope line="289"/>
                    <scope line="292"/>
                    <scope line="295"/>
                    <scope line="298"/>
                    <scope line="301"/>
                    <scope line="304"/>
                    <scope line="307"/>
                    <scope line="310"/>
                    <scope line="313"/>
                    <scope line="316"/>
                    <scope line="319">
                        <scope line="320"/>
                        <declaration name="providerClass" type="String" line="323"/>
                        <declaration name="providerArg" type="String" line="324"/>
                        <scope line="325">
                            <scope line="327"/>
                        </scope>
                    </scope>
                    <scope line="335"/>
                    <scope line="338"/>
                    <scope line="341"/>
                    <scope line="344"/>
                    <scope line="347"/>
                    <scope line="350"/>
                    <scope line="353"/>
                    <scope line="356"/>
                </scope>
                <scope line="361"/>
                <scope line="365">
                    <scope line="366"/>
                    <scope line="369"/>
                </scope>
                <scope line="374"/>
            </method>
            <method name="isKeyStoreRelated" type="boolean" line="379">
                <params>
                    <param name="cmd" type="Command"/>
                </params>
            </method>
            <javadoc line="382">
                Execute the commands.                
            </javadoc>
            <method name="doCommands" type="void" line="385">
                <params>
                    <param name="out" type="PrintStream"/>
                </params>
                <scope line="386"/>
                <scope line="390"/>
                <scope line="394">
                    <scope line="396"/>
                </scope>
                <scope line="400"/>
                <scope line="403"/>
                <scope line="408"/>
                <scope line="411"/>
                <scope line="414"/>
                <scope line="417">
                    <scope line="418"/>
                </scope>
                <scope line="422">
                    <scope line="423"/>
                </scope>
                <scope line="427">
                    <scope line="428"/>
                </scope>
                <scope line="432">
                    <scope line="433"/>
                </scope>
                <scope line="437"/>
                <scope line="440">
                    <declaration name="cl" type="ClassLoader" line="441"/>
                    <scope line="442">
                        <declaration name="path" type="String" line="443"/>
                        <declaration name="urls" type="URL[]" line="447"/>
                    </scope>
                    <scope line="450"/>
                    <scope line="453">
                        <declaration name="provName" type="String" line="454"/>
                        <declaration name="provClass" type="Class&amp;lt;?&amp;gt;" line="455"/>
                        <scope line="456"/>
                        <scope line="459"/>
                        <declaration name="provArg" type="String" line="462"/>
                        <declaration name="obj" type="Object" line="463"/>
                        <scope line="464"/>
                        <scope line="467">
                            <declaration name="c" type="Constructor&amp;lt;?&amp;gt;" line="468"/>
                        </scope>
                        <scope line="471">
                            <declaration name="form" type="MessageFormat" line="472"/>
                            <declaration name="source" type="Object[]" line="473"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="479"/>
                <scope line="483"/>
                <scope line="486"/>
                <scope line="489"/>
                <scope line="492">
                    <scope line="493"/>
                    <scope line="496">
                        <scope line="497">
                            <scope line="499"/>
                        </scope>
                        <scope line="504">
                            <scope line="505"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="511">
                    <scope line="513"/>
                </scope>
                <scope line="517">
                    <scope line="519"/>
                </scope>
                <scope line="523"/>
                <scope line="526"/>
                <scope line="529">
                    <scope line="531"/>
                </scope>
                <scope line="535"/>
                <scope line="538">
                    <scope line="539"/>
                </scope>
                <scope line="543">
                    <scope line="544">
                        <declaration name="count" type="int" line="545"/>
                        <scope line="546">
                            <scope line="547"/>
                            <scope line="550"/>
                            <scope line="556"/>
                            <scope line="560">
                                <declaration name="storePassAgain" type="char[]" line="562"/>
                                <scope line="564"/>
                            </scope>
                        </scope>
                        <scope line="572"/>
                    </scope>
                    <scope line="577">
                        <scope line="578"/>
                    </scope>
                    <scope line="585"/>
                    <scope line="588"/>
                </scope>
                <scope line="594">
                    <declaration name="form" type="MessageFormat" line="595"/>
                    <scope line="596">
                        <declaration name="source" type="Object[]" line="597"/>
                    </scope>
                    <scope line="601">
                        <declaration name="source" type="Object[]" line="602"/>
                    </scope>
                    <scope line="606">
                        <declaration name="source" type="Object[]" line="607"/>
                    </scope>
                </scope>
                <scope line="612"/>
                <scope line="615"/>
                <scope line="618">
                    <declaration name="ps" type="PrintStream" line="619"/>
                    <scope line="620"/>
                    <scope line="624"/>
                    <scope line="627">
                        <scope line="628"/>
                    </scope>
                    <scope line="632">
                        <declaration name="form" type="MessageFormat" line="633"/>
                        <declaration name="source" type="Object[]" line="634"/>
                    </scope>
                </scope>
                <scope line="639"/>
                <scope line="643">
                    <declaration name="ps" type="PrintStream" line="644"/>
                    <scope line="645"/>
                    <scope line="649"/>
                    <scope line="652">
                        <scope line="653"/>
                    </scope>
                    <scope line="657">
                        <declaration name="form" type="MessageFormat" line="658"/>
                        <declaration name="source" type="Object[]" line="659"/>
                    </scope>
                </scope>
                <scope line="663">
                    <scope line="664"/>
                </scope>
                <scope line="670">
                    <scope line="671"/>
                </scope>
                <scope line="677">
                    <declaration name="inStream" type="InputStream" line="678"/>
                    <scope line="679"/>
                    <scope line="682"/>
                    <scope line="685">
                        <scope line="686"/>
                    </scope>
                </scope>
                <scope line="691">
                    <declaration name="inStream" type="InputStream" line="692"/>
                    <scope line="693"/>
                    <declaration name="importAlias" type="String" line="696"/>
                    <scope line="697">
                        <scope line="698">
                            <scope line="700"/>
                            <scope line="703"/>
                        </scope>
                        <scope line="707">
                            <scope line="709"/>
                            <scope line="712"/>
                        </scope>
                    </scope>
                    <scope line="717">
                        <scope line="718"/>
                    </scope>
                </scope>
                <scope line="723"/>
                <scope line="727">
                    <scope line="729"/>
                    <scope line="732">
                        <declaration name="form" type="MessageFormat" line="733"/>
                        <declaration name="source" type="Object[]" line="734"/>
                    </scope>
                    <scope line="737">
                        <declaration name="form" type="MessageFormat" line="738"/>
                        <declaration name="source" type="Object[]" line="739"/>
                    </scope>
                </scope>
                <scope line="745">
                    <scope line="746"/>
                    <scope line="750"/>
                </scope>
                <scope line="755"/>
                <scope line="760">
                    <scope line="761"/>
                    <scope line="764"/>
                </scope>
                <scope line="768"/>
                <scope line="771"/>
                <scope line="775">
                    <scope line="777"/>
                </scope>
                <scope line="782">
                    <scope line="783"/>
                    <declaration name="inStream" type="InputStream" line="786"/>
                    <scope line="787"/>
                    <declaration name="ps" type="PrintStream" line="790"/>
                    <scope line="791"/>
                    <scope line="795"/>
                    <scope line="798">
                        <scope line="799"/>
                        <scope line="802"/>
                    </scope>
                </scope>
                <scope line="807">
                    <scope line="808"/>
                    <declaration name="ps" type="PrintStream" line="811"/>
                    <scope line="812"/>
                    <scope line="816"/>
                    <scope line="819">
                        <scope line="820"/>
                    </scope>
                </scope>
                <scope line="825">
                    <declaration name="inStream" type="InputStream" line="826"/>
                    <scope line="827"/>
                    <scope line="830"/>
                    <scope line="833">
                        <scope line="834"/>
                    </scope>
                </scope>
                <scope line="839"/>
                <scope line="842">
                    <scope line="843">
                        <declaration name="form" type="MessageFormat" line="844"/>
                        <declaration name="source" type="Object[]" line="845"/>
                    </scope>
                    <scope line="848"/>
                    <scope line="851">
                        <declaration name="fout" type="FileOutputStream" line="852"/>
                        <scope line="853"/>
                        <scope line="857">
                            <scope line="858"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="865">
                Generate a certificate: Read PKCS10 request from in, and print
                  certificate to out. Use alias as CA, sigAlgName as the signature
                  type.                
            </javadoc>
            <method name="doGenCert" type="void" line="870">
                <params>
                    <param name="alias" type="String"/>
                    <param name="sigAlgName" type="String"/>
                    <param name="in" type="InputStream"/>
                    <param name="out" type="PrintStream"/>
                </params>
                <declaration name="signerCert" type="Certificate" line="871"/>
                <declaration name="encoded" type="byte[]" line="872"/>
                <declaration name="signerCertImpl" type="X509CertImpl" line="873"/>
                <declaration name="signerCertInfo" type="X509CertInfo" line="874"/>
                <declaration name="issuer" type="X500Name" line="875"/>
                <declaration name="firstDate" type="Date" line="876"/>
                <declaration name="lastDate" type="Date" line="877"/>
                <declaration name="interval" type="CertificateValidity" line="879"/>
                <declaration name="privateKey" type="PrivateKey" line="880"/>
                <scope line="881"/>
                <declaration name="signature" type="Signature" line="884"/>
                <declaration name="info" type="X509CertInfo" line="886"/>
                <declaration name="reader" type="BufferedReader" line="892"/>
                <declaration name="canRead" type="boolean" line="893"/>
                <declaration name="sb" type="StringBuffer" line="894"/>
                <scope line="895">
                    <declaration name="s" type="String" line="896"/>
                    <scope line="898"/>
                    <scope line="901"/>
                    <scope line="904"/>
                </scope>
                <declaration name="rawReq" type="byte[]" line="908"/>
                <declaration name="req" type="PKCS10" line="909"/>
                <declaration name="reqex" type="CertificateExtensions" line="912"/>
                <declaration name="attrs" type="Iterator&amp;lt;PKCS10Attribute&amp;gt;" line="913"/>
                <scope line="914">
                    <declaration name="attr" type="PKCS10Attribute" line="915"/>
                    <scope line="916"/>
                </scope>
                <declaration name="ext" type="CertificateExtensions" line="920"/>
                <declaration name="cert" type="X509CertImpl" line="922"/>
                <scope line="925">
                    <scope line="926">
                        <declaration name="xca" type="X509Certificate" line="927"/>
                        <scope line="928"/>
                    </scope>
                </scope>
            </method>
            <method name="doGenCRL" type="void" line="934">
                <params>
                    <param name="out" type="PrintStream"/>
                </params>
                <scope line="935"/>
                <declaration name="signerCert" type="Certificate" line="938"/>
                <declaration name="encoded" type="byte[]" line="939"/>
                <declaration name="signerCertImpl" type="X509CertImpl" line="940"/>
                <declaration name="signerCertInfo" type="X509CertInfo" line="941"/>
                <declaration name="owner" type="X500Name" line="942"/>
                <declaration name="firstDate" type="Date" line="943"/>
                <declaration name="lastDate" type="Date" line="944"/>
                <declaration name="interval" type="CertificateValidity" line="946"/>
                <declaration name="privateKey" type="PrivateKey" line="947"/>
                <scope line="948"/>
                <declaration name="badCerts" type="X509CRLEntry[]" line="951"/>
                <scope line="952">
                    <declaration name="id" type="String" line="953"/>
                    <declaration name="d" type="int" line="954"/>
                    <scope line="955">
                        <declaration name="ext" type="CRLExtensions" line="956"/>
                    </scope>
                    <scope line="960"/>
                </scope>
                <declaration name="crl" type="X509CRLImpl" line="964"/>
                <scope line="966"/>
                <scope line="971"/>
            </method>
            <javadoc line="975">
                Creates a PKCS#10 cert signing request, corresponding to the
                  keys (and name) associated with a given alias.                
            </javadoc>
            <method name="doCertReq" type="void" line="979">
                <params>
                    <param name="alias" type="String"/>
                    <param name="sigAlgName" type="String"/>
                    <param name="out" type="PrintStream"/>
                </params>
                <scope line="980"/>
                <declaration name="objs" type="Pair&amp;lt;Key,char[]&amp;gt;" line="983"/>
                <declaration name="privKey" type="PrivateKey" line="984"/>
                <scope line="985"/>
                <declaration name="cert" type="Certificate" line="988"/>
                <scope line="989">
                    <declaration name="form" type="MessageFormat" line="990"/>
                    <declaration name="source" type="Object[]" line="991"/>
                </scope>
                <declaration name="request" type="PKCS10" line="994"/>
                <declaration name="ext" type="CertificateExtensions" line="995"/>
                <scope line="997"/>
                <declaration name="signature" type="Signature" line="1000"/>
                <declaration name="subject" type="X500Name" line="1002"/>
            </method>
            <javadoc line="1006">
                Deletes an entry from the keystore.                
            </javadoc>
            <method name="doDeleteEntry" type="void" line="1009">
                <params>
                    <param name="alias" type="String"/>
                </params>
                <scope line="1010">
                    <declaration name="form" type="MessageFormat" line="1011"/>
                    <declaration name="source" type="Object[]" line="1012"/>
                </scope>
            </method>
            <javadoc line="1017">
                Exports a certificate from the keystore.                
            </javadoc>
            <method name="doExportCert" type="void" line="1020">
                <params>
                    <param name="alias" type="String"/>
                    <param name="out" type="PrintStream"/>
                </params>
                <scope line="1021"/>
                <scope line="1024"/>
                <scope line="1027">
                    <declaration name="form" type="MessageFormat" line="1028"/>
                    <declaration name="source" type="Object[]" line="1029"/>
                </scope>
                <declaration name="cert" type="X509Certificate" line="1032"/>
                <scope line="1033">
                    <declaration name="form" type="MessageFormat" line="1034"/>
                    <declaration name="source" type="Object[]" line="1035"/>
                </scope>
            </method>
            <javadoc line="1040">
                Prompt the user for a keypass when generating a key entry.                
                <param>
                    alias the entry we will set password for                    
                </param>
                <param>
                    orig the original entry of doing a dup, null if generate new                    
                </param>
                <param>
                    origPass the password to copy from if user press ENTER                    
                </param>
            </javadoc>
            <method name="promptForKeyPass" type="char[]" line="1046">
                <params>
                    <param name="alias" type="String"/>
                    <param name="orig" type="String"/>
                    <param name="origPass" type="char[]"/>
                </params>
                <scope line="1047"/>
                <scope line="1050">
                    <declaration name="count" type="int" line="1051"/>
                    <scope line="1052">
                        <declaration name="form" type="MessageFormat" line="1053"/>
                        <declaration name="source" type="Object[]" line="1054"/>
                        <scope line="1056"/>
                        <scope line="1059">
                            <declaration name="src" type="Object[]" line="1061"/>
                        </scope>
                        <declaration name="entered" type="char[]" line="1065"/>
                        <scope line="1067"/>
                        <scope line="1070">
                            <declaration name="passAgain" type="char[]" line="1072"/>
                            <scope line="1074"/>
                        </scope>
                        <scope line="1080"/>
                    </scope>
                    <scope line="1084">
                        <scope line="1085"/>
                        <scope line="1088"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="1095">
                Creates a new secret key.                
            </javadoc>
            <method name="doGenSecretKey" type="void" line="1098">
                <params>
                    <param name="alias" type="String"/>
                    <param name="keyAlgName" type="String"/>
                    <param name="keysize" type="int"/>
                </params>
                <scope line="1099"/>
                <scope line="1102">
                    <declaration name="form" type="MessageFormat" line="1103"/>
                    <declaration name="source" type="Object[]" line="1104"/>
                </scope>
                <declaration name="secKey" type="SecretKey" line="1107"/>
                <declaration name="keygen" type="KeyGenerator" line="1108"/>
                <scope line="1109"/>
                <scope line="1112"/>
                <scope line="1115"/>
                <scope line="1118"/>
                <scope line="1122"/>
            </method>
            <javadoc line="1127">
                If no signature algorithm was specified at the command line,
                  we choose one that is compatible with the selected private key                
            </javadoc>
            <method name="getCompatibleSigAlgName" type="String" line="1131">
                <params>
                    <param name="keyAlgName" type="String"/>
                </params>
                <scope line="1132"/>
                <scope line="1135"/>
                <scope line="1138"/>
                <scope line="1141"/>
            </method>
            <javadoc line="1145">
                Creates a new key pair and self-signed certificate.                
            </javadoc>
            <method name="doGenKeyPair" type="void" line="1148">
                <params>
                    <param name="alias" type="String"/>
                    <param name="dname" type="String"/>
                    <param name="keyAlgName" type="String"/>
                    <param name="keysize" type="int"/>
                    <param name="sigAlgName" type="String"/>
                </params>
                <scope line="1149">
                    <scope line="1150"/>
                    <scope line="1153"/>
                    <scope line="1156"/>
                </scope>
                <scope line="1160"/>
                <scope line="1163">
                    <declaration name="form" type="MessageFormat" line="1164"/>
                    <declaration name="source" type="Object[]" line="1165"/>
                </scope>
                <scope line="1168"/>
                <declaration name="keypair" type="CertAndKeyGen" line="1171"/>
                <declaration name="x500Name" type="X500Name" line="1172"/>
                <scope line="1173"/>
                <scope line="1176"/>
                <declaration name="privKey" type="PrivateKey" line="1180"/>
                <declaration name="chain" type="X509Certificate[]" line="1181"/>
                <scope line="1183">
                    <declaration name="form" type="MessageFormat" line="1184"/>
                    <declaration name="source" type="Object[]" line="1185"/>
                </scope>
                <scope line="1188"/>
            </method>
            <javadoc line="1194">
                Clones an entry                
                <param>
                    orig original alias                    
                </param>
                <param>
                    dest destination alias                    
                </param>
                <changePassword>
                    if the password can be changed                    
                </changePassword>
            </javadoc>
            <method name="doCloneEntry" type="void" line="1200">
                <params>
                    <param name="orig" type="String"/>
                    <param name="dest" type="String"/>
                    <param name="changePassword" type="boolean"/>
                </params>
                <scope line="1201"/>
                <scope line="1204">
                    <declaration name="form" type="MessageFormat" line="1205"/>
                    <declaration name="source" type="Object[]" line="1206"/>
                </scope>
                <declaration name="objs" type="Pair&amp;lt;Entry,char[]&amp;gt;" line="1209"/>
                <declaration name="entry" type="Entry" line="1210"/>
                <declaration name="pp" type="PasswordProtection" line="1212"/>
                <scope line="1213">
                    <scope line="1214"/>
                    <scope line="1217">
                        <scope line="1218"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="1226">
                Changes a key password.                
            </javadoc>
            <method name="doChangeKeyPasswd" type="void" line="1229">
                <params>
                    <param name="alias" type="String"/>
                </params>
                <scope line="1230"/>
                <declaration name="objs" type="Pair&amp;lt;Key,char[]&amp;gt;" line="1233"/>
                <declaration name="privKey" type="Key" line="1234"/>
                <scope line="1235"/>
                <scope line="1238">
                    <declaration name="form" type="MessageFormat" line="1239"/>
                    <declaration name="source" type="Object[]" line="1240"/>
                </scope>
            </method>
            <javadoc line="1245">
                Imports a JDK 1.1-style identity database. We can only store one
                  certificate per identity, because we use the identity&apos;s name as the
                  alias (which references a keystore entry), and aliases must be unique.                
            </javadoc>
            <method name="doImportIdentityDatabase" type="void" line="1250">
                <params>
                    <param name="in" type="InputStream"/>
                </params>
            </method>
            <javadoc line="1253">
                Prints a single keystore entry.                
            </javadoc>
            <method name="doPrintEntry" type="void" line="1256">
                <params>
                    <param name="alias" type="String"/>
                    <param name="out" type="PrintStream"/>
                    <param name="printWarning" type="boolean"/>
                </params>
                <scope line="1257"/>
                <scope line="1260">
                    <declaration name="form" type="MessageFormat" line="1261"/>
                    <declaration name="source" type="Object[]" line="1262"/>
                </scope>
                <scope line="1265">
                    <declaration name="form" type="MessageFormat" line="1266"/>
                    <declaration name="source" type="Object[]" line="1267"/>
                    <scope line="1269">
                        <declaration name="src" type="Object[]" line="1271"/>
                    </scope>
                </scope>
                <scope line="1275">
                    <scope line="1276">
                        <declaration name="form" type="MessageFormat" line="1277"/>
                        <declaration name="source" type="Object[]" line="1278"/>
                    </scope>
                    <scope line="1281">
                        <declaration name="form" type="MessageFormat" line="1282"/>
                        <declaration name="source" type="Object[]" line="1283"/>
                    </scope>
                </scope>
                <scope line="1287">
                    <scope line="1288">
                        <declaration name="source" type="Object[]" line="1289"/>
                    </scope>
                    <scope line="1292"/>
                </scope>
                <scope line="1296">
                    <scope line="1297">
                        <declaration name="source" type="Object[]" line="1298"/>
                    </scope>
                    <scope line="1301"/>
                    <declaration name="chain" type="Certificate[]" line="1304"/>
                    <scope line="1305">
                        <scope line="1306">
                            <scope line="1308">
                                <declaration name="form" type="MessageFormat" line="1309"/>
                                <declaration name="source" type="Object[]" line="1310"/>
                                <scope line="1312"/>
                                <scope line="1315"/>
                                <scope line="1318"/>
                            </scope>
                        </scope>
                        <scope line="1323"/>
                    </scope>
                </scope>
                <scope line="1328">
                    <declaration name="cert" type="Certificate" line="1329"/>
                    <declaration name="source" type="Object[]" line="1330"/>
                    <declaration name="mf" type="String" line="1331"/>
                    <scope line="1332"/>
                    <scope line="1336"/>
                    <scope line="1340"/>
                    <scope line="1343"/>
                </scope>
                <scope line="1348"/>
            </method>
            <javadoc line="1352">
                Load the srckeystore from a stream, used in -importkeystore                
                <returns>
                    the src KeyStore                    
                </returns>
            </javadoc>
            <method name="loadSourceKeyStore" type="KeyStore" line="1356">
                <declaration name="isPkcs11" type="boolean" line="1357"/>
                <declaration name="is" type="InputStream" line="1358"/>
                <scope line="1359">
                    <scope line="1360"/>
                </scope>
                <scope line="1367">
                    <scope line="1368">
                        <declaration name="srcksfile" type="File" line="1369"/>
                        <scope line="1370"/>
                    </scope>
                    <scope line="1375"/>
                </scope>
                <declaration name="store" type="KeyStore" line="1379"/>
                <scope line="1380">
                    <scope line="1381"/>
                    <scope line="1384"/>
                    <scope line="1387"/>
                    <scope line="1393">
                        <scope line="1394">
                            <declaration name="form" type="MessageFormat" line="1395"/>
                            <declaration name="source" type="Object[]" line="1396"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="1403">
                    <scope line="1404"/>
                </scope>
                <scope line="1408"/>
            </method>
            <javadoc line="1417">
                import all keys and certs from importkeystore.
                  keep alias unchanged if no name conflict, otherwise, prompt.
                  keep keypass unchanged for keys                
            </javadoc>
            <method name="doImportKeyStore" type="void" line="1422">
                <scope line="1423"/>
                <scope line="1426">
                    <scope line="1427"/>
                </scope>
            </method>
            <javadoc line="1433">
                Import a single entry named alias from srckeystore                
                <returns>
                    1 if the import action succeed
                      0 if user choose to ignore an alias-dumplicated entry
                      2 if setEntry throws Exception                    
                </returns>
            </javadoc>
            <method name="doImportKeyStoreSingle" type="int" line="1439">
                <params>
                    <param name="srckeystore" type="KeyStore"/>
                    <param name="alias" type="String"/>
                </params>
                <declaration name="newAlias" type="String" line="1440"/>
                <scope line="1441">
                    <declaration name="source" type="Object[]" line="1442"/>
                    <scope line="1443"/>
                    <scope line="1446">
                        <declaration name="reply" type="String" line="1447"/>
                        <scope line="1448">
                            <scope line="1450"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="objs" type="Pair&amp;lt;Entry,char[]&amp;gt;" line="1457"/>
                <declaration name="entry" type="Entry" line="1458"/>
                <declaration name="pp" type="PasswordProtection" line="1459"/>
                <scope line="1460"/>
                <scope line="1463"/>
                <scope line="1466"/>
                <scope line="1470">
                    <declaration name="source2" type="Object[]" line="1471"/>
                    <declaration name="form" type="MessageFormat" line="1472"/>
                </scope>
            </method>
            <method name="doImportKeyStoreAll" type="void" line="1477">
                <params>
                    <param name="srckeystore" type="KeyStore"/>
                </params>
                <declaration name="ok" type="int" line="1478"/>
                <declaration name="count" type="int" line="1479"/>
                <scope line="1480">
                    <declaration name="alias" type="String" line="1481"/>
                    <declaration name="result" type="int" line="1482"/>
                    <scope line="1483">
                        <declaration name="source" type="Object[]" line="1485"/>
                        <declaration name="form" type="MessageFormat" line="1486"/>
                    </scope>
                    <scope line="1489">
                        <scope line="1490">
                            <declaration name="reply" type="String" line="1491"/>
                            <scope line="1492"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="source" type="Object[]" line="1498"/>
                <declaration name="form" type="MessageFormat" line="1499"/>
            </method>
            <javadoc line="1502">
                Prints all keystore entries.                
            </javadoc>
            <method name="doPrintEntries" type="void" line="1505">
                <params>
                    <param name="out" type="PrintStream"/>
                </params>
                <scope line="1506"/>
                <scope line="1509"/>
                <declaration name="form" type="MessageFormat" line="1515"/>
                <declaration name="source" type="Object[]" line="1517"/>
                <scope line="1520">
                    <declaration name="alias" type="String" line="1521"/>
                    <scope line="1523"/>
                </scope>
            </method>
            <method name="e2i" type="Iterable&lt;T&gt;" line="1530">
                <params>
                    <param name="e" type="Enumeration&lt;T&gt;"/>
                </params>
                <anonymous_class line="1531">
                    <method name="iterator" type="Iterator&lt;T&gt;" line="1532">
                        <anonymous_class line="1533">
                            <method name="hasNext" type="boolean" line="1534"/>
                            <method name="next" type="T" line="1537"/>
                            <method name="remove" type="void" line="1540"/>
                        </anonymous_class>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="1549">
                Loads CRLs from a source. This method is also called in JarSigner.                
                <param>
                    src the source, which means System.in if null, or a URI,
                      or a bare file path name                    
                </param>
            </javadoc>
            <method name="loadCRLs" type="Collection&lt;? extends CRL&gt;" line="1554">
                <params>
                    <param name="src" type="String"/>
                </params>
                <declaration name="in" type="InputStream" line="1555"/>
                <declaration name="uri" type="URI" line="1556"/>
                <scope line="1557"/>
                <scope line="1560">
                    <scope line="1561">
                        <scope line="1563"/>
                        <scope line="1565"/>
                    </scope>
                    <scope line="1569">
                        <scope line="1570"/>
                        <scope line="1573">
                            <scope line="1574"/>
                            <scope line="1577"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="1583">
                    <scope line="1584">
                        <declaration name="bout" type="ByteArrayOutputStream" line="1585"/>
                        <declaration name="b" type="byte[]" line="1586"/>
                        <scope line="1587">
                            <declaration name="len" type="int" line="1588"/>
                        </scope>
                    </scope>
                    <scope line="1594">
                        <scope line="1595"/>
                    </scope>
                </scope>
                <scope line="1600">
                    <declaration name="path" type="String" line="1601"/>
                    <declaration name="h" type="LDAPCertStoreHelper" line="1603"/>
                    <declaration name="s" type="CertStore" line="1604"/>
                    <declaration name="sel" type="X509CRLSelector" line="1605"/>
                </scope>
            </method>
            <javadoc line="1609">
                Returns CRLs described in a X509Certificate&apos;s CRLDistributionPoints
                  Extension. Only those containing a general name of type URI are read.                
            </javadoc>
            <method name="readCRLsFromCert" type="List&lt;CRL&gt;" line="1613">
                <params>
                    <param name="cert" type="X509Certificate"/>
                </params>
                <declaration name="crls" type="List&amp;lt;CRL&amp;gt;" line="1614"/>
                <declaration name="ext" type="CRLDistributionPointsExtension" line="1615"/>
                <scope line="1617">
                    <declaration name="names" type="GeneralNames" line="1618"/>
                    <scope line="1619">
                        <scope line="1620">
                            <scope line="1621">
                                <declaration name="uriName" type="URIName" line="1622"/>
                                <scope line="1623">
                                    <scope line="1624"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="verifyCRL" type="String" line="1635">
                <params>
                    <param name="ks" type="KeyStore"/>
                    <param name="crl" type="CRL"/>
                </params>
                <declaration name="xcrl" type="X509CRLImpl" line="1636"/>
                <declaration name="issuer" type="X500Principal" line="1637"/>
                <scope line="1638">
                    <declaration name="cert" type="Certificate" line="1639"/>
                    <scope line="1640">
                        <declaration name="xcert" type="X509Certificate" line="1641"/>
                        <scope line="1642">
                            <scope line="1643"/>
                            <scope line="1647"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="doPrintCRL" type="void" line="1654">
                <params>
                    <param name="src" type="String"/>
                    <param name="out" type="PrintStream"/>
                </params>
                <scope line="1655">
                    <declaration name="issuer" type="String" line="1657"/>
                    <scope line="1658">
                        <scope line="1660"/>
                    </scope>
                    <scope line="1664">
                        <scope line="1666"/>
                    </scope>
                    <scope line="1670"/>
                </scope>
            </method>
            <method name="printCRL" type="void" line="1677">
                <params>
                    <param name="crl" type="CRL"/>
                    <param name="out" type="PrintStream"/>
                </params>
                <scope line="1678">
                    <declaration name="xcrl" type="X509CRL" line="1679"/>
                </scope>
                <scope line="1684"/>
            </method>
            <method name="doPrintCertReq" type="void" line="1688">
                <params>
                    <param name="in" type="InputStream"/>
                    <param name="out" type="PrintStream"/>
                </params>
                <declaration name="reader" type="BufferedReader" line="1689"/>
                <declaration name="sb" type="StringBuffer" line="1690"/>
                <declaration name="started" type="boolean" line="1691"/>
                <scope line="1692">
                    <declaration name="s" type="String" line="1693"/>
                    <scope line="1695">
                        <scope line="1696"/>
                    </scope>
                    <scope line="1700">
                        <scope line="1701"/>
                    </scope>
                </scope>
                <declaration name="req" type="PKCS10" line="1707"/>
                <declaration name="pkey" type="PublicKey" line="1708"/>
                <scope line="1710">
                    <declaration name="oid" type="ObjectIdentifier" line="1711"/>
                    <scope line="1712">
                        <declaration name="exts" type="CertificateExtensions" line="1713"/>
                        <scope line="1714"/>
                    </scope>
                    <scope line="1718"/>
                </scope>
                <scope line="1723"/>
            </method>
            <javadoc line="1727">
                Reads a certificate (or certificate chain) and prints its contents in
                  a human readable format.                
            </javadoc>
            <method name="printCertFromStream" type="void" line="1731">
                <params>
                    <param name="in" type="InputStream"/>
                    <param name="out" type="PrintStream"/>
                </params>
                <declaration name="c" type="Collection&amp;lt;? extends Certificate&amp;gt;" line="1732"/>
                <scope line="1733"/>
                <scope line="1736"/>
                <scope line="1739"/>
                <declaration name="certs" type="Certificate[]" line="1742"/>
                <scope line="1743">
                    <declaration name="x509Cert" type="X509Certificate" line="1744"/>
                    <scope line="1745"/>
                    <scope line="1748"/>
                    <scope line="1751">
                        <declaration name="form" type="MessageFormat" line="1752"/>
                        <declaration name="source" type="Object[]" line="1753"/>
                    </scope>
                    <scope line="1758"/>
                </scope>
            </method>
            <method name="doPrintCert" type="void" line="1763">
                <params>
                    <param name="out" type="PrintStream"/>
                </params>
            </method>
            <method name="verify" type="boolean" line="1866">
                <params>
                    <param name="hostname" type="String"/>
                    <param name="session" type="SSLSession"/>
                </params>
            </method>
            <declaration name="ex" type="Exception" line="1871"/>
            <scope line="1872"/>
            <declaration name="e" type="Exception" line="1875"/>
            <scope line="1875"/>
            <scope line="1878">
                <declaration name="e" type="Exception" line="1879"/>
                <scope line="1880"/>
            </scope>
            <declaration name="inStream" type="InputStream" line="1887"/>
            <scope line="1888"/>
            <scope line="1891"/>
            <scope line="1894">
                <scope line="1895"/>
            </scope>
            <scope line="-1"/>
            <javadoc line="1901">
                Creates a self-signed certificate, and stores it as a single-element
                  certificate chain.                
            </javadoc>
            <method name="doSelfCert" type="void" line="1905">
                <params>
                    <param name="alias" type="String"/>
                    <param name="dname" type="String"/>
                    <param name="sigAlgName" type="String"/>
                </params>
                <scope line="1906"/>
                <declaration name="objs" type="Pair&amp;lt;Key,char[]&amp;gt;" line="1909"/>
                <declaration name="privKey" type="PrivateKey" line="1910"/>
                <scope line="1912"/>
                <declaration name="oldCert" type="Certificate" line="1915"/>
                <scope line="1916">
                    <declaration name="form" type="MessageFormat" line="1917"/>
                    <declaration name="source" type="Object[]" line="1918"/>
                </scope>
                <scope line="1921">
                    <declaration name="form" type="MessageFormat" line="1922"/>
                    <declaration name="source" type="Object[]" line="1923"/>
                </scope>
                <declaration name="encoded" type="byte[]" line="1926"/>
                <declaration name="certImpl" type="X509CertImpl" line="1927"/>
                <declaration name="certInfo" type="X509CertInfo" line="1928"/>
                <declaration name="firstDate" type="Date" line="1929"/>
                <declaration name="lastDate" type="Date" line="1930"/>
                <declaration name="interval" type="CertificateValidity" line="1932"/>
                <declaration name="owner" type="X500Name" line="1935"/>
                <scope line="1936"/>
                <scope line="1939"/>
                <declaration name="newCert" type="X509CertImpl" line="1944"/>
                <declaration name="sigAlgid" type="AlgorithmId" line="1946"/>
                <declaration name="ext" type="CertificateExtensions" line="1949"/>
                <scope line="1954"/>
            </method>
            <javadoc line="1960">
                Processes a certificate reply from a certificate authority.
                  &lt;p&gt;Builds a certificate chain on top of the certificate reply,
                  using trusted certificates from the keystore. The chain is complete
                  after a self-signed certificate has been encountered. The self-signed
                  certificate is considered a root certificate authority, and is stored
                  at the end of the chain.
                  &lt;p&gt;The newly generated chain replaces the old chain associated with the
                  key entry.                
                <return>
                    true if the certificate reply was installed, otherwise false.                    
                </return>
            </javadoc>
            <method name="installReply" type="boolean" line="1971">
                <params>
                    <param name="alias" type="String"/>
                    <param name="in" type="InputStream"/>
                </params>
                <scope line="1972"/>
                <declaration name="objs" type="Pair&amp;lt;Key,char[]&amp;gt;" line="1975"/>
                <declaration name="privKey" type="PrivateKey" line="1976"/>
                <scope line="1977"/>
                <declaration name="userCert" type="Certificate" line="1980"/>
                <scope line="1981">
                    <declaration name="form" type="MessageFormat" line="1982"/>
                    <declaration name="source" type="Object[]" line="1983"/>
                </scope>
                <declaration name="c" type="Collection&amp;lt;? extends Certificate&amp;gt;" line="1986"/>
                <scope line="1987"/>
                <declaration name="replyCerts" type="Certificate[]" line="1990"/>
                <declaration name="newChain" type="Certificate[]" line="1991"/>
                <scope line="1992"/>
                <scope line="1995"/>
                <scope line="1998"/>
                <scope line="2002"/>
            </method>
            <javadoc line="2006">
                Imports a certificate and adds it to the list of trusted certificates.                
                <return>
                    true if the certificate was added, otherwise false.                    
                </return>
            </javadoc>
            <method name="addTrustedCert" type="boolean" line="2010">
                <params>
                    <param name="alias" type="String"/>
                    <param name="in" type="InputStream"/>
                </params>
                <scope line="2011"/>
                <scope line="2014">
                    <declaration name="form" type="MessageFormat" line="2015"/>
                    <declaration name="source" type="Object[]" line="2016"/>
                </scope>
                <declaration name="cert" type="X509Certificate" line="2019"/>
                <scope line="2020"/>
                <scope line="2023"/>
                <scope line="2026"/>
                <declaration name="selfSigned" type="boolean" line="2029"/>
                <scope line="2030"/>
                <scope line="2034"/>
                <declaration name="reply" type="String" line="2038"/>
                <declaration name="trustalias" type="String" line="2039"/>
                <scope line="2040">
                    <declaration name="form" type="MessageFormat" line="2041"/>
                    <declaration name="source" type="Object[]" line="2042"/>
                </scope>
                <scope line="2046">
                    <scope line="2047">
                        <declaration name="form" type="MessageFormat" line="2048"/>
                        <declaration name="source" type="Object[]" line="2049"/>
                    </scope>
                    <scope line="2053"/>
                </scope>
                <scope line="2058">
                    <scope line="2059"/>
                    <scope line="2063"/>
                </scope>
                <scope line="2067">
                    <declaration name="chain" type="Certificate[]" line="2068"/>
                    <scope line="2069"/>
                </scope>
                <scope line="2074">
                    <scope line="2077"/>
                    <scope line="2081"/>
                </scope>
            </method>
            <javadoc line="2087">
                Prompts user for new password. New password must be different from
                  old one.                
                <param>
                    prompt the message that gets prompted on the screen                    
                </param>
                <param>
                    oldPasswd the current (i.e., old) password                    
                </param>
            </javadoc>
            <method name="getNewPasswd" type="char[]" line="2093">
                <params>
                    <param name="prompt" type="String"/>
                    <param name="oldPasswd" type="char[]"/>
                </params>
                <declaration name="entered" type="char[]" line="2094"/>
                <declaration name="reentered" type="char[]" line="2095"/>
                <scope line="2096">
                    <declaration name="form" type="MessageFormat" line="2097"/>
                    <declaration name="source" type="Object[]" line="2098"/>
                    <scope line="2102"/>
                    <scope line="2105"/>
                    <scope line="2108">
                        <declaration name="src" type="Object[]" line="2110"/>
                        <scope line="2114"/>
                        <scope line="2117"/>
                    </scope>
                    <scope line="2122"/>
                    <scope line="2126"/>
                </scope>
            </method>
            <javadoc line="2133">
                Prompts user for alias name.                
                <param>
                    prompt the {0} of &quot;Enter {0} alias name:  &quot; in prompt line                    
                </param>
                <returns>
                    the string entered by the user, without the \n at the end                    
                </returns>
            </javadoc>
            <method name="getAlias" type="String" line="2138">
                <params>
                    <param name="prompt" type="String"/>
                </params>
                <scope line="2139">
                    <declaration name="form" type="MessageFormat" line="2140"/>
                    <declaration name="source" type="Object[]" line="2141"/>
                </scope>
                <scope line="2144"/>
            </method>
            <javadoc line="2149">
                Prompts user for an input string from the command line (System.in)                
                <prompt>
                    the prompt string printed                    
                </prompt>
                <returns>
                    the string entered by the user, without the \n at the end                    
                </returns>
            </javadoc>
            <method name="inputStringFromStdin" type="String" line="2154">
                <params>
                    <param name="prompt" type="String"/>
                </params>
            </method>
            <javadoc line="2158">
                Prompts user for key password. User may select to choose the same
                  password (&lt;code&gt;otherKeyPass&lt;/code&gt;) as for &lt;code&gt;otherAlias&lt;/code&gt;.                
            </javadoc>
            <method name="getKeyPasswd" type="char[]" line="2162">
                <params>
                    <param name="alias" type="String"/>
                    <param name="otherAlias" type="String"/>
                    <param name="otherKeyPass" type="char[]"/>
                </params>
                <declaration name="count" type="int" line="2163"/>
                <declaration name="keyPass" type="char[]" line="2164"/>
                <scope line="2165">
                    <scope line="2166">
                        <declaration name="form" type="MessageFormat" line="2167"/>
                        <declaration name="source" type="Object[]" line="2168"/>
                        <declaration name="src" type="Object[]" line="2171"/>
                    </scope>
                    <scope line="2174">
                        <declaration name="form" type="MessageFormat" line="2175"/>
                        <declaration name="source" type="Object[]" line="2176"/>
                    </scope>
                    <scope line="2182"/>
                </scope>
                <scope line="2188"/>
            </method>
            <javadoc line="2193">
                Prints a certificate in a human readable format.                
            </javadoc>
            <method name="printX509Cert" type="void" line="2196">
                <params>
                    <param name="cert" type="X509Certificate"/>
                    <param name="out" type="PrintStream"/>
                </params>
                <declaration name="form" type="MessageFormat" line="2197"/>
                <declaration name="source" type="Object[]" line="2198"/>
                <scope line="2200">
                    <declaration name="impl" type="X509CertImpl" line="2201"/>
                    <declaration name="certInfo" type="X509CertInfo" line="2202"/>
                    <declaration name="exts" type="CertificateExtensions" line="2203"/>
                    <scope line="2204"/>
                </scope>
            </method>
            <method name="printExtensions" type="void" line="2209">
                <params>
                    <param name="title" type="String"/>
                    <param name="exts" type="CertificateExtensions"/>
                    <param name="out" type="PrintStream"/>
                </params>
                <declaration name="extnum" type="int" line="2210"/>
                <declaration name="i1" type="Iterator&amp;lt;Extension&amp;gt;" line="2211"/>
                <declaration name="i2" type="Iterator&amp;lt;Extension&amp;gt;" line="2212"/>
                <scope line="2213">
                    <declaration name="ext" type="Extension" line="2214"/>
                    <scope line="2215"/>
                    <scope line="2221">
                        <declaration name="v" type="byte[]" line="2222"/>
                        <scope line="2223"/>
                        <scope line="2226"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="2234">
                Returns true if the certificate is self-signed, false otherwise.                
            </javadoc>
            <method name="isSelfSigned" type="boolean" line="2237">
                <params>
                    <param name="cert" type="X509Certificate"/>
                </params>
            </method>
            <method name="signedBy" type="boolean" line="2240">
                <params>
                    <param name="end" type="X509Certificate"/>
                    <param name="ca" type="X509Certificate"/>
                </params>
                <scope line="2241"/>
                <scope line="2244"/>
                <scope line="2248"/>
            </method>
            <javadoc line="2252">
                Locates a signer for a given certificate from a given keystore and
                  returns the signer&apos;s certificate.                
                <param>
                    cert the certificate whose signer is searched, not null                    
                </param>
                <param>
                    ks the keystore to search with, not null                    
                </param>
                <return>
                    &lt;code&gt;cert&lt;/code&gt; itself if it&apos;s already inside &lt;code&gt;ks&lt;/code&gt;,
                      or a certificate inside &lt;code&gt;ks&lt;/code&gt; who signs &lt;code&gt;cert&lt;/code&gt;,
                      or null otherwise.                    
                </return>
            </javadoc>
            <method name="getTrustedSigner" type="Certificate" line="2261">
                <params>
                    <param name="cert" type="Certificate"/>
                    <param name="ks" type="KeyStore"/>
                </params>
                <scope line="2262"/>
                <scope line="2265">
                    <declaration name="name" type="String" line="2266"/>
                    <declaration name="trustedCert" type="Certificate" line="2267"/>
                    <scope line="2268">
                        <scope line="2269"/>
                        <scope line="2273"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="2279">
                Gets an X.500 name suitable for inclusion in a certification request.                
            </javadoc>
            <method name="getX500Name" type="X500Name" line="2282">
                <declaration name="in" type="BufferedReader" line="2283"/>
                <declaration name="commonName" type="String" line="2285"/>
                <declaration name="organizationalUnit" type="String" line="2286"/>
                <declaration name="organization" type="String" line="2287"/>
                <declaration name="city" type="String" line="2288"/>
                <declaration name="state" type="String" line="2289"/>
                <declaration name="country" type="String" line="2290"/>
                <declaration name="name" type="X500Name" line="2291"/>
                <declaration name="userInput" type="String" line="2292"/>
                <declaration name="maxRetry" type="int" line="2293"/>
                <scope line="2294">
                    <scope line="2295"/>
                    <declaration name="form" type="MessageFormat" line="2305"/>
                    <declaration name="source" type="Object[]" line="2306"/>
                </scope>
            </method>
            <method name="inputString" type="String" line="2313">
                <params>
                    <param name="in" type="BufferedReader"/>
                    <param name="prompt" type="String"/>
                    <param name="defaultValue" type="String"/>
                </params>
                <declaration name="form" type="MessageFormat" line="2315"/>
                <declaration name="source" type="Object[]" line="2316"/>
                <declaration name="value" type="String" line="2319"/>
                <scope line="2320"/>
            </method>
            <javadoc line="2325">
                Writes an X.509 certificate in base64 or binary encoding to an output
                  stream.                
            </javadoc>
            <method name="dumpCert" type="void" line="2329">
                <params>
                    <param name="cert" type="Certificate"/>
                    <param name="out" type="PrintStream"/>
                </params>
                <scope line="2330">
                    <declaration name="encoder" type="BASE64Encoder" line="2331"/>
                </scope>
                <scope line="2336"/>
            </method>
            <javadoc line="2340">
                Converts a byte to hex digit and writes to the supplied buffer                
            </javadoc>
            <method name="byte2hex" type="void" line="2343">
                <params>
                    <param name="b" type="byte"/>
                    <param name="buf" type="StringBuffer"/>
                </params>
                <declaration name="hexChars" type="char[]" line="2344"/>
                <declaration name="high" type="int" line="2345"/>
                <declaration name="low" type="int" line="2346"/>
            </method>
            <javadoc line="2350">
                Converts a byte array to hex string                
            </javadoc>
            <method name="toHexString" type="String" line="2353">
                <params>
                    <param name="block" type="byte[]"/>
                </params>
                <declaration name="buf" type="StringBuffer" line="2354"/>
                <declaration name="len" type="int" line="2355"/>
                <scope line="2356">
                    <scope line="2358"/>
                </scope>
            </method>
            <javadoc line="2364">
                Recovers (private) key associated with given alias.                
                <return>
                    an array of objects, where the 1st element in the array is the
                      recovered private key, and the 2nd element is the password used to
                      recover it.                    
                </return>
            </javadoc>
            <method name="recoverKey" type="Pair&lt;Key,char[]&gt;" line="2370">
                <params>
                    <param name="alias" type="String"/>
                    <param name="storePass" type="char[]"/>
                    <param name="keyPass" type="char[]"/>
                </params>
                <declaration name="key" type="Key" line="2371"/>
                <scope line="2372">
                    <declaration name="form" type="MessageFormat" line="2373"/>
                    <declaration name="source" type="Object[]" line="2374"/>
                </scope>
                <scope line="2377">
                    <declaration name="form" type="MessageFormat" line="2378"/>
                    <declaration name="source" type="Object[]" line="2379"/>
                </scope>
                <scope line="2382">
                    <scope line="2383"/>
                    <scope line="2388">
                        <scope line="2389"/>
                        <scope line="2393"/>
                    </scope>
                </scope>
                <scope line="2398"/>
            </method>
            <javadoc line="2403">
                Recovers entry associated with given alias.                
                <return>
                    an array of objects, where the 1st element in the array is the
                      recovered entry, and the 2nd element is the password used to
                      recover it (null if no password).                    
                </return>
            </javadoc>
            <method name="recoverEntry" type="Pair&lt;Entry,char[]&gt;" line="2409">
                <params>
                    <param name="ks" type="KeyStore"/>
                    <param name="alias" type="String"/>
                    <param name="pstore" type="char[]"/>
                    <param name="pkey" type="char[]"/>
                </params>
                <scope line="2410">
                    <declaration name="form" type="MessageFormat" line="2411"/>
                    <declaration name="source" type="Object[]" line="2412"/>
                </scope>
                <declaration name="pp" type="PasswordProtection" line="2415"/>
                <declaration name="entry" type="Entry" line="2416"/>
                <scope line="2417"/>
                <scope line="2421">
                    <scope line="2422"/>
                    <scope line="2425"/>
                    <scope line="2429">
                        <scope line="2430"/>
                        <scope line="2435">
                            <scope line="2436"/>
                            <scope line="2439"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="2449">
                Gets the requested finger print of the certificate.                
            </javadoc>
            <method name="getCertFingerPrint" type="String" line="2452">
                <params>
                    <param name="mdAlg" type="String"/>
                    <param name="cert" type="Certificate"/>
                </params>
                <declaration name="encCertInfo" type="byte[]" line="2453"/>
                <declaration name="md" type="MessageDigest" line="2454"/>
                <declaration name="digest" type="byte[]" line="2455"/>
            </method>
            <javadoc line="2458">
                Prints warning about missing integrity check.                
            </javadoc>
            <method name="printWarning" type="void" line="2461"/>
            <javadoc line="2468">
                Validates chain in certification reply, and returns the ordered
                  elements of the chain (with user certificate first, and root
                  certificate last in the array).                
                <param>
                    alias the alias name                    
                </param>
                <param>
                    userCert the user certificate of the alias                    
                </param>
                <param>
                    replyCerts the chain provided in the reply                    
                </param>
            </javadoc>
            <method name="validateReply" type="Certificate[]" line="2476">
                <params>
                    <param name="alias" type="String"/>
                    <param name="userCert" type="Certificate"/>
                    <param name="replyCerts" type="Certificate[]"/>
                </params>
                <declaration name="i" type="int" line="2477"/>
                <declaration name="userPubKey" type="PublicKey" line="2478"/>
                <scope line="2479">
                    <scope line="2480"/>
                </scope>
                <scope line="2484">
                    <declaration name="form" type="MessageFormat" line="2485"/>
                    <declaration name="source" type="Object[]" line="2486"/>
                </scope>
                <declaration name="tmpCert" type="Certificate" line="2489"/>
                <declaration name="thisCert" type="X509Certificate" line="2492"/>
                <scope line="2493">
                    <declaration name="j" type="int" line="2494"/>
                    <scope line="2495">
                        <scope line="2496"/>
                    </scope>
                    <scope line="2504"/>
                </scope>
                <scope line="2508"/>
                <declaration name="topCert" type="Certificate" line="2511"/>
                <declaration name="root" type="Certificate" line="2512"/>
                <scope line="2513"/>
                <scope line="2516">
                    <declaration name="reply" type="String" line="2522"/>
                    <scope line="2523"/>
                </scope>
                <scope line="2527">
                    <scope line="2528">
                        <declaration name="tmpCerts" type="Certificate[]" line="2529"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="2537">
                Establishes a certificate chain (using trusted certificates in the
                  keystore), starting with the user certificate
                  and ending at a self-signed certificate found in the keystore.                
                <param>
                    userCert the user certificate of the alias                    
                </param>
                <param>
                    certToVerify the single certificate provided in the reply                    
                </param>
            </javadoc>
            <method name="establishCertChain" type="Certificate[]" line="2544">
                <params>
                    <param name="userCert" type="Certificate"/>
                    <param name="certToVerify" type="Certificate"/>
                </params>
                <scope line="2545">
                    <declaration name="origPubKey" type="PublicKey" line="2546"/>
                    <declaration name="replyPubKey" type="PublicKey" line="2547"/>
                    <scope line="2548"/>
                    <scope line="2551"/>
                </scope>
                <declaration name="certs" type="Hashtable&amp;lt;Principal,Vector&amp;lt;Certificate&amp;gt;&amp;gt;" line="2555"/>
                <scope line="2556"/>
                <scope line="2560">
                    <scope line="2561">
                        <scope line="2562"/>
                    </scope>
                </scope>
                <declaration name="chain" type="Vector&amp;lt;Certificate&amp;gt;" line="2568"/>
                <scope line="2569">
                    <declaration name="newChain" type="Certificate[]" line="2570"/>
                    <declaration name="j" type="int" line="2571"/>
                    <scope line="2572"/>
                </scope>
                <scope line="2578"/>
            </method>
            <javadoc line="2582">
                Recursively tries to establish chain from pool of trusted certs.                
                <param>
                    certToVerify the cert that needs to be verified.                    
                </param>
                <param>
                    chain the chain that&apos;s being built.                    
                </param>
                <param>
                    certs the pool of trusted certs                    
                </param>
                <return>
                    true if successful, false otherwise.                    
                </return>
            </javadoc>
            <method name="buildChain" type="boolean" line="2589">
                <params>
                    <param name="certToVerify" type="X509Certificate"/>
                    <param name="chain" type="Vector&lt;Certificate&gt;"/>
                    <param name="certs" type="Hashtable&lt;Principal,Vector&lt;Certificate&gt;&gt;"/>
                </params>
                <declaration name="issuer" type="Principal" line="2590"/>
                <scope line="2591"/>
                <declaration name="vec" type="Vector&amp;lt;Certificate&amp;gt;" line="2595"/>
                <scope line="2596"/>
                <scope line="2599">
                    <declaration name="issuerCert" type="X509Certificate" line="2600"/>
                    <declaration name="issuerPubKey" type="PublicKey" line="2601"/>
                    <scope line="2602"/>
                    <scope line="2605"/>
                    <scope line="2608"/>
                </scope>
            </method>
            <javadoc line="2615">
                Prompts user for yes/no decision.                
                <return>
                    the user&apos;s decision, can only be &quot;YES&quot; or &quot;NO&quot;                    
                </return>
            </javadoc>
            <method name="getYesNoReply" type="String" line="2619">
                <params>
                    <param name="prompt" type="String"/>
                </params>
                <declaration name="reply" type="String" line="2620"/>
                <declaration name="maxRetry" type="int" line="2621"/>
                <scope line="2622">
                    <scope line="2623"/>
                    <scope line="2629"/>
                    <scope line="2632"/>
                    <scope line="2635"/>
                </scope>
            </method>
            <javadoc line="2643">
                Returns the keystore with the configured CA certificates.                
            </javadoc>
            <method name="getCacertsKeyStore" type="KeyStore" line="2646">
                <declaration name="sep" type="String" line="2647"/>
                <declaration name="file" type="File" line="2648"/>
                <scope line="2649"/>
                <declaration name="fis" type="FileInputStream" line="2652"/>
                <declaration name="caks" type="KeyStore" line="2653"/>
                <scope line="2654"/>
                <scope line="2659">
                    <scope line="2660"/>
                </scope>
            </method>
            <javadoc line="2666">
                Stores the (leaf) certificates of a keystore in a hashtable.
                  All certs belonging to the same CA are stored in a vector that
                  in turn is stored in the hashtable, keyed by the CA&apos;s subject DN                
            </javadoc>
            <method name="keystorecerts2Hashtable" type="void" line="2671">
                <params>
                    <param name="ks" type="KeyStore"/>
                    <param name="hash" type="Hashtable&lt;Principal,Vector&lt;Certificate&gt;&gt;"/>
                </params>
                <scope line="2672">
                    <declaration name="alias" type="String" line="2673"/>
                    <declaration name="cert" type="Certificate" line="2674"/>
                    <scope line="2675">
                        <declaration name="subjectDN" type="Principal" line="2676"/>
                        <declaration name="vec" type="Vector&amp;lt;Certificate&amp;gt;" line="2677"/>
                        <scope line="2678"/>
                        <scope line="2682">
                            <scope line="2683"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="2691">
                Returns the issue time that&apos;s specified the -startdate option                
                <param>
                    s the value of -startdate option                    
                </param>
            </javadoc>
            <method name="getStartDate" type="Date" line="2695">
                <params>
                    <param name="s" type="String"/>
                </params>
                <declaration name="c" type="Calendar" line="2696"/>
                <scope line="2697">
                    <declaration name="ioe" type="IOException" line="2698"/>
                    <declaration name="len" type="int" line="2699"/>
                    <scope line="2700"/>
                    <scope line="2703">
                        <declaration name="start" type="int" line="2704"/>
                        <scope line="2705">
                            <declaration name="sign" type="int" line="2706"/>
                            <declaration name="i" type="int" line="2717"/>
                            <scope line="2718">
                                <declaration name="ch" type="char" line="2719"/>
                            </scope>
                            <declaration name="number" type="int" line="2723"/>
                            <declaration name="unit" type="int" line="2725"/>
                        </scope>
                    </scope>
                    <scope line="2752">
                        <declaration name="date" type="String" line="2753"/>
                        <scope line="2754"/>
                        <scope line="2759"/>
                        <scope line="2762"/>
                        <scope line="2765"/>
                        <scope line="2768">
                            <scope line="2769"/>
                            <scope line="2772"/>
                        </scope>
                        <scope line="2776">
                            <scope line="2777"/>
                            <scope line="2783"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="2791">
                Match a command (may be abbreviated) with a command set.                
                <param>
                    s the command provided                    
                </param>
                <param>
                    list the legal command set. If there is a null, commands after it
                      are regarded experimental, which means they are supported but their
                      existence should not be revealed to user.                    
                </param>
                <return>
                    the position of a single match, or -1 if none matched                    
                </return>
                <throws>
                    Exception if s is ambiguous                    
                </throws>
            </javadoc>
            <method name="oneOf" type="int" line="2800">
                <params>
                    <param name="s" type="String"/>
                    <param name="list" type="String"/>
                </params>
                <declaration name="match" type="int[]" line="2801"/>
                <declaration name="nmatch" type="int" line="2802"/>
                <declaration name="experiment" type="int" line="2803"/>
                <scope line="2804">
                    <declaration name="one" type="String" line="2805"/>
                    <scope line="2806"/>
                    <scope line="2810"/>
                    <scope line="2813">
                        <declaration name="sb" type="StringBuffer" line="2814"/>
                        <declaration name="first" type="boolean" line="2815"/>
                        <scope line="2816">
                            <scope line="2817"/>
                            <scope line="2821">
                                <scope line="2822"/>
                            </scope>
                        </scope>
                        <scope line="2827"/>
                    </scope>
                </scope>
                <scope line="2832"/>
                <scope line="2835"/>
                <scope line="2838">
                    <scope line="2839"/>
                    <declaration name="sb" type="StringBuffer" line="2842"/>
                    <declaration name="form" type="MessageFormat" line="2843"/>
                    <declaration name="source" type="Object[]" line="2844"/>
                    <scope line="2847"/>
                </scope>
            </method>
            <javadoc line="2854">
                Create a GeneralName object from known types                
                <param>
                    t one of 5 known types                    
                </param>
                <param>
                    v value                    
                </param>
                <return>
                    which one                    
                </return>
            </javadoc>
            <method name="createGeneralName" type="GeneralName" line="2860">
                <params>
                    <param name="t" type="String"/>
                    <param name="v" type="String"/>
                </params>
                <declaration name="gn" type="GeneralNameInterface" line="2861"/>
                <declaration name="p" type="int" line="2862"/>
                <scope line="2863"/>
            </method>
            <declaration name="extSupported" type="String[]" line="2885"/>
            <method name="findOidForExtName" type="ObjectIdentifier" line="2886">
                <params>
                    <param name="type" type="String"/>
                </params>
            </method>
            <javadoc line="2908">
                Create X509v3 extensions from a string representation. Note that the
                  SubjectKeyIdentifierExtension will always be created non-critical besides
                  the extension requested in the &lt;code&gt;extstr&lt;/code&gt; argument.                
                <param>
                    reqex the requested extensions, can be null, used for -gencert                    
                </param>
                <param>
                    ext the original extensions, can be null, used for -selfcert                    
                </param>
                <param>
                    extstrs -ext values, Read keytool doc                    
                </param>
                <param>
                    pkey the public key for the certificate                    
                </param>
                <param>
                    akey the public key for the authority (issuer)                    
                </param>
                <return>
                    the created CertificateExtensions                    
                </return>
            </javadoc>
            <method name="createV3Extensions" type="CertificateExtensions" line="2919">
                <params>
                    <param name="reqex" type="CertificateExtensions"/>
                    <param name="ext" type="CertificateExtensions"/>
                    <param name="extstrs" type="List&lt;String&gt;"/>
                    <param name="pkey" type="PublicKey"/>
                    <param name="akey" type="PublicKey"/>
                </params>
                <scope line="2920"/>
                <scope line="2924">
                    <scope line="2925">
                        <scope line="2926">
                            <scope line="2927">
                                <declaration name="list" type="List&amp;lt;String&amp;gt;" line="2928"/>
                                <scope line="2929"/>
                                <scope line="2932">
                                    <declaration name="add" type="boolean" line="2934"/>
                                    <declaration name="action" type="int" line="2935"/>
                                    <declaration name="type" type="String" line="2936"/>
                                    <scope line="2937"/>
                                    <scope line="2941">
                                        <declaration name="colonpos" type="int" line="2942"/>
                                        <scope line="2943">
                                            <scope line="2946"/>
                                        </scope>
                                    </scope>
                                    <declaration name="n" type="String" line="2951"/>
                                    <scope line="2952">
                                        <declaration name="e" type="Extension" line="2953"/>
                                        <scope line="2954"/>
                                    </scope>
                                    <scope line="2959"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="2967">
                        <declaration name="name" type="String" line="2968"/>
                        <declaration name="isCritical" type="boolean" line="2969"/>
                        <declaration name="eqpos" type="int" line="2970"/>
                        <scope line="2971"/>
                        <scope line="2975"/>
                        <declaration name="colonpos" type="int" line="2979"/>
                        <scope line="2980">
                            <scope line="2981"/>
                        </scope>
                        <scope line="2986"/>
                        <declaration name="exttype" type="int" line="2989"/>
                        <declaration name="pathLen" type="int" line="2992"/>
                        <declaration name="isCA" type="boolean" line="2993"/>
                        <scope line="2994"/>
                        <scope line="2997">
                            <scope line="2998"/>
                            <scope line="3002">
                                <scope line="3003">
                                    <declaration name="nv" type="String[]" line="3004"/>
                                    <scope line="3005"/>
                                    <scope line="3008">
                                        <scope line="3009"/>
                                        <scope line="3012"/>
                                        <scope line="3015"/>
                                    </scope>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="3025">
                            <declaration name="ok" type="boolean[]" line="3026"/>
                            <scope line="3027">
                                <declaration name="p" type="int" line="3028"/>
                                <scope line="3029"/>
                            </scope>
                            <declaration name="kue" type="KeyUsageExtension" line="3035"/>
                        </scope>
                        <scope line="3038"/>
                        <scope line="3043">
                            <declaration name="v" type="Vector&amp;lt;ObjectIdentifier&amp;gt;" line="3044"/>
                            <scope line="3045">
                                <declaration name="p" type="int" line="3046"/>
                                <scope line="3047">
                                    <scope line="3048"/>
                                    <scope line="3051"/>
                                </scope>
                                <scope line="3055"/>
                                <scope line="3058"/>
                            </scope>
                        </scope>
                        <scope line="3064"/>
                        <scope line="3070">
                            <declaration name="ps" type="String[]" line="3071"/>
                            <declaration name="gnames" type="GeneralNames" line="3072"/>
                            <scope line="3073">
                                <scope line="3075"/>
                                <declaration name="t" type="String" line="3078"/>
                                <declaration name="v" type="String" line="3079"/>
                            </scope>
                            <scope line="3082"/>
                            <scope line="3085"/>
                        </scope>
                        <scope line="3089"/>
                        <scope line="3095"/>
                        <scope line="3098">
                            <declaration name="accessDescriptions" type="List&amp;lt;AccessDescription&amp;gt;" line="3099"/>
                            <declaration name="ps" type="String[]" line="3100"/>
                            <scope line="3101">
                                <declaration name="colonpos2" type="int" line="3103"/>
                                <scope line="3104"/>
                                <declaration name="m" type="String" line="3107"/>
                                <declaration name="t" type="String" line="3108"/>
                                <declaration name="v" type="String" line="3109"/>
                                <declaration name="p" type="int" line="3110"/>
                                <declaration name="oid" type="ObjectIdentifier" line="3111"/>
                                <scope line="3112">
                                    <scope line="3113"/>
                                    <scope line="3116"/>
                                </scope>
                                <scope line="3120"/>
                            </scope>
                            <scope line="3125"/>
                            <scope line="3128"/>
                        </scope>
                        <scope line="3132"/>
                        <scope line="3137">
                            <declaration name="ps" type="String[]" line="3138"/>
                            <declaration name="gnames" type="GeneralNames" line="3139"/>
                            <scope line="3140">
                                <scope line="3142"/>
                                <declaration name="t" type="String" line="3145"/>
                                <declaration name="v" type="String" line="3146"/>
                            </scope>
                        </scope>
                        <scope line="3151"/>
                        <declaration name="oid" type="ObjectIdentifier" line="3156"/>
                        <declaration name="data" type="byte[]" line="3157"/>
                        <scope line="3158">
                            <declaration name="pos" type="int" line="3160"/>
                            <scope line="3161">
                                <declaration name="hex" type="int" line="3162"/>
                                <scope line="3163"/>
                                <scope line="3166"/>
                                <scope line="3169"/>
                                <scope line="3172"/>
                                <scope line="3175"/>
                                <scope line="3178"/>
                            </scope>
                            <scope line="3183"/>
                        </scope>
                        <scope line="3188"/>
                    </scope>
                    <scope line="3198"/>
                </scope>
                <scope line="3202"/>
            </method>
            <javadoc line="3207">
                Prints the usage of this tool.                
            </javadoc>
            <method name="usage" type="void" line="3210">
                <scope line="3211">
                    <declaration name="left" type="String[]" line="3218"/>
                    <declaration name="right" type="String[]" line="3219"/>
                    <declaration name="found" type="boolean" line="3220"/>
                    <declaration name="lenLeft" type="int" line="3221"/>
                    <scope line="3222">
                        <declaration name="opt" type="Option" line="3223"/>
                        <scope line="3226"/>
                    </scope>
                    <scope line="3231"/>
                </scope>
                <scope line="3237">
                    <scope line="3242"/>
                </scope>
            </method>
            <method name="tinyHelp" type="void" line="3250">
                <scope line="3252"/>
                <scope line="3255"/>
            </method>
            <method name="errorNeedArgument" type="void" line="3259">
                <params>
                    <param name="flag" type="String"/>
                </params>
                <declaration name="source" type="Object[]" line="3260"/>
            </method>
            <method name="getPass" type="char[]" line="3264">
                <params>
                    <param name="modifier" type="String"/>
                    <param name="arg" type="String"/>
                </params>
                <declaration name="output" type="char[]" line="3265"/>
            </method>
            <method name="getPassWithModifier" type="char[]" line="3270">
                <params>
                    <param name="modifier" type="String"/>
                    <param name="arg" type="String"/>
                </params>
                <scope line="3271"/>
                <scope line="3274">
                    <declaration name="value" type="String" line="3275"/>
                    <scope line="3276"/>
                    <scope line="3280"/>
                </scope>
                <scope line="3284">
                    <scope line="3285">
                        <declaration name="url" type="URL" line="3286"/>
                        <scope line="3287"/>
                        <scope line="3290">
                            <declaration name="f" type="File" line="3291"/>
                            <scope line="3292"/>
                            <scope line="3295"/>
                        </scope>
                        <declaration name="br" type="BufferedReader" line="3300"/>
                        <declaration name="value" type="String" line="3301"/>
                        <scope line="3303"/>
                        <scope line="3306"/>
                    </scope>
                    <scope line="3310"/>
                </scope>
                <scope line="3315"/>
            </method>
        </class>
        <class name="Pair" line="3321">
            <type_params>
                <type_param name="A"/>
                <type_param name="B"/>
            </type_params>
            <declaration name="fst" type="A" line="3322"/>
            <declaration name="snd" type="B" line="3323"/>
            <method name="Pair" type="constructor" line="3324">
                <params>
                    <param name="fst" type="A"/>
                    <param name="snd" type="B"/>
                </params>
            </method>
            <method name="toString" type="String" line="3328"/>
            <method name="equals" type="boolean" line="3331">
                <params>
                    <param name="x" type="Object"/>
                    <param name="y" type="Object"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="3334">
                <params>
                    <param name="other" type="Object"/>
                </params>
            </method>
            <method name="hashCode" type="int" line="3337"/>
            <method name="of" type="Pair&lt;A,B&gt;" line="3342">
                <params>
                    <param name="a" type="A"/>
                    <param name="b" type="B"/>
                </params>
            </method>
        </class>
    </source>