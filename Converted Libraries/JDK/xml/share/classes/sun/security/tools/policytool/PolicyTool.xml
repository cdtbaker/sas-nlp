<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.tools.policytool">
        <import package="java.io"/>
        <import package="java.util.LinkedList"/>
        <import package="java.util.ListIterator"/>
        <import package="java.util.Vector"/>
        <import package="java.util.Enumeration"/>
        <import package="java.net.URL"/>
        <import package="java.net.MalformedURLException"/>
        <import package="java.lang.reflect"/>
        <import package="java.text.Collator"/>
        <import package="java.text.MessageFormat"/>
        <import package="sun.security.util.PropertyExpander"/>
        <import package="sun.security.util.PropertyExpander.ExpandException"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.security.cert.Certificate"/>
        <import package="java.security.cert.CertificateException"/>
        <import package="java.security"/>
        <import package="sun.security.provider"/>
        <import package="sun.security.util.PolicyUtil"/>
        <import package="javax.security.auth.x500.X500Principal"/>
        <class name="PolicyTool" line="49">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <javadoc line="49">
                PolicyTool may be used by users and administrators to configure the
                  overall java security policy (currently stored in the policy file).
                  Using PolicyTool administrators may add and remove policies from
                  the policy file. &lt;p&gt;                
                <see>
                    java.security.Policy                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <declaration name="rb" type="java.util.ResourceBundle" line="62"/>
            <declaration name="collator" type="Collator" line="64"/>
            <scope line="65"/>
            <declaration name="warnings" type="Vector&lt;String&gt;" line="71"/>
            <declaration name="newWarning" type="boolean" line="72"/>
            <declaration name="modified" type="boolean" line="76"/>
            <declaration name="testing" type="boolean" line="78"/>
            <declaration name="TWOPARAMS" type="Class[]" line="79"/>
            <declaration name="ONEPARAMS" type="Class[]" line="80"/>
            <declaration name="NOPARAMS" type="Class[]" line="81"/>
            <declaration name="policyFileName" type="String" line="89"/>
            <declaration name="policyEntries" type="Vector&lt;PolicyEntry&gt;" line="90"/>
            <declaration name="parser" type="PolicyParser" line="91"/>
            <declaration name="keyStore" type="KeyStore" line="94"/>
            <declaration name="keyStoreName" type="String" line="95"/>
            <declaration name="keyStoreType" type="String" line="96"/>
            <declaration name="keyStoreProvider" type="String" line="97"/>
            <declaration name="keyStorePwdURL" type="String" line="98"/>
            <declaration name="P11KEYSTORE" type="String" line="101"/>
            <declaration name="NONE" type="String" line="104"/>
            <javadoc line="106">
                default constructor                
            </javadoc>
            <method name="PolicyTool" type="constructor" line="109"/>
            <javadoc line="115">
                get the PolicyFileName                
            </javadoc>
            <method name="getPolicyFileName" type="String" line="118"/>
            <javadoc line="122">
                set the PolicyFileName                
            </javadoc>
            <method name="setPolicyFileName" type="void" line="125">
                <params>
                    <param name="policyFileName" type="String"/>
                </params>
            </method>
            <javadoc line="129">
                clear keyStore info                
            </javadoc>
            <method name="clearKeyStoreInfo" type="void" line="132"/>
            <javadoc line="141">
                get the keyStore URL name                
            </javadoc>
            <method name="getKeyStoreName" type="String" line="144"/>
            <javadoc line="148">
                get the keyStore Type                
            </javadoc>
            <method name="getKeyStoreType" type="String" line="151"/>
            <javadoc line="155">
                get the keyStore Provider                
            </javadoc>
            <method name="getKeyStoreProvider" type="String" line="158"/>
            <javadoc line="162">
                get the keyStore password URL                
            </javadoc>
            <method name="getKeyStorePwdURL" type="String" line="165"/>
            <javadoc line="169">
                Open and read a policy file                
            </javadoc>
            <method name="openPolicy" type="void" line="186">
                <params>
                    <param name="filename" type="String"/>
                </params>
                <comment line="191">
                    start fresh - blow away the current state                    
                </comment>
                <comment line="198">
                    see if user is opening a NEW policy file                    
                </comment>
                <comment line="204">
                    Read in the policy entries from the file and
                     populate the parser vector table.  The parser vector
                     table only holds the entries as strings, so it only
                     guarantees that the policies are syntactically
                     correct.                    
                </comment>
                <comment line="212">
                    open the keystore                    
                </comment>
                <comment line="216">
                    Update the local vector with the same policy entries.
                     This guarantees that the policy entries are not only
                     syntactically correct, but semantically valid as well.                    
                </comment>
                <comment line="223">
                    see if all the signers have public keys                    
                </comment>
                <comment line="239">
                    check to see if the Principals are valid                    
                </comment>
                <comment line="256">
                    check to see if the Permissions are valid                    
                </comment>
                <comment line="277">
                    see if all the permission signers have public keys                    
                </comment>
                <comment line="298">
                    just read in the policy -- nothing has been modified yet                    
                </comment>
                <scope line="198"/>
                <declaration name="enum_" type="Enumeration&lt;PolicyParser.GrantEntry&gt;" line="218"/>
                <scope line="219">
                    <declaration name="ge" type="PolicyParser.GrantEntry" line="220"/>
                    <scope line="223">
                        <declaration name="signers" type="String" line="225"/>
                        <scope line="226">
                            <declaration name="pubKey" type="PublicKey" line="227"/>
                            <scope line="228">
                                <declaration name="form" type="MessageFormat" line="230"/>
                                <declaration name="source" type="Object[]" line="232"/>
                            </scope>
                        </scope>
                    </scope>
                    <declaration name="prinList" type="ListIterator&lt;PolicyParser.PrincipalEntry&gt;" line="239"/>
                    <scope line="241">
                        <declaration name="pe" type="PolicyParser.PrincipalEntry" line="242"/>
                        <scope line="243"/>
                        <scope line="246">
                            <declaration name="form" type="MessageFormat" line="248"/>
                            <declaration name="source" type="Object[]" line="250"/>
                        </scope>
                    </scope>
                    <declaration name="perms" type="Enumeration&lt;PolicyParser.PermissionEntry&gt;" line="256"/>
                    <scope line="258">
                        <declaration name="pe" type="PolicyParser.PermissionEntry" line="259"/>
                        <scope line="260"/>
                        <scope line="262">
                            <declaration name="form" type="MessageFormat" line="264"/>
                            <declaration name="source" type="Object[]" line="266"/>
                        </scope>
                        <scope line="268">
                            <declaration name="form" type="MessageFormat" line="270"/>
                            <declaration name="source" type="Object[]" line="272"/>
                        </scope>
                        <scope line="277">
                            <declaration name="signers" type="String" line="279"/>
                            <scope line="281">
                                <declaration name="pubKey" type="PublicKey" line="282"/>
                                <scope line="283">
                                    <declaration name="form" type="MessageFormat" line="285"/>
                                    <declaration name="source" type="Object[]" line="287"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                    <declaration name="pEntry" type="PolicyEntry" line="293"/>
                </scope>
            </method>
            <javadoc line="302">
                Save a policy to a file                
            </javadoc>
            <method name="savePolicy" type="void" line="306">
                <params>
                    <param name="filename" type="String"/>
                </params>
                <comment line="308">
                    save the policy entries to a file                    
                </comment>
            </method>
            <javadoc line="316">
                Open the KeyStore                
            </javadoc>
            <method name="openKeyStore" type="void" line="328">
                <params>
                    <param name="name" type="String"/>
                    <param name="type" type="String"/>
                    <param name="provider" type="String"/>
                    <param name="pwdURL" type="String"/>
                </params>
                <comment line="334">
                    policy did not specify a keystore during open
                     or use wants to reset keystore values                    
                </comment>
                <comment line="342">
                    caller will set (tool.modified = true) if appropriate                    
                </comment>
                <comment line="353">
                    although PolicyUtil.getKeyStore may properly handle
                     defaults and property expansion, we do it here so that
                     if the call is successful, we can set the proper values
                     (PolicyUtil.getKeyStore does not return expanded values)                    
                </comment>
                <comment line="379">
                    copied from sun.security.pkcs11.SunPKCS11                    
                </comment>
                <comment line="388">
                    throw a more friendly exception message                    
                </comment>
                <comment line="400">
                    caller will set (tool.modified = true)                    
                </comment>
                <scope line="331"/>
                <declaration name="policyURL" type="URL" line="346"/>
                <scope line="347">
                    <declaration name="pfile" type="File" line="348"/>
                </scope>
                <scope line="357"/>
                <scope line="361"/>
                <scope line="364"/>
                <scope line="369"/>
                <scope line="376">
                    <declaration name="MSG" type="String" line="379"/>
                    <declaration name="cause" type="Throwable" line="382"/>
                    <scope line="385"/>
                    <scope line="389"/>
                </scope>
            </method>
            <javadoc line="402">
                Add a Grant entry to the overall policy at the specified index.
                  A policy entry consists of a CodeSource.                
            </javadoc>
            <method name="addEntry" type="boolean" line="406">
                <params>
                    <param name="pe" type="PolicyEntry"/>
                    <param name="index" type="int"/>
                </params>
                <comment line="410">
                    new entry -- just add it to the end                    
                </comment>
                <comment line="414">
                    existing entry -- replace old one                    
                </comment>
                <scope line="408"/>
                <scope line="412">
                    <declaration name="origPe" type="PolicyEntry" line="414"/>
                </scope>
            </method>
            <javadoc line="421">
                Add a Principal entry to an existing PolicyEntry at the specified index.
                  A Principal entry consists of a class, and name.
                  If the principal already exists, it is not added again.                
            </javadoc>
            <method name="addPrinEntry" type="boolean" line="429">
                <params>
                    <param name="pe" type="PolicyEntry"/>
                    <param name="newPrin" type="PolicyParser.PrincipalEntry"/>
                    <param name="index" type="int"/>
                </params>
                <comment line="432">
                    first add the principal to the Policy Parser entry                    
                </comment>
                <declaration name="grantEntry" type="PolicyParser.GrantEntry" line="432"/>
                <declaration name="prinList" type="LinkedList&lt;PolicyParser.PrincipalEntry&gt;" line="436"/>
            </method>
            <javadoc line="447">
                Add a Permission entry to an existing PolicyEntry at the specified index.
                  A Permission entry consists of a permission, name, and actions.
                  If the permission already exists, it is not added again.                
            </javadoc>
            <method name="addPermEntry" type="boolean" line="455">
                <params>
                    <param name="pe" type="PolicyEntry"/>
                    <param name="newPerm" type="PolicyParser.PermissionEntry"/>
                    <param name="index" type="int"/>
                </params>
                <comment line="458">
                    first add the permission to the Policy Parser Vector                    
                </comment>
                <declaration name="grantEntry" type="PolicyParser.GrantEntry" line="458"/>
                <declaration name="permList" type="Vector&lt;PolicyParser.PermissionEntry&gt;" line="462"/>
            </method>
            <javadoc line="473">
                Remove a Permission entry from an existing PolicyEntry.                
            </javadoc>
            <method name="removePermEntry" type="boolean" line="477">
                <params>
                    <param name="pe" type="PolicyEntry"/>
                    <param name="perm" type="PolicyParser.PermissionEntry"/>
                </params>
                <comment line="480">
                    remove the Permission from the GrantEntry                    
                </comment>
                <declaration name="ppge" type="PolicyParser.GrantEntry" line="480"/>
            </method>
            <javadoc line="485">
                remove an entry from the overall policy                
            </javadoc>
            <method name="removeEntry" type="boolean" line="488">
                <params>
                    <param name="pe" type="PolicyEntry"/>
                </params>
            </method>
            <javadoc line="495">
                retrieve all Policy Entries                
            </javadoc>
            <method name="getEntry" type="PolicyEntry[]" line="498">
                <scope line="500">
                    <declaration name="entries" type="PolicyEntry" line="501"/>
                </scope>
            </method>
            <javadoc line="509">
                Retrieve the public key mapped to a particular name.
                  If the key has expired, a KeyException is thrown.                
            </javadoc>
            <method name="getPublicKeyAlias" type="PublicKey" line="513">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="514"/>
                <declaration name="cert" type="Certificate" line="518"/>
                <scope line="519"/>
                <declaration name="pubKey" type="PublicKey" line="522"/>
            </method>
            <javadoc line="526">
                Retrieve all the alias names stored in the certificate database                
            </javadoc>
            <method name="getPublicKeyAlias" type="String[]" line="529">
                <comment line="540">
                    first count the number of elements                    
                </comment>
                <comment line="547">
                    now copy them into an array                    
                </comment>
                <declaration name="numAliases" type="int" line="531"/>
                <declaration name="aliases" type="String" line="532"/>
                <scope line="534"/>
                <declaration name="enum_" type="Enumeration&lt;String&gt;" line="537"/>
                <scope line="540"/>
                <scope line="545">
                    <scope line="550"/>
                </scope>
            </method>
            <javadoc line="558">
                This method parses a single string of signers separated by commas
                  (&quot;jordan, duke, pippen&quot;) into an array of individual strings.                
            </javadoc>
            <method name="parseSigners" type="String[]" line="562">
                <params>
                    <param name="signedBy" type="String"/>
                </params>
                <comment line="571">
                    first pass thru &quot;signedBy&quot; counts the number of signers                    
                </comment>
                <comment line="581">
                    second pass thru &quot;signedBy&quot; transfers signers to array                    
                </comment>
                <comment line="586">
                    transfer signer and ignore trailing part of the string                    
                </comment>
                <comment line="592">
                    we are at the end of the string -- transfer signer                    
                </comment>
                <declaration name="signers" type="String" line="564"/>
                <declaration name="numSigners" type="int" line="565"/>
                <declaration name="signedByIndex" type="int" line="566"/>
                <declaration name="commaIndex" type="int" line="567"/>
                <declaration name="signerNum" type="int" line="568"/>
                <scope line="571">
                    <scope line="573"/>
                </scope>
                <scope line="583">
                    <scope line="584"/>
                    <scope line="590"/>
                </scope>
            </method>
            <javadoc line="598">
                Check to see if the Principal contents are OK                
            </javadoc>
            <method name="verifyPrincipal" type="void" line="604">
                <params>
                    <param name="type" type="String"/>
                    <param name="name" type="String"/>
                </params>
                <comment line="621">
                    PolicyParser checks validity of X500Principal name
                     - PolicyTool needs to as well so that it doesn&apos;t store
                       an invalid name that can&apos;t be read in later
                    
                     this can throw an IllegalArgumentException                    
                </comment>
                <scope line="606"/>
                <declaration name="PRIN" type="Class&lt;?&gt;" line="609"/>
                <declaration name="pc" type="Class&lt;?&gt;" line="610"/>
                <scope line="612">
                    <declaration name="form" type="MessageFormat" line="613"/>
                    <declaration name="source" type="Object[]" line="615"/>
                </scope>
                <scope line="619">
                    <declaration name="newP" type="X500Principal" line="625"/>
                </scope>
            </method>
            <javadoc line="629">
                Check to see if the Permission contents are OK                
            </javadoc>
            <method name="verifyPermission" type="void" line="640">
                <params>
                    <param name="type" type="String"/>
                    <param name="name" type="String"/>
                    <param name="actions" type="String"/>
                </params>
                <comment line="643">
                    XXX we might want to keep a hash of created factories...                    
                </comment>
                <comment line="656">
                    proceed to the one-param constructor                    
                </comment>
                <comment line="664">
                    proceed to the two-param constructor                    
                </comment>
                <declaration name="pc" type="Class&lt;?&gt;" line="643"/>
                <declaration name="c" type="Constructor&lt;?&gt;" line="645"/>
                <declaration name="objects" type="Vector&lt;String&gt;" line="646"/>
                <scope line="651"/>
                <scope line="654"/>
                <scope line="659"/>
                <scope line="662"/>
                <declaration name="parameters" type="Object" line="670"/>
                <declaration name="p" type="Permission" line="671"/>
            </method>
            <method name="parseArgs" type="void" line="677">
                <params>
                    <param name="args" type="String"/>
                </params>
                <comment line="679">
                                        
                </comment>
                <declaration name="n" type="int" line="679"/>
                <scope line="681">
                    <declaration name="flags" type="String" line="683"/>
                    <scope line="685"/>
                    <scope line="688">
                        <declaration name="form" type="MessageFormat" line="689"/>
                        <declaration name="source" type="Object[]" line="691"/>
                    </scope>
                </scope>
            </method>
            <method name="usage" type="void" line="698"/>
            <javadoc line="708">
                run the PolicyTool                
            </javadoc>
            <method name="main" type="void" line="711">
                <params>
                    <param name="args" type="String"/>
                </params>
                <declaration name="tw" type="ToolWindow" line="713"/>
            </method>
            <method name="splitToWords" type="String" line="720">
                <params>
                    <param name="instr" type="String"/>
                </params>
            </method>
        </class>
        <class name="PolicyEntry" line="726">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <javadoc line="726">
                Each entry in the policy configuration file is represented by a
                  PolicyEntry object.
                  A PolicyEntry is a (CodeSource,Permission) pair.  The
                  CodeSource contains the (URL, PublicKey) that together identify
                  where the Java bytecodes come from and who (if anyone) signed
                  them.  The URL could refer to localhost.  The URL could also be
                  null, meaning that this policy entry is given to all comers, as
                  long as they match the signer field.  The signer could be null,
                  meaning the code is not signed.
                  The Permission contains the (Type, Name, Action) triplet.                
            </javadoc>
            <declaration name="codesource" type="CodeSource" line="743"/>
            <declaration name="tool" type="PolicyTool" line="744"/>
            <declaration name="grantEntry" type="PolicyParser.GrantEntry" line="745"/>
            <declaration name="testing" type="boolean" line="746"/>
            <javadoc line="748">
                Create a PolicyEntry object from the information read in
                  from a policy file.                
            </javadoc>
            <method name="PolicyEntry" type="constructor" line="756">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="ge" type="PolicyParser.GrantEntry"/>
                </params>
                <comment line="763">
                    construct the CodeSource                    
                </comment>
                <declaration name="location" type="URL" line="760"/>
                <scope line="768"/>
            </method>
            <javadoc line="779">
                get the codesource associated with this PolicyEntry                
            </javadoc>
            <method name="getCodeSource" type="CodeSource" line="782"/>
            <javadoc line="786">
                get the GrantEntry associated with this PolicyEntry                
            </javadoc>
            <method name="getGrantEntry" type="PolicyParser.GrantEntry" line="789"/>
            <javadoc line="793">
                convert the header portion, i.e. codebase, signer, principals, of
                  this policy entry into a string                
            </javadoc>
            <method name="headerToString" type="String" line="797">
                <declaration name="pString" type="String" line="798"/>
                <scope line="799"/>
                <scope line="801"/>
            </method>
            <javadoc line="806">
                convert the Codebase/signer portion of this policy entry into a string                
            </javadoc>
            <method name="codebaseToString" type="String" line="809">
                <declaration name="stringEntry" type="String" line="811"/>
            </method>
            <javadoc line="835">
                convert the Principals portion of this policy entry into a string                
            </javadoc>
            <method name="principalsToString" type="String" line="838">
                <declaration name="result" type="String" line="839"/>
                <scope line="841">
                    <declaration name="buffer" type="StringBuffer" line="842"/>
                    <declaration name="list" type="ListIterator&lt;PolicyParser.PrincipalEntry&gt;" line="843"/>
                    <scope line="845">
                        <declaration name="pppe" type="PolicyParser.PrincipalEntry" line="846"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="856">
                convert this policy entry into a PolicyParser.PermissionEntry                
            </javadoc>
            <method name="toPermissionEntry" type="PolicyParser.PermissionEntry" line="859">
                <params>
                    <param name="perm" type="Permission"/>
                </params>
                <comment line="864">
                    get the actions                    
                </comment>
                <declaration name="actions" type="String" line="861"/>
                <declaration name="pe" type="PolicyParser.PermissionEntry" line="868"/>
            </method>
        </class>
        <class name="ToolWindow" line="876">
            <extends class="Frame"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <javadoc line="876">
                The main window for the PolicyTool                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="881"/>
            <declaration name="TOP_PADDING" type="Insets" line="884"/>
            <declaration name="BOTTOM_PADDING" type="Insets" line="885"/>
            <declaration name="LITE_BOTTOM_PADDING" type="Insets" line="886"/>
            <declaration name="LR_PADDING" type="Insets" line="887"/>
            <declaration name="TOP_BOTTOM_PADDING" type="Insets" line="888"/>
            <declaration name="L_TOP_BOTTOM_PADDING" type="Insets" line="889"/>
            <declaration name="LR_BOTTOM_PADDING" type="Insets" line="890"/>
            <declaration name="L_BOTTOM_PADDING" type="Insets" line="891"/>
            <declaration name="R_BOTTOM_PADDING" type="Insets" line="892"/>
            <declaration name="NEW_POLICY_FILE" type="String" line="895"/>
            <declaration name="OPEN_POLICY_FILE" type="String" line="897"/>
            <declaration name="SAVE_POLICY_FILE" type="String" line="899"/>
            <declaration name="SAVE_AS_POLICY_FILE" type="String" line="901"/>
            <declaration name="VIEW_WARNINGS" type="String" line="903"/>
            <declaration name="QUIT" type="String" line="905"/>
            <declaration name="ADD_POLICY_ENTRY" type="String" line="907"/>
            <declaration name="EDIT_POLICY_ENTRY" type="String" line="909"/>
            <declaration name="REMOVE_POLICY_ENTRY" type="String" line="911"/>
            <declaration name="EDIT_KEYSTORE" type="String" line="913"/>
            <declaration name="ADD_PUBKEY_ALIAS" type="String" line="915"/>
            <declaration name="REMOVE_PUBKEY_ALIAS" type="String" line="917"/>
            <declaration name="MW_FILENAME_LABEL" type="int" line="921"/>
            <declaration name="MW_FILENAME_TEXTFIELD" type="int" line="922"/>
            <declaration name="MW_PANEL" type="int" line="923"/>
            <declaration name="MW_ADD_BUTTON" type="int" line="924"/>
            <declaration name="MW_EDIT_BUTTON" type="int" line="925"/>
            <declaration name="MW_REMOVE_BUTTON" type="int" line="926"/>
            <declaration name="MW_POLICY_LIST" type="int" line="927"/>
            <declaration name="tool" type="PolicyTool" line="929"/>
            <javadoc line="931">
                Constructor                
            </javadoc>
            <method name="ToolWindow" type="constructor" line="934">
                <params>
                    <param name="tool" type="PolicyTool"/>
                </params>
            </method>
            <javadoc line="938">
                Initialize the PolicyTool window with the necessary components                
            </javadoc>
            <method name="initWindow" type="void" line="941">
                <comment line="944">
                    create the top menu bar                    
                </comment>
                <comment line="947">
                    create a File menu                    
                </comment>
                <comment line="959">
                    create a KeyStore menu                    
                </comment>
                <comment line="967">
                    policy entry listing                    
                </comment>
                <comment line="981">
                    add ADD/REMOVE/EDIT buttons in a new panel                    
                </comment>
                <comment line="1017">
                    open the policy file                    
                </comment>
                <comment line="1020">
                    display the policy entries via the policy list textarea                    
                </comment>
                <comment line="1034">
                    add blank policy listing                    
                </comment>
                <comment line="1042">
                    just add warning                    
                </comment>
                <comment line="1046">
                    add blank policy listing                    
                </comment>
                <comment line="1054">
                    display the error                    
                </comment>
                <declaration name="menuBar" type="MenuBar" line="944"/>
                <declaration name="menu" type="Menu" line="947"/>
                <declaration name="label" type="Label" line="967"/>
                <declaration name="tf" type="TextField" line="971"/>
                <declaration name="panel" type="Panel" line="981"/>
                <declaration name="button" type="Button" line="984"/>
                <declaration name="policyFile" type="String" line="1007"/>
                <scope line="1008">
                    <declaration name="userHome" type="String" line="1009"/>
                </scope>
                <scope line="1015">
                    <declaration name="list" type="List" line="1020"/>
                    <declaration name="entries" type="PolicyEntry" line="1022"/>
                    <scope line="1023"/>
                    <declaration name="newFilename" type="TextField" line="1027"/>
                </scope>
                <scope line="1032">
                    <declaration name="list" type="List" line="1034"/>
                </scope>
                <scope line="1044">
                    <declaration name="list" type="List" line="1046"/>
                    <declaration name="form" type="MessageFormat" line="1054"/>
                    <declaration name="source" type="Object[]" line="1056"/>
                </scope>
            </method>
            <javadoc line="1062">
                Add a component to the PolicyTool window                
            </javadoc>
            <method name="addNewComponent" type="void" line="1067">
                <params>
                    <param name="container" type="Container"/>
                    <param name="component" type="Component"/>
                    <param name="index" type="int"/>
                    <param name="gridx" type="int"/>
                    <param name="gridy" type="int"/>
                    <param name="gridwidth" type="int"/>
                    <param name="gridheight" type="int"/>
                    <param name="weightx" type="double"/>
                    <param name="weighty" type="double"/>
                    <param name="fill" type="int"/>
                    <param name="is" type="Insets"/>
                </params>
                <comment line="1070">
                    add the component at the specified gridbag index                    
                </comment>
                <comment line="1073">
                    set the constraints                    
                </comment>
                <declaration name="gbl" type="GridBagLayout" line="1073"/>
                <declaration name="gbc" type="GridBagConstraints" line="1074"/>
            </method>
            <javadoc line="1087">
                Add a component to the PolicyTool window without external padding                
            </javadoc>
            <method name="addNewComponent" type="void" line="1092">
                <params>
                    <param name="container" type="Container"/>
                    <param name="component" type="Component"/>
                    <param name="index" type="int"/>
                    <param name="gridx" type="int"/>
                    <param name="gridy" type="int"/>
                    <param name="gridwidth" type="int"/>
                    <param name="gridheight" type="int"/>
                    <param name="weightx" type="double"/>
                    <param name="weighty" type="double"/>
                    <param name="fill" type="int"/>
                </params>
                <comment line="1095">
                    delegate with &quot;null&quot; external padding                    
                </comment>
            </method>
            <javadoc line="1101">
                Init the policy_entry_list TEXTAREA component in the
                  PolicyTool window                
            </javadoc>
            <method name="initPolicyList" type="void" line="1105">
                <params>
                    <param name="policyList" type="List"/>
                </params>
                <comment line="1108">
                    add the policy list to the window                    
                </comment>
            </method>
            <javadoc line="1112">
                Replace the policy_entry_list TEXTAREA component in the
                  PolicyTool window with an updated one.                
            </javadoc>
            <method name="replacePolicyList" type="void" line="1116">
                <params>
                    <param name="policyList" type="List"/>
                </params>
                <comment line="1119">
                    remove the original list of Policy Entries
                     and add the new list of entries                    
                </comment>
                <declaration name="list" type="List" line="1120"/>
                <declaration name="newItems" type="String" line="1122"/>
            </method>
            <javadoc line="1127">
                display the main PolicyTool window                
            </javadoc>
            <method name="displayToolWindow" type="void" line="1130">
                <params>
                    <param name="args" type="String"/>
                </params>
                <comment line="1141">
                    display it                    
                </comment>
                <scope line="1143"/>
            </method>
            <javadoc line="1149">
                displays a dialog box describing an error which occurred.                
            </javadoc>
            <method name="displayErrorDialog" type="void" line="1152">
                <params>
                    <param name="w" type="Window"/>
                    <param name="error" type="String"/>
                </params>
                <comment line="1157">
                    find where the PolicyTool gui is                    
                </comment>
                <declaration name="ed" type="ToolDialog" line="1153"/>
                <declaration name="location" type="Point" line="1157"/>
                <declaration name="label" type="Label" line="1162"/>
                <declaration name="okButton" type="Button" line="1166"/>
            </method>
            <javadoc line="1175">
                displays a dialog box describing an error which occurred.                
            </javadoc>
            <method name="displayErrorDialog" type="void" line="1178">
                <params>
                    <param name="w" type="Window"/>
                    <param name="t" type="Throwable"/>
                </params>
                <scope line="1179"/>
            </method>
            <javadoc line="1185">
                displays a dialog box describing the status of an event                
            </javadoc>
            <method name="displayStatusDialog" type="void" line="1188">
                <params>
                    <param name="w" type="Window"/>
                    <param name="status" type="String"/>
                </params>
                <comment line="1193">
                    find the location of the PolicyTool gui                    
                </comment>
                <declaration name="sd" type="ToolDialog" line="1189"/>
                <declaration name="location" type="Point" line="1193"/>
                <declaration name="label" type="Label" line="1198"/>
                <declaration name="okButton" type="Button" line="1202"/>
            </method>
            <javadoc line="1210">
                display the warning log                
            </javadoc>
            <method name="displayWarningLog" type="void" line="1213">
                <params>
                    <param name="w" type="Window"/>
                </params>
                <comment line="1219">
                    find the location of the PolicyTool gui                    
                </comment>
                <declaration name="wd" type="ToolDialog" line="1215"/>
                <declaration name="location" type="Point" line="1219"/>
                <declaration name="ta" type="TextArea" line="1224"/>
                <scope line="1226"/>
                <declaration name="okButton" type="Button" line="1235"/>
            </method>
            <method name="displayYesNoDialog" type="char" line="1245">
                <params>
                    <param name="w" type="Window"/>
                    <param name="title" type="String"/>
                    <param name="prompt" type="String"/>
                    <param name="yes" type="String"/>
                    <param name="no" type="String"/>
                </params>
                <comment line="1264">
                    StringBuffer to store button press. Must be final.                    
                </comment>
                <comment line="1299">
                    I did encounter this once, don&apos;t why.                    
                </comment>
                <declaration name="tw" type="ToolDialog" line="1247"/>
                <declaration name="location" type="Point" line="1249"/>
                <declaration name="ta" type="TextArea" line="1254"/>
                <declaration name="panel" type="Panel" line="1260"/>
                <declaration name="chooseResult" type="StringBuffer" line="1264"/>
                <declaration name="button" type="Button" line="1266"/>
                <anonymous_class line="1267">
                    <method name="actionPerformed" type="void" line="1268">
                        <params>
                            <param name="e" type="ActionEvent"/>
                        </params>
                    </method>
                </anonymous_class>
                <anonymous_class line="1279">
                    <method name="actionPerformed" type="void" line="1280">
                        <params>
                            <param name="e" type="ActionEvent"/>
                        </params>
                    </method>
                </anonymous_class>
                <scope line="1295"/>
                <scope line="1297"/>
            </method>
        </class>
        <class name="ToolDialog" line="1305">
            <extends class="Dialog"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <javadoc line="1305">
                General dialog window                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="1310"/>
            <declaration name="NOACTION" type="int" line="1313"/>
            <declaration name="QUIT" type="int" line="1314"/>
            <declaration name="NEW" type="int" line="1315"/>
            <declaration name="OPEN" type="int" line="1316"/>
            <declaration name="ALL_PERM_CLASS" type="String" line="1318"/>
            <declaration name="FILE_PERM_CLASS" type="String" line="1320"/>
            <declaration name="X500_PRIN_CLASS" type="String" line="1323"/>
            <declaration name="PERM" type="String" line="1327"/>
            <declaration name="PRIN_TYPE" type="String" line="1331"/>
            <declaration name="PRIN_NAME" type="String" line="1333"/>
            <declaration name="PERM_NAME" type="String" line="1337"/>
            <declaration name="PERM_ACTIONS" type="String" line="1342"/>
            <declaration name="PE_CODEBASE_LABEL" type="int" line="1347"/>
            <declaration name="PE_CODEBASE_TEXTFIELD" type="int" line="1348"/>
            <declaration name="PE_SIGNEDBY_LABEL" type="int" line="1349"/>
            <declaration name="PE_SIGNEDBY_TEXTFIELD" type="int" line="1350"/>
            <declaration name="PE_PANEL0" type="int" line="1352"/>
            <declaration name="PE_ADD_PRIN_BUTTON" type="int" line="1353"/>
            <declaration name="PE_EDIT_PRIN_BUTTON" type="int" line="1354"/>
            <declaration name="PE_REMOVE_PRIN_BUTTON" type="int" line="1355"/>
            <declaration name="PE_PRIN_LABEL" type="int" line="1357"/>
            <declaration name="PE_PRIN_LIST" type="int" line="1358"/>
            <declaration name="PE_PANEL1" type="int" line="1360"/>
            <declaration name="PE_ADD_PERM_BUTTON" type="int" line="1361"/>
            <declaration name="PE_EDIT_PERM_BUTTON" type="int" line="1362"/>
            <declaration name="PE_REMOVE_PERM_BUTTON" type="int" line="1363"/>
            <declaration name="PE_PERM_LIST" type="int" line="1365"/>
            <declaration name="PE_PANEL2" type="int" line="1367"/>
            <declaration name="PE_CANCEL_BUTTON" type="int" line="1368"/>
            <declaration name="PE_DONE_BUTTON" type="int" line="1369"/>
            <declaration name="PRD_DESC_LABEL" type="int" line="1372"/>
            <declaration name="PRD_PRIN_CHOICE" type="int" line="1373"/>
            <declaration name="PRD_PRIN_TEXTFIELD" type="int" line="1374"/>
            <declaration name="PRD_NAME_LABEL" type="int" line="1375"/>
            <declaration name="PRD_NAME_TEXTFIELD" type="int" line="1376"/>
            <declaration name="PRD_CANCEL_BUTTON" type="int" line="1377"/>
            <declaration name="PRD_OK_BUTTON" type="int" line="1378"/>
            <declaration name="PD_DESC_LABEL" type="int" line="1381"/>
            <declaration name="PD_PERM_CHOICE" type="int" line="1382"/>
            <declaration name="PD_PERM_TEXTFIELD" type="int" line="1383"/>
            <declaration name="PD_NAME_CHOICE" type="int" line="1384"/>
            <declaration name="PD_NAME_TEXTFIELD" type="int" line="1385"/>
            <declaration name="PD_ACTIONS_CHOICE" type="int" line="1386"/>
            <declaration name="PD_ACTIONS_TEXTFIELD" type="int" line="1387"/>
            <declaration name="PD_SIGNEDBY_LABEL" type="int" line="1388"/>
            <declaration name="PD_SIGNEDBY_TEXTFIELD" type="int" line="1389"/>
            <declaration name="PD_CANCEL_BUTTON" type="int" line="1390"/>
            <declaration name="PD_OK_BUTTON" type="int" line="1391"/>
            <declaration name="EDIT_KEYSTORE" type="int" line="1394"/>
            <declaration name="KSD_NAME_LABEL" type="int" line="1397"/>
            <declaration name="KSD_NAME_TEXTFIELD" type="int" line="1398"/>
            <declaration name="KSD_TYPE_LABEL" type="int" line="1399"/>
            <declaration name="KSD_TYPE_TEXTFIELD" type="int" line="1400"/>
            <declaration name="KSD_PROVIDER_LABEL" type="int" line="1401"/>
            <declaration name="KSD_PROVIDER_TEXTFIELD" type="int" line="1402"/>
            <declaration name="KSD_PWD_URL_LABEL" type="int" line="1403"/>
            <declaration name="KSD_PWD_URL_TEXTFIELD" type="int" line="1404"/>
            <declaration name="KSD_CANCEL_BUTTON" type="int" line="1405"/>
            <declaration name="KSD_OK_BUTTON" type="int" line="1406"/>
            <declaration name="USC_LABEL" type="int" line="1409"/>
            <declaration name="USC_PANEL" type="int" line="1410"/>
            <declaration name="USC_YES_BUTTON" type="int" line="1411"/>
            <declaration name="USC_NO_BUTTON" type="int" line="1412"/>
            <declaration name="USC_CANCEL_BUTTON" type="int" line="1413"/>
            <declaration name="CRPE_LABEL1" type="int" line="1416"/>
            <declaration name="CRPE_LABEL2" type="int" line="1417"/>
            <declaration name="CRPE_PANEL" type="int" line="1418"/>
            <declaration name="CRPE_PANEL_OK" type="int" line="1419"/>
            <declaration name="CRPE_PANEL_CANCEL" type="int" line="1420"/>
            <declaration name="PERMISSION" type="int" line="1423"/>
            <declaration name="PERMISSION_NAME" type="int" line="1424"/>
            <declaration name="PERMISSION_ACTIONS" type="int" line="1425"/>
            <declaration name="PERMISSION_SIGNEDBY" type="int" line="1426"/>
            <declaration name="PRINCIPAL_TYPE" type="int" line="1427"/>
            <declaration name="PRINCIPAL_NAME" type="int" line="1428"/>
            <declaration name="PERM_ARRAY" type="java.util.ArrayList&lt;Perm&gt;" line="1430"/>
            <declaration name="PRIN_ARRAY" type="java.util.ArrayList&lt;Prin&gt;" line="1431"/>
            <declaration name="tool" type="PolicyTool" line="1432"/>
            <declaration name="tw" type="ToolWindow" line="1433"/>
            <scope line="1435"/>
            <method name="ToolDialog" type="constructor" line="1472">
                <params>
                    <param name="title" type="String"/>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="modal" type="boolean"/>
                </params>
            </method>
            <javadoc line="1480">
                get the Perm instance based on either the (shortened) class name
                  or the fully qualified class name                
            </javadoc>
            <method name="getPerm" type="Perm" line="1484">
                <params>
                    <param name="clazz" type="String"/>
                    <param name="fullClassName" type="boolean"/>
                </params>
                <scope line="1485">
                    <declaration name="next" type="Perm" line="1486"/>
                    <scope line="1487">
                        <scope line="1488"/>
                    </scope>
                    <scope line="1491">
                        <scope line="1492"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="1500">
                get the Prin instance based on either the (shortened) class name
                  or the fully qualified class name                
            </javadoc>
            <method name="getPrin" type="Prin" line="1504">
                <params>
                    <param name="clazz" type="String"/>
                    <param name="fullClassName" type="boolean"/>
                </params>
                <scope line="1505">
                    <declaration name="next" type="Prin" line="1506"/>
                    <scope line="1507">
                        <scope line="1508"/>
                    </scope>
                    <scope line="1511">
                        <scope line="1512"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="1520">
                pop up a dialog so the user can enter info to add a new PolicyEntry
                  - if edit is TRUE, then the user is editing an existing entry
                  and we should display the original info as well.
                  - the other reason we need the &apos;edit&apos; boolean is we need to know
                  when we are adding a NEW policy entry.  in this case, we can
                  not simply update the existing entry, because it doesn&apos;t exist.
                  we ONLY update the GUI listing/info, and then when the user
                  finally clicks &apos;OK&apos; or &apos;DONE&apos;, then we can collect that info
                  and add it to the policy.                
            </javadoc>
            <method name="displayPolicyEntryDialog" type="void" line="1532">
                <params>
                    <param name="edit" type="boolean"/>
                </params>
                <comment line="1548">
                    find where the PolicyTool gui is                    
                </comment>
                <comment line="1555">
                    get the selected item                    
                </comment>
                <comment line="1560">
                    get principal list                    
                </comment>
                <comment line="1570">
                    get permission list                    
                </comment>
                <comment line="1581">
                    codebase label and textfield                    
                </comment>
                <comment line="1594">
                    signedby label and textfield                    
                </comment>
                <comment line="1606">
                    panel for principal buttons                    
                </comment>
                <comment line="1631">
                    principal label and list                    
                </comment>
                <comment line="1640">
                    panel for permission buttons                    
                </comment>
                <comment line="1667">
                    permission list                    
                </comment>
                <comment line="1673">
                    panel for Done and Cancel buttons                    
                </comment>
                <comment line="1677">
                    Done Button                    
                </comment>
                <comment line="1685">
                    Cancel Button                    
                </comment>
                <comment line="1692">
                    add the panel                    
                </comment>
                <declaration name="listIndex" type="int" line="1534"/>
                <declaration name="entries" type="PolicyEntry" line="1535"/>
                <declaration name="prinList" type="TaggedList" line="1536"/>
                <declaration name="permList" type="TaggedList" line="1541"/>
                <declaration name="location" type="Point" line="1548"/>
                <scope line="1553">
                    <declaration name="policyList" type="List" line="1556"/>
                    <declaration name="principals" type="LinkedList" line="1560"/>
                    <scope line="1562">
                        <declaration name="prinString" type="String" line="1563"/>
                        <declaration name="nextPrin" type="PolicyParser.PrincipalEntry" line="1564"/>
                    </scope>
                    <declaration name="permissions" type="Vector&lt;PolicyParser.PermissionEntry&gt;" line="1570"/>
                    <scope line="1572">
                        <declaration name="permString" type="String" line="1573"/>
                        <declaration name="nextPerm" type="PolicyParser.PermissionEntry" line="1574"/>
                    </scope>
                </scope>
                <declaration name="label" type="Label" line="1581"/>
                <declaration name="tf" type="TextField" line="1584"/>
                <declaration name="panel" type="Panel" line="1606"/>
                <declaration name="button" type="Button" line="1609"/>
            </method>
            <javadoc line="1698">
                Read all the Policy information data in the dialog box
                  and construct a PolicyEntry object with it.                
            </javadoc>
            <method name="getPolicyEntryFromDialog" type="PolicyEntry" line="1706">
                <comment line="1709">
                    get the Codebase                    
                </comment>
                <comment line="1715">
                    get the SignedBy                    
                </comment>
                <comment line="1721">
                    construct a new GrantEntry                    
                </comment>
                <comment line="1725">
                    get the new Principals                    
                </comment>
                <comment line="1733">
                    get the new Permissions                    
                </comment>
                <comment line="1741">
                    construct a new PolicyEntry object                    
                </comment>
                <declaration name="tf" type="TextField" line="1709"/>
                <declaration name="codebase" type="String" line="1710"/>
                <declaration name="signedby" type="String" line="1716"/>
                <declaration name="ge" type="PolicyParser.GrantEntry" line="1721"/>
                <declaration name="prins" type="LinkedList&lt;PolicyParser.PrincipalEntry&gt;" line="1725"/>
                <declaration name="prinList" type="TaggedList" line="1726"/>
                <scope line="1727"/>
                <declaration name="perms" type="Vector&lt;PolicyParser.PermissionEntry&gt;" line="1733"/>
                <declaration name="permList" type="TaggedList" line="1734"/>
                <scope line="1735"/>
                <declaration name="entry" type="PolicyEntry" line="1741"/>
            </method>
            <javadoc line="1746">
                display a dialog box for the user to enter KeyStore information                
            </javadoc>
            <method name="keyStoreDialog" type="void" line="1749">
                <params>
                    <param name="mode" type="int"/>
                </params>
                <comment line="1752">
                    find where the PolicyTool gui is                    
                </comment>
                <comment line="1759">
                    KeyStore label and textfield                    
                </comment>
                <comment line="1767">
                    URL to U R L, so that accessibility reader will pronounce well                    
                </comment>
                <comment line="1774">
                    KeyStore type and textfield                    
                </comment>
                <comment line="1786">
                    KeyStore provider and textfield                    
                </comment>
                <comment line="1799">
                    KeyStore password URL and textfield                    
                </comment>
                <comment line="1812">
                    OK button                    
                </comment>
                <comment line="1819">
                    cancel button                    
                </comment>
                <declaration name="location" type="Point" line="1752"/>
                <scope line="1756">
                    <declaration name="label" type="Label" line="1759"/>
                    <declaration name="tf" type="TextField" line="1764"/>
                    <declaration name="okButton" type="Button" line="1812"/>
                    <declaration name="cancelButton" type="Button" line="1819"/>
                </scope>
            </method>
            <javadoc line="1828">
                display a dialog box for the user to input Principal info
                  if editPolicyEntry is false, then we are adding Principals to
                  a new PolicyEntry, and we only update the GUI listing
                  with the new Principal.
                  if edit is true, then we are editing an existing Policy entry.                
            </javadoc>
            <method name="displayPrincipalDialog" type="void" line="1837">
                <params>
                    <param name="editPolicyEntry" type="boolean"/>
                    <param name="edit" type="boolean"/>
                </params>
                <comment line="1842">
                    get the Principal selected from the Principal List                    
                </comment>
                <comment line="1854">
                    find where the PolicyTool gui is                    
                </comment>
                <comment line="1860">
                    description label                    
                </comment>
                <comment line="1868">
                    principal choice                    
                </comment>
                <comment line="1894">
                    principal textfield                    
                </comment>
                <comment line="1904">
                    name label and textfield                    
                </comment>
                <comment line="1918">
                    OK button                    
                </comment>
                <comment line="1926">
                    cancel button                    
                </comment>
                <declaration name="editMe" type="PolicyParser.PrincipalEntry" line="1839"/>
                <declaration name="prinList" type="TaggedList" line="1842"/>
                <declaration name="prinIndex" type="int" line="1843"/>
                <scope line="1845"/>
                <declaration name="newTD" type="ToolDialog" line="1849"/>
                <declaration name="location" type="Point" line="1854"/>
                <declaration name="label" type="Label" line="1860"/>
                <declaration name="choice" type="Choice" line="1868"/>
                <scope line="1871">
                    <declaration name="next" type="Prin" line="1872"/>
                </scope>
                <scope line="1877">
                    <scope line="1879"/>
                    <scope line="1881">
                        <declaration name="inputPrin" type="Prin" line="1882"/>
                        <scope line="1883"/>
                    </scope>
                </scope>
                <declaration name="tf" type="TextField" line="1894"/>
                <declaration name="okButton" type="Button" line="1918"/>
                <declaration name="cancelButton" type="Button" line="1926"/>
            </method>
            <javadoc line="1935">
                display a dialog box for the user to input Permission info
                  if editPolicyEntry is false, then we are adding Permissions to
                  a new PolicyEntry, and we only update the GUI listing
                  with the new Permission.
                  if edit is true, then we are editing an existing Permission entry.                
            </javadoc>
            <method name="displayPermissionDialog" type="void" line="1944">
                <params>
                    <param name="editPolicyEntry" type="boolean"/>
                    <param name="edit" type="boolean"/>
                </params>
                <comment line="1949">
                    get the Permission selected from the Permission List                    
                </comment>
                <comment line="1961">
                    find where the PolicyTool gui is                    
                </comment>
                <comment line="1967">
                    description label                    
                </comment>
                <comment line="1975">
                    permission choice (added in alphabetical order)                    
                </comment>
                <comment line="1988">
                    permission textfield                    
                </comment>
                <comment line="2002">
                    name label and textfield                    
                </comment>
                <comment line="2019">
                    actions label and textfield                    
                </comment>
                <comment line="2036">
                    signedby label and textfield                    
                </comment>
                <comment line="2048">
                    OK button                    
                </comment>
                <comment line="2057">
                    cancel button                    
                </comment>
                <declaration name="editMe" type="PolicyParser.PermissionEntry" line="1946"/>
                <declaration name="permList" type="TaggedList" line="1949"/>
                <declaration name="permIndex" type="int" line="1950"/>
                <scope line="1952"/>
                <declaration name="newTD" type="ToolDialog" line="1956"/>
                <declaration name="location" type="Point" line="1961"/>
                <declaration name="label" type="Label" line="1967"/>
                <declaration name="choice" type="Choice" line="1975"/>
                <scope line="1978">
                    <declaration name="next" type="Perm" line="1979"/>
                </scope>
                <declaration name="tf" type="TextField" line="1988"/>
                <scope line="1991">
                    <declaration name="inputPerm" type="Perm" line="1992"/>
                    <scope line="1993"/>
                </scope>
                <scope line="2008"/>
                <scope line="2025"/>
                <declaration name="okButton" type="Button" line="2048"/>
                <declaration name="cancelButton" type="Button" line="2057"/>
            </method>
            <javadoc line="2066">
                construct a Principal object from the Principal Info Dialog Box                
            </javadoc>
            <method name="getPrinFromDialog" type="PolicyParser.PrincipalEntry" line="2069">
                <comment line="2093">
                    make this consistent with what PolicyParser does
                     when it sees an empty principal class                    
                </comment>
                <declaration name="tf" type="TextField" line="2071"/>
                <declaration name="pclass" type="String" line="2072"/>
                <declaration name="pname" type="String" line="2074"/>
                <scope line="2075"/>
                <scope line="2078"/>
                <declaration name="pppe" type="PolicyParser.PrincipalEntry" line="2082"/>
                <scope line="2085"/>
                <scope line="2088"/>
                <scope line="2091"/>
            </method>
            <javadoc line="2124">
                construct a Permission object from the Permission Info Dialog Box                
            </javadoc>
            <method name="getPermFromDialog" type="PolicyParser.PermissionEntry" line="2127">
                <comment line="2142">
                    When the permission is FilePermission, we need to check the name
                     to make sure it&apos;s not escaped. We believe --
                    
                     String             name.lastIndexOf(&quot;\\\\&quot;)
                     ----------------   ------------------------
                     c:\foo\bar         -1, legal
                     c:\\foo\\bar       2, illegal
                     \\server\share     0, legal
                     \\\\server\share   2, illegal                    
                </comment>
                <comment line="2161">
                    an invisible exception                    
                </comment>
                <comment line="2165">
                    get the Actions                    
                </comment>
                <comment line="2171">
                    get the Signed By                    
                </comment>
                <comment line="2181">
                    see if the signers have public keys                    
                </comment>
                <declaration name="tf" type="TextField" line="2129"/>
                <declaration name="permission" type="String" line="2130"/>
                <declaration name="name" type="String" line="2132"/>
                <scope line="2136"/>
                <scope line="2151">
                    <declaration name="result" type="char" line="2152"/>
                    <scope line="2159"/>
                </scope>
                <declaration name="actions" type="String" line="2166"/>
                <declaration name="signedBy" type="String" line="2172"/>
                <declaration name="pppe" type="PolicyParser.PermissionEntry" line="2176"/>
                <scope line="2181">
                    <declaration name="signers" type="String" line="2182"/>
                    <scope line="2183">
                        <scope line="2184">
                            <declaration name="pubKey" type="PublicKey" line="2185"/>
                            <scope line="2186">
                                <declaration name="form" type="MessageFormat" line="2187"/>
                                <declaration name="source" type="Object[]" line="2190"/>
                            </scope>
                        </scope>
                        <scope line="2194"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="2202">
                confirm that the user REALLY wants to remove the Policy Entry                
            </javadoc>
            <method name="displayConfirmRemovePolicyEntry" type="void" line="2205">
                <comment line="2208">
                    find the entry to be removed                    
                </comment>
                <comment line="2213">
                    find where the PolicyTool gui is                    
                </comment>
                <comment line="2218">
                    ask the user do they really want to do this?                    
                </comment>
                <comment line="2225">
                    display the policy entry                    
                </comment>
                <comment line="2250">
                    add OK/CANCEL buttons in a new panel                    
                </comment>
                <comment line="2254">
                    OK button                    
                </comment>
                <comment line="2262">
                    cancel button                    
                </comment>
                <declaration name="list" type="List" line="2208"/>
                <declaration name="index" type="int" line="2209"/>
                <declaration name="entries" type="PolicyEntry" line="2210"/>
                <declaration name="location" type="Point" line="2213"/>
                <declaration name="label" type="Label" line="2218"/>
                <declaration name="perms" type="Vector&lt;PolicyParser.PermissionEntry&gt;" line="2231"/>
                <scope line="2233">
                    <declaration name="nextPerm" type="PolicyParser.PermissionEntry" line="2234"/>
                    <declaration name="permString" type="String" line="2235"/>
                    <scope line="2237"/>
                    <scope line="2241"/>
                </scope>
                <declaration name="panel" type="Panel" line="2250"/>
                <declaration name="okButton" type="Button" line="2254"/>
                <declaration name="cancelButton" type="Button" line="2262"/>
            </method>
            <javadoc line="2276">
                perform SAVE AS                
            </javadoc>
            <method name="displaySaveAsDialog" type="void" line="2279">
                <params>
                    <param name="nextEvent" type="int"/>
                </params>
                <comment line="2282">
                    pop up a dialog box for the user to enter a filename.                    
                </comment>
                <comment line="2292">
                    see if the user hit cancel                    
                </comment>
                <comment line="2297">
                    get the entered filename                    
                </comment>
                <comment line="2303">
                    save the policy entries to a file                    
                </comment>
                <comment line="2306">
                    display status                    
                </comment>
                <comment line="2312">
                    display the new policy filename                    
                </comment>
                <comment line="2318">
                    now continue with the originally requested command
                     (QUIT, NEW, or OPEN)                    
                </comment>
                <declaration name="fd" type="FileDialog" line="2282"/>
                <anonymous_class line="2284">
                    <method name="windowClosing" type="void" line="2285">
                        <params>
                            <param name="e" type="WindowEvent"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="saveAsFile" type="File" line="2297"/>
                <declaration name="filename" type="String" line="2298"/>
                <scope line="2301">
                    <declaration name="form" type="MessageFormat" line="2306"/>
                    <declaration name="source" type="Object[]" line="2308"/>
                    <declaration name="newFilename" type="TextField" line="2312"/>
                </scope>
                <scope line="2321">
                    <scope line="2322"/>
                    <scope line="2325"/>
                </scope>
                <scope line="2328"/>
            </method>
            <javadoc line="2333">
                ask user if they want to save changes                
            </javadoc>
            <method name="displayUserSave" type="void" line="2336">
                <params>
                    <param name="select" type="int"/>
                </params>
                <comment line="2341">
                    find where the PolicyTool gui is                    
                </comment>
                <comment line="2383">
                    just do the original request (QUIT, NEW, or OPEN)                    
                </comment>
                <scope line="2338">
                    <declaration name="location" type="Point" line="2341"/>
                    <declaration name="label" type="Label" line="2345"/>
                    <declaration name="panel" type="Panel" line="2351"/>
                    <declaration name="yesButton" type="Button" line="2354"/>
                    <declaration name="noButton" type="Button" line="2361"/>
                    <declaration name="cancelButton" type="Button" line="2368"/>
                </scope>
                <scope line="2381"/>
            </method>
            <javadoc line="2387">
                when the user sees the &apos;YES&apos;, &apos;NO&apos;, &apos;CANCEL&apos; buttons on the
                  displayUserSave dialog, and the click on one of them,
                  we need to continue the originally requested action
                  (either QUITting, opening NEW policy file, or OPENing an existing
                  policy file.  do that now.                
            </javadoc>
            <method name="userSaveContinue" type="void" line="2395">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="us" type="ToolDialog"/>
                    <param name="select" type="int"/>
                </params>
                <comment line="2398">
                    now either QUIT, open a NEW policy file, or OPEN an existing policy                    
                </comment>
                <comment line="2415">
                    display the policy entries via the policy list textarea                    
                </comment>
                <comment line="2420">
                    display null policy filename and keystore                    
                </comment>
                <comment line="2429">
                    pop up a dialog box for the user to enter a filename.                    
                </comment>
                <comment line="2439">
                    see if the user hit &apos;cancel&apos;                    
                </comment>
                <comment line="2444">
                    get the entered filename                    
                </comment>
                <comment line="2448">
                    open the policy file                    
                </comment>
                <comment line="2451">
                    display the policy entries via the policy list textarea                    
                </comment>
                <comment line="2462">
                    display the new policy filename                    
                </comment>
                <comment line="2468">
                    inform user of warnings                    
                </comment>
                <comment line="2475">
                    add blank policy listing                    
                </comment>
                <comment line="2482">
                    display a null policy filename                    
                </comment>
                <comment line="2488">
                    display the error                    
                </comment>
                <scope line="2407"/>
                <scope line="2409"/>
                <declaration name="list" type="List" line="2415"/>
                <declaration name="newFilename" type="TextField" line="2420"/>
                <declaration name="fd" type="FileDialog" line="2429"/>
                <anonymous_class line="2431">
                    <method name="windowClosing" type="void" line="2432">
                        <params>
                            <param name="e" type="WindowEvent"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="policyFile" type="String" line="2444"/>
                <scope line="2446">
                    <declaration name="entries" type="PolicyEntry" line="2453"/>
                    <scope line="2454"/>
                    <scope line="2468"/>
                </scope>
                <scope line="2473">
                    <declaration name="form" type="MessageFormat" line="2488"/>
                    <declaration name="source" type="Object[]" line="2490"/>
                </scope>
            </method>
            <javadoc line="2497">
                Return a Menu list of names for a given permission
                  If inputPerm&apos;s TARGETS are null, then this means TARGETS are
                  not allowed to be entered (and the TextField is set to be
                  non-editable).
                  If TARGETS are valid but there are no standard ones
                  (user must enter them by hand) then the TARGETS array may be empty
                  (and of course non-null).                
            </javadoc>
            <method name="setPermissionNames" type="void" line="2508">
                <params>
                    <param name="inputPerm" type="Perm"/>
                    <param name="names" type="Choice"/>
                    <param name="field" type="TextField"/>
                </params>
                <comment line="2514">
                    custom permission                    
                </comment>
                <comment line="2517">
                    standard permission with no targets                    
                </comment>
                <comment line="2520">
                    standard permission with standard targets                    
                </comment>
                <scope line="2512"/>
                <scope line="2515"/>
                <scope line="2518">
                    <scope line="2521"/>
                </scope>
            </method>
            <javadoc line="2527">
                Return a Menu list of actions for a given permission
                  If inputPerm&apos;s ACTIONS are null, then this means ACTIONS are
                  not allowed to be entered (and the TextField is set to be
                  non-editable).  This is typically true for BasicPermissions.
                  If ACTIONS are valid but there are no standard ones
                  (user must enter them by hand) then the ACTIONS array may be empty
                  (and of course non-null).                
            </javadoc>
            <method name="setPermissionActions" type="void" line="2538">
                <params>
                    <param name="inputPerm" type="Perm"/>
                    <param name="actions" type="Choice"/>
                    <param name="field" type="TextField"/>
                </params>
                <comment line="2544">
                    custom permission                    
                </comment>
                <comment line="2547">
                    standard permission with no actions                    
                </comment>
                <comment line="2550">
                    standard permission with standard actions                    
                </comment>
                <scope line="2542"/>
                <scope line="2545"/>
                <scope line="2548">
                    <scope line="2551"/>
                </scope>
            </method>
            <method name="PermissionEntryToUserFriendlyString" type="String" line="2557">
                <params>
                    <param name="pppe" type="PolicyParser.PermissionEntry"/>
                </params>
                <declaration name="result" type="String" line="2558"/>
                <scope line="2559"/>
                <scope line="2562"/>
                <scope line="2565"/>
            </method>
            <method name="PrincipalEntryToUserFriendlyString" type="String" line="2571">
                <params>
                    <param name="pppe" type="PolicyParser.PrincipalEntry"/>
                </params>
                <declaration name="sw" type="StringWriter" line="2572"/>
                <declaration name="pw" type="PrintWriter" line="2573"/>
            </method>
        </class>
        <class name="ToolWindowListener" line="2579">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="WindowListener"/>
            <javadoc line="2579">
                Event handler for the PolicyTool window                
            </javadoc>
            <declaration name="tw" type="ToolWindow" line="2584"/>
            <method name="ToolWindowListener" type="constructor" line="2586">
                <params>
                    <param name="tw" type="ToolWindow"/>
                </params>
            </method>
            <method name="windowOpened" type="void" line="2590">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
            <method name="windowClosing" type="void" line="2593">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
                <comment line="2596">
                    XXX
                     should we ask user if they want to save changes?
                     (we do if they choose the Menu-&gt;Exit)
                     seems that if they kill the application by hand,
                     we don&apos;t have to ask.                    
                </comment>
            </method>
            <method name="windowClosed" type="void" line="2606">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
            <method name="windowIconified" type="void" line="2610">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
            <method name="windowDeiconified" type="void" line="2613">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
            <method name="windowActivated" type="void" line="2616">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
            <method name="windowDeactivated" type="void" line="2619">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
        </class>
        <class name="PolicyListListener" line="2623">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="ActionListener"/>
            <javadoc line="2623">
                Event handler for the Policy List                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="2628"/>
            <declaration name="tw" type="ToolWindow" line="2629"/>
            <method name="PolicyListListener" type="constructor" line="2631">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="2637">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <comment line="2640">
                    display the permission list for a policy entry                    
                </comment>
                <declaration name="td" type="ToolDialog" line="2640"/>
            </method>
        </class>
        <class name="FileMenuListener" line="2646">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="ActionListener"/>
            <javadoc line="2646">
                Event handler for the File Menu                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="2651"/>
            <declaration name="tw" type="ToolWindow" line="2652"/>
            <method name="FileMenuListener" type="constructor" line="2654">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="2659">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <comment line="2664">
                    ask user if they want to save changes                    
                </comment>
                <comment line="2669">
                    the above method will perform the QUIT as long as the
                     user does not CANCEL the request                    
                </comment>
                <comment line="2675">
                    ask user if they want to save changes                    
                </comment>
                <comment line="2680">
                    the above method will perform the NEW as long as the
                     user does not CANCEL the request                    
                </comment>
                <comment line="2686">
                    ask user if they want to save changes                    
                </comment>
                <comment line="2691">
                    the above method will perform the OPEN as long as the
                     user does not CANCEL the request                    
                </comment>
                <comment line="2697">
                    get the previously entered filename                    
                </comment>
                <comment line="2701">
                    if there is no filename, do a SAVE_AS                    
                </comment>
                <comment line="2703">
                    user wants to SAVE AS                    
                </comment>
                <comment line="2709">
                    save the policy entries to a file                    
                </comment>
                <comment line="2712">
                    display status                    
                </comment>
                <comment line="2732">
                    user wants to SAVE AS                    
                </comment>
                <scope line="2661">
                    <declaration name="td" type="ToolDialog" line="2664"/>
                </scope>
                <scope line="2672">
                    <declaration name="td" type="ToolDialog" line="2675"/>
                </scope>
                <scope line="2683">
                    <declaration name="td" type="ToolDialog" line="2686"/>
                </scope>
                <scope line="2694">
                    <declaration name="filename" type="String" line="2697"/>
                    <scope line="2701">
                        <declaration name="td" type="ToolDialog" line="2703"/>
                    </scope>
                    <scope line="2706">
                        <scope line="2707">
                            <declaration name="form" type="MessageFormat" line="2712"/>
                            <declaration name="source" type="Object[]" line="2715"/>
                        </scope>
                        <scope line="2717">
                            <scope line="2718"/>
                            <scope line="2721"/>
                        </scope>
                        <scope line="2724"/>
                    </scope>
                </scope>
                <scope line="2729">
                    <declaration name="td" type="ToolDialog" line="2732"/>
                </scope>
                <scope line="2737"/>
            </method>
        </class>
        <class name="MainWindowListener" line="2743">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="ActionListener"/>
            <javadoc line="2743">
                Event handler for the main window buttons and Edit Menu                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="2748"/>
            <declaration name="tw" type="ToolWindow" line="2749"/>
            <method name="MainWindowListener" type="constructor" line="2751">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="2756">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <comment line="2762">
                    display a dialog box for the user to enter policy info                    
                </comment>
                <comment line="2770">
                    get the selected entry                    
                </comment>
                <comment line="2779">
                    ask the user if they really want to remove the policy entry                    
                </comment>
                <comment line="2787">
                    get the selected entry                    
                </comment>
                <comment line="2796">
                    display the permission list for a policy entry                    
                </comment>
                <comment line="2804">
                    display a dialog box for the user to enter keystore info                    
                </comment>
                <scope line="2759">
                    <declaration name="td" type="ToolDialog" line="2762"/>
                </scope>
                <scope line="2767">
                    <declaration name="list" type="List" line="2770"/>
                    <declaration name="index" type="int" line="2771"/>
                    <scope line="2772"/>
                    <declaration name="td" type="ToolDialog" line="2779"/>
                </scope>
                <scope line="2784">
                    <declaration name="list" type="List" line="2787"/>
                    <declaration name="index" type="int" line="2788"/>
                    <scope line="2789"/>
                    <declaration name="td" type="ToolDialog" line="2796"/>
                </scope>
                <scope line="2801">
                    <declaration name="td" type="ToolDialog" line="2804"/>
                </scope>
            </method>
        </class>
        <class name="AddEntryDoneButtonListener" line="2811">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="ActionListener"/>
            <javadoc line="2811">
                Event handler for AddEntryDoneButton button
                  -- if edit is TRUE, then we are EDITing an existing PolicyEntry
                  and we need to update both the policy and the GUI listing.
                  if edit is FALSE, then we are ADDing a new PolicyEntry,
                  so we only need to update the GUI listing.                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="2821"/>
            <declaration name="tw" type="ToolWindow" line="2822"/>
            <declaration name="td" type="ToolDialog" line="2823"/>
            <declaration name="edit" type="boolean" line="2824"/>
            <method name="AddEntryDoneButtonListener" type="constructor" line="2827">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="td" type="ToolDialog"/>
                    <param name="edit" type="boolean"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="2834">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <comment line="2838">
                    get a PolicyEntry object from the dialog policy info                    
                </comment>
                <comment line="2842">
                    see if all the signers have public keys                    
                </comment>
                <comment line="2858">
                    add the entry                    
                </comment>
                <scope line="2836">
                    <declaration name="newEntry" type="PolicyEntry" line="2838"/>
                    <declaration name="newGe" type="PolicyParser.GrantEntry" line="2839"/>
                    <scope line="2842">
                        <declaration name="signers" type="String" line="2843"/>
                        <scope line="2844">
                            <declaration name="pubKey" type="PublicKey" line="2845"/>
                            <scope line="2846">
                                <declaration name="form" type="MessageFormat" line="2847"/>
                                <declaration name="source" type="Object[]" line="2850"/>
                            </scope>
                        </scope>
                    </scope>
                    <declaration name="policyList" type="List" line="2858"/>
                    <scope line="2859">
                        <declaration name="listIndex" type="int" line="2860"/>
                        <declaration name="newCodeBaseStr" type="String" line="2862"/>
                    </scope>
                    <scope line="2867"/>
                </scope>
                <scope line="2875"/>
            </method>
        </class>
        <class name="ChangeKeyStoreOKButtonListener" line="2881">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="ActionListener"/>
            <javadoc line="2881">
                Event handler for ChangeKeyStoreOKButton button                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="2886"/>
            <declaration name="tw" type="ToolWindow" line="2887"/>
            <declaration name="td" type="ToolDialog" line="2888"/>
            <method name="ChangeKeyStoreOKButtonListener" type="constructor" line="2891">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="td" type="ToolDialog"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="2897">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <declaration name="URLString" type="String" line="2899"/>
                <declaration name="type" type="String" line="2901"/>
                <declaration name="provider" type="String" line="2903"/>
                <declaration name="pwdURL" type="String" line="2905"/>
                <scope line="2908"/>
                <scope line="2915">
                    <declaration name="form" type="MessageFormat" line="2916"/>
                    <declaration name="source" type="Object[]" line="2918"/>
                </scope>
            </method>
        </class>
        <class name="AddPrinButtonListener" line="2927">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="ActionListener"/>
            <javadoc line="2927">
                Event handler for AddPrinButton button                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="2932"/>
            <declaration name="tw" type="ToolWindow" line="2933"/>
            <declaration name="td" type="ToolDialog" line="2934"/>
            <declaration name="editPolicyEntry" type="boolean" line="2935"/>
            <method name="AddPrinButtonListener" type="constructor" line="2938">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="td" type="ToolDialog"/>
                    <param name="editPolicyEntry" type="boolean"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="2945">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <comment line="2948">
                    display a dialog box for the user to enter principal info                    
                </comment>
            </method>
        </class>
        <class name="AddPermButtonListener" line="2952">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="ActionListener"/>
            <javadoc line="2952">
                Event handler for AddPermButton button                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="2957"/>
            <declaration name="tw" type="ToolWindow" line="2958"/>
            <declaration name="td" type="ToolDialog" line="2959"/>
            <declaration name="editPolicyEntry" type="boolean" line="2960"/>
            <method name="AddPermButtonListener" type="constructor" line="2963">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="td" type="ToolDialog"/>
                    <param name="editPolicyEntry" type="boolean"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="2970">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <comment line="2973">
                    display a dialog box for the user to enter permission info                    
                </comment>
            </method>
        </class>
        <class name="NewPolicyPrinOKButtonListener" line="2977">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="ActionListener"/>
            <javadoc line="2977">
                Event handler for AddPrinOKButton button                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="2982"/>
            <declaration name="tw" type="ToolWindow" line="2983"/>
            <declaration name="listDialog" type="ToolDialog" line="2984"/>
            <declaration name="infoDialog" type="ToolDialog" line="2985"/>
            <declaration name="edit" type="boolean" line="2986"/>
            <method name="NewPolicyPrinOKButtonListener" type="constructor" line="2992">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="listDialog" type="ToolDialog"/>
                    <param name="infoDialog" type="ToolDialog"/>
                    <param name="edit" type="boolean"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="3000">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <comment line="3004">
                    read in the new principal info from Dialog Box                    
                </comment>
                <comment line="3020">
                    add the principal to the GUI principal list                    
                </comment>
                <comment line="3026">
                    if editing, replace the original principal                    
                </comment>
                <comment line="3030">
                    if adding, just add it to the end                    
                </comment>
                <scope line="3002">
                    <declaration name="pppe" type="PolicyParser.PrincipalEntry" line="3004"/>
                    <scope line="3006">
                        <scope line="3007"/>
                        <scope line="3010">
                            <declaration name="form" type="MessageFormat" line="3011"/>
                            <declaration name="source" type="Object[]" line="3014"/>
                        </scope>
                        <declaration name="prinList" type="TaggedList" line="3020"/>
                        <declaration name="prinString" type="String" line="3023"/>
                        <scope line="3024">
                            <declaration name="index" type="int" line="3026"/>
                        </scope>
                        <scope line="3028"/>
                    </scope>
                </scope>
                <scope line="3034"/>
            </method>
        </class>
        <class name="NewPolicyPermOKButtonListener" line="3040">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="ActionListener"/>
            <javadoc line="3040">
                Event handler for AddPermOKButton button                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="3045"/>
            <declaration name="tw" type="ToolWindow" line="3046"/>
            <declaration name="listDialog" type="ToolDialog" line="3047"/>
            <declaration name="infoDialog" type="ToolDialog" line="3048"/>
            <declaration name="edit" type="boolean" line="3049"/>
            <method name="NewPolicyPermOKButtonListener" type="constructor" line="3055">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="listDialog" type="ToolDialog"/>
                    <param name="infoDialog" type="ToolDialog"/>
                    <param name="edit" type="boolean"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="3063">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <comment line="3067">
                    read in the new permission info from Dialog Box                    
                </comment>
                <comment line="3081">
                    add the permission to the GUI permission list                    
                </comment>
                <comment line="3087">
                    if editing, replace the original permission                    
                </comment>
                <comment line="3091">
                    if adding, just add it to the end                    
                </comment>
                <scope line="3065">
                    <declaration name="pppe" type="PolicyParser.PermissionEntry" line="3067"/>
                    <scope line="3070"/>
                    <scope line="3072">
                        <declaration name="form" type="MessageFormat" line="3073"/>
                        <declaration name="source" type="Object[]" line="3075"/>
                    </scope>
                    <declaration name="permList" type="TaggedList" line="3081"/>
                    <declaration name="permString" type="String" line="3084"/>
                    <scope line="3085">
                        <declaration name="which" type="int" line="3087"/>
                    </scope>
                    <scope line="3089"/>
                </scope>
                <scope line="3095"/>
                <scope line="3097"/>
            </method>
        </class>
        <class name="RemovePrinButtonListener" line="3103">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="ActionListener"/>
            <javadoc line="3103">
                Event handler for RemovePrinButton button                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="3108"/>
            <declaration name="tw" type="ToolWindow" line="3109"/>
            <declaration name="td" type="ToolDialog" line="3110"/>
            <declaration name="edit" type="boolean" line="3111"/>
            <method name="RemovePrinButtonListener" type="constructor" line="3114">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="td" type="ToolDialog"/>
                    <param name="edit" type="boolean"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="3121">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <comment line="3124">
                    get the Principal selected from the Principal List                    
                </comment>
                <comment line="3133">
                    remove the principal from the display                    
                </comment>
                <declaration name="prinList" type="TaggedList" line="3124"/>
                <declaration name="prinIndex" type="int" line="3125"/>
                <scope line="3127"/>
            </method>
        </class>
        <class name="RemovePermButtonListener" line="3137">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="ActionListener"/>
            <javadoc line="3137">
                Event handler for RemovePermButton button                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="3142"/>
            <declaration name="tw" type="ToolWindow" line="3143"/>
            <declaration name="td" type="ToolDialog" line="3144"/>
            <declaration name="edit" type="boolean" line="3145"/>
            <method name="RemovePermButtonListener" type="constructor" line="3148">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="td" type="ToolDialog"/>
                    <param name="edit" type="boolean"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="3155">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <comment line="3158">
                    get the Permission selected from the Permission List                    
                </comment>
                <comment line="3167">
                    remove the permission from the display                    
                </comment>
                <declaration name="permList" type="TaggedList" line="3158"/>
                <declaration name="permIndex" type="int" line="3159"/>
                <scope line="3161"/>
            </method>
        </class>
        <class name="EditPrinButtonListener" line="3172">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="ActionListener"/>
            <javadoc line="3172">
                Event handler for Edit Principal button
                  We need the editPolicyEntry boolean to tell us if the user is
                  adding a new PolicyEntry at this time, or editing an existing entry.
                  If the user is adding a new PolicyEntry, we ONLY update the
                  GUI listing.  If the user is editing an existing PolicyEntry, we
                  update both the GUI listing and the actual PolicyEntry.                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="3183"/>
            <declaration name="tw" type="ToolWindow" line="3184"/>
            <declaration name="td" type="ToolDialog" line="3185"/>
            <declaration name="editPolicyEntry" type="boolean" line="3186"/>
            <method name="EditPrinButtonListener" type="constructor" line="3189">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="td" type="ToolDialog"/>
                    <param name="editPolicyEntry" type="boolean"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="3196">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <comment line="3199">
                    get the Principal selected from the Principal List                    
                </comment>
                <declaration name="list" type="TaggedList" line="3199"/>
                <declaration name="prinIndex" type="int" line="3200"/>
                <scope line="3202"/>
            </method>
        </class>
        <class name="EditPermButtonListener" line="3211">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="ActionListener"/>
            <javadoc line="3211">
                Event handler for Edit Permission button
                  We need the editPolicyEntry boolean to tell us if the user is
                  adding a new PolicyEntry at this time, or editing an existing entry.
                  If the user is adding a new PolicyEntry, we ONLY update the
                  GUI listing.  If the user is editing an existing PolicyEntry, we
                  update both the GUI listing and the actual PolicyEntry.                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="3222"/>
            <declaration name="tw" type="ToolWindow" line="3223"/>
            <declaration name="td" type="ToolDialog" line="3224"/>
            <declaration name="editPolicyEntry" type="boolean" line="3225"/>
            <method name="EditPermButtonListener" type="constructor" line="3228">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="td" type="ToolDialog"/>
                    <param name="editPolicyEntry" type="boolean"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="3235">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <comment line="3238">
                    get the Permission selected from the Permission List                    
                </comment>
                <declaration name="list" type="List" line="3238"/>
                <declaration name="permIndex" type="int" line="3239"/>
                <scope line="3241"/>
            </method>
        </class>
        <class name="PrincipalTypeMenuListener" line="3250">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="ItemListener"/>
            <javadoc line="3250">
                Event handler for Principal Popup Menu                
            </javadoc>
            <declaration name="td" type="ToolDialog" line="3255"/>
            <method name="PrincipalTypeMenuListener" type="constructor" line="3257">
                <params>
                    <param name="td" type="ToolDialog"/>
                </params>
            </method>
            <method name="itemStateChanged" type="void" line="3261">
                <params>
                    <param name="e" type="ItemEvent"/>
                </params>
                <comment line="3273">
                    ignore if they choose &quot;Principal Type:&quot; item                    
                </comment>
                <comment line="3282">
                    if you change the principal, clear the name                    
                </comment>
                <comment line="3287">
                    set the text in the textfield and also modify the
                     pull-down choice menus to reflect the correct possible
                     set of names and actions                    
                </comment>
                <declaration name="prin" type="Choice" line="3263"/>
                <declaration name="prinField" type="TextField" line="3264"/>
                <declaration name="nameField" type="TextField" line="3266"/>
                <scope line="3271">
                    <scope line="3274">
                        <declaration name="inputPrin" type="Prin" line="3275"/>
                    </scope>
                </scope>
                <scope line="3282"/>
                <declaration name="inputPrin" type="Prin" line="3289"/>
                <scope line="3290"/>
            </method>
        </class>
        <class name="PermissionMenuListener" line="3296">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="ItemListener"/>
            <javadoc line="3296">
                Event handler for Permission Popup Menu                
            </javadoc>
            <declaration name="td" type="ToolDialog" line="3301"/>
            <method name="PermissionMenuListener" type="constructor" line="3303">
                <params>
                    <param name="td" type="ToolDialog"/>
                </params>
            </method>
            <method name="itemStateChanged" type="void" line="3307">
                <params>
                    <param name="e" type="ItemEvent"/>
                </params>
                <comment line="3324">
                    ignore if they choose the &apos;Permission:&apos; item                    
                </comment>
                <comment line="3337">
                    if you change the permission, clear the name, actions, and signedBy                    
                </comment>
                <comment line="3344">
                    set the text in the textfield and also modify the
                     pull-down choice menus to reflect the correct possible
                     set of names and actions                    
                </comment>
                <declaration name="perms" type="Choice" line="3309"/>
                <declaration name="names" type="Choice" line="3310"/>
                <declaration name="actions" type="Choice" line="3311"/>
                <declaration name="nameField" type="TextField" line="3312"/>
                <declaration name="actionsField" type="TextField" line="3314"/>
                <declaration name="permField" type="TextField" line="3316"/>
                <declaration name="signedbyField" type="TextField" line="3317"/>
                <scope line="3324">
                    <scope line="3326">
                        <declaration name="inputPerm" type="Perm" line="3328"/>
                        <scope line="3329"/>
                    </scope>
                </scope>
                <scope line="3337"/>
                <declaration name="inputPerm" type="Perm" line="3347"/>
                <scope line="3348"/>
                <scope line="3350"/>
            </method>
        </class>
        <class name="PermissionNameMenuListener" line="3358">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="ItemListener"/>
            <javadoc line="3358">
                Event handler for Permission Name Popup Menu                
            </javadoc>
            <declaration name="td" type="ToolDialog" line="3363"/>
            <method name="PermissionNameMenuListener" type="constructor" line="3365">
                <params>
                    <param name="td" type="ToolDialog"/>
                </params>
            </method>
            <method name="itemStateChanged" type="void" line="3369">
                <params>
                    <param name="e" type="ItemEvent"/>
                </params>
                <declaration name="names" type="Choice" line="3371"/>
                <declaration name="tf" type="TextField" line="3378"/>
            </method>
        </class>
        <class name="PermissionActionsMenuListener" line="3383">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="ItemListener"/>
            <javadoc line="3383">
                Event handler for Permission Actions Popup Menu                
            </javadoc>
            <declaration name="td" type="ToolDialog" line="3388"/>
            <method name="PermissionActionsMenuListener" type="constructor" line="3390">
                <params>
                    <param name="td" type="ToolDialog"/>
                </params>
            </method>
            <method name="itemStateChanged" type="void" line="3394">
                <params>
                    <param name="e" type="ItemEvent"/>
                </params>
                <declaration name="actions" type="Choice" line="3396"/>
                <declaration name="tf" type="TextField" line="3402"/>
                <scope line="3403"/>
                <scope line="3405"/>
            </method>
        </class>
        <class name="ChildWindowListener" line="3412">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="WindowListener"/>
            <javadoc line="3412">
                Event handler for all the children dialogs/windows                
            </javadoc>
            <declaration name="td" type="ToolDialog" line="3417"/>
            <method name="ChildWindowListener" type="constructor" line="3419">
                <params>
                    <param name="td" type="ToolDialog"/>
                </params>
            </method>
            <method name="windowOpened" type="void" line="3423">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
            <method name="windowClosing" type="void" line="3426">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
                <comment line="3428">
                    same as pressing the &quot;cancel&quot; button                    
                </comment>
            </method>
            <method name="windowClosed" type="void" line="3432">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
            <method name="windowIconified" type="void" line="3435">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
            <method name="windowDeiconified" type="void" line="3438">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
            <method name="windowActivated" type="void" line="3441">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
            <method name="windowDeactivated" type="void" line="3444">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
        </class>
        <class name="CancelButtonListener" line="3448">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="ActionListener"/>
            <javadoc line="3448">
                Event handler for CancelButton button                
            </javadoc>
            <declaration name="td" type="ToolDialog" line="3453"/>
            <method name="CancelButtonListener" type="constructor" line="3455">
                <params>
                    <param name="td" type="ToolDialog"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="3459">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
            </method>
        </class>
        <class name="ErrorOKButtonListener" line="3465">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="ActionListener"/>
            <javadoc line="3465">
                Event handler for ErrorOKButton button                
            </javadoc>
            <declaration name="ed" type="ToolDialog" line="3470"/>
            <method name="ErrorOKButtonListener" type="constructor" line="3472">
                <params>
                    <param name="ed" type="ToolDialog"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="3476">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
            </method>
        </class>
        <class name="StatusOKButtonListener" line="3482">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="ActionListener"/>
            <javadoc line="3482">
                Event handler for StatusOKButton button                
            </javadoc>
            <declaration name="sd" type="ToolDialog" line="3487"/>
            <method name="StatusOKButtonListener" type="constructor" line="3489">
                <params>
                    <param name="sd" type="ToolDialog"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="3493">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
            </method>
        </class>
        <class name="UserSaveYesButtonListener" line="3499">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="ActionListener"/>
            <javadoc line="3499">
                Event handler for UserSaveYes button                
            </javadoc>
            <declaration name="us" type="ToolDialog" line="3504"/>
            <declaration name="tool" type="PolicyTool" line="3505"/>
            <declaration name="tw" type="ToolWindow" line="3506"/>
            <declaration name="select" type="int" line="3507"/>
            <method name="UserSaveYesButtonListener" type="constructor" line="3510">
                <params>
                    <param name="us" type="ToolDialog"/>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="select" type="int"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="3517">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <comment line="3520">
                    first get rid of the window                    
                </comment>
                <comment line="3530">
                    the above dialog will continue with the originally
                     requested command if necessary                    
                </comment>
                <comment line="3533">
                    save the policy entries to a file                    
                </comment>
                <comment line="3536">
                    display status                    
                </comment>
                <comment line="3543">
                    now continue with the originally requested command
                     (QUIT, NEW, or OPEN)                    
                </comment>
                <comment line="3548">
                    error -- just report it and bail                    
                </comment>
                <scope line="3523">
                    <declaration name="filename" type="String" line="3524"/>
                    <scope line="3526"/>
                    <scope line="3531">
                        <declaration name="form" type="MessageFormat" line="3536"/>
                        <declaration name="source" type="Object[]" line="3539"/>
                    </scope>
                </scope>
                <scope line="3546"/>
            </method>
        </class>
        <class name="UserSaveNoButtonListener" line="3553">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="ActionListener"/>
            <javadoc line="3553">
                Event handler for UserSaveNoButton                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="3558"/>
            <declaration name="tw" type="ToolWindow" line="3559"/>
            <declaration name="us" type="ToolDialog" line="3560"/>
            <declaration name="select" type="int" line="3561"/>
            <method name="UserSaveNoButtonListener" type="constructor" line="3564">
                <params>
                    <param name="us" type="ToolDialog"/>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="select" type="int"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="3571">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <comment line="3576">
                    now continue with the originally requested command
                     (QUIT, NEW, or OPEN)                    
                </comment>
            </method>
        </class>
        <class name="UserSaveCancelButtonListener" line="3581">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="ActionListener"/>
            <javadoc line="3581">
                Event handler for UserSaveCancelButton                
            </javadoc>
            <declaration name="us" type="ToolDialog" line="3586"/>
            <method name="UserSaveCancelButtonListener" type="constructor" line="3588">
                <params>
                    <param name="us" type="ToolDialog"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="3592">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <comment line="3597">
                    do NOT continue with the originally requested command
                     (QUIT, NEW, or OPEN)                    
                </comment>
            </method>
        </class>
        <class name="ConfirmRemovePolicyEntryOKButtonListener" line="3601">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <implements interface="ActionListener"/>
            <javadoc line="3601">
                Event handler for ConfirmRemovePolicyEntryOKButtonListener                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="3606"/>
            <declaration name="tw" type="ToolWindow" line="3607"/>
            <declaration name="us" type="ToolDialog" line="3608"/>
            <method name="ConfirmRemovePolicyEntryOKButtonListener" type="constructor" line="3611">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="us" type="ToolDialog"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="3617">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <comment line="3619">
                    remove the entry                    
                </comment>
                <comment line="3625">
                    redraw the window listing                    
                </comment>
                <declaration name="list" type="List" line="3619"/>
                <declaration name="index" type="int" line="3620"/>
                <declaration name="entries" type="PolicyEntry" line="3621"/>
                <scope line="3628"/>
            </method>
        </class>
        <class name="NoDisplayException" line="3638">
            <extends class="RuntimeException"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <javadoc line="3638">
                Just a special name, so that the codes dealing with this exception knows
                  it&apos;s special, and does not pop out a warning box.                
            </javadoc>
        </class>
        <class name="TaggedList" line="3646">
            <extends class="List"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <javadoc line="3646">
                This is a java.awt.List that bind an Object to each String it holds.                
            </javadoc>
            <declaration name="data" type="java.util.List&lt;Object&gt;" line="3650"/>
            <method name="TaggedList" type="constructor" line="3651">
                <params>
                    <param name="i" type="int"/>
                    <param name="b" type="boolean"/>
                </params>
            </method>
            <method name="getObject" type="Object" line="3655">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="add" type="void" line="3659">
                <params>
                    <param name="string" type="String"/>
                </params>
            </method>
            <method name="addTaggedItem" type="void" line="3662">
                <params>
                    <param name="string" type="String"/>
                    <param name="object" type="Object"/>
                </params>
            </method>
            <method name="replaceItem" type="void" line="3667">
                <params>
                    <param name="string" type="String"/>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="replaceTaggedItem" type="void" line="3670">
                <params>
                    <param name="string" type="String"/>
                    <param name="object" type="Object"/>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="remove" type="void" line="3675">
                <params>
                    <param name="index" type="int"/>
                </params>
                <comment line="3677">
                    Cannot throw AssertionError, because replaceItem() call remove() internally                    
                </comment>
            </method>
            <method name="removeTaggedItem" type="void" line="3679">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
        </class>
        <class name="Prin" line="3685">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <javadoc line="3685">
                Convenience Principal Classes                
            </javadoc>
            <declaration name="CLASS" type="String" line="3690"/>
            <declaration name="FULL_CLASS" type="String" line="3691"/>
            <method name="Prin" type="constructor" line="3693">
                <params>
                    <param name="clazz" type="String"/>
                    <param name="fullClass" type="String"/>
                </params>
            </method>
        </class>
        <class name="KrbPrin" line="3699">
            <extends class="Prin"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="KrbPrin" type="constructor" line="3700"/>
        </class>
        <class name="X500Prin" line="3706">
            <extends class="Prin"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="X500Prin" type="constructor" line="3707"/>
        </class>
        <class name="Perm" line="3713">
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <javadoc line="3713">
                Convenience Permission Classes                
            </javadoc>
            <declaration name="CLASS" type="String" line="3718"/>
            <declaration name="FULL_CLASS" type="String" line="3719"/>
            <declaration name="TARGETS" type="String[]" line="3720"/>
            <declaration name="ACTIONS" type="String[]" line="3721"/>
            <method name="Perm" type="constructor" line="3724">
                <params>
                    <param name="clazz" type="String"/>
                    <param name="fullClass" type="String"/>
                    <param name="targets" type="String[]"/>
                    <param name="actions" type="String[]"/>
                </params>
            </method>
        </class>
        <class name="AllPerm" line="3733">
            <extends class="Perm"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="AllPerm" type="constructor" line="3734"/>
        </class>
        <class name="AudioPerm" line="3739">
            <extends class="Perm"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="AudioPerm" type="constructor" line="3740"/>
        </class>
        <class name="AuthPerm" line="3751">
            <extends class="Perm"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="AuthPerm" type="constructor" line="3752"/>
        </class>
        <class name="AWTPerm" line="3777">
            <extends class="Perm"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="AWTPerm" type="constructor" line="3778"/>
        </class>
        <class name="DelegationPerm" line="3800">
            <extends class="Perm"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="DelegationPerm" type="constructor" line="3801">
                <comment line="3806">
                    allow user input                    
                </comment>
            </method>
        </class>
        <class name="FilePerm" line="3811">
            <extends class="Perm"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="FilePerm" type="constructor" line="3812"/>
        </class>
        <class name="InqSecContextPerm" line="3827">
            <extends class="Perm"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="InqSecContextPerm" type="constructor" line="3828"/>
        </class>
        <class name="LogPerm" line="3841">
            <extends class="Perm"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="LogPerm" type="constructor" line="3842"/>
        </class>
        <class name="MgmtPerm" line="3852">
            <extends class="Perm"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="MgmtPerm" type="constructor" line="3853"/>
        </class>
        <class name="MBeanPerm" line="3864">
            <extends class="Perm"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="MBeanPerm" type="constructor" line="3865">
                <comment line="3870">
                    allow user input                    
                </comment>
            </method>
        </class>
        <class name="MBeanSvrPerm" line="3893">
            <extends class="Perm"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="MBeanSvrPerm" type="constructor" line="3894"/>
        </class>
        <class name="MBeanTrustPerm" line="3907">
            <extends class="Perm"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="MBeanTrustPerm" type="constructor" line="3908"/>
        </class>
        <class name="NetPerm" line="3918">
            <extends class="Perm"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="NetPerm" type="constructor" line="3919"/>
        </class>
        <class name="PrivCredPerm" line="3937">
            <extends class="Perm"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="PrivCredPerm" type="constructor" line="3938">
                <comment line="3943">
                    allow user input                    
                </comment>
            </method>
        </class>
        <class name="PropPerm" line="3950">
            <extends class="Perm"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="PropPerm" type="constructor" line="3951">
                <comment line="3956">
                    allow user input                    
                </comment>
            </method>
        </class>
        <class name="ReflectPerm" line="3964">
            <extends class="Perm"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="ReflectPerm" type="constructor" line="3965"/>
        </class>
        <class name="RuntimePerm" line="3975">
            <extends class="Perm"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="RuntimePerm" type="constructor" line="3976">
                <comment line="4011">
                    &quot;inheritedChannel&quot;                    
                </comment>
            </method>
        </class>
        <class name="SecurityPerm" line="4016">
            <extends class="Perm"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="SecurityPerm" type="constructor" line="4017">
                <comment line="4036">
                    &quot;setSystemScope&quot;,
                    &quot;setIdentityPublicKey&quot;,
                    &quot;setIdentityInfo&quot;,
                    &quot;addIdentityCertificate&quot;,
                    &quot;removeIdentityCertificate&quot;,
                    &quot;printIdentity&quot;,                    
                </comment>
                <comment line="4048">
                    &quot;getSignerPrivateKey&quot;,
                    &quot;setSignerKeyPair&quot;                    
                </comment>
            </method>
        </class>
        <class name="SerialPerm" line="4054">
            <extends class="Perm"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="SerialPerm" type="constructor" line="4055"/>
        </class>
        <class name="ServicePerm" line="4066">
            <extends class="Perm"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="ServicePerm" type="constructor" line="4067">
                <comment line="4072">
                    allow user input                    
                </comment>
            </method>
        </class>
        <class name="SocketPerm" line="4080">
            <extends class="Perm"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="SocketPerm" type="constructor" line="4081">
                <comment line="4086">
                    allow user input                    
                </comment>
            </method>
        </class>
        <class name="SQLPerm" line="4096">
            <extends class="Perm"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="SQLPerm" type="constructor" line="4097"/>
        </class>
        <class name="SSLPerm" line="4110">
            <extends class="Perm"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="SSLPerm" type="constructor" line="4111"/>
        </class>
        <class name="SubjDelegPerm" line="4122">
            <extends class="Perm"/>
            <comment line="62">
                for i18n                
            </comment>
            <comment line="71">
                anyone can add warnings                
            </comment>
            <comment line="75">
                set to true if policy modified.
                 this way upon exit we know if to ask the user to save changes                
            </comment>
            <comment line="83">
                All of the policy entries are read in from the
                 policy file and stored here.  Updates to the policy entries
                 using addEntry() and removeEntry() are made here.  To ultimately save
                 the policy entries back to the policy file, the SavePolicy button
                 must be clicked.                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="101">
                                
            </comment>
            <comment line="104">
                                
            </comment>
            <comment line="675">
                Parse command line arguments.                
            </comment>
            <comment line="718">
                split instr to words according to capitalization,
                 like, AWTControl -&gt; A W T Control
                 this method is for easy pronounciation                
            </comment>
            <comment line="881">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="884">
                                
            </comment>
            <comment line="895">
                                
            </comment>
            <comment line="921">
                                
            </comment>
            <comment line="928">
                follows MW_PANEL                
            </comment>
            <comment line="1310">
                use serialVersionUID from JDK 1.2.2 for interoperability                
            </comment>
            <comment line="1313">
                                
            </comment>
            <comment line="1327">
                                
            </comment>
            <comment line="1337">
                                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1347">
                                
            </comment>
            <comment line="1372">
                                
            </comment>
            <comment line="1381">
                                
            </comment>
            <comment line="1394">
                                
            </comment>
            <comment line="1397">
                                
            </comment>
            <comment line="1409">
                                
            </comment>
            <comment line="1416">
                                
            </comment>
            <comment line="1423">
                                
            </comment>
            <method name="SubjDelegPerm" type="constructor" line="4123">
                <comment line="4128">
                    allow user input                    
                </comment>
            </method>
        </class>
    </source>