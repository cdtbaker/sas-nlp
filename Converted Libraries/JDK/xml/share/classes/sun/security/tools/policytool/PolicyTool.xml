<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.tools.policytool">
        <import package="java.io"/>
        <import package="java.util.LinkedList"/>
        <import package="java.util.ListIterator"/>
        <import package="java.util.Vector"/>
        <import package="java.util.Enumeration"/>
        <import package="java.net.URL"/>
        <import package="java.net.MalformedURLException"/>
        <import package="java.lang.reflect"/>
        <import package="java.text.Collator"/>
        <import package="java.text.MessageFormat"/>
        <import package="sun.security.util.PropertyExpander"/>
        <import package="sun.security.util.PropertyExpander.ExpandException"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.security.cert.Certificate"/>
        <import package="java.security.cert.CertificateException"/>
        <import package="java.security"/>
        <import package="sun.security.provider"/>
        <import package="sun.security.util.PolicyUtil"/>
        <import package="javax.security.auth.x500.X500Principal"/>
        <class name="PolicyTool" line="22">
            <javadoc line="22">
                PolicyTool may be used by users and administrators to configure the
                  overall java security policy (currently stored in the policy file).
                  Using PolicyTool administrators may add and remove policies from
                  the policy file. &lt;p&gt;                
                <see>
                    java.security.Policy                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <declaration name="rb" type="java.util.ResourceBundle" line="31"/>
            <declaration name="collator" type="Collator" line="32"/>
            <scope line="33"/>
            <declaration name="warnings" type="Vector&lt;String&gt;" line="36"/>
            <declaration name="newWarning" type="boolean" line="37"/>
            <declaration name="modified" type="boolean" line="38"/>
            <declaration name="testing" type="boolean" line="39"/>
            <declaration name="TWOPARAMS" type="Class[]" line="40"/>
            <declaration name="ONEPARAMS" type="Class[]" line="41"/>
            <declaration name="NOPARAMS" type="Class[]" line="42"/>
            <declaration name="policyFileName" type="String" line="43"/>
            <declaration name="policyEntries" type="Vector&lt;PolicyEntry&gt;" line="44"/>
            <declaration name="parser" type="PolicyParser" line="45"/>
            <declaration name="keyStore" type="KeyStore" line="46"/>
            <declaration name="keyStoreName" type="String" line="47"/>
            <declaration name="keyStoreType" type="String" line="48"/>
            <declaration name="keyStoreProvider" type="String" line="49"/>
            <declaration name="keyStorePwdURL" type="String" line="50"/>
            <declaration name="P11KEYSTORE" type="String" line="51"/>
            <declaration name="NONE" type="String" line="52"/>
            <javadoc line="53">
                default constructor                
            </javadoc>
            <method name="PolicyTool" type="constructor" line="56"/>
            <javadoc line="61">
                get the PolicyFileName                
            </javadoc>
            <method name="getPolicyFileName" type="String" line="64"/>
            <javadoc line="67">
                set the PolicyFileName                
            </javadoc>
            <method name="setPolicyFileName" type="void" line="70">
                <params>
                    <param name="policyFileName" type="String"/>
                </params>
            </method>
            <javadoc line="73">
                clear keyStore info                
            </javadoc>
            <method name="clearKeyStoreInfo" type="void" line="76"/>
            <javadoc line="83">
                get the keyStore URL name                
            </javadoc>
            <method name="getKeyStoreName" type="String" line="86"/>
            <javadoc line="89">
                get the keyStore Type                
            </javadoc>
            <method name="getKeyStoreType" type="String" line="92"/>
            <javadoc line="95">
                get the keyStore Provider                
            </javadoc>
            <method name="getKeyStoreProvider" type="String" line="98"/>
            <javadoc line="101">
                get the keyStore password URL                
            </javadoc>
            <method name="getKeyStorePwdURL" type="String" line="104"/>
            <javadoc line="107">
                Open and read a policy file                
            </javadoc>
            <method name="openPolicy" type="void" line="110">
                <params>
                    <param name="filename" type="String"/>
                </params>
                <scope line="117"/>
                <declaration name="enum_" type="Enumeration&lt;PolicyParser.GrantEntry&gt;" line="124"/>
                <scope line="125">
                    <declaration name="ge" type="PolicyParser.GrantEntry" line="126"/>
                    <scope line="127">
                        <declaration name="signers" type="String" line="128"/>
                        <scope line="129">
                            <declaration name="pubKey" type="PublicKey" line="130"/>
                            <scope line="131">
                                <declaration name="form" type="MessageFormat" line="133"/>
                                <declaration name="source" type="Object[]" line="134"/>
                            </scope>
                        </scope>
                    </scope>
                    <declaration name="prinList" type="ListIterator&lt;PolicyParser.PrincipalEntry&gt;" line="139"/>
                    <scope line="140">
                        <declaration name="pe" type="PolicyParser.PrincipalEntry" line="141"/>
                        <scope line="142"/>
                        <scope line="145">
                            <declaration name="form" type="MessageFormat" line="147"/>
                            <declaration name="source" type="Object[]" line="148"/>
                        </scope>
                    </scope>
                    <declaration name="perms" type="Enumeration&lt;PolicyParser.PermissionEntry&gt;" line="152"/>
                    <scope line="153">
                        <declaration name="pe" type="PolicyParser.PermissionEntry" line="154"/>
                        <scope line="155"/>
                        <scope line="158">
                            <declaration name="form" type="MessageFormat" line="160"/>
                            <declaration name="source" type="Object[]" line="161"/>
                        </scope>
                        <scope line="164">
                            <declaration name="form" type="MessageFormat" line="166"/>
                            <declaration name="source" type="Object[]" line="167"/>
                        </scope>
                        <scope line="170">
                            <declaration name="signers" type="String" line="171"/>
                            <scope line="172">
                                <declaration name="pubKey" type="PublicKey" line="173"/>
                                <scope line="174">
                                    <declaration name="form" type="MessageFormat" line="176"/>
                                    <declaration name="source" type="Object[]" line="177"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                    <declaration name="pEntry" type="PolicyEntry" line="183"/>
                </scope>
            </method>
            <javadoc line="188">
                Save a policy to a file                
            </javadoc>
            <method name="savePolicy" type="void" line="191">
                <params>
                    <param name="filename" type="String"/>
                </params>
            </method>
            <javadoc line="199">
                Open the KeyStore                
            </javadoc>
            <method name="openKeyStore" type="void" line="202">
                <params>
                    <param name="name" type="String"/>
                    <param name="type" type="String"/>
                    <param name="provider" type="String"/>
                    <param name="pwdURL" type="String"/>
                </params>
                <scope line="203"/>
                <declaration name="policyURL" type="URL" line="210"/>
                <scope line="211">
                    <declaration name="pfile" type="File" line="212"/>
                </scope>
                <scope line="215"/>
                <scope line="218"/>
                <scope line="221"/>
                <scope line="224"/>
                <scope line="227">
                    <declaration name="MSG" type="String" line="228"/>
                    <declaration name="cause" type="Throwable" line="229"/>
                    <scope line="230"/>
                    <scope line="233"/>
                </scope>
            </method>
            <javadoc line="242">
                Add a Grant entry to the overall policy at the specified index.
                  A policy entry consists of a CodeSource.                
            </javadoc>
            <method name="addEntry" type="boolean" line="246">
                <params>
                    <param name="pe" type="PolicyEntry"/>
                    <param name="index" type="int"/>
                </params>
                <scope line="247"/>
                <scope line="251">
                    <declaration name="origPe" type="PolicyEntry" line="252"/>
                </scope>
            </method>
            <javadoc line="258">
                Add a Principal entry to an existing PolicyEntry at the specified index.
                  A Principal entry consists of a class, and name.
                  If the principal already exists, it is not added again.                
            </javadoc>
            <method name="addPrinEntry" type="boolean" line="263">
                <params>
                    <param name="pe" type="PolicyEntry"/>
                    <param name="newPrin" type="PolicyParser.PrincipalEntry"/>
                    <param name="index" type="int"/>
                </params>
                <declaration name="grantEntry" type="PolicyParser.GrantEntry" line="264"/>
                <declaration name="prinList" type="LinkedList&lt;PolicyParser.PrincipalEntry&gt;" line="266"/>
            </method>
            <javadoc line="272">
                Add a Permission entry to an existing PolicyEntry at the specified index.
                  A Permission entry consists of a permission, name, and actions.
                  If the permission already exists, it is not added again.                
            </javadoc>
            <method name="addPermEntry" type="boolean" line="277">
                <params>
                    <param name="pe" type="PolicyEntry"/>
                    <param name="newPerm" type="PolicyParser.PermissionEntry"/>
                    <param name="index" type="int"/>
                </params>
                <declaration name="grantEntry" type="PolicyParser.GrantEntry" line="278"/>
                <declaration name="permList" type="Vector&lt;PolicyParser.PermissionEntry&gt;" line="280"/>
            </method>
            <javadoc line="286">
                Remove a Permission entry from an existing PolicyEntry.                
            </javadoc>
            <method name="removePermEntry" type="boolean" line="289">
                <params>
                    <param name="pe" type="PolicyEntry"/>
                    <param name="perm" type="PolicyParser.PermissionEntry"/>
                </params>
                <declaration name="ppge" type="PolicyParser.GrantEntry" line="290"/>
            </method>
            <javadoc line="294">
                remove an entry from the overall policy                
            </javadoc>
            <method name="removeEntry" type="boolean" line="297">
                <params>
                    <param name="pe" type="PolicyEntry"/>
                </params>
            </method>
            <javadoc line="302">
                retrieve all Policy Entries                
            </javadoc>
            <method name="getEntry" type="PolicyEntry[]" line="305">
                <scope line="306">
                    <declaration name="entries" type="PolicyEntry" line="307"/>
                </scope>
            </method>
            <javadoc line="313">
                Retrieve the public key mapped to a particular name.
                  If the key has expired, a KeyException is thrown.                
            </javadoc>
            <method name="getPublicKeyAlias" type="PublicKey" line="317">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="318"/>
                <declaration name="cert" type="Certificate" line="321"/>
                <scope line="322"/>
                <declaration name="pubKey" type="PublicKey" line="325"/>
            </method>
            <javadoc line="328">
                Retrieve all the alias names stored in the certificate database                
            </javadoc>
            <method name="getPublicKeyAlias" type="String[]" line="331">
                <declaration name="numAliases" type="int" line="332"/>
                <declaration name="aliases" type="String" line="333"/>
                <scope line="334"/>
                <declaration name="enum_" type="Enumeration&lt;String&gt;" line="337"/>
                <scope line="338"/>
                <scope line="342">
                    <scope line="346"/>
                </scope>
            </method>
            <javadoc line="353">
                This method parses a single string of signers separated by commas
                  (&quot;jordan, duke, pippen&quot;) into an array of individual strings.                
            </javadoc>
            <method name="parseSigners" type="String[]" line="357">
                <params>
                    <param name="signedBy" type="String"/>
                </params>
                <declaration name="signers" type="String" line="358"/>
                <declaration name="numSigners" type="int" line="359"/>
                <declaration name="signedByIndex" type="int" line="360"/>
                <declaration name="commaIndex" type="int" line="361"/>
                <declaration name="signerNum" type="int" line="362"/>
                <scope line="363">
                    <scope line="365"/>
                </scope>
                <scope line="373">
                    <scope line="374"/>
                    <scope line="379"/>
                </scope>
            </method>
            <javadoc line="385">
                Check to see if the Principal contents are OK                
            </javadoc>
            <method name="verifyPrincipal" type="void" line="388">
                <params>
                    <param name="type" type="String"/>
                    <param name="name" type="String"/>
                </params>
                <scope line="389"/>
                <declaration name="PRIN" type="Class&lt;?&gt;" line="393"/>
                <declaration name="pc" type="Class&lt;?&gt;" line="394"/>
                <scope line="395">
                    <declaration name="form" type="MessageFormat" line="396"/>
                    <declaration name="source" type="Object[]" line="397"/>
                </scope>
                <scope line="400">
                    <declaration name="newP" type="X500Principal" line="401"/>
                </scope>
            </method>
            <javadoc line="404">
                Check to see if the Permission contents are OK                
            </javadoc>
            <method name="verifyPermission" type="void" line="407">
                <params>
                    <param name="type" type="String"/>
                    <param name="name" type="String"/>
                    <param name="actions" type="String"/>
                </params>
                <declaration name="pc" type="Class&lt;?&gt;" line="408"/>
                <declaration name="c" type="Constructor&lt;?&gt;" line="409"/>
                <declaration name="objects" type="Vector&lt;String&gt;" line="410"/>
                <scope line="415"/>
                <scope line="419"/>
                <scope line="423"/>
                <scope line="427"/>
                <declaration name="parameters" type="Object" line="434"/>
                <declaration name="p" type="Permission" line="435"/>
            </method>
            <method name="parseArgs" type="void" line="437">
                <params>
                    <param name="args" type="String"/>
                </params>
                <declaration name="n" type="int" line="438"/>
                <scope line="439">
                    <declaration name="flags" type="String" line="440"/>
                    <scope line="441"/>
                    <scope line="445">
                        <declaration name="form" type="MessageFormat" line="446"/>
                        <declaration name="source" type="Object[]" line="447"/>
                    </scope>
                </scope>
            </method>
            <method name="usage" type="void" line="453"/>
            <javadoc line="460">
                run the PolicyTool                
            </javadoc>
            <method name="main" type="void" line="463">
                <params>
                    <param name="args" type="String"/>
                </params>
                <declaration name="tw" type="ToolWindow" line="465"/>
            </method>
            <method name="splitToWords" type="String" line="468">
                <params>
                    <param name="instr" type="String"/>
                </params>
            </method>
        </class>
        <class name="PolicyEntry" line="472">
            <javadoc line="472">
                Each entry in the policy configuration file is represented by a
                  PolicyEntry object.
                  A PolicyEntry is a (CodeSource,Permission) pair.  The
                  CodeSource contains the (URL, PublicKey) that together identify
                  where the Java bytecodes come from and who (if anyone) signed
                  them.  The URL could refer to localhost.  The URL could also be
                  null, meaning that this policy entry is given to all comers, as
                  long as they match the signer field.  The signer could be null,
                  meaning the code is not signed.
                  The Permission contains the (Type, Name, Action) triplet.                
            </javadoc>
            <declaration name="codesource" type="CodeSource" line="485"/>
            <declaration name="tool" type="PolicyTool" line="486"/>
            <declaration name="grantEntry" type="PolicyParser.GrantEntry" line="487"/>
            <declaration name="testing" type="boolean" line="488"/>
            <javadoc line="489">
                Create a PolicyEntry object from the information read in
                  from a policy file.                
            </javadoc>
            <method name="PolicyEntry" type="constructor" line="493">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="ge" type="PolicyParser.GrantEntry"/>
                </params>
                <declaration name="location" type="URL" line="495"/>
                <scope line="498"/>
            </method>
            <javadoc line="506">
                get the codesource associated with this PolicyEntry                
            </javadoc>
            <method name="getCodeSource" type="CodeSource" line="509"/>
            <javadoc line="512">
                get the GrantEntry associated with this PolicyEntry                
            </javadoc>
            <method name="getGrantEntry" type="PolicyParser.GrantEntry" line="515"/>
            <javadoc line="518">
                convert the header portion, i.e. codebase, signer, principals, of
                  this policy entry into a string                
            </javadoc>
            <method name="headerToString" type="String" line="522">
                <declaration name="pString" type="String" line="523"/>
                <scope line="524"/>
                <scope line="527"/>
            </method>
            <javadoc line="531">
                convert the Codebase/signer portion of this policy entry into a string                
            </javadoc>
            <method name="codebaseToString" type="String" line="534">
                <declaration name="stringEntry" type="String" line="535"/>
            </method>
            <javadoc line="541">
                convert the Principals portion of this policy entry into a string                
            </javadoc>
            <method name="principalsToString" type="String" line="544">
                <declaration name="result" type="String" line="545"/>
                <scope line="546">
                    <declaration name="buffer" type="StringBuffer" line="547"/>
                    <declaration name="list" type="ListIterator&lt;PolicyParser.PrincipalEntry&gt;" line="548"/>
                    <scope line="549">
                        <declaration name="pppe" type="PolicyParser.PrincipalEntry" line="550"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="558">
                convert this policy entry into a PolicyParser.PermissionEntry                
            </javadoc>
            <method name="toPermissionEntry" type="PolicyParser.PermissionEntry" line="561">
                <params>
                    <param name="perm" type="Permission"/>
                </params>
                <declaration name="actions" type="String" line="562"/>
                <declaration name="pe" type="PolicyParser.PermissionEntry" line="564"/>
            </method>
        </class>
        <class name="ToolWindow" line="568">
            <extends class="Frame"/>
            <javadoc line="568">
                The main window for the PolicyTool                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="572"/>
            <declaration name="TOP_PADDING" type="Insets" line="573"/>
            <declaration name="BOTTOM_PADDING" type="Insets" line="574"/>
            <declaration name="LITE_BOTTOM_PADDING" type="Insets" line="575"/>
            <declaration name="LR_PADDING" type="Insets" line="576"/>
            <declaration name="TOP_BOTTOM_PADDING" type="Insets" line="577"/>
            <declaration name="L_TOP_BOTTOM_PADDING" type="Insets" line="578"/>
            <declaration name="LR_BOTTOM_PADDING" type="Insets" line="579"/>
            <declaration name="L_BOTTOM_PADDING" type="Insets" line="580"/>
            <declaration name="R_BOTTOM_PADDING" type="Insets" line="581"/>
            <declaration name="NEW_POLICY_FILE" type="String" line="582"/>
            <declaration name="OPEN_POLICY_FILE" type="String" line="583"/>
            <declaration name="SAVE_POLICY_FILE" type="String" line="584"/>
            <declaration name="SAVE_AS_POLICY_FILE" type="String" line="585"/>
            <declaration name="VIEW_WARNINGS" type="String" line="586"/>
            <declaration name="QUIT" type="String" line="587"/>
            <declaration name="ADD_POLICY_ENTRY" type="String" line="588"/>
            <declaration name="EDIT_POLICY_ENTRY" type="String" line="589"/>
            <declaration name="REMOVE_POLICY_ENTRY" type="String" line="590"/>
            <declaration name="EDIT_KEYSTORE" type="String" line="591"/>
            <declaration name="ADD_PUBKEY_ALIAS" type="String" line="592"/>
            <declaration name="REMOVE_PUBKEY_ALIAS" type="String" line="593"/>
            <declaration name="MW_FILENAME_LABEL" type="int" line="594"/>
            <declaration name="MW_FILENAME_TEXTFIELD" type="int" line="595"/>
            <declaration name="MW_PANEL" type="int" line="596"/>
            <declaration name="MW_ADD_BUTTON" type="int" line="597"/>
            <declaration name="MW_EDIT_BUTTON" type="int" line="598"/>
            <declaration name="MW_REMOVE_BUTTON" type="int" line="599"/>
            <declaration name="MW_POLICY_LIST" type="int" line="600"/>
            <declaration name="tool" type="PolicyTool" line="601"/>
            <javadoc line="602">
                Constructor                
            </javadoc>
            <method name="ToolWindow" type="constructor" line="605">
                <params>
                    <param name="tool" type="PolicyTool"/>
                </params>
            </method>
            <javadoc line="608">
                Initialize the PolicyTool window with the necessary components                
            </javadoc>
            <method name="initWindow" type="void" line="611">
                <declaration name="menuBar" type="MenuBar" line="612"/>
                <declaration name="menu" type="Menu" line="613"/>
                <declaration name="label" type="Label" line="628"/>
                <declaration name="tf" type="TextField" line="630"/>
                <declaration name="panel" type="Panel" line="634"/>
                <declaration name="button" type="Button" line="636"/>
                <declaration name="policyFile" type="String" line="646"/>
                <scope line="647">
                    <declaration name="userHome" type="String" line="648"/>
                </scope>
                <scope line="652">
                    <declaration name="list" type="List" line="654"/>
                    <declaration name="entries" type="PolicyEntry" line="656"/>
                    <scope line="657"/>
                    <declaration name="newFilename" type="TextField" line="660"/>
                </scope>
                <scope line="664">
                    <declaration name="list" type="List" line="665"/>
                </scope>
                <scope line="673">
                    <declaration name="list" type="List" line="674"/>
                    <declaration name="form" type="MessageFormat" line="680"/>
                    <declaration name="source" type="Object[]" line="681"/>
                </scope>
            </method>
            <javadoc line="685">
                Add a component to the PolicyTool window                
            </javadoc>
            <method name="addNewComponent" type="void" line="688">
                <params>
                    <param name="container" type="Container"/>
                    <param name="component" type="Component"/>
                    <param name="index" type="int"/>
                    <param name="gridx" type="int"/>
                    <param name="gridy" type="int"/>
                    <param name="gridwidth" type="int"/>
                    <param name="gridheight" type="int"/>
                    <param name="weightx" type="double"/>
                    <param name="weighty" type="double"/>
                    <param name="fill" type="int"/>
                    <param name="is" type="Insets"/>
                </params>
                <declaration name="gbl" type="GridBagLayout" line="690"/>
                <declaration name="gbc" type="GridBagConstraints" line="691"/>
            </method>
            <javadoc line="702">
                Add a component to the PolicyTool window without external padding                
            </javadoc>
            <method name="addNewComponent" type="void" line="705">
                <params>
                    <param name="container" type="Container"/>
                    <param name="component" type="Component"/>
                    <param name="index" type="int"/>
                    <param name="gridx" type="int"/>
                    <param name="gridy" type="int"/>
                    <param name="gridwidth" type="int"/>
                    <param name="gridheight" type="int"/>
                    <param name="weightx" type="double"/>
                    <param name="weighty" type="double"/>
                    <param name="fill" type="int"/>
                </params>
            </method>
            <javadoc line="708">
                Init the policy_entry_list TEXTAREA component in the
                  PolicyTool window                
            </javadoc>
            <method name="initPolicyList" type="void" line="712">
                <params>
                    <param name="policyList" type="List"/>
                </params>
            </method>
            <javadoc line="715">
                Replace the policy_entry_list TEXTAREA component in the
                  PolicyTool window with an updated one.                
            </javadoc>
            <method name="replacePolicyList" type="void" line="719">
                <params>
                    <param name="policyList" type="List"/>
                </params>
                <declaration name="list" type="List" line="720"/>
                <declaration name="newItems" type="String" line="722"/>
            </method>
            <javadoc line="725">
                display the main PolicyTool window                
            </javadoc>
            <method name="displayToolWindow" type="void" line="728">
                <params>
                    <param name="args" type="String"/>
                </params>
                <scope line="736"/>
            </method>
            <javadoc line="740">
                displays a dialog box describing an error which occurred.                
            </javadoc>
            <method name="displayErrorDialog" type="void" line="743">
                <params>
                    <param name="w" type="Window"/>
                    <param name="error" type="String"/>
                </params>
                <declaration name="ed" type="ToolDialog" line="744"/>
                <declaration name="location" type="Point" line="745"/>
                <declaration name="label" type="Label" line="748"/>
                <declaration name="okButton" type="Button" line="750"/>
            </method>
            <javadoc line="756">
                displays a dialog box describing an error which occurred.                
            </javadoc>
            <method name="displayErrorDialog" type="void" line="759">
                <params>
                    <param name="w" type="Window"/>
                    <param name="t" type="Throwable"/>
                </params>
                <scope line="760"/>
            </method>
            <javadoc line="765">
                displays a dialog box describing the status of an event                
            </javadoc>
            <method name="displayStatusDialog" type="void" line="768">
                <params>
                    <param name="w" type="Window"/>
                    <param name="status" type="String"/>
                </params>
                <declaration name="sd" type="ToolDialog" line="769"/>
                <declaration name="location" type="Point" line="770"/>
                <declaration name="label" type="Label" line="773"/>
                <declaration name="okButton" type="Button" line="775"/>
            </method>
            <javadoc line="781">
                display the warning log                
            </javadoc>
            <method name="displayWarningLog" type="void" line="784">
                <params>
                    <param name="w" type="Window"/>
                </params>
                <declaration name="wd" type="ToolDialog" line="785"/>
                <declaration name="location" type="Point" line="786"/>
                <declaration name="ta" type="TextArea" line="789"/>
                <scope line="791"/>
                <declaration name="okButton" type="Button" line="797"/>
            </method>
            <method name="displayYesNoDialog" type="char" line="803">
                <params>
                    <param name="w" type="Window"/>
                    <param name="title" type="String"/>
                    <param name="prompt" type="String"/>
                    <param name="yes" type="String"/>
                    <param name="no" type="String"/>
                </params>
                <declaration name="tw" type="ToolDialog" line="804"/>
                <declaration name="location" type="Point" line="805"/>
                <declaration name="ta" type="TextArea" line="808"/>
                <declaration name="panel" type="Panel" line="812"/>
                <declaration name="chooseResult" type="StringBuffer" line="814"/>
                <declaration name="button" type="Button" line="815"/>
                <anonymous_class line="816">
                    <method name="actionPerformed" type="void" line="817">
                        <params>
                            <param name="e" type="ActionEvent"/>
                        </params>
                    </method>
                </anonymous_class>
                <anonymous_class line="826">
                    <method name="actionPerformed" type="void" line="827">
                        <params>
                            <param name="e" type="ActionEvent"/>
                        </params>
                    </method>
                </anonymous_class>
                <scope line="838"/>
                <scope line="841"/>
            </method>
        </class>
        <class name="ToolDialog" line="846">
            <extends class="Dialog"/>
            <javadoc line="846">
                General dialog window                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="850"/>
            <declaration name="NOACTION" type="int" line="851"/>
            <declaration name="QUIT" type="int" line="852"/>
            <declaration name="NEW" type="int" line="853"/>
            <declaration name="OPEN" type="int" line="854"/>
            <declaration name="ALL_PERM_CLASS" type="String" line="855"/>
            <declaration name="FILE_PERM_CLASS" type="String" line="856"/>
            <declaration name="X500_PRIN_CLASS" type="String" line="857"/>
            <declaration name="PERM" type="String" line="858"/>
            <declaration name="PRIN_TYPE" type="String" line="859"/>
            <declaration name="PRIN_NAME" type="String" line="860"/>
            <declaration name="PERM_NAME" type="String" line="861"/>
            <declaration name="PERM_ACTIONS" type="String" line="862"/>
            <declaration name="PE_CODEBASE_LABEL" type="int" line="863"/>
            <declaration name="PE_CODEBASE_TEXTFIELD" type="int" line="864"/>
            <declaration name="PE_SIGNEDBY_LABEL" type="int" line="865"/>
            <declaration name="PE_SIGNEDBY_TEXTFIELD" type="int" line="866"/>
            <declaration name="PE_PANEL0" type="int" line="867"/>
            <declaration name="PE_ADD_PRIN_BUTTON" type="int" line="868"/>
            <declaration name="PE_EDIT_PRIN_BUTTON" type="int" line="869"/>
            <declaration name="PE_REMOVE_PRIN_BUTTON" type="int" line="870"/>
            <declaration name="PE_PRIN_LABEL" type="int" line="871"/>
            <declaration name="PE_PRIN_LIST" type="int" line="872"/>
            <declaration name="PE_PANEL1" type="int" line="873"/>
            <declaration name="PE_ADD_PERM_BUTTON" type="int" line="874"/>
            <declaration name="PE_EDIT_PERM_BUTTON" type="int" line="875"/>
            <declaration name="PE_REMOVE_PERM_BUTTON" type="int" line="876"/>
            <declaration name="PE_PERM_LIST" type="int" line="877"/>
            <declaration name="PE_PANEL2" type="int" line="878"/>
            <declaration name="PE_CANCEL_BUTTON" type="int" line="879"/>
            <declaration name="PE_DONE_BUTTON" type="int" line="880"/>
            <declaration name="PRD_DESC_LABEL" type="int" line="881"/>
            <declaration name="PRD_PRIN_CHOICE" type="int" line="882"/>
            <declaration name="PRD_PRIN_TEXTFIELD" type="int" line="883"/>
            <declaration name="PRD_NAME_LABEL" type="int" line="884"/>
            <declaration name="PRD_NAME_TEXTFIELD" type="int" line="885"/>
            <declaration name="PRD_CANCEL_BUTTON" type="int" line="886"/>
            <declaration name="PRD_OK_BUTTON" type="int" line="887"/>
            <declaration name="PD_DESC_LABEL" type="int" line="888"/>
            <declaration name="PD_PERM_CHOICE" type="int" line="889"/>
            <declaration name="PD_PERM_TEXTFIELD" type="int" line="890"/>
            <declaration name="PD_NAME_CHOICE" type="int" line="891"/>
            <declaration name="PD_NAME_TEXTFIELD" type="int" line="892"/>
            <declaration name="PD_ACTIONS_CHOICE" type="int" line="893"/>
            <declaration name="PD_ACTIONS_TEXTFIELD" type="int" line="894"/>
            <declaration name="PD_SIGNEDBY_LABEL" type="int" line="895"/>
            <declaration name="PD_SIGNEDBY_TEXTFIELD" type="int" line="896"/>
            <declaration name="PD_CANCEL_BUTTON" type="int" line="897"/>
            <declaration name="PD_OK_BUTTON" type="int" line="898"/>
            <declaration name="EDIT_KEYSTORE" type="int" line="899"/>
            <declaration name="KSD_NAME_LABEL" type="int" line="900"/>
            <declaration name="KSD_NAME_TEXTFIELD" type="int" line="901"/>
            <declaration name="KSD_TYPE_LABEL" type="int" line="902"/>
            <declaration name="KSD_TYPE_TEXTFIELD" type="int" line="903"/>
            <declaration name="KSD_PROVIDER_LABEL" type="int" line="904"/>
            <declaration name="KSD_PROVIDER_TEXTFIELD" type="int" line="905"/>
            <declaration name="KSD_PWD_URL_LABEL" type="int" line="906"/>
            <declaration name="KSD_PWD_URL_TEXTFIELD" type="int" line="907"/>
            <declaration name="KSD_CANCEL_BUTTON" type="int" line="908"/>
            <declaration name="KSD_OK_BUTTON" type="int" line="909"/>
            <declaration name="USC_LABEL" type="int" line="910"/>
            <declaration name="USC_PANEL" type="int" line="911"/>
            <declaration name="USC_YES_BUTTON" type="int" line="912"/>
            <declaration name="USC_NO_BUTTON" type="int" line="913"/>
            <declaration name="USC_CANCEL_BUTTON" type="int" line="914"/>
            <declaration name="CRPE_LABEL1" type="int" line="915"/>
            <declaration name="CRPE_LABEL2" type="int" line="916"/>
            <declaration name="CRPE_PANEL" type="int" line="917"/>
            <declaration name="CRPE_PANEL_OK" type="int" line="918"/>
            <declaration name="CRPE_PANEL_CANCEL" type="int" line="919"/>
            <declaration name="PERMISSION" type="int" line="920"/>
            <declaration name="PERMISSION_NAME" type="int" line="921"/>
            <declaration name="PERMISSION_ACTIONS" type="int" line="922"/>
            <declaration name="PERMISSION_SIGNEDBY" type="int" line="923"/>
            <declaration name="PRINCIPAL_TYPE" type="int" line="924"/>
            <declaration name="PRINCIPAL_NAME" type="int" line="925"/>
            <declaration name="PERM_ARRAY" type="java.util.ArrayList&lt;Perm&gt;" line="926"/>
            <declaration name="PRIN_ARRAY" type="java.util.ArrayList&lt;Prin&gt;" line="927"/>
            <declaration name="tool" type="PolicyTool" line="928"/>
            <declaration name="tw" type="ToolWindow" line="929"/>
            <scope line="930"/>
            <method name="ToolDialog" type="constructor" line="960">
                <params>
                    <param name="title" type="String"/>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="modal" type="boolean"/>
                </params>
            </method>
            <javadoc line="967">
                get the Perm instance based on either the (shortened) class name
                  or the fully qualified class name                
            </javadoc>
            <method name="getPerm" type="Perm" line="971">
                <params>
                    <param name="clazz" type="String"/>
                    <param name="fullClassName" type="boolean"/>
                </params>
                <scope line="972">
                    <declaration name="next" type="Perm" line="973"/>
                    <scope line="974">
                        <scope line="975"/>
                    </scope>
                    <scope line="979">
                        <scope line="980"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="987">
                get the Prin instance based on either the (shortened) class name
                  or the fully qualified class name                
            </javadoc>
            <method name="getPrin" type="Prin" line="991">
                <params>
                    <param name="clazz" type="String"/>
                    <param name="fullClassName" type="boolean"/>
                </params>
                <scope line="992">
                    <declaration name="next" type="Prin" line="993"/>
                    <scope line="994">
                        <scope line="995"/>
                    </scope>
                    <scope line="999">
                        <scope line="1000"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="1007">
                pop up a dialog so the user can enter info to add a new PolicyEntry
                  - if edit is TRUE, then the user is editing an existing entry
                  and we should display the original info as well.
                  - the other reason we need the &apos;edit&apos; boolean is we need to know
                  when we are adding a NEW policy entry.  in this case, we can
                  not simply update the existing entry, because it doesn&apos;t exist.
                  we ONLY update the GUI listing/info, and then when the user
                  finally clicks &apos;OK&apos; or &apos;DONE&apos;, then we can collect that info
                  and add it to the policy.                
            </javadoc>
            <method name="displayPolicyEntryDialog" type="void" line="1018">
                <params>
                    <param name="edit" type="boolean"/>
                </params>
                <declaration name="listIndex" type="int" line="1019"/>
                <declaration name="entries" type="PolicyEntry" line="1020"/>
                <declaration name="prinList" type="TaggedList" line="1021"/>
                <declaration name="permList" type="TaggedList" line="1024"/>
                <declaration name="location" type="Point" line="1027"/>
                <scope line="1031">
                    <declaration name="policyList" type="List" line="1033"/>
                    <declaration name="principals" type="LinkedList" line="1035"/>
                    <scope line="1036">
                        <declaration name="prinString" type="String" line="1037"/>
                        <declaration name="nextPrin" type="PolicyParser.PrincipalEntry" line="1038"/>
                    </scope>
                    <declaration name="permissions" type="Vector&lt;PolicyParser.PermissionEntry&gt;" line="1041"/>
                    <scope line="1042">
                        <declaration name="permString" type="String" line="1043"/>
                        <declaration name="nextPerm" type="PolicyParser.PermissionEntry" line="1044"/>
                    </scope>
                </scope>
                <declaration name="label" type="Label" line="1048"/>
                <declaration name="tf" type="TextField" line="1050"/>
                <declaration name="panel" type="Panel" line="1059"/>
                <declaration name="button" type="Button" line="1061"/>
            </method>
            <javadoc line="1098">
                Read all the Policy information data in the dialog box
                  and construct a PolicyEntry object with it.                
            </javadoc>
            <method name="getPolicyEntryFromDialog" type="PolicyEntry" line="1102">
                <declaration name="tf" type="TextField" line="1103"/>
                <declaration name="codebase" type="String" line="1104"/>
                <declaration name="signedby" type="String" line="1107"/>
                <declaration name="ge" type="PolicyParser.GrantEntry" line="1109"/>
                <declaration name="prins" type="LinkedList&lt;PolicyParser.PrincipalEntry&gt;" line="1110"/>
                <declaration name="prinList" type="TaggedList" line="1111"/>
                <scope line="1112"/>
                <declaration name="perms" type="Vector&lt;PolicyParser.PermissionEntry&gt;" line="1116"/>
                <declaration name="permList" type="TaggedList" line="1117"/>
                <scope line="1118"/>
                <declaration name="entry" type="PolicyEntry" line="1122"/>
            </method>
            <javadoc line="1125">
                display a dialog box for the user to enter KeyStore information                
            </javadoc>
            <method name="keyStoreDialog" type="void" line="1128">
                <params>
                    <param name="mode" type="int"/>
                </params>
                <declaration name="location" type="Point" line="1129"/>
                <scope line="1132">
                    <declaration name="label" type="Label" line="1133"/>
                    <declaration name="tf" type="TextField" line="1135"/>
                    <declaration name="okButton" type="Button" line="1153"/>
                    <declaration name="cancelButton" type="Button" line="1156"/>
                </scope>
            </method>
            <javadoc line="1162">
                display a dialog box for the user to input Principal info
                  if editPolicyEntry is false, then we are adding Principals to
                  a new PolicyEntry, and we only update the GUI listing
                  with the new Principal.
                  if edit is true, then we are editing an existing Policy entry.                
            </javadoc>
            <method name="displayPrincipalDialog" type="void" line="1169">
                <params>
                    <param name="editPolicyEntry" type="boolean"/>
                    <param name="edit" type="boolean"/>
                </params>
                <declaration name="editMe" type="PolicyParser.PrincipalEntry" line="1170"/>
                <declaration name="prinList" type="TaggedList" line="1171"/>
                <declaration name="prinIndex" type="int" line="1172"/>
                <scope line="1173"/>
                <declaration name="newTD" type="ToolDialog" line="1176"/>
                <declaration name="location" type="Point" line="1178"/>
                <declaration name="label" type="Label" line="1182"/>
                <declaration name="choice" type="Choice" line="1184"/>
                <scope line="1187">
                    <declaration name="next" type="Prin" line="1188"/>
                </scope>
                <scope line="1192">
                    <scope line="1193"/>
                    <scope line="1196">
                        <declaration name="inputPrin" type="Prin" line="1197"/>
                        <scope line="1198"/>
                    </scope>
                </scope>
                <declaration name="tf" type="TextField" line="1204"/>
                <declaration name="okButton" type="Button" line="1213"/>
                <declaration name="cancelButton" type="Button" line="1216"/>
            </method>
            <javadoc line="1221">
                display a dialog box for the user to input Permission info
                  if editPolicyEntry is false, then we are adding Permissions to
                  a new PolicyEntry, and we only update the GUI listing
                  with the new Permission.
                  if edit is true, then we are editing an existing Permission entry.                
            </javadoc>
            <method name="displayPermissionDialog" type="void" line="1228">
                <params>
                    <param name="editPolicyEntry" type="boolean"/>
                    <param name="edit" type="boolean"/>
                </params>
                <declaration name="editMe" type="PolicyParser.PermissionEntry" line="1229"/>
                <declaration name="permList" type="TaggedList" line="1230"/>
                <declaration name="permIndex" type="int" line="1231"/>
                <scope line="1232"/>
                <declaration name="newTD" type="ToolDialog" line="1235"/>
                <declaration name="location" type="Point" line="1237"/>
                <declaration name="label" type="Label" line="1241"/>
                <declaration name="choice" type="Choice" line="1243"/>
                <scope line="1246">
                    <declaration name="next" type="Perm" line="1247"/>
                </scope>
                <declaration name="tf" type="TextField" line="1252"/>
                <scope line="1255">
                    <declaration name="inputPerm" type="Perm" line="1256"/>
                    <scope line="1257"/>
                </scope>
                <scope line="1268"/>
                <scope line="1279"/>
                <declaration name="okButton" type="Button" line="1289"/>
                <declaration name="cancelButton" type="Button" line="1292"/>
            </method>
            <javadoc line="1297">
                construct a Principal object from the Principal Info Dialog Box                
            </javadoc>
            <method name="getPrinFromDialog" type="PolicyParser.PrincipalEntry" line="1300">
                <declaration name="tf" type="TextField" line="1301"/>
                <declaration name="pclass" type="String" line="1302"/>
                <declaration name="pname" type="String" line="1304"/>
                <scope line="1305"/>
                <scope line="1308"/>
                <declaration name="pppe" type="PolicyParser.PrincipalEntry" line="1311"/>
                <scope line="1312"/>
                <scope line="1315"/>
                <scope line="1318"/>
            </method>
            <javadoc line="1325">
                construct a Permission object from the Permission Info Dialog Box                
            </javadoc>
            <method name="getPermFromDialog" type="PolicyParser.PermissionEntry" line="1328">
                <declaration name="tf" type="TextField" line="1329"/>
                <declaration name="permission" type="String" line="1330"/>
                <declaration name="name" type="String" line="1332"/>
                <scope line="1334"/>
                <scope line="1337">
                    <declaration name="result" type="char" line="1338"/>
                    <scope line="1339"/>
                </scope>
                <declaration name="actions" type="String" line="1344"/>
                <declaration name="signedBy" type="String" line="1347"/>
                <declaration name="pppe" type="PolicyParser.PermissionEntry" line="1349"/>
                <scope line="1351">
                    <declaration name="signers" type="String" line="1352"/>
                    <scope line="1353">
                        <scope line="1354">
                            <declaration name="pubKey" type="PublicKey" line="1355"/>
                            <scope line="1356">
                                <declaration name="form" type="MessageFormat" line="1357"/>
                                <declaration name="source" type="Object[]" line="1358"/>
                            </scope>
                        </scope>
                        <scope line="1363"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="1370">
                confirm that the user REALLY wants to remove the Policy Entry                
            </javadoc>
            <method name="displayConfirmRemovePolicyEntry" type="void" line="1373">
                <declaration name="list" type="List" line="1374"/>
                <declaration name="index" type="int" line="1375"/>
                <declaration name="entries" type="PolicyEntry" line="1376"/>
                <declaration name="location" type="Point" line="1377"/>
                <declaration name="label" type="Label" line="1380"/>
                <declaration name="perms" type="Vector&lt;PolicyParser.PermissionEntry&gt;" line="1386"/>
                <scope line="1387">
                    <declaration name="nextPerm" type="PolicyParser.PermissionEntry" line="1388"/>
                    <declaration name="permString" type="String" line="1389"/>
                    <scope line="1391"/>
                    <scope line="1394"/>
                </scope>
                <declaration name="panel" type="Panel" line="1398"/>
                <declaration name="okButton" type="Button" line="1400"/>
                <declaration name="cancelButton" type="Button" line="1403"/>
            </method>
            <javadoc line="1410">
                perform SAVE AS                
            </javadoc>
            <method name="displaySaveAsDialog" type="void" line="1413">
                <params>
                    <param name="nextEvent" type="int"/>
                </params>
                <declaration name="fd" type="FileDialog" line="1414"/>
                <anonymous_class line="1415">
                    <method name="windowClosing" type="void" line="1416">
                        <params>
                            <param name="e" type="WindowEvent"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="saveAsFile" type="File" line="1423"/>
                <declaration name="filename" type="String" line="1424"/>
                <scope line="1426">
                    <declaration name="form" type="MessageFormat" line="1428"/>
                    <declaration name="source" type="Object[]" line="1429"/>
                    <declaration name="newFilename" type="TextField" line="1431"/>
                </scope>
                <scope line="1436">
                    <scope line="1437"/>
                    <scope line="1440"/>
                </scope>
                <scope line="1444"/>
            </method>
            <javadoc line="1448">
                ask user if they want to save changes                
            </javadoc>
            <method name="displayUserSave" type="void" line="1451">
                <params>
                    <param name="select" type="int"/>
                </params>
                <scope line="1452">
                    <declaration name="location" type="Point" line="1453"/>
                    <declaration name="label" type="Label" line="1456"/>
                    <declaration name="panel" type="Panel" line="1458"/>
                    <declaration name="yesButton" type="Button" line="1460"/>
                    <declaration name="noButton" type="Button" line="1463"/>
                    <declaration name="cancelButton" type="Button" line="1466"/>
                </scope>
                <scope line="1473"/>
            </method>
            <javadoc line="1477">
                when the user sees the &apos;YES&apos;, &apos;NO&apos;, &apos;CANCEL&apos; buttons on the
                  displayUserSave dialog, and the click on one of them,
                  we need to continue the originally requested action
                  (either QUITting, opening NEW policy file, or OPENing an existing
                  policy file.  do that now.                
            </javadoc>
            <method name="userSaveContinue" type="void" line="1484">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="us" type="ToolDialog"/>
                    <param name="select" type="int"/>
                </params>
                <scope line="1491"/>
                <scope line="1494"/>
                <declaration name="list" type="List" line="1498"/>
                <declaration name="newFilename" type="TextField" line="1501"/>
                <declaration name="fd" type="FileDialog" line="1506"/>
                <anonymous_class line="1507">
                    <method name="windowClosing" type="void" line="1508">
                        <params>
                            <param name="e" type="WindowEvent"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="policyFile" type="String" line="1515"/>
                <scope line="1516">
                    <declaration name="entries" type="PolicyEntry" line="1520"/>
                    <scope line="1521"/>
                    <scope line="1529"/>
                </scope>
                <scope line="1533">
                    <declaration name="form" type="MessageFormat" line="1542"/>
                    <declaration name="source" type="Object[]" line="1543"/>
                </scope>
            </method>
            <javadoc line="1549">
                Return a Menu list of names for a given permission
                  If inputPerm&apos;s TARGETS are null, then this means TARGETS are
                  not allowed to be entered (and the TextField is set to be
                  non-editable).
                  If TARGETS are valid but there are no standard ones
                  (user must enter them by hand) then the TARGETS array may be empty
                  (and of course non-null).                
            </javadoc>
            <method name="setPermissionNames" type="void" line="1558">
                <params>
                    <param name="inputPerm" type="Perm"/>
                    <param name="names" type="Choice"/>
                    <param name="field" type="TextField"/>
                </params>
                <scope line="1561"/>
                <scope line="1564"/>
                <scope line="1567">
                    <scope line="1569"/>
                </scope>
            </method>
            <javadoc line="1574">
                Return a Menu list of actions for a given permission
                  If inputPerm&apos;s ACTIONS are null, then this means ACTIONS are
                  not allowed to be entered (and the TextField is set to be
                  non-editable).  This is typically true for BasicPermissions.
                  If ACTIONS are valid but there are no standard ones
                  (user must enter them by hand) then the ACTIONS array may be empty
                  (and of course non-null).                
            </javadoc>
            <method name="setPermissionActions" type="void" line="1583">
                <params>
                    <param name="inputPerm" type="Perm"/>
                    <param name="actions" type="Choice"/>
                    <param name="field" type="TextField"/>
                </params>
                <scope line="1586"/>
                <scope line="1589"/>
                <scope line="1592">
                    <scope line="1594"/>
                </scope>
            </method>
            <method name="PermissionEntryToUserFriendlyString" type="String" line="1599">
                <params>
                    <param name="pppe" type="PolicyParser.PermissionEntry"/>
                </params>
                <declaration name="result" type="String" line="1600"/>
                <scope line="1601"/>
                <scope line="1604"/>
                <scope line="1607"/>
            </method>
            <method name="PrincipalEntryToUserFriendlyString" type="String" line="1612">
                <params>
                    <param name="pppe" type="PolicyParser.PrincipalEntry"/>
                </params>
                <declaration name="sw" type="StringWriter" line="1613"/>
                <declaration name="pw" type="PrintWriter" line="1614"/>
            </method>
        </class>
        <class name="ToolWindowListener" line="1619">
            <implements interface="WindowListener"/>
            <javadoc line="1619">
                Event handler for the PolicyTool window                
            </javadoc>
            <declaration name="tw" type="ToolWindow" line="1623"/>
            <method name="ToolWindowListener" type="constructor" line="1624">
                <params>
                    <param name="tw" type="ToolWindow"/>
                </params>
            </method>
            <method name="windowOpened" type="void" line="1627">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
            <method name="windowClosing" type="void" line="1629">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
            <method name="windowClosed" type="void" line="1634">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
            <method name="windowIconified" type="void" line="1637">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
            <method name="windowDeiconified" type="void" line="1639">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
            <method name="windowActivated" type="void" line="1641">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
            <method name="windowDeactivated" type="void" line="1643">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
        </class>
        <class name="PolicyListListener" line="1646">
            <implements interface="ActionListener"/>
            <javadoc line="1646">
                Event handler for the Policy List                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="1650"/>
            <declaration name="tw" type="ToolWindow" line="1651"/>
            <method name="PolicyListListener" type="constructor" line="1652">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="1656">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <declaration name="td" type="ToolDialog" line="1657"/>
            </method>
        </class>
        <class name="FileMenuListener" line="1661">
            <implements interface="ActionListener"/>
            <javadoc line="1661">
                Event handler for the File Menu                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="1665"/>
            <declaration name="tw" type="ToolWindow" line="1666"/>
            <method name="FileMenuListener" type="constructor" line="1667">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="1671">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <scope line="1672">
                    <declaration name="td" type="ToolDialog" line="1673"/>
                </scope>
                <scope line="1676">
                    <declaration name="td" type="ToolDialog" line="1677"/>
                </scope>
                <scope line="1680">
                    <declaration name="td" type="ToolDialog" line="1681"/>
                </scope>
                <scope line="1684">
                    <declaration name="filename" type="String" line="1685"/>
                    <scope line="1686">
                        <declaration name="td" type="ToolDialog" line="1687"/>
                    </scope>
                    <scope line="1690">
                        <scope line="1691">
                            <declaration name="form" type="MessageFormat" line="1693"/>
                            <declaration name="source" type="Object[]" line="1694"/>
                        </scope>
                        <scope line="1697">
                            <scope line="1698"/>
                            <scope line="1701"/>
                        </scope>
                        <scope line="1705"/>
                    </scope>
                </scope>
                <scope line="1710">
                    <declaration name="td" type="ToolDialog" line="1711"/>
                </scope>
                <scope line="1714"/>
            </method>
        </class>
        <class name="MainWindowListener" line="1719">
            <implements interface="ActionListener"/>
            <javadoc line="1719">
                Event handler for the main window buttons and Edit Menu                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="1723"/>
            <declaration name="tw" type="ToolWindow" line="1724"/>
            <method name="MainWindowListener" type="constructor" line="1725">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="1729">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <scope line="1730">
                    <declaration name="td" type="ToolDialog" line="1731"/>
                </scope>
                <scope line="1734">
                    <declaration name="list" type="List" line="1735"/>
                    <declaration name="index" type="int" line="1736"/>
                    <scope line="1737"/>
                    <declaration name="td" type="ToolDialog" line="1741"/>
                </scope>
                <scope line="1744">
                    <declaration name="list" type="List" line="1745"/>
                    <declaration name="index" type="int" line="1746"/>
                    <scope line="1747"/>
                    <declaration name="td" type="ToolDialog" line="1751"/>
                </scope>
                <scope line="1754">
                    <declaration name="td" type="ToolDialog" line="1755"/>
                </scope>
            </method>
        </class>
        <class name="AddEntryDoneButtonListener" line="1760">
            <implements interface="ActionListener"/>
            <javadoc line="1760">
                Event handler for AddEntryDoneButton button
                  -- if edit is TRUE, then we are EDITing an existing PolicyEntry
                  and we need to update both the policy and the GUI listing.
                  if edit is FALSE, then we are ADDing a new PolicyEntry,
                  so we only need to update the GUI listing.                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="1768"/>
            <declaration name="tw" type="ToolWindow" line="1769"/>
            <declaration name="td" type="ToolDialog" line="1770"/>
            <declaration name="edit" type="boolean" line="1771"/>
            <method name="AddEntryDoneButtonListener" type="constructor" line="1772">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="td" type="ToolDialog"/>
                    <param name="edit" type="boolean"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="1778">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <scope line="1779">
                    <declaration name="newEntry" type="PolicyEntry" line="1780"/>
                    <declaration name="newGe" type="PolicyParser.GrantEntry" line="1781"/>
                    <scope line="1782">
                        <declaration name="signers" type="String" line="1783"/>
                        <scope line="1784">
                            <declaration name="pubKey" type="PublicKey" line="1785"/>
                            <scope line="1786">
                                <declaration name="form" type="MessageFormat" line="1787"/>
                                <declaration name="source" type="Object[]" line="1788"/>
                            </scope>
                        </scope>
                    </scope>
                    <declaration name="policyList" type="List" line="1794"/>
                    <scope line="1795">
                        <declaration name="listIndex" type="int" line="1796"/>
                        <declaration name="newCodeBaseStr" type="String" line="1798"/>
                    </scope>
                    <scope line="1802"/>
                </scope>
                <scope line="1810"/>
            </method>
        </class>
        <class name="ChangeKeyStoreOKButtonListener" line="1815">
            <implements interface="ActionListener"/>
            <javadoc line="1815">
                Event handler for ChangeKeyStoreOKButton button                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="1819"/>
            <declaration name="tw" type="ToolWindow" line="1820"/>
            <declaration name="td" type="ToolDialog" line="1821"/>
            <method name="ChangeKeyStoreOKButtonListener" type="constructor" line="1822">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="td" type="ToolDialog"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="1827">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <declaration name="URLString" type="String" line="1828"/>
                <declaration name="type" type="String" line="1829"/>
                <declaration name="provider" type="String" line="1830"/>
                <declaration name="pwdURL" type="String" line="1831"/>
                <scope line="1832"/>
                <scope line="1836">
                    <declaration name="form" type="MessageFormat" line="1837"/>
                    <declaration name="source" type="Object[]" line="1838"/>
                </scope>
            </method>
        </class>
        <class name="AddPrinButtonListener" line="1845">
            <implements interface="ActionListener"/>
            <javadoc line="1845">
                Event handler for AddPrinButton button                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="1849"/>
            <declaration name="tw" type="ToolWindow" line="1850"/>
            <declaration name="td" type="ToolDialog" line="1851"/>
            <declaration name="editPolicyEntry" type="boolean" line="1852"/>
            <method name="AddPrinButtonListener" type="constructor" line="1853">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="td" type="ToolDialog"/>
                    <param name="editPolicyEntry" type="boolean"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="1859">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
            </method>
        </class>
        <class name="AddPermButtonListener" line="1863">
            <implements interface="ActionListener"/>
            <javadoc line="1863">
                Event handler for AddPermButton button                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="1867"/>
            <declaration name="tw" type="ToolWindow" line="1868"/>
            <declaration name="td" type="ToolDialog" line="1869"/>
            <declaration name="editPolicyEntry" type="boolean" line="1870"/>
            <method name="AddPermButtonListener" type="constructor" line="1871">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="td" type="ToolDialog"/>
                    <param name="editPolicyEntry" type="boolean"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="1877">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
            </method>
        </class>
        <class name="NewPolicyPrinOKButtonListener" line="1881">
            <implements interface="ActionListener"/>
            <javadoc line="1881">
                Event handler for AddPrinOKButton button                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="1885"/>
            <declaration name="tw" type="ToolWindow" line="1886"/>
            <declaration name="listDialog" type="ToolDialog" line="1887"/>
            <declaration name="infoDialog" type="ToolDialog" line="1888"/>
            <declaration name="edit" type="boolean" line="1889"/>
            <method name="NewPolicyPrinOKButtonListener" type="constructor" line="1890">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="listDialog" type="ToolDialog"/>
                    <param name="infoDialog" type="ToolDialog"/>
                    <param name="edit" type="boolean"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="1897">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <scope line="1898">
                    <declaration name="pppe" type="PolicyParser.PrincipalEntry" line="1899"/>
                    <scope line="1900">
                        <scope line="1901"/>
                        <scope line="1904">
                            <declaration name="form" type="MessageFormat" line="1905"/>
                            <declaration name="source" type="Object[]" line="1906"/>
                        </scope>
                        <declaration name="prinList" type="TaggedList" line="1910"/>
                        <declaration name="prinString" type="String" line="1911"/>
                        <scope line="1912">
                            <declaration name="index" type="int" line="1913"/>
                        </scope>
                        <scope line="1916"/>
                    </scope>
                </scope>
                <scope line="1922"/>
            </method>
        </class>
        <class name="NewPolicyPermOKButtonListener" line="1927">
            <implements interface="ActionListener"/>
            <javadoc line="1927">
                Event handler for AddPermOKButton button                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="1931"/>
            <declaration name="tw" type="ToolWindow" line="1932"/>
            <declaration name="listDialog" type="ToolDialog" line="1933"/>
            <declaration name="infoDialog" type="ToolDialog" line="1934"/>
            <declaration name="edit" type="boolean" line="1935"/>
            <method name="NewPolicyPermOKButtonListener" type="constructor" line="1936">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="listDialog" type="ToolDialog"/>
                    <param name="infoDialog" type="ToolDialog"/>
                    <param name="edit" type="boolean"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="1943">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <scope line="1944">
                    <declaration name="pppe" type="PolicyParser.PermissionEntry" line="1945"/>
                    <scope line="1946"/>
                    <scope line="1949">
                        <declaration name="form" type="MessageFormat" line="1950"/>
                        <declaration name="source" type="Object[]" line="1951"/>
                    </scope>
                    <declaration name="permList" type="TaggedList" line="1955"/>
                    <declaration name="permString" type="String" line="1956"/>
                    <scope line="1957">
                        <declaration name="which" type="int" line="1958"/>
                    </scope>
                    <scope line="1961"/>
                </scope>
                <scope line="1966"/>
                <scope line="1969"/>
            </method>
        </class>
        <class name="RemovePrinButtonListener" line="1974">
            <implements interface="ActionListener"/>
            <javadoc line="1974">
                Event handler for RemovePrinButton button                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="1978"/>
            <declaration name="tw" type="ToolWindow" line="1979"/>
            <declaration name="td" type="ToolDialog" line="1980"/>
            <declaration name="edit" type="boolean" line="1981"/>
            <method name="RemovePrinButtonListener" type="constructor" line="1982">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="td" type="ToolDialog"/>
                    <param name="edit" type="boolean"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="1988">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <declaration name="prinList" type="TaggedList" line="1989"/>
                <declaration name="prinIndex" type="int" line="1990"/>
                <scope line="1991"/>
            </method>
        </class>
        <class name="RemovePermButtonListener" line="1998">
            <implements interface="ActionListener"/>
            <javadoc line="1998">
                Event handler for RemovePermButton button                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="2002"/>
            <declaration name="tw" type="ToolWindow" line="2003"/>
            <declaration name="td" type="ToolDialog" line="2004"/>
            <declaration name="edit" type="boolean" line="2005"/>
            <method name="RemovePermButtonListener" type="constructor" line="2006">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="td" type="ToolDialog"/>
                    <param name="edit" type="boolean"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="2012">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <declaration name="permList" type="TaggedList" line="2013"/>
                <declaration name="permIndex" type="int" line="2014"/>
                <scope line="2015"/>
            </method>
        </class>
        <class name="EditPrinButtonListener" line="2022">
            <implements interface="ActionListener"/>
            <javadoc line="2022">
                Event handler for Edit Principal button
                  We need the editPolicyEntry boolean to tell us if the user is
                  adding a new PolicyEntry at this time, or editing an existing entry.
                  If the user is adding a new PolicyEntry, we ONLY update the
                  GUI listing.  If the user is editing an existing PolicyEntry, we
                  update both the GUI listing and the actual PolicyEntry.                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="2031"/>
            <declaration name="tw" type="ToolWindow" line="2032"/>
            <declaration name="td" type="ToolDialog" line="2033"/>
            <declaration name="editPolicyEntry" type="boolean" line="2034"/>
            <method name="EditPrinButtonListener" type="constructor" line="2035">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="td" type="ToolDialog"/>
                    <param name="editPolicyEntry" type="boolean"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="2041">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <declaration name="list" type="TaggedList" line="2042"/>
                <declaration name="prinIndex" type="int" line="2043"/>
                <scope line="2044"/>
            </method>
        </class>
        <class name="EditPermButtonListener" line="2051">
            <implements interface="ActionListener"/>
            <javadoc line="2051">
                Event handler for Edit Permission button
                  We need the editPolicyEntry boolean to tell us if the user is
                  adding a new PolicyEntry at this time, or editing an existing entry.
                  If the user is adding a new PolicyEntry, we ONLY update the
                  GUI listing.  If the user is editing an existing PolicyEntry, we
                  update both the GUI listing and the actual PolicyEntry.                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="2060"/>
            <declaration name="tw" type="ToolWindow" line="2061"/>
            <declaration name="td" type="ToolDialog" line="2062"/>
            <declaration name="editPolicyEntry" type="boolean" line="2063"/>
            <method name="EditPermButtonListener" type="constructor" line="2064">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="td" type="ToolDialog"/>
                    <param name="editPolicyEntry" type="boolean"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="2070">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <declaration name="list" type="List" line="2071"/>
                <declaration name="permIndex" type="int" line="2072"/>
                <scope line="2073"/>
            </method>
        </class>
        <class name="PrincipalTypeMenuListener" line="2080">
            <implements interface="ItemListener"/>
            <javadoc line="2080">
                Event handler for Principal Popup Menu                
            </javadoc>
            <declaration name="td" type="ToolDialog" line="2084"/>
            <method name="PrincipalTypeMenuListener" type="constructor" line="2085">
                <params>
                    <param name="td" type="ToolDialog"/>
                </params>
            </method>
            <method name="itemStateChanged" type="void" line="2088">
                <params>
                    <param name="e" type="ItemEvent"/>
                </params>
                <declaration name="prin" type="Choice" line="2089"/>
                <declaration name="prinField" type="TextField" line="2090"/>
                <declaration name="nameField" type="TextField" line="2091"/>
                <scope line="2093">
                    <scope line="2094">
                        <declaration name="inputPrin" type="Prin" line="2095"/>
                    </scope>
                </scope>
                <scope line="2100"/>
                <declaration name="inputPrin" type="Prin" line="2103"/>
                <scope line="2104"/>
            </method>
        </class>
        <class name="PermissionMenuListener" line="2109">
            <implements interface="ItemListener"/>
            <javadoc line="2109">
                Event handler for Permission Popup Menu                
            </javadoc>
            <declaration name="td" type="ToolDialog" line="2113"/>
            <method name="PermissionMenuListener" type="constructor" line="2114">
                <params>
                    <param name="td" type="ToolDialog"/>
                </params>
            </method>
            <method name="itemStateChanged" type="void" line="2117">
                <params>
                    <param name="e" type="ItemEvent"/>
                </params>
                <declaration name="perms" type="Choice" line="2118"/>
                <declaration name="names" type="Choice" line="2119"/>
                <declaration name="actions" type="Choice" line="2120"/>
                <declaration name="nameField" type="TextField" line="2121"/>
                <declaration name="actionsField" type="TextField" line="2122"/>
                <declaration name="permField" type="TextField" line="2123"/>
                <declaration name="signedbyField" type="TextField" line="2124"/>
                <scope line="2126">
                    <scope line="2127">
                        <declaration name="inputPerm" type="Perm" line="2128"/>
                        <scope line="2129"/>
                    </scope>
                </scope>
                <scope line="2135"/>
                <declaration name="inputPerm" type="Perm" line="2140"/>
                <scope line="2141"/>
                <scope line="2144"/>
            </method>
        </class>
        <class name="PermissionNameMenuListener" line="2151">
            <implements interface="ItemListener"/>
            <javadoc line="2151">
                Event handler for Permission Name Popup Menu                
            </javadoc>
            <declaration name="td" type="ToolDialog" line="2155"/>
            <method name="PermissionNameMenuListener" type="constructor" line="2156">
                <params>
                    <param name="td" type="ToolDialog"/>
                </params>
            </method>
            <method name="itemStateChanged" type="void" line="2159">
                <params>
                    <param name="e" type="ItemEvent"/>
                </params>
                <declaration name="names" type="Choice" line="2160"/>
                <declaration name="tf" type="TextField" line="2163"/>
            </method>
        </class>
        <class name="PermissionActionsMenuListener" line="2167">
            <implements interface="ItemListener"/>
            <javadoc line="2167">
                Event handler for Permission Actions Popup Menu                
            </javadoc>
            <declaration name="td" type="ToolDialog" line="2171"/>
            <method name="PermissionActionsMenuListener" type="constructor" line="2172">
                <params>
                    <param name="td" type="ToolDialog"/>
                </params>
            </method>
            <method name="itemStateChanged" type="void" line="2175">
                <params>
                    <param name="e" type="ItemEvent"/>
                </params>
                <declaration name="actions" type="Choice" line="2176"/>
                <declaration name="tf" type="TextField" line="2179"/>
                <scope line="2180"/>
                <scope line="2183"/>
            </method>
        </class>
        <class name="ChildWindowListener" line="2188">
            <implements interface="WindowListener"/>
            <javadoc line="2188">
                Event handler for all the children dialogs/windows                
            </javadoc>
            <declaration name="td" type="ToolDialog" line="2192"/>
            <method name="ChildWindowListener" type="constructor" line="2193">
                <params>
                    <param name="td" type="ToolDialog"/>
                </params>
            </method>
            <method name="windowOpened" type="void" line="2196">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
            <method name="windowClosing" type="void" line="2198">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
            <method name="windowClosed" type="void" line="2202">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
            <method name="windowIconified" type="void" line="2204">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
            <method name="windowDeiconified" type="void" line="2206">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
            <method name="windowActivated" type="void" line="2208">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
            <method name="windowDeactivated" type="void" line="2210">
                <params>
                    <param name="we" type="WindowEvent"/>
                </params>
            </method>
        </class>
        <class name="CancelButtonListener" line="2213">
            <implements interface="ActionListener"/>
            <javadoc line="2213">
                Event handler for CancelButton button                
            </javadoc>
            <declaration name="td" type="ToolDialog" line="2217"/>
            <method name="CancelButtonListener" type="constructor" line="2218">
                <params>
                    <param name="td" type="ToolDialog"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="2221">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
            </method>
        </class>
        <class name="ErrorOKButtonListener" line="2226">
            <implements interface="ActionListener"/>
            <javadoc line="2226">
                Event handler for ErrorOKButton button                
            </javadoc>
            <declaration name="ed" type="ToolDialog" line="2230"/>
            <method name="ErrorOKButtonListener" type="constructor" line="2231">
                <params>
                    <param name="ed" type="ToolDialog"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="2234">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
            </method>
        </class>
        <class name="StatusOKButtonListener" line="2239">
            <implements interface="ActionListener"/>
            <javadoc line="2239">
                Event handler for StatusOKButton button                
            </javadoc>
            <declaration name="sd" type="ToolDialog" line="2243"/>
            <method name="StatusOKButtonListener" type="constructor" line="2244">
                <params>
                    <param name="sd" type="ToolDialog"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="2247">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
            </method>
        </class>
        <class name="UserSaveYesButtonListener" line="2252">
            <implements interface="ActionListener"/>
            <javadoc line="2252">
                Event handler for UserSaveYes button                
            </javadoc>
            <declaration name="us" type="ToolDialog" line="2256"/>
            <declaration name="tool" type="PolicyTool" line="2257"/>
            <declaration name="tw" type="ToolWindow" line="2258"/>
            <declaration name="select" type="int" line="2259"/>
            <method name="UserSaveYesButtonListener" type="constructor" line="2260">
                <params>
                    <param name="us" type="ToolDialog"/>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="select" type="int"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="2266">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <scope line="2269">
                    <declaration name="filename" type="String" line="2270"/>
                    <scope line="2271"/>
                    <scope line="2274">
                        <declaration name="form" type="MessageFormat" line="2276"/>
                        <declaration name="source" type="Object[]" line="2277"/>
                    </scope>
                </scope>
                <scope line="2282"/>
            </method>
        </class>
        <class name="UserSaveNoButtonListener" line="2287">
            <implements interface="ActionListener"/>
            <javadoc line="2287">
                Event handler for UserSaveNoButton                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="2291"/>
            <declaration name="tw" type="ToolWindow" line="2292"/>
            <declaration name="us" type="ToolDialog" line="2293"/>
            <declaration name="select" type="int" line="2294"/>
            <method name="UserSaveNoButtonListener" type="constructor" line="2295">
                <params>
                    <param name="us" type="ToolDialog"/>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="select" type="int"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="2301">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
            </method>
        </class>
        <class name="UserSaveCancelButtonListener" line="2307">
            <implements interface="ActionListener"/>
            <javadoc line="2307">
                Event handler for UserSaveCancelButton                
            </javadoc>
            <declaration name="us" type="ToolDialog" line="2311"/>
            <method name="UserSaveCancelButtonListener" type="constructor" line="2312">
                <params>
                    <param name="us" type="ToolDialog"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="2315">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
            </method>
        </class>
        <class name="ConfirmRemovePolicyEntryOKButtonListener" line="2320">
            <implements interface="ActionListener"/>
            <javadoc line="2320">
                Event handler for ConfirmRemovePolicyEntryOKButtonListener                
            </javadoc>
            <declaration name="tool" type="PolicyTool" line="2324"/>
            <declaration name="tw" type="ToolWindow" line="2325"/>
            <declaration name="us" type="ToolDialog" line="2326"/>
            <method name="ConfirmRemovePolicyEntryOKButtonListener" type="constructor" line="2327">
                <params>
                    <param name="tool" type="PolicyTool"/>
                    <param name="tw" type="ToolWindow"/>
                    <param name="us" type="ToolDialog"/>
                </params>
            </method>
            <method name="actionPerformed" type="void" line="2332">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <declaration name="list" type="List" line="2333"/>
                <declaration name="index" type="int" line="2334"/>
                <declaration name="entries" type="PolicyEntry" line="2335"/>
                <scope line="2340"/>
            </method>
        </class>
        <class name="NoDisplayException" line="2348">
            <extends class="RuntimeException"/>
            <javadoc line="2348">
                Just a special name, so that the codes dealing with this exception knows
                  it&apos;s special, and does not pop out a warning box.                
            </javadoc>
        </class>
        <class name="TaggedList" line="2354">
            <extends class="List"/>
            <javadoc line="2354">
                This is a java.awt.List that bind an Object to each String it holds.                
            </javadoc>
            <declaration name="data" type="java.util.List&lt;Object&gt;" line="2358"/>
            <method name="TaggedList" type="constructor" line="2359">
                <params>
                    <param name="i" type="int"/>
                    <param name="b" type="boolean"/>
                </params>
            </method>
            <method name="getObject" type="Object" line="2362">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="add" type="void" line="2365">
                <params>
                    <param name="string" type="String"/>
                </params>
            </method>
            <method name="addTaggedItem" type="void" line="2368">
                <params>
                    <param name="string" type="String"/>
                    <param name="object" type="Object"/>
                </params>
            </method>
            <method name="replaceItem" type="void" line="2372">
                <params>
                    <param name="string" type="String"/>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="replaceTaggedItem" type="void" line="2375">
                <params>
                    <param name="string" type="String"/>
                    <param name="object" type="Object"/>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="remove" type="void" line="2379">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="removeTaggedItem" type="void" line="2382">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
        </class>
        <class name="Prin" line="2387">
            <javadoc line="2387">
                Convenience Principal Classes                
            </javadoc>
            <declaration name="CLASS" type="String" line="2391"/>
            <declaration name="FULL_CLASS" type="String" line="2392"/>
            <method name="Prin" type="constructor" line="2393">
                <params>
                    <param name="clazz" type="String"/>
                    <param name="fullClass" type="String"/>
                </params>
            </method>
        </class>
        <class name="KrbPrin" line="2398">
            <extends class="Prin"/>
            <method name="KrbPrin" type="constructor" line="2399"/>
        </class>
        <class name="X500Prin" line="2403">
            <extends class="Prin"/>
            <method name="X500Prin" type="constructor" line="2404"/>
        </class>
        <class name="Perm" line="2408">
            <javadoc line="2408">
                Convenience Permission Classes                
            </javadoc>
            <declaration name="CLASS" type="String" line="2412"/>
            <declaration name="FULL_CLASS" type="String" line="2413"/>
            <declaration name="TARGETS" type="String[]" line="2414"/>
            <declaration name="ACTIONS" type="String[]" line="2415"/>
            <method name="Perm" type="constructor" line="2416">
                <params>
                    <param name="clazz" type="String"/>
                    <param name="fullClass" type="String"/>
                    <param name="targets" type="String[]"/>
                    <param name="actions" type="String[]"/>
                </params>
            </method>
        </class>
        <class name="AllPerm" line="2423">
            <extends class="Perm"/>
            <method name="AllPerm" type="constructor" line="2424"/>
        </class>
        <class name="AudioPerm" line="2428">
            <extends class="Perm"/>
            <method name="AudioPerm" type="constructor" line="2429"/>
        </class>
        <class name="AuthPerm" line="2433">
            <extends class="Perm"/>
            <method name="AuthPerm" type="constructor" line="2434"/>
        </class>
        <class name="AWTPerm" line="2438">
            <extends class="Perm"/>
            <method name="AWTPerm" type="constructor" line="2439"/>
        </class>
        <class name="DelegationPerm" line="2443">
            <extends class="Perm"/>
            <method name="DelegationPerm" type="constructor" line="2444"/>
        </class>
        <class name="FilePerm" line="2448">
            <extends class="Perm"/>
            <method name="FilePerm" type="constructor" line="2449"/>
        </class>
        <class name="InqSecContextPerm" line="2453">
            <extends class="Perm"/>
            <method name="InqSecContextPerm" type="constructor" line="2454"/>
        </class>
        <class name="LogPerm" line="2458">
            <extends class="Perm"/>
            <method name="LogPerm" type="constructor" line="2459"/>
        </class>
        <class name="MgmtPerm" line="2463">
            <extends class="Perm"/>
            <method name="MgmtPerm" type="constructor" line="2464"/>
        </class>
        <class name="MBeanPerm" line="2468">
            <extends class="Perm"/>
            <method name="MBeanPerm" type="constructor" line="2469"/>
        </class>
        <class name="MBeanSvrPerm" line="2473">
            <extends class="Perm"/>
            <method name="MBeanSvrPerm" type="constructor" line="2474"/>
        </class>
        <class name="MBeanTrustPerm" line="2478">
            <extends class="Perm"/>
            <method name="MBeanTrustPerm" type="constructor" line="2479"/>
        </class>
        <class name="NetPerm" line="2483">
            <extends class="Perm"/>
            <method name="NetPerm" type="constructor" line="2484"/>
        </class>
        <class name="PrivCredPerm" line="2488">
            <extends class="Perm"/>
            <method name="PrivCredPerm" type="constructor" line="2489"/>
        </class>
        <class name="PropPerm" line="2493">
            <extends class="Perm"/>
            <method name="PropPerm" type="constructor" line="2494"/>
        </class>
        <class name="ReflectPerm" line="2498">
            <extends class="Perm"/>
            <method name="ReflectPerm" type="constructor" line="2499"/>
        </class>
        <class name="RuntimePerm" line="2503">
            <extends class="Perm"/>
            <method name="RuntimePerm" type="constructor" line="2504"/>
        </class>
        <class name="SecurityPerm" line="2508">
            <extends class="Perm"/>
            <method name="SecurityPerm" type="constructor" line="2509"/>
        </class>
        <class name="SerialPerm" line="2513">
            <extends class="Perm"/>
            <method name="SerialPerm" type="constructor" line="2514"/>
        </class>
        <class name="ServicePerm" line="2518">
            <extends class="Perm"/>
            <method name="ServicePerm" type="constructor" line="2519"/>
        </class>
        <class name="SocketPerm" line="2523">
            <extends class="Perm"/>
            <method name="SocketPerm" type="constructor" line="2524"/>
        </class>
        <class name="SQLPerm" line="2528">
            <extends class="Perm"/>
            <method name="SQLPerm" type="constructor" line="2529"/>
        </class>
        <class name="SSLPerm" line="2533">
            <extends class="Perm"/>
            <method name="SSLPerm" type="constructor" line="2534"/>
        </class>
        <class name="SubjDelegPerm" line="2538">
            <extends class="Perm"/>
            <method name="SubjDelegPerm" type="constructor" line="2539"/>
        </class>
    </source>