<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.jgss.krb5">
        <import package="org.ietf.jgss"/>
        <import package="sun.security.jgss.spi"/>
        <import package="javax.security.auth.kerberos"/>
        <import package="sun.security.krb5.PrincipalName"/>
        <import package="sun.security.krb5.KrbException"/>
        <import package="sun.security.krb5.ServiceName"/>
        <import package="java.io.UnsupportedEncodingException"/>
        <import package="java.net.InetAddress"/>
        <import package="java.net.UnknownHostException"/>
        <import package="java.security.Provider"/>
        <class name="Krb5NameElement" line="12">
            <implements interface="GSSNameSpi"/>
            <javadoc line="12">
                Implements the GSSNameSpi for the krb5 mechanism.                
                <author>
                    Mayank Upadhyay                    
                </author>
            </javadoc>
            <declaration name="krb5PrincipalName" type="PrincipalName" line="17"/>
            <declaration name="gssNameStr" type="String" line="18"/>
            <declaration name="gssNameType" type="Oid" line="19"/>
            <declaration name="CHAR_ENCODING" type="String" line="20"/>
            <method name="Krb5NameElement" type="constructor" line="21">
                <params>
                    <param name="principalName" type="PrincipalName"/>
                    <param name="gssNameStr" type="String"/>
                    <param name="gssNameType" type="Oid"/>
                </params>
            </method>
            <javadoc line="26">
                Instantiates a new Krb5NameElement object. Internally it stores the
                  information provided by the input parameters so that they may later
                  be used for output when a printable representaion of this name is
                  needed in GSS-API format rather than in Kerberos format.                
            </javadoc>
            <method name="getInstance" type="Krb5NameElement" line="32">
                <params>
                    <param name="gssNameStr" type="String"/>
                    <param name="gssNameType" type="Oid"/>
                </params>
                <declaration name="principalName" type="PrincipalName" line="35"/>
                <scope line="36">
                    <scope line="37"/>
                    <scope line="40">
                        <declaration name="components" type="String[]" line="41"/>
                        <scope line="43">
                            <declaration name="hostName" type="String" line="44"/>
                            <declaration name="service" type="String" line="45"/>
                            <declaration name="principal" type="String" line="47"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="52"/>
            </method>
            <method name="getInstance" type="Krb5NameElement" line="57">
                <params>
                    <param name="principalName" type="PrincipalName"/>
                </params>
            </method>
            <method name="getComponents" type="String[]" line="60">
                <params>
                    <param name="gssNameStr" type="String"/>
                </params>
                <declaration name="retVal" type="String[]" line="61"/>
                <declaration name="separatorPos" type="int" line="62"/>
                <scope line="63"/>
                <scope line="66">
                    <declaration name="serviceName" type="String" line="67"/>
                    <declaration name="hostName" type="String" line="68"/>
                </scope>
                <scope line="71"/>
            </method>
            <method name="getHostBasedInstance" type="String" line="76">
                <params>
                    <param name="serviceName" type="String"/>
                    <param name="hostName" type="String"/>
                </params>
                <declaration name="temp" type="StringBuffer" line="77"/>
                <scope line="78"/>
                <scope line="81"/>
            </method>
            <method name="getKrb5PrincipalName" type="PrincipalName" line="87"/>
            <javadoc line="90">
                Equal method for the GSSNameSpi objects.
                  If either name denotes an anonymous principal, the call should
                  return false.                
                <param>
                    name to be compared with                    
                </param>
                <returns>
                    true if they both refer to the same entity, else false                    
                </returns>
                <exception>
                    GSSException with major codes of BAD_NAMETYPE,
                      BAD_NAME, FAILURE                    
                </exception>
            </javadoc>
            <method name="equals" type="boolean" line="99">
                <params>
                    <param name="other" type="GSSNameSpi"/>
                </params>
                <scope line="101">
                    <declaration name="that" type="Krb5NameElement" line="102"/>
                </scope>
            </method>
            <javadoc line="107">
                Compares this &lt;code&gt;GSSNameSpi&lt;/code&gt; object to another Object
                  that might be a &lt;code&gt;GSSNameSpi&lt;/code&gt;. The behaviour is exactly
                  the same as in {@link #equals(GSSNameSpi) equals} except that
                  no GSSException is thrown; instead, false will be returned in the
                  situation where an error occurs.                
                <param>
                    another the object to be compared to                    
                </param>
                <returns>
                    true if they both refer to the same entity, else false                    
                </returns>
                <see>
                    #equals(GSSNameSpi)                    
                </see>
            </javadoc>
            <method name="equals" type="boolean" line="117">
                <params>
                    <param name="another" type="Object"/>
                </params>
                <scope line="118"/>
                <scope line="121"/>
                <scope line="124"/>
            </method>
            <javadoc line="128">
                Returns a hashcode value for this GSSNameSpi.                
                <return>
                    a hashCode value                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="132"/>
            <javadoc line="135">
                Returns the principal name in the form user@REALM or
                  host/service@REALM but with the following contraints that are
                  imposed by RFC 1964:
                  &lt;pre&gt;
                  (1) all occurrences of the characters `@`,  `/`, and `\` within
                  principal components or realm names shall be quoted with an
                  immediately-preceding `\`.
                  (2) all occurrences of the null, backspace, tab, or newline
                  characters within principal components or realm names will be
                  represented, respectively, with `\0`, `\b`, `\t`, or `\n`.
                  (3) the `\` quoting character shall not be emitted within an
                  exported name except to accomodate cases (1) and (2).
                  &lt;/pre&gt;                
            </javadoc>
            <method name="export" type="byte[]" line="150">
                <declaration name="retVal" type="byte[]" line="151"/>
                <scope line="152"/>
                <scope line="155"/>
            </method>
            <javadoc line="159">
                Get the mechanism type that this NameElement corresponds to.                
                <return>
                    the Oid of the mechanism type                    
                </return>
            </javadoc>
            <method name="getMechanism" type="Oid" line="163"/>
            <javadoc line="166">
                Returns a string representation for this name. The printed
                  name type can be obtained by calling getStringNameType().                
                <return>
                    string form of this name                    
                </return>
                <see>
                    #getStringNameType()                    
                </see>
                <overrides>
                    Object#toString                    
                </overrides>
            </javadoc>
            <method name="toString" type="String" line="173"/>
            <javadoc line="176">
                Returns the name type oid.                
            </javadoc>
            <method name="getGSSNameType" type="Oid" line="179"/>
            <javadoc line="182">
                Returns the oid describing the format of the printable name.                
                <return>
                    the Oid for the format of the printed name                    
                </return>
            </javadoc>
            <method name="getStringNameType" type="Oid" line="186"/>
            <javadoc line="189">
                Indicates if this name object represents an Anonymous name.                
            </javadoc>
            <method name="isAnonymousName" type="boolean" line="192"/>
            <method name="getProvider" type="Provider" line="195"/>
        </class>
    </source>