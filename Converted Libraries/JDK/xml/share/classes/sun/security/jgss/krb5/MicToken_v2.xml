<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.jgss.krb5">
        <import package="org.ietf.jgss"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ByteArrayOutputStream"/>
        <class name="MicToken_v2" line="34">
            <extends class="MessageToken_v2"/>
            <javadoc line="34">
                This class represents the new format of GSS MIC tokens, as specified
                  in RFC 4121
                  MIC tokens = { 16-byte token-header |  HMAC }
                  where HMAC is on { plaintext | 16-byte token-header }                
                <author>
                    Seema Malkani                    
                </author>
            </javadoc>
            <method name="MicToken_v2" type="constructor" line="48">
                <params>
                    <param name="context" type="Krb5Context"/>
                    <param name="tokenBytes" type="byte[]"/>
                    <param name="tokenOffset" type="int"/>
                    <param name="tokenLen" type="int"/>
                    <param name="prop" type="MessageProp"/>
                </params>
            </method>
            <method name="MicToken_v2" type="constructor" line="54">
                <params>
                    <param name="context" type="Krb5Context"/>
                    <param name="is" type="InputStream"/>
                    <param name="prop" type="MessageProp"/>
                </params>
            </method>
            <method name="verify" type="void" line="58">
                <params>
                    <param name="data" type="byte[]"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <method name="verify" type="void" line="64">
                <params>
                    <param name="data" type="InputStream"/>
                </params>
                <comment line="71">
                    Error reading application data                    
                </comment>
                <declaration name="dataBytes" type="byte[]" line="65"/>
                <scope line="66"/>
                <scope line="69"/>
            </method>
            <method name="MicToken_v2" type="constructor" line="79">
                <params>
                    <param name="context" type="Krb5Context"/>
                    <param name="prop" type="MessageProp"/>
                    <param name="data" type="byte[]"/>
                    <param name="pos" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <comment line="83">
                    debug(&quot;Application data to MicToken verify is [&quot; +
                                getHexBytes(data, pos, len) + &quot;]\n&quot;);                    
                </comment>
            </method>
            <method name="MicToken_v2" type="constructor" line="89">
                <params>
                    <param name="context" type="Krb5Context"/>
                    <param name="prop" type="MessageProp"/>
                    <param name="data" type="InputStream"/>
                </params>
                <comment line="96">
                    debug(&quot;Application data to MicToken cons is [&quot; +
                         getHexBytes(dataBytes) + &quot;]\n&quot;);                    
                </comment>
                <declaration name="dataBytes" type="byte[]" line="92"/>
            </method>
            <method name="encode" type="byte[]" line="101">
                <comment line="103">
                    XXX Fine tune this initial size                    
                </comment>
                <declaration name="bos" type="ByteArrayOutputStream" line="103"/>
            </method>
            <method name="encode" type="int" line="108">
                <params>
                    <param name="outToken" type="byte[]"/>
                    <param name="offset" type="int"/>
                </params>
                <declaration name="token" type="byte[]" line="109"/>
            </method>
            <method name="encode" type="void" line="114">
                <params>
                    <param name="os" type="OutputStream"/>
                </params>
            </method>
        </class>
    </source>