<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.jgss">
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="org.ietf.jgss"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.Provider"/>
        <import package="java.security.Security"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.Iterator"/>
        <import package="sun.security.jgss.spi"/>
        <import package="sun.security.jgss.wrapper.NativeGSSFactory"/>
        <import package="sun.security.jgss.wrapper.SunNativeProvider"/>
        <import package="sun.security.action.GetPropertyAction"/>
        <class name="ProviderList" line="16">
            <javadoc line="16">
                This class stores the list of providers that this
                  GSS-Implementation is configured to use. The GSSManagerImpl class
                  queries this class whenever it needs a mechanism&apos;s factory.&lt;p&gt;
                  This class stores an ordered list of pairs of the form
                  &lt;provider, oid&gt;. When it attempts to instantiate a mechanism
                  defined by oid o, it steps through the list looking for an entry
                  with oid=o, or with oid=null. (An entry with oid=null matches all
                  mechanisms.) When it finds such an entry, the corresponding
                  provider is approached for the mechanism&apos;s factory class.
                  At instantiation time this list in initialized to contain those
                  system wide providers that contain a property of the form
                  &quot;GssApiMechanism.x.y.z...&quot; where &quot;x.y.z...&quot; is a numeric object
                  identifier with numbers x, y, z, etc. Such a property is defined
                  to map to that provider&apos;s implementation of the MechanismFactory
                  interface for the mechanism x.y.z...
                  As and when a MechanismFactory is instantiated, it is
                  cached for future use. &lt;p&gt;
                  An application can cause more providers to be added by means of
                  the addProviderAtFront and addProviderAtEnd methods on
                  GSSManager which get delegated to this class. The
                  addProviderAtFront method can also cause a change in the ordering
                  of the providers without adding any new providers, by causing a
                  provider to move up in a list. The method addProviderAtEnd can
                  only add providers at the end of the list if they are not already
                  in the list. The rationale is that an application will call
                  addProviderAtFront when it wants a provider to be used in
                  preference over the default ones. And it will call
                  addProviderAtEnd when it wants a provider to be used in case
                  the system ones don&apos;t suffice.&lt;p&gt;
                  If a mechanism&apos;s factory is being obtained from a provider as a
                  result of encountering a entryof the form &lt;provider, oid&gt; where
                  oid is non-null, then the assumption is that the application added
                  this entry and it wants this mechanism to be obtained from this
                  provider. Thus is the provider does not actually contain the
                  requested mechanism, an exception will be thrown. However, if the
                  entry were of the form &lt;provider, null&gt;, then it is viewed more
                  liberally and is simply skipped over if the provider does not claim to
                  support the requested mechanism.                
            </javadoc>
            <declaration name="PROV_PROP_PREFIX" type="String" line="57"/>
            <declaration name="PROV_PROP_PREFIX_LEN" type="int" line="58"/>
            <declaration name="SPI_MECH_FACTORY_TYPE" type="String" line="59"/>
            <declaration name="DEFAULT_MECH_PROP" type="String" line="60"/>
            <declaration name="DEFAULT_MECH_OID" type="Oid" line="61"/>
            <scope line="62">
                <declaration name="defOid" type="Oid" line="63"/>
                <declaration name="defaultOidStr" type="String" line="64"/>
                <scope line="65"/>
            </scope>
            <declaration name="preferences" type="ArrayList&lt;PreferencesEntry&gt;" line="70"/>
            <declaration name="factories" type="HashMap&lt;PreferencesEntry,MechanismFactory&gt;" line="71"/>
            <declaration name="mechs" type="HashSet&lt;Oid&gt;" line="72"/>
            <declaration name="caller" type="GSSCaller" line="73"/>
            <method name="ProviderList" type="constructor" line="74">
                <params>
                    <param name="caller" type="GSSCaller"/>
                    <param name="useNative" type="boolean"/>
                </params>
                <declaration name="provList" type="Provider[]" line="76"/>
                <scope line="77"/>
                <scope line="81"/>
                <scope line="84">
                    <declaration name="prov" type="Provider" line="85"/>
                    <scope line="86"/>
                    <scope line="89"/>
                </scope>
            </method>
            <javadoc line="94">
                Determines if the given provider property represents a GSS-API
                  Oid to MechanismFactory mapping.                
                <return>
                    true if this is a GSS-API property, false otherwise.                    
                </return>
            </javadoc>
            <method name="isMechFactoryProperty" type="boolean" line="99">
                <params>
                    <param name="prop" type="String"/>
                </params>
            </method>
            <method name="getOidFromMechFactoryProperty" type="Oid" line="102">
                <params>
                    <param name="prop" type="String"/>
                </params>
                <declaration name="oidPart" type="String" line="103"/>
            </method>
            <method name="getMechFactory" type="MechanismFactory" line="106">
                <params>
                    <param name="mechOid" type="Oid"/>
                </params>
            </method>
            <javadoc line="110">
                Obtains a MechanismFactory for a given mechanism. If the
                  specified provider is not null, then the impl from the
                  provider is used. Otherwise, the most preferred impl based
                  on the configured preferences is used.                
                <param>
                    mechOid the oid of the desired mechanism                    
                </param>
                <return>
                    a MechanismFactory for the desired mechanism.                    
                </return>
                <throws>
                    GSSException when the specified provider does not
                      support the desired mechanism, or when no provider supports
                      the desired mechanism.                    
                </throws>
            </javadoc>
            <method name="getMechFactory" type="MechanismFactory" line="121">
                <params>
                    <param name="mechOid" type="Oid"/>
                    <param name="p" type="Provider"/>
                </params>
                <scope line="123">
                    <declaration name="className" type="String" line="124"/>
                    <declaration name="entry" type="PreferencesEntry" line="125"/>
                    <declaration name="list" type="Iterator&lt;PreferencesEntry&gt;" line="126"/>
                    <scope line="127">
                        <scope line="129">
                            <declaration name="retVal" type="MechanismFactory" line="130"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="136">
                    <declaration name="entry" type="PreferencesEntry" line="137"/>
                </scope>
            </method>
            <javadoc line="141">
                Helper routine that uses a preferences entry to obtain an
                  implementation of a MechanismFactory from it.                
                <param>
                    e the preferences entry that contains the provider and
                      either a null of an explicit oid that matched the oid of the
                      desired mechanism.                    
                </param>
                <param>
                    mechOid the oid of the desired mechanism                    
                </param>
                <throws>
                    GSSException If the application explicitly requested
                      this entry's provider to be used for the desired mechanism but
                      some problem is encountered                    
                </throws>
            </javadoc>
            <method name="getMechFactory" type="MechanismFactory" line="152">
                <params>
                    <param name="e" type="PreferencesEntry"/>
                    <param name="mechOid" type="Oid"/>
                </params>
                <declaration name="p" type="Provider" line="153"/>
                <declaration name="searchEntry" type="PreferencesEntry" line="154"/>
                <declaration name="retVal" type="MechanismFactory" line="155"/>
                <scope line="156">
                    <declaration name="prop" type="String" line="157"/>
                    <declaration name="className" type="String" line="158"/>
                    <scope line="159"/>
                    <scope line="163">
                        <scope line="164"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="171">
                Helper routine to obtain a MechanismFactory implementation
                  from the same class loader as the provider of this
                  implementation.                
                <param>
                    p the provider whose classloader must be used for
                      instantiating the desired MechanismFactory                    
                </param>
                <>
                    param className the name of the MechanismFactory class                    
                </>
                <throws>
                    GSSException If some error occurs when trying to
                      instantiate this MechanismFactory.                    
                </throws>
            </javadoc>
            <method name="getMechFactoryImpl" type="MechanismFactory" line="181">
                <params>
                    <param name="p" type="Provider"/>
                    <param name="className" type="String"/>
                    <param name="mechOid" type="Oid"/>
                    <param name="caller" type="GSSCaller"/>
                </params>
                <scope line="182">
                    <declaration name="baseClass" type="Class&lt;?&gt;" line="183"/>
                    <declaration name="cl" type="ClassLoader" line="184"/>
                    <declaration name="implClass" type="Class&lt;?&gt;" line="185"/>
                    <scope line="186"/>
                    <scope line="189"/>
                    <scope line="192">
                        <declaration name="c" type="java.lang.reflect.Constructor&lt;?&gt;" line="193"/>
                        <declaration name="mf" type="MechanismFactory" line="194"/>
                        <scope line="195"/>
                    </scope>
                    <scope line="200"/>
                </scope>
                <scope line="204"/>
                <scope line="207"/>
                <scope line="210"/>
                <scope line="213"/>
                <scope line="216"/>
                <scope line="219"/>
            </method>
            <method name="createGSSException" type="GSSException" line="223">
                <params>
                    <param name="p" type="Provider"/>
                    <param name="className" type="String"/>
                    <param name="trailingMsg" type="String"/>
                    <param name="cause" type="Exception"/>
                </params>
                <declaration name="errClassInfo" type="String" line="224"/>
            </method>
            <method name="getMechs" type="Oid[]" line="227"/>
            <method name="addProviderAtFront" type="void" line="230">
                <params>
                    <param name="p" type="Provider"/>
                    <param name="mechOid" type="Oid"/>
                </params>
                <declaration name="newEntry" type="PreferencesEntry" line="231"/>
                <declaration name="oldEntry" type="PreferencesEntry" line="232"/>
                <declaration name="foundSomeMech" type="boolean" line="233"/>
                <declaration name="list" type="Iterator&lt;PreferencesEntry&gt;" line="234"/>
                <scope line="235"/>
                <scope line="239"/>
                <scope line="242">
                    <declaration name="oidStr" type="String" line="243"/>
                </scope>
                <scope line="248"/>
            </method>
            <method name="addProviderAtEnd" type="void" line="252">
                <params>
                    <param name="p" type="Provider"/>
                    <param name="mechOid" type="Oid"/>
                </params>
                <declaration name="newEntry" type="PreferencesEntry" line="253"/>
                <declaration name="oldEntry" type="PreferencesEntry" line="254"/>
                <declaration name="foundSomeMech" type="boolean" line="255"/>
                <declaration name="list" type="Iterator&lt;PreferencesEntry&gt;" line="256"/>
                <scope line="257"/>
                <scope line="262">
                    <declaration name="oidStr" type="String" line="263"/>
                </scope>
                <scope line="268"/>
            </method>
            <javadoc line="272">
                Helper routine to go through all properties contined in a
                  provider and add its mechanisms to the list of supported
                  mechanisms. If no default mechanism has been assinged so far,
                  it sets the default MechanismFactory and Oid as well.                
                <param>
                    p the provider to query                    
                </param>
                <return>
                    true if there is at least one mechanism that this
                      provider contributed, false otherwise                    
                </return>
            </javadoc>
            <method name="addAllMechsFromProvider" type="boolean" line="281">
                <params>
                    <param name="p" type="Provider"/>
                </params>
                <declaration name="prop" type="String" line="282"/>
                <declaration name="retVal" type="boolean" line="283"/>
                <declaration name="props" type="Enumeration&lt;Object&gt;" line="284"/>
                <scope line="285">
                    <scope line="287">
                        <scope line="288">
                            <declaration name="mechOid" type="Oid" line="289"/>
                        </scope>
                        <scope line="293"/>
                    </scope>
                </scope>
            </method>
            <class name="PreferencesEntry" line="300">
                <javadoc line="300">
                    Stores a provider and a mechanism oid indicating that the
                      provider should be used for the mechanism. If the mechanism
                      Oid is null, then it indicates that this preference holds for
                      any mechanism.&lt;p&gt;
                      The ProviderList maintains an ordered list of
                      PreferencesEntry&apos;s and iterates thru them as it tries to
                      instantiate MechanismFactory&apos;s.                    
                </javadoc>
                <declaration name="p" type="Provider" line="310"/>
                <declaration name="oid" type="Oid" line="311"/>
                <method name="PreferencesEntry" type="constructor" line="312">
                    <params>
                        <param name="p" type="Provider"/>
                        <param name="oid" type="Oid"/>
                    </params>
                </method>
                <method name="equals" type="boolean" line="316">
                    <params>
                        <param name="other" type="Object"/>
                    </params>
                    <scope line="317"/>
                    <scope line="320"/>
                    <declaration name="that" type="PreferencesEntry" line="323"/>
                    <scope line="324">
                        <scope line="325"/>
                        <scope line="328"/>
                    </scope>
                </method>
                <method name="hashCode" type="int" line="334">
                    <declaration name="result" type="int" line="335"/>
                    <scope line="337"/>
                </method>
                <javadoc line="342">
                    Determines if a preference implies another. A preference
                      implies another if the latter is subsumed by the
                      former. e.g., &lt;Provider1, null&gt; implies &lt;Provider1, OidX&gt;
                      because the null in the former indicates that it should
                      be used for all mechanisms.                    
                </javadoc>
                <method name="implies" type="boolean" line="349">
                    <params>
                        <param name="other" type="Object"/>
                    </params>
                    <scope line="350">
                        <declaration name="temp" type="PreferencesEntry" line="351"/>
                    </scope>
                    <scope line="354"/>
                </method>
                <method name="getProvider" type="Provider" line="358"/>
                <method name="getOid" type="Oid" line="361"/>
                <javadoc line="364">
                    Determines if this entry is applicable to the desired
                      mechanism. The entry is applicable to the desired mech if
                      it contains the same oid or if it contains a null oid
                      indicating that it is applicable to all mechs.                    
                    <param>
                        mechOid the desired mechanism                        
                    </param>
                    <return>
                        true if the provider in this entry should be
                          queried for this mechanism.                        
                    </return>
                </javadoc>
                <method name="impliesMechanism" type="boolean" line="373">
                    <params>
                        <param name="oid" type="Oid"/>
                    </params>
                </method>
                <method name="toString" type="String" line="376">
                    <declaration name="buf" type="StringBuffer" line="377"/>
                </method>
            </class>
        </class>
    </source>