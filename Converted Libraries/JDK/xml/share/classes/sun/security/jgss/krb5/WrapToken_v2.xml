<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.jgss.krb5">
        <import package="org.ietf.jgss"/>
        <import package="sun.security.jgss"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.util.Arrays"/>
        <import package="sun.security.krb5.Confounder"/>
        <class name="WrapToken_v2" line="10">
            <extends class="MessageToken_v2"/>
            <javadoc line="10">
                This class represents the new format of GSS tokens, as specified in RFC
                  4121, emitted by the GSSContext.wrap() call. It is a MessageToken except
                  that it also contains plaintext or encrypted data at the end. A WrapToken
                  has certain other rules that are peculiar to it and different from a
                  MICToken, which is another type of MessageToken. All data in a WrapToken is
                  prepended by a random confounder of 16 bytes. Thus, all application data
                  is replaced by (confounder || data || tokenHeader || checksum).                
                <author>
                    Seema Malkani                    
                </author>
            </javadoc>
            <declaration name="confounder" type="byte[]" line="21"/>
            <declaration name="privacy" type="boolean" line="22"/>
            <javadoc line="23">
                Constructs a WrapToken from token bytes obtained from the
                  peer.                
                <param>
                    context the mechanism context associated with this
                      token                    
                </param>
                <param>
                    tokenBytes the bytes of the token                    
                </param>
                <param>
                    tokenOffset the offset of the token                    
                </param>
                <param>
                    tokenLen the length of the token                    
                </param>
                <param>
                    prop the MessageProp into which characteristics of the
                      parsed token will be stored.                    
                </param>
                <throws>
                    GSSException if the token is defective                    
                </throws>
            </javadoc>
            <method name="WrapToken_v2" type="constructor" line="35">
                <params>
                    <param name="context" type="Krb5Context"/>
                    <param name="tokenBytes" type="byte[]"/>
                    <param name="tokenOffset" type="int"/>
                    <param name="tokenLen" type="int"/>
                    <param name="prop" type="MessageProp"/>
                </params>
            </method>
            <javadoc line="39">
                Constructs a WrapToken from token bytes read on the fly from
                  an InputStream.                
                <param>
                    context the mechanism context associated with this
                      token                    
                </param>
                <param>
                    is the InputStream containing the token bytes                    
                </param>
                <param>
                    prop the MessageProp into which characteristics of the
                      parsed token will be stored.                    
                </param>
                <throws>
                    GSSException if the token is defective or if there is
                      a problem reading from the InputStream                    
                </throws>
            </javadoc>
            <method name="WrapToken_v2" type="constructor" line="50">
                <params>
                    <param name="context" type="Krb5Context"/>
                    <param name="is" type="InputStream"/>
                    <param name="prop" type="MessageProp"/>
                </params>
            </method>
            <javadoc line="54">
                Obtains the application data that was transmitted in this
                  WrapToken.                
                <return>
                    a byte array containing the application data                    
                </return>
                <throws>
                    GSSException if an error occurs while decrypting any
                      cipher text and checking for validity                    
                </throws>
            </javadoc>
            <method name="getData" type="byte[]" line="61">
                <declaration name="temp" type="byte[]" line="62"/>
                <declaration name="len" type="int" line="63"/>
            </method>
            <javadoc line="66">
                Obtains the application data that was transmitted in this
                  WrapToken, writing it into an application provided output
                  array.                
                <param>
                    dataBuf the output buffer into which the data must be
                      written                    
                </param>
                <param>
                    dataBufOffset the offset at which to write the data                    
                </param>
                <return>
                    the size of the data written                    
                </return>
                <throws>
                    GSSException if an error occurs while decrypting any
                      cipher text and checking for validity                    
                </throws>
            </javadoc>
            <method name="getData" type="int" line="77">
                <params>
                    <param name="dataBuf" type="byte[]"/>
                    <param name="dataBufOffset" type="int"/>
                </params>
                <scope line="78"/>
                <scope line="82">
                    <declaration name="data_length" type="int" line="83"/>
                    <scope line="85"/>
                </scope>
            </method>
            <javadoc line="91">
                Writes a WrapToken_v2 object                
            </javadoc>
            <method name="WrapToken_v2" type="constructor" line="94">
                <params>
                    <param name="context" type="Krb5Context"/>
                    <param name="prop" type="MessageProp"/>
                    <param name="dataBytes" type="byte[]"/>
                    <param name="dataOffset" type="int"/>
                    <param name="dataLen" type="int"/>
                </params>
                <scope line="100"/>
                <scope line="105"/>
            </method>
            <method name="encode" type="void" line="109">
                <params>
                    <param name="os" type="OutputStream"/>
                </params>
            </method>
            <method name="encode" type="byte[]" line="113">
                <declaration name="bos" type="ByteArrayOutputStream" line="114"/>
            </method>
            <method name="encode" type="int" line="118">
                <params>
                    <param name="outToken" type="byte[]"/>
                    <param name="offset" type="int"/>
                </params>
                <declaration name="token" type="byte[]" line="119"/>
            </method>
            <method name="getSizeLimit" type="int" line="123">
                <params>
                    <param name="qop" type="int"/>
                    <param name="confReq" type="boolean"/>
                    <param name="maxTokenSize" type="int"/>
                    <param name="ch" type="CipherHelper"/>
                </params>
            </method>
        </class>
    </source>