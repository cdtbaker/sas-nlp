<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.jgss.spnego">
        <import package="java.io"/>
        <import package="java.util"/>
        <import package="org.ietf.jgss"/>
        <import package="sun.security.jgss"/>
        <import package="sun.security.util"/>
        <class name="NegTokenTarg" line="34">
            <extends class="SpNegoToken"/>
            <comment line="72">
                Used by sun.security.jgss.wrapper.NativeGSSContext
                 to parse SPNEGO tokens                
            </comment>
            <comment line="201">
                Used by sun.security.jgss.wrapper.NativeGSSContext
                 to find the supported mech in SPNEGO tokens                
            </comment>
            <javadoc line="34">
                Implements the SPNEGO NegTokenTarg token
                  as specified in RFC 2478
                  NegTokenTarg ::= SEQUENCE {
                  negResult   [0] ENUMERATED {
                  accept_completed        (0),
                  accept_incomplete       (1),
                  reject                  (2) }   OPTIONAL,
                  supportedMech   [1] MechType            OPTIONAL,
                  responseToken   [2] OCTET STRING        OPTIONAL,
                  mechListMIC     [3] OCTET STRING        OPTIONAL
                  }
                  MechType::= OBJECT IDENTIFIER                
                <author>
                    Seema Malkani                    
                </author>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="negResult" type="int" line="57"/>
            <declaration name="supportedMech" type="Oid" line="58"/>
            <declaration name="responseToken" type="byte[]" line="59"/>
            <declaration name="mechListMIC" type="byte[]" line="60"/>
            <method name="NegTokenTarg" type="constructor" line="63">
                <params>
                    <param name="result" type="int"/>
                    <param name="mech" type="Oid"/>
                    <param name="token" type="byte[]"/>
                    <param name="mechListMIC" type="byte[]"/>
                </params>
            </method>
            <method name="NegTokenTarg" type="constructor" line="73">
                <params>
                    <param name="in" type="byte[]"/>
                </params>
            </method>
            <method name="encode" type="byte[]" line="78">
                <comment line="81">
                    create negTargToken                    
                </comment>
                <comment line="84">
                    write the negotiated result with CONTEXT 00                    
                </comment>
                <comment line="90">
                    supportedMech with CONTEXT 01                    
                </comment>
                <comment line="99">
                    response Token with CONTEXT 02                    
                </comment>
                <comment line="107">
                    mechListMIC with CONTEXT 03                    
                </comment>
                <comment line="118">
                    required for MS-interoperability                    
                </comment>
                <comment line="131">
                    insert in a SEQUENCE                    
                </comment>
                <scope line="79">
                    <declaration name="targToken" type="DerOutputStream" line="81"/>
                    <declaration name="result" type="DerOutputStream" line="84"/>
                    <scope line="90">
                        <declaration name="mech" type="DerOutputStream" line="91"/>
                        <declaration name="mechType" type="byte[]" line="92"/>
                    </scope>
                    <scope line="99">
                        <declaration name="rspToken" type="DerOutputStream" line="100"/>
                    </scope>
                    <scope line="107">
                        <scope line="108"/>
                        <declaration name="mic" type="DerOutputStream" line="112"/>
                    </scope>
                    <scope line="116">
                        <scope line="118">
                            <scope line="119"/>
                            <declaration name="rspToken" type="DerOutputStream" line="123"/>
                        </scope>
                    </scope>
                    <declaration name="out" type="DerOutputStream" line="131"/>
                </scope>
                <scope line="136"/>
            </method>
            <method name="parseToken" type="void" line="142">
                <params>
                    <param name="in" type="byte[]"/>
                </params>
                <comment line="146">
                    verify NegotiationToken type token                    
                </comment>
                <comment line="157">
                    parse various fields if present                    
                </comment>
                <scope line="143">
                    <declaration name="der" type="DerValue" line="144"/>
                    <scope line="146"/>
                    <declaration name="tmp1" type="DerValue" line="150"/>
                    <scope line="151"/>
                    <declaration name="lastField" type="int" line="157"/>
                    <scope line="158">
                        <declaration name="tmp2" type="DerValue" line="159"/>
                        <scope line="160">
                            <scope line="163"/>
                        </scope>
                        <scope line="167">
                            <declaration name="mech" type="ObjectIdentifier" line="169"/>
                            <scope line="171"/>
                        </scope>
                        <scope line="175"/>
                        <scope line="178">
                            <scope line="180">
                                <scope line="182"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="190"/>
            </method>
            <method name="getNegotiatedResult" type="int" line="196"/>
            <method name="getSupportedMech" type="Oid" line="202"/>
            <method name="getResponseToken" type="byte[]" line="206"/>
            <method name="getMechListMIC" type="byte[]" line="210"/>
        </class>
    </source>