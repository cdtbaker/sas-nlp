<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.jgss.spnego">
        <import package="java.io"/>
        <import package="java.util"/>
        <import package="org.ietf.jgss"/>
        <import package="sun.security.jgss"/>
        <import package="sun.security.util"/>
        <class name="NegTokenTarg" line="7">
            <extends class="SpNegoToken"/>
            <javadoc line="7">
                Implements the SPNEGO NegTokenTarg token
                  as specified in RFC 2478
                  NegTokenTarg ::= SEQUENCE {
                  negResult   [0] ENUMERATED {
                  accept_completed        (0),
                  accept_incomplete       (1),
                  reject                  (2) }   OPTIONAL,
                  supportedMech   [1] MechType            OPTIONAL,
                  responseToken   [2] OCTET STRING        OPTIONAL,
                  mechListMIC     [3] OCTET STRING        OPTIONAL
                  }
                  MechType::= OBJECT IDENTIFIER                
                <author>
                    Seema Malkani                    
                </author>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="negResult" type="int" line="24"/>
            <declaration name="supportedMech" type="Oid" line="25"/>
            <declaration name="responseToken" type="byte[]" line="26"/>
            <declaration name="mechListMIC" type="byte[]" line="27"/>
            <method name="NegTokenTarg" type="constructor" line="28">
                <params>
                    <param name="result" type="int"/>
                    <param name="mech" type="Oid"/>
                    <param name="token" type="byte[]"/>
                    <param name="mechListMIC" type="byte[]"/>
                </params>
            </method>
            <method name="NegTokenTarg" type="constructor" line="35">
                <params>
                    <param name="in" type="byte[]"/>
                </params>
            </method>
            <method name="encode" type="byte[]" line="39">
                <scope line="40">
                    <declaration name="targToken" type="DerOutputStream" line="41"/>
                    <declaration name="result" type="DerOutputStream" line="42"/>
                    <scope line="45">
                        <declaration name="mech" type="DerOutputStream" line="46"/>
                        <declaration name="mechType" type="byte[]" line="47"/>
                    </scope>
                    <scope line="51">
                        <declaration name="rspToken" type="DerOutputStream" line="52"/>
                    </scope>
                    <scope line="56">
                        <scope line="57"/>
                        <declaration name="mic" type="DerOutputStream" line="60"/>
                    </scope>
                    <scope line="64">
                        <scope line="65">
                            <scope line="66"/>
                            <declaration name="rspToken" type="DerOutputStream" line="69"/>
                        </scope>
                    </scope>
                    <declaration name="out" type="DerOutputStream" line="74"/>
                </scope>
                <scope line="78"/>
            </method>
            <method name="parseToken" type="void" line="82">
                <params>
                    <param name="in" type="byte[]"/>
                </params>
                <scope line="83">
                    <declaration name="der" type="DerValue" line="84"/>
                    <scope line="85"/>
                    <declaration name="tmp1" type="DerValue" line="88"/>
                    <scope line="89"/>
                    <declaration name="lastField" type="int" line="92"/>
                    <scope line="93">
                        <declaration name="tmp2" type="DerValue" line="94"/>
                        <scope line="95">
                            <scope line="98"/>
                        </scope>
                        <scope line="102">
                            <declaration name="mech" type="ObjectIdentifier" line="104"/>
                            <scope line="106"/>
                        </scope>
                        <scope line="110"/>
                        <scope line="114">
                            <scope line="116">
                                <scope line="118"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="125"/>
            </method>
            <method name="getNegotiatedResult" type="int" line="129"/>
            <method name="getSupportedMech" type="Oid" line="132"/>
            <method name="getResponseToken" type="byte[]" line="135"/>
            <method name="getMechListMIC" type="byte[]" line="138"/>
        </class>
    </source>