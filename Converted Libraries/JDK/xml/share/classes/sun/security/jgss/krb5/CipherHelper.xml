<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.jgss.krb5">
        <import package="javax.crypto.Cipher"/>
        <import package="javax.crypto.SecretKey"/>
        <import package="javax.crypto.spec.IvParameterSpec"/>
        <import package="javax.crypto.spec.SecretKeySpec"/>
        <import package="javax.crypto.CipherInputStream"/>
        <import package="javax.crypto.CipherOutputStream"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.io.IOException"/>
        <import package="org.ietf.jgss"/>
        <import package="java.security.MessageDigest"/>
        <import package="java.security.GeneralSecurityException"/>
        <import package="java.security.NoSuchAlgorithmException"/>
        <import package="sun.security.krb5"/>
        <import package="sun.security.krb5.internal.crypto.Des3"/>
        <import package="sun.security.krb5.internal.crypto.Aes128"/>
        <import package="sun.security.krb5.internal.crypto.Aes256"/>
        <import package="sun.security.krb5.internal.crypto.ArcFourHmac"/>
        <class name="CipherHelper" line="20">
            <declaration name="KG_USAGE_SEAL" type="int" line="21"/>
            <declaration name="KG_USAGE_SIGN" type="int" line="22"/>
            <declaration name="KG_USAGE_SEQ" type="int" line="23"/>
            <declaration name="DES_CHECKSUM_SIZE" type="int" line="24"/>
            <declaration name="DES_IV_SIZE" type="int" line="25"/>
            <declaration name="AES_IV_SIZE" type="int" line="26"/>
            <declaration name="HMAC_CHECKSUM_SIZE" type="int" line="27"/>
            <declaration name="KG_USAGE_SIGN_MS" type="int" line="28"/>
            <declaration name="DEBUG" type="boolean" line="29"/>
            <declaration name="ZERO_IV" type="byte[]" line="30"/>
            <javadoc line="30">
                A zero initial vector to be used for checksum calculation and for
                  DesCbc application data encryption/decryption.                
            </javadoc>
            <declaration name="ZERO_IV_AES" type="byte[]" line="35"/>
            <declaration name="etype" type="int" line="36"/>
            <declaration name="sgnAlg" type="int" line="37"/>
            <declaration name="keybytes" type="byte[]" line="38"/>
            <declaration name="proto" type="int" line="39"/>
            <method name="CipherHelper" type="constructor" line="40">
                <params>
                    <param name="key" type="EncryptionKey"/>
                </params>
            </method>
            <method name="getSgnAlg" type="int" line="67"/>
            <method name="getSealAlg" type="int" line="70"/>
            <method name="getProto" type="int" line="73"/>
            <method name="getEType" type="int" line="76"/>
            <method name="isArcFour" type="boolean" line="79">
                <declaration name="flag" type="boolean" line="80"/>
                <scope line="81"/>
            </method>
            <method name="calculateChecksum" type="byte[]" line="86">
                <params>
                    <param name="alg" type="int"/>
                    <param name="header" type="byte[]"/>
                    <param name="trailer" type="byte[]"/>
                    <param name="data" type="byte[]"/>
                    <param name="start" type="int"/>
                    <param name="len" type="int"/>
                    <param name="tokenId" type="int"/>
                </params>
                <scope line="89">
                    <declaration name="md5" type="MessageDigest" line="90"/>
                    <scope line="93"/>
                </scope>
                <scope line="102">
                    <declaration name="ge" type="GSSException" line="103"/>
                </scope>
                <declaration name="buf" type="byte[]" line="110"/>
                <declaration name="offset" type="int" line="111"/>
                <scope line="112"/>
                <scope line="117">
                    <declaration name="pos" type="int" line="120"/>
                    <scope line="121"/>
                    <scope line="127"/>
                </scope>
                <scope line="132">
                    <declaration name="answer" type="byte[]" line="133"/>
                </scope>
                <scope line="136">
                    <declaration name="ge" type="GSSException" line="137"/>
                </scope>
                <declaration name="buffer" type="byte[]" line="142"/>
                <declaration name="off" type="int" line="143"/>
                <scope line="144"/>
                <scope line="149">
                    <declaration name="pos" type="int" line="152"/>
                    <scope line="153"/>
                    <scope line="159"/>
                </scope>
                <scope line="164">
                    <declaration name="key_usage" type="int" line="165"/>
                    <scope line="166"/>
                    <declaration name="answer" type="byte[]" line="169"/>
                    <declaration name="output" type="byte[]" line="170"/>
                </scope>
                <scope line="174">
                    <declaration name="ge" type="GSSException" line="175"/>
                </scope>
            </method>
            <method name="calculateChecksum" type="byte[]" line="183">
                <params>
                    <param name="header" type="byte[]"/>
                    <param name="data" type="byte[]"/>
                    <param name="start" type="int"/>
                    <param name="len" type="int"/>
                    <param name="key_usage" type="int"/>
                </params>
                <declaration name="total" type="int" line="184"/>
                <declaration name="buf" type="byte[]" line="185"/>
                <scope line="187"/>
                <scope line="192">
                    <declaration name="answer" type="byte[]" line="193"/>
                </scope>
                <scope line="196">
                    <declaration name="ge" type="GSSException" line="197"/>
                </scope>
                <scope line="202">
                    <declaration name="answer" type="byte[]" line="203"/>
                </scope>
                <scope line="206">
                    <declaration name="ge" type="GSSException" line="207"/>
                </scope>
            </method>
            <method name="encryptSeq" type="byte[]" line="215">
                <params>
                    <param name="ivec" type="byte[]"/>
                    <param name="plaintext" type="byte[]"/>
                    <param name="start" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="219">
                    <declaration name="des" type="Cipher" line="220"/>
                </scope>
                <scope line="223">
                    <declaration name="ge" type="GSSException" line="224"/>
                </scope>
                <declaration name="iv" type="byte[]" line="229"/>
                <scope line="230"/>
                <scope line="233"/>
                <scope line="237"/>
                <scope line="240">
                    <declaration name="ge" type="GSSException" line="241"/>
                </scope>
                <declaration name="checksum" type="byte[]" line="246"/>
                <scope line="247"/>
                <scope line="250"/>
                <scope line="254"/>
                <scope line="257">
                    <declaration name="ge" type="GSSException" line="258"/>
                </scope>
            </method>
            <method name="decryptSeq" type="byte[]" line="266">
                <params>
                    <param name="ivec" type="byte[]"/>
                    <param name="ciphertext" type="byte[]"/>
                    <param name="start" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="270">
                    <declaration name="des" type="Cipher" line="271"/>
                </scope>
                <scope line="274">
                    <declaration name="ge" type="GSSException" line="275"/>
                </scope>
                <declaration name="iv" type="byte[]" line="280"/>
                <scope line="281"/>
                <scope line="284"/>
                <scope line="288"/>
                <scope line="291">
                    <declaration name="ge" type="GSSException" line="292"/>
                </scope>
                <declaration name="checksum" type="byte[]" line="297"/>
                <scope line="298"/>
                <scope line="301"/>
                <scope line="305"/>
                <scope line="308">
                    <declaration name="ge" type="GSSException" line="309"/>
                </scope>
            </method>
            <method name="getChecksumLength" type="int" line="317"/>
            <method name="decryptData" type="void" line="334">
                <params>
                    <param name="token" type="WrapToken"/>
                    <param name="ciphertext" type="byte[]"/>
                    <param name="cStart" type="int"/>
                    <param name="cLen" type="int"/>
                    <param name="plaintext" type="byte[]"/>
                    <param name="pStart" type="int"/>
                </params>
            </method>
            <method name="decryptData" type="void" line="349">
                <params>
                    <param name="token" type="WrapToken_v2"/>
                    <param name="ciphertext" type="byte[]"/>
                    <param name="cStart" type="int"/>
                    <param name="cLen" type="int"/>
                    <param name="plaintext" type="byte[]"/>
                    <param name="pStart" type="int"/>
                    <param name="key_usage" type="int"/>
                </params>
            </method>
            <method name="decryptData" type="void" line="361">
                <params>
                    <param name="token" type="WrapToken"/>
                    <param name="cipherStream" type="InputStream"/>
                    <param name="cLen" type="int"/>
                    <param name="plaintext" type="byte[]"/>
                    <param name="pStart" type="int"/>
                </params>
                <declaration name="ciphertext" type="byte[]" line="367"/>
                <scope line="368"/>
                <scope line="371">
                    <declaration name="ge" type="GSSException" line="372"/>
                </scope>
                <declaration name="ctext" type="byte[]" line="379"/>
                <scope line="380"/>
                <scope line="383">
                    <declaration name="ge" type="GSSException" line="384"/>
                </scope>
            </method>
            <method name="decryptData" type="void" line="394">
                <params>
                    <param name="token" type="WrapToken_v2"/>
                    <param name="cipherStream" type="InputStream"/>
                    <param name="cLen" type="int"/>
                    <param name="plaintext" type="byte[]"/>
                    <param name="pStart" type="int"/>
                    <param name="key_usage" type="int"/>
                </params>
                <declaration name="ciphertext" type="byte[]" line="395"/>
                <scope line="396"/>
                <scope line="399">
                    <declaration name="ge" type="GSSException" line="400"/>
                </scope>
            </method>
            <method name="encryptData" type="void" line="415">
                <params>
                    <param name="token" type="WrapToken"/>
                    <param name="confounder" type="byte[]"/>
                    <param name="plaintext" type="byte[]"/>
                    <param name="start" type="int"/>
                    <param name="len" type="int"/>
                    <param name="padding" type="byte[]"/>
                    <param name="os" type="OutputStream"/>
                </params>
                <declaration name="des" type="Cipher" line="418"/>
                <declaration name="cos" type="CipherOutputStream" line="419"/>
                <declaration name="ctext" type="byte[]" line="425"/>
                <declaration name="ciphertext" type="byte[]" line="429"/>
            </method>
            <method name="encryptData" type="byte[]" line="436">
                <params>
                    <param name="token" type="WrapToken_v2"/>
                    <param name="confounder" type="byte[]"/>
                    <param name="tokenHeader" type="byte[]"/>
                    <param name="plaintext" type="byte[]"/>
                    <param name="start" type="int"/>
                    <param name="len" type="int"/>
                    <param name="key_usage" type="int"/>
                </params>
            </method>
            <method name="encryptData" type="void" line="446">
                <params>
                    <param name="token" type="WrapToken"/>
                    <param name="confounder" type="byte[]"/>
                    <param name="plaintext" type="byte[]"/>
                    <param name="pStart" type="int"/>
                    <param name="pLen" type="int"/>
                    <param name="padding" type="byte[]"/>
                    <param name="ciphertext" type="byte[]"/>
                    <param name="cStart" type="int"/>
                </params>
                <declaration name="pos" type="int" line="449"/>
                <declaration name="des" type="Cipher" line="450"/>
                <scope line="451"/>
                <scope line="457">
                    <declaration name="ge" type="GSSException" line="458"/>
                </scope>
                <declaration name="ctext" type="byte[]" line="464"/>
                <declaration name="ctext2" type="byte[]" line="468"/>
            </method>
            <method name="encryptData" type="int" line="475">
                <params>
                    <param name="token" type="WrapToken_v2"/>
                    <param name="confounder" type="byte[]"/>
                    <param name="tokenHeader" type="byte[]"/>
                    <param name="plaintext" type="byte[]"/>
                    <param name="pStart" type="int"/>
                    <param name="pLen" type="int"/>
                    <param name="ciphertext" type="byte[]"/>
                    <param name="cStart" type="int"/>
                    <param name="key_usage" type="int"/>
                </params>
                <declaration name="ctext" type="byte[]" line="476"/>
            </method>
            <javadoc line="490">
                Computes the DesCbc checksum based on the algorithm published in FIPS
                  Publication 113. This involves applying padding to the data passed
                  in, then performing DesCbc encryption on the data with a zero initial
                  vector, and finally returning the last 8 bytes of the encryption
                  result.                
                <param>
                    key the bytes for the DES key                    
                </param>
                <param>
                    header a header to process first before the data is.                    
                </param>
                <param>
                    data the data to checksum                    
                </param>
                <param>
                    offset the offset where the data begins                    
                </param>
                <param>
                    len the length of the data                    
                </param>
                <throws>
                    GSSException when an error occuse in the encryption                    
                </throws>
            </javadoc>
            <method name="getDesCbcChecksum" type="byte[]" line="503">
                <params>
                    <param name="key" type="byte"/>
                    <param name="header" type="byte[]"/>
                    <param name="data" type="byte[]"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <declaration name="des" type="Cipher" line="504"/>
                <declaration name="blockSize" type="int" line="505"/>
                <declaration name="finalBlock" type="byte[]" line="506"/>
                <declaration name="numBlocks" type="int" line="507"/>
                <declaration name="lastBytes" type="int" line="508"/>
                <scope line="509"/>
                <scope line="513"/>
                <scope line="516">
                    <declaration name="temp" type="byte[]" line="517"/>
                    <scope line="518"/>
                    <scope line="521"/>
                    <declaration name="retVal" type="byte[]" line="525"/>
                </scope>
                <scope line="530">
                    <declaration name="ge" type="GSSException" line="531"/>
                </scope>
            </method>
            <javadoc line="536">
                Obtains an initialized DES cipher.                
                <param>
                    encryptMode true if encryption is desired, false is decryption
                      is desired.                    
                </param>
                <param>
                    key the bytes for the DES key                    
                </param>
                <param>
                    ivBytes the initial vector bytes                    
                </param>
            </javadoc>
            <method name="getInitializedDes" type="Cipher" line="543">
                <params>
                    <param name="encryptMode" type="boolean"/>
                    <param name="key" type="byte[]"/>
                    <param name="ivBytes" type="byte[]"/>
                </params>
                <scope line="544">
                    <declaration name="iv" type="IvParameterSpec" line="545"/>
                    <declaration name="jceKey" type="SecretKey" line="546"/>
                    <declaration name="desCipher" type="Cipher" line="547"/>
                </scope>
                <scope line="551">
                    <declaration name="ge" type="GSSException" line="552"/>
                </scope>
            </method>
            <javadoc line="557">
                Helper routine to decrypt fromm a byte array and write the
                  application data straight to an output array with minimal
                  buffer copies. The confounder and the padding are stored
                  separately and not copied into this output array.                
                <param>
                    key the DES key to use                    
                </param>
                <param>
                    cipherText the encrypted data                    
                </param>
                <param>
                    offset the offset for the encrypted data                    
                </param>
                <param>
                    len the length of the encrypted data                    
                </param>
                <param>
                    dataOutBuf the output buffer where the application data
                      should be writte                    
                </param>
                <param>
                    dataOffset the offser where the application data should
                      be written.                    
                </param>
                <throws>
                    GSSException is an error occurs while decrypting the
                      data                    
                </throws>
            </javadoc>
            <method name="desCbcDecrypt" type="void" line="573">
                <params>
                    <param name="token" type="WrapToken"/>
                    <param name="key" type="byte[]"/>
                    <param name="cipherText" type="byte[]"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                    <param name="dataOutBuf" type="byte[]"/>
                    <param name="dataOffset" type="int"/>
                </params>
                <scope line="574">
                    <declaration name="temp" type="int" line="575"/>
                    <declaration name="des" type="Cipher" line="576"/>
                    <declaration name="blockSize" type="int" line="580"/>
                    <declaration name="numBlocks" type="int" line="581"/>
                    <scope line="582"/>
                    <declaration name="finalBlock" type="byte[]" line="587"/>
                    <declaration name="padSize" type="int" line="590"/>
                </scope>
                <scope line="596">
                    <declaration name="ge" type="GSSException" line="597"/>
                </scope>
            </method>
            <javadoc line="602">
                Helper routine to decrypt from an InputStream and write the
                  application data straight to an output array with minimal
                  buffer copies. The confounder and the padding are stored
                  separately and not copied into this output array.                
                <param>
                    key the DES key to use                    
                </param>
                <param>
                    is the InputStream from which the cipher text should be
                      read                    
                </param>
                <param>
                    len the length of the ciphertext data                    
                </param>
                <param>
                    dataOutBuf the output buffer where the application data
                      should be writte                    
                </param>
                <param>
                    dataOffset the offser where the application data should
                      be written.                    
                </param>
                <throws>
                    GSSException is an error occurs while decrypting the
                      data                    
                </throws>
            </javadoc>
            <method name="desCbcDecrypt" type="void" line="618">
                <params>
                    <param name="token" type="WrapToken"/>
                    <param name="key" type="byte[]"/>
                    <param name="is" type="InputStream"/>
                    <param name="len" type="int"/>
                    <param name="dataOutBuf" type="byte[]"/>
                    <param name="dataOffset" type="int"/>
                </params>
                <declaration name="temp" type="int" line="619"/>
                <declaration name="des" type="Cipher" line="620"/>
                <declaration name="truncatedInputStream" type="WrapTokenInputStream" line="621"/>
                <declaration name="cis" type="CipherInputStream" line="622"/>
                <declaration name="blockSize" type="int" line="625"/>
                <declaration name="numBlocks" type="int" line="626"/>
                <scope line="627"/>
                <declaration name="finalBlock" type="byte[]" line="631"/>
                <scope line="633"/>
                <scope line="636">
                    <declaration name="ge" type="GSSException" line="637"/>
                </scope>
                <declaration name="padSize" type="int" line="641"/>
            </method>
            <method name="getDesEncryptionKey" type="byte[]" line="647">
                <params>
                    <param name="key" type="byte[]"/>
                </params>
                <declaration name="retVal" type="byte[]" line="649"/>
            </method>
            <method name="des3KdDecrypt" type="void" line="653">
                <params>
                    <param name="token" type="WrapToken"/>
                    <param name="ciphertext" type="byte[]"/>
                    <param name="cStart" type="int"/>
                    <param name="cLen" type="int"/>
                    <param name="plaintext" type="byte[]"/>
                    <param name="pStart" type="int"/>
                </params>
                <declaration name="ptext" type="byte[]" line="654"/>
                <scope line="655"/>
                <scope line="658">
                    <declaration name="ge" type="GSSException" line="659"/>
                </scope>
                <declaration name="padSize" type="int" line="663"/>
                <declaration name="len" type="int" line="666"/>
            </method>
            <method name="des3KdEncrypt" type="byte[]" line="670">
                <params>
                    <param name="confounder" type="byte[]"/>
                    <param name="plaintext" type="byte[]"/>
                    <param name="start" type="int"/>
                    <param name="len" type="int"/>
                    <param name="padding" type="byte[]"/>
                </params>
                <declaration name="all" type="byte[]" line="671"/>
                <scope line="675">
                    <declaration name="answer" type="byte[]" line="676"/>
                </scope>
                <scope line="679">
                    <declaration name="ge" type="GSSException" line="680"/>
                </scope>
            </method>
            <method name="arcFourDecrypt" type="void" line="685">
                <params>
                    <param name="token" type="WrapToken"/>
                    <param name="ciphertext" type="byte[]"/>
                    <param name="cStart" type="int"/>
                    <param name="cLen" type="int"/>
                    <param name="plaintext" type="byte[]"/>
                    <param name="pStart" type="int"/>
                </params>
                <declaration name="seqNum" type="byte[]" line="686"/>
                <declaration name="ptext" type="byte[]" line="687"/>
                <scope line="688"/>
                <scope line="691">
                    <declaration name="ge" type="GSSException" line="692"/>
                </scope>
                <declaration name="padSize" type="int" line="696"/>
                <declaration name="len" type="int" line="699"/>
            </method>
            <method name="arcFourEncrypt" type="byte[]" line="703">
                <params>
                    <param name="token" type="WrapToken"/>
                    <param name="confounder" type="byte[]"/>
                    <param name="plaintext" type="byte[]"/>
                    <param name="start" type="int"/>
                    <param name="len" type="int"/>
                    <param name="padding" type="byte[]"/>
                </params>
                <declaration name="all" type="byte[]" line="704"/>
                <declaration name="seqNum" type="byte[]" line="708"/>
                <scope line="710">
                    <declaration name="answer" type="byte[]" line="711"/>
                </scope>
                <scope line="714">
                    <declaration name="ge" type="GSSException" line="715"/>
                </scope>
            </method>
            <method name="aes128Encrypt" type="byte[]" line="720">
                <params>
                    <param name="confounder" type="byte[]"/>
                    <param name="tokenHeader" type="byte[]"/>
                    <param name="plaintext" type="byte[]"/>
                    <param name="start" type="int"/>
                    <param name="len" type="int"/>
                    <param name="key_usage" type="int"/>
                </params>
                <declaration name="all" type="byte[]" line="721"/>
                <scope line="725">
                    <declaration name="answer" type="byte[]" line="726"/>
                </scope>
                <scope line="729">
                    <declaration name="ge" type="GSSException" line="730"/>
                </scope>
            </method>
            <method name="aes128Decrypt" type="void" line="735">
                <params>
                    <param name="token" type="WrapToken_v2"/>
                    <param name="ciphertext" type="byte[]"/>
                    <param name="cStart" type="int"/>
                    <param name="cLen" type="int"/>
                    <param name="plaintext" type="byte[]"/>
                    <param name="pStart" type="int"/>
                    <param name="key_usage" type="int"/>
                </params>
                <declaration name="ptext" type="byte[]" line="736"/>
                <scope line="737"/>
                <scope line="740">
                    <declaration name="ge" type="GSSException" line="741"/>
                </scope>
                <declaration name="len" type="int" line="745"/>
            </method>
            <method name="aes256Encrypt" type="byte[]" line="748">
                <params>
                    <param name="confounder" type="byte[]"/>
                    <param name="tokenHeader" type="byte[]"/>
                    <param name="plaintext" type="byte[]"/>
                    <param name="start" type="int"/>
                    <param name="len" type="int"/>
                    <param name="key_usage" type="int"/>
                </params>
                <declaration name="all" type="byte[]" line="749"/>
                <scope line="753">
                    <declaration name="answer" type="byte[]" line="754"/>
                </scope>
                <scope line="757">
                    <declaration name="ge" type="GSSException" line="758"/>
                </scope>
            </method>
            <method name="aes256Decrypt" type="void" line="763">
                <params>
                    <param name="token" type="WrapToken_v2"/>
                    <param name="ciphertext" type="byte[]"/>
                    <param name="cStart" type="int"/>
                    <param name="cLen" type="int"/>
                    <param name="plaintext" type="byte[]"/>
                    <param name="pStart" type="int"/>
                    <param name="key_usage" type="int"/>
                </params>
                <declaration name="ptext" type="byte[]" line="764"/>
                <scope line="765"/>
                <scope line="768">
                    <declaration name="ge" type="GSSException" line="769"/>
                </scope>
                <declaration name="len" type="int" line="773"/>
            </method>
            <class name="WrapTokenInputStream" line="776">
                <extends class="InputStream"/>
                <javadoc line="776">
                    This class provides a truncated inputstream needed by WrapToken. The
                      truncated inputstream is passed to CipherInputStream. It prevents
                      the CipherInputStream from treating the bytes of the following token
                      as part fo the ciphertext for this token.                    
                </javadoc>
                <declaration name="is" type="InputStream" line="783"/>
                <declaration name="length" type="int" line="784"/>
                <declaration name="remaining" type="int" line="785"/>
                <declaration name="temp" type="int" line="786"/>
                <method name="WrapTokenInputStream" type="constructor" line="787">
                    <params>
                        <param name="is" type="InputStream"/>
                        <param name="length" type="int"/>
                    </params>
                </method>
                <method name="read" type="int" line="792">
                    <scope line="794"/>
                </method>
                <method name="read" type="int" line="800">
                    <params>
                        <param name="b" type="byte[]"/>
                    </params>
                    <scope line="802"/>
                </method>
                <method name="read" type="int" line="809">
                    <params>
                        <param name="b" type="byte[]"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                    </params>
                    <scope line="811"/>
                </method>
                <method name="skip" type="long" line="818">
                    <params>
                        <param name="n" type="long"/>
                    </params>
                    <scope line="820"/>
                </method>
                <method name="available" type="int" line="827"/>
                <method name="close" type="void" line="830"/>
            </class>
        </class>
    </source>