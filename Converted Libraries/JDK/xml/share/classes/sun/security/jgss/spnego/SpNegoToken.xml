<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.jgss.spnego">
        <import package="java.io"/>
        <import package="java.util"/>
        <import package="org.ietf.jgss"/>
        <import package="sun.security.util"/>
        <import package="sun.security.jgss"/>
        <class name="SpNegoToken" line="34">
            <extends class="GSSToken"/>
            <comment line="61">
                property                
            </comment>
            <javadoc line="34">
                Astract class for SPNEGO tokens.
                  Implementation is based on RFC 2478
                  NegotiationToken ::= CHOICE {
                  negTokenInit  [0]        NegTokenInit,
                  negTokenTarg  [1]        NegTokenTarg }                
                <author>
                    Seema Malkani                    
                </author>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="NEG_TOKEN_INIT_ID" type="int" line="49"/>
            <declaration name="NEG_TOKEN_TARG_ID" type="int" line="50"/>
            <declaration name="tokenType" type="int" line="58"/>
            <declaration name="DEBUG" type="boolean" line="61"/>
            <declaration name="OID" type="ObjectIdentifier" line="63"/>
            <javadoc line="63">
                The object identifier corresponding to the SPNEGO GSS-API
                  mechanism.                
            </javadoc>
            <scope line="69">
                <scope line="70"/>
                <scope line="73"/>
            </scope>
            <javadoc line="78">
                Creates SPNEGO token of the specified type.                
            </javadoc>
            <method name="SpNegoToken" type="constructor" line="81">
                <params>
                    <param name="tokenType" type="int"/>
                </params>
            </method>
            <method name="encode" type="byte[]" line="85"/>
            <javadoc line="85">
                Returns the individual encoded SPNEGO token                
                <return>
                    the encoded token                    
                </return>
                <exception>
                    GSSException                    
                </exception>
            </javadoc>
            <javadoc line="93">
                Returns the encoded SPNEGO token
                  Note: inserts the required CHOICE tags                
                <return>
                    the encoded token                    
                </return>
                <exception>
                    GSSException                    
                </exception>
            </javadoc>
            <method name="getEncoded" type="byte[]" line="100">
                <comment line="103">
                    get the token encoded value                    
                </comment>
                <comment line="107">
                    now insert the CHOICE                    
                </comment>
                <comment line="110">
                    Insert CHOICE of Negotiation Token                    
                </comment>
                <comment line="117">
                    Insert CHOICE of Negotiation Token                    
                </comment>
                <declaration name="token" type="DerOutputStream" line="103"/>
                <declaration name="initToken" type="DerOutputStream" line="110"/>
                <declaration name="targToken" type="DerOutputStream" line="117"/>
            </method>
            <javadoc line="126">
                Returns the SPNEGO token type                
                <return>
                    the token type                    
                </return>
            </javadoc>
            <method name="getType" type="int" line="131"/>
            <javadoc line="135">
                Returns a string representing the token type.                
                <param>
                    tokenType the token type for which a string name is desired                    
                </param>
                <return>
                    the String name of this token type                    
                </return>
            </javadoc>
            <method name="getTokenName" type="String" line="141">
                <params>
                    <param name="type" type="int"/>
                </params>
            </method>
            <javadoc line="152">
                Returns the enumerated type of the Negotiation result.                
                <param>
                    result the negotiated result represented by integer                    
                </param>
                <return>
                    the enumerated type of Negotiated result                    
                </return>
            </javadoc>
            <method name="getNegoResultType" type="NegoResult" line="158">
                <params>
                    <param name="result" type="int"/>
                </params>
                <comment line="168">
                    unknown - return optimistic result                    
                </comment>
            </method>
            <javadoc line="172">
                Returns a string representing the negotiation result.                
                <param>
                    result the negotiated result                    
                </param>
                <return>
                    the String message of this negotiated result                    
                </return>
            </javadoc>
            <method name="getNegoResultString" type="String" line="178">
                <params>
                    <param name="result" type="int"/>
                </params>
            </method>
            <javadoc line="191">
                Checks if the context tag in a sequence is in correct order. The &quot;last&quot;
                  value must be smaller than &quot;current&quot;.                
                <param>
                    last the last tag seen                    
                </param>
                <param>
                    current the current tag                    
                </param>
                <return>
                    the current tag, used as the next value for last                    
                </return>
                <throws>
                    GSSException if there&apos;s a wrong order                    
                </throws>
            </javadoc>
            <method name="checkNextField" type="int" line="199">
                <params>
                    <param name="last" type="int"/>
                    <param name="current" type="int"/>
                </params>
                <scope line="200"/>
                <scope line="202"/>
            </method>
        </class>
    </source>