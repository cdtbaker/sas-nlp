<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.jgss">
        <import package="org.ietf.jgss"/>
        <import package="sun.security.jgss.spi"/>
        <import package="java.util"/>
        <class name="GSSCredentialImpl" line="32">
            <comment line="38">
                We store all elements in a hashtable, using &lt;oid, usage&gt; as the
                 key. This makes it easy to locate the specific kind of credential we
                 need. The implementation needs to be optimized for the case where
                 there is just one element (tempCred).                
            </comment>
            <comment line="46">
                XXX Optimization for single mech usage                
            </comment>
            <implements interface="GSSCredential"/>
            <declaration name="gssManager" type="GSSManagerImpl" line="34"/>
            <declaration name="destroyed" type="boolean" line="35"/>
            <declaration name="hashtable" type="Hashtable&lt;SearchKey,GSSCredentialSpi&gt;" line="43"/>
            <declaration name="tempCred" type="GSSCredentialSpi" line="46"/>
            <method name="GSSCredentialImpl" type="constructor" line="49">
                <params>
                    <param name="gssManager" type="GSSManagerImpl"/>
                    <param name="usage" type="int"/>
                </params>
            </method>
            <method name="GSSCredentialImpl" type="constructor" line="56">
                <params>
                    <param name="gssManager" type="GSSManagerImpl"/>
                    <param name="name" type="GSSName"/>
                    <param name="lifetime" type="int"/>
                    <param name="mech" type="Oid"/>
                    <param name="usage" type="int"/>
                </params>
            </method>
            <method name="GSSCredentialImpl" type="constructor" line="65">
                <params>
                    <param name="gssManager" type="GSSManagerImpl"/>
                    <param name="name" type="GSSName"/>
                    <param name="lifetime" type="int"/>
                    <param name="mechs" type="Oid"/>
                    <param name="usage" type="int"/>
                </params>
                <comment line="78">
                    Try the next mechanism                    
                </comment>
                <comment line="81">
                    e.printStackTrace();                    
                </comment>
                <comment line="82">
                    else try the next mechanism                    
                </comment>
                <declaration name="defaultList" type="boolean" line="67"/>
                <scope line="68"/>
                <scope line="73">
                    <scope line="74"/>
                    <scope line="76">
                        <scope line="77"/>
                    </scope>
                </scope>
            </method>
            <method name="GSSCredentialImpl" type="constructor" line="90">
                <params>
                    <param name="gssManager" type="GSSManagerImpl"/>
                    <param name="mechElement" type="GSSCredentialSpi"/>
                </params>
                <declaration name="usage" type="int" line="93"/>
                <scope line="94">
                    <scope line="95"/>
                    <scope line="97"/>
                </scope>
                <declaration name="key" type="SearchKey" line="101"/>
            </method>
            <method name="init" type="void" line="107">
                <params>
                    <param name="gssManager" type="GSSManagerImpl"/>
                </params>
            </method>
            <method name="dispose" type="void" line="113">
                <scope line="114">
                    <declaration name="element" type="GSSCredentialSpi" line="115"/>
                    <declaration name="values" type="Enumeration&lt;GSSCredentialSpi&gt;" line="116"/>
                    <scope line="117"/>
                </scope>
            </method>
            <method name="getName" type="GSSName" line="125">
                <scope line="126"/>
            </method>
            <method name="getName" type="GSSName" line="133">
                <params>
                    <param name="mech" type="Oid"/>
                </params>
                <scope line="135"/>
                <declaration name="key" type="SearchKey" line="140"/>
                <declaration name="element" type="GSSCredentialSpi" line="141"/>
                <scope line="148"/>
                <scope line="153"/>
                <scope line="158"/>
            </method>
            <javadoc line="166">
                Returns the remaining lifetime of this credential. The remaining
                  lifetime is defined as the minimum lifetime, either for initiate or
                  for accept, across all elements contained in it. Not terribly
                  useful, but required by GSS-API.                
            </javadoc>
            <method name="getRemainingLifetime" type="int" line="172">
                <scope line="174"/>
                <declaration name="tempKey" type="SearchKey" line="179"/>
                <declaration name="tempCred" type="GSSCredentialSpi" line="180"/>
                <declaration name="tempLife" type="int" line="181"/>
                <declaration name="min" type="int" line="182"/>
                <scope line="185">
                    <scope line="192"/>
                </scope>
            </method>
            <method name="getRemainingInitLifetime" type="int" line="206">
                <params>
                    <param name="mech" type="Oid"/>
                </params>
                <scope line="208"/>
                <declaration name="element" type="GSSCredentialSpi" line="213"/>
                <declaration name="key" type="SearchKey" line="214"/>
                <declaration name="found" type="boolean" line="215"/>
                <declaration name="max" type="int" line="216"/>
                <scope line="223"/>
                <scope line="232"/>
                <scope line="238"/>
            </method>
            <method name="getRemainingAcceptLifetime" type="int" line="246">
                <params>
                    <param name="mech" type="Oid"/>
                </params>
                <scope line="248"/>
                <declaration name="element" type="GSSCredentialSpi" line="253"/>
                <declaration name="key" type="SearchKey" line="254"/>
                <declaration name="found" type="boolean" line="255"/>
                <declaration name="max" type="int" line="256"/>
                <scope line="263"/>
                <scope line="272"/>
                <scope line="278"/>
            </method>
            <javadoc line="286">
                Returns the usage mode for this credential. Returns
                  INITIATE_AND_ACCEPT if any one element contained in it supports
                  INITIATE_AND_ACCEPT or if two different elements exist where one
                  support INITIATE_ONLY and the other supports ACCEPT_ONLY.                
            </javadoc>
            <method name="getUsage" type="int" line="292">
                <scope line="294"/>
                <declaration name="tempKey" type="SearchKey" line="299"/>
                <declaration name="initiate" type="boolean" line="300"/>
                <declaration name="accept" type="boolean" line="301"/>
                <scope line="304"/>
                <scope line="313"/>
            </method>
            <method name="getUsage" type="int" line="322">
                <params>
                    <param name="mech" type="Oid"/>
                </params>
                <scope line="324"/>
                <declaration name="element" type="GSSCredentialSpi" line="329"/>
                <declaration name="key" type="SearchKey" line="330"/>
                <declaration name="initiate" type="boolean" line="331"/>
                <declaration name="accept" type="boolean" line="332"/>
                <scope line="339"/>
                <scope line="346"/>
                <scope line="353"/>
                <scope line="364"/>
            </method>
            <method name="getMechs" type="Oid[]" line="369">
                <scope line="371"/>
                <declaration name="result" type="Vector&lt;Oid&gt;" line="375"/>
                <scope line="378">
                    <declaration name="tempKey" type="SearchKey" line="379"/>
                </scope>
            </method>
            <method name="add" type="void" line="386">
                <params>
                    <param name="name" type="GSSName"/>
                    <param name="initLifetime" type="int"/>
                    <param name="acceptLifetime" type="int"/>
                    <param name="mech" type="Oid"/>
                    <param name="usage" type="int"/>
                </params>
                <comment line="401">
                    XXX If not instance of GSSNameImpl then throw exception                    
                </comment>
                <comment line="402">
                    Application mixing GSS implementations                    
                </comment>
                <comment line="411">
                    Not all mechanisms support the concept of one credential element
                     that can be used for both initiating and accepting a context. In
                     the event that an application requests usage INITIATE_AND_ACCEPT
                     for a credential from such a mechanism, the GSS framework will
                     need to obtain two different credential elements from the
                     mechanism, one that will have usage INITIATE_ONLY and another
                     that will have usage ACCEPT_ONLY. The mechanism will help the
                     GSS-API realize this by returning a credential element with
                     usage INITIATE_ONLY or ACCEPT_ONLY prompting it to make another
                     call to getCredentialElement, this time with the other usage
                     mode.                    
                </comment>
                <scope line="388"/>
                <declaration name="key" type="SearchKey" line="394"/>
                <scope line="395"/>
                <declaration name="nameElement" type="GSSNameSpi" line="403"/>
                <scope line="425">
                    <scope line="428">
                        <declaration name="currentUsage" type="int" line="430"/>
                        <declaration name="desiredUsage" type="int" line="431"/>
                        <scope line="433"/>
                        <scope line="436"/>
                    </scope>
                    <scope line="452"/>
                </scope>
            </method>
            <method name="equals" type="boolean" line="458">
                <params>
                    <param name="another" type="Object"/>
                </params>
                <comment line="473">
                    NOTE: The specification does not define the criteria to compare                    
                </comment>
                <comment line="474">
                    credentials.                    
                </comment>
                <comment line="475">
                    XXX
                     The RFC says: &quot;Tests if this GSSCredential refers to the same
                     entity as the supplied object.  The two credentials must be
                     acquired over the same mechanisms and must refer to the same
                     principal.  Returns &quot;true&quot; if the two GSSCredentials refer to
                     the same entity; &quot;false&quot; otherwise.&quot;
                    
                     Well, when do two credentials refer to the same principal? Do
                     they need to have one GSSName in common for the different
                     GSSName&apos;s that the credential elements return? Or do all
                     GSSName&apos;s have to be in common when the names are exported with
                     their respective mechanisms for the credential elements?                    
                </comment>
                <scope line="460"/>
                <scope line="465"/>
                <scope line="469"/>
            </method>
            <javadoc line="493">
                Returns a hashcode value for this GSSCredential.                
                <return>
                    a hashCode value                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="498">
                <comment line="505">
                    NOTE: The specification does not define the criteria to compare                    
                </comment>
                <comment line="506">
                    credentials.                    
                </comment>
                <comment line="507">
                    XXX
                     Decide on a criteria for equals first then do this.                    
                </comment>
                <scope line="500"/>
            </method>
            <javadoc line="514">
                Returns the specified mechanism&apos;s credential-element.                
                <param>
                    mechOid - the oid for mechanism to retrieve                    
                </param>
                <param>
                    throwExcep - boolean indicating if the function is
                      to throw exception or return null when element is not
                      found.                    
                </param>
                <return>
                    mechanism credential object                    
                </return>
                <exception>
                    GSSException of invalid mechanism                    
                </exception>
            </javadoc>
            <method name="getElement" type="GSSCredentialSpi" line="525">
                <params>
                    <param name="mechOid" type="Oid"/>
                    <param name="initiate" type="boolean"/>
                </params>
                <comment line="536">
                    First see if the default mechanism satisfies the
                     desired usage.                    
                </comment>
                <comment line="548">
                    Now just return any element that satisfies the
                     desired usage.                    
                </comment>
                <comment line="558">
                    for loop                    
                </comment>
                <scope line="527"/>
                <declaration name="key" type="SearchKey" line="532"/>
                <declaration name="element" type="GSSCredentialSpi" line="533"/>
                <scope line="535">
                    <scope line="544">
                        <scope line="547">
                            <declaration name="elements" type="Object[]" line="552"/>
                            <scope line="553"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="561">
                    <scope line="570"/>
                </scope>
            </method>
            <method name="getElements" type="Set<GSSCredentialSpi>" line="584">
                <declaration name="retVal" type="HashSet&lt;GSSCredentialSpi&gt;" line="585"/>
                <declaration name="values" type="Enumeration&lt;GSSCredentialSpi&gt;" line="587"/>
                <scope line="588">
                    <declaration name="o" type="GSSCredentialSpi" line="589"/>
                </scope>
            </method>
            <method name="getElementStr" type="String" line="595">
                <params>
                    <param name="mechOid" type="Oid"/>
                    <param name="usage" type="int"/>
                </params>
                <declaration name="displayString" type="String" line="596"/>
                <scope line="597"/>
                <scope line="600"/>
                <scope line="603"/>
            </method>
            <method name="toString" type="String" line="610">
                <comment line="636">
                    skip to next element                    
                </comment>
                <scope line="612"/>
                <declaration name="element" type="GSSCredentialSpi" line="617"/>
                <declaration name="buffer" type="StringBuffer" line="618"/>
                <declaration name="elements" type="Object[]" line="619"/>
                <scope line="620">
                    <scope line="621"/>
                    <scope line="635"/>
                </scope>
            </method>
            <class name="SearchKey" line="643">
                <declaration name="mechOid" type="Oid" line="644"/>
                <declaration name="usage" type="int" line="645"/>
                <method name="SearchKey" type="constructor" line="646">
                    <params>
                        <param name="mechOid" type="Oid"/>
                        <param name="usage" type="int"/>
                    </params>
                </method>
                <method name="getMech" type="Oid" line="651"/>
                <method name="getUsage" type="int" line="654"/>
                <method name="equals" type="boolean" line="657">
                    <params>
                        <param name="other" type="Object"/>
                    </params>
                    <declaration name="that" type="SearchKey" line="660"/>
                </method>
                <method name="hashCode" type="int" line="664"/>
            </class>
        </class>
    </source>