<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.rsa">
        <import package="java.io.IOException"/>
        <import package="java.math.BigInteger"/>
        <import package="java.security"/>
        <import package="java.security.interfaces"/>
        <import package="sun.security.util"/>
        <import package="sun.security.pkcs.PKCS8Key"/>
        <class name="RSAPrivateKeyImpl" line="37">
            <extends class="PKCS8Key"/>
            <comment line="55">
                modulus                
            </comment>
            <comment line="56">
                private exponent                
            </comment>
            <comment line="88">
                see JCA doc                
            </comment>
            <comment line="93">
                see JCA doc                
            </comment>
            <comment line="98">
                see JCA doc                
            </comment>
            <comment line="103">
                return a string representation of this key for debugging                
            </comment>
            <implements interface="RSAPrivateKey"/>
            <javadoc line="37">
                Key implementation for RSA private keys, non-CRT form (modulus, private
                  exponent only). For CRT private keys, see RSAPrivateCrtKeyImpl. We need
                  separate classes to ensure correct behavior in instanceof checks, etc.
                  Note: RSA keys must be at least 512 bits long                
                <see>
                    RSAPrivateCrtKeyImpl                    
                </see>
                <see>
                    RSAKeyFactory                    
                </see>
                <since>
                    1.5                    
                </since>
                <author>
                    Andreas Sterbenz                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="52"/>
            <declaration name="n" type="BigInteger" line="54"/>
            <declaration name="d" type="BigInteger" line="55"/>
            <javadoc line="57">
                Construct a key from its components. Used by the
                  RSAKeyFactory and the RSAKeyPairGenerator.                
            </javadoc>
            <method name="RSAPrivateKeyImpl" type="constructor" line="61">
                <params>
                    <param name="n" type="BigInteger"/>
                    <param name="d" type="BigInteger"/>
                </params>
                <comment line="66">
                    generate the encoding                    
                </comment>
                <comment line="70">
                    version must be 0                    
                </comment>
                <comment line="83">
                    should never occur                    
                </comment>
                <scope line="67">
                    <declaration name="out" type="DerOutputStream" line="68"/>
                    <declaration name="val" type="DerValue" line="78"/>
                </scope>
                <scope line="81"/>
            </method>
            <method name="getAlgorithm" type="String" line="88"/>
            <method name="getModulus" type="BigInteger" line="93"/>
            <method name="getPrivateExponent" type="BigInteger" line="98"/>
            <method name="toString" type="String" line="103"/>
        </class>
    </source>