<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.rsa">
        <import package="java.io.IOException"/>
        <import package="java.math.BigInteger"/>
        <import package="java.security"/>
        <import package="java.security.interfaces"/>
        <import package="sun.security.util"/>
        <import package="sun.security.pkcs.PKCS8Key"/>
        <class name="RSAPrivateKeyImpl" line="8">
            <extends class="PKCS8Key"/>
            <implements interface="RSAPrivateKey"/>
            <javadoc line="8">
                Key implementation for RSA private keys, non-CRT form (modulus, private
                  exponent only). For CRT private keys, see RSAPrivateCrtKeyImpl. We need
                  separate classes to ensure correct behavior in instanceof checks, etc.
                  Note: RSA keys must be at least 512 bits long                
                <see>
                    RSAPrivateCrtKeyImpl                    
                </see>
                <see>
                    RSAKeyFactory                    
                </see>
                <since>
                    1.5                    
                </since>
                <author>
                    Andreas Sterbenz                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="19"/>
            <declaration name="n" type="BigInteger" line="20"/>
            <declaration name="d" type="BigInteger" line="21"/>
            <javadoc line="22">
                Construct a key from its components. Used by the
                  RSAKeyFactory and the RSAKeyPairGenerator.                
            </javadoc>
            <method name="RSAPrivateKeyImpl" type="constructor" line="26">
                <params>
                    <param name="n" type="BigInteger"/>
                    <param name="d" type="BigInteger"/>
                </params>
                <scope line="31">
                    <declaration name="out" type="DerOutputStream" line="32"/>
                    <declaration name="val" type="DerValue" line="42"/>
                </scope>
                <scope line="45"/>
            </method>
            <method name="getAlgorithm" type="String" line="49"/>
            <method name="getModulus" type="BigInteger" line="52"/>
            <method name="getPrivateExponent" type="BigInteger" line="55"/>
            <method name="toString" type="String" line="58"/>
        </class>
    </source>