<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.rsa">
        <import package="java.math.BigInteger"/>
        <import package="java.security"/>
        <import package="java.security.spec.AlgorithmParameterSpec"/>
        <import package="java.security.spec.RSAKeyGenParameterSpec"/>
        <import package="sun.security.jca.JCAUtil"/>
        <class name="RSAKeyPairGenerator" line="7">
            <extends class="KeyPairGeneratorSpi"/>
            <javadoc line="7">
                RSA keypair generation. Standard algorithm, minimum key length 512 bit.
                  We generate two random primes until we find two where phi is relative
                  prime to the public exponent. Default exponent is 65537. It has only bit 0
                  and bit 4 set, which makes it particularly efficient.                
                <since>
                    1.5                    
                </since>
                <author>
                    Andreas Sterbenz                    
                </author>
            </javadoc>
            <declaration name="publicExponent" type="BigInteger" line="16"/>
            <declaration name="keySize" type="int" line="17"/>
            <declaration name="random" type="SecureRandom" line="18"/>
            <method name="RSAKeyPairGenerator" type="constructor" line="19"/>
            <method name="initialize" type="void" line="22">
                <params>
                    <param name="keySize" type="int"/>
                    <param name="random" type="SecureRandom"/>
                </params>
                <scope line="23"/>
                <scope line="26"/>
            </method>
            <method name="initialize" type="void" line="33">
                <params>
                    <param name="params" type="AlgorithmParameterSpec"/>
                    <param name="random" type="SecureRandom"/>
                </params>
                <scope line="34"/>
                <declaration name="rsaSpec" type="RSAKeyGenParameterSpec" line="37"/>
                <declaration name="tmpKeySize" type="int" line="38"/>
                <declaration name="tmpPublicExponent" type="BigInteger" line="39"/>
                <scope line="40"/>
                <scope line="43">
                    <scope line="44"/>
                    <scope line="47"/>
                </scope>
                <scope line="51"/>
                <scope line="54"/>
            </method>
            <method name="generateKeyPair" type="KeyPair" line="61">
                <declaration name="lp" type="int" line="62"/>
                <declaration name="lq" type="int" line="63"/>
                <scope line="64"/>
                <declaration name="e" type="BigInteger" line="67"/>
                <scope line="68">
                    <declaration name="p" type="BigInteger" line="69"/>
                    <declaration name="q" type="BigInteger" line="70"/>
                    <scope line="71">
                        <scope line="73">
                            <declaration name="tmp" type="BigInteger" line="74"/>
                        </scope>
                    </scope>
                    <declaration name="p1" type="BigInteger" line="81"/>
                    <declaration name="q1" type="BigInteger" line="82"/>
                    <declaration name="phi" type="BigInteger" line="83"/>
                    <scope line="84"/>
                    <declaration name="d" type="BigInteger" line="87"/>
                    <declaration name="pe" type="BigInteger" line="88"/>
                    <declaration name="qe" type="BigInteger" line="89"/>
                    <declaration name="coeff" type="BigInteger" line="90"/>
                    <scope line="91">
                        <declaration name="publicKey" type="PublicKey" line="92"/>
                        <declaration name="privateKey" type="PrivateKey" line="93"/>
                    </scope>
                    <scope line="96"/>
                </scope>
            </method>
        </class>
    </source>