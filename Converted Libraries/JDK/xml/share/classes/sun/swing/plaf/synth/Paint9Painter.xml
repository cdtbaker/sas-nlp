<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.swing.plaf.synth">
        <import package="java.awt"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="sun.swing.CachedPainter"/>
        <class name="Paint9Painter" line="31">
            <extends class="CachedPainter"/>
            <javadoc line="31">
                Paint9Painter is used for painting images for both Synth and GTK&apos;s
                  pixmap/blueprint engines.                
            </javadoc>
            <javadoc line="37">
                Enumeration for the types of painting this class can handle.                
            </javadoc>
            <javadoc line="41">
                Painting type indicating the image should be centered in
                  the space provided.  When used the &lt;code&gt;mask&lt;/code&gt; is ignored.                
            </javadoc>
            <javadoc line="47">
                Painting type indicating the image should be tiled across the
                  specified width and height.  When used the &lt;code&gt;mask&lt;/code&gt; is
                  ignored.                
            </javadoc>
            <javadoc line="54">
                Painting type indicating the image should be split into nine
                  regions with the top, left, bottom and right areas stretched.                
            </javadoc>
            <javadoc line="60">
                Painting type indicating the image should be split into nine
                  regions with the top, left, bottom and right areas tiled.                
            </javadoc>
            <declaration name="EMPTY_INSETS" type="Insets" line="67"/>
            <declaration name="PAINT_TOP_LEFT" type="int" line="69"/>
            <declaration name="PAINT_TOP" type="int" line="70"/>
            <declaration name="PAINT_TOP_RIGHT" type="int" line="71"/>
            <declaration name="PAINT_LEFT" type="int" line="72"/>
            <declaration name="PAINT_CENTER" type="int" line="73"/>
            <declaration name="PAINT_RIGHT" type="int" line="74"/>
            <declaration name="PAINT_BOTTOM_RIGHT" type="int" line="75"/>
            <declaration name="PAINT_BOTTOM" type="int" line="76"/>
            <declaration name="PAINT_BOTTOM_LEFT" type="int" line="77"/>
            <declaration name="PAINT_ALL" type="int" line="78"/>
            <javadoc line="78">
                Specifies that all regions should be painted.  If this is set any
                  other regions specified will not be painted.  For example
                  PAINT_ALL | PAINT_CENTER will paint all but the center.                
            </javadoc>
            <javadoc line="85">
                Conveniance method for testing the validity of an image.                
                <param>
                    image Image to check.                    
                </param>
                <return>
                    true if <code>image</code> is non-null and has a positive
                      size.                    
                </return>
            </javadoc>
            <method name="validImage" type="boolean" line="92">
                <params>
                    <param name="image" type="Image"/>
                </params>
            </method>
            <method name="Paint9Painter" type="constructor" line="98">
                <params>
                    <param name="cacheCount" type="int"/>
                </params>
            </method>
            <javadoc line="102">
                Paints using the algorightm specified by &lt;code&gt;paintType&lt;/code&gt;.
                  NOTE that this just invokes super.paint(...) with the same
                  argument ordering as this method.                
                <param>
                    c Component rendering to                    
                </param>
                <param>
                    g Graphics to render to                    
                </param>
                <param>
                    x X-coordinate                    
                </param>
                <param>
                    y Y-coordinate                    
                </param>
                <param>
                    w Width to render to                    
                </param>
                <param>
                    h Height to render to                    
                </param>
                <param>
                    source Image to render from, if <code>null</code> this method
                      will do nothing                    
                </param>
                <param>
                    sInsets Insets specifying the portion of the image that
                      will be stretched or tiled, if <code>null</code> empty
                      <code>Insets</code> will be used.                    
                </param>
                <param>
                    dInsets Destination insets specifying the portion of the image
                      will be stretched or tiled, if <code>null</code> empty
                      <code>Insets</code> will be used.                    
                </param>
                <param>
                    paintType Specifies what type of algorithm to use in painting                    
                </param>
                <param>
                    mask Specifies portion of image to render, if
                      <code>PAINT_ALL</code> is specified, any other regions
                      specified will not be painted, for example
                      PAINT_ALL | PAINT_CENTER paints everything but the center.                    
                </param>
            </javadoc>
            <method name="paint" type="void" line="130">
                <params>
                    <param name="c" type="Component"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="source" type="Image"/>
                    <param name="sInsets" type="Insets"/>
                    <param name="dInsets" type="Insets"/>
                    <param name="type" type="PaintType"/>
                    <param name="mask" type="int"/>
                </params>
                <scope line="131"/>
            </method>
            <method name="paintToImage" type="void" line="138">
                <params>
                    <param name="c" type="Component"/>
                    <param name="destImage" type="Image"/>
                    <param name="g" type="Graphics"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="args" type="Object[]"/>
                </params>
                <declaration name="argIndex" type="int" line="139"/>
                <scope line="140">
                    <declaration name="image" type="Image" line="141"/>
                    <declaration name="sInsets" type="Insets" line="142"/>
                    <declaration name="dInsets" type="Insets" line="143"/>
                    <declaration name="type" type="PaintType" line="144"/>
                    <declaration name="mask" type="int" line="145"/>
                </scope>
            </method>
            <method name="paint9" type="void" line="152">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="image" type="Image"/>
                    <param name="sInsets" type="Insets"/>
                    <param name="dInsets" type="Insets"/>
                    <param name="type" type="PaintType"/>
                    <param name="componentMask" type="int"/>
                </params>
                <comment line="167">
                    Center the image                    
                </comment>
                <comment line="172">
                    Tile the image                    
                </comment>
                <comment line="198">
                    Constrain the insets to the size of the image                    
                </comment>
                <comment line="206">
                    Constrain the insets to the size of the region we&apos;re painting
                     in.                    
                </comment>
                <scope line="153"/>
                <scope line="156"/>
                <scope line="159"/>
                <declaration name="iw" type="int" line="162"/>
                <declaration name="ih" type="int" line="163"/>
                <scope line="165"/>
                <scope line="170">
                    <declaration name="lastIY" type="int" line="172"/>
                    <scope line="174">
                        <declaration name="lastIX" type="int" line="175"/>
                        <scope line="177">
                            <declaration name="dx2" type="int" line="178"/>
                            <declaration name="dy2" type="int" line="179"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="186">
                    <declaration name="st" type="int" line="187"/>
                    <declaration name="sl" type="int" line="188"/>
                    <declaration name="sb" type="int" line="189"/>
                    <declaration name="sr" type="int" line="190"/>
                    <declaration name="dt" type="int" line="192"/>
                    <declaration name="dl" type="int" line="193"/>
                    <declaration name="db" type="int" line="194"/>
                    <declaration name="dr" type="int" line="195"/>
                    <scope line="198"/>
                    <scope line="201"/>
                    <scope line="207"/>
                    <scope line="210"/>
                    <declaration name="stretch" type="boolean" line="214"/>
                    <scope line="215"/>
                    <scope line="219"/>
                    <scope line="223"/>
                    <scope line="227"/>
                    <scope line="231"/>
                    <scope line="235"/>
                    <scope line="240"/>
                    <scope line="244"/>
                    <scope line="249"/>
                    <scope line="253"/>
                </scope>
            </method>
            <method name="drawImage" type="void" line="262">
                <params>
                    <param name="image" type="Image"/>
                    <param name="g" type="Graphics"/>
                    <param name="dx1" type="int"/>
                    <param name="dy1" type="int"/>
                    <param name="dx2" type="int"/>
                    <param name="dy2" type="int"/>
                    <param name="sx1" type="int"/>
                    <param name="sy1" type="int"/>
                    <param name="sx2" type="int"/>
                    <param name="sy2" type="int"/>
                </params>
                <comment line="264">
                    PENDING: is this necessary, will G2D do it for me?                    
                </comment>
                <comment line="267">
                    Bogus location, nothing to paint                    
                </comment>
                <scope line="265"/>
            </method>
            <javadoc line="272">
                Draws a portion of an image, stretched or tiled.                
                <param>
                    image Image to render.                    
                </param>
                <param>
                    g Graphics to render to                    
                </param>
                <param>
                    stretch Whether the image should be stretched or timed in the
                      provided space.                    
                </param>
                <param>
                    dx1 X origin to draw to                    
                </param>
                <param>
                    dy1 Y origin to draw to                    
                </param>
                <param>
                    dx2 End x location to draw to                    
                </param>
                <param>
                    dy2 End y location to draw to                    
                </param>
                <param>
                    sx1 X origin to draw from                    
                </param>
                <param>
                    sy1 Y origin to draw from                    
                </param>
                <param>
                    sx2 Max x location to draw from                    
                </param>
                <param>
                    sy2 Max y location to draw from                    
                </param>
                <param>
                    xDirection Used if the image is not stretched. If true it
                      indicates the image should be tiled along the x axis.                    
                </param>
            </javadoc>
            <method name="drawChunk" type="void" line="293">
                <params>
                    <param name="image" type="Image"/>
                    <param name="g" type="Graphics"/>
                    <param name="stretch" type="boolean"/>
                    <param name="dx1" type="int"/>
                    <param name="dy1" type="int"/>
                    <param name="dx2" type="int"/>
                    <param name="dy2" type="int"/>
                    <param name="sx1" type="int"/>
                    <param name="sy1" type="int"/>
                    <param name="sx2" type="int"/>
                    <param name="sy2" type="int"/>
                    <param name="xDirection" type="boolean"/>
                </params>
                <comment line="297">
                    Bogus location, nothing to paint                    
                </comment>
                <scope line="295"/>
                <scope line="299"/>
                <scope line="302">
                    <declaration name="xSize" type="int" line="303"/>
                    <declaration name="ySize" type="int" line="304"/>
                    <declaration name="deltaX" type="int" line="305"/>
                    <declaration name="deltaY" type="int" line="306"/>
                    <scope line="308"/>
                    <scope line="312"/>
                    <scope line="316">
                        <declaration name="newDX2" type="int" line="317"/>
                        <declaration name="newDY2" type="int" line="318"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="329">
                Subclassed to always create a translucent image.                
            </javadoc>
            <method name="createImage" type="Image" line="334">
                <params>
                    <param name="c" type="Component"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="config" type="GraphicsConfiguration"/>
                    <param name="args" type="Object[]"/>
                </params>
                <scope line="335"/>
            </method>
        </class>
    </source>