<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.swing">
        <import package="java.awt.Color"/>
        <import package="java.awt.Insets"/>
        <import package="javax.swing"/>
        <import package="javax.swing.border.Border"/>
        <import package="javax.swing.plaf.ComponentUI"/>
        <import package="sun.awt.AppContext"/>
        <class name="DefaultLookup" line="34">
            <comment line="129">
                The following are convenience method that all use getDefault.                
            </comment>
            <javadoc line="34">
                DefaultLookup provides a way to customize the lookup done by the
                  UIManager. The default implementation of DefaultLookup forwards
                  the call to the UIManager.
                  &lt;p&gt;
                  &lt;b&gt;WARNING:&lt;/b&gt; While this class is public, it should not be treated as
                  public API and its API may change in incompatable ways between dot dot
                  releases and even patch releases. You should not rely on this class even
                  existing.                
                <author>
                    Scott Violet                    
                </author>
            </javadoc>
            <declaration name="DEFAULT_LOOKUP_KEY" type="Object" line="47"/>
            <javadoc line="47">
                Key used to store DefaultLookup for AppContext.                
            </javadoc>
            <declaration name="currentDefaultThread" type="Thread" line="52"/>
            <javadoc line="52">
                Thread that last asked for a default.                
            </javadoc>
            <declaration name="currentDefaultLookup" type="DefaultLookup" line="56"/>
            <javadoc line="56">
                DefaultLookup for last thread.                
            </javadoc>
            <declaration name="isLookupSet" type="boolean" line="61"/>
            <javadoc line="61">
                If true, a custom DefaultLookup has been set.                
            </javadoc>
            <javadoc line="67">
                Sets the DefaultLookup instance to use for the current
                  &lt;code&gt;AppContext&lt;/code&gt;. Null implies the UIManager should be
                  used.                
            </javadoc>
            <method name="setDefaultLookup" type="void" line="72">
                <params>
                    <param name="lookup" type="DefaultLookup"/>
                </params>
                <comment line="76">
                    Null was passed in, and no one has invoked setDefaultLookup
                     with a non-null value, we don&apos;t need to do anything.                    
                </comment>
                <comment line="81">
                    null was passed in, but someone has invoked setDefaultLookup
                     with a non-null value, use an instance of DefautLookup
                     which will fallback to UIManager.                    
                </comment>
                <scope line="73">
                    <scope line="74"/>
                    <scope line="79"/>
                </scope>
            </method>
            <method name="get" type="Object" line="92">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="ui" type="ComponentUI"/>
                    <param name="key" type="String"/>
                </params>
                <comment line="99">
                    No one has set a valid DefaultLookup, use UIManager.                    
                </comment>
                <comment line="105">
                    See if we&apos;ve already cached the DefaultLookup for this thread,
                     and use it if we have.                    
                </comment>
                <comment line="108">
                    It is cached, use it.                    
                </comment>
                <comment line="112">
                    Not cached, get the DefaultLookup to use from the AppContext                    
                </comment>
                <comment line="116">
                    Fallback to DefaultLookup, which will redirect to the
                     UIManager.                    
                </comment>
                <comment line="121">
                    Cache the values to make the next lookup easier.                    
                </comment>
                <declaration name="lookupSet" type="boolean" line="93"/>
                <scope line="94"/>
                <scope line="97"/>
                <declaration name="thisThread" type="Thread" line="101"/>
                <declaration name="lookup" type="DefaultLookup" line="102"/>
                <scope line="103">
                    <scope line="106"/>
                    <scope line="110">
                        <scope line="114"/>
                    </scope>
                </scope>
            </method>
            <method name="getInt" type="int" line="132">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="ui" type="ComponentUI"/>
                    <param name="key" type="String"/>
                    <param name="defaultValue" type="int"/>
                </params>
                <declaration name="iValue" type="Object" line="133"/>
                <scope line="135"/>
            </method>
            <method name="getInt" type="int" line="141">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="ui" type="ComponentUI"/>
                    <param name="key" type="String"/>
                </params>
            </method>
            <method name="getInsets" type="Insets" line="146">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="ui" type="ComponentUI"/>
                    <param name="key" type="String"/>
                    <param name="defaultValue" type="Insets"/>
                </params>
                <declaration name="iValue" type="Object" line="147"/>
                <scope line="149"/>
            </method>
            <method name="getInsets" type="Insets" line="155">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="ui" type="ComponentUI"/>
                    <param name="key" type="String"/>
                </params>
            </method>
            <method name="getBoolean" type="boolean" line="160">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="ui" type="ComponentUI"/>
                    <param name="key" type="String"/>
                    <param name="defaultValue" type="boolean"/>
                </params>
                <declaration name="iValue" type="Object" line="161"/>
                <scope line="163"/>
            </method>
            <method name="getBoolean" type="boolean" line="169">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="ui" type="ComponentUI"/>
                    <param name="key" type="String"/>
                </params>
            </method>
            <method name="getColor" type="Color" line="174">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="ui" type="ComponentUI"/>
                    <param name="key" type="String"/>
                    <param name="defaultValue" type="Color"/>
                </params>
                <declaration name="iValue" type="Object" line="175"/>
                <scope line="177"/>
            </method>
            <method name="getColor" type="Color" line="183">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="ui" type="ComponentUI"/>
                    <param name="key" type="String"/>
                </params>
            </method>
            <method name="getIcon" type="Icon" line="188">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="ui" type="ComponentUI"/>
                    <param name="key" type="String"/>
                    <param name="defaultValue" type="Icon"/>
                </params>
                <declaration name="iValue" type="Object" line="189"/>
                <scope line="190"/>
            </method>
            <method name="getIcon" type="Icon" line="196">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="ui" type="ComponentUI"/>
                    <param name="key" type="String"/>
                </params>
            </method>
            <method name="getBorder" type="Border" line="201">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="ui" type="ComponentUI"/>
                    <param name="key" type="String"/>
                    <param name="defaultValue" type="Border"/>
                </params>
                <declaration name="iValue" type="Object" line="202"/>
                <scope line="203"/>
            </method>
            <method name="getBorder" type="Border" line="209">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="ui" type="ComponentUI"/>
                    <param name="key" type="String"/>
                </params>
            </method>
            <method name="getDefault" type="Object" line="213">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="ui" type="ComponentUI"/>
                    <param name="key" type="String"/>
                </params>
                <comment line="215">
                    basic                    
                </comment>
            </method>
        </class>
    </source>