<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.swing">
        <import package="javax.swing"/>
        <import package="java.awt"/>
        <import package="java.awt.event.ActionEvent"/>
        <import package="java.awt.event.WindowAdapter"/>
        <import package="java.awt.event.WindowEvent"/>
        <import package="java.awt.print.PageFormat"/>
        <import package="java.awt.print.Printable"/>
        <import package="java.awt.print.PrinterException"/>
        <import package="java.awt.print.PrinterJob"/>
        <import package="java.text.MessageFormat"/>
        <import package="java.util.concurrent.atomic.AtomicBoolean"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <class name="PrintingStatus" line="40">
            <comment line="65">
                the action that will abort printing                
            </comment>
            <javadoc line="40">
                The {@code PrintingStatus} provides a dialog that displays progress
                  of the printing job and provides a way to abort it
                  &lt;p/&gt;
                  Methods of these class are thread safe, although most Swing methods
                  are not. Please see
                  &lt;A HREF=&quot;http://java.sun.com/docs/books/tutorial/uiswing/misc/threads.html&quot;&gt;How
                  to Use Threads&lt;/A&gt; for more information.                
                <author>
                    Alexander Potochkin                    
                </author>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="job" type="PrinterJob" line="55"/>
            <declaration name="parent" type="Component" line="56"/>
            <declaration name="abortDialog" type="JDialog" line="57"/>
            <declaration name="abortButton" type="JButton" line="59"/>
            <declaration name="statusLabel" type="JLabel" line="60"/>
            <declaration name="statusFormat" type="MessageFormat" line="61"/>
            <declaration name="isAborted" type="AtomicBoolean" line="62"/>
            <declaration name="abortAction" type="Action" line="65"/>
            <anonymous_class line="65">
                <method name="actionPerformed" type="void" line="66">
                    <params>
                        <param name="ae" type="ActionEvent"/>
                    </params>
                    <comment line="70">
                        update the status abortDialog to indicate aborting                        
                    </comment>
                    <comment line="77">
                        cancel the PrinterJob                        
                    </comment>
                    <scope line="67"/>
                </method>
            </anonymous_class>
            <declaration name="closeListener" type="WindowAdapter" line="83"/>
            <anonymous_class line="83">
                <method name="windowClosing" type="void" line="84">
                    <params>
                        <param name="we" type="WindowEvent"/>
                    </params>
                </method>
            </anonymous_class>
            <javadoc line="89">
                Creates PrintingStatus instance                
                <param>
                    parent a <code>Component</code> object to be used
                      as parent component for PrintingStatus dialog                    
                </param>
                <param>
                    job    a <code>PrinterJob</code> object to be cancelled
                      using this <code>PrintingStatus</code> dialog                    
                </param>
                <return>
                    a <code>PrintingStatus</code> object                    
                </return>
            </javadoc>
            <method name="createPrintingStatus" type="PrintingStatus" line="99">
                <params>
                    <param name="parent" type="Component"/>
                    <param name="job" type="PrinterJob"/>
                </params>
            </method>
            <method name="PrintingStatus" type="constructor" line="103">
                <params>
                    <param name="parent" type="Component"/>
                    <param name="job" type="PrinterJob"/>
                </params>
            </method>
            <method name="init" type="void" line="108">
                <comment line="109">
                    prepare the status JOptionPane                    
                </comment>
                <comment line="116">
                    this one&apos;s a MessageFormat since it must include the page                    
                </comment>
                <comment line="117">
                    number in its text                    
                </comment>
                <comment line="148">
                    The dialog should be centered over the viewport if the table is in one                    
                </comment>
                <comment line="155">
                    clicking the X button should not hide the dialog                    
                </comment>
                <declaration name="progressTitle" type="String" line="110"/>
                <declaration name="dialogInitialContent" type="String" line="113"/>
                <declaration name="abortText" type="String" line="121"/>
                <declaration name="abortTooltip" type="String" line="123"/>
                <declaration name="abortMnemonic" type="int" line="125"/>
                <declaration name="abortMnemonicIndex" type="int" line="127"/>
                <scope line="134"/>
                <scope line="137"/>
                <declaration name="abortPane" type="JOptionPane" line="141"/>
                <scope line="149"/>
                <scope line="152"/>
            </method>
            <javadoc line="160">
                Shows PrintingStatus dialog.
                  if dialog is modal this method returns only
                  after &lt;code&gt;dispose()&lt;/code&gt; was called otherwise returns immediately                
                <param>
                    isModal <code>true</code> this dialog should be modal;
                      <code>false</code> otherwise.                    
                </param>
                <see>
                    #dispose                    
                </see>
            </javadoc>
            <method name="showModal" type="void" line="169">
                <params>
                    <param name="isModal" type="boolean"/>
                </params>
                <scope line="170"/>
                <scope line="172">
                    <scope line="173">
                        <anonymous_class line="174">
                            <method name="run" type="void" line="175"/>
                        </anonymous_class>
                    </scope>
                    <scope line="179"/>
                    <scope line="181">
                        <declaration name="cause" type="Throwable" line="182"/>
                        <scope line="183"/>
                        <scope line="185"/>
                        <scope line="187"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="194">
                The EDT part of the showModal method.
                  This method is to be called on the EDT only.                
            </javadoc>
            <method name="showModalOnEDT" type="void" line="199">
                <params>
                    <param name="isModal" type="boolean"/>
                </params>
            </method>
            <javadoc line="206">
                Disposes modal PrintingStatus dialog                
                <see>
                    #showModal(boolean)                    
                </see>
            </javadoc>
            <method name="dispose" type="void" line="211">
                <scope line="212"/>
                <scope line="214">
                    <anonymous_class line="215">
                        <method name="run" type="void" line="216"/>
                    </anonymous_class>
                </scope>
            </method>
            <javadoc line="223">
                The EDT part of the dispose method.
                  This method is to be called on the EDT only.                
            </javadoc>
            <method name="disposeOnEDT" type="void" line="228">
                <scope line="230"/>
            </method>
            <javadoc line="237">
                Returns whether the printng was aborted using this PrintingStatus                
                <return>
                    whether the printng was aborted using this PrintingStatus                    
                </return>
            </javadoc>
            <method name="isAborted" type="boolean" line="242"/>
            <javadoc line="246">
                Returns printable which is used to track the current page being
                  printed in this PrintingStatus                
                <param>
                    printable to be used to create notification printable                    
                </param>
                <return>
                    printable which is used to track the current page being
                      printed in this PrintingStatus                    
                </return>
                <throws>
                    NullPointerException if <code>printable</code> is <code>null</code>                    
                </throws>
            </javadoc>
            <method name="createNotificationPrintable" type="Printable" line="255">
                <params>
                    <param name="printable" type="Printable"/>
                </params>
            </method>
            <class name="NotificationPrintable" line="259">
                <implements interface="Printable"/>
                <declaration name="printDelegatee" type="Printable" line="260"/>
                <method name="NotificationPrintable" type="constructor" line="262">
                    <params>
                        <param name="delegatee" type="Printable"/>
                    </params>
                    <scope line="263"/>
                </method>
                <method name="print" type="int" line="271">
                    <params>
                        <param name="graphics" type="Graphics"/>
                        <param name="pageFormat" type="PageFormat"/>
                        <param name="pageIndex" type="int"/>
                    </params>
                    <declaration name="retVal" type="int" line="273"/>
                    <scope line="275">
                        <scope line="276"/>
                        <scope line="278">
                            <anonymous_class line="279">
                                <method name="run" type="void" line="280"/>
                            </anonymous_class>
                        </scope>
                    </scope>
                </method>
                <javadoc line="289">
                    The EDT part of the print method.
                      This method is to be called on the EDT only.                    
                </javadoc>
                <method name="updateStatusOnEDT" type="void" line="294">
                    <params>
                        <param name="pageIndex" type="int"/>
                    </params>
                    <declaration name="pageNumber" type="Object[]" line="296"/>
                </method>
            </class>
            <javadoc line="302">
                Duplicated from UIManager to make it visible                
            </javadoc>
            <method name="getInt" type="int" line="305">
                <params>
                    <param name="key" type="Object"/>
                    <param name="defaultValue" type="int"/>
                </params>
                <declaration name="value" type="Object" line="306"/>
                <scope line="307"/>
                <scope line="310">
                    <scope line="311"/>
                    <scope line="313"/>
                </scope>
            </method>
        </class>
    </source>