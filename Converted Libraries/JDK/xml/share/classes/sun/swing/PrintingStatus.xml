<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.swing">
        <import package="javax.swing"/>
        <import package="java.awt"/>
        <import package="java.awt.event.ActionEvent"/>
        <import package="java.awt.event.WindowAdapter"/>
        <import package="java.awt.event.WindowEvent"/>
        <import package="java.awt.print.PageFormat"/>
        <import package="java.awt.print.Printable"/>
        <import package="java.awt.print.PrinterException"/>
        <import package="java.awt.print.PrinterJob"/>
        <import package="java.text.MessageFormat"/>
        <import package="java.util.concurrent.atomic.AtomicBoolean"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <class name="PrintingStatus" line="14">
            <javadoc line="14">
                The {@code PrintingStatus} provides a dialog that displays progress
                  of the printing job and provides a way to abort it
                  &lt;p/&gt;
                  Methods of these class are thread safe, although most Swing methods
                  are not. Please see
                  &lt;A HREF=&quot;http://java.sun.com/docs/books/tutorial/uiswing/misc/threads.html&quot;&gt;How
                  to Use Threads&lt;/A&gt; for more information.                
                <author>
                    Alexander Potochkin                    
                </author>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="job" type="PrinterJob" line="26"/>
            <declaration name="parent" type="Component" line="27"/>
            <declaration name="abortDialog" type="JDialog" line="28"/>
            <declaration name="abortButton" type="JButton" line="29"/>
            <declaration name="statusLabel" type="JLabel" line="30"/>
            <declaration name="statusFormat" type="MessageFormat" line="31"/>
            <declaration name="isAborted" type="AtomicBoolean" line="32"/>
            <declaration name="abortAction" type="Action" line="33"/>
            <anonymous_class line="33">
                <method name="actionPerformed" type="void" line="34">
                    <params>
                        <param name="ae" type="ActionEvent"/>
                    </params>
                    <scope line="35"/>
                </method>
            </anonymous_class>
            <declaration name="closeListener" type="WindowAdapter" line="45"/>
            <anonymous_class line="45">
                <method name="windowClosing" type="void" line="46">
                    <params>
                        <param name="we" type="WindowEvent"/>
                    </params>
                </method>
            </anonymous_class>
            <javadoc line="51">
                Creates PrintingStatus instance                
                <param>
                    parent a &lt;code&gt;Component&lt;/code&gt; object to be used
                      as parent component for PrintingStatus dialog                    
                </param>
                <param>
                    job    a &lt;code&gt;PrinterJob&lt;/code&gt; object to be cancelled
                      using this &lt;code&gt;PrintingStatus&lt;/code&gt; dialog                    
                </param>
                <return>
                    a &lt;code&gt;PrintingStatus&lt;/code&gt; object                    
                </return>
            </javadoc>
            <method name="createPrintingStatus" type="PrintingStatus" line="59">
                <params>
                    <param name="parent" type="Component"/>
                    <param name="job" type="PrinterJob"/>
                </params>
            </method>
            <method name="PrintingStatus" type="constructor" line="62">
                <params>
                    <param name="parent" type="Component"/>
                    <param name="job" type="PrinterJob"/>
                </params>
            </method>
            <method name="init" type="void" line="66">
                <declaration name="progressTitle" type="String" line="67"/>
                <declaration name="dialogInitialContent" type="String" line="68"/>
                <declaration name="abortText" type="String" line="70"/>
                <declaration name="abortTooltip" type="String" line="71"/>
                <declaration name="abortMnemonic" type="int" line="72"/>
                <declaration name="abortMnemonicIndex" type="int" line="73"/>
                <scope line="77"/>
                <scope line="80"/>
                <declaration name="abortPane" type="JOptionPane" line="84"/>
                <scope line="86"/>
                <scope line="89"/>
            </method>
            <javadoc line="95">
                Shows PrintingStatus dialog.
                  if dialog is modal this method returns only
                  after &lt;code&gt;dispose()&lt;/code&gt; was called otherwise returns immediately                
                <param>
                    isModal &lt;code&gt;true&lt;/code&gt; this dialog should be modal;
                      &lt;code&gt;false&lt;/code&gt; otherwise.                    
                </param>
                <see>
                    #dispose                    
                </see>
            </javadoc>
            <method name="showModal" type="void" line="103">
                <params>
                    <param name="isModal" type="boolean"/>
                </params>
                <scope line="104"/>
                <scope line="107">
                    <scope line="108">
                        <anonymous_class line="109">
                            <method name="run" type="void" line="110"/>
                        </anonymous_class>
                    </scope>
                    <scope line="116"/>
                    <scope line="119">
                        <declaration name="cause" type="Throwable" line="120"/>
                        <scope line="121"/>
                        <scope line="124"/>
                        <scope line="127"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="133">
                The EDT part of the showModal method.
                  This method is to be called on the EDT only.                
            </javadoc>
            <method name="showModalOnEDT" type="void" line="137">
                <params>
                    <param name="isModal" type="boolean"/>
                </params>
            </method>
            <javadoc line="143">
                Disposes modal PrintingStatus dialog                
                <see>
                    #showModal(boolean)                    
                </see>
            </javadoc>
            <method name="dispose" type="void" line="147">
                <scope line="148"/>
                <scope line="151">
                    <anonymous_class line="152">
                        <method name="run" type="void" line="153"/>
                    </anonymous_class>
                </scope>
            </method>
            <javadoc line="160">
                The EDT part of the dispose method.
                  This method is to be called on the EDT only.                
            </javadoc>
            <method name="disposeOnEDT" type="void" line="164"/>
            <javadoc line="172">
                Returns whether the printng was aborted using this PrintingStatus                
                <return>
                    whether the printng was aborted using this PrintingStatus                    
                </return>
            </javadoc>
            <method name="isAborted" type="boolean" line="176"/>
            <javadoc line="179">
                Returns printable which is used to track the current page being
                  printed in this PrintingStatus                
                <param>
                    printable to be used to create notification printable                    
                </param>
                <return>
                    printable which is used to track the current page being
                      printed in this PrintingStatus                    
                </return>
                <throws>
                    NullPointerException if &lt;code&gt;printable&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;                    
                </throws>
            </javadoc>
            <method name="createNotificationPrintable" type="Printable" line="187">
                <params>
                    <param name="printable" type="Printable"/>
                </params>
            </method>
            <class name="NotificationPrintable" line="190">
                <implements interface="Printable"/>
                <declaration name="printDelegatee" type="Printable" line="191"/>
                <method name="NotificationPrintable" type="constructor" line="192">
                    <params>
                        <param name="delegatee" type="Printable"/>
                    </params>
                    <scope line="193"/>
                </method>
                <method name="print" type="int" line="198">
                    <params>
                        <param name="graphics" type="Graphics"/>
                        <param name="pageFormat" type="PageFormat"/>
                        <param name="pageIndex" type="int"/>
                    </params>
                    <declaration name="retVal" type="int" line="199"/>
                    <scope line="200">
                        <scope line="201"/>
                        <scope line="204">
                            <anonymous_class line="205">
                                <method name="run" type="void" line="206"/>
                            </anonymous_class>
                        </scope>
                    </scope>
                </method>
                <javadoc line="215">
                    The EDT part of the print method.
                      This method is to be called on the EDT only.                    
                </javadoc>
                <method name="updateStatusOnEDT" type="void" line="219">
                    <params>
                        <param name="pageIndex" type="int"/>
                    </params>
                </method>
            </class>
            <javadoc line="225">
                Duplicated from UIManager to make it visible                
            </javadoc>
            <method name="getInt" type="int" line="228">
                <params>
                    <param name="key" type="Object"/>
                    <param name="defaultValue" type="int"/>
                </params>
                <declaration name="value" type="Object" line="229"/>
                <scope line="230"/>
                <scope line="233">
                    <scope line="234"/>
                    <scope line="237"/>
                </scope>
            </method>
        </class>
    </source>