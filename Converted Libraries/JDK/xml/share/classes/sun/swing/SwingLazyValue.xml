<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.swing">
        <import package="java.lang.reflect.Constructor"/>
        <import package="java.lang.reflect.Method"/>
        <import package="java.lang.reflect.AccessibleObject"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="javax.swing.UIDefaults"/>
        <class name="SwingLazyValue" line="8">
            <implements interface="UIDefaults.LazyValue"/>
            <javadoc line="8">
                SwingLazyValue is a copy of ProxyLazyValue that does not snapshot the
                  AccessControlContext or use a doPrivileged to resolve the class name.
                  It&apos;s intented for use in places in Swing where we need ProxyLazyValue, this
                  should never be used in a place where the developer could supply the
                  arguments.                
            </javadoc>
            <declaration name="className" type="String" line="16"/>
            <declaration name="methodName" type="String" line="17"/>
            <declaration name="args" type="Object[]" line="18"/>
            <method name="SwingLazyValue" type="constructor" line="19">
                <params>
                    <param name="c" type="String"/>
                </params>
            </method>
            <method name="SwingLazyValue" type="constructor" line="22">
                <params>
                    <param name="c" type="String"/>
                    <param name="m" type="String"/>
                </params>
            </method>
            <method name="SwingLazyValue" type="constructor" line="25">
                <params>
                    <param name="c" type="String"/>
                    <param name="o" type="Object[]"/>
                </params>
            </method>
            <method name="SwingLazyValue" type="constructor" line="28">
                <params>
                    <param name="c" type="String"/>
                    <param name="m" type="String"/>
                    <param name="o" type="Object[]"/>
                </params>
                <scope line="31"/>
            </method>
            <method name="createValue" type="Object" line="35">
                <params>
                    <param name="table" type="UIDefaults"/>
                </params>
                <scope line="36">
                    <declaration name="cl" type="Object" line="37"/>
                    <declaration name="c" type="Class&lt;?&gt;" line="38"/>
                    <scope line="39">
                        <declaration name="types" type="Class[]" line="40"/>
                        <declaration name="m" type="Method" line="41"/>
                    </scope>
                    <scope line="45">
                        <declaration name="types" type="Class[]" line="46"/>
                        <declaration name="constructor" type="Constructor" line="47"/>
                    </scope>
                </scope>
                <scope line="52"/>
            </method>
            <method name="makeAccessible" type="void" line="56">
                <params>
                    <param name="object" type="AccessibleObject"/>
                </params>
                <anonymous_class line="57">
                    <method name="run" type="Void" line="58"/>
                </anonymous_class>
            </method>
            <method name="getClassArray" type="Class[]" line="65">
                <params>
                    <param name="args" type="Object[]"/>
                </params>
                <declaration name="types" type="Class[]" line="66"/>
                <scope line="67">
                    <scope line="69">
                        <scope line="70"/>
                        <scope line="73"/>
                        <scope line="76"/>
                        <scope line="79"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>