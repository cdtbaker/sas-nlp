<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.swing">
        <import package="java.awt.Container"/>
        <import package="java.awt.Insets"/>
        <import package="javax.swing"/>
        <import package="javax.swing.LayoutStyle.ComponentPlacement"/>
        <import package="javax.swing.border.Border"/>
        <import package="javax.swing.plaf.UIResource"/>
        <class name="DefaultLayoutStyle" line="34">
            <extends class="LayoutStyle"/>
            <javadoc line="34">
                An implementation of &lt;code&gt;LayoutStyle&lt;/code&gt; that returns 6 for related
                  components, otherwise 12.  This class also provides helper methods for
                  subclasses.                
            </javadoc>
            <declaration name="INSTANCE" type="DefaultLayoutStyle" line="41"/>
            <method name="getInstance" type="LayoutStyle" line="44"/>
            <method name="getPreferredGap" type="int" line="50">
                <params>
                    <param name="component1" type="JComponent"/>
                    <param name="component2" type="JComponent"/>
                    <param name="type" type="ComponentPlacement"/>
                    <param name="position" type="int"/>
                    <param name="parent" type="Container"/>
                </params>
                <scope line="52"/>
                <scope line="57">
                    <declaration name="indent" type="int" line="58"/>
                    <scope line="59"/>
                </scope>
            </method>
            <method name="getContainerGap" type="int" line="68">
                <params>
                    <param name="component" type="JComponent"/>
                    <param name="position" type="int"/>
                    <param name="parent" type="Container"/>
                </params>
                <scope line="69"/>
            </method>
            <javadoc line="76">
                Returns true if the classes identify a JLabel and a non-JLabel
                  along the horizontal axis.                
            </javadoc>
            <method name="isLabelAndNonlabel" type="boolean" line="81">
                <params>
                    <param name="c1" type="JComponent"/>
                    <param name="c2" type="JComponent"/>
                    <param name="position" type="int"/>
                </params>
                <scope line="83">
                    <declaration name="c1Label" type="boolean" line="84"/>
                    <declaration name="c2Label" type="boolean" line="85"/>
                </scope>
            </method>
            <javadoc line="91">
                For some look and feels check boxs and radio buttons typically
                  don&apos;t paint the border, yet they have padding for a border.  Look
                  and feel guidelines generally don&apos;t include this space.  Use
                  this method to subtract this space from the specified
                  components.                
                <param>
                    source First component                    
                </param>
                <param>
                    target Second component                    
                </param>
                <param>
                    position Position doing layout along.                    
                </param>
                <param>
                    offset Ideal offset, not including border/margin                    
                </param>
                <return>
                    offset - border/margin around the component.                    
                </return>
            </javadoc>
            <method name="getButtonGap" type="int" line="105">
                <params>
                    <param name="source" type="JComponent"/>
                    <param name="target" type="JComponent"/>
                    <param name="position" type="int"/>
                    <param name="offset" type="int"/>
                </params>
                <scope line="107"/>
                <scope line="110"/>
            </method>
            <javadoc line="116">
                For some look and feels check boxs and radio buttons typically
                  don&apos;t paint the border, yet they have padding for a border.  Look
                  and feel guidelines generally don&apos;t include this space.  Use
                  this method to subtract this space from the specified
                  components.                
                <param>
                    source Component                    
                </param>
                <param>
                    position Position doing layout along.                    
                </param>
                <param>
                    offset Ideal offset, not including border/margin                    
                </param>
                <return>
                    offset - border/margin around the component.                    
                </return>
            </javadoc>
            <method name="getButtonGap" type="int" line="128">
                <params>
                    <param name="source" type="JComponent"/>
                    <param name="position" type="int"/>
                    <param name="offset" type="int"/>
                </params>
            </method>
            <javadoc line="133">
                If &lt;code&gt;c&lt;/code&gt; is a check box or radio button, and the border is
                  not painted this returns the inset along the specified axis.                
            </javadoc>
            <method name="getButtonGap" type="int" line="137">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="position" type="int"/>
                </params>
                <declaration name="classID" type="String" line="138"/>
                <scope line="140">
                    <declaration name="border" type="Border" line="141"/>
                    <scope line="142"/>
                </scope>
            </method>
            <method name="checkPosition" type="void" line="149">
                <params>
                    <param name="position" type="int"/>
                </params>
                <scope line="153"/>
            </method>
            <method name="flipDirection" type="int" line="158">
                <params>
                    <param name="position" type="int"/>
                </params>
            </method>
            <javadoc line="173">
                Returns the amount to indent the specified component if it&apos;s
                  a JCheckBox or JRadioButton.  If the component is not a JCheckBox or
                  JRadioButton, 0 will be returned.                
            </javadoc>
            <method name="getIndent" type="int" line="178">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="position" type="int"/>
                </params>
                <declaration name="classID" type="String" line="179"/>
                <scope line="180">
                    <declaration name="button" type="AbstractButton" line="181"/>
                    <declaration name="insets" type="Insets" line="182"/>
                    <declaration name="icon" type="Icon" line="183"/>
                    <declaration name="gap" type="int" line="184"/>
                    <scope line="185"/>
                    <scope line="187"/>
                </scope>
            </method>
            <method name="getIcon" type="Icon" line="194">
                <params>
                    <param name="button" type="AbstractButton"/>
                </params>
                <declaration name="icon" type="Icon" line="195"/>
                <scope line="196"/>
                <declaration name="key" type="String" line="199"/>
                <scope line="200"/>
                <scope line="202"/>
                <scope line="205">
                    <declaration name="oIcon" type="Object" line="206"/>
                    <scope line="207"/>
                </scope>
            </method>
            <method name="isLeftAligned" type="boolean" line="214">
                <params>
                    <param name="button" type="AbstractButton"/>
                    <param name="position" type="int"/>
                </params>
                <scope line="215">
                    <declaration name="ltr" type="boolean" line="216"/>
                    <declaration name="hAlign" type="int" line="217"/>
                </scope>
            </method>
            <method name="isRightAligned" type="boolean" line="225">
                <params>
                    <param name="button" type="AbstractButton"/>
                    <param name="position" type="int"/>
                </params>
                <scope line="226">
                    <declaration name="ltr" type="boolean" line="227"/>
                    <declaration name="hAlign" type="int" line="228"/>
                </scope>
            </method>
            <method name="getInset" type="int" line="236">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="position" type="int"/>
                </params>
            </method>
            <method name="getInset" type="int" line="240">
                <params>
                    <param name="insets" type="Insets"/>
                    <param name="position" type="int"/>
                </params>
                <scope line="241"/>
            </method>
        </class>
    </source>