<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.swing">
        <import package="sun.swing.SwingUtilities2.BASICMENUITEMUI_MAX_TEXT_OFFSET"/>
        <import package="javax.swing"/>
        <import package="javax.swing.plaf.basic.BasicHTML"/>
        <import package="javax.swing.text.View"/>
        <import package="java.awt"/>
        <import package="java.awt.event.KeyEvent"/>
        <import package="java.util.Map"/>
        <import package="java.util.HashMap"/>
        <class name="MenuItemLayoutHelper" line="10">
            <javadoc line="10">
                Calculates preferred size and layouts menu items.                
            </javadoc>
            <declaration name="MAX_ARROW_WIDTH" type="StringUIClientPropertyKey" line="14"/>
            <declaration name="MAX_CHECK_WIDTH" type="StringUIClientPropertyKey" line="15"/>
            <declaration name="MAX_ICON_WIDTH" type="StringUIClientPropertyKey" line="16"/>
            <declaration name="MAX_TEXT_WIDTH" type="StringUIClientPropertyKey" line="17"/>
            <declaration name="MAX_ACC_WIDTH" type="StringUIClientPropertyKey" line="18"/>
            <declaration name="MAX_LABEL_WIDTH" type="StringUIClientPropertyKey" line="19"/>
            <declaration name="mi" type="JMenuItem" line="20"/>
            <declaration name="miParent" type="JComponent" line="21"/>
            <declaration name="font" type="Font" line="22"/>
            <declaration name="accFont" type="Font" line="23"/>
            <declaration name="fm" type="FontMetrics" line="24"/>
            <declaration name="accFm" type="FontMetrics" line="25"/>
            <declaration name="icon" type="Icon" line="26"/>
            <declaration name="checkIcon" type="Icon" line="27"/>
            <declaration name="arrowIcon" type="Icon" line="28"/>
            <declaration name="text" type="String" line="29"/>
            <declaration name="accText" type="String" line="30"/>
            <declaration name="isColumnLayout" type="boolean" line="31"/>
            <declaration name="useCheckAndArrow" type="boolean" line="32"/>
            <declaration name="isLeftToRight" type="boolean" line="33"/>
            <declaration name="isTopLevelMenu" type="boolean" line="34"/>
            <declaration name="htmlView" type="View" line="35"/>
            <declaration name="verticalAlignment" type="int" line="36"/>
            <declaration name="horizontalAlignment" type="int" line="37"/>
            <declaration name="verticalTextPosition" type="int" line="38"/>
            <declaration name="horizontalTextPosition" type="int" line="39"/>
            <declaration name="gap" type="int" line="40"/>
            <declaration name="leadingGap" type="int" line="41"/>
            <declaration name="afterCheckIconGap" type="int" line="42"/>
            <declaration name="minTextOffset" type="int" line="43"/>
            <declaration name="leftTextExtraWidth" type="int" line="44"/>
            <declaration name="viewRect" type="Rectangle" line="45"/>
            <declaration name="iconSize" type="RectSize" line="46"/>
            <declaration name="textSize" type="RectSize" line="47"/>
            <declaration name="accSize" type="RectSize" line="48"/>
            <declaration name="checkSize" type="RectSize" line="49"/>
            <declaration name="arrowSize" type="RectSize" line="50"/>
            <declaration name="labelSize" type="RectSize" line="51"/>
            <javadoc line="52">
                The empty protected constructor is necessary for derived classes.                
            </javadoc>
            <method name="MenuItemLayoutHelper" type="constructor" line="55"/>
            <method name="MenuItemLayoutHelper" type="constructor" line="57">
                <params>
                    <param name="mi" type="JMenuItem"/>
                    <param name="checkIcon" type="Icon"/>
                    <param name="arrowIcon" type="Icon"/>
                    <param name="viewRect" type="Rectangle"/>
                    <param name="gap" type="int"/>
                    <param name="accDelimiter" type="String"/>
                    <param name="isLeftToRight" type="boolean"/>
                    <param name="font" type="Font"/>
                    <param name="accFont" type="Font"/>
                    <param name="useCheckAndArrow" type="boolean"/>
                    <param name="propertyPrefix" type="String"/>
                </params>
            </method>
            <method name="reset" type="void" line="60">
                <params>
                    <param name="mi" type="JMenuItem"/>
                    <param name="checkIcon" type="Icon"/>
                    <param name="arrowIcon" type="Icon"/>
                    <param name="viewRect" type="Rectangle"/>
                    <param name="gap" type="int"/>
                    <param name="accDelimiter" type="String"/>
                    <param name="isLeftToRight" type="boolean"/>
                    <param name="font" type="Font"/>
                    <param name="accFont" type="Font"/>
                    <param name="useCheckAndArrow" type="boolean"/>
                    <param name="propertyPrefix" type="String"/>
                </params>
            </method>
            <method name="calcExtraWidths" type="void" line="98"/>
            <method name="getLeftExtraWidth" type="int" line="101">
                <params>
                    <param name="str" type="String"/>
                </params>
                <declaration name="lsb" type="int" line="102"/>
                <scope line="103"/>
                <scope line="106"/>
            </method>
            <method name="setOriginalWidths" type="void" line="110"/>
            <method name="getAccText" type="String" line="117">
                <params>
                    <param name="acceleratorDelimiter" type="String"/>
                </params>
                <declaration name="accText" type="String" line="118"/>
                <declaration name="accelerator" type="KeyStroke" line="119"/>
                <scope line="120">
                    <declaration name="modifiers" type="int" line="121"/>
                    <scope line="122"/>
                    <declaration name="keyCode" type="int" line="126"/>
                    <scope line="127"/>
                    <scope line="130"/>
                </scope>
            </method>
            <method name="getIcon" type="Icon" line="136">
                <params>
                    <param name="propertyPrefix" type="String"/>
                </params>
                <declaration name="icon" type="Icon" line="137"/>
                <declaration name="iconFactory" type="MenuItemCheckIconFactory" line="138"/>
                <scope line="139"/>
            </method>
            <method name="getMinTextOffset" type="int" line="144">
                <params>
                    <param name="propertyPrefix" type="String"/>
                </params>
                <declaration name="minimumTextOffset" type="int" line="145"/>
                <declaration name="minimumTextOffsetObject" type="Object" line="146"/>
                <scope line="147"/>
            </method>
            <method name="getAfterCheckIconGap" type="int" line="152">
                <params>
                    <param name="propertyPrefix" type="String"/>
                </params>
                <declaration name="afterCheckIconGap" type="int" line="153"/>
                <declaration name="afterCheckIconGapObject" type="Object" line="154"/>
                <scope line="155"/>
            </method>
            <method name="getLeadingGap" type="int" line="160">
                <params>
                    <param name="propertyPrefix" type="String"/>
                </params>
                <scope line="161"/>
                <scope line="164"/>
            </method>
            <method name="getCheckOffset" type="int" line="168">
                <params>
                    <param name="propertyPrefix" type="String"/>
                </params>
                <declaration name="checkIconOffset" type="int" line="169"/>
                <declaration name="checkIconOffsetObject" type="Object" line="170"/>
                <scope line="171"/>
            </method>
            <method name="calcWidthsAndHeights" type="void" line="176">
                <scope line="177"/>
                <scope line="181"/>
                <scope line="185"/>
                <scope line="188">
                    <scope line="189"/>
                    <scope line="193"/>
                </scope>
                <scope line="198">
                    <scope line="199"/>
                    <scope line="203"/>
                </scope>
                <scope line="208"/>
                <scope line="212">
                    <declaration name="textRect" type="Rectangle" line="213"/>
                    <declaration name="iconRect" type="Rectangle" line="214"/>
                    <declaration name="labelRect" type="Rectangle" line="217"/>
                </scope>
            </method>
            <method name="calcMaxWidths" type="void" line="222">
                <scope line="226">
                    <declaration name="curGap" type="int" line="229"/>
                    <scope line="230"/>
                </scope>
                <scope line="235">
                    <declaration name="candidateTextWidth" type="int" line="238"/>
                    <scope line="239"/>
                </scope>
            </method>
            <method name="calcMaxWidth" type="void" line="245">
                <params>
                    <param name="rs" type="RectSize"/>
                    <param name="key" type="Object"/>
                </params>
            </method>
            <javadoc line="248">
                Calculates and returns maximal value through specified parent component
                  client property.                
                <param>
                    propertyName name of the property, which stores the maximal value.                    
                </param>
                <param>
                    value a value which pretends to be maximal                    
                </param>
                <return>
                    maximal value among the parent property and the value.                    
                </return>
            </javadoc>
            <method name="calcMaxValue" type="int" line="255">
                <params>
                    <param name="propertyName" type="Object"/>
                    <param name="value" type="int"/>
                </params>
                <declaration name="maxValue" type="int" line="256"/>
                <scope line="257">
                    <scope line="258"/>
                </scope>
                <scope line="263"/>
            </method>
            <javadoc line="267">
                Returns parent client property as int.                
                <param>
                    propertyName name of the parent property.                    
                </param>
                <return>
                    value of the property as int.                    
                </return>
            </javadoc>
            <method name="getParentIntProperty" type="int" line="272">
                <params>
                    <param name="propertyName" type="Object"/>
                </params>
                <declaration name="value" type="Object" line="273"/>
                <scope line="274"/>
                <scope line="277"/>
            </method>
            <method name="isColumnLayout" type="boolean" line="282">
                <params>
                    <param name="isLeftToRight" type="boolean"/>
                    <param name="mi" type="JMenuItem"/>
                </params>
            </method>
            <javadoc line="286">
                Answers should we do column layout for a menu item or not.
                  We do it when a user doesn&apos;t set any alignments
                  and text positions manually, except the vertical alignment.                
            </javadoc>
            <method name="isColumnLayout" type="boolean" line="291">
                <params>
                    <param name="isLeftToRight" type="boolean"/>
                    <param name="horizontalAlignment" type="int"/>
                    <param name="horizontalTextPosition" type="int"/>
                    <param name="verticalTextPosition" type="int"/>
                </params>
                <scope line="292"/>
                <scope line="295">
                    <scope line="296"/>
                    <scope line="299"/>
                </scope>
                <scope line="303">
                    <scope line="304"/>
                    <scope line="307"/>
                </scope>
            </method>
            <javadoc line="313">
                Calculates maximal text offset.
                  It is required for some L&amp;Fs (ex: Vista L&amp;F).
                  The offset is meaningful only for L2R column layout.                
                <param>
                    viewRect the rectangle, the maximal text offset
                      will be calculated for.                    
                </param>
            </javadoc>
            <method name="calcMaxTextOffset" type="void" line="320">
                <params>
                    <param name="viewRect" type="Rectangle"/>
                </params>
                <scope line="321"/>
                <declaration name="offset" type="int" line="324"/>
                <scope line="325"/>
                <scope line="328"/>
                <scope line="331"/>
            </method>
            <javadoc line="336">
                Layout icon, text, check icon, accelerator text and arrow icon
                  in the viewRect and return their positions.
                  If horizontalAlignment, verticalTextPosition and horizontalTextPosition
                  are default (user doesn&apos;t set any manually) the layouting algorithm is:
                  Elements are layouted in the five columns:
                  check icon + icon + text + accelerator text + arrow icon
                  In the other case elements are layouted in the four columns:
                  check icon + label + accelerator text + arrow icon
                  Label is union of icon and text.
                  The order of columns can be reversed.
                  It depends on the menu item orientation.                
            </javadoc>
            <method name="layoutMenuItem" type="LayoutResult" line="349">
                <declaration name="lr" type="LayoutResult" line="350"/>
                <scope line="352">
                    <scope line="353"/>
                    <scope line="356"/>
                </scope>
                <scope line="360">
                    <scope line="361"/>
                    <scope line="364"/>
                </scope>
            </method>
            <method name="createLayoutResult" type="LayoutResult" line="371"/>
            <method name="getLTRColumnAlignment" type="ColumnAlignment" line="374"/>
            <method name="getRTLColumnAlignment" type="ColumnAlignment" line="377"/>
            <method name="prepareForLayout" type="void" line="380">
                <params>
                    <param name="lr" type="LayoutResult"/>
                </params>
            </method>
            <javadoc line="385">
                Aligns the accelertor text and the check and arrow icons vertically
                  with the center of the label rect.                
            </javadoc>
            <method name="alignAccCheckAndArrowVertically" type="void" line="389">
                <params>
                    <param name="lr" type="LayoutResult"/>
                </params>
                <scope line="392"/>
            </method>
            <javadoc line="399">
                Fixes vertical alignment of all menu item elements if rect.y
                  or (rect.y + rect.height) is out of viewRect bounds                
            </javadoc>
            <method name="fixVerticalAlignment" type="void" line="403">
                <params>
                    <param name="lr" type="LayoutResult"/>
                    <param name="r" type="Rectangle"/>
                </params>
                <declaration name="delta" type="int" line="404"/>
                <scope line="405"/>
                <scope line="408"/>
                <scope line="411"/>
            </method>
            <method name="doLTRColumnLayout" type="void" line="420">
                <params>
                    <param name="lr" type="LayoutResult"/>
                    <param name="alignment" type="ColumnAlignment"/>
                </params>
                <scope line="424"/>
                <declaration name="textOffset" type="int" line="429"/>
                <scope line="430"/>
            </method>
            <method name="doLTRComplexLayout" type="void" line="437">
                <params>
                    <param name="lr" type="LayoutResult"/>
                    <param name="alignment" type="ColumnAlignment"/>
                </params>
                <scope line="440"/>
                <declaration name="labelOffset" type="int" line="444"/>
                <scope line="445"/>
            </method>
            <method name="doRTLColumnLayout" type="void" line="452">
                <params>
                    <param name="lr" type="LayoutResult"/>
                    <param name="alignment" type="ColumnAlignment"/>
                </params>
                <scope line="456"/>
                <declaration name="textOffset" type="int" line="461"/>
                <scope line="462"/>
            </method>
            <method name="doRTLComplexLayout" type="void" line="469">
                <params>
                    <param name="lr" type="LayoutResult"/>
                    <param name="alignment" type="ColumnAlignment"/>
                </params>
                <scope line="472"/>
                <declaration name="labelOffset" type="int" line="476"/>
                <scope line="477"/>
            </method>
            <method name="alignRects" type="void" line="484">
                <params>
                    <param name="lr" type="LayoutResult"/>
                    <param name="alignment" type="ColumnAlignment"/>
                </params>
            </method>
            <method name="alignRect" type="void" line="491">
                <params>
                    <param name="rect" type="Rectangle"/>
                    <param name="alignment" type="int"/>
                    <param name="origWidth" type="int"/>
                </params>
                <scope line="492"/>
            </method>
            <method name="layoutIconAndTextInLabelRect" type="void" line="497">
                <params>
                    <param name="lr" type="LayoutResult"/>
                </params>
            </method>
            <method name="calcXPositionsLTR" type="void" line="502">
                <params>
                    <param name="startXPos" type="int"/>
                    <param name="leadingGap" type="int"/>
                    <param name="gap" type="int"/>
                    <param name="rects" type="Rectangle"/>
                </params>
                <declaration name="curXPos" type="int" line="503"/>
                <scope line="504">
                    <scope line="506"/>
                </scope>
            </method>
            <method name="calcXPositionsRTL" type="void" line="511">
                <params>
                    <param name="startXPos" type="int"/>
                    <param name="leadingGap" type="int"/>
                    <param name="gap" type="int"/>
                    <param name="rects" type="Rectangle"/>
                </params>
                <declaration name="curXPos" type="int" line="512"/>
                <scope line="513">
                    <scope line="515"/>
                </scope>
            </method>
            <javadoc line="520">
                Sets Y coordinates of text and icon
                  taking into account the vertical alignment                
            </javadoc>
            <method name="calcTextAndIconYPositions" type="void" line="524">
                <params>
                    <param name="lr" type="LayoutResult"/>
                </params>
                <scope line="525"/>
                <scope line="529"/>
                <scope line="533"/>
            </method>
            <javadoc line="538">
                Sets labelRect Y coordinate
                  taking into account the vertical alignment                
            </javadoc>
            <method name="calcLabelYPosition" type="void" line="542">
                <params>
                    <param name="lr" type="LayoutResult"/>
                </params>
                <scope line="543"/>
                <scope line="546"/>
                <scope line="549"/>
            </method>
            <javadoc line="553">
                Returns parent of this component if it is not a top-level menu
                  Otherwise returns null.                
                <param>
                    menuItem the menu item whose parent will be returned.                    
                </param>
                <return>
                    parent of this component if it is not a top-level menu
                      Otherwise returns null.                    
                </return>
            </javadoc>
            <method name="getMenuItemParent" type="JComponent" line="560">
                <params>
                    <param name="menuItem" type="JMenuItem"/>
                </params>
                <declaration name="parent" type="Container" line="561"/>
                <scope line="562"/>
                <scope line="565"/>
            </method>
            <method name="clearUsedParentClientProperties" type="void" line="569">
                <params>
                    <param name="menuItem" type="JMenuItem"/>
                </params>
            </method>
            <method name="clearUsedClientProperties" type="void" line="572">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <scope line="573"/>
            </method>
            <javadoc line="583">
                Finds and returns maximal integer value in the given array.                
                <param>
                    values array where the search will be performed.                    
                </param>
                <return>
                    maximal vaule.                    
                </return>
            </javadoc>
            <method name="max" type="int" line="588">
                <params>
                    <param name="values" type="int"/>
                </params>
                <declaration name="maxValue" type="int" line="589"/>
                <scope line="590">
                    <scope line="591"/>
                </scope>
            </method>
            <method name="createMaxRect" type="Rectangle" line="597"/>
            <method name="addMaxWidth" type="void" line="600">
                <params>
                    <param name="size" type="RectSize"/>
                    <param name="gap" type="int"/>
                    <param name="result" type="Dimension"/>
                </params>
                <scope line="601"/>
            </method>
            <method name="addWidth" type="void" line="605">
                <params>
                    <param name="width" type="int"/>
                    <param name="gap" type="int"/>
                    <param name="result" type="Dimension"/>
                </params>
                <scope line="606"/>
            </method>
            <method name="getMenuItem" type="JMenuItem" line="610"/>
            <method name="getMenuItemParent" type="JComponent" line="613"/>
            <method name="getFont" type="Font" line="616"/>
            <method name="getAccFont" type="Font" line="619"/>
            <method name="getFontMetrics" type="FontMetrics" line="622"/>
            <method name="getAccFontMetrics" type="FontMetrics" line="625"/>
            <method name="getIcon" type="Icon" line="628"/>
            <method name="getCheckIcon" type="Icon" line="631"/>
            <method name="getArrowIcon" type="Icon" line="634"/>
            <method name="getText" type="String" line="637"/>
            <method name="getAccText" type="String" line="640"/>
            <method name="isColumnLayout" type="boolean" line="643"/>
            <method name="useCheckAndArrow" type="boolean" line="646"/>
            <method name="isLeftToRight" type="boolean" line="649"/>
            <method name="isTopLevelMenu" type="boolean" line="652"/>
            <method name="getHtmlView" type="View" line="655"/>
            <method name="getVerticalAlignment" type="int" line="658"/>
            <method name="getHorizontalAlignment" type="int" line="661"/>
            <method name="getVerticalTextPosition" type="int" line="664"/>
            <method name="getHorizontalTextPosition" type="int" line="667"/>
            <method name="getGap" type="int" line="670"/>
            <method name="getLeadingGap" type="int" line="673"/>
            <method name="getAfterCheckIconGap" type="int" line="676"/>
            <method name="getMinTextOffset" type="int" line="679"/>
            <method name="getViewRect" type="Rectangle" line="682"/>
            <method name="getIconSize" type="RectSize" line="685"/>
            <method name="getTextSize" type="RectSize" line="688"/>
            <method name="getAccSize" type="RectSize" line="691"/>
            <method name="getCheckSize" type="RectSize" line="694"/>
            <method name="getArrowSize" type="RectSize" line="697"/>
            <method name="getLabelSize" type="RectSize" line="700"/>
            <method name="setMenuItem" type="void" line="703">
                <params>
                    <param name="mi" type="JMenuItem"/>
                </params>
            </method>
            <method name="setMenuItemParent" type="void" line="706">
                <params>
                    <param name="miParent" type="JComponent"/>
                </params>
            </method>
            <method name="setFont" type="void" line="709">
                <params>
                    <param name="font" type="Font"/>
                </params>
            </method>
            <method name="setAccFont" type="void" line="712">
                <params>
                    <param name="accFont" type="Font"/>
                </params>
            </method>
            <method name="setFontMetrics" type="void" line="715">
                <params>
                    <param name="fm" type="FontMetrics"/>
                </params>
            </method>
            <method name="setAccFontMetrics" type="void" line="718">
                <params>
                    <param name="accFm" type="FontMetrics"/>
                </params>
            </method>
            <method name="setIcon" type="void" line="721">
                <params>
                    <param name="icon" type="Icon"/>
                </params>
            </method>
            <method name="setCheckIcon" type="void" line="724">
                <params>
                    <param name="checkIcon" type="Icon"/>
                </params>
            </method>
            <method name="setArrowIcon" type="void" line="727">
                <params>
                    <param name="arrowIcon" type="Icon"/>
                </params>
            </method>
            <method name="setText" type="void" line="730">
                <params>
                    <param name="text" type="String"/>
                </params>
            </method>
            <method name="setAccText" type="void" line="733">
                <params>
                    <param name="accText" type="String"/>
                </params>
            </method>
            <method name="setColumnLayout" type="void" line="736">
                <params>
                    <param name="columnLayout" type="boolean"/>
                </params>
            </method>
            <method name="setUseCheckAndArrow" type="void" line="739">
                <params>
                    <param name="useCheckAndArrow" type="boolean"/>
                </params>
            </method>
            <method name="setLeftToRight" type="void" line="742">
                <params>
                    <param name="leftToRight" type="boolean"/>
                </params>
            </method>
            <method name="setTopLevelMenu" type="void" line="745">
                <params>
                    <param name="topLevelMenu" type="boolean"/>
                </params>
            </method>
            <method name="setHtmlView" type="void" line="748">
                <params>
                    <param name="htmlView" type="View"/>
                </params>
            </method>
            <method name="setVerticalAlignment" type="void" line="751">
                <params>
                    <param name="verticalAlignment" type="int"/>
                </params>
            </method>
            <method name="setHorizontalAlignment" type="void" line="754">
                <params>
                    <param name="horizontalAlignment" type="int"/>
                </params>
            </method>
            <method name="setVerticalTextPosition" type="void" line="757">
                <params>
                    <param name="verticalTextPosition" type="int"/>
                </params>
            </method>
            <method name="setHorizontalTextPosition" type="void" line="760">
                <params>
                    <param name="horizontalTextPosition" type="int"/>
                </params>
            </method>
            <method name="setGap" type="void" line="763">
                <params>
                    <param name="gap" type="int"/>
                </params>
            </method>
            <method name="setLeadingGap" type="void" line="766">
                <params>
                    <param name="leadingGap" type="int"/>
                </params>
            </method>
            <method name="setAfterCheckIconGap" type="void" line="769">
                <params>
                    <param name="afterCheckIconGap" type="int"/>
                </params>
            </method>
            <method name="setMinTextOffset" type="void" line="772">
                <params>
                    <param name="minTextOffset" type="int"/>
                </params>
            </method>
            <method name="setViewRect" type="void" line="775">
                <params>
                    <param name="viewRect" type="Rectangle"/>
                </params>
            </method>
            <method name="setIconSize" type="void" line="778">
                <params>
                    <param name="iconSize" type="RectSize"/>
                </params>
            </method>
            <method name="setTextSize" type="void" line="781">
                <params>
                    <param name="textSize" type="RectSize"/>
                </params>
            </method>
            <method name="setAccSize" type="void" line="784">
                <params>
                    <param name="accSize" type="RectSize"/>
                </params>
            </method>
            <method name="setCheckSize" type="void" line="787">
                <params>
                    <param name="checkSize" type="RectSize"/>
                </params>
            </method>
            <method name="setArrowSize" type="void" line="790">
                <params>
                    <param name="arrowSize" type="RectSize"/>
                </params>
            </method>
            <method name="setLabelSize" type="void" line="793">
                <params>
                    <param name="labelSize" type="RectSize"/>
                </params>
            </method>
            <method name="getLeftTextExtraWidth" type="int" line="796"/>
            <javadoc line="799">
                Returns false if the component is a JMenu and it is a top
                  level menu (on the menubar).                
            </javadoc>
            <method name="useCheckAndArrow" type="boolean" line="803">
                <params>
                    <param name="menuItem" type="JMenuItem"/>
                </params>
                <declaration name="b" type="boolean" line="804"/>
                <scope line="805"/>
            </method>
            <class name="LayoutResult" line="810">
                <declaration name="iconRect" type="Rectangle" line="811"/>
                <declaration name="textRect" type="Rectangle" line="812"/>
                <declaration name="accRect" type="Rectangle" line="813"/>
                <declaration name="checkRect" type="Rectangle" line="814"/>
                <declaration name="arrowRect" type="Rectangle" line="815"/>
                <declaration name="labelRect" type="Rectangle" line="816"/>
                <method name="LayoutResult" type="constructor" line="817"/>
                <method name="LayoutResult" type="constructor" line="825">
                    <params>
                        <param name="iconRect" type="Rectangle"/>
                        <param name="textRect" type="Rectangle"/>
                        <param name="accRect" type="Rectangle"/>
                        <param name="checkRect" type="Rectangle"/>
                        <param name="arrowRect" type="Rectangle"/>
                        <param name="labelRect" type="Rectangle"/>
                    </params>
                </method>
                <method name="getIconRect" type="Rectangle" line="833"/>
                <method name="setIconRect" type="void" line="836">
                    <params>
                        <param name="iconRect" type="Rectangle"/>
                    </params>
                </method>
                <method name="getTextRect" type="Rectangle" line="839"/>
                <method name="setTextRect" type="void" line="842">
                    <params>
                        <param name="textRect" type="Rectangle"/>
                    </params>
                </method>
                <method name="getAccRect" type="Rectangle" line="845"/>
                <method name="setAccRect" type="void" line="848">
                    <params>
                        <param name="accRect" type="Rectangle"/>
                    </params>
                </method>
                <method name="getCheckRect" type="Rectangle" line="851"/>
                <method name="setCheckRect" type="void" line="854">
                    <params>
                        <param name="checkRect" type="Rectangle"/>
                    </params>
                </method>
                <method name="getArrowRect" type="Rectangle" line="857"/>
                <method name="setArrowRect" type="void" line="860">
                    <params>
                        <param name="arrowRect" type="Rectangle"/>
                    </params>
                </method>
                <method name="getLabelRect" type="Rectangle" line="863"/>
                <method name="setLabelRect" type="void" line="866">
                    <params>
                        <param name="labelRect" type="Rectangle"/>
                    </params>
                </method>
                <method name="getAllRects" type="Map&lt;String,Rectangle&gt;" line="869">
                    <declaration name="result" type="Map&amp;lt;String,Rectangle&amp;gt;" line="870"/>
                </method>
            </class>
            <class name="ColumnAlignment" line="880">
                <declaration name="checkAlignment" type="int" line="881"/>
                <declaration name="iconAlignment" type="int" line="882"/>
                <declaration name="textAlignment" type="int" line="883"/>
                <declaration name="accAlignment" type="int" line="884"/>
                <declaration name="arrowAlignment" type="int" line="885"/>
                <declaration name="LEFT_ALIGNMENT" type="ColumnAlignment" line="886"/>
                <declaration name="RIGHT_ALIGNMENT" type="ColumnAlignment" line="887"/>
                <method name="ColumnAlignment" type="constructor" line="888">
                    <params>
                        <param name="checkAlignment" type="int"/>
                        <param name="iconAlignment" type="int"/>
                        <param name="textAlignment" type="int"/>
                        <param name="accAlignment" type="int"/>
                        <param name="arrowAlignment" type="int"/>
                    </params>
                </method>
                <method name="getCheckAlignment" type="int" line="895"/>
                <method name="getIconAlignment" type="int" line="898"/>
                <method name="getTextAlignment" type="int" line="901"/>
                <method name="getAccAlignment" type="int" line="904"/>
                <method name="getArrowAlignment" type="int" line="907"/>
            </class>
            <class name="RectSize" line="911">
                <declaration name="width" type="int" line="912"/>
                <declaration name="height" type="int" line="913"/>
                <declaration name="origWidth" type="int" line="914"/>
                <declaration name="maxWidth" type="int" line="915"/>
                <method name="RectSize" type="constructor" line="916"/>
                <method name="RectSize" type="constructor" line="918">
                    <params>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                        <param name="origWidth" type="int"/>
                        <param name="maxWidth" type="int"/>
                    </params>
                </method>
                <method name="getWidth" type="int" line="924"/>
                <method name="getHeight" type="int" line="927"/>
                <method name="getOrigWidth" type="int" line="930"/>
                <method name="getMaxWidth" type="int" line="933"/>
                <method name="setWidth" type="void" line="936">
                    <params>
                        <param name="width" type="int"/>
                    </params>
                </method>
                <method name="setHeight" type="void" line="939">
                    <params>
                        <param name="height" type="int"/>
                    </params>
                </method>
                <method name="setOrigWidth" type="void" line="942">
                    <params>
                        <param name="origWidth" type="int"/>
                    </params>
                </method>
                <method name="setMaxWidth" type="void" line="945">
                    <params>
                        <param name="maxWidth" type="int"/>
                    </params>
                </method>
                <method name="toString" type="String" line="948"/>
            </class>
        </class>
    </source>