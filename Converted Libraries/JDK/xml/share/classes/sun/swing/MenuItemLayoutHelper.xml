<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.swing">
        <import package="sun.swing.SwingUtilities2.BASICMENUITEMUI_MAX_TEXT_OFFSET"/>
        <import package="javax.swing"/>
        <import package="javax.swing.plaf.basic.BasicHTML"/>
        <import package="javax.swing.text.View"/>
        <import package="java.awt"/>
        <import package="java.awt.event.KeyEvent"/>
        <import package="java.util.Map"/>
        <import package="java.util.HashMap"/>
        <class name="MenuItemLayoutHelper" line="38">
            <comment line="44">
                                
            </comment>
            <javadoc line="38">
                Calculates preferred size and layouts menu items.                
            </javadoc>
            <declaration name="MAX_ARROW_WIDTH" type="StringUIClientPropertyKey" line="44"/>
            <declaration name="MAX_CHECK_WIDTH" type="StringUIClientPropertyKey" line="46"/>
            <declaration name="MAX_ICON_WIDTH" type="StringUIClientPropertyKey" line="48"/>
            <declaration name="MAX_TEXT_WIDTH" type="StringUIClientPropertyKey" line="50"/>
            <declaration name="MAX_ACC_WIDTH" type="StringUIClientPropertyKey" line="52"/>
            <declaration name="MAX_LABEL_WIDTH" type="StringUIClientPropertyKey" line="54"/>
            <declaration name="mi" type="JMenuItem" line="57"/>
            <declaration name="miParent" type="JComponent" line="58"/>
            <declaration name="font" type="Font" line="60"/>
            <declaration name="accFont" type="Font" line="61"/>
            <declaration name="fm" type="FontMetrics" line="62"/>
            <declaration name="accFm" type="FontMetrics" line="63"/>
            <declaration name="icon" type="Icon" line="65"/>
            <declaration name="checkIcon" type="Icon" line="66"/>
            <declaration name="arrowIcon" type="Icon" line="67"/>
            <declaration name="text" type="String" line="68"/>
            <declaration name="accText" type="String" line="69"/>
            <declaration name="isColumnLayout" type="boolean" line="71"/>
            <declaration name="useCheckAndArrow" type="boolean" line="72"/>
            <declaration name="isLeftToRight" type="boolean" line="73"/>
            <declaration name="isTopLevelMenu" type="boolean" line="74"/>
            <declaration name="htmlView" type="View" line="75"/>
            <declaration name="verticalAlignment" type="int" line="77"/>
            <declaration name="horizontalAlignment" type="int" line="78"/>
            <declaration name="verticalTextPosition" type="int" line="79"/>
            <declaration name="horizontalTextPosition" type="int" line="80"/>
            <declaration name="gap" type="int" line="81"/>
            <declaration name="leadingGap" type="int" line="82"/>
            <declaration name="afterCheckIconGap" type="int" line="83"/>
            <declaration name="minTextOffset" type="int" line="84"/>
            <declaration name="leftTextExtraWidth" type="int" line="86"/>
            <declaration name="viewRect" type="Rectangle" line="88"/>
            <declaration name="iconSize" type="RectSize" line="90"/>
            <declaration name="textSize" type="RectSize" line="91"/>
            <declaration name="accSize" type="RectSize" line="92"/>
            <declaration name="checkSize" type="RectSize" line="93"/>
            <declaration name="arrowSize" type="RectSize" line="94"/>
            <declaration name="labelSize" type="RectSize" line="95"/>
            <javadoc line="97">
                The empty protected constructor is necessary for derived classes.                
            </javadoc>
            <method name="MenuItemLayoutHelper" type="constructor" line="100"/>
            <method name="MenuItemLayoutHelper" type="constructor" line="106">
                <params>
                    <param name="mi" type="JMenuItem"/>
                    <param name="checkIcon" type="Icon"/>
                    <param name="arrowIcon" type="Icon"/>
                    <param name="viewRect" type="Rectangle"/>
                    <param name="gap" type="int"/>
                    <param name="accDelimiter" type="String"/>
                    <param name="isLeftToRight" type="boolean"/>
                    <param name="font" type="Font"/>
                    <param name="accFont" type="Font"/>
                    <param name="useCheckAndArrow" type="boolean"/>
                    <param name="propertyPrefix" type="String"/>
                </params>
            </method>
            <method name="reset" type="void" line="114">
                <params>
                    <param name="mi" type="JMenuItem"/>
                    <param name="checkIcon" type="Icon"/>
                    <param name="arrowIcon" type="Icon"/>
                    <param name="viewRect" type="Rectangle"/>
                    <param name="gap" type="int"/>
                    <param name="accDelimiter" type="String"/>
                    <param name="isLeftToRight" type="boolean"/>
                    <param name="font" type="Font"/>
                    <param name="accFont" type="Font"/>
                    <param name="useCheckAndArrow" type="boolean"/>
                    <param name="propertyPrefix" type="String"/>
                </params>
            </method>
            <method name="calcExtraWidths" type="void" line="157"/>
            <method name="getLeftExtraWidth" type="int" line="161">
                <params>
                    <param name="str" type="String"/>
                </params>
                <declaration name="lsb" type="int" line="162"/>
                <scope line="163"/>
                <scope line="165"/>
            </method>
            <method name="setOriginalWidths" type="void" line="170"/>
            <method name="getAccText" type="String" line="178">
                <params>
                    <param name="acceleratorDelimiter" type="String"/>
                </params>
                <declaration name="accText" type="String" line="179"/>
                <declaration name="accelerator" type="KeyStroke" line="180"/>
                <scope line="181">
                    <declaration name="modifiers" type="int" line="182"/>
                    <scope line="183"/>
                    <declaration name="keyCode" type="int" line="187"/>
                    <scope line="188"/>
                    <scope line="190"/>
                </scope>
            </method>
            <method name="getIcon" type="Icon" line="197">
                <params>
                    <param name="propertyPrefix" type="String"/>
                </params>
                <comment line="198">
                    In case of column layout, .checkIconFactory is defined for this UI,                    
                </comment>
                <comment line="199">
                    the icon is compatible with it and useCheckAndArrow() is true,                    
                </comment>
                <comment line="200">
                    then the icon is handled by the checkIcon.                    
                </comment>
                <declaration name="icon" type="Icon" line="201"/>
                <declaration name="iconFactory" type="MenuItemCheckIconFactory" line="202"/>
                <scope line="206"/>
            </method>
            <method name="getMinTextOffset" type="int" line="212">
                <params>
                    <param name="propertyPrefix" type="String"/>
                </params>
                <declaration name="minimumTextOffset" type="int" line="213"/>
                <declaration name="minimumTextOffsetObject" type="Object" line="214"/>
                <scope line="216"/>
            </method>
            <method name="getAfterCheckIconGap" type="int" line="222">
                <params>
                    <param name="propertyPrefix" type="String"/>
                </params>
                <declaration name="afterCheckIconGap" type="int" line="223"/>
                <declaration name="afterCheckIconGapObject" type="Object" line="224"/>
                <scope line="226"/>
            </method>
            <method name="getLeadingGap" type="int" line="232">
                <params>
                    <param name="propertyPrefix" type="String"/>
                </params>
                <comment line="236">
                    There is no any check icon                    
                </comment>
                <scope line="233"/>
                <scope line="235"/>
            </method>
            <method name="getCheckOffset" type="int" line="240">
                <params>
                    <param name="propertyPrefix" type="String"/>
                </params>
                <declaration name="checkIconOffset" type="int" line="241"/>
                <declaration name="checkIconOffsetObject" type="Object" line="242"/>
                <scope line="244"/>
            </method>
            <method name="calcWidthsAndHeights" type="void" line="250">
                <comment line="251">
                    iconRect                    
                </comment>
                <comment line="257">
                    accRect                    
                </comment>
                <comment line="263">
                    textRect                    
                </comment>
                <comment line="268">
                    Text is HTML                    
                </comment>
                <comment line="274">
                    Text isn&apos;t HTML                    
                </comment>
                <comment line="281">
                    checkIcon                    
                </comment>
                <comment line="286">
                    arrowRect                    
                </comment>
                <comment line="293">
                    labelRect                    
                </comment>
                <scope line="252"/>
                <scope line="258"/>
                <scope line="264"/>
                <scope line="266">
                    <scope line="267"/>
                    <scope line="273"/>
                </scope>
                <scope line="280">
                    <scope line="282"/>
                    <scope line="287"/>
                </scope>
                <scope line="294"/>
                <scope line="298">
                    <declaration name="textRect" type="Rectangle" line="299"/>
                    <declaration name="iconRect" type="Rectangle" line="300"/>
                    <declaration name="labelRect" type="Rectangle" line="306"/>
                </scope>
            </method>
            <method name="calcMaxWidths" type="void" line="312">
                <comment line="329">
                    We shouldn&apos;t use current icon and text widths                    
                </comment>
                <comment line="330">
                    in maximal widths calculation for complex layout.                    
                </comment>
                <comment line="333">
                    If maxLabelWidth is wider                    
                </comment>
                <comment line="334">
                    than the widest icon + the widest text + gap,                    
                </comment>
                <comment line="335">
                    we should update the maximal text witdh                    
                </comment>
                <scope line="317">
                    <declaration name="curGap" type="int" line="320"/>
                    <scope line="322"/>
                </scope>
                <scope line="328">
                    <declaration name="candidateTextWidth" type="int" line="336"/>
                    <scope line="337"/>
                </scope>
            </method>
            <method name="calcMaxWidth" type="void" line="344">
                <params>
                    <param name="rs" type="RectSize"/>
                    <param name="key" type="Object"/>
                </params>
            </method>
            <javadoc line="348">
                Calculates and returns maximal value through specified parent component
                  client property.                
                <param>
                    propertyName name of the property, which stores the maximal value.                    
                </param>
                <param>
                    value a value which pretends to be maximal                    
                </param>
                <return>
                    maximal value among the parent property and the value.                    
                </return>
            </javadoc>
            <method name="calcMaxValue" type="int" line="356">
                <params>
                    <param name="propertyName" type="Object"/>
                    <param name="value" type="int"/>
                </params>
                <comment line="357">
                    Get maximal value from parent client property                    
                </comment>
                <comment line="359">
                    Store new maximal width in parent client property                    
                </comment>
                <declaration name="maxValue" type="int" line="358"/>
                <scope line="360">
                    <scope line="361"/>
                </scope>
                <scope line="365"/>
            </method>
            <javadoc line="370">
                Returns parent client property as int.                
                <param>
                    propertyName name of the parent property.                    
                </param>
                <return>
                    value of the property as int.                    
                </return>
            </javadoc>
            <method name="getParentIntProperty" type="int" line="375">
                <params>
                    <param name="propertyName" type="Object"/>
                </params>
                <declaration name="value" type="Object" line="376"/>
                <scope line="377"/>
                <scope line="380"/>
            </method>
            <method name="isColumnLayout" type="boolean" line="387">
                <params>
                    <param name="isLeftToRight" type="boolean"/>
                    <param name="mi" type="JMenuItem"/>
                </params>
            </method>
            <javadoc line="393">
                Answers should we do column layout for a menu item or not.
                  We do it when a user doesn&apos;t set any alignments
                  and text positions manually, except the vertical alignment.                
            </javadoc>
            <method name="isColumnLayout" type="boolean" line="401">
                <params>
                    <param name="isLeftToRight" type="boolean"/>
                    <param name="horizontalAlignment" type="int"/>
                    <param name="horizontalTextPosition" type="int"/>
                    <param name="verticalTextPosition" type="int"/>
                </params>
                <scope line="402"/>
                <scope line="405">
                    <scope line="407"/>
                    <scope line="411"/>
                </scope>
                <scope line="414">
                    <scope line="416"/>
                    <scope line="420"/>
                </scope>
            </method>
            <javadoc line="427">
                Calculates maximal text offset.
                  It is required for some L&amp;Fs (ex: Vista L&amp;F).
                  The offset is meaningful only for L2R column layout.                
                <param>
                    viewRect the rectangle, the maximal text offset
                      will be calculated for.                    
                </param>
            </javadoc>
            <method name="calcMaxTextOffset" type="void" line="435">
                <params>
                    <param name="viewRect" type="Rectangle"/>
                </params>
                <comment line="440">
                    Calculate the current text offset                    
                </comment>
                <comment line="450">
                    maximal text offset shouldn&apos;t be less than minimal text offset;                    
                </comment>
                <comment line="455">
                    Calculate and store the maximal text offset                    
                </comment>
                <scope line="436"/>
                <declaration name="offset" type="int" line="441"/>
                <scope line="443"/>
                <scope line="446"/>
                <scope line="451"/>
            </method>
            <javadoc line="459">
                Layout icon, text, check icon, accelerator text and arrow icon
                  in the viewRect and return their positions.
                  If horizontalAlignment, verticalTextPosition and horizontalTextPosition
                  are default (user doesn&apos;t set any manually) the layouting algorithm is:
                  Elements are layouted in the five columns:
                  check icon + icon + text + accelerator text + arrow icon
                  In the other case elements are layouted in the four columns:
                  check icon + label + accelerator text + arrow icon
                  Label is union of icon and text.
                  The order of columns can be reversed.
                  It depends on the menu item orientation.                
            </javadoc>
            <method name="layoutMenuItem" type="LayoutResult" line="475">
                <declaration name="lr" type="LayoutResult" line="476"/>
                <scope line="479">
                    <scope line="480"/>
                    <scope line="482"/>
                </scope>
                <scope line="485">
                    <scope line="486"/>
                    <scope line="488"/>
                </scope>
            </method>
            <method name="createLayoutResult" type="LayoutResult" line="497"/>
            <method name="getLTRColumnAlignment" type="ColumnAlignment" line="508"/>
            <method name="getRTLColumnAlignment" type="ColumnAlignment" line="512"/>
            <method name="prepareForLayout" type="void" line="516">
                <params>
                    <param name="lr" type="LayoutResult"/>
                </params>
            </method>
            <javadoc line="522">
                Aligns the accelertor text and the check and arrow icons vertically
                  with the center of the label rect.                
            </javadoc>
            <method name="alignAccCheckAndArrowVertically" type="void" line="526">
                <params>
                    <param name="lr" type="LayoutResult"/>
                </params>
                <scope line="531"/>
            </method>
            <javadoc line="543">
                Fixes vertical alignment of all menu item elements if rect.y
                  or (rect.y + rect.height) is out of viewRect bounds                
            </javadoc>
            <method name="fixVerticalAlignment" type="void" line="547">
                <params>
                    <param name="lr" type="LayoutResult"/>
                    <param name="r" type="Rectangle"/>
                </params>
                <declaration name="delta" type="int" line="548"/>
                <scope line="549"/>
                <scope line="551"/>
                <scope line="554"/>
            </method>
            <method name="doLTRColumnLayout" type="void" line="564">
                <params>
                    <param name="lr" type="LayoutResult"/>
                    <param name="alignment" type="ColumnAlignment"/>
                </params>
                <comment line="565">
                    Set maximal width for all the five basic rects                    
                </comment>
                <comment line="566">
                    (three other ones are already maximal)                    
                </comment>
                <comment line="570">
                    Set X coordinates                    
                </comment>
                <comment line="571">
                    All rects will be aligned at the left side                    
                </comment>
                <comment line="575">
                    Tune afterCheckIconGap                    
                </comment>
                <comment line="576">
                    there is the afterCheckIconGap                    
                </comment>
                <comment line="584">
                    Take into account minimal text offset                    
                </comment>
                <comment line="592">
                    Set Y coordinate for text and icon.                    
                </comment>
                <comment line="593">
                    Y coordinates for other rects                    
                </comment>
                <comment line="594">
                    will be calculated later in layoutMenuItem.                    
                </comment>
                <comment line="597">
                    Calculate valid X and Y coordinates for labelRect                    
                </comment>
                <scope line="576"/>
                <declaration name="textOffset" type="int" line="585"/>
                <scope line="586"/>
            </method>
            <method name="doLTRComplexLayout" type="void" line="601">
                <params>
                    <param name="lr" type="LayoutResult"/>
                    <param name="alignment" type="ColumnAlignment"/>
                </params>
                <comment line="604">
                    Set X coordinates                    
                </comment>
                <comment line="608">
                    Tune afterCheckIconGap                    
                </comment>
                <comment line="609">
                    there is the afterCheckIconGap                    
                </comment>
                <comment line="616">
                    Take into account minimal text offset                    
                </comment>
                <comment line="624">
                    Center labelRect vertically                    
                </comment>
                <scope line="609"/>
                <declaration name="labelOffset" type="int" line="617"/>
                <scope line="618"/>
            </method>
            <method name="doRTLColumnLayout" type="void" line="630">
                <params>
                    <param name="lr" type="LayoutResult"/>
                    <param name="alignment" type="ColumnAlignment"/>
                </params>
                <comment line="631">
                    Set maximal width for all the five basic rects                    
                </comment>
                <comment line="632">
                    (three other ones are already maximal)                    
                </comment>
                <comment line="636">
                    Set X coordinates                    
                </comment>
                <comment line="640">
                    Tune the gap after check icon                    
                </comment>
                <comment line="641">
                    there is the gap after check icon                    
                </comment>
                <comment line="649">
                    Take into account minimal text offset                    
                </comment>
                <comment line="658">
                    Set Y coordinates for text and icon.                    
                </comment>
                <comment line="659">
                    Y coordinates for other rects                    
                </comment>
                <comment line="660">
                    will be calculated later in layoutMenuItem.                    
                </comment>
                <comment line="663">
                    Calculate valid X and Y coordinate for labelRect                    
                </comment>
                <scope line="641"/>
                <declaration name="textOffset" type="int" line="650"/>
                <scope line="652"/>
            </method>
            <method name="doRTLComplexLayout" type="void" line="667">
                <params>
                    <param name="lr" type="LayoutResult"/>
                    <param name="alignment" type="ColumnAlignment"/>
                </params>
                <comment line="670">
                    Set X coordinates                    
                </comment>
                <comment line="674">
                    Tune the gap after check icon                    
                </comment>
                <comment line="675">
                    there is the gap after check icon                    
                </comment>
                <comment line="681">
                    Take into account minimal text offset                    
                </comment>
                <comment line="690">
                    Center labelRect vertically                    
                </comment>
                <scope line="675"/>
                <declaration name="labelOffset" type="int" line="682"/>
                <scope line="684"/>
            </method>
            <method name="alignRects" type="void" line="696">
                <params>
                    <param name="lr" type="LayoutResult"/>
                    <param name="alignment" type="ColumnAlignment"/>
                </params>
            </method>
            <method name="alignRect" type="void" line="709">
                <params>
                    <param name="rect" type="Rectangle"/>
                    <param name="alignment" type="int"/>
                    <param name="origWidth" type="int"/>
                </params>
                <scope line="710"/>
            </method>
            <method name="layoutIconAndTextInLabelRect" type="void" line="716">
                <params>
                    <param name="lr" type="LayoutResult"/>
                </params>
            </method>
            <method name="calcXPositionsLTR" type="void" line="726">
                <params>
                    <param name="startXPos" type="int"/>
                    <param name="leadingGap" type="int"/>
                    <param name="gap" type="int"/>
                    <param name="rects" type="Rectangle"/>
                </params>
                <declaration name="curXPos" type="int" line="727"/>
                <scope line="728">
                    <scope line="730"/>
                </scope>
            </method>
            <method name="calcXPositionsRTL" type="void" line="737">
                <params>
                    <param name="startXPos" type="int"/>
                    <param name="leadingGap" type="int"/>
                    <param name="gap" type="int"/>
                    <param name="rects" type="Rectangle"/>
                </params>
                <declaration name="curXPos" type="int" line="738"/>
                <scope line="739">
                    <scope line="741"/>
                </scope>
            </method>
            <javadoc line="747">
                Sets Y coordinates of text and icon
                  taking into account the vertical alignment                
            </javadoc>
            <method name="calcTextAndIconYPositions" type="void" line="751">
                <params>
                    <param name="lr" type="LayoutResult"/>
                </params>
                <scope line="752"/>
                <scope line="759"/>
                <scope line="767"/>
            </method>
            <javadoc line="779">
                Sets labelRect Y coordinate
                  taking into account the vertical alignment                
            </javadoc>
            <method name="calcLabelYPosition" type="void" line="783">
                <params>
                    <param name="lr" type="LayoutResult"/>
                </params>
                <scope line="784"/>
                <scope line="786"/>
                <scope line="790"/>
            </method>
            <javadoc line="796">
                Returns parent of this component if it is not a top-level menu
                  Otherwise returns null.                
                <param>
                    menuItem the menu item whose parent will be returned.                    
                </param>
                <return>
                    parent of this component if it is not a top-level menu
                      Otherwise returns null.                    
                </return>
            </javadoc>
            <method name="getMenuItemParent" type="JComponent" line="803">
                <params>
                    <param name="menuItem" type="JMenuItem"/>
                </params>
                <declaration name="parent" type="Container" line="804"/>
                <scope line="807"/>
                <scope line="809"/>
            </method>
            <method name="clearUsedParentClientProperties" type="void" line="814">
                <params>
                    <param name="menuItem" type="JMenuItem"/>
                </params>
            </method>
            <method name="clearUsedClientProperties" type="void" line="818">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <scope line="819"/>
            </method>
            <javadoc line="830">
                Finds and returns maximal integer value in the given array.                
                <param>
                    values array where the search will be performed.                    
                </param>
                <return>
                    maximal vaule.                    
                </return>
            </javadoc>
            <method name="max" type="int" line="835">
                <params>
                    <param name="values" type="int"/>
                </params>
                <declaration name="maxValue" type="int" line="836"/>
                <scope line="837">
                    <scope line="838"/>
                </scope>
            </method>
            <method name="createMaxRect" type="Rectangle" line="845"/>
            <method name="addMaxWidth" type="void" line="849">
                <params>
                    <param name="size" type="RectSize"/>
                    <param name="gap" type="int"/>
                    <param name="result" type="Dimension"/>
                </params>
                <scope line="850"/>
            </method>
            <method name="addWidth" type="void" line="855">
                <params>
                    <param name="width" type="int"/>
                    <param name="gap" type="int"/>
                    <param name="result" type="Dimension"/>
                </params>
                <scope line="856"/>
            </method>
            <method name="getMenuItem" type="JMenuItem" line="861"/>
            <method name="getMenuItemParent" type="JComponent" line="865"/>
            <method name="getFont" type="Font" line="869"/>
            <method name="getAccFont" type="Font" line="873"/>
            <method name="getFontMetrics" type="FontMetrics" line="877"/>
            <method name="getAccFontMetrics" type="FontMetrics" line="881"/>
            <method name="getIcon" type="Icon" line="885"/>
            <method name="getCheckIcon" type="Icon" line="889"/>
            <method name="getArrowIcon" type="Icon" line="893"/>
            <method name="getText" type="String" line="897"/>
            <method name="getAccText" type="String" line="901"/>
            <method name="isColumnLayout" type="boolean" line="905"/>
            <method name="useCheckAndArrow" type="boolean" line="909"/>
            <method name="isLeftToRight" type="boolean" line="913"/>
            <method name="isTopLevelMenu" type="boolean" line="917"/>
            <method name="getHtmlView" type="View" line="921"/>
            <method name="getVerticalAlignment" type="int" line="925"/>
            <method name="getHorizontalAlignment" type="int" line="929"/>
            <method name="getVerticalTextPosition" type="int" line="933"/>
            <method name="getHorizontalTextPosition" type="int" line="937"/>
            <method name="getGap" type="int" line="941"/>
            <method name="getLeadingGap" type="int" line="945"/>
            <method name="getAfterCheckIconGap" type="int" line="949"/>
            <method name="getMinTextOffset" type="int" line="953"/>
            <method name="getViewRect" type="Rectangle" line="957"/>
            <method name="getIconSize" type="RectSize" line="961"/>
            <method name="getTextSize" type="RectSize" line="965"/>
            <method name="getAccSize" type="RectSize" line="969"/>
            <method name="getCheckSize" type="RectSize" line="973"/>
            <method name="getArrowSize" type="RectSize" line="977"/>
            <method name="getLabelSize" type="RectSize" line="981"/>
            <method name="setMenuItem" type="void" line="985">
                <params>
                    <param name="mi" type="JMenuItem"/>
                </params>
            </method>
            <method name="setMenuItemParent" type="void" line="989">
                <params>
                    <param name="miParent" type="JComponent"/>
                </params>
            </method>
            <method name="setFont" type="void" line="993">
                <params>
                    <param name="font" type="Font"/>
                </params>
            </method>
            <method name="setAccFont" type="void" line="997">
                <params>
                    <param name="accFont" type="Font"/>
                </params>
            </method>
            <method name="setFontMetrics" type="void" line="1001">
                <params>
                    <param name="fm" type="FontMetrics"/>
                </params>
            </method>
            <method name="setAccFontMetrics" type="void" line="1005">
                <params>
                    <param name="accFm" type="FontMetrics"/>
                </params>
            </method>
            <method name="setIcon" type="void" line="1009">
                <params>
                    <param name="icon" type="Icon"/>
                </params>
            </method>
            <method name="setCheckIcon" type="void" line="1013">
                <params>
                    <param name="checkIcon" type="Icon"/>
                </params>
            </method>
            <method name="setArrowIcon" type="void" line="1017">
                <params>
                    <param name="arrowIcon" type="Icon"/>
                </params>
            </method>
            <method name="setText" type="void" line="1021">
                <params>
                    <param name="text" type="String"/>
                </params>
            </method>
            <method name="setAccText" type="void" line="1025">
                <params>
                    <param name="accText" type="String"/>
                </params>
            </method>
            <method name="setColumnLayout" type="void" line="1029">
                <params>
                    <param name="columnLayout" type="boolean"/>
                </params>
            </method>
            <method name="setUseCheckAndArrow" type="void" line="1033">
                <params>
                    <param name="useCheckAndArrow" type="boolean"/>
                </params>
            </method>
            <method name="setLeftToRight" type="void" line="1037">
                <params>
                    <param name="leftToRight" type="boolean"/>
                </params>
            </method>
            <method name="setTopLevelMenu" type="void" line="1041">
                <params>
                    <param name="topLevelMenu" type="boolean"/>
                </params>
            </method>
            <method name="setHtmlView" type="void" line="1045">
                <params>
                    <param name="htmlView" type="View"/>
                </params>
            </method>
            <method name="setVerticalAlignment" type="void" line="1049">
                <params>
                    <param name="verticalAlignment" type="int"/>
                </params>
            </method>
            <method name="setHorizontalAlignment" type="void" line="1053">
                <params>
                    <param name="horizontalAlignment" type="int"/>
                </params>
            </method>
            <method name="setVerticalTextPosition" type="void" line="1057">
                <params>
                    <param name="verticalTextPosition" type="int"/>
                </params>
            </method>
            <method name="setHorizontalTextPosition" type="void" line="1061">
                <params>
                    <param name="horizontalTextPosition" type="int"/>
                </params>
            </method>
            <method name="setGap" type="void" line="1065">
                <params>
                    <param name="gap" type="int"/>
                </params>
            </method>
            <method name="setLeadingGap" type="void" line="1069">
                <params>
                    <param name="leadingGap" type="int"/>
                </params>
            </method>
            <method name="setAfterCheckIconGap" type="void" line="1073">
                <params>
                    <param name="afterCheckIconGap" type="int"/>
                </params>
            </method>
            <method name="setMinTextOffset" type="void" line="1077">
                <params>
                    <param name="minTextOffset" type="int"/>
                </params>
            </method>
            <method name="setViewRect" type="void" line="1081">
                <params>
                    <param name="viewRect" type="Rectangle"/>
                </params>
            </method>
            <method name="setIconSize" type="void" line="1085">
                <params>
                    <param name="iconSize" type="RectSize"/>
                </params>
            </method>
            <method name="setTextSize" type="void" line="1089">
                <params>
                    <param name="textSize" type="RectSize"/>
                </params>
            </method>
            <method name="setAccSize" type="void" line="1093">
                <params>
                    <param name="accSize" type="RectSize"/>
                </params>
            </method>
            <method name="setCheckSize" type="void" line="1097">
                <params>
                    <param name="checkSize" type="RectSize"/>
                </params>
            </method>
            <method name="setArrowSize" type="void" line="1101">
                <params>
                    <param name="arrowSize" type="RectSize"/>
                </params>
            </method>
            <method name="setLabelSize" type="void" line="1105">
                <params>
                    <param name="labelSize" type="RectSize"/>
                </params>
            </method>
            <method name="getLeftTextExtraWidth" type="int" line="1109"/>
            <javadoc line="1113">
                Returns false if the component is a JMenu and it is a top
                  level menu (on the menubar).                
            </javadoc>
            <method name="useCheckAndArrow" type="boolean" line="1117">
                <params>
                    <param name="menuItem" type="JMenuItem"/>
                </params>
                <declaration name="b" type="boolean" line="1118"/>
                <scope line="1120"/>
            </method>
            <class name="LayoutResult" line="1126">
                <declaration name="iconRect" type="Rectangle" line="1127"/>
                <declaration name="textRect" type="Rectangle" line="1128"/>
                <declaration name="accRect" type="Rectangle" line="1129"/>
                <declaration name="checkRect" type="Rectangle" line="1130"/>
                <declaration name="arrowRect" type="Rectangle" line="1131"/>
                <declaration name="labelRect" type="Rectangle" line="1132"/>
                <method name="LayoutResult" type="constructor" line="1134"/>
                <method name="LayoutResult" type="constructor" line="1145">
                    <params>
                        <param name="iconRect" type="Rectangle"/>
                        <param name="textRect" type="Rectangle"/>
                        <param name="accRect" type="Rectangle"/>
                        <param name="checkRect" type="Rectangle"/>
                        <param name="arrowRect" type="Rectangle"/>
                        <param name="labelRect" type="Rectangle"/>
                    </params>
                </method>
                <method name="getIconRect" type="Rectangle" line="1154"/>
                <method name="setIconRect" type="void" line="1158">
                    <params>
                        <param name="iconRect" type="Rectangle"/>
                    </params>
                </method>
                <method name="getTextRect" type="Rectangle" line="1162"/>
                <method name="setTextRect" type="void" line="1166">
                    <params>
                        <param name="textRect" type="Rectangle"/>
                    </params>
                </method>
                <method name="getAccRect" type="Rectangle" line="1170"/>
                <method name="setAccRect" type="void" line="1174">
                    <params>
                        <param name="accRect" type="Rectangle"/>
                    </params>
                </method>
                <method name="getCheckRect" type="Rectangle" line="1178"/>
                <method name="setCheckRect" type="void" line="1182">
                    <params>
                        <param name="checkRect" type="Rectangle"/>
                    </params>
                </method>
                <method name="getArrowRect" type="Rectangle" line="1186"/>
                <method name="setArrowRect" type="void" line="1190">
                    <params>
                        <param name="arrowRect" type="Rectangle"/>
                    </params>
                </method>
                <method name="getLabelRect" type="Rectangle" line="1194"/>
                <method name="setLabelRect" type="void" line="1198">
                    <params>
                        <param name="labelRect" type="Rectangle"/>
                    </params>
                </method>
                <method name="getAllRects" type="Map<String,Rectangle>" line="1202">
                    <declaration name="result" type="Map&lt;String,Rectangle&gt;" line="1203"/>
                </method>
            </class>
            <class name="ColumnAlignment" line="1214">
                <declaration name="checkAlignment" type="int" line="1215"/>
                <declaration name="iconAlignment" type="int" line="1216"/>
                <declaration name="textAlignment" type="int" line="1217"/>
                <declaration name="accAlignment" type="int" line="1218"/>
                <declaration name="arrowAlignment" type="int" line="1219"/>
                <declaration name="LEFT_ALIGNMENT" type="ColumnAlignment" line="1221"/>
                <declaration name="RIGHT_ALIGNMENT" type="ColumnAlignment" line="1230"/>
                <method name="ColumnAlignment" type="constructor" line="1241">
                    <params>
                        <param name="checkAlignment" type="int"/>
                        <param name="iconAlignment" type="int"/>
                        <param name="textAlignment" type="int"/>
                        <param name="accAlignment" type="int"/>
                        <param name="arrowAlignment" type="int"/>
                    </params>
                </method>
                <method name="getCheckAlignment" type="int" line="1249"/>
                <method name="getIconAlignment" type="int" line="1253"/>
                <method name="getTextAlignment" type="int" line="1257"/>
                <method name="getAccAlignment" type="int" line="1261"/>
                <method name="getArrowAlignment" type="int" line="1265"/>
            </class>
            <class name="RectSize" line="1270">
                <declaration name="width" type="int" line="1271"/>
                <declaration name="height" type="int" line="1272"/>
                <declaration name="origWidth" type="int" line="1273"/>
                <declaration name="maxWidth" type="int" line="1274"/>
                <method name="RectSize" type="constructor" line="1276"/>
                <method name="RectSize" type="constructor" line="1279">
                    <params>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                        <param name="origWidth" type="int"/>
                        <param name="maxWidth" type="int"/>
                    </params>
                </method>
                <method name="getWidth" type="int" line="1286"/>
                <method name="getHeight" type="int" line="1290"/>
                <method name="getOrigWidth" type="int" line="1294"/>
                <method name="getMaxWidth" type="int" line="1298"/>
                <method name="setWidth" type="void" line="1302">
                    <params>
                        <param name="width" type="int"/>
                    </params>
                </method>
                <method name="setHeight" type="void" line="1306">
                    <params>
                        <param name="height" type="int"/>
                    </params>
                </method>
                <method name="setOrigWidth" type="void" line="1310">
                    <params>
                        <param name="origWidth" type="int"/>
                    </params>
                </method>
                <method name="setMaxWidth" type="void" line="1314">
                    <params>
                        <param name="maxWidth" type="int"/>
                    </params>
                </method>
                <method name="toString" type="String" line="1318"/>
            </class>
        </class>
    </source>