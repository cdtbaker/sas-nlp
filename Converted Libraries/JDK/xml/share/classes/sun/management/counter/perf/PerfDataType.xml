<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.management.counter.perf">
        <import package="java.io.UnsupportedEncodingException"/>
        <class name="PerfDataType" line="30">
            <javadoc line="30">
                A typesafe enumeration for the data types supported for
                  performance data.
                  &lt;p&gt; The enumeration values for this typesafe enumeration must be
                  kept in sychronization with the PerfDataType enum in the
                  globalsDefinitions.hpp file in the HotSpot source base.&lt;/p&gt;                
                <author>
                    Brian Doherty                    
                </author>
            </javadoc>
            <declaration name="name" type="String" line="42"/>
            <declaration name="value" type="byte" line="43"/>
            <declaration name="size" type="int" line="44"/>
            <declaration name="BOOLEAN" type="PerfDataType" line="46"/>
            <declaration name="CHAR" type="PerfDataType" line="47"/>
            <declaration name="FLOAT" type="PerfDataType" line="48"/>
            <declaration name="DOUBLE" type="PerfDataType" line="49"/>
            <declaration name="BYTE" type="PerfDataType" line="50"/>
            <declaration name="SHORT" type="PerfDataType" line="51"/>
            <declaration name="INT" type="PerfDataType" line="52"/>
            <declaration name="LONG" type="PerfDataType" line="53"/>
            <declaration name="ILLEGAL" type="PerfDataType" line="54"/>
            <declaration name="basicTypes" type="PerfDataType" line="56"/>
            <method name="toString" type="String" line="60"/>
            <method name="byteValue" type="byte" line="64"/>
            <method name="size" type="int" line="68"/>
            <javadoc line="72">
                Maps an integer PerfDataType value to its corresponding PerfDataType
                  object.                
                <param>
                    i  an integer representation of a PerfDataType                    
                </param>
                <return>
                    The PerfDataType object for &lt;code&gt;i&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="toPerfDataType" type="PerfDataType" line="79">
                <params>
                    <param name="type" type="byte"/>
                </params>
                <scope line="80">
                    <scope line="81"/>
                </scope>
            </method>
            <method name="PerfDataType" type="constructor" line="88">
                <params>
                    <param name="name" type="String"/>
                    <param name="c" type="String"/>
                    <param name="size" type="int"/>
                </params>
                <comment line="96">
                    ignore, &quot;UTF-8&quot; is always a known encoding                    
                </comment>
                <scope line="91">
                    <declaration name="b" type="byte[]" line="92"/>
                </scope>
                <scope line="94"/>
            </method>
        </class>
    </source>