<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.management">
        <import package="java.lang.management.MonitorInfo"/>
        <import package="javax.management.openmbean.CompositeType"/>
        <import package="javax.management.openmbean.CompositeData"/>
        <import package="javax.management.openmbean.CompositeDataSupport"/>
        <import package="javax.management.openmbean.OpenDataException"/>
        <import package="java.util.Set"/>
        <class name="MonitorInfoCompositeData" line="8">
            <extends class="LazyCompositeData"/>
            <javadoc line="8">
                A CompositeData for MonitorInfo for the local management support.
                  This class avoids the performance penalty paid to the
                  construction of a CompositeData use in the local case.                
            </javadoc>
            <declaration name="lock" type="MonitorInfo" line="14"/>
            <method name="MonitorInfoCompositeData" type="constructor" line="15">
                <params>
                    <param name="mi" type="MonitorInfo"/>
                </params>
            </method>
            <method name="getMonitorInfo" type="MonitorInfo" line="18"/>
            <method name="toCompositeData" type="CompositeData" line="21">
                <params>
                    <param name="mi" type="MonitorInfo"/>
                </params>
                <declaration name="micd" type="MonitorInfoCompositeData" line="22"/>
            </method>
            <method name="getCompositeData" type="CompositeData" line="25">
                <declaration name="len" type="int" line="26"/>
                <declaration name="values" type="Object[]" line="27"/>
                <declaration name="li" type="CompositeData" line="28"/>
                <scope line="29">
                    <declaration name="item" type="String" line="30"/>
                    <scope line="31">
                        <declaration name="ste" type="StackTraceElement" line="32"/>
                    </scope>
                    <scope line="35"/>
                    <scope line="38"/>
                </scope>
                <scope line="42"/>
                <scope line="45"/>
            </method>
            <declaration name="monitorInfoCompositeType" type="CompositeType" line="49"/>
            <declaration name="monitorInfoItemNames" type="String[]" line="50"/>
            <scope line="51">
                <scope line="52">
                    <declaration name="s" type="Set&lt;String&gt;" line="54"/>
                </scope>
                <scope line="57"/>
            </scope>
            <method name="getMonitorInfoCompositeType" type="CompositeType" line="61"/>
            <declaration name="CLASS_NAME" type="String" line="64"/>
            <declaration name="IDENTITY_HASH_CODE" type="String" line="65"/>
            <declaration name="LOCKED_STACK_FRAME" type="String" line="66"/>
            <declaration name="LOCKED_STACK_DEPTH" type="String" line="67"/>
            <method name="getClassName" type="String" line="68">
                <params>
                    <param name="cd" type="CompositeData"/>
                </params>
            </method>
            <method name="getIdentityHashCode" type="int" line="71">
                <params>
                    <param name="cd" type="CompositeData"/>
                </params>
            </method>
            <method name="getLockedStackFrame" type="StackTraceElement" line="74">
                <params>
                    <param name="cd" type="CompositeData"/>
                </params>
                <declaration name="ste" type="CompositeData" line="75"/>
                <scope line="76"/>
                <scope line="79"/>
            </method>
            <method name="getLockedStackDepth" type="int" line="83">
                <params>
                    <param name="cd" type="CompositeData"/>
                </params>
            </method>
            <javadoc line="86">
                Validate if the input CompositeData has the expected
                  CompositeType (i.e. contain all attributes with expected
                  names and types).                
            </javadoc>
            <method name="validateCompositeData" type="void" line="91">
                <params>
                    <param name="cd" type="CompositeData"/>
                </params>
                <scope line="92"/>
                <scope line="95"/>
            </method>
            <declaration name="serialVersionUID" type="long" line="99"/>
        </class>
    </source>