<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.management">
        <import package="java.lang.management.ManagementPermission"/>
        <import package="java.util.List"/>
        <import package="javax.management.ObjectName"/>
        <import package="javax.management.MalformedObjectNameException"/>
        <class name="Util" line="6">
            <method name="Util" type="constructor" line="7"/>
            <method name="newException" type="RuntimeException" line="9">
                <params>
                    <param name="e" type="Exception"/>
                </params>
            </method>
            <declaration name="EMPTY_STRING_ARRAY" type="String[]" line="12"/>
            <method name="toStringArray" type="String[]" line="13">
                <params>
                    <param name="list" type="List<String>"/>
                </params>
            </method>
            <method name="newObjectName" type="ObjectName" line="16">
                <params>
                    <param name="domainAndType" type="String"/>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="newObjectName" type="ObjectName" line="19">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="20"/>
                <scope line="23"/>
            </method>
            <declaration name="monitorPermission" type="ManagementPermission" line="27"/>
            <declaration name="controlPermission" type="ManagementPermission" line="28"/>
            <javadoc line="29">
                Check that the current context is trusted to perform monitoring
                  or management.
                  &lt;p&gt;
                  If the check fails we throw a SecurityException, otherwise
                  we return normally.                
                <exception>
                    SecurityException  if a security manager exists and if
                      the caller does not have ManagementPermission("control").                    
                </exception>
            </javadoc>
            <method name="checkAccess" type="void" line="38">
                <params>
                    <param name="p" type="ManagementPermission"/>
                </params>
                <declaration name="sm" type="SecurityManager" line="39"/>
                <scope line="40"/>
            </method>
            <method name="checkMonitorAccess" type="void" line="44"/>
            <method name="checkControlAccess" type="void" line="47"/>
        </class>
    </source>