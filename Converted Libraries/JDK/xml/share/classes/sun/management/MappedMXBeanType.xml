<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.management">
        <import package="java.lang.management.MemoryUsage"/>
        <import package="java.lang.management.MemoryNotificationInfo"/>
        <import package="java.lang.management.MonitorInfo"/>
        <import package="java.lang.management.LockInfo"/>
        <import package="java.lang.management.ThreadInfo"/>
        <import package="java.lang.reflect"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="java.util"/>
        <import package="java.io.InvalidObjectException"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.security.PrivilegedActionException"/>
        <import package="java.security.PrivilegedExceptionAction"/>
        <import package="javax.management"/>
        <import package="javax.management.openmbean"/>
        <import package="javax.management.openmbean.SimpleType"/>
        <import package="com.sun.management.VMOption"/>
        <class name="MappedMXBeanType" line="20">
            <javadoc line="20">
                A mapped mxbean type maps a Java type to an open type.
                  Only the following Java types are mappable
                  (currently required by the platform MXBeans):
                  1. Primitive types
                  2. Wrapper classes such java.lang.Integer, etc
                  3. Classes with only getter methods and with a static &quot;from&quot; method
                  that takes a CompositeData argument.
                  4. E[] where E is a type of 1-4 (can be multi-dimensional array)
                  5. List&lt;E&gt; where E is a type of 1-3
                  6. Map&lt;K, V&gt; where K and V are a type of 1-4
                  OpenDataException will be thrown if a Java type is not supported.                
            </javadoc>
            <declaration name="convertedTypes" type="WeakHashMap&amp;lt;Type,MappedMXBeanType&amp;gt;" line="34"/>
            <declaration name="isBasicType" type="boolean" line="35"/>
            <declaration name="openType" type="OpenType" line="36"/>
            <declaration name="mappedTypeClass" type="Class" line="37"/>
            <method name="newMappedType" type="MappedMXBeanType" line="38">
                <params>
                    <param name="javaType" type="Type"/>
                </params>
                <declaration name="mt" type="MappedMXBeanType" line="39"/>
                <scope line="40">
                    <declaration name="c" type="Class" line="41"/>
                    <scope line="42"/>
                    <scope line="45"/>
                    <scope line="48"/>
                </scope>
                <scope line="52">
                    <declaration name="pt" type="ParameterizedType" line="53"/>
                    <declaration name="rawType" type="Type" line="54"/>
                    <scope line="55">
                        <declaration name="rc" type="Class" line="56"/>
                        <scope line="57"/>
                        <scope line="60"/>
                    </scope>
                </scope>
                <scope line="65">
                    <declaration name="t" type="GenericArrayType" line="66"/>
                </scope>
                <scope line="69"/>
            </method>
            <method name="newBasicType" type="MappedMXBeanType" line="75">
                <params>
                    <param name="c" type="Class"/>
                    <param name="ot" type="OpenType"/>
                </params>
                <declaration name="mt" type="MappedMXBeanType" line="76"/>
            </method>
            <method name="getMappedType" type="MappedMXBeanType" line="80">
                <params>
                    <param name="t" type="Type"/>
                </params>
                <declaration name="mt" type="MappedMXBeanType" line="81"/>
                <scope line="82"/>
                <scope line="85"/>
            </method>
            <method name="toOpenType" type="OpenType" line="90">
                <params>
                    <param name="t" type="Type"/>
                </params>
                <declaration name="mt" type="MappedMXBeanType" line="91"/>
            </method>
            <method name="toJavaTypeData" type="Object" line="94">
                <params>
                    <param name="openData" type="Object"/>
                    <param name="t" type="Type"/>
                </params>
                <scope line="95"/>
                <declaration name="mt" type="MappedMXBeanType" line="98"/>
            </method>
            <method name="toOpenTypeData" type="Object" line="101">
                <params>
                    <param name="data" type="Object"/>
                    <param name="t" type="Type"/>
                </params>
                <scope line="102"/>
                <declaration name="mt" type="MappedMXBeanType" line="105"/>
            </method>
            <method name="getOpenType" type="OpenType" line="108"/>
            <method name="isBasicType" type="boolean" line="111"/>
            <method name="getTypeName" type="String" line="114"/>
            <method name="getMappedTypeClass" type="Class" line="117"/>
            <method name="getJavaType" type="Type" line="120"/>
            <method name="getName" type="String" line="121"/>
            <method name="toOpenTypeData" type="Object" line="122"/>
            <method name="toJavaTypeData" type="Object" line="123"/>
            <class name="BasicMXBeanType" line="124">
                <extends class="MappedMXBeanType"/>
                <declaration name="basicType" type="Class" line="125"/>
                <method name="BasicMXBeanType" type="constructor" line="126">
                    <params>
                        <param name="c" type="Class"/>
                        <param name="openType" type="OpenType"/>
                    </params>
                </method>
                <method name="getJavaType" type="Type" line="132"/>
                <method name="getName" type="String" line="135"/>
                <method name="toOpenTypeData" type="Object" line="138">
                    <params>
                        <param name="data" type="Object"/>
                    </params>
                </method>
                <method name="toJavaTypeData" type="Object" line="141">
                    <params>
                        <param name="data" type="Object"/>
                    </params>
                </method>
            </class>
            <class name="EnumMXBeanType" line="145">
                <extends class="MappedMXBeanType"/>
                <declaration name="enumClass" type="Class" line="146"/>
                <method name="EnumMXBeanType" type="constructor" line="147">
                    <params>
                        <param name="c" type="Class"/>
                    </params>
                </method>
                <method name="getJavaType" type="Type" line="152"/>
                <method name="getName" type="String" line="155"/>
                <method name="toOpenTypeData" type="Object" line="158">
                    <params>
                        <param name="data" type="Object"/>
                    </params>
                </method>
                <method name="toJavaTypeData" type="Object" line="161">
                    <params>
                        <param name="data" type="Object"/>
                    </params>
                    <scope line="162"/>
                    <scope line="165">
                        <declaration name="ioe" type="InvalidObjectException" line="166"/>
                    </scope>
                </method>
            </class>
            <class name="ArrayMXBeanType" line="172">
                <extends class="MappedMXBeanType"/>
                <declaration name="arrayClass" type="Class" line="173"/>
                <declaration name="componentType" type="MappedMXBeanType" line="174"/>
                <declaration name="baseElementType" type="MappedMXBeanType" line="175"/>
                <method name="ArrayMXBeanType" type="constructor" line="176">
                    <params>
                        <param name="c" type="Class"/>
                    </params>
                    <declaration name="className" type="StringBuilder" line="179"/>
                    <declaration name="et" type="Class" line="180"/>
                    <declaration name="dim" type="int" line="181"/>
                    <scope line="182"/>
                    <scope line="187"/>
                    <scope line="190"/>
                    <scope line="193"/>
                    <scope line="196">
                        <declaration name="ode" type="OpenDataException" line="197"/>
                    </scope>
                </method>
                <method name="ArrayMXBeanType" type="constructor" line="203"/>
                <method name="getJavaType" type="Type" line="206"/>
                <method name="getName" type="String" line="209"/>
                <method name="toOpenTypeData" type="Object" line="212">
                    <params>
                        <param name="data" type="Object"/>
                    </params>
                    <scope line="213"/>
                    <declaration name="array" type="Object[]" line="216"/>
                    <declaration name="openArray" type="Object[]" line="217"/>
                    <declaration name="i" type="int" line="218"/>
                    <scope line="219">
                        <scope line="220"/>
                        <scope line="223"/>
                    </scope>
                </method>
                <method name="toJavaTypeData" type="Object" line="230">
                    <params>
                        <param name="data" type="Object"/>
                    </params>
                    <scope line="231"/>
                    <declaration name="openArray" type="Object[]" line="234"/>
                    <declaration name="array" type="Object[]" line="235"/>
                    <declaration name="i" type="int" line="236"/>
                    <scope line="237">
                        <scope line="238"/>
                        <scope line="241"/>
                    </scope>
                </method>
            </class>
            <class name="GenericArrayMXBeanType" line="249">
                <extends class="ArrayMXBeanType"/>
                <declaration name="gtype" type="GenericArrayType" line="250"/>
                <method name="GenericArrayMXBeanType" type="constructor" line="251">
                    <params>
                        <param name="gat" type="GenericArrayType"/>
                    </params>
                    <declaration name="className" type="StringBuilder" line="254"/>
                    <declaration name="elementType" type="Type" line="255"/>
                    <declaration name="dim" type="int" line="256"/>
                    <scope line="257">
                        <declaration name="et" type="GenericArrayType" line="259"/>
                    </scope>
                    <scope line="263"/>
                    <scope line="266"/>
                    <scope line="269"/>
                    <scope line="272">
                        <declaration name="ode" type="OpenDataException" line="273"/>
                    </scope>
                </method>
                <method name="getJavaType" type="Type" line="279"/>
                <method name="getName" type="String" line="282"/>
            </class>
            <class name="ListMXBeanType" line="286">
                <extends class="MappedMXBeanType"/>
                <declaration name="javaType" type="ParameterizedType" line="287"/>
                <declaration name="paramType" type="MappedMXBeanType" line="288"/>
                <declaration name="typeName" type="String" line="289"/>
                <method name="ListMXBeanType" type="constructor" line="290">
                    <params>
                        <param name="pt" type="ParameterizedType"/>
                    </params>
                    <declaration name="argTypes" type="Type[]" line="292"/>
                    <scope line="294"/>
                    <declaration name="et" type="Class" line="297"/>
                    <scope line="298"/>
                    <scope line="303"/>
                    <scope line="306">
                        <declaration name="ode" type="OpenDataException" line="307"/>
                    </scope>
                </method>
                <method name="getJavaType" type="Type" line="313"/>
                <method name="getName" type="String" line="316"/>
                <method name="toOpenTypeData" type="Object" line="319">
                    <params>
                        <param name="data" type="Object"/>
                    </params>
                    <declaration name="list" type="List&amp;lt;Object&amp;gt;" line="320"/>
                    <declaration name="openArray" type="Object[]" line="321"/>
                    <declaration name="i" type="int" line="322"/>
                    <scope line="323"/>
                </method>
                <method name="toJavaTypeData" type="Object" line="328">
                    <params>
                        <param name="data" type="Object"/>
                    </params>
                    <declaration name="openArray" type="Object[]" line="329"/>
                    <declaration name="result" type="List&amp;lt;Object&amp;gt;" line="330"/>
                    <scope line="331"/>
                </method>
            </class>
            <declaration name="KEY" type="String" line="337"/>
            <declaration name="VALUE" type="String" line="338"/>
            <declaration name="mapIndexNames" type="String[]" line="339"/>
            <declaration name="mapItemNames" type="String[]" line="340"/>
            <class name="MapMXBeanType" line="341">
                <extends class="MappedMXBeanType"/>
                <declaration name="javaType" type="ParameterizedType" line="342"/>
                <declaration name="keyType" type="MappedMXBeanType" line="343"/>
                <declaration name="valueType" type="MappedMXBeanType" line="344"/>
                <declaration name="typeName" type="String" line="345"/>
                <method name="MapMXBeanType" type="constructor" line="346">
                    <params>
                        <param name="pt" type="ParameterizedType"/>
                    </params>
                    <declaration name="argTypes" type="Type[]" line="348"/>
                    <declaration name="mapItemTypes" type="OpenType[]" line="353"/>
                    <declaration name="rowType" type="CompositeType" line="354"/>
                </method>
                <method name="getJavaType" type="Type" line="358"/>
                <method name="getName" type="String" line="361"/>
                <method name="toOpenTypeData" type="Object" line="364">
                    <params>
                        <param name="data" type="Object"/>
                    </params>
                    <declaration name="map" type="Map&amp;lt;Object,Object&amp;gt;" line="365"/>
                    <declaration name="tabularType" type="TabularType" line="366"/>
                    <declaration name="table" type="TabularData" line="367"/>
                    <declaration name="rowType" type="CompositeType" line="368"/>
                    <scope line="369">
                        <declaration name="key" type="Object" line="370"/>
                        <declaration name="value" type="Object" line="371"/>
                        <declaration name="row" type="CompositeData" line="372"/>
                    </scope>
                </method>
                <method name="toJavaTypeData" type="Object" line="377">
                    <params>
                        <param name="data" type="Object"/>
                    </params>
                    <declaration name="td" type="TabularData" line="378"/>
                    <declaration name="result" type="Map&amp;lt;Object,Object&amp;gt;" line="379"/>
                    <scope line="380">
                        <declaration name="key" type="Object" line="381"/>
                        <declaration name="value" type="Object" line="382"/>
                    </scope>
                </method>
            </class>
            <declaration name="COMPOSITE_DATA_CLASS" type="Class&amp;lt;?&amp;gt;" line="388"/>
            <class name="CompositeDataMXBeanType" line="389">
                <extends class="MappedMXBeanType"/>
                <declaration name="javaClass" type="Class&amp;lt;?&amp;gt;" line="390"/>
                <declaration name="isCompositeData" type="boolean" line="391"/>
                <declaration name="fromMethod" type="Method" line="392"/>
                <method name="CompositeDataMXBeanType" type="constructor" line="393">
                    <params>
                        <param name="c" type="Class"/>
                    </params>
                    <scope line="396">
                        <anonymous_class line="397">
                            <method name="run" type="Method" line="398"/>
                        </anonymous_class>
                    </scope>
                    <scope line="404"/>
                    <scope line="406"/>
                    <scope line="410">
                        <anonymous_class line="412">
                            <method name="run" type="Method[]" line="413"/>
                        </anonymous_class>
                        <declaration name="methods" type="Method[]" line="412"/>
                        <declaration name="names" type="List&amp;lt;String&amp;gt;" line="418"/>
                        <declaration name="types" type="List&amp;lt;OpenType&amp;gt;" line="419"/>
                        <scope line="420">
                            <declaration name="method" type="Method" line="421"/>
                            <declaration name="name" type="String" line="422"/>
                            <declaration name="type" type="Type" line="423"/>
                            <declaration name="rest" type="String" line="424"/>
                            <scope line="425"/>
                            <scope line="428"/>
                            <scope line="431"/>
                            <scope line="434"/>
                        </scope>
                        <declaration name="nameArray" type="String[]" line="440"/>
                    </scope>
                </method>
                <method name="getJavaType" type="Type" line="444"/>
                <method name="getName" type="String" line="447"/>
                <method name="toOpenTypeData" type="Object" line="450">
                    <params>
                        <param name="data" type="Object"/>
                    </params>
                    <scope line="451"/>
                    <scope line="454"/>
                    <scope line="457">
                        <scope line="458"/>
                    </scope>
                    <scope line="463"/>
                    <scope line="466"/>
                    <scope line="469">
                        <declaration name="cd" type="CompositeData" line="470"/>
                        <declaration name="ct" type="CompositeType" line="471"/>
                        <declaration name="itemNames" type="String[]" line="472"/>
                        <declaration name="itemValues" type="Object[]" line="473"/>
                    </scope>
                </method>
                <method name="toJavaTypeData" type="Object" line="478">
                    <params>
                        <param name="data" type="Object"/>
                    </params>
                    <scope line="479"/>
                    <scope line="482"/>
                    <scope line="485"/>
                    <scope line="488">
                        <declaration name="ode" type="OpenDataException" line="489"/>
                    </scope>
                </method>
            </class>
            <class name="InProgress" line="495">
                <extends class="OpenType"/>
                <declaration name="description" type="String" line="496"/>
                <method name="InProgress" type="constructor" line="497"/>
                <method name="toString" type="String" line="500"/>
                <method name="hashCode" type="int" line="503"/>
                <method name="equals" type="boolean" line="506">
                    <params>
                        <param name="o" type="Object"/>
                    </params>
                </method>
                <method name="isValue" type="boolean" line="509">
                    <params>
                        <param name="o" type="Object"/>
                    </params>
                </method>
                <declaration name="serialVersionUID" type="long" line="512"/>
            </class>
            <declaration name="inProgress" type="OpenType" line="514"/>
            <scope line="515">
                <declaration name="t" type="OpenType" line="516"/>
                <scope line="517"/>
                <scope line="520"/>
            </scope>
            <declaration name="simpleTypes" type="OpenType[]" line="525"/>
            <scope line="526">
                <scope line="527">
                    <scope line="528">
                        <declaration name="t" type="OpenType" line="529"/>
                        <declaration name="c" type="Class" line="530"/>
                        <scope line="531"/>
                        <scope line="535"/>
                        <scope line="538"/>
                        <scope line="541">
                            <scope line="542">
                                <declaration name="typeField" type="Field" line="543"/>
                                <declaration name="primitiveType" type="Class" line="544"/>
                            </scope>
                            <scope line="547"/>
                            <scope line="549"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="555"/>
            </scope>
            <javadoc line="559">
                Utility method to take a string and convert it to normal Java variable
                  name capitalization.  This normally means converting the first
                  character from upper case to lower case, but in the (unusual) special
                  case when there is more than one character and both the first and
                  second characters are upper case, we leave it alone.
                  &lt;p&gt;
                  Thus &quot;FooBah&quot; becomes &quot;fooBah&quot; and &quot;X&quot; becomes &quot;x&quot;, but &quot;URL&quot; stays
                  as &quot;URL&quot;.                
                <param>
                    name The string to be decapitalized.                    
                </param>
                <return>
                    The decapitalized version of the string.                    
                </return>
            </javadoc>
            <method name="decapitalize" type="String" line="571">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="572"/>
                <scope line="575"/>
                <declaration name="chars" type="char" line="578"/>
            </method>
        </class>
    </source>