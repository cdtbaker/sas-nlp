<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.management">
        <import package="java.io.IOException"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="java.util.concurrent.atomic.AtomicInteger"/>
        <import package="sun.misc.Perf"/>
        <import package="sun.management.counter.Units"/>
        <import package="sun.management.counter.Counter"/>
        <import package="sun.management.counter.perf.PerfInstrumentation"/>
        <class name="ConnectorAddressLink" line="13">
            <javadoc line="13">
                A utility class to support the exporting and importing of the address
                  of a connector server using the instrumentation buffer.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="CONNECTOR_ADDRESS_COUNTER" type="String" line="19"/>
            <declaration name="REMOTE_CONNECTOR_COUNTER_PREFIX" type="String" line="20"/>
            <declaration name="counter" type="AtomicInteger" line="21"/>
            <javadoc line="22">
                Exports the specified connector address to the instrumentation buffer
                  so that it can be read by this or other Java virtual machines running
                  on the same system.                
                <param>
                    address The connector address.                    
                </param>
            </javadoc>
            <method name="export" type="void" line="28">
                <params>
                    <param name="address" type="String"/>
                </params>
                <scope line="29"/>
                <declaration name="perf" type="Perf" line="32"/>
            </method>
            <javadoc line="35">
                Imports the connector address from the instrument buffer
                  of the specified Java virtual machine.                
                <param>
                    vmid an identifier that uniquely identifies a local Java virtual
                      machine, or &lt;code&gt;0&lt;/code&gt; to indicate the current Java virtual machine.                    
                </param>
                <return>
                    the value of the connector address, or &lt;code&gt;null&lt;/code&gt; if the
                      target VM has not exported a connector address.                    
                </return>
                <throws>
                    IOException An I/O error occurred while trying to acquire the
                      instrumentation buffer.                    
                </throws>
            </javadoc>
            <method name="importFrom" type="String" line="45">
                <params>
                    <param name="vmid" type="int"/>
                </params>
                <declaration name="perf" type="Perf" line="46"/>
                <declaration name="bb" type="ByteBuffer" line="47"/>
                <scope line="48"/>
                <scope line="51"/>
                <declaration name="counters" type="List" line="54"/>
                <declaration name="i" type="Iterator" line="55"/>
                <scope line="56">
                    <declaration name="c" type="Counter" line="57"/>
                </scope>
                <scope line="60"/>
            </method>
            <javadoc line="64">
                Exports the specified remote connector address and associated
                  configuration properties to the instrumentation buffer so that
                  it can be read by this or other Java virtual machines running
                  on the same system.                
                <param>
                    properties The remote connector address properties.                    
                </param>
            </javadoc>
            <method name="exportRemote" type="void" line="71">
                <params>
                    <param name="properties" type="Map&lt;String,String&gt;"/>
                </params>
                <declaration name="index" type="int" line="72"/>
                <declaration name="perf" type="Perf" line="73"/>
                <scope line="74"/>
            </method>
            <javadoc line="78">
                Imports the remote connector address and associated
                  configuration properties from the instrument buffer
                  of the specified Java virtual machine.                
                <param>
                    vmid an identifier that uniquely identifies a local Java virtual
                      machine, or &lt;code&gt;0&lt;/code&gt; to indicate the current Java virtual machine.                    
                </param>
                <return>
                    a map containing the remote connector&apos;s properties, or an empty
                      map if the target VM has not exported the remote connector&apos;s properties.                    
                </return>
                <throws>
                    IOException An I/O error occurred while trying to acquire the
                      instrumentation buffer.                    
                </throws>
            </javadoc>
            <method name="importRemoteFrom" type="Map&lt;String,String&gt;" line="89">
                <params>
                    <param name="vmid" type="int"/>
                </params>
                <declaration name="perf" type="Perf" line="90"/>
                <declaration name="bb" type="ByteBuffer" line="91"/>
                <scope line="92"/>
                <scope line="95"/>
                <declaration name="counters" type="List" line="98"/>
                <declaration name="properties" type="Map&amp;lt;String,String&amp;gt;" line="99"/>
                <scope line="100">
                    <declaration name="name" type="String" line="101"/>
                    <scope line="102"/>
                </scope>
            </method>
        </class>
    </source>