<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.management.snmp.util">
        <import package="com.sun.jmx.snmp.SnmpOid"/>
        <import package="java.io.Serializable"/>
        <import package="java.util.Comparator"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.TreeMap"/>
        <import package="java.util.List"/>
        <import package="java.util.Iterator"/>
        <import package="java.lang.ref.WeakReference"/>
        <class name="SnmpTableCache" line="10">
            <implements interface="Serializable"/>
            <javadoc line="10">
                This abstract class implements a weak cache that holds table data.
                  &lt;p&gt;The table data is stored in an instance of{@link SnmpCachedData}, which is kept in a {@link WeakReference}.
                  If the WeakReference is null or empty, the cached data is recomputed.&lt;/p&gt;
                  &lt;p&gt;&lt;b&gt;NOTE: This class is not synchronized, subclasses must implement
                  the appropriate synchronization when needed.&lt;/b&gt;&lt;/p&gt;                
            </javadoc>
            <declaration name="validity" type="long" line="18"/>
            <javadoc line="18">
                Interval of time in ms during which the cached table data
                  is considered valid.                
            </javadoc>
            <declaration name="datas" type="WeakReference&amp;lt;SnmpCachedData&amp;gt;" line="23"/>
            <javadoc line="23">
                A weak refernce holding cached table data.                
            </javadoc>
            <javadoc line="27">
                true if the given cached table data is obsolete.                
            </javadoc>
            <method name="isObsolete" type="boolean" line="30">
                <params>
                    <param name="cached" type="SnmpCachedData"/>
                </params>
            </method>
            <javadoc line="35">
                Returns the cached table data.
                  Returns null if the cached data is obsolete, or if there is no
                  cached data, or if the cached data was garbage collected.                
                <return>
                    a still valid cached data or null.                    
                </return>
            </javadoc>
            <method name="getCachedDatas" type="SnmpCachedData" line="41">
                <declaration name="cached" type="SnmpCachedData" line="43"/>
            </method>
            <javadoc line="47">
                Returns the cached table data, if it is still valid,
                  or recompute it if it is obsolete.
                  &lt;p&gt;
                  When cache data is recomputed, store it in the weak reference,
                  unless {@link #validity} is 0: then the data will not be stored
                  at all.&lt;br&gt;
                  This method calls {@link #isObsolete(SnmpCachedData)} to determine
                  whether the cached data is obsolete, and {{@link #updateCachedDatas(Object)} to recompute it.
                  &lt;/p&gt;                
                <param>
                    context A context object.                    
                </param>
                <return>
                    the valid cached data, or the recomputed table data.                    
                </return>
            </javadoc>
            <method name="getTableDatas" type="SnmpCachedData" line="60">
                <params>
                    <param name="context" type="Object"/>
                </params>
                <declaration name="cached" type="SnmpCachedData" line="61"/>
                <declaration name="computedDatas" type="SnmpCachedData" line="63"/>
            </method>
            <method name="updateCachedDatas" type="SnmpCachedData" line="67"/>
            <javadoc line="67">
                Recompute cached data.                
                <param>
                    context A context object, as passed to{@link #getTableDatas(Object)}                    
                </param>
            </javadoc>
            <method name="getTableHandler" type="SnmpTableHandler" line="72"/>
            <javadoc line="72">
                Return a table handler that holds the table data.
                  This method should return the cached table data if it is still
                  valid, recompute it and cache the new value if it&apos;s not.                
            </javadoc>
        </class>
    </source>