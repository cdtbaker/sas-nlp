<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.management.snmp.util">
        <import package="com.sun.jmx.snmp.SnmpOid"/>
        <import package="java.io.Serializable"/>
        <import package="java.util.Comparator"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.TreeMap"/>
        <import package="java.util.List"/>
        <import package="java.util.Iterator"/>
        <import package="java.lang.ref.WeakReference"/>
        <class name="SnmpListTableCache" line="10">
            <extends class="SnmpTableCache"/>
            <javadoc line="10">
                This abstract class implements a weak cache for a table whose data
                  is obtained from a {@link List}.
                  &lt;p&gt;&lt;b&gt;NOTE: This class is not synchronized, subclasses must implement
                  the appropriate synchronization whwn needed.&lt;/b&gt;&lt;/p&gt;                
            </javadoc>
            <method name="getIndex" type="SnmpOid" line="17"/>
            <javadoc line="17">
                The index of the entry corresponding to the given &lt;var&gt;item&lt;/var&gt;.
                  &lt;br&gt;This method is called by {@link #updateCachedDatas(Object,List)}.
                  The given &lt;var&gt;item&lt;/var&gt; is expected to be always associated with
                  the same index.                
                <param>
                    context The context passed to{@link #updateCachedDatas(Object,List)}.                    
                </param>
                <param>
                    rawDatas Raw table datas passed to{@link #updateCachedDatas(Object,List)}.                    
                </param>
                <param>
                    rank Rank of the given <var>item</var> in the
                      <var>rawDatas</var> list iterator.                    
                </param>
                <param>
                    item The raw data object for which an index must be determined.                    
                </param>
            </javadoc>
            <javadoc line="29">
                The data for the entry corresponding to the given &lt;var&gt;item&lt;/var&gt;.
                  &lt;br&gt;This method is called by {@link #updateCachedDatas(Object,List)}.                
                <param>
                    context The context passed to{@link #updateCachedDatas(Object,List)}.                    
                </param>
                <param>
                    rawDatas Raw table datas passed to{@link #updateCachedDatas(Object,List)}.                    
                </param>
                <param>
                    rank Rank of the given <var>item</var> in the
                      <var>rawDatas</var> list iterator.                    
                </param>
                <param>
                    item The raw data object from which the entry data must be
                      extracted.                    
                </param>
                <return>
                    By default <var>item</var> is returned.                    
                </return>
            </javadoc>
            <method name="getData" type="Object" line="40">
                <params>
                    <param name="context" type="Object"/>
                    <param name="rawDatas" type="List"/>
                    <param name="rank" type="int"/>
                    <param name="item" type="Object"/>
                </params>
            </method>
            <javadoc line="43">
                Recompute cached data.                
                <param>
                    context A context object, valid during the duration of
                      of the call to this method, and that will be passed to{@link #getIndex} and {@link #getData}. <br>
                      This method is intended to be called by{@link #updateCachedDatas(Object)}. It is assumed that
                      the context is be allocated by  before this method is called,
                      and released just after this method has returned.<br>
                      This class does not use the context object: it is a simple
                      hook for subclassed.                    
                </param>
                <param>
                    rawDatas The table datas from which the cached data will be
                      computed.                    
                </param>
                <return>
                    the computed cached data.                    
                </return>
            </javadoc>
            <method name="updateCachedDatas" type="SnmpCachedData" line="56">
                <params>
                    <param name="context" type="Object"/>
                    <param name="rawDatas" type="List"/>
                </params>
                <declaration name="size" type="int" line="57"/>
                <declaration name="time" type="long" line="59"/>
                <declaration name="it" type="Iterator" line="60"/>
                <declaration name="map" type="TreeMap&lt;SnmpOid,Object&gt;" line="61"/>
                <scope line="62">
                    <declaration name="item" type="Object" line="63"/>
                    <declaration name="index" type="SnmpOid" line="64"/>
                    <declaration name="data" type="Object" line="65"/>
                </scope>
            </method>
        </class>
    </source>