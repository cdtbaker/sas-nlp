<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.management.snmp.jvminstr">
        <import package="com.sun.jmx.mbeanserver.Util"/>
        <import package="java.io.Serializable"/>
        <import package="java.util.Vector"/>
        <import package="java.util.Map"/>
        <import package="java.util.TreeMap"/>
        <import package="java.util.Enumeration"/>
        <import package="java.lang.management.ThreadInfo"/>
        <import package="java.lang.management.ManagementFactory"/>
        <import package="javax.management.MBeanServer"/>
        <import package="javax.management.ObjectName"/>
        <import package="com.sun.jmx.snmp.SnmpCounter"/>
        <import package="com.sun.jmx.snmp.SnmpCounter64"/>
        <import package="com.sun.jmx.snmp.SnmpGauge"/>
        <import package="com.sun.jmx.snmp.SnmpInt"/>
        <import package="com.sun.jmx.snmp.SnmpUnsignedInt"/>
        <import package="com.sun.jmx.snmp.SnmpIpAddress"/>
        <import package="com.sun.jmx.snmp.SnmpTimeticks"/>
        <import package="com.sun.jmx.snmp.SnmpOpaque"/>
        <import package="com.sun.jmx.snmp.SnmpString"/>
        <import package="com.sun.jmx.snmp.SnmpStringFixed"/>
        <import package="com.sun.jmx.snmp.SnmpOid"/>
        <import package="com.sun.jmx.snmp.SnmpNull"/>
        <import package="com.sun.jmx.snmp.SnmpValue"/>
        <import package="com.sun.jmx.snmp.SnmpVarBind"/>
        <import package="com.sun.jmx.snmp.SnmpStatusException"/>
        <import package="com.sun.jmx.snmp.agent.SnmpIndex"/>
        <import package="com.sun.jmx.snmp.agent.SnmpMib"/>
        <import package="com.sun.jmx.snmp.agent.SnmpMibTable"/>
        <import package="com.sun.jmx.snmp.agent.SnmpMibSubRequest"/>
        <import package="com.sun.jmx.snmp.agent.SnmpStandardObjectServer"/>
        <import package="sun.management.snmp.jvmmib.JvmThreadInstanceEntryMBean"/>
        <import package="sun.management.snmp.jvmmib.JvmThreadInstanceTableMeta"/>
        <import package="sun.management.snmp.util.SnmpTableCache"/>
        <import package="sun.management.snmp.util.SnmpCachedData"/>
        <import package="sun.management.snmp.util.SnmpTableHandler"/>
        <import package="sun.management.snmp.util.MibLogger"/>
        <import package="sun.management.snmp.util.JvmContextFactory"/>
        <class name="JvmThreadInstanceTableMetaImpl" line="75">
            <extends class="JvmThreadInstanceTableMeta"/>
            <comment line="190">
                The weak cache for this table.                
            </comment>
            <comment line="207">
                See com.sun.jmx.snmp.agent.SnmpMibTable                
            </comment>
            <comment line="215">
                See com.sun.jmx.snmp.agent.SnmpMibTable                
            </comment>
            <comment line="251">
                See com.sun.jmx.snmp.agent.SnmpMibTable                
            </comment>
            <comment line="270">
                See com.sun.jmx.snmp.agent.SnmpMibTable                
            </comment>
            <javadoc line="75">
                The class is used for implementing the &quot;JvmThreadInstanceTable&quot; group.                
            </javadoc>
            <declaration name="MAX_STACK_TRACE_DEPTH" type="int" line="81"/>
            <javadoc line="81">
                Maximum depth of the stacktrace that might be returned through
                  SNMP.
                  Since we do not export the stack trace through SNMP, we set
                  MAX_STACK_TRACE_DEPTH=0 so that ThreadMXBean.getThreadInfo(long) does
                  not compute the stack trace.                
            </javadoc>
            <javadoc line="92">
                Translate from a long to a Oid. Arc follow the long big-endian order.                
                <param>
                    l The long to make the index from                    
                </param>
                <return>
                    The arc array.                    
                </return>
            </javadoc>
            <method name="makeOid" type="SnmpOid" line="97">
                <params>
                    <param name="l" type="long"/>
                </params>
                <declaration name="x" type="long[]" line="98"/>
            </method>
            <javadoc line="110">
                Translate an Oid to a thread id. Arc follow the long big-endian order.                
                <param>
                    oid The oid to make the id from                    
                </param>
                <return>
                    The thread id.                    
                </return>
            </javadoc>
            <method name="makeId" type="long" line="115">
                <params>
                    <param name="oid" type="SnmpOid"/>
                </params>
                <declaration name="id" type="long" line="116"/>
                <declaration name="arcs" type="long[]" line="117"/>
            </method>
            <class name="JvmThreadInstanceTableCache" line="131">
                <extends class="SnmpTableCache"/>
                <javadoc line="131">
                    A concrete implementation of {@link SnmpTableCache}, for the
                      JvmThreadInstanceTable.                    
                </javadoc>
                <declaration name="meta" type="JvmThreadInstanceTableMetaImpl" line="138"/>
                <javadoc line="140">
                    Create a weak cache for the JvmThreadInstanceTable.                    
                    <param>
                        validity validity of the cached data, in ms.                        
                    </param>
                </javadoc>
                <method name="JvmThreadInstanceTableCache" type="constructor" line="145">
                    <params>
                        <param name="meta" type="JvmThreadInstanceTableMetaImpl"/>
                        <param name="validity" type="long"/>
                    </params>
                </method>
                <javadoc line="150">
                    Call &lt;code&gt;getTableDatas(JvmContextFactory.getUserData())&lt;/code&gt;.                    
                </javadoc>
                <method name="getTableHandler" type="SnmpTableHandler" line="153">
                    <declaration name="userData" type="Map" line="154"/>
                </method>
                <javadoc line="158">
                    Return a table handler containing the Thread indexes.
                      Indexes are computed from the ThreadId.                    
                </javadoc>
                <method name="updateCachedDatas" type="SnmpCachedData" line="162">
                    <params>
                        <param name="userData" type="Object"/>
                    </params>
                    <comment line="164">
                        We are getting all the thread ids. WARNING.                        
                    </comment>
                    <comment line="165">
                        Some of them will be not valid when accessed for data...                        
                    </comment>
                    <comment line="166">
                        See getEntry                        
                    </comment>
                    <comment line="170">
                        Time stamp for the cache                        
                    </comment>
                    <comment line="178">
                        indexes[i] = makeOid(id[i]);                        
                    </comment>
                    <declaration name="id" type="long[]" line="167"/>
                    <declaration name="time" type="long" line="171"/>
                    <declaration name="indexes" type="SnmpOid" line="173"/>
                    <declaration name="table" type="TreeMap&lt;SnmpOid,Object&gt;" line="174"/>
                    <scope line="176">
                        <declaration name="oid" type="SnmpOid" line="179"/>
                    </scope>
                </method>
            </class>
            <declaration name="cache" type="SnmpTableCache" line="190"/>
            <javadoc line="192">
                Constructor for the table. Initialize metadata for
                  &quot;JvmThreadInstanceTableMeta&quot;.
                  The reference on the MBean server is updated so the entries created
                  through an SNMP SET will be AUTOMATICALLY REGISTERED in Java DMK.                
            </javadoc>
            <method name="JvmThreadInstanceTableMetaImpl" type="constructor" line="199">
                <params>
                    <param name="myMib" type="SnmpMib"/>
                    <param name="objserv" type="SnmpStandardObjectServer"/>
                </params>
            </method>
            <method name="getNextOid" type="SnmpOid" line="208">
                <params>
                    <param name="userData" type="Object"/>
                </params>
                <comment line="210">
                    null means get the first OID.                    
                </comment>
            </method>
            <method name="getNextOid" type="SnmpOid" line="216">
                <params>
                    <param name="oid" type="SnmpOid"/>
                    <param name="userData" type="Object"/>
                </params>
                <comment line="220">
                    Get the data handler.                    
                </comment>
                <comment line="221">
                                        
                </comment>
                <comment line="224">
                    This should never happen.                    
                </comment>
                <comment line="225">
                    If we get here it&apos;s a bug.                    
                </comment>
                <comment line="226">
                                        
                </comment>
                <comment line="231">
                    Get the next oid                    
                </comment>
                <comment line="232">
                                        
                </comment>
                <comment line="242">
                    if next is null: we reached the end of the table.                    
                </comment>
                <comment line="243">
                                        
                </comment>
                <declaration name="handler" type="SnmpTableHandler" line="222"/>
                <scope line="223"/>
                <declaration name="next" type="SnmpOid" line="233"/>
                <scope line="234"/>
            </method>
            <method name="contains" type="boolean" line="251">
                <params>
                    <param name="oid" type="SnmpOid"/>
                    <param name="userData" type="Object"/>
                </params>
                <comment line="253">
                    Get the handler.                    
                </comment>
                <comment line="254">
                                        
                </comment>
                <comment line="257">
                    handler should never be null.                    
                </comment>
                <comment line="258">
                                        
                </comment>
                <declaration name="handler" type="SnmpTableHandler" line="255"/>
                <declaration name="inst" type="JvmThreadInstanceEntryImpl" line="264"/>
            </method>
            <method name="getEntry" type="Object" line="271">
                <params>
                    <param name="oid" type="SnmpOid"/>
                </params>
                <comment line="278">
                    Get the request contextual cache (userData).                    
                </comment>
                <comment line="279">
                                        
                </comment>
                <comment line="282">
                    Get the handler.                    
                </comment>
                <comment line="283">
                                        
                </comment>
                <comment line="286">
                    handler should never be null.                    
                </comment>
                <comment line="287">
                                        
                </comment>
                <scope line="273"/>
                <declaration name="m" type="Map" line="280"/>
                <declaration name="handler" type="SnmpTableHandler" line="284"/>
                <declaration name="entry" type="JvmThreadInstanceEntryImpl" line="291"/>
            </method>
            <javadoc line="299">
                Get the SnmpTableHandler that holds the jvmThreadInstanceTable data.
                  First look it up in the request contextual cache, and if it is
                  not found, obtain it from the weak cache.
                  &lt;br&gt;The request contextual cache will be released at the end of the
                  current requests, and is used only to process this request.
                  &lt;br&gt;The weak cache is shared by all requests, and is only
                  recomputed when it is found to be obsolete.
                  &lt;br&gt;Note that the data put in the request contextual cache is
                  never considered to be obsolete, in order to preserve data
                  coherency.                
            </javadoc>
            <method name="getHandler" type="SnmpTableHandler" line="311">
                <params>
                    <param name="userData" type="Object"/>
                </params>
                <comment line="316">
                    Look in the contextual cache.                    
                </comment>
                <comment line="323">
                    No handler in contextual cache, make a new one.                    
                </comment>
                <declaration name="m" type="Map&lt;Object,Object&gt;" line="312"/>
                <scope line="317">
                    <declaration name="handler" type="SnmpTableHandler" line="318"/>
                </scope>
                <declaration name="handler" type="SnmpTableHandler" line="324"/>
            </method>
            <method name="getThreadInfo" type="ThreadInfo" line="332">
                <params>
                    <param name="id" type="long"/>
                </params>
            </method>
            <method name="getThreadInfo" type="ThreadInfo" line="337">
                <params>
                    <param name="oid" type="SnmpOid"/>
                </params>
            </method>
            <method name="getJvmThreadInstance" type="JvmThreadInstanceEntryImpl" line="342">
                <params>
                    <param name="userData" type="Object"/>
                    <param name="oid" type="SnmpOid"/>
                </params>
                <comment line="351">
                    We&apos;re going to use this name to store/retrieve the entry in                    
                </comment>
                <comment line="352">
                    the request contextual cache.                    
                </comment>
                <comment line="353">
                                        
                </comment>
                <comment line="354">
                    Revisit: Probably better programming to put all these strings                    
                </comment>
                <comment line="355">
                    in some interface.                    
                </comment>
                <comment line="356">
                                        
                </comment>
                <comment line="362">
                    If the entry is in the cache, simply return it.                    
                </comment>
                <comment line="363">
                                        
                </comment>
                <comment line="373">
                    Entry not in cache. We will create one if needed.                    
                </comment>
                <comment line="374">
                                        
                </comment>
                <comment line="384">
                    No thread by that id =&gt; no entry.                    
                </comment>
                <comment line="385">
                                        
                </comment>
                <declaration name="cached" type="JvmThreadInstanceEntryImpl" line="343"/>
                <declaration name="entryTag" type="String" line="344"/>
                <declaration name="map" type="Map&lt;Object,Object&gt;" line="345"/>
                <declaration name="dbg" type="boolean" line="346"/>
                <scope line="348"/>
                <scope line="364"/>
                <declaration name="info" type="ThreadInfo" line="375"/>
                <scope line="376"/>
                <scope line="378"/>
                <scope line="386"/>
            </method>
            <declaration name="log" type="MibLogger" line="399"/>
        </class>
    </source>