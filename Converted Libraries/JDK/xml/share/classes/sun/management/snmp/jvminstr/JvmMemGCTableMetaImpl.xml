<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.management.snmp.jvminstr">
        <import package="java.io.Serializable"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="java.util.TreeMap"/>
        <import package="com.sun.jmx.snmp.SnmpOid"/>
        <import package="com.sun.jmx.snmp.SnmpStatusException"/>
        <import package="com.sun.jmx.snmp.agent.SnmpMib"/>
        <import package="com.sun.jmx.snmp.agent.SnmpStandardObjectServer"/>
        <import package="java.lang.management.MemoryManagerMXBean"/>
        <import package="java.lang.management.GarbageCollectorMXBean"/>
        <import package="java.lang.management.ManagementFactory"/>
        <import package="sun.management.snmp.jvmmib.JvmMemGCTableMeta"/>
        <import package="sun.management.snmp.util.SnmpCachedData"/>
        <import package="sun.management.snmp.util.SnmpTableCache"/>
        <import package="sun.management.snmp.util.SnmpTableHandler"/>
        <import package="sun.management.snmp.util.MibLogger"/>
        <import package="sun.management.snmp.util.JvmContextFactory"/>
        <class name="JvmMemGCTableMetaImpl" line="56">
            <extends class="JvmMemGCTableMeta"/>
            <comment line="197">
                Returns a pointer to the JvmMemManager meta node - we&apos;re going                
            </comment>
            <comment line="198">
                to reuse its SnmpTableHandler by filtering out all that is                
            </comment>
            <comment line="199">
                not a GarbageCollectorMXBean.                
            </comment>
            <comment line="216">
                See com.sun.jmx.snmp.agent.SnmpMibTable                
            </comment>
            <comment line="223">
                See com.sun.jmx.snmp.agent.SnmpMibTable                
            </comment>
            <comment line="264">
                See com.sun.jmx.snmp.agent.SnmpMibTable                
            </comment>
            <comment line="277">
                See com.sun.jmx.snmp.agent.SnmpMibTable                
            </comment>
            <javadoc line="56">
                The class is used for implementing the &quot;JvmMemGCTable&quot; table.                
            </javadoc>
            <class name="GCTableFilter" line="61">
                <javadoc line="61">
                    This class acts as a filter over the SnmpTableHandler
                      used for the JvmMemoryManagerTable. It filters out
                      (skip) all MemoryManagerMXBean that are not instances of
                      GarbageCollectorMXBean so that only Garbage Collectors are
                      seen. This is a better solution than relying on
                      ManagementFactory.getGarbageCollectorMXBeans() because it makes it
                      possible to guarantee the consistency betwen the MemoryManager table
                      and the GCTable since both will be sharing the same cache.                    
                </javadoc>
                <javadoc line="73">
                    Returns the index that immediately follows the given
                      &lt;var&gt;index&lt;/var&gt;. The returned index is strictly greater
                      than the given &lt;var&gt;index&lt;/var&gt;, and is contained in the table.
                      &lt;br&gt;If the given &lt;var&gt;index&lt;/var&gt; is null, returns the first
                      index in the table.
                      &lt;br&gt;If there are no index after the given &lt;var&gt;index&lt;/var&gt;,
                      returns null.
                      This method is an optimization for the case where the
                      SnmpTableHandler is in fact an instance of SnmpCachedData.                    
                </javadoc>
                <method name="getNext" type="SnmpOid" line="84">
                    <params>
                        <param name="datas" type="SnmpCachedData"/>
                        <param name="index" type="SnmpOid"/>
                    </params>
                    <comment line="88">
                        We&apos;re going to loop until we find an instance of                        
                    </comment>
                    <comment line="89">
                        GarbageCollectorMXBean. First we attempt to find                        
                    </comment>
                    <comment line="90">
                        the next element whose OID follows the given index.                        
                    </comment>
                    <comment line="91">
                        If `index&apos; is null, the insertion point is -1                        
                    </comment>
                    <comment line="92">
                        (the next is 0 = -insertion - 1)                        
                    </comment>
                    <comment line="93">
                                                
                    </comment>
                    <comment line="102">
                        Now `next&apos; points to the element that imediately                        
                    </comment>
                    <comment line="103">
                        follows the given `index&apos;. We&apos;re going to loop                        
                    </comment>
                    <comment line="104">
                        through the table, starting at `next&apos; (included),                        
                    </comment>
                    <comment line="105">
                        and return the first element which is an instance                        
                    </comment>
                    <comment line="106">
                        of GarbageCollectorMXBean.                        
                    </comment>
                    <comment line="107">
                                                
                    </comment>
                    <comment line="114">
                        That&apos;s the next: return it.                        
                    </comment>
                    <comment line="124">
                        skip to next index...                        
                    </comment>
                    <declaration name="dbg" type="boolean" line="86"/>
                    <declaration name="insertion" type="int" line="94"/>
                    <declaration name="next" type="int" line="98"/>
                    <scope line="108">
                        <declaration name="value" type="Object" line="110"/>
                        <scope line="113"/>
                    </scope>
                </method>
                <javadoc line="129">
                    Returns the index that immediately follows the given
                      &lt;var&gt;index&lt;/var&gt;. The returned index is strictly greater
                      than the given &lt;var&gt;index&lt;/var&gt;, and is contained in the table.
                      &lt;br&gt;If the given &lt;var&gt;index&lt;/var&gt; is null, returns the first
                      index in the table.
                      &lt;br&gt;If there are no index after the given &lt;var&gt;index&lt;/var&gt;,
                      returns null.                    
                </javadoc>
                <method name="getNext" type="SnmpOid" line="138">
                    <params>
                        <param name="handler" type="SnmpTableHandler"/>
                        <param name="index" type="SnmpOid"/>
                    </params>
                    <comment line="140">
                        try to call the optimized method                        
                    </comment>
                    <comment line="144">
                        too bad - revert to non-optimized generic algorithm                        
                    </comment>
                    <comment line="150">
                        That&apos;s the next! return it                        
                    </comment>
                    <comment line="152">
                        skip to next index...                        
                    </comment>
                    <declaration name="next" type="SnmpOid" line="145"/>
                    <scope line="146">
                        <declaration name="value" type="Object" line="148"/>
                    </scope>
                </method>
                <javadoc line="157">
                    Returns the data associated with the given index.
                      If the given index is not found, null is returned.
                      Note that returning null does not necessarily means that
                      the index was not found.                    
                </javadoc>
                <method name="getData" type="Object" line="163">
                    <params>
                        <param name="handler" type="SnmpTableHandler"/>
                        <param name="index" type="SnmpOid"/>
                    </params>
                    <comment line="166">
                        Behaves as if there was nothing at this index...                        
                    </comment>
                    <comment line="167">
                                                
                    </comment>
                    <declaration name="value" type="Object" line="164"/>
                </method>
                <javadoc line="171">
                    Returns true if the given &lt;var&gt;index&lt;/var&gt; is present.                    
                </javadoc>
                <method name="contains" type="boolean" line="174">
                    <params>
                        <param name="handler" type="SnmpTableHandler"/>
                        <param name="index" type="SnmpOid"/>
                    </params>
                    <comment line="177">
                        Behaves as if there was nothing at this index...                        
                    </comment>
                    <comment line="178">
                                                
                    </comment>
                </method>
            </class>
            <declaration name="managers" type="JvmMemManagerTableMetaImpl" line="184"/>
            <declaration name="filter" type="GCTableFilter" line="185"/>
            <javadoc line="188">
                Constructor for the table. Initialize metadata for &quot;JvmMemGCTableMeta&quot;.                
            </javadoc>
            <method name="JvmMemGCTableMetaImpl" type="constructor" line="192">
                <params>
                    <param name="myMib" type="SnmpMib"/>
                    <param name="objserv" type="SnmpStandardObjectServer"/>
                </params>
            </method>
            <method name="getManagers" type="JvmMemManagerTableMetaImpl" line="199">
                <params>
                    <param name="mib" type="SnmpMib"/>
                </params>
                <scope line="200"/>
            </method>
            <javadoc line="207">
                Returns the JvmMemManagerTable SnmpTableHandler                
            </javadoc>
            <method name="getHandler" type="SnmpTableHandler" line="210">
                <params>
                    <param name="userData" type="Object"/>
                </params>
                <declaration name="managerTable" type="JvmMemManagerTableMetaImpl" line="211"/>
            </method>
            <method name="getNextOid" type="SnmpOid" line="217">
                <params>
                    <param name="userData" type="Object"/>
                </params>
                <comment line="218">
                    null means get the first OID.                    
                </comment>
            </method>
            <method name="getNextOid" type="SnmpOid" line="224">
                <params>
                    <param name="oid" type="SnmpOid"/>
                    <param name="userData" type="Object"/>
                </params>
                <comment line="229">
                    Get the data handler.                    
                </comment>
                <comment line="230">
                                        
                </comment>
                <comment line="233">
                    This should never happen.                    
                </comment>
                <comment line="234">
                    If we get here it&apos;s a bug.                    
                </comment>
                <comment line="235">
                                        
                </comment>
                <comment line="242">
                    Get the next oid, using the GC filter.                    
                </comment>
                <comment line="243">
                                        
                </comment>
                <comment line="247">
                    if next is null: we reached the end of the table.                    
                </comment>
                <comment line="248">
                                        
                </comment>
                <comment line="255">
                    debug. This should never happen.                    
                </comment>
                <comment line="256">
                                        
                </comment>
                <declaration name="dbg" type="boolean" line="225"/>
                <scope line="226">
                    <declaration name="handler" type="SnmpTableHandler" line="231"/>
                    <scope line="232"/>
                    <declaration name="next" type="SnmpOid" line="244"/>
                </scope>
                <scope line="254"/>
            </method>
            <method name="contains" type="boolean" line="264">
                <params>
                    <param name="oid" type="SnmpOid"/>
                    <param name="userData" type="Object"/>
                </params>
                <comment line="265">
                    Get the handler.                    
                </comment>
                <comment line="266">
                                        
                </comment>
                <comment line="269">
                    handler should never be null.                    
                </comment>
                <comment line="270">
                                        
                </comment>
                <declaration name="handler" type="SnmpTableHandler" line="267"/>
            </method>
            <method name="getEntry" type="Object" line="278">
                <params>
                    <param name="oid" type="SnmpOid"/>
                </params>
                <comment line="283">
                    Get the request contextual cache (userData).                    
                </comment>
                <comment line="284">
                                        
                </comment>
                <comment line="287">
                    First look in the request contextual cache: maybe we&apos;ve already                    
                </comment>
                <comment line="288">
                    created this entry...                    
                </comment>
                <comment line="289">
                                        
                </comment>
                <comment line="291">
                    We know in the case of this table that the index is an integer,                    
                </comment>
                <comment line="292">
                    it is thus the first OID arc of the index OID.                    
                </comment>
                <comment line="293">
                                        
                </comment>
                <comment line="296">
                    We&apos;re going to use this name to store/retrieve the entry in                    
                </comment>
                <comment line="297">
                    the request contextual cache.                    
                </comment>
                <comment line="298">
                                        
                </comment>
                <comment line="299">
                    Revisit: Probably better programming to put all these strings                    
                </comment>
                <comment line="300">
                    in some interface.                    
                </comment>
                <comment line="301">
                                        
                </comment>
                <comment line="305">
                    If the entry is in the cache, simply return it.                    
                </comment>
                <comment line="306">
                                        
                </comment>
                <comment line="312">
                    Entry was not in request cache. Make a new one.                    
                </comment>
                <comment line="313">
                                        
                </comment>
                <comment line="314">
                    Get the data hanler.                    
                </comment>
                <comment line="315">
                                        
                </comment>
                <comment line="318">
                    handler should never be null.                    
                </comment>
                <comment line="319">
                                        
                </comment>
                <comment line="323">
                    Use the filter to retrieve only GarabageCollectorMBean data.                    
                </comment>
                <comment line="324">
                                        
                </comment>
                <comment line="327">
                    data may be null if the OID we were given is not valid.                    
                </comment>
                <comment line="328">
                    (e.g. it identifies a MemoryManager which is not a                    
                </comment>
                <comment line="329">
                    GarbageCollector)                    
                </comment>
                <comment line="330">
                                        
                </comment>
                <comment line="334">
                    Make a new entryy (transient object that will be kept only                    
                </comment>
                <comment line="335">
                    for the duration of the request.                    
                </comment>
                <comment line="336">
                                        
                </comment>
                <comment line="340">
                    Put the entry in the request cache in case we need it later                    
                </comment>
                <comment line="341">
                    in the processing of the request. Note that we could have                    
                </comment>
                <comment line="342">
                    optimized this by making JvmMemGCEntryImpl extend                    
                </comment>
                <comment line="343">
                    JvmMemManagerEntryImpl, and then make sure that                    
                </comment>
                <comment line="344">
                    JvmMemManagerTableMetaImpl creates an instance of JvmMemGCEntryImpl                    
                </comment>
                <comment line="345">
                    instead of JvmMemManagerEntryImpl when the associated data is                    
                </comment>
                <comment line="346">
                    an instance of GarbageCollectorMXBean. This would have made it                    
                </comment>
                <comment line="347">
                    possible to share the transient entry object.                    
                </comment>
                <comment line="348">
                    As it is, we may have two transient objects that points to                    
                </comment>
                <comment line="349">
                    the same underlying MemoryManagerMXBean (which is definitely                    
                </comment>
                <comment line="350">
                    not a problem - but is only a small dysatisfaction)                    
                </comment>
                <comment line="351">
                                        
                </comment>
                <declaration name="m" type="Map&lt;Object,Object&gt;" line="285"/>
                <declaration name="index" type="long" line="294"/>
                <declaration name="entryTag" type="String" line="302"/>
                <scope line="307">
                    <declaration name="entry" type="Object" line="308"/>
                </scope>
                <declaration name="handler" type="SnmpTableHandler" line="316"/>
                <declaration name="data" type="Object" line="325"/>
                <declaration name="entry" type="Object" line="337"/>
                <scope line="352"/>
            </method>
            <declaration name="log" type="MibLogger" line="359"/>
        </class>
    </source>