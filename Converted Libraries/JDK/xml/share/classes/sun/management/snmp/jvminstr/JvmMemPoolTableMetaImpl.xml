<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.management.snmp.jvminstr">
        <import package="com.sun.jmx.mbeanserver.Util"/>
        <import package="java.io.Serializable"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="java.util.TreeMap"/>
        <import package="javax.management.MBeanServer"/>
        <import package="javax.management.ObjectName"/>
        <import package="com.sun.jmx.snmp.SnmpOid"/>
        <import package="com.sun.jmx.snmp.SnmpStatusException"/>
        <import package="com.sun.jmx.snmp.agent.SnmpMib"/>
        <import package="com.sun.jmx.snmp.agent.SnmpMibSubRequest"/>
        <import package="com.sun.jmx.snmp.agent.SnmpStandardObjectServer"/>
        <import package="java.lang.management.MemoryPoolMXBean"/>
        <import package="java.lang.management.ManagementFactory"/>
        <import package="sun.management.snmp.jvmmib.JvmMemPoolTableMeta"/>
        <import package="sun.management.snmp.util.SnmpTableCache"/>
        <import package="sun.management.snmp.util.SnmpNamedListTableCache"/>
        <import package="sun.management.snmp.util.SnmpTableHandler"/>
        <import package="sun.management.snmp.util.MibLogger"/>
        <import package="sun.management.snmp.util.JvmContextFactory"/>
        <class name="JvmMemPoolTableMetaImpl" line="59">
            <extends class="JvmMemPoolTableMeta"/>
            <comment line="122">
                The weak cache for this table.                
            </comment>
            <comment line="138">
                See com.sun.jmx.snmp.agent.SnmpMibTable                
            </comment>
            <comment line="145">
                See com.sun.jmx.snmp.agent.SnmpMibTable                
            </comment>
            <comment line="188">
                See com.sun.jmx.snmp.agent.SnmpMibTable                
            </comment>
            <comment line="203">
                See com.sun.jmx.snmp.agent.SnmpMibTable                
            </comment>
            <javadoc line="59">
                The class is used for implementing the &quot;JvmMemPoolTable&quot; group.                
            </javadoc>
            <class name="JvmMemPoolTableCache" line="64">
                <extends class="SnmpNamedListTableCache"/>
                <javadoc line="64">
                    A concrete implementation of {@link SnmpNamedListTableCache}, for the
                      jvmMemPoolTable.                    
                </javadoc>
                <javadoc line="69">
                    Create a weak cache for the jvmMemPoolTable.                    
                    <param>
                        validity validity of the cached data, in ms.                        
                    </param>
                </javadoc>
                <method name="JvmMemPoolTableCache" type="constructor" line="73">
                    <params>
                        <param name="validity" type="long"/>
                    </params>
                </method>
                <javadoc line="77">
                    Use the MemoryPoolMXBean name as key.                    
                    <param>
                        context A {@link TreeMap} as allocated by the parent{@link SnmpNamedListTableCache} class.                        
                    </param>
                    <param>
                        rawDatas List of {@link MemoryPoolMXBean}, as
                          returned by
                          <code>ManagementFactory.getMemoryPoolMXBeans()</code>                        
                    </param>
                    <param>
                        rank The <var>rank</var> of <var>item</var> in the list.                        
                    </param>
                    <param>
                        item The <var>rank</var><super>th</super>
                          <code>MemoryPoolMXBean</code> in the list.                        
                    </param>
                    <return>
                        <code>((MemoryPoolMXBean)item).getName()</code>                        
                    </return>
                </javadoc>
                <method name="getKey" type="String" line="90">
                    <params>
                        <param name="context" type="Object"/>
                        <param name="rawDatas" type="List"/>
                        <param name="rank" type="int"/>
                        <param name="item" type="Object"/>
                    </params>
                    <declaration name="name" type="String" line="92"/>
                </method>
                <javadoc line="97">
                    Call &lt;code&gt;getTableDatas(JvmContextFactory.getUserData())&lt;/code&gt;.                    
                </javadoc>
                <method name="getTableHandler" type="SnmpTableHandler" line="100">
                    <declaration name="userData" type="Map" line="101"/>
                </method>
                <javadoc line="105">
                    Return the key used to cache the raw data of this table.                    
                </javadoc>
                <method name="getRawDatasKey" type="String" line="108"/>
                <javadoc line="112">
                    Call ManagementFactory.getMemoryPoolMXBeans() to
                      load the raw data of this table.                    
                </javadoc>
                <method name="loadRawDatas" type="List" line="116">
                    <params>
                        <param name="userData" type="Map"/>
                    </params>
                </method>
            </class>
            <declaration name="cache" type="SnmpTableCache" line="122"/>
            <javadoc line="124">
                Constructor for the table.
                  Initialize metadata for &quot;JvmMemPoolTableMeta&quot;.                
            </javadoc>
            <method name="JvmMemPoolTableMetaImpl" type="constructor" line="129">
                <params>
                    <param name="myMib" type="SnmpMib"/>
                    <param name="objserv" type="SnmpStandardObjectServer"/>
                </params>
            </method>
            <method name="getNextOid" type="SnmpOid" line="139">
                <params>
                    <param name="userData" type="Object"/>
                </params>
                <comment line="140">
                    null means get the first OID.                    
                </comment>
            </method>
            <method name="getNextOid" type="SnmpOid" line="146">
                <params>
                    <param name="oid" type="SnmpOid"/>
                    <param name="userData" type="Object"/>
                </params>
                <comment line="152">
                    Get the data handler.                    
                </comment>
                <comment line="153">
                                        
                </comment>
                <comment line="156">
                    This should never happen.                    
                </comment>
                <comment line="157">
                    If we get here it&apos;s a bug.                    
                </comment>
                <comment line="158">
                                        
                </comment>
                <comment line="164">
                    Get the next oid                    
                </comment>
                <comment line="165">
                                        
                </comment>
                <comment line="169">
                    if next is null: we reached the end of the table.                    
                </comment>
                <comment line="170">
                                        
                </comment>
                <declaration name="dbg" type="boolean" line="147"/>
                <scope line="148">
                    <declaration name="handler" type="SnmpTableHandler" line="154"/>
                    <scope line="155"/>
                    <declaration name="next" type="SnmpOid" line="166"/>
                </scope>
                <scope line="176"/>
                <scope line="179"/>
            </method>
            <method name="contains" type="boolean" line="188">
                <params>
                    <param name="oid" type="SnmpOid"/>
                    <param name="userData" type="Object"/>
                </params>
                <comment line="190">
                    Get the handler.                    
                </comment>
                <comment line="191">
                                        
                </comment>
                <comment line="194">
                    handler should never be null.                    
                </comment>
                <comment line="195">
                                        
                </comment>
                <declaration name="handler" type="SnmpTableHandler" line="192"/>
            </method>
            <method name="getEntry" type="Object" line="204">
                <params>
                    <param name="oid" type="SnmpOid"/>
                </params>
                <comment line="209">
                    Get the request contextual cache (userData).                    
                </comment>
                <comment line="210">
                                        
                </comment>
                <comment line="213">
                    We know in the case of this table that the index is an integer,                    
                </comment>
                <comment line="214">
                    it is thus the first OID arc of the index OID.                    
                </comment>
                <comment line="215">
                                        
                </comment>
                <comment line="218">
                    We&apos;re going to use this name to store/retrieve the entry in                    
                </comment>
                <comment line="219">
                    the request contextual cache.                    
                </comment>
                <comment line="220">
                                        
                </comment>
                <comment line="221">
                    Revisit: Probably better programming to put all these strings                    
                </comment>
                <comment line="222">
                    in some interface.                    
                </comment>
                <comment line="223">
                                        
                </comment>
                <comment line="227">
                    If the entry is in the cache, simply return it.                    
                </comment>
                <comment line="228">
                                        
                </comment>
                <comment line="234">
                    The entry was not in the cache, make a new one.                    
                </comment>
                <comment line="235">
                                        
                </comment>
                <comment line="236">
                    Get the data hanler.                    
                </comment>
                <comment line="237">
                                        
                </comment>
                <comment line="240">
                    handler should never be null.                    
                </comment>
                <comment line="241">
                                        
                </comment>
                <comment line="245">
                    Get the data associated with our entry.                    
                </comment>
                <comment line="246">
                                        
                </comment>
                <comment line="249">
                    data may be null if the OID we were given is not valid.                    
                </comment>
                <comment line="250">
                                        
                </comment>
                <comment line="254">
                    make the new entry (transient object that will be kept only                    
                </comment>
                <comment line="255">
                    for the duration of the request.                    
                </comment>
                <comment line="256">
                                        
                </comment>
                <comment line="262">
                    Put the entry in the cache in case we need it later while processing                    
                </comment>
                <comment line="263">
                    the request.                    
                </comment>
                <comment line="264">
                                        
                </comment>
                <declaration name="m" type="Map&lt;Object,Object&gt;" line="211"/>
                <declaration name="index" type="long" line="216"/>
                <declaration name="entryTag" type="String" line="224"/>
                <scope line="229">
                    <declaration name="entry" type="Object" line="230"/>
                </scope>
                <declaration name="handler" type="SnmpTableHandler" line="238"/>
                <declaration name="data" type="Object" line="247"/>
                <declaration name="entry" type="Object" line="259"/>
                <scope line="265"/>
            </method>
            <javadoc line="272">
                Get the SnmpTableHandler that holds the jvmMemPoolTable data.
                  First look it up in the request contextual cache, and if it is
                  not found, obtain it from the weak cache.
                  &lt;br&gt;The request contextual cache will be released at the end of the
                  current requests, and is used only to process this request.
                  &lt;br&gt;The weak cache is shared by all requests, and is only
                  recomputed when it is found to be obsolete.
                  &lt;br&gt;Note that the data put in the request contextual cache is
                  never considered to be obsolete, in order to preserve data
                  coherency.                
            </javadoc>
            <method name="getHandler" type="SnmpTableHandler" line="284">
                <params>
                    <param name="userData" type="Object"/>
                </params>
                <comment line="289">
                    Look in the contextual cache.                    
                </comment>
                <comment line="296">
                    No handler in contextual cache, make a new one.                    
                </comment>
                <declaration name="m" type="Map&lt;Object,Object&gt;" line="285"/>
                <scope line="290">
                    <declaration name="handler" type="SnmpTableHandler" line="291"/>
                </scope>
                <declaration name="handler" type="SnmpTableHandler" line="297"/>
            </method>
            <declaration name="log" type="MibLogger" line="305"/>
        </class>
    </source>