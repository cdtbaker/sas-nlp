<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.management.snmp.jvminstr">
        <import package="com.sun.jmx.mbeanserver.Util"/>
        <import package="java.io.Serializable"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="java.util.TreeMap"/>
        <import package="javax.management.MBeanServer"/>
        <import package="javax.management.ObjectName"/>
        <import package="com.sun.jmx.snmp.SnmpOid"/>
        <import package="com.sun.jmx.snmp.SnmpStatusException"/>
        <import package="com.sun.jmx.snmp.agent.SnmpMib"/>
        <import package="com.sun.jmx.snmp.agent.SnmpMibSubRequest"/>
        <import package="com.sun.jmx.snmp.agent.SnmpStandardObjectServer"/>
        <import package="java.lang.management.MemoryPoolMXBean"/>
        <import package="java.lang.management.ManagementFactory"/>
        <import package="sun.management.snmp.jvmmib.JvmMemPoolTableMeta"/>
        <import package="sun.management.snmp.util.SnmpTableCache"/>
        <import package="sun.management.snmp.util.SnmpNamedListTableCache"/>
        <import package="sun.management.snmp.util.SnmpTableHandler"/>
        <import package="sun.management.snmp.util.MibLogger"/>
        <import package="sun.management.snmp.util.JvmContextFactory"/>
        <class name="JvmMemPoolTableMetaImpl" line="22">
            <extends class="JvmMemPoolTableMeta"/>
            <javadoc line="22">
                The class is used for implementing the &quot;JvmMemPoolTable&quot; group.                
            </javadoc>
            <class name="JvmMemPoolTableCache" line="26">
                <extends class="SnmpNamedListTableCache"/>
                <javadoc line="26">
                    A concrete implementation of {@link SnmpNamedListTableCache}, for the
                      jvmMemPoolTable.                    
                </javadoc>
                <javadoc line="31">
                    Create a weak cache for the jvmMemPoolTable.                    
                    <param>
                        validity validity of the cached data, in ms.                        
                    </param>
                </javadoc>
                <method name="JvmMemPoolTableCache" type="constructor" line="35">
                    <params>
                        <param name="validity" type="long"/>
                    </params>
                </method>
                <javadoc line="38">
                    Use the MemoryPoolMXBean name as key.                    
                    <param>
                        context A {@link TreeMap} as allocated by the parent{@link SnmpNamedListTableCache} class.                        
                    </param>
                    <param>
                        rawDatas List of {@link MemoryPoolMXBean}, as
                          returned by
                          <code>ManagementFactory.getMemoryPoolMXBeans()</code>                        
                    </param>
                    <param>
                        rank The <var>rank</var> of <var>item</var> in the list.                        
                    </param>
                    <param>
                        item The <var>rank</var><super>th</super>
                          <code>MemoryPoolMXBean</code> in the list.                        
                    </param>
                    <return>
                        <code>((MemoryPoolMXBean)item).getName()</code>                        
                    </return>
                </javadoc>
                <method name="getKey" type="String" line="49">
                    <params>
                        <param name="context" type="Object"/>
                        <param name="rawDatas" type="List"/>
                        <param name="rank" type="int"/>
                        <param name="item" type="Object"/>
                    </params>
                    <declaration name="name" type="String" line="51"/>
                </method>
                <javadoc line="55">
                    Call &lt;code&gt;getTableDatas(JvmContextFactory.getUserData())&lt;/code&gt;.                    
                </javadoc>
                <method name="getTableHandler" type="SnmpTableHandler" line="58">
                    <declaration name="userData" type="Map" line="59"/>
                </method>
                <javadoc line="62">
                    Return the key used to cache the raw data of this table.                    
                </javadoc>
                <method name="getRawDatasKey" type="String" line="65"/>
                <javadoc line="68">
                    Call ManagementFactory.getMemoryPoolMXBeans() to
                      load the raw data of this table.                    
                </javadoc>
                <method name="loadRawDatas" type="List" line="72">
                    <params>
                        <param name="userData" type="Map"/>
                    </params>
                </method>
            </class>
            <declaration name="cache" type="SnmpTableCache" line="76"/>
            <javadoc line="77">
                Constructor for the table.
                  Initialize metadata for &quot;JvmMemPoolTableMeta&quot;.                
            </javadoc>
            <method name="JvmMemPoolTableMetaImpl" type="constructor" line="81">
                <params>
                    <param name="myMib" type="SnmpMib"/>
                    <param name="objserv" type="SnmpStandardObjectServer"/>
                </params>
            </method>
            <method name="getNextOid" type="SnmpOid" line="85">
                <params>
                    <param name="userData" type="Object"/>
                </params>
            </method>
            <method name="getNextOid" type="SnmpOid" line="88">
                <params>
                    <param name="oid" type="SnmpOid"/>
                    <param name="userData" type="Object"/>
                </params>
                <declaration name="dbg" type="boolean" line="89"/>
                <scope line="90">
                    <declaration name="handler" type="SnmpTableHandler" line="92"/>
                    <scope line="93"/>
                    <declaration name="next" type="SnmpOid" line="97"/>
                </scope>
                <scope line="102"/>
                <scope line="106"/>
            </method>
            <method name="contains" type="boolean" line="112">
                <params>
                    <param name="oid" type="SnmpOid"/>
                    <param name="userData" type="Object"/>
                </params>
                <declaration name="handler" type="SnmpTableHandler" line="113"/>
            </method>
            <method name="getEntry" type="Object" line="117">
                <params>
                    <param name="oid" type="SnmpOid"/>
                </params>
                <declaration name="m" type="Map&lt;Object,Object&gt;" line="119"/>
                <declaration name="index" type="long" line="120"/>
                <declaration name="entryTag" type="String" line="121"/>
                <scope line="122">
                    <declaration name="entry" type="Object" line="123"/>
                </scope>
                <declaration name="handler" type="SnmpTableHandler" line="126"/>
                <declaration name="data" type="Object" line="128"/>
                <declaration name="entry" type="Object" line="131"/>
                <scope line="132"/>
            </method>
            <javadoc line="137">
                Get the SnmpTableHandler that holds the jvmMemPoolTable data.
                  First look it up in the request contextual cache, and if it is
                  not found, obtain it from the weak cache.
                  &lt;br&gt;The request contextual cache will be released at the end of the
                  current requests, and is used only to process this request.
                  &lt;br&gt;The weak cache is shared by all requests, and is only
                  recomputed when it is found to be obsolete.
                  &lt;br&gt;Note that the data put in the request contextual cache is
                  never considered to be obsolete, in order to preserve data
                  coherency.                
            </javadoc>
            <method name="getHandler" type="SnmpTableHandler" line="149">
                <params>
                    <param name="userData" type="Object"/>
                </params>
                <declaration name="m" type="Map&lt;Object,Object&gt;" line="150"/>
                <scope line="153">
                    <declaration name="handler" type="SnmpTableHandler" line="154"/>
                </scope>
                <declaration name="handler" type="SnmpTableHandler" line="157"/>
            </method>
            <declaration name="log" type="MibLogger" line="161"/>
        </class>
    </source>