<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.management.snmp">
        <import package="com.sun.jmx.snmp.daemon.SnmpAdaptorServer"/>
        <import package="com.sun.jmx.snmp.InetAddressAcl"/>
        <import package="com.sun.jmx.snmp.IPAcl.SnmpAcl"/>
        <import package="sun.management.snmp.jvmmib.JVM_MANAGEMENT_MIB"/>
        <import package="sun.management.snmp.jvminstr.JVM_MANAGEMENT_MIB_IMPL"/>
        <import package="sun.management.snmp.jvminstr.NotificationTarget"/>
        <import package="sun.management.snmp.jvminstr.NotificationTargetImpl"/>
        <import package="sun.management.snmp.util.MibLogger"/>
        <import package="sun.management.snmp.util.JvmContextFactory"/>
        <import package="sun.management.Agent"/>
        <import package="sun.management.AgentConfigurationError"/>
        <import package="sun.management.AgentConfigurationError"/>
        <import package="sun.management.FileSystem"/>
        <import package="java.util.List"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.Properties"/>
        <import package="java.io.IOException"/>
        <import package="java.io.File"/>
        <import package="java.io.FileInputStream"/>
        <import package="java.net.InetAddress"/>
        <import package="java.net.UnknownHostException"/>
        <class name="AdaptorBootstrap" line="24">
            <javadoc line="24">
                This class initializes and starts the SNMP Adaptor for JSR 163 SNMP
                  Monitoring.                
            </javadoc>
            <declaration name="log" type="MibLogger" line="29"/>
            <interface name="DefaultValues">
                <javadoc line="30">
                    Default values for SNMP configuration properties.                    
                </javadoc>
                <declaration name="PORT" type="String" line="34"/>
                <declaration name="CONFIG_FILE_NAME" type="String" line="35"/>
                <declaration name="TRAP_PORT" type="String" line="36"/>
                <declaration name="USE_ACL" type="String" line="37"/>
                <declaration name="ACL_FILE_NAME" type="String" line="38"/>
                <declaration name="BIND_ADDRESS" type="String" line="39"/>
            </interface>
            <interface name="PropertyNames">
                <javadoc line="41">
                    Names of SNMP configuration properties.                    
                </javadoc>
                <declaration name="PORT" type="String" line="45"/>
                <declaration name="CONFIG_FILE_NAME" type="String" line="46"/>
                <declaration name="TRAP_PORT" type="String" line="47"/>
                <declaration name="USE_ACL" type="String" line="48"/>
                <declaration name="ACL_FILE_NAME" type="String" line="49"/>
                <declaration name="BIND_ADDRESS" type="String" line="50"/>
            </interface>
            <declaration name="adaptor" type="SnmpAdaptorServer" line="52"/>
            <javadoc line="52">
                We keep a reference - so that we can possibly call
                  terminate(). As of now, terminate() is only called by unit tests
                  (makes it possible to run several testcases sequentially in the
                  same JVM).                
            </javadoc>
            <declaration name="jvmmib" type="JVM_MANAGEMENT_MIB_IMPL" line="59"/>
            <method name="AdaptorBootstrap" type="constructor" line="60">
                <params>
                    <param name="snmpas" type="SnmpAdaptorServer"/>
                    <param name="mib" type="JVM_MANAGEMENT_MIB_IMPL"/>
                </params>
            </method>
            <javadoc line="64">
                Compute the full path name for a default file.                
                <param>
                    basename basename (with extension) of the default file.                    
                </param>
                <return>
                    ${JRE}/lib/management/${basename}                    
                </return>
            </javadoc>
            <method name="getDefaultFileName" type="String" line="69">
                <params>
                    <param name="basename" type="String"/>
                </params>
                <declaration name="fileSeparator" type="String" line="70"/>
            </method>
            <javadoc line="73">
                Retrieve the Trap Target List from the ACL file.                
            </javadoc>
            <method name="getTargetList" type="List&lt;NotificationTarget&gt;" line="76">
                <params>
                    <param name="acl" type="InetAddressAcl"/>
                    <param name="defaultTrapPort" type="int"/>
                </params>
                <declaration name="result" type="ArrayList&amp;lt;NotificationTarget&amp;gt;" line="77"/>
                <scope line="78">
                    <declaration name="td" type="Enumeration" line="80"/>
                    <scope line="81">
                        <declaration name="targetAddr" type="InetAddress" line="82"/>
                        <declaration name="tc" type="Enumeration" line="83"/>
                        <scope line="84">
                            <declaration name="community" type="String" line="85"/>
                            <declaration name="target" type="NotificationTarget" line="86"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="94">
                Initializes and starts the SNMP Adaptor Server.
                  If the com.sun.management.snmp.port property is not defined,
                  simply return. Otherwise, attempts to load the config file, and
                  then calls {@link #initialize(java.lang.String,java.util.Properties)}.                
            </javadoc>
            <method name="initialize" type="AdaptorBootstrap" line="100">
                <declaration name="props" type="Properties" line="101"/>
                <declaration name="portStr" type="String" line="103"/>
            </method>
            <javadoc line="106">
                Initializes and starts the SNMP Adaptor Server.                
            </javadoc>
            <method name="initialize" type="AdaptorBootstrap" line="109">
                <params>
                    <param name="portStr" type="String"/>
                    <param name="props" type="Properties"/>
                </params>
                <declaration name="port" type="int" line="111"/>
                <scope line="112"/>
                <scope line="115"/>
                <scope line="118"/>
                <declaration name="trapPortStr" type="String" line="121"/>
                <declaration name="trapPort" type="int" line="122"/>
                <scope line="123"/>
                <scope line="126"/>
                <scope line="129"/>
                <declaration name="addrStr" type="String" line="132"/>
                <declaration name="defaultAclFileName" type="String" line="133"/>
                <declaration name="aclFileName" type="String" line="134"/>
                <declaration name="useAclStr" type="String" line="135"/>
                <declaration name="useAcl" type="boolean" line="136"/>
                <declaration name="adaptor" type="AdaptorBootstrap" line="138"/>
                <scope line="139"/>
                <scope line="142"/>
            </method>
            <method name="getAdaptorBootstrap" type="AdaptorBootstrap" line="147">
                <params>
                    <param name="port" type="int"/>
                    <param name="trapPort" type="int"/>
                    <param name="bindAddress" type="String"/>
                    <param name="useAcl" type="boolean"/>
                    <param name="aclFileName" type="String"/>
                </params>
                <declaration name="address" type="InetAddress" line="148"/>
                <scope line="149"/>
                <scope line="152"/>
                <scope line="155"/>
                <declaration name="acl" type="InetAddressAcl" line="158"/>
                <scope line="159"/>
                <scope line="162"/>
                <declaration name="adaptor" type="SnmpAdaptorServer" line="165"/>
                <declaration name="mib" type="JVM_MANAGEMENT_MIB_IMPL" line="168"/>
                <scope line="169"/>
                <scope line="172"/>
                <scope line="176"/>
                <scope line="179">
                    <declaration name="t" type="Throwable" line="180"/>
                    <scope line="181">
                        <declaration name="next" type="Throwable" line="182"/>
                    </scope>
                </scope>
                <scope line="187"/>
                <scope line="190"/>
                <scope line="194"/>
            </method>
            <method name="checkAclFile" type="void" line="202">
                <params>
                    <param name="aclFileName" type="String"/>
                </params>
                <scope line="203"/>
                <declaration name="file" type="File" line="206"/>
                <scope line="207"/>
                <scope line="210"/>
                <declaration name="fs" type="FileSystem" line="213"/>
                <scope line="214">
                    <scope line="215">
                        <scope line="216"/>
                    </scope>
                </scope>
                <scope line="221"/>
            </method>
            <javadoc line="225">
                Get the port on which the adaptor is bound.
                  Returns 0 if the adaptor is already terminated.                
            </javadoc>
            <method name="getPort" type="int" line="229"/>
            <javadoc line="233">
                Stops the adaptor server.                
            </javadoc>
            <method name="terminate" type="void" line="236">
                <scope line="238"/>
                <scope line="241"/>
                <scope line="244"/>
                <scope line="247"/>
                <scope line="250"/>
            </method>
        </class>
    </source>