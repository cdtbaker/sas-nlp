<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.management.snmp.jvminstr">
        <import package="com.sun.jmx.mbeanserver.Util"/>
        <import package="java.io.Serializable"/>
        <import package="java.util.List"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.Map"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.TreeMap"/>
        <import package="java.util.Collections"/>
        <import package="javax.management.MBeanServer"/>
        <import package="javax.management.ObjectName"/>
        <import package="com.sun.jmx.snmp.SnmpOid"/>
        <import package="com.sun.jmx.snmp.SnmpStatusException"/>
        <import package="com.sun.jmx.snmp.agent.SnmpMib"/>
        <import package="com.sun.jmx.snmp.agent.SnmpStandardObjectServer"/>
        <import package="com.sun.jmx.snmp.agent.SnmpMibTable"/>
        <import package="java.lang.management.MemoryManagerMXBean"/>
        <import package="java.lang.management.MemoryPoolMXBean"/>
        <import package="sun.management.snmp.jvmmib.JvmMemMgrPoolRelTableMeta"/>
        <import package="sun.management.snmp.util.SnmpTableCache"/>
        <import package="sun.management.snmp.util.SnmpCachedData"/>
        <import package="sun.management.snmp.util.SnmpTableHandler"/>
        <import package="sun.management.snmp.util.MibLogger"/>
        <import package="sun.management.snmp.util.JvmContextFactory"/>
        <class name="JvmMemMgrPoolRelTableMetaImpl" line="61">
            <extends class="JvmMemMgrPoolRelTableMeta"/>
            <comment line="298">
                The weak cache for this table.                
            </comment>
            <comment line="319">
                Returns a pointer to the JvmMemManager meta node - we&apos;re going
                 to reuse its SnmpTableHandler in order to implement the
                 relation table.                
            </comment>
            <comment line="330">
                Returns a pointer to the JvmMemPool meta node - we&apos;re going
                 to reuse its SnmpTableHandler in order to implement the
                 relation table.                
            </comment>
            <comment line="357">
                See com.sun.jmx.snmp.agent.SnmpMibTable                
            </comment>
            <comment line="364">
                See com.sun.jmx.snmp.agent.SnmpMibTable                
            </comment>
            <comment line="396">
                See com.sun.jmx.snmp.agent.SnmpMibTable                
            </comment>
            <comment line="411">
                See com.sun.jmx.snmp.agent.SnmpMibTable                
            </comment>
            <implements interface="Serializable"/>
            <javadoc line="61">
                The class is used for implementing the &quot;JvmMemMgrPoolRelTable&quot; group.                
            </javadoc>
            <class name="JvmMemMgrPoolRelTableCache" line="67">
                <extends class="SnmpTableCache"/>
                <javadoc line="67">
                    A concrete implementation of {@link SnmpTableCache}, for the
                      jvmMemMgrPoolRelTable.                    
                </javadoc>
                <declaration name="meta" type="JvmMemMgrPoolRelTableMetaImpl" line="74"/>
                <javadoc line="76">
                    Create a weak cache for the jvmMemMgrPoolRelTable.                    
                    <param>
                        validity validity of the cached data, in ms.                        
                    </param>
                </javadoc>
                <method name="JvmMemMgrPoolRelTableCache" type="constructor" line="81">
                    <params>
                        <param name="meta" type="JvmMemMgrPoolRelTableMetaImpl"/>
                        <param name="validity" type="long"/>
                    </params>
                </method>
                <javadoc line="86">
                    Call &lt;code&gt;getTableDatas(JvmContextFactory.getUserData())&lt;/code&gt;.                    
                </javadoc>
                <method name="getTableHandler" type="SnmpTableHandler" line="89">
                    <declaration name="userData" type="Map" line="90"/>
                </method>
                <javadoc line="94">
                    Builds a map pool-name =&gt; pool-index from the SnmpTableHandler
                      of the JvmMemPoolTable.                    
                </javadoc>
                <method name="buildPoolIndexMap" type="Map<String,SnmpOid>" line="98">
                    <params>
                        <param name="handler" type="SnmpTableHandler"/>
                    </params>
                    <comment line="100">
                        optimization...                        
                    </comment>
                    <comment line="104">
                        not optimizable... too bad.                        
                    </comment>
                    <declaration name="m" type="Map&lt;String,SnmpOid&gt;" line="104"/>
                    <declaration name="index" type="SnmpOid" line="105"/>
                    <scope line="106">
                        <declaration name="mpm" type="MemoryPoolMXBean" line="107"/>
                        <declaration name="name" type="String" line="110"/>
                    </scope>
                </method>
                <javadoc line="117">
                    Builds a map pool-name =&gt; pool-index from the SnmpTableHandler
                      of the JvmMemPoolTable.
                      Optimized algorithm.                    
                </javadoc>
                <method name="buildPoolIndexMap" type="Map<String,SnmpOid>" line="122">
                    <params>
                        <param name="cached" type="SnmpCachedData"/>
                    </params>
                    <declaration name="indexes" type="SnmpOid[]" line="124"/>
                    <declaration name="datas" type="Object[]" line="125"/>
                    <declaration name="len" type="int" line="126"/>
                    <declaration name="m" type="Map&lt;String,SnmpOid&gt;" line="127"/>
                    <scope line="128">
                        <declaration name="index" type="SnmpOid" line="129"/>
                        <declaration name="mpm" type="MemoryPoolMXBean" line="131"/>
                        <declaration name="name" type="String" line="134"/>
                    </scope>
                </method>
                <javadoc line="141">
                    Return a table handler that holds the jvmMemManagerTable table data.
                      This method return the cached table data if it is still
                      valid, recompute it and cache the new value if it&apos;s not.
                      If it needs to recompute the cached data, it first
                      try to obtain the list of memory managers from the request
                      contextual cache, and if it is not found, it calls
                      &lt;code&gt;ManagementFactory.getMemoryMBean().getMemoryManagers()&lt;/code&gt;
                      and caches the value.
                      This ensures that
                      &lt;code&gt;ManagementFactory.getMemoryMBean().getMemoryManagers()&lt;/code&gt;
                      is not called more than once per request, thus ensuring a
                      consistent view of the table.                    
                </javadoc>
                <method name="updateCachedDatas" type="SnmpCachedData" line="155">
                    <params>
                        <param name="userData" type="Object"/>
                    </params>
                    <comment line="157">
                        Get the MemoryManager     table                        
                    </comment>
                    <comment line="161">
                        Get the MemoryPool        table                        
                    </comment>
                    <comment line="165">
                        Time stamp for the cache                        
                    </comment>
                    <comment line="168">
                        Build a Map poolname -&gt; index                        
                    </comment>
                    <comment line="171">
                        For each memory manager, get the list of memory pools
                         For each memory pool, find its index in the memory pool table
                         Create a row in the relation table.                        
                    </comment>
                    <declaration name="mmHandler" type="SnmpTableHandler" line="157"/>
                    <declaration name="mpHandler" type="SnmpTableHandler" line="161"/>
                    <declaration name="time" type="long" line="165"/>
                    <declaration name="poolIndexMap" type="Map" line="168"/>
                    <declaration name="table" type="TreeMap&lt;SnmpOid,Object&gt;" line="173"/>
                </method>
                <javadoc line="181">
                    Get the list of memory pool associated with the
                      given MemoryManagerMXBean.                    
                </javadoc>
                <method name="getMemoryPools" type="String[]" line="186">
                    <params>
                        <param name="userData" type="Object"/>
                        <param name="mmm" type="MemoryManagerMXBean"/>
                        <param name="mmarc" type="long"/>
                    </params>
                    <declaration name="listTag" type="String" line="187"/>
                    <declaration name="result" type="String[]" line="190"/>
                    <scope line="191"/>
                    <scope line="196"/>
                    <scope line="199">
                        <declaration name="map" type="Map&lt;Object,Object&gt;" line="200"/>
                    </scope>
                </method>
                <method name="updateTreeMap" type="void" line="210">
                    <params>
                        <param name="table" type="TreeMap<SnmpOid,Object>"/>
                        <param name="userData" type="Object"/>
                        <param name="mmm" type="MemoryManagerMXBean"/>
                        <param name="mmIndex" type="SnmpOid"/>
                        <param name="poolIndexMap" type="Map"/>
                    </params>
                    <comment line="213">
                        The MemoryManager index is an int, so it&apos;s the first
                         and only subidentifier.                        
                    </comment>
                    <comment line="226">
                        Cache this in userData + get it from cache?                        
                    </comment>
                    <comment line="237">
                        The MemoryPool index is an int, so it&apos;s the first
                         and only subidentifier.                        
                    </comment>
                    <comment line="248">
                        The MemoryMgrPoolRel table indexed is composed
                         of the MemoryManager index, to which the MemoryPool
                         index is appended.                        
                    </comment>
                    <declaration name="mmarc" type="long" line="214"/>
                    <scope line="215"/>
                    <scope line="217"/>
                    <declaration name="mpList" type="String[]" line="226"/>
                    <declaration name="mmmName" type="String" line="229"/>
                    <scope line="230">
                        <declaration name="mpmName" type="String" line="231"/>
                        <declaration name="mpIndex" type="SnmpOid" line="233"/>
                        <declaration name="mparc" type="long" line="238"/>
                        <scope line="239"/>
                        <scope line="241"/>
                        <declaration name="arcs" type="long[]" line="250"/>
                        <declaration name="index" type="SnmpOid" line="252"/>
                    </scope>
                </method>
                <method name="updateTreeMap" type="void" line="264">
                    <params>
                        <param name="table" type="TreeMap<SnmpOid,Object>"/>
                        <param name="userData" type="Object"/>
                        <param name="mmHandler" type="SnmpTableHandler"/>
                        <param name="mpHandler" type="SnmpTableHandler"/>
                        <param name="poolIndexMap" type="Map"/>
                    </params>
                    <scope line="265"/>
                    <declaration name="mmIndex" type="SnmpOid" line="271"/>
                    <scope line="272">
                        <declaration name="mmm" type="MemoryManagerMXBean" line="273"/>
                    </scope>
                </method>
                <method name="updateTreeMap" type="void" line="283">
                    <params>
                        <param name="table" type="TreeMap<SnmpOid,Object>"/>
                        <param name="userData" type="Object"/>
                        <param name="mmHandler" type="SnmpCachedData"/>
                        <param name="mpHandler" type="SnmpTableHandler"/>
                        <param name="poolIndexMap" type="Map"/>
                    </params>
                    <declaration name="indexes" type="SnmpOid[]" line="285"/>
                    <declaration name="datas" type="Object[]" line="286"/>
                    <declaration name="size" type="int" line="287"/>
                    <scope line="288">
                        <declaration name="mmm" type="MemoryManagerMXBean" line="289"/>
                    </scope>
                </method>
            </class>
            <declaration name="cache" type="SnmpTableCache" line="298"/>
            <declaration name="managers" type="JvmMemManagerTableMetaImpl" line="300"/>
            <declaration name="pools" type="JvmMemPoolTableMetaImpl" line="301"/>
            <javadoc line="303">
                Constructor for the table. Initialize metadata for
                  &quot;JvmMemMgrPoolRelTableMeta&quot;.
                  The reference on the MBean server is updated so the entries
                  created through an SNMP SET will be AUTOMATICALLY REGISTERED
                  in Java DMK.                
            </javadoc>
            <method name="JvmMemMgrPoolRelTableMetaImpl" type="constructor" line="311">
                <params>
                    <param name="myMib" type="SnmpMib"/>
                    <param name="objserv" type="SnmpStandardObjectServer"/>
                </params>
            </method>
            <method name="getManagers" type="JvmMemManagerTableMetaImpl" line="321">
                <params>
                    <param name="mib" type="SnmpMib"/>
                </params>
                <scope line="322"/>
            </method>
            <method name="getPools" type="JvmMemPoolTableMetaImpl" line="332">
                <params>
                    <param name="mib" type="SnmpMib"/>
                </params>
                <scope line="333"/>
            </method>
            <javadoc line="340">
                Returns the JvmMemManagerTable SnmpTableHandler                
            </javadoc>
            <method name="getManagerHandler" type="SnmpTableHandler" line="343">
                <params>
                    <param name="userData" type="Object"/>
                </params>
                <declaration name="managerTable" type="JvmMemManagerTableMetaImpl" line="344"/>
            </method>
            <javadoc line="348">
                Returns the JvmMemPoolTable SnmpTableHandler                
            </javadoc>
            <method name="getPoolHandler" type="SnmpTableHandler" line="351">
                <params>
                    <param name="userData" type="Object"/>
                </params>
                <declaration name="poolTable" type="JvmMemPoolTableMetaImpl" line="352"/>
            </method>
            <method name="getNextOid" type="SnmpOid" line="358">
                <params>
                    <param name="userData" type="Object"/>
                </params>
                <comment line="360">
                    null means get the first OID.                    
                </comment>
            </method>
            <method name="getNextOid" type="SnmpOid" line="365">
                <params>
                    <param name="oid" type="SnmpOid"/>
                    <param name="userData" type="Object"/>
                </params>
                <comment line="371">
                    Get the data handler.                    
                </comment>
                <comment line="375">
                    This should never happen.
                     If we get here it&apos;s a bug.                    
                </comment>
                <comment line="382">
                    Get the next oid                    
                </comment>
                <comment line="387">
                    if next is null: we reached the end of the table.                    
                </comment>
                <declaration name="dbg" type="boolean" line="366"/>
                <declaration name="handler" type="SnmpTableHandler" line="372"/>
                <scope line="373"/>
                <declaration name="next" type="SnmpOid" line="383"/>
            </method>
            <method name="contains" type="boolean" line="396">
                <params>
                    <param name="oid" type="SnmpOid"/>
                    <param name="userData" type="Object"/>
                </params>
                <comment line="399">
                    Get the handler.                    
                </comment>
                <comment line="403">
                    handler should never be null.                    
                </comment>
                <declaration name="handler" type="SnmpTableHandler" line="400"/>
            </method>
            <method name="getEntry" type="Object" line="412">
                <params>
                    <param name="oid" type="SnmpOid"/>
                </params>
                <comment line="418">
                    Get the request contextual cache (userData).                    
                </comment>
                <comment line="422">
                    We know in the case of this table that the index is composed
                     of two integers,
                      o The MemoryManager is the first  OID arc of the index OID.
                      o The MemoryPool    is the second OID arc of the index OID.                    
                </comment>
                <comment line="430">
                    We&apos;re going to use this name to store/retrieve the entry in
                     the request contextual cache.
                    
                     Revisit: Probably better programming to put all these strings
                              in some interface.                    
                </comment>
                <comment line="440">
                    If the entry is in the cache, simply return it.                    
                </comment>
                <comment line="447">
                    The entry was not in the cache, make a new one.
                    
                     Get the data hanler.                    
                </comment>
                <comment line="453">
                    handler should never be null.                    
                </comment>
                <comment line="458">
                    Get the data associated with our entry.                    
                </comment>
                <comment line="462">
                    data may be null if the OID we were given is not valid.                    
                </comment>
                <comment line="467">
                    make the new entry (transient object that will be kept only
                     for the duration of the request.                    
                </comment>
                <comment line="471">
                    XXXXX Revisit
                     new JvmMemMgrPoolRelEntryImpl((MemoryManagerMXBean)data,
                                                    (int)mgrIndex,(int)poolIndex);                    
                </comment>
                <comment line="475">
                    Put the entry in the cache in case we need it later while processing
                     the request.                    
                </comment>
                <declaration name="m" type="Map&lt;Object,Object&gt;" line="419"/>
                <declaration name="mgrIndex" type="long" line="426"/>
                <declaration name="poolIndex" type="long" line="427"/>
                <declaration name="entryTag" type="String" line="435"/>
                <scope line="441">
                    <declaration name="entry" type="Object" line="442"/>
                </scope>
                <declaration name="handler" type="SnmpTableHandler" line="450"/>
                <declaration name="data" type="Object" line="459"/>
                <declaration name="entry" type="Object" line="469"/>
                <scope line="477"/>
            </method>
            <javadoc line="484">
                Get the SnmpTableHandler that holds the jvmMemManagerTable data.
                  First look it up in the request contextual cache, and if it is
                  not found, obtain it from the weak cache.
                  &lt;br&gt;The request contextual cache will be released at the end of the
                  current requests, and is used only to process this request.
                  &lt;br&gt;The weak cache is shared by all requests, and is only
                  recomputed when it is found to be obsolete.
                  &lt;br&gt;Note that the data put in the request contextual cache is
                  never considered to be obsolete, in order to preserve data
                  coherency.                
            </javadoc>
            <method name="getHandler" type="SnmpTableHandler" line="496">
                <params>
                    <param name="userData" type="Object"/>
                </params>
                <comment line="502">
                    Look in the contextual cache.                    
                </comment>
                <comment line="509">
                    No handler in contextual cache, make a new one.                    
                </comment>
                <declaration name="m" type="Map&lt;Object,Object&gt;" line="497"/>
                <scope line="502">
                    <declaration name="handler" type="SnmpTableHandler" line="503"/>
                </scope>
                <declaration name="handler" type="SnmpTableHandler" line="509"/>
            </method>
            <declaration name="log" type="MibLogger" line="517"/>
        </class>
    </source>