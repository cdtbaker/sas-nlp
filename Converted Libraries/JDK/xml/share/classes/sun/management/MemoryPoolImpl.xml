<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.management">
        <import package="java.lang.management.ManagementFactory"/>
        <import package="java.lang.management.MemoryPoolMXBean"/>
        <import package="java.lang.management.MemoryUsage"/>
        <import package="java.lang.management.MemoryType"/>
        <import package="java.lang.management.MemoryManagerMXBean"/>
        <import package="javax.management.openmbean.CompositeData"/>
        <import package="javax.management.ObjectName"/>
        <import package="java.lang.management.MemoryNotificationInfo"/>
        <class name="MemoryPoolImpl" line="10">
            <implements interface="MemoryPoolMXBean"/>
            <javadoc line="10">
                Implementation class for a memory pool.
                  Standard and committed hotspot-specific metrics if any.
                  ManagementFactory.getMemoryPoolMXBeans() returns a list of
                  instances of this class.                
            </javadoc>
            <declaration name="name" type="String" line="17"/>
            <declaration name="isHeap" type="boolean" line="18"/>
            <declaration name="isValid" type="boolean" line="19"/>
            <declaration name="collectionThresholdSupported" type="boolean" line="20"/>
            <declaration name="usageThresholdSupported" type="boolean" line="21"/>
            <declaration name="managers" type="MemoryManagerMXBean[]" line="22"/>
            <declaration name="usageThreshold" type="long" line="23"/>
            <declaration name="collectionThreshold" type="long" line="24"/>
            <declaration name="usageSensorRegistered" type="boolean" line="25"/>
            <declaration name="gcSensorRegistered" type="boolean" line="26"/>
            <declaration name="usageSensor" type="Sensor" line="27"/>
            <declaration name="gcSensor" type="Sensor" line="28"/>
            <method name="MemoryPoolImpl" type="constructor" line="29">
                <params>
                    <param name="name" type="String"/>
                    <param name="isHeap" type="boolean"/>
                    <param name="usageThreshold" type="long"/>
                    <param name="gcThreshold" type="long"/>
                </params>
            </method>
            <method name="getName" type="String" line="43"/>
            <method name="isValid" type="boolean" line="46"/>
            <method name="getType" type="MemoryType" line="49">
                <scope line="50"/>
                <scope line="53"/>
            </method>
            <method name="getUsage" type="MemoryUsage" line="57"/>
            <method name="getPeakUsage" type="MemoryUsage" line="60"/>
            <method name="getUsageThreshold" type="long" line="63">
                <scope line="64"/>
            </method>
            <method name="setUsageThreshold" type="void" line="69">
                <params>
                    <param name="newThreshold" type="long"/>
                </params>
                <scope line="70"/>
                <declaration name="usage" type="MemoryUsage" line="74"/>
                <scope line="75"/>
                <scope line="78"/>
                <scope line="81">
                    <scope line="82"/>
                </scope>
            </method>
            <method name="getMemoryManagers" type="MemoryManagerMXBean[]" line="90">
                <scope line="91"/>
            </method>
            <method name="getMemoryManagerNames" type="String[]" line="96">
                <declaration name="mgrs" type="MemoryManagerMXBean[]" line="97"/>
                <declaration name="names" type="String[]" line="98"/>
                <scope line="99"/>
            </method>
            <method name="resetPeakUsage" type="void" line="104">
                <scope line="106"/>
            </method>
            <method name="isUsageThresholdExceeded" type="boolean" line="110">
                <scope line="111"/>
                <scope line="114"/>
                <declaration name="u" type="MemoryUsage" line="117"/>
            </method>
            <method name="getUsageThresholdCount" type="long" line="120">
                <scope line="121"/>
            </method>
            <method name="isUsageThresholdSupported" type="boolean" line="126"/>
            <method name="getCollectionUsageThreshold" type="long" line="129">
                <scope line="130"/>
            </method>
            <method name="setCollectionUsageThreshold" type="void" line="135">
                <params>
                    <param name="newThreshold" type="long"/>
                </params>
                <scope line="136"/>
                <declaration name="usage" type="MemoryUsage" line="140"/>
                <scope line="141"/>
                <scope line="144"/>
                <scope line="147">
                    <scope line="148"/>
                </scope>
            </method>
            <method name="isCollectionUsageThresholdExceeded" type="boolean" line="156">
                <scope line="157"/>
                <scope line="160"/>
                <declaration name="u" type="MemoryUsage" line="163"/>
            </method>
            <method name="getCollectionUsageThresholdCount" type="long" line="166">
                <scope line="167"/>
            </method>
            <method name="getCollectionUsage" type="MemoryUsage" line="172"/>
            <method name="isCollectionUsageThresholdSupported" type="boolean" line="175"/>
            <method name="getUsage0" type="MemoryUsage" line="178"/>
            <method name="getPeakUsage0" type="MemoryUsage" line="179"/>
            <method name="getCollectionUsage0" type="MemoryUsage" line="180"/>
            <method name="setUsageThreshold0" type="void" line="181"/>
            <method name="setCollectionThreshold0" type="void" line="182"/>
            <method name="resetPeakUsage0" type="void" line="183"/>
            <method name="getMemoryManagers0" type="MemoryManagerMXBean[]" line="184"/>
            <method name="setPoolUsageSensor" type="void" line="185"/>
            <method name="setPoolCollectionSensor" type="void" line="186"/>
            <class name="PoolSensor" line="187">
                <extends class="Sensor"/>
                <javadoc line="187">
                    PoolSensor will be triggered by the VM when the memory
                      usage of a memory pool is crossing the usage threshold.
                      The VM will not trigger this sensor in subsequent crossing
                      unless the memory usage has returned below the threshold.                    
                </javadoc>
                <declaration name="pool" type="MemoryPoolImpl" line="194"/>
                <method name="PoolSensor" type="constructor" line="195">
                    <params>
                        <param name="pool" type="MemoryPoolImpl"/>
                        <param name="name" type="String"/>
                    </params>
                </method>
                <method name="triggerAction" type="void" line="199">
                    <params>
                        <param name="usage" type="MemoryUsage"/>
                    </params>
                </method>
                <method name="triggerAction" type="void" line="202"/>
                <method name="clearAction" type="void" line="205"/>
            </class>
            <class name="CollectionSensor" line="208">
                <extends class="Sensor"/>
                <javadoc line="208">
                    CollectionSensor will be triggered and cleared by the VM
                      when the memory usage of a memory pool after GC is crossing
                      the collection threshold.
                      The VM will trigger this sensor in subsequent crossing
                      regardless if the memory usage has changed siince the previous GC.                    
                </javadoc>
                <declaration name="pool" type="MemoryPoolImpl" line="216"/>
                <method name="CollectionSensor" type="constructor" line="217">
                    <params>
                        <param name="pool" type="MemoryPoolImpl"/>
                        <param name="name" type="String"/>
                    </params>
                </method>
                <method name="triggerAction" type="void" line="221">
                    <params>
                        <param name="usage" type="MemoryUsage"/>
                    </params>
                </method>
                <method name="triggerAction" type="void" line="224"/>
                <method name="clearAction" type="void" line="227"/>
            </class>
            <method name="getObjectName" type="ObjectName" line="230"/>
        </class>
    </source>