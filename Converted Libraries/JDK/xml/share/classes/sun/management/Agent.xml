<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.management">
        <import package="java.io.File"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.FileInputStream"/>
        <import package="java.io.BufferedInputStream"/>
        <import package="java.io.FileNotFoundException"/>
        <import package="java.io.IOException"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="java.text.MessageFormat"/>
        <import package="java.util.Properties"/>
        <import package="java.util.ResourceBundle"/>
        <import package="java.util.MissingResourceException"/>
        <import package="java.lang.management.ManagementFactory"/>
        <import package="java.lang.reflect.Method"/>
        <import package="javax.management.remote.JMXConnectorServer"/>
        <import package="sun.management.jmxremote.ConnectorBootstrap"/>
        <import package="sun.management.AgentConfigurationError"/>
        <import package="sun.misc.VMSupport"/>
        <class name="Agent" line="48">
            <comment line="55">
                management properties                
            </comment>
            <comment line="75">
                invoked by -javaagent or -Dcom.sun.management.agent.class                
            </comment>
            <comment line="80">
                invoked by attach mechanism                
            </comment>
            <comment line="240">
                read config file and initialize the properties                
            </comment>
            <javadoc line="48">
                This Agent is started by the VM when -Dcom.sun.management.snmp
                  or -Dcom.sun.management.jmxremote is set. This class will be
                  loaded by the system class loader.                
            </javadoc>
            <declaration name="mgmtProps" type="Properties" line="55"/>
            <declaration name="messageRB" type="ResourceBundle" line="56"/>
            <declaration name="CONFIG_FILE" type="String" line="58"/>
            <declaration name="SNMP_PORT" type="String" line="60"/>
            <declaration name="JMXREMOTE" type="String" line="62"/>
            <declaration name="JMXREMOTE_PORT" type="String" line="64"/>
            <declaration name="ENABLE_THREAD_CONTENTION_MONITORING" type="String" line="66"/>
            <declaration name="LOCAL_CONNECTOR_ADDRESS_PROP" type="String" line="68"/>
            <declaration name="SNMP_ADAPTOR_BOOTSTRAP_CLASS_NAME" type="String" line="71"/>
            <method name="premain" type="void" line="75">
                <params>
                    <param name="args" type="String"/>
                </params>
            </method>
            <method name="agentmain" type="void" line="80">
                <params>
                    <param name="args" type="String"/>
                </params>
                <comment line="83">
                    default to local management                    
                </comment>
                <comment line="86">
                    Parse agent options into properties                    
                </comment>
                <comment line="98">
                    Assume that any com.sun.management.* options are okay                    
                </comment>
                <comment line="109">
                    Read properties from the config file                    
                </comment>
                <comment line="114">
                    Arguments override config file                    
                </comment>
                <scope line="81"/>
                <declaration name="arg_props" type="Properties" line="87"/>
                <scope line="88">
                    <declaration name="options" type="String[]" line="89"/>
                    <scope line="90">
                        <declaration name="option" type="String[]" line="91"/>
                        <scope line="92">
                            <declaration name="name" type="String" line="93"/>
                            <declaration name="value" type="String" line="94"/>
                            <scope line="95">
                                <scope line="98"/>
                                <scope line="100"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <declaration name="config_props" type="Properties" line="109"/>
                <declaration name="fname" type="String" line="110"/>
            </method>
            <method name="startAgent" type="void" line="118">
                <params>
                    <param name="props" type="Properties"/>
                </params>
                <comment line="124">
                    Enable optional monitoring functionality if requested                    
                </comment>
                <comment line="137">
                    If the jmxremote.port property is set then we start the
                     RMIConnectorServer for remote M&amp;M.
                    
                     If the jmxremote or jmxremote.port properties are set then
                     we start a RMIConnectorServer for local M&amp;M. The address
                     of this &quot;local&quot; server is exported as a counter to the jstat
                     instrumentation buffer.                    
                </comment>
                <comment line="152">
                    start local connector if not started
                     System.out.println(&quot;local address : &quot; +                    
                </comment>
                <comment line="154">
                    agentProps.get(LOCAL_CONNECTOR_ADDRESS_PROP));                    
                </comment>
                <comment line="158">
                    Add the local connector address to the agent properties                    
                </comment>
                <comment line="162">
                    export the address to the instrumentation buffer                    
                </comment>
                <comment line="165">
                    Connector server started but unable to export address
                     to instrumentation buffer - non-fatal error.                    
                </comment>
                <declaration name="snmpPort" type="String" line="119"/>
                <declaration name="jmxremote" type="String" line="120"/>
                <declaration name="jmxremotePort" type="String" line="121"/>
                <declaration name="enableThreadContentionMonitoring" type="String" line="124"/>
                <scope line="126"/>
                <scope line="131">
                    <scope line="132"/>
                    <scope line="145">
                        <scope line="146"/>
                        <declaration name="agentProps" type="Properties" line="150"/>
                        <scope line="154">
                            <declaration name="cs" type="JMXConnectorServer" line="155"/>
                            <declaration name="address" type="String" line="156"/>
                            <scope line="160"/>
                            <scope line="163"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="170"/>
                <scope line="172"/>
            </method>
            <method name="loadManagementProperties" type="Properties" line="177">
                <comment line="181">
                    Load the management properties from the config file                    
                </comment>
                <comment line="186">
                    management properties can be overridden by system properties
                     which take precedence                    
                </comment>
                <declaration name="props" type="Properties" line="178"/>
                <declaration name="fname" type="String" line="182"/>
            </method>
            <method name="getManagementProperties" type="Properties" line="192">
                <comment line="202">
                    return if out-of-the-management option is not specified                    
                </comment>
                <scope line="193">
                    <declaration name="configFile" type="String" line="194"/>
                    <declaration name="snmpPort" type="String" line="195"/>
                    <declaration name="jmxremote" type="String" line="196"/>
                    <declaration name="jmxremotePort" type="String" line="197"/>
                    <scope line="200"/>
                </scope>
            </method>
            <method name="loadSnmpAgent" type="void" line="209">
                <params>
                    <param name="snmpPort" type="String"/>
                    <param name="props" type="Properties"/>
                </params>
                <comment line="212">
                    invoke the following through reflection:
                         AdaptorBootstrap.initialize(snmpPort, props);                    
                </comment>
                <comment line="221">
                    The SNMP packages are not present: throws an exception.                    
                </comment>
                <comment line="224">
                    should not happen...                    
                </comment>
                <comment line="232">
                    should not happen...                    
                </comment>
                <comment line="235">
                    should not happen...                    
                </comment>
                <scope line="210">
                    <declaration name="adaptorClass" type="Class&lt;?&gt;" line="213"/>
                    <declaration name="initializeMethod" type="Method" line="215"/>
                </scope>
                <scope line="219"/>
                <scope line="222"/>
                <scope line="225">
                    <declaration name="cause" type="Throwable" line="226"/>
                </scope>
                <scope line="233"/>
            </method>
            <method name="readConfiguration" type="void" line="240">
                <params>
                    <param name="fname" type="String"/>
                    <param name="p" type="Properties"/>
                </params>
                <comment line="251">
                    Set file name                    
                </comment>
                <scope line="241">
                    <declaration name="home" type="String" line="242"/>
                    <scope line="243"/>
                    <declaration name="defaultFileName" type="StringBuffer" line="246"/>
                </scope>
                <declaration name="configFile" type="File" line="253"/>
                <scope line="254"/>
                <declaration name="in" type="InputStream" line="258"/>
                <scope line="259">
                    <declaration name="bin" type="BufferedInputStream" line="261"/>
                </scope>
                <scope line="263"/>
                <scope line="265"/>
                <scope line="267"/>
                <scope line="269">
                    <scope line="270">
                        <scope line="271"/>
                        <scope line="273"/>
                    </scope>
                </scope>
            </method>
            <method name="startAgent" type="void" line="280">
                <comment line="284">
                    -Dcom.sun.management.agent.class not set so read management
                     properties and start agent                    
                </comment>
                <comment line="287">
                    initialize management properties                    
                </comment>
                <comment line="295">
                    -Dcom.sun.management.agent.class=&lt;agent classname&gt;:&lt;agent args&gt;                    
                </comment>
                <comment line="309">
                    Instantiate the named class.
                     invoke the premain(String args) method                    
                </comment>
                <comment line="314">
                                        
                </comment>
                <declaration name="prop" type="String" line="281"/>
                <scope line="285">
                    <declaration name="props" type="Properties" line="287"/>
                    <scope line="288"/>
                </scope>
                <declaration name="values" type="String[]" line="295"/>
                <scope line="296"/>
                <declaration name="cname" type="String" line="299"/>
                <declaration name="args" type="String" line="300"/>
                <scope line="302"/>
                <scope line="306">
                    <scope line="307">
                        <declaration name="clz" type="Class&lt;?&gt;" line="310"/>
                        <declaration name="premain" type="Method" line="311"/>
                    </scope>
                    <scope line="315"/>
                    <scope line="317"/>
                    <scope line="319"/>
                    <scope line="321">
                        <declaration name="msg" type="String" line="322"/>
                    </scope>
                </scope>
            </method>
            <method name="error" type="void" line="330">
                <params>
                    <param name="key" type="String"/>
                </params>
                <declaration name="keyText" type="String" line="331"/>
            </method>
            <method name="error" type="void" line="336">
                <params>
                    <param name="key" type="String"/>
                    <param name="params" type="String[]"/>
                </params>
                <scope line="337"/>
                <scope line="339">
                    <declaration name="message" type="StringBuffer" line="340"/>
                    <scope line="341"/>
                </scope>
            </method>
            <method name="error" type="void" line="349">
                <params>
                    <param name="key" type="String"/>
                    <param name="message" type="String"/>
                </params>
                <declaration name="keyText" type="String" line="350"/>
            </method>
            <method name="error" type="void" line="356">
                <params>
                    <param name="e" type="Exception"/>
                </params>
            </method>
            <method name="warning" type="void" line="362">
                <params>
                    <param name="key" type="String"/>
                    <param name="message" type="String"/>
                </params>
            </method>
            <method name="initResource" type="void" line="367">
                <scope line="368"/>
                <scope line="371"/>
            </method>
            <method name="getText" type="String" line="376">
                <params>
                    <param name="key" type="String"/>
                </params>
                <scope line="377"/>
                <scope line="380"/>
                <scope line="382"/>
            </method>
            <method name="getText" type="String" line="387">
                <params>
                    <param name="key" type="String"/>
                    <param name="args" type="String"/>
                </params>
                <scope line="388"/>
                <declaration name="format" type="String" line="391"/>
                <scope line="392"/>
            </method>
        </class>
    </source>