<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.management">
        <import package="sun.misc.Perf"/>
        <import package="sun.management.counter"/>
        <import package="sun.management.counter.perf"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.io.IOException"/>
        <import package="java.net.InetAddress"/>
        <import package="java.net.UnknownHostException"/>
        <import package="java.util.List"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.Collections"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="sun.security.action.GetPropertyAction"/>
        <class name="VMManagementImpl" line="42">
            <comment line="73">
                Optional supports                
            </comment>
            <comment line="114">
                Class Loading Subsystem                
            </comment>
            <comment line="124">
                Memory Subsystem                
            </comment>
            <comment line="127">
                Runtime Subsystem                
            </comment>
            <comment line="193">
                Compilation Subsystem                
            </comment>
            <comment line="205">
                Thread Subsystem                
            </comment>
            <comment line="211">
                Operating System                
            </comment>
            <comment line="222">
                Hotspot-specific runtime support                
            </comment>
            <comment line="236">
                Performance Counter Support                
            </comment>
            <implements interface="VMManagement"/>
            <javadoc line="42">
                Implementation of VMManagement interface that accesses the management
                  attributes and operations locally within the same Java virtual
                  machine.                
            </javadoc>
            <declaration name="version" type="String" line="49"/>
            <declaration name="compTimeMonitoringSupport" type="boolean" line="51"/>
            <declaration name="threadContentionMonitoringSupport" type="boolean" line="52"/>
            <declaration name="currentThreadCpuTimeSupport" type="boolean" line="53"/>
            <declaration name="otherThreadCpuTimeSupport" type="boolean" line="54"/>
            <declaration name="bootClassPathSupport" type="boolean" line="55"/>
            <declaration name="objectMonitorUsageSupport" type="boolean" line="56"/>
            <declaration name="synchronizerUsageSupport" type="boolean" line="57"/>
            <declaration name="threadAllocatedMemorySupport" type="boolean" line="58"/>
            <declaration name="gcNotificationSupport" type="boolean" line="59"/>
            <scope line="62">
                <scope line="64"/>
            </scope>
            <method name="getVersion0" type="String" line="69"/>
            <method name="initOptionalSupportFields" type="void" line="70"/>
            <method name="isCompilationTimeMonitoringSupported" type="boolean" line="73"/>
            <method name="isThreadContentionMonitoringSupported" type="boolean" line="77"/>
            <method name="isCurrentThreadCpuTimeSupported" type="boolean" line="81"/>
            <method name="isOtherThreadCpuTimeSupported" type="boolean" line="85"/>
            <method name="isBootClassPathSupported" type="boolean" line="89"/>
            <method name="isObjectMonitorUsageSupported" type="boolean" line="93"/>
            <method name="isSynchronizerUsageSupported" type="boolean" line="97"/>
            <method name="isThreadAllocatedMemorySupported" type="boolean" line="101"/>
            <method name="isGcNotificationSupported" type="boolean" line="105"/>
            <method name="isThreadContentionMonitoringEnabled" type="boolean" line="109"/>
            <method name="isThreadCpuTimeEnabled" type="boolean" line="110"/>
            <method name="isThreadAllocatedMemoryEnabled" type="boolean" line="111"/>
            <method name="getLoadedClassCount" type="int" line="114">
                <declaration name="count" type="long" line="115"/>
            </method>
            <method name="getTotalClassCount" type="long" line="118"/>
            <method name="getUnloadedClassCount" type="long" line="119"/>
            <method name="getVerboseClass" type="boolean" line="121"/>
            <method name="getVerboseGC" type="boolean" line="124"/>
            <method name="getManagementVersion" type="String" line="127"/>
            <method name="getVmId" type="String" line="131">
                <comment line="138">
                    ignore                    
                </comment>
                <declaration name="pid" type="int" line="132"/>
                <declaration name="hostname" type="String" line="133"/>
                <scope line="134"/>
                <scope line="136"/>
            </method>
            <method name="getProcessId" type="int" line="142"/>
            <method name="getVmName" type="String" line="144"/>
            <method name="getVmVendor" type="String" line="148"/>
            <method name="getVmVersion" type="String" line="151"/>
            <method name="getVmSpecName" type="String" line="154"/>
            <method name="getVmSpecVendor" type="String" line="157"/>
            <method name="getVmSpecVersion" type="String" line="160"/>
            <method name="getClassPath" type="String" line="163"/>
            <method name="getLibraryPath" type="String" line="166"/>
            <method name="getBootClassPath" type="String" line="170">
                <declaration name="pa" type="PrivilegedAction&lt;String&gt;" line="171"/>
                <declaration name="result" type="String" line="173"/>
            </method>
            <declaration name="vmArgs" type="List&lt;String&gt;" line="177"/>
            <method name="getVmArguments" type="List<String>" line="178">
                <scope line="179">
                    <declaration name="args" type="String[]" line="180"/>
                    <declaration name="l" type="List&lt;String&gt;" line="181"/>
                </scope>
            </method>
            <method name="getVmArguments0" type="String[]" line="187"/>
            <method name="getStartupTime" type="long" line="189"/>
            <method name="getAvailableProcessors" type="int" line="190"/>
            <method name="getCompilerName" type="String" line="193">
                <anonymous_class line="195">
                    <method name="run" type="String" line="196"/>
                </anonymous_class>
                <declaration name="name" type="String" line="194"/>
            </method>
            <method name="getTotalCompileTime" type="long" line="202"/>
            <method name="getTotalThreadCount" type="long" line="205"/>
            <method name="getLiveThreadCount" type="int" line="206"/>
            <method name="getPeakThreadCount" type="int" line="207"/>
            <method name="getDaemonThreadCount" type="int" line="208"/>
            <method name="getOsName" type="String" line="211"/>
            <method name="getOsArch" type="String" line="214"/>
            <method name="getOsVersion" type="String" line="217"/>
            <method name="getSafepointCount" type="long" line="222"/>
            <method name="getTotalSafepointTime" type="long" line="223"/>
            <method name="getSafepointSyncTime" type="long" line="224"/>
            <method name="getTotalApplicationNonStoppedTime" type="long" line="225"/>
            <method name="getLoadedClassSize" type="long" line="227"/>
            <method name="getUnloadedClassSize" type="long" line="228"/>
            <method name="getClassLoadingTime" type="long" line="229"/>
            <method name="getMethodDataSize" type="long" line="230"/>
            <method name="getInitializedClassCount" type="long" line="231"/>
            <method name="getClassInitializationTime" type="long" line="232"/>
            <method name="getClassVerificationTime" type="long" line="233"/>
            <declaration name="perfInstr" type="PerfInstrumentation" line="236"/>
            <declaration name="noPerfData" type="boolean" line="237"/>
            <method name="getPerfInstrumentation" type="PerfInstrumentation" line="239">
                <comment line="245">
                    construct PerfInstrumentation object                    
                </comment>
                <comment line="255">
                    If the shared memory doesn&apos;t exist e.g. if -XX:-UsePerfData
                     was set                    
                </comment>
                <scope line="240"/>
                <declaration name="perf" type="Perf" line="245"/>
                <scope line="246">
                    <declaration name="bb" type="ByteBuffer" line="247"/>
                    <scope line="248"/>
                </scope>
                <scope line="253"/>
                <scope line="257"/>
            </method>
            <method name="getInternalCounters" type="List<Counter>" line="263">
                <params>
                    <param name="pattern" type="String"/>
                </params>
                <declaration name="perf" type="PerfInstrumentation" line="264"/>
                <scope line="265"/>
                <scope line="267"/>
            </method>
        </class>
    </source>