<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.management">
        <import package="com.sun.management.GarbageCollectorMXBean"/>
        <import package="com.sun.management.GarbageCollectionNotificationInfo"/>
        <import package="java.lang.management.ManagementFactory"/>
        <import package="java.lang.management.MemoryPoolMXBean"/>
        <import package="java.lang.management.MemoryUsage"/>
        <import package="com.sun.management.GcInfo"/>
        <import package="javax.management.openmbean.CompositeData"/>
        <import package="javax.management.MBeanInfo"/>
        <import package="javax.management.MBeanAttributeInfo"/>
        <import package="javax.management.ObjectName"/>
        <import package="javax.management.MBeanNotificationInfo"/>
        <import package="javax.management.Notification"/>
        <import package="javax.management.NotificationFilter"/>
        <import package="javax.management.NotificationListener"/>
        <import package="javax.management.ListenerNotFoundException"/>
        <import package="java.util.List"/>
        <import package="java.util.ListIterator"/>
        <import package="java.util.Map"/>
        <class name="GarbageCollectorImpl" line="49">
            <extends class="MemoryManagerImpl"/>
            <comment line="68">
                The memory pools are static and won&apos;t be changed.
                 TODO: If the hotspot implementation begins to have pools
                 dynamically created and removed, this needs to be modified.                
            </comment>
            <comment line="87">
                Sun JDK extension                
            </comment>
            <implements interface="GarbageCollectorMXBean"/>
            <javadoc line="49">
                Implementation class for the garbage collector.
                  Standard and committed hotspot-specific metrics if any.
                  ManagementFactory.getGarbageCollectorMXBeans() returns a list
                  of instances of this class.                
            </javadoc>
            <method name="GarbageCollectorImpl" type="constructor" line="59">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="getCollectionCount" type="long" line="63"/>
            <method name="getCollectionTime" type="long" line="64"/>
            <declaration name="poolNames" type="String[]" line="70"/>
            <method name="getAllPoolNames" type="String[]" line="71">
                <scope line="72">
                    <declaration name="pools" type="List" line="73"/>
                    <declaration name="i" type="int" line="75"/>
                    <scope line="78">
                        <declaration name="p" type="MemoryPoolMXBean" line="79"/>
                    </scope>
                </scope>
            </method>
            <declaration name="gcInfoBuilder" type="GcInfoBuilder" line="87"/>
            <method name="getGcInfoBuilder" type="GcInfoBuilder" line="89">
                <scope line="90"/>
            </method>
            <method name="getLastGcInfo" type="GcInfo" line="96">
                <declaration name="info" type="GcInfo" line="97"/>
            </method>
            <declaration name="notifName" type="String" line="101"/>
            <declaration name="gcNotifTypes" type="String[]" line="104"/>
            <declaration name="notifInfo" type="MBeanNotificationInfo[]" line="108"/>
            <method name="getNotificationInfo" type="MBeanNotificationInfo[]" line="109">
                <scope line="110">
                    <scope line="111"/>
                </scope>
            </method>
            <declaration name="seqNumber" type="long" line="121"/>
            <method name="getNextSeqNumber" type="long" line="122"/>
            <method name="createGCNotification" type="void" line="130">
                <params>
                    <param name="timestamp" type="long"/>
                    <param name="gcName" type="String"/>
                    <param name="gcAction" type="String"/>
                    <param name="gcCause" type="String"/>
                    <param name="gcInfo" type="GcInfo"/>
                </params>
                <scope line="132"/>
                <declaration name="notif" type="Notification" line="136"/>
                <declaration name="info" type="GarbageCollectionNotificationInfo" line="141"/>
                <declaration name="cd" type="CompositeData" line="147"/>
            </method>
            <method name="addNotificationListener" type="void" line="156">
                <params>
                    <param name="listener" type="NotificationListener"/>
                    <param name="filter" type="NotificationFilter"/>
                    <param name="handback" type="Object"/>
                </params>
                <declaration name="before" type="boolean" line="157"/>
                <declaration name="after" type="boolean" line="159"/>
                <scope line="160"/>
            </method>
            <method name="removeNotificationListener" type="void" line="166">
                <params>
                    <param name="listener" type="NotificationListener"/>
                </params>
                <declaration name="before" type="boolean" line="167"/>
                <declaration name="after" type="boolean" line="169"/>
                <scope line="170"/>
            </method>
            <method name="removeNotificationListener" type="void" line="179">
                <params>
                    <param name="listener" type="NotificationListener"/>
                    <param name="filter" type="NotificationFilter"/>
                    <param name="handback" type="Object"/>
                </params>
                <declaration name="before" type="boolean" line="180"/>
                <declaration name="after" type="boolean" line="182"/>
                <scope line="183"/>
            </method>
            <method name="getObjectName" type="ObjectName" line="188"/>
            <method name="setNotificationEnabled" type="void" line="192"/>
        </class>
    </source>