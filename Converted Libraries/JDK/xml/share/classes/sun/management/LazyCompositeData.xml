<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.management">
        <import package="java.io.Serializable"/>
        <import package="java.util"/>
        <import package="javax.management.openmbean.CompositeData"/>
        <import package="javax.management.openmbean.CompositeType"/>
        <import package="javax.management.openmbean.OpenType"/>
        <import package="javax.management.openmbean.TabularType"/>
        <class name="LazyCompositeData" line="8">
            <implements interface="CompositeData"/>
            <implements interface="Serializable"/>
            <javadoc line="8">
                This abstract class provides the implementation of the CompositeData
                  interface.  A CompositeData object will be lazily created only when
                  the CompositeData interface is used.
                  Classes that extends this abstract class will implement the
                  getCompositeData() method. The object returned by the
                  getCompositeData() is an instance of CompositeData such that
                  the instance serializes itself as the type CompositeDataSupport.                
            </javadoc>
            <declaration name="compositeData" type="CompositeData" line="18"/>
            <method name="containsKey" type="boolean" line="19">
                <params>
                    <param name="key" type="String"/>
                </params>
            </method>
            <method name="containsValue" type="boolean" line="22">
                <params>
                    <param name="value" type="Object"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="25">
                <params>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <method name="get" type="Object" line="28">
                <params>
                    <param name="key" type="String"/>
                </params>
            </method>
            <method name="getAll" type="Object[]" line="31">
                <params>
                    <param name="keys" type="String[]"/>
                </params>
            </method>
            <method name="getCompositeType" type="CompositeType" line="34"/>
            <method name="hashCode" type="int" line="37"/>
            <method name="toString" type="String" line="40"/>
            <method name="values" type="Collection" line="43"/>
            <method name="compositeData" type="CompositeData" line="46"/>
            <javadoc line="51">
                Designate to a CompositeData object when writing to an
                  output stream during serialization so that the receiver
                  only requires JMX 1.2 classes but not any implementation
                  specific class.                
            </javadoc>
            <method name="writeReplace" type="Object" line="57"/>
            <method name="getCompositeData" type="CompositeData" line="60"/>
            <javadoc line="60">
                Returns the CompositeData representing this object.
                  The returned CompositeData object must be an instance
                  of javax.management.openmbean.CompositeDataSupport class
                  so that no implementation specific class is required
                  for unmarshalling besides JMX 1.2 classes.                
            </javadoc>
            <method name="getString" type="String" line="68">
                <params>
                    <param name="cd" type="CompositeData"/>
                    <param name="itemName" type="String"/>
                </params>
            </method>
            <method name="getBoolean" type="boolean" line="72">
                <params>
                    <param name="cd" type="CompositeData"/>
                    <param name="itemName" type="String"/>
                </params>
            </method>
            <method name="getLong" type="long" line="76">
                <params>
                    <param name="cd" type="CompositeData"/>
                    <param name="itemName" type="String"/>
                </params>
            </method>
            <method name="getInt" type="int" line="80">
                <params>
                    <param name="cd" type="CompositeData"/>
                    <param name="itemName" type="String"/>
                </params>
            </method>
            <javadoc line="84">
                Compares two CompositeTypes and returns true if
                  all items in type1 exist in type2 and their item types
                  are the same.                
            </javadoc>
            <method name="isTypeMatched" type="boolean" line="89">
                <params>
                    <param name="type1" type="CompositeType"/>
                    <param name="type2" type="CompositeType"/>
                </params>
                <declaration name="allItems" type="Set" line="91"/>
                <scope line="93">
                    <declaration name="item" type="String" line="94"/>
                    <declaration name="ot1" type="OpenType" line="95"/>
                    <declaration name="ot2" type="OpenType" line="96"/>
                    <scope line="97"/>
                    <scope line="101"/>
                    <scope line="105"/>
                </scope>
            </method>
            <method name="isTypeMatched" type="boolean" line="111">
                <params>
                    <param name="type1" type="TabularType"/>
                    <param name="type2" type="TabularType"/>
                </params>
                <declaration name="list1" type="List" line="113"/>
                <declaration name="list2" type="List" line="114"/>
            </method>
            <declaration name="serialVersionUID" type="long" line="118"/>
        </class>
    </source>