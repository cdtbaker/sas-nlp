<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.management">
        <import package="java.lang.management.ThreadInfo"/>
        <import package="java.lang.management.MonitorInfo"/>
        <import package="java.lang.management.LockInfo"/>
        <import package="javax.management.openmbean.CompositeType"/>
        <import package="javax.management.openmbean.CompositeData"/>
        <import package="javax.management.openmbean.CompositeDataSupport"/>
        <import package="javax.management.openmbean.OpenDataException"/>
        <import package="javax.management.openmbean.OpenType"/>
        <class name="ThreadInfoCompositeData" line="37">
            <extends class="LazyCompositeData"/>
            <comment line="134">
                Attribute names                
            </comment>
            <comment line="171">
                New attributes added in 6.0 ThreadInfo                
            </comment>
            <comment line="178">
                Current version of ThreadInfo                
            </comment>
            <comment line="180">
                Previous version of ThreadInfo                
            </comment>
            <comment line="317">
                6.0 new attributes                
            </comment>
            <javadoc line="37">
                A CompositeData for ThreadInfo for the local management support.
                  This class avoids the performance penalty paid to the
                  construction of a CompositeData use in the local case.                
            </javadoc>
            <declaration name="threadInfo" type="ThreadInfo" line="43"/>
            <declaration name="cdata" type="CompositeData" line="44"/>
            <declaration name="currentVersion" type="boolean" line="45"/>
            <method name="ThreadInfoCompositeData" type="constructor" line="47">
                <params>
                    <param name="ti" type="ThreadInfo"/>
                </params>
            </method>
            <method name="ThreadInfoCompositeData" type="constructor" line="53">
                <params>
                    <param name="cd" type="CompositeData"/>
                </params>
            </method>
            <method name="getThreadInfo" type="ThreadInfo" line="59"/>
            <method name="isCurrentVersion" type="boolean" line="63"/>
            <method name="getInstance" type="ThreadInfoCompositeData" line="67">
                <params>
                    <param name="cd" type="CompositeData"/>
                </params>
            </method>
            <method name="toCompositeData" type="CompositeData" line="72">
                <params>
                    <param name="ti" type="ThreadInfo"/>
                </params>
                <declaration name="ticd" type="ThreadInfoCompositeData" line="73"/>
            </method>
            <method name="getCompositeData" type="CompositeData" line="77">
                <comment line="79">
                    Convert StackTraceElement[] to CompositeData[]                    
                </comment>
                <comment line="88">
                    Convert MonitorInfo[] and LockInfo[] to CompositeData[]                    
                </comment>
                <comment line="93">
                    Convert MonitorInfo[] to CompositeData[]                    
                </comment>
                <comment line="103">
                    CONTENTS OF THIS ARRAY MUST BE SYNCHRONIZED WITH
                     threadInfoItemNames!                    
                </comment>
                <comment line="129">
                    Should never reach here                    
                </comment>
                <declaration name="stackTrace" type="StackTraceElement[]" line="79"/>
                <declaration name="stackTraceData" type="CompositeData[]" line="80"/>
                <scope line="82">
                    <declaration name="ste" type="StackTraceElement" line="83"/>
                </scope>
                <declaration name="converter" type="LockDataConverter" line="88"/>
                <declaration name="lockInfoData" type="CompositeData" line="89"/>
                <declaration name="lockedSyncsData" type="CompositeData[]" line="90"/>
                <declaration name="lockedMonitors" type="MonitorInfo[]" line="93"/>
                <declaration name="lockedMonitorsData" type="CompositeData[]" line="94"/>
                <scope line="96">
                    <declaration name="mi" type="MonitorInfo" line="97"/>
                </scope>
                <declaration name="threadInfoItemValues" type="Object[]" line="104"/>
                <scope line="123"/>
                <scope line="127"/>
            </method>
            <declaration name="THREAD_ID" type="String" line="134"/>
            <declaration name="THREAD_NAME" type="String" line="135"/>
            <declaration name="THREAD_STATE" type="String" line="136"/>
            <declaration name="BLOCKED_TIME" type="String" line="137"/>
            <declaration name="BLOCKED_COUNT" type="String" line="138"/>
            <declaration name="WAITED_TIME" type="String" line="139"/>
            <declaration name="WAITED_COUNT" type="String" line="140"/>
            <declaration name="LOCK_INFO" type="String" line="141"/>
            <declaration name="LOCK_NAME" type="String" line="142"/>
            <declaration name="LOCK_OWNER_ID" type="String" line="143"/>
            <declaration name="LOCK_OWNER_NAME" type="String" line="144"/>
            <declaration name="STACK_TRACE" type="String" line="145"/>
            <declaration name="SUSPENDED" type="String" line="146"/>
            <declaration name="IN_NATIVE" type="String" line="147"/>
            <declaration name="LOCKED_MONITORS" type="String" line="148"/>
            <declaration name="LOCKED_SYNCS" type="String" line="149"/>
            <declaration name="threadInfoItemNames" type="String[]" line="151"/>
            <declaration name="threadInfoV6Attributes" type="String[]" line="171"/>
            <declaration name="threadInfoCompositeType" type="CompositeType" line="178"/>
            <declaration name="threadInfoV5CompositeType" type="CompositeType" line="180"/>
            <declaration name="lockInfoCompositeType" type="CompositeType" line="181"/>
            <scope line="182">
                <scope line="183">
                    <declaration name="itemNames" type="String[]" line="187"/>
                    <declaration name="numV5Attributes" type="int" line="189"/>
                    <declaration name="v5ItemNames" type="String[]" line="191"/>
                    <declaration name="v5ItemDescs" type="String[]" line="192"/>
                    <declaration name="v5ItemTypes" type="OpenType[]" line="193"/>
                    <declaration name="i" type="int" line="194"/>
                    <scope line="195">
                        <scope line="196"/>
                    </scope>
                </scope>
                <scope line="210"/>
                <declaration name="o" type="Object" line="220"/>
                <declaration name="li" type="LockInfo" line="221"/>
                <declaration name="cd" type="CompositeData" line="223"/>
            </scope>
            <method name="isV5Attribute" type="boolean" line="227">
                <params>
                    <param name="itemName" type="String"/>
                </params>
                <scope line="228">
                    <scope line="229"/>
                </scope>
            </method>
            <method name="isCurrentVersion" type="boolean" line="236">
                <params>
                    <param name="cd" type="CompositeData"/>
                </params>
                <scope line="237"/>
            </method>
            <method name="threadId" type="long" line="244"/>
            <method name="threadName" type="String" line="248">
                <comment line="250">
                    The ThreadName item cannot be null so we check that
                     it is present with a non-null value.                    
                </comment>
                <declaration name="name" type="String" line="251"/>
                <scope line="252"/>
            </method>
            <method name="threadState" type="Thread.State" line="259"/>
            <method name="blockedTime" type="long" line="263"/>
            <method name="blockedCount" type="long" line="267"/>
            <method name="waitedTime" type="long" line="271"/>
            <method name="waitedCount" type="long" line="275"/>
            <method name="lockName" type="String" line="279">
                <comment line="281">
                    The LockName and LockOwnerName can legitimately be null,
                     we don&apos;t bother to check the value                    
                </comment>
            </method>
            <method name="lockOwnerId" type="long" line="285"/>
            <method name="lockOwnerName" type="String" line="289"/>
            <method name="suspended" type="boolean" line="293"/>
            <method name="inNative" type="boolean" line="297"/>
            <method name="stackTrace" type="StackTraceElement[]" line="301">
                <comment line="306">
                    The StackTrace item cannot be null, but if it is we will get
                     a NullPointerException when we ask for its length.                    
                </comment>
                <declaration name="stackTraceData" type="CompositeData[]" line="302"/>
                <declaration name="stackTrace" type="StackTraceElement[]" line="307"/>
                <scope line="309">
                    <declaration name="cdi" type="CompositeData" line="310"/>
                </scope>
            </method>
            <method name="lockInfo" type="LockInfo" line="317">
                <declaration name="converter" type="LockDataConverter" line="318"/>
                <declaration name="lockInfoData" type="CompositeData" line="319"/>
            </method>
            <method name="lockedMonitors" type="MonitorInfo[]" line="323">
                <comment line="328">
                    The LockedMonitors item cannot be null, but if it is we will get
                     a NullPointerException when we ask for its length.                    
                </comment>
                <declaration name="lockedMonitorsData" type="CompositeData[]" line="324"/>
                <declaration name="monitors" type="MonitorInfo[]" line="329"/>
                <scope line="331">
                    <declaration name="cdi" type="CompositeData" line="332"/>
                </scope>
            </method>
            <method name="lockedSynchronizers" type="LockInfo[]" line="338">
                <comment line="344">
                    The LockedSynchronizers item cannot be null, but if it is we will
                     get a NullPointerException when we ask for its length.                    
                </comment>
                <declaration name="converter" type="LockDataConverter" line="339"/>
                <declaration name="lockedSyncsData" type="CompositeData[]" line="340"/>
            </method>
            <javadoc line="348">
                Validate if the input CompositeData has the expected
                  CompositeType (i.e. contain all attributes with expected
                  names and types).                
            </javadoc>
            <method name="validateCompositeData" type="void" line="352">
                <params>
                    <param name="cd" type="CompositeData"/>
                </params>
                <comment line="362">
                    check if cd is an older version                    
                </comment>
                <comment line="379">
                    validate v6 attributes                    
                </comment>
                <scope line="353"/>
                <declaration name="type" type="CompositeType" line="357"/>
                <declaration name="currentVersion" type="boolean" line="358"/>
                <scope line="359">
                    <scope line="362"/>
                </scope>
                <declaration name="stackTraceData" type="CompositeData[]" line="368"/>
                <scope line="370"/>
                <scope line="374"/>
                <scope line="379">
                    <declaration name="li" type="CompositeData" line="380"/>
                    <scope line="381">
                        <scope line="383"/>
                    </scope>
                    <declaration name="lms" type="CompositeData[]" line="390"/>
                    <scope line="391"/>
                    <scope line="394"/>
                    <declaration name="lsyncs" type="CompositeData[]" line="398"/>
                    <scope line="399"/>
                    <scope line="402">
                        <scope line="404"/>
                    </scope>
                </scope>
            </method>
            <declaration name="serialVersionUID" type="long" line="414"/>
        </class>
    </source>