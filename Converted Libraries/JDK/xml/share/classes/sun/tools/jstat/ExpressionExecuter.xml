<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.jstat">
        <import package="java.util"/>
        <import package="sun.jvmstat.monitor"/>
        <class name="ExpressionExecuter" line="31">
            <comment line="49">
                evaluate the given expression.                
            </comment>
            <implements interface="ExpressionEvaluator"/>
            <javadoc line="31">
                A class implementing the ExpressionEvaluator to evaluate an expression
                  in the context of the available monitoring data.                
                <author>
                    Brian Doherty                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="debug" type="boolean" line="39"/>
            <declaration name="vm" type="MonitoredVm" line="41"/>
            <declaration name="map" type="HashMap&lt;String,Object&gt;" line="42"/>
            <method name="ExpressionExecuter" type="constructor" line="44">
                <params>
                    <param name="vm" type="MonitoredVm"/>
                </params>
            </method>
            <method name="evaluate" type="Object" line="51">
                <params>
                    <param name="e" type="Expression"/>
                </params>
                <comment line="69">
                    cache the data values for coherency of the values over                    
                </comment>
                <comment line="70">
                    the life of this expression executer.                    
                </comment>
                <scope line="52"/>
                <scope line="56"/>
                <scope line="60"/>
                <scope line="64">
                    <declaration name="id" type="Identifier" line="65"/>
                    <scope line="66"/>
                    <scope line="68">
                        <declaration name="m" type="Monitor" line="71"/>
                        <declaration name="v" type="Object" line="72"/>
                    </scope>
                </scope>
                <declaration name="l" type="Expression" line="78"/>
                <declaration name="r" type="Expression" line="79"/>
                <declaration name="op" type="Operator" line="81"/>
                <scope line="83"/>
                <scope line="85">
                    <declaration name="lval" type="Double" line="86"/>
                    <declaration name="rval" type="Double" line="87"/>
                    <declaration name="result" type="double" line="88"/>
                    <scope line="89"/>
                </scope>
            </method>
        </class>
    </source>