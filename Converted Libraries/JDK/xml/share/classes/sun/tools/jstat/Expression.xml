<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.jstat">
        <class name="Expression" line="28">
            <javadoc line="28">
                A class that represents a mathematical expression as a tree structure
                  containing operators as interior nodes and operands as leaves. The
                  operands can be literals or lazily bound variables.                
                <author>
                    Brian Doherty                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="nextOrdinal" type="int" line="37"/>
            <declaration name="debug" type="boolean" line="38"/>
            <declaration name="left" type="Expression" line="39"/>
            <declaration name="right" type="Expression" line="40"/>
            <declaration name="operator" type="Operator" line="41"/>
            <declaration name="ordinal" type="int" line="42"/>
            <method name="Expression" type="constructor" line="44">
                <scope line="45"/>
            </method>
            <method name="setLeft" type="void" line="50">
                <params>
                    <param name="left" type="Expression"/>
                </params>
                <scope line="51"/>
            </method>
            <method name="getLeft" type="Expression" line="57"/>
            <method name="setRight" type="void" line="61">
                <params>
                    <param name="right" type="Expression"/>
                </params>
                <scope line="62"/>
            </method>
            <method name="getRight" type="Expression" line="68"/>
            <method name="setOperator" type="void" line="72">
                <params>
                    <param name="o" type="Operator"/>
                </params>
                <scope line="73"/>
            </method>
            <method name="getOperator" type="Operator" line="79"/>
            <method name="toString" type="String" line="83">
                <declaration name="b" type="StringBuilder" line="84"/>
                <scope line="86"/>
                <scope line="89">
                    <scope line="91"/>
                </scope>
            </method>
        </class>
    </source>