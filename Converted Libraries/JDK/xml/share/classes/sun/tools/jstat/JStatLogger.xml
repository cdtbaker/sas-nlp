<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.jstat">
        <import package="java.util"/>
        <import package="java.io"/>
        <import package="sun.jvmstat.monitor"/>
        <import package="sun.jvmstat.monitor.event"/>
        <import package="java.util.regex.PatternSyntaxException"/>
        <class name="JStatLogger" line="7">
            <javadoc line="7">
                Class to sample and output various jvmstat statistics for a target Java
                  a target Java Virtual Machine.                
                <author>
                    Brian Doherty                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="monitoredVm" type="MonitoredVm" line="14"/>
            <declaration name="active" type="boolean" line="15"/>
            <method name="JStatLogger" type="constructor" line="16">
                <params>
                    <param name="monitoredVm" type="MonitoredVm"/>
                </params>
            </method>
            <javadoc line="19">
                print the monitors that match the given monitor name pattern string.                
            </javadoc>
            <method name="printNames" type="void" line="22">
                <params>
                    <param name="names" type="String"/>
                    <param name="comparator" type="Comparator&lt;Monitor&gt;"/>
                    <param name="showUnsupported" type="boolean"/>
                    <param name="out" type="PrintStream"/>
                </params>
                <declaration name="items" type="List&amp;lt;Monitor&amp;gt;" line="23"/>
                <scope line="25">
                    <scope line="26"/>
                </scope>
            </method>
            <javadoc line="32">
                print name=value pairs for the given list of monitors.                
            </javadoc>
            <method name="printSnapShot" type="void" line="35">
                <params>
                    <param name="names" type="String"/>
                    <param name="comparator" type="Comparator&lt;Monitor&gt;"/>
                    <param name="verbose" type="boolean"/>
                    <param name="showUnsupported" type="boolean"/>
                    <param name="out" type="PrintStream"/>
                </params>
                <declaration name="items" type="List&amp;lt;Monitor&amp;gt;" line="36"/>
            </method>
            <javadoc line="40">
                print name=value pairs for the given list of monitors.                
            </javadoc>
            <method name="printList" type="void" line="43">
                <params>
                    <param name="list" type="List&lt;Monitor&gt;"/>
                    <param name="verbose" type="boolean"/>
                    <param name="showUnsupported" type="boolean"/>
                    <param name="out" type="PrintStream"/>
                </params>
                <scope line="44">
                    <scope line="45"/>
                    <declaration name="buffer" type="StringBuilder" line="48"/>
                    <scope line="50"/>
                    <scope line="53"/>
                    <scope line="56"/>
                </scope>
            </method>
            <javadoc line="64">
                method to for asynchronous termination of sampling loops                
            </javadoc>
            <method name="stopLogging" type="void" line="67"/>
            <javadoc line="70">
                print samples according to the given format.                
            </javadoc>
            <method name="logSamples" type="void" line="73">
                <params>
                    <param name="formatter" type="OutputFormatter"/>
                    <param name="headerRate" type="int"/>
                    <param name="sampleInterval" type="int"/>
                    <param name="sampleCount" type="int"/>
                    <param name="out" type="PrintStream"/>
                </params>
                <declaration name="iterationCount" type="long" line="74"/>
                <declaration name="printHeaderCount" type="int" line="75"/>
                <declaration name="printHeader" type="int" line="76"/>
                <scope line="77"/>
                <scope line="81">
                    <scope line="82"/>
                    <scope line="87"/>
                    <scope line="90"/>
                    <scope line="93"/>
                </scope>
            </method>
        </class>
    </source>