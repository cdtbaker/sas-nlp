<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.jstat">
        <import package="java.util"/>
        <import package="java.io"/>
        <import package="sun.jvmstat.monitor"/>
        <import package="sun.jvmstat.monitor.event"/>
        <import package="java.util.regex.PatternSyntaxException"/>
        <class name="JStatLogger" line="34">
            <javadoc line="34">
                Class to sample and output various jvmstat statistics for a target Java
                  a target Java Virtual Machine.                
                <author>
                    Brian Doherty                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="monitoredVm" type="MonitoredVm" line="43"/>
            <declaration name="active" type="boolean" line="44"/>
            <method name="JStatLogger" type="constructor" line="46">
                <params>
                    <param name="monitoredVm" type="MonitoredVm"/>
                </params>
            </method>
            <javadoc line="50">
                print the monitors that match the given monitor name pattern string.                
            </javadoc>
            <method name="printNames" type="void" line="55">
                <params>
                    <param name="names" type="String"/>
                    <param name="comparator" type="Comparator<Monitor>"/>
                    <param name="showUnsupported" type="boolean"/>
                    <param name="out" type="PrintStream"/>
                </params>
                <comment line="58">
                    get the set of all monitors                    
                </comment>
                <declaration name="items" type="List&lt;Monitor&gt;" line="58"/>
                <scope line="61">
                    <scope line="62"/>
                </scope>
            </method>
            <javadoc line="69">
                print name=value pairs for the given list of monitors.                
            </javadoc>
            <method name="printSnapShot" type="void" line="75">
                <params>
                    <param name="names" type="String"/>
                    <param name="comparator" type="Comparator<Monitor>"/>
                    <param name="verbose" type="boolean"/>
                    <param name="showUnsupported" type="boolean"/>
                    <param name="out" type="PrintStream"/>
                </params>
                <comment line="78">
                    get the set of all monitors                    
                </comment>
                <declaration name="items" type="List&lt;Monitor&gt;" line="78"/>
            </method>
            <javadoc line="84">
                print name=value pairs for the given list of monitors.                
            </javadoc>
            <method name="printList" type="void" line="89">
                <params>
                    <param name="list" type="List<Monitor>"/>
                    <param name="verbose" type="boolean"/>
                    <param name="showUnsupported" type="boolean"/>
                    <param name="out" type="PrintStream"/>
                </params>
                <comment line="92">
                    print out the name of each available counter                    
                </comment>
                <scope line="92">
                    <scope line="94"/>
                    <declaration name="buffer" type="StringBuilder" line="98"/>
                    <scope line="101"/>
                    <scope line="103"/>
                    <scope line="107"/>
                </scope>
            </method>
            <javadoc line="117">
                method to for asynchronous termination of sampling loops                
            </javadoc>
            <method name="stopLogging" type="void" line="120"/>
            <javadoc line="124">
                print samples according to the given format.                
            </javadoc>
            <method name="logSamples" type="void" line="129">
                <params>
                    <param name="formatter" type="OutputFormatter"/>
                    <param name="headerRate" type="int"/>
                    <param name="sampleInterval" type="int"/>
                    <param name="sampleCount" type="int"/>
                    <param name="out" type="PrintStream"/>
                </params>
                <comment line="135">
                    if printHeader == 0, then only an initial column header is desired.                    
                </comment>
                <comment line="138">
                    print the column header once, disable future printing                    
                </comment>
                <comment line="144">
                    check if it&apos;s time to print another column header                    
                </comment>
                <comment line="152">
                    check if we&apos;ve hit the specified sample count                    
                </comment>
                <declaration name="iterationCount" type="long" line="131"/>
                <declaration name="printHeaderCount" type="int" line="132"/>
                <declaration name="printHeader" type="int" line="135"/>
                <scope line="136"/>
                <scope line="142">
                    <scope line="144"/>
                    <scope line="152"/>
                    <scope line="156"/>
                    <scope line="156"/>
                </scope>
            </method>
        </class>
    </source>