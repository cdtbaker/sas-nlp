<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.asm">
        <import package="sun.tools.java"/>
        <import package="java.util.Enumeration"/>
        <import package="java.io.IOException"/>
        <import package="java.io.DataOutputStream"/>
        <import package="java.io.PrintStream"/>
        <import package="java.util.Vector"/>
        <import package="sun.tools.javac"/>
        <import package="java.io.File"/>
        <import package="java.io.BufferedInputStream"/>
        <import package="java.io.DataInputStream"/>
        <import package="java.io.FileInputStream"/>
        <import package="java.io.FileNotFoundException"/>
        <import package="java.io.FileOutputStream"/>
        <import package="java.lang.String"/>
        <class name="Assembler" line="45">
            <comment line="82">
                JCOV                
            </comment>
            <comment line="112">
                end JCOV                
            </comment>
            <comment line="462">
                JCOV                
            </comment>
            <comment line="610">
                Increase count of methods for native methods                
            </comment>
            <comment line="618">
                Create class jcov element                
            </comment>
            <comment line="645">
                generate coverage data                
            </comment>
            <comment line="667">
                generate file of coverage data                
            </comment>
            <comment line="724">
                end JCOV                
            </comment>
            <implements interface="Constants"/>
            <javadoc line="45">
                This class is used to assemble the bytecode instructions for a method.
                  WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
                <author>
                    Arthur van Hoff                    
                </author>
            </javadoc>
            <declaration name="NOTREACHED" type="int" line="56"/>
            <declaration name="REACHED" type="int" line="57"/>
            <declaration name="NEEDED" type="int" line="58"/>
            <declaration name="first" type="Label" line="60"/>
            <declaration name="last" type="Instruction" line="61"/>
            <declaration name="maxdepth" type="int" line="62"/>
            <declaration name="maxvar" type="int" line="63"/>
            <declaration name="maxpc" type="int" line="64"/>
            <javadoc line="66">
                Add an instruction                
            </javadoc>
            <method name="add" type="void" line="69">
                <params>
                    <param name="inst" type="Instruction"/>
                </params>
                <scope line="70"/>
            </method>
            <method name="add" type="void" line="75">
                <params>
                    <param name="where" type="long"/>
                    <param name="opc" type="int"/>
                </params>
            </method>
            <method name="add" type="void" line="78">
                <params>
                    <param name="where" type="long"/>
                    <param name="opc" type="int"/>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <method name="add" type="void" line="82">
                <params>
                    <param name="where" type="long"/>
                    <param name="opc" type="int"/>
                    <param name="obj" type="Object"/>
                    <param name="flagCondInverted" type="boolean"/>
                </params>
            </method>
            <method name="add" type="void" line="86">
                <params>
                    <param name="flagNoCovered" type="boolean"/>
                    <param name="where" type="long"/>
                    <param name="opc" type="int"/>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <method name="add" type="void" line="90">
                <params>
                    <param name="where" type="long"/>
                    <param name="opc" type="int"/>
                    <param name="flagNoCovered" type="boolean"/>
                </params>
            </method>
            <declaration name="SourceClassList" type="Vector" line="94"/>
            <declaration name="TmpCovTable" type="Vector" line="96"/>
            <declaration name="JcovClassCountArray" type="int[]" line="98"/>
            <declaration name="JcovMagicLine" type="String" line="100"/>
            <declaration name="JcovClassLine" type="String" line="101"/>
            <declaration name="JcovSrcfileLine" type="String" line="102"/>
            <declaration name="JcovTimestampLine" type="String" line="103"/>
            <declaration name="JcovDataLine" type="String" line="104"/>
            <declaration name="JcovHeadingLine" type="String" line="105"/>
            <declaration name="arrayModifiers" type="int[]" line="107"/>
            <declaration name="arrayModifiersOpc" type="int[]" line="109"/>
            <javadoc line="113">
                Optimize instructions and mark those that can be reached                
            </javadoc>
            <method name="optimize" type="void" line="116">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="lbl" type="Label"/>
                </params>
                <scope line="119">
                    <scope line="134"/>
                    <scope line="177">
                        <declaration name="sw" type="SwitchData" line="178"/>
                        <scope line="180"/>
                    </scope>
                    <scope line="186">
                        <declaration name="td" type="TryData" line="187"/>
                        <scope line="189">
                            <declaration name="cd" type="CatchData" line="190"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="199">
                Eliminate instructions that are not reached                
            </javadoc>
            <method name="eliminate" type="boolean" line="202">
                <declaration name="change" type="boolean" line="203"/>
                <declaration name="prev" type="Instruction" line="204"/>
                <scope line="206">
                    <scope line="207"/>
                    <scope line="211"/>
                </scope>
            </method>
            <javadoc line="220">
                Optimize the byte codes                
            </javadoc>
            <method name="optimize" type="void" line="223">
                <params>
                    <param name="env" type="Environment"/>
                </params>
                <comment line="224">
                    listing(System.out);                    
                </comment>
                <comment line="226">
                    Figure out which instructions are reached                    
                </comment>
                <comment line="229">
                    Eliminate instructions that are not reached                    
                </comment>
                <scope line="225"/>
            </method>
            <javadoc line="233">
                Collect all constants into the constant table                
            </javadoc>
            <method name="collect" type="void" line="236">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="field" type="MemberDefinition"/>
                    <param name="tab" type="ConstantPool"/>
                </params>
                <comment line="237">
                    Collect constants for arguments only                    
                </comment>
                <comment line="238">
                    if a local variable table is generated                    
                </comment>
                <comment line="249">
                    Collect constants from the instructions                    
                </comment>
                <scope line="239">
                    <scope line="240">
                        <scope line="241">
                            <declaration name="f" type="MemberDefinition" line="242"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="250"/>
            </method>
            <javadoc line="255">
                Determine stack size, count local variables                
            </javadoc>
            <method name="balance" type="void" line="258">
                <params>
                    <param name="lbl" type="Label"/>
                    <param name="depth" type="int"/>
                </params>
                <comment line="260">
                    Environment.debugOutput(inst.toString() + &quot;: &quot; + depth + &quot; =&gt; &quot; +                    
                </comment>
                <comment line="261">
                    (depth + inst.balance()));                    
                </comment>
                <scope line="259">
                    <scope line="263"/>
                    <scope line="266"/>
                    <scope line="272">
                        <scope line="273"/>
                    </scope>
                    <scope line="326">
                        <declaration name="v" type="int" line="327"/>
                    </scope>
                    <scope line="338">
                        <declaration name="v" type="int" line="339"/>
                    </scope>
                    <scope line="347">
                        <declaration name="v" type="int" line="348"/>
                    </scope>
                    <scope line="355">
                        <declaration name="sw" type="SwitchData" line="356"/>
                        <scope line="358"/>
                    </scope>
                    <scope line="364">
                        <declaration name="td" type="TryData" line="365"/>
                        <scope line="366">
                            <declaration name="cd" type="CatchData" line="367"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="376">
                Generate code                
            </javadoc>
            <method name="write" type="void" line="381">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="out" type="DataOutputStream"/>
                    <param name="field" type="MemberDefinition"/>
                    <param name="tab" type="ConstantPool"/>
                </params>
                <comment line="382">
                    listing(System.out);                    
                </comment>
                <comment line="394">
                    Make sure the stack balances.  Also calculate maxvar and maxstack                    
                </comment>
                <comment line="403">
                    Assign PCs                    
                </comment>
                <comment line="418">
                    Write header                    
                </comment>
                <comment line="423">
                    Generate code                    
                </comment>
                <comment line="428">
                    write exceptions                    
                </comment>
                <comment line="431">
                    listing(System.out);                    
                </comment>
                <scope line="384">
                    <declaration name="sum" type="int" line="385"/>
                    <declaration name="v" type="Vector" line="386"/>
                    <scope line="387">
                        <declaration name="f" type="MemberDefinition" line="388"/>
                    </scope>
                </scope>
                <scope line="395"/>
                <scope line="397"/>
                <declaration name="pc" type="int" line="404"/>
                <scope line="405">
                    <declaration name="sz" type="int" line="407"/>
                    <scope line="408"/>
                    <scope line="413"/>
                </scope>
                <scope line="424"/>
                <scope line="430"/>
            </method>
            <javadoc line="436">
                Write the exceptions table                
            </javadoc>
            <method name="writeExceptions" type="void" line="439">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="out" type="DataOutputStream"/>
                    <param name="tab" type="ConstantPool"/>
                    <param name="first" type="Instruction"/>
                    <param name="last" type="Instruction"/>
                </params>
                <comment line="446">
                    System.out.println(&quot;EXCEPTION: &quot; + env.getSource() + &quot;, pc=&quot; + inst.pc + &quot;, end=&quot; + td.getEndLabel().pc + &quot;, hdl=&quot; + cd.getLabel().pc + &quot;, tp=&quot; + cd.getType());                    
                </comment>
                <scope line="440">
                    <scope line="441">
                        <declaration name="td" type="TryData" line="442"/>
                        <scope line="444">
                            <declaration name="cd" type="CatchData" line="445"/>
                            <scope line="450"/>
                            <scope line="452"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="462">
                Write the coverage table                
            </javadoc>
            <method name="writeCoverageTable" type="void" line="465">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="c" type="ClassDefinition"/>
                    <param name="out" type="DataOutputStream"/>
                    <param name="tab" type="ConstantPool"/>
                    <param name="whereField" type="long"/>
                </params>
                <comment line="466">
                                        
                </comment>
                <declaration name="TableLot" type="Vector" line="466"/>
                <declaration name="begseg" type="boolean" line="467"/>
                <declaration name="begmeth" type="boolean" line="468"/>
                <declaration name="whereClass" type="long" line="469"/>
                <declaration name="whereTry" type="Vector" line="470"/>
                <declaration name="numberTry" type="int" line="471"/>
                <declaration name="count" type="int" line="472"/>
                <scope line="474">
                    <declaration name="n" type="long" line="475"/>
                    <scope line="476">
                        <scope line="477"/>
                        <scope line="485">
                            <declaration name="findTry" type="boolean" line="486"/>
                            <scope line="487">
                                <scope line="488"/>
                            </scope>
                            <scope line="493"/>
                        </scope>
                    </scope>
                    <scope line="519">
                        <scope line="520"/>
                        <scope line="523"/>
                    </scope>
                    <scope line="532"/>
                    <scope line="544"/>
                    <scope line="548"/>
                    <scope line="554">
                        <declaration name="sw" type="SwitchData" line="555"/>
                        <scope line="556"/>
                        <scope line="560"/>
                        <scope line="563"/>
                    </scope>
                    <scope line="570">
                        <declaration name="sw" type="SwitchData" line="571"/>
                        <scope line="572">
                            <declaration name="v" type="Integer" line="573"/>
                        </scope>
                        <scope line="577"/>
                        <scope line="580"/>
                    </scope>
                </scope>
                <declaration name="Lot" type="Cover" line="589"/>
                <declaration name="ln" type="long" line="590"/>
                <scope line="593">
                    <scope line="602"/>
                </scope>
            </method>
            <method name="addNativeToJcovTab" type="void" line="613">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="c" type="ClassDefinition"/>
                </params>
            </method>
            <method name="createClassJcovElement" type="String" line="621">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="c" type="ClassDefinition"/>
                </params>
                <declaration name="SourceClass" type="String" line="622"/>
                <declaration name="ConvSourceClass" type="String" line="623"/>
                <declaration name="classJcovLine" type="String" line="624"/>
                <declaration name="blank" type="String" line="631"/>
                <scope line="633">
                    <scope line="634"/>
                </scope>
            </method>
            <method name="GenVecJCov" type="void" line="648">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="c" type="ClassDefinition"/>
                    <param name="Time" type="long"/>
                </params>
                <comment line="654">
                    data format                    
                </comment>
                <declaration name="SourceFile" type="String" line="649"/>
                <scope line="657">
                    <scope line="658"/>
                </scope>
            </method>
            <method name="GenJCov" type="void" line="670">
                <params>
                    <param name="env" type="Environment"/>
                </params>
                <comment line="684">
                    this is a good Jcov file                    
                </comment>
                <comment line="703">
                    re-write old class                    
                </comment>
                <scope line="672">
                    <declaration name="outFile" type="File" line="673"/>
                    <scope line="674">
                        <declaration name="JCovd" type="DataInputStream" line="675"/>
                        <declaration name="CurrLine" type="String" line="678"/>
                        <declaration name="first" type="boolean" line="679"/>
                        <declaration name="Class" type="String" line="680"/>
                        <scope line="683">
                            <scope line="686">
                                <scope line="687">
                                    <scope line="689">
                                        <declaration name="clsName" type="String" line="690"/>
                                        <declaration name="idx" type="int" line="691"/>
                                        <scope line="693"/>
                                        <scope line="697"/>
                                    </scope>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                    <declaration name="CovFile" type="PrintStream" line="709"/>
                    <scope line="711"/>
                </scope>
                <scope line="716"/>
                <scope line="719"/>
            </method>
            <javadoc line="726">
                Write the linenumber table                
            </javadoc>
            <method name="writeLineNumberTable" type="void" line="729">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="out" type="DataOutputStream"/>
                    <param name="tab" type="ConstantPool"/>
                </params>
                <comment line="749">
                    System.out.println(&quot;pc = &quot; + inst.pc + &quot;, ln = &quot; + ln);                    
                </comment>
                <declaration name="ln" type="long" line="730"/>
                <declaration name="count" type="int" line="731"/>
                <scope line="733">
                    <declaration name="n" type="long" line="734"/>
                    <scope line="735"/>
                </scope>
                <scope line="743">
                    <declaration name="n" type="long" line="744"/>
                    <scope line="745"/>
                </scope>
            </method>
            <javadoc line="754">
                Figure out when registers contain a legal value. This is done
                  using a simple data flow algorithm. This information is later used
                  to generate the local variable table.                
            </javadoc>
            <method name="flowFields" type="void" line="759">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="lbl" type="Label"/>
                    <param name="locals" type="MemberDefinition"/>
                </params>
                <comment line="761">
                    Been here before. Erase any conflicts.                    
                </comment>
                <comment line="771">
                    Remember the set of active registers at this point                    
                </comment>
                <scope line="760">
                    <declaration name="f" type="MemberDefinition" line="762"/>
                    <scope line="763">
                        <scope line="764"/>
                    </scope>
                </scope>
                <declaration name="newlocals" type="MemberDefinition" line="775"/>
                <scope line="779">
                    <scope line="791">
                        <declaration name="v" type="LocalVariable" line="792"/>
                    </scope>
                    <scope line="821">
                        <declaration name="sw" type="SwitchData" line="822"/>
                        <scope line="824"/>
                    </scope>
                    <scope line="830">
                        <declaration name="catches" type="Vector" line="831"/>
                        <scope line="832">
                            <declaration name="cd" type="CatchData" line="833"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="842">
                Write the local variable table. The necessary constants have already been
                  added to the constant table by the collect() method. The flowFields method
                  is used to determine which variables are alive at each pc.                
            </javadoc>
            <method name="writeLocalVariableTable" type="void" line="847">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="field" type="MemberDefinition"/>
                    <param name="out" type="DataOutputStream"/>
                    <param name="tab" type="ConstantPool"/>
                </params>
                <comment line="851">
                    Initialize arguments                    
                </comment>
                <comment line="865">
                    Initialize arguments again                    
                </comment>
                <comment line="905">
                    flush  previous labels                    
                </comment>
                <comment line="911">
                    init new labels                    
                </comment>
                <comment line="914">
                    unreachable code??                    
                </comment>
                <comment line="928">
                    flush  remaining labels                    
                </comment>
                <comment line="935">
                    write the local variable table                    
                </comment>
                <declaration name="locals" type="MemberDefinition" line="848"/>
                <declaration name="i" type="int" line="849"/>
                <scope line="852">
                    <declaration name="reg" type="int" line="853"/>
                    <declaration name="v" type="Vector" line="854"/>
                    <scope line="855">
                        <declaration name="f" type="MemberDefinition" line="856"/>
                    </scope>
                </scope>
                <declaration name="lvtab" type="LocalVariableTable" line="863"/>
                <scope line="868">
                    <declaration name="reg" type="int" line="869"/>
                    <declaration name="v" type="Vector" line="870"/>
                    <scope line="871">
                        <declaration name="f" type="MemberDefinition" line="872"/>
                    </scope>
                </scope>
                <declaration name="pcs" type="int" line="879"/>
                <scope line="881">
                    <scope line="893">
                        <declaration name="v" type="LocalVariable" line="894"/>
                        <declaration name="pc" type="int" line="895"/>
                        <scope line="896"/>
                    </scope>
                    <scope line="904">
                        <scope line="906">
                            <scope line="907"/>
                        </scope>
                        <declaration name="pc" type="int" line="912"/>
                        <declaration name="labelLocals" type="MemberDefinition[]" line="913"/>
                        <scope line="914"/>
                        <scope line="917"/>
                        <scope line="920"/>
                    </scope>
                </scope>
                <scope line="929">
                    <scope line="930"/>
                </scope>
            </method>
            <javadoc line="939">
                Return true if empty                
            </javadoc>
            <method name="empty" type="boolean" line="942"/>
            <javadoc line="946">
                Print the byte codes                
            </javadoc>
            <method name="listing" type="void" line="949">
                <params>
                    <param name="out" type="PrintStream"/>
                </params>
                <scope line="951"/>
            </method>
        </class>
    </source>