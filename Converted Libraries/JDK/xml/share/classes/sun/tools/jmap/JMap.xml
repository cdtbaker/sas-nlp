<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.jmap">
        <import package="java.lang.reflect.Method"/>
        <import package="java.io.File"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="com.sun.tools.attach.VirtualMachine"/>
        <import package="com.sun.tools.attach.AttachNotSupportedException"/>
        <import package="sun.tools.attach.HotSpotVirtualMachine"/>
        <class name="JMap" line="44">
            <comment line="47">
                Options handled by the attach mechanism                
            </comment>
            <comment line="52">
                These options imply the use of a SA tool                
            </comment>
            <comment line="56">
                The -F (force) option is currently not passed through to SA                
            </comment>
            <comment line="59">
                Default option (if nothing provided)                
            </comment>
            <comment line="148">
                Invoke SA tool  with the given arguments                
            </comment>
            <comment line="201">
                loads the given class using the system class loader                
            </comment>
            <comment line="249">
                Parse the options to the -dump option. Valid options are format=b and
                 file=&lt;file&gt;. Returns &lt;file&gt; if provided. Returns null if &lt;file&gt; not
                 provided, or invalid option.                
            </comment>
            <comment line="294">
                Attach to &lt;pid&gt;, existing if we fail to attach                
            </comment>
            <comment line="314">
                Read the stream from the target VM until EOF, then detach                
            </comment>
            <comment line="330">
                return a new string array with arg as the first element                
            </comment>
            <comment line="338">
                returns true if SA is available                
            </comment>
            <comment line="344">
                print usage message                
            </comment>
            <declaration name="HISTO_OPTION" type="String" line="47"/>
            <declaration name="LIVE_HISTO_OPTION" type="String" line="48"/>
            <declaration name="DUMP_OPTION_PREFIX" type="String" line="49"/>
            <declaration name="SA_TOOL_OPTIONS" type="String" line="52"/>
            <declaration name="FORCE_SA_OPTION" type="String" line="56"/>
            <declaration name="DEFAULT_OPTION" type="String" line="59"/>
            <method name="main" type="void" line="61">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <comment line="64">
                    no arguments                    
                </comment>
                <comment line="67">
                    used to indicate if we should use SA                    
                </comment>
                <comment line="70">
                    the chosen option (-heap, -dump:*, ... )                    
                </comment>
                <comment line="73">
                    First iterate over the options (arguments starting with -).  There should be
                     one (but maybe two if -F is also used).                    
                </comment>
                <comment line="85">
                    option already specified                    
                </comment>
                <comment line="92">
                    if no option provided then use default.                    
                </comment>
                <comment line="100">
                    Next we check the parameter count. For the SA tools there are
                     one or two parameters. For the built-in -dump option there is
                     only one parameter (the process-id)                    
                </comment>
                <comment line="111">
                    the parameter for the -dump option is a process-id.
                     If it doesn&apos;t parse to a number then it must be SA
                     debug server                    
                </comment>
                <comment line="120">
                    at this point we know if we are executing an SA tool or a built-in
                     option.                    
                </comment>
                <comment line="124">
                    parameters (&lt;pid&gt; or &lt;exe&gt; &lt;core&gt;)                    
                </comment>
                <comment line="133">
                    Here we handle the built-in options
                     As more options are added we should create an abstract tool class and
                     have a table to map the options                    
                </comment>
                <scope line="62"/>
                <declaration name="useSA" type="boolean" line="67"/>
                <declaration name="option" type="String" line="70"/>
                <declaration name="optionCount" type="int" line="74"/>
                <scope line="75">
                    <declaration name="arg" type="String" line="76"/>
                    <scope line="77"/>
                    <scope line="80"/>
                    <scope line="82">
                        <scope line="83"/>
                    </scope>
                </scope>
                <scope line="92"/>
                <scope line="95"/>
                <declaration name="paramCount" type="int" line="102"/>
                <scope line="103"/>
                <scope line="107"/>
                <scope line="109">
                    <scope line="113"/>
                </scope>
                <scope line="122">
                    <declaration name="params" type="String" line="124"/>
                    <scope line="125"/>
                </scope>
                <scope line="130">
                    <declaration name="pid" type="String" line="131"/>
                    <scope line="135"/>
                    <scope line="137"/>
                    <scope line="139"/>
                    <scope line="141"/>
                </scope>
            </method>
            <method name="runTool" type="void" line="148">
                <params>
                    <param name="option" type="String"/>
                    <param name="args" type="String"/>
                </params>
                <comment line="161">
                    -dump option needs to be handled in a special way                    
                </comment>
                <comment line="163">
                    first check that the option can be parsed                    
                </comment>
                <comment line="167">
                    tool for heap dumping                    
                </comment>
                <comment line="170">
                    HeapDumper -f &lt;file&gt;                    
                </comment>
                <comment line="184">
                    no mapping to tool                    
                </comment>
                <comment line="187">
                    Tool not available on this  platform.                    
                </comment>
                <comment line="193">
                    invoke the main method with the arguments                    
                </comment>
                <declaration name="tools" type="String[][]" line="149"/>
                <declaration name="tool" type="String" line="158"/>
                <scope line="161">
                    <declaration name="fn" type="String" line="163"/>
                </scope>
                <scope line="172">
                    <declaration name="i" type="int" line="173"/>
                    <scope line="174">
                        <scope line="175"/>
                    </scope>
                </scope>
                <scope line="182"/>
                <declaration name="c" type="Class&lt;?&gt;" line="187"/>
                <scope line="188"/>
                <declaration name="argTypes" type="Class[]" line="193"/>
                <declaration name="m" type="Method" line="194"/>
                <declaration name="invokeArgs" type="Object[]" line="196"/>
            </method>
            <method name="loadClass" type="Class" line="201">
                <params>
                    <param name="name" type="String"/>
                </params>
                <comment line="203">
                    We specify the system clas loader so as to cater for development
                     environments where this class is on the boot class path but sa-jdi.jar
                     is on the system class path. Once the JDK is deployed then both
                     tools.jar and sa-jdi.jar are on the system class path.                    
                </comment>
                <scope line="208"/>
                <scope line="211"/>
            </method>
            <declaration name="LIVE_OBJECTS_OPTION" type="String" line="215"/>
            <declaration name="ALL_OBJECTS_OPTION" type="String" line="216"/>
            <method name="histo" type="void" line="217">
                <params>
                    <param name="pid" type="String"/>
                    <param name="live" type="boolean"/>
                </params>
                <declaration name="vm" type="VirtualMachine" line="218"/>
                <declaration name="in" type="InputStream" line="219"/>
            </method>
            <method name="dump" type="void" line="224">
                <params>
                    <param name="pid" type="String"/>
                    <param name="options" type="String"/>
                </params>
                <comment line="226">
                    parse the options to get the dump filename                    
                </comment>
                <comment line="229">
                    invalid options or no filename                    
                </comment>
                <comment line="232">
                    get the canonical path - important to avoid just passing
                     a &quot;heap.bin&quot; and having the dump created in the target VM
                     working directory rather than the directory where jmap
                     is executed.                    
                </comment>
                <comment line="238">
                    dump live objects only or not                    
                </comment>
                <declaration name="filename" type="String" line="226"/>
                <scope line="227"/>
                <declaration name="live" type="boolean" line="238"/>
                <declaration name="vm" type="VirtualMachine" line="240"/>
                <declaration name="in" type="InputStream" line="242"/>
            </method>
            <method name="parseDumpOptions" type="String" line="251">
                <params>
                    <param name="arg" type="String"/>
                </params>
                <comment line="257">
                    options are separated by comma (,)                    
                </comment>
                <comment line="264">
                    ignore format (not needed at this time)                    
                </comment>
                <comment line="266">
                    a valid suboption                    
                </comment>
                <comment line="269">
                    file=&lt;file&gt; - check that &lt;file&gt; is specified                    
                </comment>
                <comment line="276">
                    option not recognized                    
                </comment>
                <declaration name="filename" type="String" line="254"/>
                <declaration name="options" type="String" line="257"/>
                <scope line="259">
                    <declaration name="option" type="String" line="260"/>
                    <scope line="262"/>
                    <scope line="264"/>
                    <scope line="266">
                        <scope line="269">
                            <scope line="271"/>
                        </scope>
                        <scope line="274"/>
                    </scope>
                </scope>
            </method>
            <method name="isDumpLiveObjects" type="boolean" line="282">
                <params>
                    <param name="arg" type="String"/>
                </params>
                <comment line="284">
                    options are separated by comma (,)                    
                </comment>
                <declaration name="options" type="String" line="284"/>
                <scope line="285">
                    <scope line="286"/>
                </scope>
            </method>
            <method name="attach" type="VirtualMachine" line="294">
                <params>
                    <param name="pid" type="String"/>
                </params>
                <comment line="310">
                    keep compiler happy                    
                </comment>
                <scope line="295"/>
                <scope line="297">
                    <declaration name="msg" type="String" line="298"/>
                    <scope line="299"/>
                    <scope line="301"/>
                    <scope line="304"/>
                </scope>
            </method>
            <method name="drain" type="void" line="314">
                <params>
                    <param name="vm" type="VirtualMachine"/>
                    <param name="in" type="InputStream"/>
                </params>
                <comment line="316">
                    read to EOF and just print output                    
                </comment>
                <declaration name="b" type="byte" line="316"/>
                <declaration name="n" type="int" line="317"/>
                <scope line="318">
                    <scope line="320">
                        <declaration name="s" type="String" line="321"/>
                    </scope>
                </scope>
            </method>
            <method name="prepend" type="String[]" line="330">
                <params>
                    <param name="arg" type="String"/>
                    <param name="args" type="String"/>
                </params>
                <declaration name="newargs" type="String[]" line="331"/>
            </method>
            <method name="haveSA" type="boolean" line="338">
                <declaration name="c" type="Class" line="339"/>
            </method>
            <method name="usage" type="void" line="344">
                <scope line="346"/>
                <scope line="374"/>
            </method>
        </class>
    </source>