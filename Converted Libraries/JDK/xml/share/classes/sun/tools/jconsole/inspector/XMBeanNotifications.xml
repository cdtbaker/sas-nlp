<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.jconsole.inspector">
        <import package="javax.swing"/>
        <import package="javax.swing.event"/>
        <import package="javax.swing.table"/>
        <import package="javax.swing.tree"/>
        <import package="java.awt.Font"/>
        <import package="java.text.SimpleDateFormat"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.EventQueue"/>
        <import package="java.awt.event"/>
        <import package="java.awt.Dimension"/>
        <import package="java.util"/>
        <import package="java.io"/>
        <import package="java.lang.reflect.Array"/>
        <import package="javax.management"/>
        <import package="javax.management.openmbean.CompositeData"/>
        <import package="javax.management.openmbean.TabularData"/>
        <import package="sun.tools.jconsole.JConsole"/>
        <import package="sun.tools.jconsole.Resources"/>
        <class name="XMBeanNotifications" line="20">
            <extends class="JTable"/>
            <implements interface="NotificationListener"/>
            <declaration name="columnNames" type="String[]" line="21"/>
            <declaration name="listeners" type="HashMap&lt;ObjectName,XMBeanNotificationsListener&gt;" line="22"/>
            <declaration name="subscribed" type="boolean" line="23"/>
            <declaration name="currentListener" type="XMBeanNotificationsListener" line="24"/>
            <declaration name="NOTIFICATION_RECEIVED_EVENT" type="String" line="25"/>
            <declaration name="notificationListenersList" type="List&lt;NotificationListener&gt;" line="26"/>
            <declaration name="enabled" type="boolean" line="27"/>
            <declaration name="normalFont" type="Font" line="28"/>
            <declaration name="rowMinHeight" type="int" line="29"/>
            <declaration name="userDataEditor" type="TableCellEditor" line="30"/>
            <declaration name="mouseListener" type="NotifMouseListener" line="31"/>
            <declaration name="timeFormater" type="SimpleDateFormat" line="32"/>
            <declaration name="editor" type="TableCellEditor" line="33"/>
            <method name="XMBeanNotifications" type="constructor" line="34">
                <declaration name="l" type="ArrayList&lt;NotificationListener&gt;" line="39"/>
                <declaration name="colModel" type="TableColumnModel" line="42"/>
            </method>
            <method name="cancelCellEditing" type="void" line="52">
                <declaration name="tce" type="TableCellEditor" line="53"/>
                <scope line="54"/>
            </method>
            <method name="stopCellEditing" type="void" line="58">
                <declaration name="tce" type="TableCellEditor" line="59"/>
                <scope line="60"/>
            </method>
            <method name="isCellEditable" type="boolean" line="64">
                <params>
                    <param name="row" type="int"/>
                    <param name="col" type="int"/>
                </params>
                <declaration name="cell" type="UserDataCell" line="65"/>
                <scope line="66"/>
            </method>
            <method name="setValueAt" type="void" line="71">
                <params>
                    <param name="value" type="Object"/>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="prepareRenderer" type="Component" line="73">
                <params>
                    <param name="renderer" type="TableCellRenderer"/>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
                <scope line="74"/>
                <declaration name="comp" type="Component" line="77"/>
                <scope line="78"/>
                <declaration name="cell" type="UserDataCell" line="82"/>
                <scope line="83">
                    <declaration name="size" type="int" line="85"/>
                    <scope line="86">
                        <scope line="87"/>
                    </scope>
                </scope>
                <scope line="92"/>
            </method>
            <method name="getCellRenderer" type="TableCellRenderer" line="97">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
                <scope line="98"/>
                <declaration name="renderer" type="DefaultTableCellRenderer" line="101"/>
                <declaration name="toolTip" type="String" line="102"/>
                <declaration name="cell" type="UserDataCell" line="103"/>
                <scope line="104"/>
                <scope line="107"/>
                <scope line="110"/>
                <scope line="113">
                    <declaration name="val" type="Object" line="114"/>
                    <scope line="115"/>
                </scope>
            </method>
            <method name="getUserDataCell" type="UserDataCell" line="122">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
                <declaration name="obj" type="Object" line="123"/>
                <scope line="124"/>
            </method>
            <method name="dispose" type="void" line="129"/>
            <method name="getReceivedNotifications" type="long" line="132">
                <params>
                    <param name="mbean" type="XMBean"/>
                </params>
                <declaration name="listener" type="XMBeanNotificationsListener" line="133"/>
                <scope line="134"/>
                <scope line="137"/>
            </method>
            <method name="clearCurrentNotifications" type="boolean" line="141">
                <scope line="143"/>
                <scope line="147"/>
            </method>
            <method name="unregisterListener" type="boolean" line="151">
                <params>
                    <param name="node" type="DefaultMutableTreeNode"/>
                </params>
                <declaration name="mbean" type="XMBean" line="152"/>
            </method>
            <method name="registerListener" type="void" line="155">
                <params>
                    <param name="node" type="DefaultMutableTreeNode"/>
                </params>
                <declaration name="mbean" type="XMBean" line="156"/>
                <scope line="157">
                    <scope line="158"/>
                    <scope line="162">
                        <scope line="163"/>
                    </scope>
                </scope>
                <declaration name="listener" type="XMBeanNotificationsListener" line="169"/>
                <scope line="170"/>
                <scope line="174">
                    <scope line="175"/>
                </scope>
            </method>
            <method name="handleNotification" type="void" line="183">
                <params>
                    <param name="notif" type="Notification"/>
                    <param name="handback" type="Object"/>
                </params>
                <scope line="184">
                    <scope line="185">
                        <declaration name="mbean" type="ObjectName" line="186"/>
                        <scope line="187"/>
                    </scope>
                </scope>
                <scope line="192">
                    <scope line="193"/>
                </scope>
            </method>
            <method name="disableNotifications" type="void" line="199"/>
            <method name="unregister" type="boolean" line="204">
                <params>
                    <param name="mbean" type="ObjectName"/>
                </params>
                <declaration name="listener" type="XMBeanNotificationsListener" line="205"/>
                <scope line="206"/>
                <scope line="210"/>
            </method>
            <method name="addNotificationsListener" type="void" line="214">
                <params>
                    <param name="nl" type="NotificationListener"/>
                </params>
            </method>
            <method name="removeNotificationsListener" type="void" line="217">
                <params>
                    <param name="nl" type="NotificationListener"/>
                </params>
            </method>
            <method name="fireNotificationReceived" type="void" line="220">
                <params>
                    <param name="listener" type="XMBeanNotificationsListener"/>
                    <param name="mbean" type="XMBean"/>
                    <param name="node" type="DefaultMutableTreeNode"/>
                    <param name="rowData" type="Object[]"/>
                    <param name="received" type="long"/>
                </params>
                <scope line="221">
                    <declaration name="tableModel" type="DefaultTableModel" line="222"/>
                    <scope line="223"/>
                </scope>
                <declaration name="notif" type="Notification" line="228"/>
                <scope line="230"/>
            </method>
            <method name="updateModel" type="void" line="234">
                <params>
                    <param name="data" type="List<Object[]>"/>
                </params>
                <declaration name="tableModel" type="DefaultTableModel" line="236"/>
                <scope line="237"/>
            </method>
            <method name="isListenerRegistered" type="boolean" line="241">
                <params>
                    <param name="mbean" type="XMBean"/>
                </params>
                <declaration name="listener" type="XMBeanNotificationsListener" line="242"/>
                <scope line="243"/>
            </method>
            <method name="loadNotifications" type="void" line="248">
                <params>
                    <param name="mbean" type="XMBean"/>
                </params>
                <declaration name="listener" type="XMBeanNotificationsListener" line="249"/>
                <scope line="251">
                    <declaration name="data" type="List&lt;Object[]&gt;" line="253"/>
                </scope>
                <scope line="259"/>
            </method>
            <method name="setColumnEditors" type="void" line="263">
                <declaration name="tcm" type="TableColumnModel" line="264"/>
                <scope line="265">
                    <declaration name="tc" type="TableColumn" line="266"/>
                    <scope line="267"/>
                    <scope line="270"/>
                </scope>
            </method>
            <method name="isTableEditable" type="boolean" line="275"/>
            <method name="emptyTable" type="void" line="278">
                <declaration name="model" type="DefaultTableModel" line="279"/>
                <scope line="280"/>
            </method>
            <method name="updateUserDataCell" type="void" line="285">
                <params>
                    <param name="row" type="int"/>
                    <param name="col" type="int"/>
                </params>
                <declaration name="obj" type="Object" line="286"/>
                <scope line="287">
                    <declaration name="cell" type="UserDataCell" line="288"/>
                    <scope line="289">
                        <scope line="290"/>
                    </scope>
                    <scope line="297"/>
                </scope>
            </method>
            <class name="UserDataCellRenderer" line="305">
                <extends class="DefaultTableCellRenderer"/>
                <declaration name="comp" type="Component" line="306"/>
                <method name="UserDataCellRenderer" type="constructor" line="307">
                    <params>
                        <param name="comp" type="Component"/>
                    </params>
                    <declaration name="d" type="Dimension" line="309"/>
                    <scope line="310"/>
                </method>
                <method name="getTableCellRendererComponent" type="Component" line="314">
                    <params>
                        <param name="table" type="JTable"/>
                        <param name="value" type="Object"/>
                        <param name="isSelected" type="boolean"/>
                        <param name="hasFocus" type="boolean"/>
                        <param name="row" type="int"/>
                        <param name="column" type="int"/>
                    </params>
                </method>
                <method name="getComponent" type="Component" line="317"/>
            </class>
            <class name="UserDataCell" line="321">
                <declaration name="minRenderer" type="TableCellRenderer" line="322"/>
                <declaration name="maxRenderer" type="UserDataCellRenderer" line="323"/>
                <declaration name="minHeight" type="int" line="324"/>
                <declaration name="minimized" type="boolean" line="325"/>
                <declaration name="init" type="boolean" line="326"/>
                <declaration name="userData" type="Object" line="327"/>
                <method name="UserDataCell" type="constructor" line="328">
                    <params>
                        <param name="userData" type="Object"/>
                        <param name="max" type="Component"/>
                    </params>
                </method>
                <method name="toString" type="String" line="332">
                    <scope line="333"/>
                    <scope line="336">
                        <declaration name="name" type="String" line="337"/>
                        <declaration name="length" type="int" line="338"/>
                    </scope>
                    <scope line="341"/>
                </method>
                <method name="isInited" type="boolean" line="346"/>
                <method name="init" type="void" line="349">
                    <params>
                        <param name="minRenderer" type="TableCellRenderer"/>
                        <param name="minHeight" type="int"/>
                    </params>
                </method>
                <method name="switchState" type="void" line="354"/>
                <method name="isMaximized" type="boolean" line="357"/>
                <method name="minimize" type="void" line="360"/>
                <method name="maximize" type="void" line="363"/>
                <method name="getHeight" type="int" line="366">
                    <scope line="367"/>
                    <scope line="370"/>
                </method>
                <method name="getRenderer" type="TableCellRenderer" line="374">
                    <scope line="375"/>
                    <scope line="378"/>
                </method>
            </class>
            <class name="NotifMouseListener" line="383">
                <extends class="MouseAdapter"/>
                <method name="mousePressed" type="void" line="384">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <scope line="385">
                        <scope line="386">
                            <declaration name="row" type="int" line="387"/>
                            <declaration name="col" type="int" line="388"/>
                            <scope line="389"/>
                            <scope line="392"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="UserDataCellEditor" line="400">
                <extends class="XTextFieldEditor"/>
                <method name="getTableCellEditorComponent" type="Component" line="401">
                    <params>
                        <param name="table" type="JTable"/>
                        <param name="value" type="Object"/>
                        <param name="isSelected" type="boolean"/>
                        <param name="row" type="int"/>
                        <param name="column" type="int"/>
                    </params>
                    <declaration name="val" type="Object" line="402"/>
                    <scope line="403">
                        <declaration name="obj" type="Object" line="404"/>
                        <scope line="405">
                            <declaration name="cell" type="UserDataCell" line="406"/>
                            <scope line="407">
                                <declaration name="zr" type="UserDataCellRenderer" line="408"/>
                            </scope>
                        </scope>
                        <scope line="412">
                            <declaration name="comp" type="Component" line="413"/>
                        </scope>
                    </scope>
                </method>
                <method name="stopCellEditing" type="boolean" line="420">
                    <declaration name="editingRow" type="int" line="421"/>
                    <declaration name="editingColumn" type="int" line="422"/>
                    <scope line="423">
                        <declaration name="obj" type="Object" line="424"/>
                        <scope line="425">
                            <declaration name="cell" type="UserDataCell" line="426"/>
                            <scope line="427"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="XMBeanNotificationsListener" line="436">
                <implements interface="NotificationListener"/>
                <declaration name="columnNames" type="String[]" line="437"/>
                <declaration name="xmbean" type="XMBean" line="438"/>
                <declaration name="node" type="DefaultMutableTreeNode" line="439"/>
                <declaration name="received" type="long" line="440"/>
                <declaration name="notifications" type="XMBeanNotifications" line="441"/>
                <declaration name="unregistered" type="boolean" line="442"/>
                <declaration name="data" type="ArrayList&lt;Object[]&gt;" line="443"/>
                <method name="XMBeanNotificationsListener" type="constructor" line="444">
                    <params>
                        <param name="notifications" type="XMBeanNotifications"/>
                        <param name="xmbean" type="XMBean"/>
                        <param name="node" type="DefaultMutableTreeNode"/>
                        <param name="columnNames" type="String[]"/>
                    </params>
                </method>
                <method name="getData" type="List<Object[]>" line="451"/>
                <method name="clear" type="void" line="454"/>
                <method name="isRegistered" type="boolean" line="458"/>
                <method name="unregister" type="void" line="461">
                    <scope line="462"/>
                    <scope line="465">
                        <scope line="466"/>
                    </scope>
                </method>
                <method name="getReceivedNotifications" type="long" line="473"/>
                <method name="register" type="void" line="476">
                    <params>
                        <param name="node" type="DefaultMutableTreeNode"/>
                    </params>
                    <scope line="479"/>
                    <scope line="483">
                        <scope line="484"/>
                    </scope>
                </method>
                <method name="handleNotification" type="void" line="490">
                    <params>
                        <param name="n" type="Notification"/>
                        <param name="hb" type="Object"/>
                    </params>
                    <anonymous_class line="491">
                        <method name="run" type="void" line="492">
                            <scope line="493">
                                <scope line="494">
                                    <scope line="495"/>
                                    <declaration name="receivedDate" type="Date" line="498"/>
                                    <declaration name="time" type="String" line="499"/>
                                    <declaration name="userData" type="Object" line="500"/>
                                    <declaration name="comp" type="Component" line="501"/>
                                    <declaration name="cell" type="UserDataCell" line="502"/>
                                    <scope line="503"/>
                                    <declaration name="rowData" type="Object[]" line="507"/>
                                </scope>
                                <scope line="512">
                                    <scope line="513"/>
                                </scope>
                            </scope>
                        </method>
                    </anonymous_class>
                </method>
            </class>
        </class>
    </source>