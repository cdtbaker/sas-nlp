<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.jconsole.inspector">
        <import package="java.io.IOException"/>
        <import package="java.util"/>
        <import package="javax.management"/>
        <import package="javax.swing"/>
        <import package="javax.swing.tree"/>
        <import package="sun.tools.jconsole.JConsole"/>
        <import package="sun.tools.jconsole.MBeansTab"/>
        <import package="sun.tools.jconsole.Resources"/>
        <import package="sun.tools.jconsole.inspector.XNodeInfo"/>
        <import package="sun.tools.jconsole.inspector.XNodeInfo.Type"/>
        <class name="XTree" line="12">
            <extends class="JTree"/>
            <declaration name="orderedKeyPropertyList" type="List&lt;String&gt;" line="13"/>
            <scope line="14">
                <declaration name="keyPropertyList" type="String" line="15"/>
                <scope line="16"/>
                <scope line="20">
                    <declaration name="st" type="StringTokenizer" line="21"/>
                    <scope line="22"/>
                </scope>
            </scope>
            <declaration name="mbeansTab" type="MBeansTab" line="27"/>
            <declaration name="nodes" type="Map&lt;String,DefaultMutableTreeNode&gt;" line="28"/>
            <method name="XTree" type="constructor" line="29">
                <params>
                    <param name="mbeansTab" type="MBeansTab"/>
                </params>
            </method>
            <method name="XTree" type="constructor" line="32">
                <params>
                    <param name="root" type="TreeNode"/>
                    <param name="mbeansTab" type="MBeansTab"/>
                </params>
            </method>
            <javadoc line="39">
                This method removes the node from its parent                
            </javadoc>
            <method name="removeChildNode" type="void" line="42">
                <params>
                    <param name="child" type="DefaultMutableTreeNode"/>
                </params>
                <declaration name="model" type="DefaultTreeModel" line="43"/>
            </method>
            <javadoc line="46">
                This method adds the child to the specified parent node
                  at specific index.                
            </javadoc>
            <method name="addChildNode" type="void" line="50">
                <params>
                    <param name="parent" type="DefaultMutableTreeNode"/>
                    <param name="child" type="DefaultMutableTreeNode"/>
                    <param name="index" type="int"/>
                </params>
                <declaration name="model" type="DefaultTreeModel" line="51"/>
            </method>
            <javadoc line="54">
                This method adds the child to the specified parent node.
                  The index where the child is to be added depends on the
                  child node being Comparable or not. If the child node is
                  not Comparable then it is added at the end, i.e. right
                  after the current parent&apos;s children.                
            </javadoc>
            <method name="addChildNode" type="void" line="61">
                <params>
                    <param name="parent" type="DefaultMutableTreeNode"/>
                    <param name="child" type="DefaultMutableTreeNode"/>
                </params>
                <declaration name="childCount" type="int" line="62"/>
                <scope line="63"/>
                <scope line="67">
                    <declaration name="comparableChild" type="ComparableDefaultMutableTreeNode" line="68"/>
                    <scope line="69">
                        <declaration name="brother" type="DefaultMutableTreeNode" line="70"/>
                        <scope line="71"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="81">
                This method removes all the displayed nodes from the tree,
                  but does not affect actual MBeanServer contents.                
            </javadoc>
            <method name="removeAll" type="void" line="85">
                <declaration name="model" type="DefaultTreeModel" line="86"/>
                <declaration name="root" type="DefaultMutableTreeNode" line="87"/>
            </method>
            <method name="removeMBeanFromView" type="void" line="92">
                <params>
                    <param name="mbean" type="ObjectName"/>
                </params>
                <declaration name="node" type="DefaultMutableTreeNode" line="93"/>
                <declaration name="dn" type="Dn" line="94"/>
                <scope line="95">
                    <declaration name="model" type="DefaultTreeModel" line="96"/>
                    <declaration name="token" type="Token" line="97"/>
                    <declaration name="hashKey" type="String" line="98"/>
                    <scope line="100">
                        <scope line="101">
                            <declaration name="label" type="String" line="103"/>
                            <declaration name="userObject" type="XNodeInfo" line="104"/>
                        </scope>
                        <scope line="107">
                            <declaration name="parent" type="DefaultMutableTreeNode" line="108"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="116">
                Returns true if any of the children nodes is a non MBean metadata node.                
            </javadoc>
            <method name="hasNonMetadataNodes" type="boolean" line="119">
                <params>
                    <param name="node" type="DefaultMutableTreeNode"/>
                </params>
                <scope line="120">
                    <declaration name="n" type="DefaultMutableTreeNode" line="121"/>
                    <declaration name="uo" type="Object" line="122"/>
                    <scope line="123"/>
                    <scope line="133"/>
                </scope>
            </method>
            <javadoc line="139">
                Returns true if any of the children nodes is an MBean metadata node.                
            </javadoc>
            <method name="hasMetadataNodes" type="boolean" line="142">
                <params>
                    <param name="node" type="DefaultMutableTreeNode"/>
                </params>
                <scope line="143">
                    <declaration name="n" type="DefaultMutableTreeNode" line="144"/>
                    <declaration name="uo" type="Object" line="145"/>
                    <scope line="146"/>
                    <scope line="156"/>
                </scope>
            </method>
            <javadoc line="162">
                Returns true if the given node is an MBean metadata node.                
            </javadoc>
            <method name="isMetadataNode" type="boolean" line="165">
                <params>
                    <param name="node" type="DefaultMutableTreeNode"/>
                </params>
                <declaration name="uo" type="Object" line="166"/>
                <scope line="167"/>
                <scope line="177"/>
            </method>
            <javadoc line="181">
                Remove the metadata nodes associated with a given MBean node.                
            </javadoc>
            <method name="removeMetadataNodes" type="void" line="184">
                <params>
                    <param name="node" type="DefaultMutableTreeNode"/>
                </params>
                <declaration name="metadataNodes" type="Set&lt;DefaultMutableTreeNode&gt;" line="185"/>
                <declaration name="model" type="DefaultTreeModel" line="186"/>
                <scope line="187">
                    <declaration name="n" type="DefaultMutableTreeNode" line="188"/>
                    <declaration name="uo" type="Object" line="189"/>
                    <scope line="190"/>
                </scope>
                <scope line="202"/>
            </method>
            <javadoc line="206">
                Removes only the parent nodes which are non MBean and leaf.
                  This method assumes the child nodes have been removed before.                
            </javadoc>
            <method name="removeParentFromView" type="DefaultMutableTreeNode" line="210">
                <params>
                    <param name="dn" type="Dn"/>
                    <param name="index" type="int"/>
                    <param name="node" type="DefaultMutableTreeNode"/>
                </params>
                <scope line="211">
                    <declaration name="parent" type="DefaultMutableTreeNode" line="212"/>
                    <declaration name="hashKey" type="String" line="214"/>
                </scope>
            </method>
            <method name="addMBeansToView" type="void" line="220">
                <params>
                    <param name="mbeans" type="Set<ObjectName>"/>
                </params>
                <declaration name="dns" type="Set&lt;Dn&gt;" line="221"/>
                <scope line="222">
                    <declaration name="dn" type="Dn" line="223"/>
                </scope>
                <scope line="226">
                    <declaration name="mbean" type="ObjectName" line="227"/>
                    <declaration name="xmbean" type="XMBean" line="228"/>
                </scope>
            </method>
            <method name="addMBeanToView" type="void" line="232">
                <params>
                    <param name="mbean" type="ObjectName"/>
                </params>
                <declaration name="xmbean" type="XMBean" line="233"/>
                <declaration name="dn" type="Dn" line="234"/>
            </method>
            <method name="addMBeanToView" type="void" line="237">
                <params>
                    <param name="mbean" type="ObjectName"/>
                    <param name="xmbean" type="XMBean"/>
                    <param name="dn" type="Dn"/>
                </params>
                <declaration name="childNode" type="DefaultMutableTreeNode" line="238"/>
                <declaration name="parentNode" type="DefaultMutableTreeNode" line="239"/>
                <declaration name="token" type="Token" line="240"/>
                <declaration name="hashKey" type="String" line="241"/>
                <scope line="242">
                    <declaration name="data" type="Object" line="244"/>
                    <declaration name="label" type="String" line="245"/>
                    <declaration name="userObject" type="XNodeInfo" line="246"/>
                </scope>
                <scope line="252">
                    <scope line="255"/>
                    <scope line="260">
                        <scope line="261">
                            <declaration name="root" type="DefaultMutableTreeNode" line="263"/>
                        </scope>
                        <scope line="266"/>
                    </scope>
                </scope>
            </method>
            <method name="changeNodeValue" type="void" line="275">
                <params>
                    <param name="node" type="DefaultMutableTreeNode"/>
                    <param name="nodeValue" type="XNodeInfo"/>
                </params>
                <scope line="276">
                    <declaration name="clone" type="DefaultMutableTreeNode" line="277"/>
                    <scope line="279">
                        <declaration name="model" type="DefaultTreeModel" line="281"/>
                    </scope>
                    <scope line="284">
                        <declaration name="parent" type="DefaultMutableTreeNode" line="285"/>
                    </scope>
                </scope>
                <scope line="291">
                    <declaration name="model" type="DefaultTreeModel" line="293"/>
                </scope>
                <scope line="296">
                    <declaration name="treeNodes" type="TreeNode[]" line="298"/>
                    <declaration name="path" type="TreePath" line="299"/>
                    <scope line="300"/>
                </scope>
                <scope line="304">
                    <declaration name="selectionPath" type="TreePath" line="305"/>
                </scope>
            </method>
            <javadoc line="310">
                Creates the domain node.                
            </javadoc>
            <method name="createDomainNode" type="DefaultMutableTreeNode" line="313">
                <params>
                    <param name="dn" type="Dn"/>
                    <param name="token" type="Token"/>
                </params>
                <declaration name="node" type="DefaultMutableTreeNode" line="314"/>
                <declaration name="label" type="String" line="315"/>
                <declaration name="userObject" type="XNodeInfo" line="316"/>
            </method>
            <javadoc line="320">
                Creates the node corresponding to the whole Dn, i.e. an MBean.                
            </javadoc>
            <method name="createDnNode" type="DefaultMutableTreeNode" line="323">
                <params>
                    <param name="dn" type="Dn"/>
                    <param name="token" type="Token"/>
                    <param name="xmbean" type="XMBean"/>
                </params>
                <declaration name="node" type="DefaultMutableTreeNode" line="324"/>
                <declaration name="data" type="Object" line="325"/>
                <declaration name="label" type="String" line="326"/>
                <declaration name="userObject" type="XNodeInfo" line="327"/>
            </method>
            <javadoc line="331">
                Creates the node corresponding to a subDn, i.e. a non-MBean
                  intermediate node.                
            </javadoc>
            <method name="createSubDnNode" type="DefaultMutableTreeNode" line="335">
                <params>
                    <param name="dn" type="Dn"/>
                    <param name="token" type="Token"/>
                </params>
                <declaration name="node" type="DefaultMutableTreeNode" line="336"/>
                <declaration name="label" type="String" line="337"/>
                <declaration name="userObject" type="XNodeInfo" line="338"/>
            </method>
            <method name="createNodeValue" type="Object" line="342">
                <params>
                    <param name="xmbean" type="XMBean"/>
                    <param name="token" type="Token"/>
                </params>
                <declaration name="label" type="String" line="343"/>
            </method>
            <javadoc line="347">
                Parses the MBean ObjectName comma-separated properties string and puts
                  the individual key/value pairs into the map. Key order in the properties
                  string is preserved by the map.                
            </javadoc>
            <method name="extractKeyValuePairs" type="Map<String,String>" line="352">
                <params>
                    <param name="props" type="String"/>
                    <param name="mbean" type="ObjectName"/>
                </params>
                <declaration name="map" type="Map&lt;String,String&gt;" line="353"/>
                <declaration name="eq" type="int" line="354"/>
                <scope line="355">
                    <declaration name="key" type="String" line="356"/>
                    <declaration name="value" type="String" line="357"/>
                    <scope line="360"/>
                </scope>
            </method>
            <javadoc line="367">
                Returns the ordered key property list that will be used to build the
                  MBean tree. If the &quot;com.sun.tools.jconsole.mbeans.keyPropertyList&quot; system
                  property is not specified, then the ordered key property list used
                  to build the MBean tree will be the one returned by the method
                  ObjectName.getKeyPropertyListString() with &quot;type&quot; as first key,
                  and &quot;j2eeType&quot; as second key, if present. If any of the keys specified
                  in the comma-separated key property list does not apply to the given
                  MBean then it will be discarded.                
            </javadoc>
            <method name="getKeyPropertyListString" type="String" line="377">
                <params>
                    <param name="mbean" type="ObjectName"/>
                </params>
                <declaration name="props" type="String" line="378"/>
                <declaration name="map" type="Map&lt;String,String&gt;" line="379"/>
                <declaration name="sb" type="StringBuilder" line="380"/>
                <scope line="381">
                    <scope line="382"/>
                </scope>
                <scope line="387"/>
                <declaration name="orderedKeyPropertyListString" type="String" line="390"/>
            </method>
            <method name="addMetadataNodes" type="void" line="394">
                <params>
                    <param name="node" type="DefaultMutableTreeNode"/>
                </params>
                <declaration name="mbean" type="XMBean" line="395"/>
                <declaration name="model" type="DefaultTreeModel" line="396"/>
                <declaration name="sw" type="MBeanInfoNodesSwingWorker" line="397"/>
                <scope line="398"/>
            </method>
            <class name="MBeanInfoNodesSwingWorker" line="402">
                <extends class="SwingWorker">
                    <type_params>
                        <type_param name="Object[]"/>
                        <type_param name="Void"/>
                    </type_params>
                </extends>
                <declaration name="model" type="DefaultTreeModel" line="403"/>
                <declaration name="node" type="DefaultMutableTreeNode" line="404"/>
                <declaration name="mbean" type="XMBean" line="405"/>
                <method name="MBeanInfoNodesSwingWorker" type="constructor" line="406">
                    <params>
                        <param name="model" type="DefaultTreeModel"/>
                        <param name="node" type="DefaultMutableTreeNode"/>
                        <param name="mbean" type="XMBean"/>
                    </params>
                </method>
                <method name="doInBackground" type="Object[]" line="411">
                    <declaration name="result" type="Object" line="412"/>
                </method>
                <method name="done" type="void" line="417">
                    <scope line="418">
                        <declaration name="result" type="Object" line="419"/>
                        <declaration name="mbeanInfo" type="MBeanInfo" line="420"/>
                        <declaration name="isBroadcaster" type="Boolean" line="421"/>
                        <scope line="422"/>
                    </scope>
                    <scope line="426">
                        <declaration name="t" type="Throwable" line="427"/>
                        <scope line="428"/>
                    </scope>
                </method>
                <method name="addMBeanInfoNodes" type="void" line="433">
                    <params>
                        <param name="tree" type="DefaultTreeModel"/>
                        <param name="node" type="DefaultMutableTreeNode"/>
                        <param name="mbean" type="XMBean"/>
                        <param name="mbeanInfo" type="MBeanInfo"/>
                        <param name="isBroadcaster" type="Boolean"/>
                    </params>
                    <declaration name="ai" type="MBeanAttributeInfo[]" line="434"/>
                    <declaration name="oi" type="MBeanOperationInfo[]" line="435"/>
                    <declaration name="ni" type="MBeanNotificationInfo[]" line="436"/>
                    <declaration name="childIndex" type="int" line="437"/>
                    <scope line="438">
                        <declaration name="attributes" type="DefaultMutableTreeNode" line="439"/>
                        <declaration name="attributesUO" type="XNodeInfo" line="440"/>
                        <scope line="443">
                            <declaration name="attribute" type="DefaultMutableTreeNode" line="444"/>
                            <declaration name="attributeUO" type="XNodeInfo" line="445"/>
                        </scope>
                    </scope>
                    <scope line="451">
                        <declaration name="operations" type="DefaultMutableTreeNode" line="452"/>
                        <declaration name="operationsUO" type="XNodeInfo" line="453"/>
                        <scope line="456">
                            <declaration name="sb" type="StringBuilder" line="457"/>
                            <scope line="458"/>
                            <declaration name="signature" type="String" line="461"/>
                            <scope line="462"/>
                            <declaration name="toolTipText" type="String" line="465"/>
                            <declaration name="operation" type="DefaultMutableTreeNode" line="466"/>
                            <declaration name="operationUO" type="XNodeInfo" line="467"/>
                        </scope>
                    </scope>
                    <scope line="473">
                        <declaration name="notifications" type="DefaultMutableTreeNode" line="474"/>
                        <declaration name="notificationsUO" type="XNodeInfo" line="475"/>
                        <scope line="478">
                            <scope line="479">
                                <declaration name="notification" type="DefaultMutableTreeNode" line="480"/>
                                <declaration name="notificationUO" type="XNodeInfo" line="481"/>
                            </scope>
                        </scope>
                    </scope>
                </method>
            </class>
            <declaration name="treeView" type="boolean" line="491"/>
            <declaration name="treeViewInit" type="boolean" line="492"/>
            <method name="isTreeView" type="boolean" line="493">
                <scope line="494"/>
            </method>
            <method name="getTreeViewValue" type="boolean" line="500">
                <declaration name="tv" type="String" line="501"/>
            </method>
            <declaration name="keyValueView" type="boolean" line="504"/>
            <method name="isKeyValueView" type="boolean" line="505"/>
            <class name="ComparableDefaultMutableTreeNode" line="508">
                <extends class="DefaultMutableTreeNode"/>
                <implements interface="Comparable">
                    <type_params>
                        <type_param name="DefaultMutableTreeNode"/>
                    </type_params>
                </implements>
                <method name="compareTo" type="int" line="509">
                    <params>
                        <param name="node" type="DefaultMutableTreeNode"/>
                    </params>
                </method>
            </class>
            <class name="Dn" line="513">
                <implements interface="Comparable">
                    <type_params>
                        <type_param name="Dn"/>
                    </type_params>
                </implements>
                <declaration name="mbean" type="ObjectName" line="514"/>
                <declaration name="domain" type="String" line="515"/>
                <declaration name="keyPropertyList" type="String" line="516"/>
                <declaration name="hashDn" type="String" line="517"/>
                <declaration name="tokens" type="List&lt;Token&gt;" line="518"/>
                <method name="Dn" type="constructor" line="519">
                    <params>
                        <param name="mbean" type="ObjectName"/>
                    </params>
                    <scope line="523">
                        <declaration name="map" type="Map&lt;String,String&gt;" line="524"/>
                        <scope line="525"/>
                    </scope>
                    <scope line="529"/>
                </method>
                <method name="getObjectName" type="ObjectName" line="536"/>
                <method name="getDomain" type="String" line="539"/>
                <method name="getKeyPropertyList" type="String" line="542"/>
                <method name="getToken" type="Token" line="545">
                    <params>
                        <param name="index" type="int"/>
                    </params>
                </method>
                <method name="getTokenCount" type="int" line="548"/>
                <method name="getHashDn" type="String" line="551"/>
                <method name="getHashKey" type="String" line="554">
                    <params>
                        <param name="token" type="Token"/>
                    </params>
                    <declaration name="begin" type="int" line="555"/>
                </method>
                <method name="computeHashDn" type="void" line="558">
                    <scope line="559"/>
                    <declaration name="hdn" type="StringBuilder" line="562"/>
                    <scope line="563"/>
                </method>
                <method name="toString" type="String" line="569"/>
                <method name="compareTo" type="int" line="572">
                    <params>
                        <param name="dn" type="Dn"/>
                    </params>
                </method>
            </class>
            <class name="Token" line="576">
                <declaration name="tokenType" type="String" line="577"/>
                <declaration name="tokenValue" type="String" line="578"/>
                <declaration name="key" type="String" line="579"/>
                <declaration name="value" type="String" line="580"/>
                <method name="Token" type="constructor" line="581">
                    <params>
                        <param name="tokenType" type="String"/>
                        <param name="tokenValue" type="String"/>
                    </params>
                </method>
                <method name="getTokenType" type="String" line="586"/>
                <method name="getTokenValue" type="String" line="589"/>
                <method name="getKey" type="String" line="592"/>
                <method name="getValue" type="String" line="595"/>
                <method name="buildKeyValue" type="void" line="598">
                    <declaration name="index" type="int" line="599"/>
                    <scope line="600"/>
                    <scope line="604"/>
                </method>
            </class>
        </class>
    </source>