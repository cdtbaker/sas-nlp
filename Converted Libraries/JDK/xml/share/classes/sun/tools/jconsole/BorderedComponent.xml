<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.jconsole">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="javax.swing"/>
        <import package="javax.swing.border"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.plaf.basic.BasicGraphicsUtils"/>
        <import package="javax.swing.SwingConstants"/>
        <import package="sun.tools.jconsole.JConsole"/>
        <import package="sun.tools.jconsole.Resources"/>
        <import package="sun.tools.jconsole.Utilities"/>
        <class name="BorderedComponent" line="12">
            <extends class="JPanel"/>
            <implements interface="ActionListener"/>
            <declaration name="moreOrLessButton" type="JButton" line="13"/>
            <declaration name="valueLabelStr" type="String" line="14"/>
            <declaration name="label" type="JLabel" line="15"/>
            <declaration name="comp" type="JComponent" line="16"/>
            <declaration name="collapsed" type="boolean" line="17"/>
            <declaration name="popupMenu" type="JPopupMenu" line="18"/>
            <declaration name="collapseIcon" type="Icon" line="19"/>
            <declaration name="expandIcon" type="Icon" line="20"/>
            <method name="getImage" type="Image" line="21">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="tk" type="Toolkit" line="22"/>
            </method>
            <method name="BorderedComponent" type="constructor" line="26">
                <params>
                    <param name="text" type="String"/>
                </params>
            </method>
            <method name="BorderedComponent" type="constructor" line="29">
                <params>
                    <param name="text" type="String"/>
                    <param name="comp" type="JComponent"/>
                </params>
            </method>
            <method name="BorderedComponent" type="constructor" line="32">
                <params>
                    <param name="text" type="String"/>
                    <param name="comp" type="JComponent"/>
                    <param name="collapsible" type="boolean"/>
                </params>
                <scope line="35">
                    <declaration name="border" type="TitledBorder" line="36"/>
                    <scope line="37">
                        <declaration name="textLabel" type="JLabel" line="38"/>
                        <anonymous_class line="39">
                            <method name="getBaseline" type="int" line="40">
                                <params>
                                    <param name="w" type="int"/>
                                    <param name="h" type="int"/>
                                </params>
                                <declaration name="dim" type="Dimension" line="41"/>
                            </method>
                        </anonymous_class>
                        <declaration name="borderLabel" type="JPanel" line="39"/>
                        <scope line="49"/>
                        <scope line="53"/>
                        <declaration name="toolTip" type="String" line="62"/>
                    </scope>
                    <scope line="68"/>
                </scope>
                <scope line="73"/>
                <scope line="76"/>
            </method>
            <method name="setComponent" type="void" line="80">
                <params>
                    <param name="comp" type="JComponent"/>
                </params>
                <scope line="81"/>
                <scope line="85">
                    <declaration name="lm" type="LayoutManager" line="86"/>
                    <scope line="87"/>
                    <scope line="90"/>
                </scope>
            </method>
            <method name="setValueLabel" type="void" line="96">
                <params>
                    <param name="str" type="String"/>
                </params>
                <scope line="98"/>
            </method>
            <method name="actionPerformed" type="void" line="102">
                <params>
                    <param name="ev" type="ActionEvent"/>
                </params>
                <scope line="103">
                    <scope line="104"/>
                </scope>
                <scope line="110">
                    <scope line="112">
                        <scope line="113"/>
                    </scope>
                </scope>
                <declaration name="container" type="JComponent" line="121"/>
                <scope line="122"/>
            </method>
            <method name="getMinimumSize" type="Dimension" line="127">
                <scope line="128"/>
                <scope line="131">
                    <declaration name="d" type="Dimension" line="132"/>
                    <declaration name="i" type="Insets" line="133"/>
                </scope>
                <scope line="138"/>
            </method>
            <method name="doLayout" type="void" line="142">
                <scope line="143"/>
                <declaration name="d" type="Dimension" line="147"/>
                <declaration name="i" type="Insets" line="148"/>
                <scope line="149">
                    <scope line="150">
                        <declaration name="p" type="Dimension" line="151"/>
                    </scope>
                </scope>
                <scope line="155">
                    <scope line="156"/>
                </scope>
            </method>
            <class name="ArrowIcon" line="161">
                <implements interface="Icon"/>
                <declaration name="direction" type="int" line="162"/>
                <declaration name="textLabel" type="JLabel" line="163"/>
                <method name="ArrowIcon" type="constructor" line="164">
                    <params>
                        <param name="direction" type="int"/>
                        <param name="textLabel" type="JLabel"/>
                    </params>
                </method>
                <method name="paintIcon" type="void" line="168">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <declaration name="w" type="int" line="169"/>
                    <declaration name="h" type="int" line="170"/>
                    <declaration name="p" type="Polygon" line="171"/>
                </method>
                <method name="getIconWidth" type="int" line="186"/>
                <method name="getIconHeight" type="int" line="189">
                    <declaration name="g" type="Graphics" line="190"/>
                    <scope line="191">
                        <declaration name="h" type="int" line="192"/>
                        <scope line="193"/>
                    </scope>
                    <scope line="198"/>
                </method>
            </class>
            <class name="LabeledBorder" line="203">
                <extends class="TitledBorder"/>
                <javadoc line="203">
                    A subclass of &lt;code&gt;TitledBorder&lt;/code&gt; which implements an arbitrary border
                      with the addition of a JComponent (JLabel, JPanel, etc) in the
                      default position.
                      &lt;p&gt;
                      If the border property value is not
                      specified in the constuctor or by invoking the appropriate
                      set method, the property value will be defined by the current
                      look and feel, using the following property name in the
                      Defaults Table:
                      &lt;ul&gt;
                      &lt;li&gt;&amp;quot;TitledBorder.border&amp;quot;
                      &lt;/ul&gt;                    
                </javadoc>
                <declaration name="label" type="JComponent" line="218"/>
                <declaration name="compLoc" type="Point" line="219"/>
                <javadoc line="220">
                    Creates a LabeledBorder instance.                    
                    <param>
                        label  the label the border should display                        
                    </param>
                </javadoc>
                <method name="LabeledBorder" type="constructor" line="224">
                    <params>
                        <param name="label" type="JComponent"/>
                    </params>
                </method>
                <javadoc line="227">
                    Creates a LabeledBorder instance with the specified border
                      and an empty label.                    
                    <param>
                        border  the border                        
                    </param>
                </javadoc>
                <method name="LabeledBorder" type="constructor" line="232">
                    <params>
                        <param name="border" type="Border"/>
                    </params>
                </method>
                <javadoc line="235">
                    Creates a LabeledBorder instance with the specified border and
                      label.                    
                    <param>
                        border  the border                        
                    </param>
                    <param>
                        label  the label the border should display                        
                    </param>
                </javadoc>
                <method name="LabeledBorder" type="constructor" line="241">
                    <params>
                        <param name="border" type="Border"/>
                        <param name="label" type="JComponent"/>
                    </params>
                    <scope line="244"/>
                </method>
                <javadoc line="248">
                    Paints the border for the specified component with the
                      specified position and size.                    
                    <param>
                        c the component for which this border is being painted                        
                    </param>
                    <param>
                        g the paint graphics                        
                    </param>
                    <param>
                        x the x position of the painted border                        
                    </param>
                    <param>
                        y the y position of the painted border                        
                    </param>
                    <param>
                        width the width of the painted border                        
                    </param>
                    <param>
                        height the height of the painted border                        
                    </param>
                </javadoc>
                <method name="paintBorder" type="void" line="258">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <declaration name="border" type="Border" line="259"/>
                    <scope line="260">
                        <scope line="261"/>
                    </scope>
                    <declaration name="grooveRect" type="Rectangle" line="266"/>
                    <declaration name="labelDim" type="Dimension" line="267"/>
                    <declaration name="baseline" type="int" line="268"/>
                    <declaration name="ascent" type="int" line="269"/>
                    <declaration name="descent" type="int" line="270"/>
                    <declaration name="diff" type="int" line="271"/>
                    <declaration name="insets" type="Insets" line="272"/>
                    <scope line="273"/>
                    <scope line="276"/>
                    <declaration name="justification" type="int" line="283"/>
                    <scope line="284"/>
                    <scope line="287"/>
                    <scope line="298">
                        <scope line="299">
                            <declaration name="clipRect" type="Rectangle" line="300"/>
                            <declaration name="saveClip" type="Rectangle" line="301"/>
                            <scope line="303"/>
                            <scope line="308"/>
                            <scope line="313"/>
                        </scope>
                        <scope line="319"/>
                    </scope>
                </method>
                <javadoc line="326">
                    Reinitialize the insets parameter with this Border&apos;s current Insets.                    
                    <param>
                        c the component for which this border insets value applies                        
                    </param>
                    <param>
                        insets the object to be reinitialized                        
                    </param>
                </javadoc>
                <method name="getBorderInsets" type="Insets" line="331">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="insets" type="Insets"/>
                    </params>
                    <declaration name="height" type="int" line="332"/>
                    <declaration name="border" type="Border" line="333"/>
                    <scope line="334">
                        <scope line="335"/>
                        <scope line="338">
                            <declaration name="i" type="Insets" line="339"/>
                        </scope>
                    </scope>
                    <scope line="346"/>
                    <scope line="353"/>
                </method>
                <javadoc line="359">
                    Returns the label of the labeled border.                    
                </javadoc>
                <method name="getLabel" type="JComponent" line="362"/>
                <javadoc line="365">
                    Sets the title of the titled border.
                      param title the title for the border                    
                </javadoc>
                <method name="setLabel" type="void" line="369">
                    <params>
                        <param name="label" type="JComponent"/>
                    </params>
                </method>
                <javadoc line="372">
                    Returns the minimum dimensions this border requires
                      in order to fully display the border and title.                    
                    <param>
                        c the component where this border will be drawn                        
                    </param>
                </javadoc>
                <method name="getMinimumSize" type="Dimension" line="377">
                    <params>
                        <param name="c" type="Component"/>
                    </params>
                    <declaration name="insets" type="Insets" line="378"/>
                    <declaration name="minSize" type="Dimension" line="379"/>
                </method>
                <method name="computeIntersection" type="boolean" line="383">
                    <params>
                        <param name="dest" type="Rectangle"/>
                        <param name="rx" type="int"/>
                        <param name="ry" type="int"/>
                        <param name="rw" type="int"/>
                        <param name="rh" type="int"/>
                    </params>
                    <declaration name="x1" type="int" line="384"/>
                    <declaration name="x2" type="int" line="385"/>
                    <declaration name="y1" type="int" line="386"/>
                    <declaration name="y2" type="int" line="387"/>
                    <scope line="392"/>
                </method>
            </class>
            <class name="FocusBorder" line="398">
                <extends class="AbstractBorder"/>
                <implements interface="FocusListener"/>
                <declaration name="comp" type="Component" line="399"/>
                <declaration name="focusColor" type="Color" line="400"/>
                <declaration name="focusLostTemporarily" type="boolean" line="401"/>
                <method name="FocusBorder" type="constructor" line="402">
                    <params>
                        <param name="comp" type="Component"/>
                    </params>
                </method>
                <method name="paintBorder" type="void" line="407">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <scope line="408">
                        <declaration name="color" type="Color" line="409"/>
                    </scope>
                </method>
                <method name="getBorderInsets" type="Insets" line="415">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="insets" type="Insets"/>
                    </params>
                </method>
                <method name="focusGained" type="void" line="419">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                </method>
                <method name="focusLost" type="void" line="422">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                    <scope line="424"/>
                </method>
            </class>
        </class>
    </source>