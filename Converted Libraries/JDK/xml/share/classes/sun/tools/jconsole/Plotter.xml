<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.jconsole">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.beans"/>
        <import package="java.io"/>
        <import package="java.lang.reflect.Array"/>
        <import package="java.util"/>
        <import package="javax.accessibility"/>
        <import package="javax.swing"/>
        <import package="javax.swing.border"/>
        <import package="javax.swing.filechooser"/>
        <import package="javax.swing.filechooser.FileFilter"/>
        <import package="com.sun.tools.jconsole.JConsoleContext"/>
        <import package="com.sun.tools.jconsole.JConsoleContext.ConnectionState"/>
        <import package="sun.tools.jconsole.Formatter"/>
        <import package="sun.tools.jconsole.ProxyClient"/>
        <import package="sun.tools.jconsole.Resources"/>
        <import package="sun.tools.jconsole.Utilities"/>
        <class name="Plotter" line="50">
            <extends class="JComponent"/>
            <comment line="118">
                Minutes (value &lt;= 0 means full range)                
            </comment>
            <comment line="126">
                Initial margins, may be recalculated as needed                
            </comment>
            <comment line="145">
                Note: If decimals &gt; 0 then values must be decimally shifted left                
            </comment>
            <comment line="146">
                that many places, i.e. multiplied by Math.pow(10.0, decimals).                
            </comment>
            <comment line="200">
                Note: If decimals &gt; 0 then values must be decimally shifted left                
            </comment>
            <comment line="201">
                that many places, i.e. multiplied by Math.pow(10.0, decimals).                
            </comment>
            <comment line="959">
                Can be overridden by subclasses                
            </comment>
            <comment line="974">
                Called on EDT                
            </comment>
            <implements interface="Accessible"/>
            <implements interface="ActionListener"/>
            <implements interface="PropertyChangeListener"/>
            <declaration name="rangeNames" type="String[]" line="58"/>
            <declaration name="rangeValues" type="int[]" line="77"/>
            <declaration name="SECOND" type="long" line="97"/>
            <declaration name="MINUTE" type="long" line="98"/>
            <declaration name="HOUR" type="long" line="99"/>
            <declaration name="DAY" type="long" line="100"/>
            <declaration name="bgColor" type="Color" line="102"/>
            <declaration name="defaultColor" type="Color" line="103"/>
            <declaration name="ARRAY_SIZE_INCREMENT" type="int" line="105"/>
            <declaration name="dashedStroke" type="Stroke" line="107"/>
            <declaration name="times" type="TimeStamps" line="109"/>
            <declaration name="seqs" type="ArrayList&lt;Sequence&gt;" line="110"/>
            <declaration name="popupMenu" type="JPopupMenu" line="111"/>
            <declaration name="timeRangeMenu" type="JMenu" line="112"/>
            <declaration name="menuRBs" type="JRadioButtonMenuItem[]" line="113"/>
            <declaration name="saveAsMI" type="JMenuItem" line="114"/>
            <declaration name="saveFC" type="JFileChooser" line="115"/>
            <declaration name="viewRange" type="int" line="117"/>
            <declaration name="unit" type="Unit" line="118"/>
            <declaration name="decimals" type="int" line="119"/>
            <declaration name="decimalsMultiplier" type="double" line="120"/>
            <declaration name="border" type="Border" line="121"/>
            <declaration name="r" type="Rectangle" line="122"/>
            <declaration name="smallFont" type="Font" line="123"/>
            <declaration name="topMargin" type="int" line="126"/>
            <declaration name="bottomMargin" type="int" line="127"/>
            <declaration name="leftMargin" type="int" line="128"/>
            <declaration name="rightMargin" type="int" line="129"/>
            <declaration name="displayLegend" type="boolean" line="130"/>
            <method name="Plotter" type="constructor" line="132"/>
            <method name="Plotter" type="constructor" line="136">
                <params>
                    <param name="unit" type="Unit"/>
                </params>
            </method>
            <method name="Plotter" type="constructor" line="140">
                <params>
                    <param name="unit" type="Unit"/>
                    <param name="decimals" type="int"/>
                </params>
            </method>
            <method name="Plotter" type="constructor" line="146">
                <params>
                    <param name="unit" type="Unit"/>
                    <param name="decimals" type="int"/>
                    <param name="displayLegend" type="boolean"/>
                </params>
                <anonymous_class line="153">
                    <method name="mousePressed" type="void" line="155">
                        <params>
                            <param name="e" type="MouseEvent"/>
                        </params>
                        <scope line="156"/>
                    </method>
                </anonymous_class>
            </method>
            <method name="setUnit" type="void" line="164">
                <params>
                    <param name="unit" type="Unit"/>
                </params>
            </method>
            <method name="setDecimals" type="void" line="168">
                <params>
                    <param name="decimals" type="int"/>
                </params>
            </method>
            <method name="createSequence" type="void" line="173">
                <params>
                    <param name="key" type="String"/>
                    <param name="name" type="String"/>
                    <param name="color" type="Color"/>
                    <param name="isPlotted" type="boolean"/>
                </params>
                <declaration name="seq" type="Sequence" line="174"/>
                <scope line="175"/>
            </method>
            <method name="setUseDashedTransitions" type="void" line="185">
                <params>
                    <param name="key" type="String"/>
                    <param name="b" type="boolean"/>
                </params>
                <declaration name="seq" type="Sequence" line="186"/>
                <scope line="187"/>
            </method>
            <method name="setIsPlotted" type="void" line="192">
                <params>
                    <param name="key" type="String"/>
                    <param name="isPlotted" type="boolean"/>
                </params>
                <declaration name="seq" type="Sequence" line="193"/>
                <scope line="194"/>
            </method>
            <method name="addValues" type="void" line="201">
                <params>
                    <param name="time" type="long"/>
                    <param name="values" type="long"/>
                </params>
                <scope line="204"/>
            </method>
            <method name="getSequence" type="Sequence" line="210">
                <params>
                    <param name="key" type="String"/>
                </params>
                <scope line="211">
                    <scope line="212"/>
                </scope>
            </method>
            <javadoc line="219">
                @return the displayed time range in minutes, or -1 for all data                
            </javadoc>
            <method name="getViewRange" type="int" line="222"/>
            <javadoc line="226">
                @param minutes the displayed time range in minutes, or -1 to diaplay all data                
            </javadoc>
            <method name="setViewRange" type="void" line="229">
                <params>
                    <param name="minutes" type="int"/>
                </params>
                <comment line="233">
                                        
                </comment>
                <scope line="230">
                    <declaration name="oldValue" type="int" line="231"/>
                    <scope line="235">
                        <scope line="236">
                            <scope line="237"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="getComponentPopupMenu" type="JPopupMenu" line="248">
                <scope line="249">
                    <declaration name="rbGroup" type="ButtonGroup" line="255"/>
                    <scope line="256">
                        <scope line="260"/>
                    </scope>
                </scope>
            </method>
            <method name="actionPerformed" type="void" line="276">
                <params>
                    <param name="ev" type="ActionEvent"/>
                </params>
                <declaration name="src" type="JComponent" line="277"/>
                <scope line="278"/>
                <scope line="280">
                    <declaration name="index" type="int" line="281"/>
                </scope>
            </method>
            <method name="saveAs" type="void" line="286">
                <scope line="287"/>
                <declaration name="ret" type="int" line="290"/>
                <scope line="291"/>
            </method>
            <method name="saveDataToFile" type="void" line="296">
                <params>
                    <param name="file" type="File"/>
                </params>
                <comment line="300">
                    Print header line                    
                </comment>
                <comment line="307">
                    Print data lines                    
                </comment>
                <scope line="297">
                    <declaration name="out" type="PrintStream" line="298"/>
                    <scope line="302"/>
                    <scope line="308">
                        <scope line="309">
                            <declaration name="excelTime" type="double" line="310"/>
                            <scope line="312"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="324">
                    <declaration name="msg" type="String" line="325"/>
                    <declaration name="path" type="String" line="326"/>
                    <scope line="327"/>
                </scope>
            </method>
            <method name="paintComponent" type="void" line="339">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <comment line="364">
                    By setting colors here, we avoid recalculating them                    
                </comment>
                <comment line="365">
                    over and over.                    
                </comment>
                <comment line="375">
                    Fill background color                    
                </comment>
                <comment line="396">
                    Display full time range, but no less than a minute                    
                </comment>
                <comment line="400">
                    Calculate min/max values                    
                </comment>
                <comment line="416">
                    We&apos;ll scale only to the first (main) value set.                    
                </comment>
                <comment line="417">
                    TODO: Use a separate property for this.                    
                </comment>
                <comment line="422">
                    Normalize scale                    
                </comment>
                <comment line="435">
                    Axes                    
                </comment>
                <comment line="436">
                    Draw vertical axis                    
                </comment>
                <comment line="460">
                    Ticks                    
                </comment>
                <comment line="478">
                    Trim trailing decimal zeroes.                    
                </comment>
                <comment line="501">
                    Draw ticks                    
                </comment>
                <comment line="514">
                    Wait for next repaint                    
                </comment>
                <comment line="519">
                    Draw horizontal grid line                    
                </comment>
                <comment line="526">
                    Draw horizontal axis                    
                </comment>
                <comment line="533">
                    No data yet, so draw current time                    
                </comment>
                <comment line="549">
                    if (tickInterval &gt; (1 * HOUR) &amp;&amp; t % (1 * DAY) == 0) {                    
                </comment>
                <comment line="554">
                    Draw vertical grid line                    
                </comment>
                <comment line="561">
                    Plot values                    
                </comment>
                <comment line="573">
                    Find starting point                    
                </comment>
                <comment line="582">
                    Optimization: collapse plot of more than four values per pixel                    
                </comment>
                <comment line="588">
                    Draw graphs                    
                </comment>
                <comment line="589">
                    Loop backwards over sequences because the first needs to be painted on top                    
                </comment>
                <comment line="596">
                    Paint twice, with white and with color                    
                </comment>
                <comment line="602">
                    Make sure we get the last value                    
                </comment>
                <comment line="614">
                    fillrect is much faster                    
                </comment>
                <comment line="635">
                    Current value                    
                </comment>
                <comment line="645">
                    a small triangle/arrow                    
                </comment>
                <comment line="659">
                    Draw current value                    
                </comment>
                <comment line="661">
                    TODO: collapse values if pointsPerPixel &gt;= 4                    
                </comment>
                <comment line="682">
                    Wait for next repaint                    
                </comment>
                <comment line="688">
                    Maybe draw a short line to value                    
                </comment>
                <declaration name="oldColor" type="Color" line="342"/>
                <declaration name="oldFont" type="Font" line="343"/>
                <declaration name="fg" type="Color" line="344"/>
                <declaration name="bg" type="Color" line="345"/>
                <declaration name="bgIsLight" type="boolean" line="346"/>
                <scope line="354"/>
                <scope line="363"/>
                <declaration name="tMin" type="long" line="380"/>
                <declaration name="tMax" type="long" line="381"/>
                <declaration name="vMin" type="long" line="382"/>
                <declaration name="vMax" type="long" line="383"/>
                <declaration name="w" type="int" line="385"/>
                <declaration name="h" type="int" line="386"/>
                <scope line="388"/>
                <declaration name="viewRangeMS" type="long" line="392"/>
                <scope line="393"/>
                <scope line="395"/>
                <scope line="401">
                    <scope line="402">
                        <scope line="403">
                            <scope line="404">
                                <declaration name="val" type="long" line="405"/>
                                <scope line="406"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="412"/>
                    <scope line="415"/>
                </scope>
                <scope line="424">
                    <scope line="425"/>
                    <scope line="427"/>
                </scope>
                <declaration name="x" type="int" line="437"/>
                <declaration name="y" type="int" line="438"/>
                <declaration name="fm" type="FontMetrics" line="439"/>
                <declaration name="n" type="int" line="443"/>
                <scope line="444"/>
                <scope line="446"/>
                <scope line="448"/>
                <scope line="450"/>
                <scope line="452"/>
                <scope line="454"/>
                <scope line="456"/>
                <declaration name="tickValues" type="ArrayList&lt;Long&gt;" line="461"/>
                <scope line="463">
                    <declaration name="v" type="long" line="464"/>
                    <scope line="465"/>
                </scope>
                <declaration name="tickStrings" type="String[]" line="472"/>
                <scope line="473">
                    <declaration name="v" type="long" line="474"/>
                </scope>
                <scope line="479">
                    <declaration name="trimLast" type="boolean" line="480"/>
                    <declaration name="removedDecimalPoint" type="boolean" line="481"/>
                    <scope line="482">
                        <scope line="483">
                            <scope line="484"/>
                        </scope>
                        <scope line="489">
                            <scope line="490"/>
                            <scope line="493">
                                <declaration name="str" type="String" line="494"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <declaration name="lastY" type="int" line="502"/>
                <scope line="503">
                    <declaration name="v" type="long" line="504"/>
                    <declaration name="s" type="String" line="507"/>
                    <scope line="508"/>
                    <declaration name="sx" type="int" line="511"/>
                    <scope line="512">
                        <scope line="513"/>
                    </scope>
                </scope>
                <declaration name="t1" type="long" line="531"/>
                <scope line="532"/>
                <declaration name="tz" type="long" line="536"/>
                <declaration name="tickInterval" type="long" line="537"/>
                <scope line="538"/>
                <declaration name="t0" type="long" line="541"/>
                <scope line="542">
                    <declaration name="t" type="long" line="546"/>
                    <declaration name="str" type="String" line="547"/>
                    <scope line="550"/>
                </scope>
                <declaration name="start" type="int" line="562"/>
                <declaration name="nValues" type="int" line="563"/>
                <declaration name="nLists" type="int" line="564"/>
                <scope line="565"/>
                <scope line="568"/>
                <scope line="571">
                    <declaration name="seq" type="Sequence" line="572"/>
                    <scope line="574">
                        <scope line="575"/>
                    </scope>
                </scope>
                <declaration name="pointsPerPixel" type="int" line="583"/>
                <scope line="584"/>
                <scope line="590">
                    <declaration name="x0" type="int" line="591"/>
                    <declaration name="y0" type="int" line="592"/>
                    <declaration name="seq" type="Sequence" line="594"/>
                    <scope line="595">
                        <scope line="597">
                            <declaration name="x1" type="int" line="599"/>
                            <declaration name="v1" type="long" line="600"/>
                            <scope line="601">
                                <scope line="603"/>
                                <declaration name="x2" type="int" line="606"/>
                                <declaration name="v2" type="long" line="607"/>
                                <scope line="608">
                                    <declaration name="y2" type="int" line="609"/>
                                    <scope line="610">
                                        <declaration name="y1" type="int" line="611"/>
                                        <scope line="613"/>
                                        <scope line="616">
                                            <declaration name="g2d" type="Graphics2D" line="617"/>
                                            <declaration name="oldStroke" type="Stroke" line="618"/>
                                            <scope line="619"/>
                                            <scope line="624"/>
                                        </scope>
                                    </scope>
                                </scope>
                            </scope>
                        </scope>
                        <declaration name="v" type="long" line="636"/>
                        <scope line="637">
                            <scope line="638"/>
                            <scope line="640"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="valueStringSlots" type="int[]" line="654"/>
                <scope line="656">
                    <declaration name="seq" type="Sequence" line="657"/>
                    <scope line="658">
                        <declaration name="v" type="long" line="663"/>
                        <scope line="664">
                            <declaration name="y2" type="int" line="667"/>
                            <scope line="669"/>
                            <scope line="671"/>
                            <declaration name="curValue" type="String" line="674"/>
                            <scope line="675"/>
                            <declaration name="valWidth" type="int" line="678"/>
                            <declaration name="legend" type="String" line="679"/>
                            <declaration name="legendWidth" type="int" line="680"/>
                            <scope line="681"/>
                            <scope line="689"/>
                            <scope line="691"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="checkLeftMargin" type="boolean" line="703">
                <params>
                    <param name="x" type="int"/>
                </params>
                <comment line="704">
                    Make sure leftMargin has at least 2 pixels over                    
                </comment>
                <comment line="707">
                    Repaint from top (above any cell renderers)                    
                </comment>
                <scope line="705"/>
            </method>
            <method name="checkRightMargin" type="boolean" line="714">
                <params>
                    <param name="w" type="int"/>
                </params>
                <comment line="715">
                    Make sure rightMargin has at least 2 pixels over                    
                </comment>
                <comment line="718">
                    Repaint from top (above any cell renderers)                    
                </comment>
                <scope line="716"/>
            </method>
            <method name="getValueStringSlot" type="int" line="725">
                <params>
                    <param name="slots" type="int[]"/>
                    <param name="y" type="int"/>
                    <param name="h" type="int"/>
                    <param name="i" type="int"/>
                </params>
                <comment line="728">
                    collide below us                    
                </comment>
                <comment line="735">
                    collide above us                    
                </comment>
                <scope line="726">
                    <scope line="727">
                        <scope line="729"/>
                        <scope line="731"/>
                    </scope>
                    <scope line="734"/>
                </scope>
            </method>
            <method name="calculateTickInterval" type="long" line="743">
                <params>
                    <param name="w" type="int"/>
                    <param name="hGap" type="int"/>
                    <param name="viewRangeMS" type="long"/>
                </params>
                <declaration name="tickInterval" type="long" line="744"/>
                <scope line="745"/>
                <scope line="747"/>
                <scope line="749"/>
                <scope line="751"/>
                <scope line="753"/>
                <scope line="755"/>
                <scope line="757"/>
                <scope line="759"/>
                <scope line="761"/>
                <scope line="763"/>
            </method>
            <method name="normalizeMin" type="long" line="769">
                <params>
                    <param name="l" type="long"/>
                </params>
                <declaration name="exp" type="int" line="770"/>
                <declaration name="multiple" type="long" line="771"/>
                <declaration name="i" type="int" line="772"/>
            </method>
            <method name="normalizeMax" type="long" line="776">
                <params>
                    <param name="l" type="long"/>
                </params>
                <declaration name="exp" type="int" line="777"/>
                <declaration name="multiple" type="long" line="778"/>
                <declaration name="i" type="int" line="779"/>
            </method>
            <method name="getFormattedValue" type="String" line="784">
                <params>
                    <param name="v" type="long"/>
                    <param name="groupDigits" type="boolean"/>
                </params>
                <declaration name="str" type="String" line="785"/>
                <declaration name="fmt" type="String" line="786"/>
                <scope line="787"/>
                <scope line="790"/>
                <scope line="793"/>
            </method>
            <method name="getSizeString" type="String" line="800">
                <params>
                    <param name="v" type="long"/>
                    <param name="vMax" type="long"/>
                </params>
                <declaration name="s" type="String" line="801"/>
                <scope line="803"/>
                <scope line="805"/>
            </method>
            <method name="getDashedStroke" type="Stroke" line="811">
                <scope line="812"/>
            </method>
            <method name="extendArray" type="Object" line="823">
                <params>
                    <param name="a1" type="Object"/>
                </params>
                <declaration name="n" type="int" line="824"/>
                <declaration name="a2" type="Object" line="825"/>
            </method>
            <class name="TimeStamps" line="833">
                <comment line="835">
                    Time stamps (long) are split into offsets (long) and a                    
                </comment>
                <comment line="836">
                    series of times from the offsets (int). A new offset is                    
                </comment>
                <comment line="837">
                    stored when the the time value doesn&apos;t fit in an int                    
                </comment>
                <comment line="838">
                    (approx every 24 days).  An array of indices is used to                    
                </comment>
                <comment line="839">
                    define the starting point for each offset in the times                    
                </comment>
                <comment line="840">
                    array.                    
                </comment>
                <comment line="845">
                    Number of stored timestamps                    
                </comment>
                <comment line="891">
                    Values are stored in an int[] if all values will fit,                    
                </comment>
                <comment line="892">
                    otherwise in a long[]. An int can represent up to 2 GB.                    
                </comment>
                <comment line="893">
                    Use a random start size, so all arrays won&apos;t need to                    
                </comment>
                <comment line="894">
                    be grown during the same update interval                    
                </comment>
                <comment line="898">
                    Number of stored values                    
                </comment>
                <declaration name="offsets" type="long[]" line="840"/>
                <declaration name="indices" type="int[]" line="841"/>
                <declaration name="rtimes" type="int[]" line="842"/>
                <declaration name="size" type="int" line="845"/>
                <javadoc line="847">
                    Returns the time stamp for index i                    
                </javadoc>
                <method name="time" type="long" line="850">
                    <params>
                        <param name="i" type="int"/>
                    </params>
                    <declaration name="offset" type="long" line="851"/>
                    <scope line="852">
                        <scope line="853"/>
                    </scope>
                </method>
                <method name="add" type="void" line="861">
                    <params>
                        <param name="time" type="long"/>
                    </params>
                    <comment line="862">
                        May need to store a new time offset                        
                    </comment>
                    <comment line="865">
                        Grow offset and indices arrays and store new offset                        
                    </comment>
                    <comment line="872">
                        May need to extend the array size                        
                    </comment>
                    <comment line="877">
                        Store the time                        
                    </comment>
                    <declaration name="n" type="int" line="863"/>
                    <scope line="864"/>
                    <scope line="873"/>
                </method>
            </class>
            <class name="Sequence" line="883">
                <comment line="835">
                    Time stamps (long) are split into offsets (long) and a                    
                </comment>
                <comment line="836">
                    series of times from the offsets (int). A new offset is                    
                </comment>
                <comment line="837">
                    stored when the the time value doesn&apos;t fit in an int                    
                </comment>
                <comment line="838">
                    (approx every 24 days).  An array of indices is used to                    
                </comment>
                <comment line="839">
                    define the starting point for each offset in the times                    
                </comment>
                <comment line="840">
                    array.                    
                </comment>
                <comment line="845">
                    Number of stored timestamps                    
                </comment>
                <comment line="891">
                    Values are stored in an int[] if all values will fit,                    
                </comment>
                <comment line="892">
                    otherwise in a long[]. An int can represent up to 2 GB.                    
                </comment>
                <comment line="893">
                    Use a random start size, so all arrays won&apos;t need to                    
                </comment>
                <comment line="894">
                    be grown during the same update interval                    
                </comment>
                <comment line="898">
                    Number of stored values                    
                </comment>
                <declaration name="key" type="String" line="884"/>
                <declaration name="name" type="String" line="885"/>
                <declaration name="color" type="Color" line="886"/>
                <declaration name="isPlotted" type="boolean" line="887"/>
                <declaration name="transitionStroke" type="Stroke" line="888"/>
                <declaration name="values" type="Object" line="894"/>
                <declaration name="size" type="int" line="898"/>
                <method name="Sequence" type="constructor" line="900">
                    <params>
                        <param name="key" type="String"/>
                    </params>
                </method>
                <javadoc line="904">
                    Returns the value at index i                    
                </javadoc>
                <method name="value" type="long" line="907">
                    <params>
                        <param name="i" type="int"/>
                    </params>
                </method>
                <method name="add" type="void" line="911">
                    <params>
                        <param name="value" type="long"/>
                    </params>
                    <comment line="912">
                        May need to switch to a larger array type                        
                    </comment>
                    <comment line="939">
                        May need to extend the array size                        
                    </comment>
                    <comment line="944">
                        Store the value                        
                    </comment>
                    <scope line="916">
                        <declaration name="la" type="long[]" line="917"/>
                        <scope line="918"/>
                    </scope>
                    <scope line="924">
                        <declaration name="ia" type="int[]" line="925"/>
                        <scope line="926"/>
                    </scope>
                    <scope line="931">
                        <declaration name="sa" type="short[]" line="932"/>
                        <scope line="933"/>
                    </scope>
                    <scope line="940"/>
                    <scope line="945"/>
                    <scope line="947"/>
                    <scope line="949"/>
                    <scope line="951"/>
                </method>
            </class>
            <method name="getValue" type="long" line="959"/>
            <method name="getLastTimeStamp" type="long" line="963"/>
            <method name="getLastValue" type="long" line="967">
                <params>
                    <param name="key" type="String"/>
                </params>
                <declaration name="seq" type="Sequence" line="968"/>
            </method>
            <method name="propertyChange" type="void" line="974">
                <params>
                    <param name="ev" type="PropertyChangeEvent"/>
                </params>
                <declaration name="prop" type="String" line="975"/>
                <scope line="977">
                    <declaration name="newState" type="ConnectionState" line="978"/>
                    <scope line="982">
                        <declaration name="time" type="long" line="983"/>
                        <scope line="985"/>
                    </scope>
                </scope>
            </method>
            <class name="SaveDataFileChooser" line="994">
                <extends class="JFileChooser"/>
                <comment line="835">
                    Time stamps (long) are split into offsets (long) and a                    
                </comment>
                <comment line="836">
                    series of times from the offsets (int). A new offset is                    
                </comment>
                <comment line="837">
                    stored when the the time value doesn&apos;t fit in an int                    
                </comment>
                <comment line="838">
                    (approx every 24 days).  An array of indices is used to                    
                </comment>
                <comment line="839">
                    define the starting point for each offset in the times                    
                </comment>
                <comment line="840">
                    array.                    
                </comment>
                <comment line="845">
                    Number of stored timestamps                    
                </comment>
                <comment line="891">
                    Values are stored in an int[] if all values will fit,                    
                </comment>
                <comment line="892">
                    otherwise in a long[]. An int can represent up to 2 GB.                    
                </comment>
                <comment line="893">
                    Use a random start size, so all arrays won&apos;t need to                    
                </comment>
                <comment line="894">
                    be grown during the same update interval                    
                </comment>
                <comment line="898">
                    Number of stored values                    
                </comment>
                <declaration name="serialVersionUID" type="long" line="995"/>
                <method name="SaveDataFileChooser" type="constructor" line="996"/>
                <method name="approveSelection" type="void" line="1001">
                    <declaration name="file" type="File" line="1002"/>
                    <scope line="1003">
                        <declaration name="filter" type="FileFilter" line="1004"/>
                        <scope line="1005">
                            <declaration name="extensions" type="String[]" line="1006"/>
                            <declaration name="goodExt" type="boolean" line="1009"/>
                            <scope line="1010">
                                <scope line="1011"/>
                            </scope>
                            <scope line="1016"/>
                        </scope>
                        <scope line="1022">
                            <declaration name="okStr" type="String" line="1023"/>
                            <declaration name="cancelStr" type="String" line="1024"/>
                            <declaration name="ret" type="int" line="1025"/>
                            <scope line="1035"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <method name="getAccessibleContext" type="AccessibleContext" line="1046">
                <scope line="1047"/>
            </method>
            <class name="AccessiblePlotter" line="1053">
                <extends class="AccessibleJComponent"/>
                <comment line="835">
                    Time stamps (long) are split into offsets (long) and a                    
                </comment>
                <comment line="836">
                    series of times from the offsets (int). A new offset is                    
                </comment>
                <comment line="837">
                    stored when the the time value doesn&apos;t fit in an int                    
                </comment>
                <comment line="838">
                    (approx every 24 days).  An array of indices is used to                    
                </comment>
                <comment line="839">
                    define the starting point for each offset in the times                    
                </comment>
                <comment line="840">
                    array.                    
                </comment>
                <comment line="845">
                    Number of stored timestamps                    
                </comment>
                <comment line="891">
                    Values are stored in an int[] if all values will fit,                    
                </comment>
                <comment line="892">
                    otherwise in a long[]. An int can represent up to 2 GB.                    
                </comment>
                <comment line="893">
                    Use a random start size, so all arrays won&apos;t need to                    
                </comment>
                <comment line="894">
                    be grown during the same update interval                    
                </comment>
                <comment line="898">
                    Number of stored values                    
                </comment>
                <declaration name="serialVersionUID" type="long" line="1054"/>
                <method name="AccessiblePlotter" type="constructor" line="1055"/>
                <method name="getAccessibleName" type="String" line="1060">
                    <comment line="1077">
                        Assume format string ends with newline                        
                    </comment>
                    <declaration name="name" type="String" line="1061"/>
                    <scope line="1063">
                        <declaration name="keyValueList" type="String" line="1064"/>
                        <scope line="1065">
                            <scope line="1066">
                                <declaration name="value" type="String" line="1067"/>
                                <scope line="1068">
                                    <scope line="1069"/>
                                    <scope line="1071"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="1084"/>
                </method>
                <method name="getAccessibleRole" type="AccessibleRole" line="1091"/>
            </class>
        </class>
    </source>