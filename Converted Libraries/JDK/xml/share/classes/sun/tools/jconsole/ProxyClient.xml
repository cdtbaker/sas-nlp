<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.jconsole">
        <import package="com.sun.management.HotSpotDiagnosticMXBean"/>
        <import package="com.sun.tools.jconsole.JConsoleContext"/>
        <import package="com.sun.tools.jconsole.JConsoleContext.ConnectionState"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="java.io.IOException"/>
        <import package="java.lang.management"/>
        <import package="java.lang.management.ManagementFactory"/>
        <import package="java.lang.ref.WeakReference"/>
        <import package="java.lang.reflect"/>
        <import package="java.rmi"/>
        <import package="java.rmi.registry"/>
        <import package="java.rmi.server"/>
        <import package="java.util"/>
        <import package="javax.management"/>
        <import package="javax.management.remote"/>
        <import package="javax.management.remote.rmi"/>
        <import package="javax.rmi.ssl.SslRMIClientSocketFactory"/>
        <import package="javax.swing.event.SwingPropertyChangeSupport"/>
        <import package="sun.rmi.server.UnicastRef2"/>
        <import package="sun.rmi.transport.LiveRef"/>
        <class name="ProxyClient" line="23">
            <implements interface="JConsoleContext"/>
            <declaration name="connectionState" type="ConnectionState" line="24"/>
            <declaration name="propertyChangeSupport" type="SwingPropertyChangeSupport" line="25"/>
            <declaration name="cache" type="Map&lt;String,ProxyClient&gt;" line="26"/>
            <declaration name="isDead" type="boolean" line="27"/>
            <declaration name="hostName" type="String" line="28"/>
            <declaration name="port" type="int" line="29"/>
            <declaration name="userName" type="String" line="30"/>
            <declaration name="password" type="String" line="31"/>
            <declaration name="hasPlatformMXBeans" type="boolean" line="32"/>
            <declaration name="hasHotSpotDiagnosticMXBean" type="boolean" line="33"/>
            <declaration name="hasCompilationMXBean" type="boolean" line="34"/>
            <declaration name="supportsLockUsage" type="boolean" line="35"/>
            <declaration name="lvm" type="LocalVirtualMachine" line="36"/>
            <declaration name="advancedUrl" type="String" line="37"/>
            <declaration name="jmxUrl" type="JMXServiceURL" line="38"/>
            <declaration name="mbsc" type="MBeanServerConnection" line="39"/>
            <declaration name="server" type="SnapshotMBeanServerConnection" line="40"/>
            <declaration name="jmxc" type="JMXConnector" line="41"/>
            <declaration name="stub" type="RMIServer" line="42"/>
            <declaration name="sslRMIClientSocketFactory" type="SslRMIClientSocketFactory" line="43"/>
            <declaration name="registryHostName" type="String" line="44"/>
            <declaration name="registryPort" type="int" line="45"/>
            <declaration name="vmConnector" type="boolean" line="46"/>
            <declaration name="sslRegistry" type="boolean" line="47"/>
            <declaration name="sslStub" type="boolean" line="48"/>
            <declaration name="connectionName" type="String" line="49"/>
            <declaration name="displayName" type="String" line="50"/>
            <declaration name="classLoadingMBean" type="ClassLoadingMXBean" line="51"/>
            <declaration name="compilationMBean" type="CompilationMXBean" line="52"/>
            <declaration name="memoryMBean" type="MemoryMXBean" line="53"/>
            <declaration name="operatingSystemMBean" type="OperatingSystemMXBean" line="54"/>
            <declaration name="runtimeMBean" type="RuntimeMXBean" line="55"/>
            <declaration name="threadMBean" type="ThreadMXBean" line="56"/>
            <declaration name="sunOperatingSystemMXBean" type="com.sun.management.OperatingSystemMXBean" line="57"/>
            <declaration name="hotspotDiagnosticMXBean" type="HotSpotDiagnosticMXBean" line="58"/>
            <declaration name="memoryPoolProxies" type="List&lt;MemoryPoolProxy&gt;" line="59"/>
            <declaration name="garbageCollectorMBeans" type="List&lt;GarbageCollectorMXBean&gt;" line="60"/>
            <declaration name="HOTSPOT_DIAGNOSTIC_MXBEAN_NAME" type="String" line="61"/>
            <method name="ProxyClient" type="constructor" line="62">
                <params>
                    <param name="hostName" type="String"/>
                    <param name="port" type="int"/>
                    <param name="userName" type="String"/>
                    <param name="password" type="String"/>
                </params>
                <scope line="65"/>
                <scope line="69">
                    <declaration name="urlPath" type="String" line="70"/>
                    <declaration name="url" type="JMXServiceURL" line="71"/>
                </scope>
            </method>
            <method name="ProxyClient" type="constructor" line="79">
                <params>
                    <param name="url" type="String"/>
                    <param name="userName" type="String"/>
                    <param name="password" type="String"/>
                </params>
            </method>
            <method name="ProxyClient" type="constructor" line="85">
                <params>
                    <param name="lvm" type="LocalVirtualMachine"/>
                </params>
            </method>
            <method name="setParameters" type="void" line="90">
                <params>
                    <param name="url" type="JMXServiceURL"/>
                    <param name="userName" type="String"/>
                    <param name="password" type="String"/>
                </params>
            </method>
            <method name="checkStub" type="void" line="97">
                <params>
                    <param name="stub" type="Remote"/>
                    <param name="stubClass" type="Class<? extends Remote>"/>
                </params>
                <scope line="98">
                    <scope line="99"/>
                    <scope line="102">
                        <declaration name="handler" type="InvocationHandler" line="103"/>
                        <scope line="104"/>
                        <scope line="107"/>
                    </scope>
                </scope>
                <declaration name="ref" type="RemoteRef" line="112"/>
                <scope line="113"/>
                <declaration name="liveRef" type="LiveRef" line="116"/>
                <declaration name="csf" type="RMIClientSocketFactory" line="117"/>
                <scope line="118"/>
            </method>
            <declaration name="rmiServerImplStubClassName" type="String" line="122"/>
            <declaration name="rmiServerImplStubClass" type="Class&lt;? extends Remote&gt;" line="123"/>
            <scope line="124">
                <declaration name="serverStubClass" type="Class&lt;? extends Remote&gt;" line="125"/>
                <scope line="126"/>
                <scope line="129"/>
            </scope>
            <method name="checkSslConfig" type="void" line="134">
                <declaration name="registry" type="Registry" line="135"/>
                <scope line="136">
                    <scope line="138"/>
                    <scope line="141"/>
                </scope>
                <scope line="146">
                    <scope line="148"/>
                    <scope line="151"/>
                </scope>
                <scope line="156"/>
                <scope line="160"/>
            </method>
            <javadoc line="164">
                Returns true if the underlying RMI registry is SSL-protected.                
                <exception>
                    UnsupportedOperationException If this {@code ProxyClient}does not denote a JMX connector for a JMX VM agent.                    
                </exception>
            </javadoc>
            <method name="isSslRmiRegistry" type="boolean" line="168">
                <scope line="169"/>
            </method>
            <javadoc line="174">
                Returns true if the retrieved RMI stub is SSL-protected.                
                <exception>
                    UnsupportedOperationException If this {@code ProxyClient}does not denote a JMX connector for a JMX VM agent.                    
                </exception>
            </javadoc>
            <method name="isSslRmiStub" type="boolean" line="178">
                <scope line="179"/>
            </method>
            <javadoc line="184">
                Returns true if this {@code ProxyClient} denotes
                  a JMX connector for a JMX VM agent.                
            </javadoc>
            <method name="isVmConnector" type="boolean" line="188"/>
            <method name="setConnectionState" type="void" line="191">
                <params>
                    <param name="state" type="ConnectionState"/>
                </params>
                <declaration name="oldState" type="ConnectionState" line="192"/>
            </method>
            <method name="getConnectionState" type="ConnectionState" line="196"/>
            <method name="flush" type="void" line="199">
                <scope line="200"/>
            </method>
            <method name="connect" type="void" line="204">
                <scope line="206"/>
                <scope line="210">
                    <scope line="211"/>
                </scope>
            </method>
            <method name="tryConnect" type="void" line="217">
                <scope line="218"/>
                <scope line="223">
                    <scope line="224">
                        <scope line="225">
                            <scope line="227"/>
                        </scope>
                        <scope line="231"/>
                    </scope>
                    <scope line="235">
                        <scope line="236">
                            <scope line="237"/>
                        </scope>
                        <scope line="243"/>
                    </scope>
                    <scope line="247">
                        <declaration name="env" type="Map&lt;String,String[]&gt;" line="248"/>
                        <scope line="250">
                            <scope line="251"/>
                        </scope>
                        <scope line="257"/>
                    </scope>
                </scope>
                <scope line="265">
                    <declaration name="on" type="ObjectName" line="266"/>
                    <scope line="269">
                        <declaration name="mopis" type="MBeanOperationInfo[]" line="270"/>
                        <scope line="271">
                            <scope line="272"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="281"/>
                <scope line="284">
                    <declaration name="ie" type="InternalError" line="285"/>
                </scope>
                <scope line="289">
                    <declaration name="ie" type="InternalError" line="290"/>
                </scope>
                <scope line="294">
                    <declaration name="ie" type="InternalError" line="295"/>
                </scope>
                <scope line="299"/>
            </method>
            <javadoc line="303">
                Gets a proxy client for a given local virtual machine.                
            </javadoc>
            <method name="getProxyClient" type="ProxyClient" line="306">
                <params>
                    <param name="lvm" type="LocalVirtualMachine"/>
                </params>
                <declaration name="key" type="String" line="307"/>
                <declaration name="proxyClient" type="ProxyClient" line="308"/>
                <scope line="309"/>
            </method>
            <method name="getConnectionName" type="String" line="315">
                <params>
                    <param name="lvm" type="LocalVirtualMachine"/>
                </params>
            </method>
            <method name="getCacheKey" type="String" line="318">
                <params>
                    <param name="lvm" type="LocalVirtualMachine"/>
                </params>
            </method>
            <javadoc line="321">
                Gets a proxy client for a given JMXServiceURL.                
            </javadoc>
            <method name="getProxyClient" type="ProxyClient" line="324">
                <params>
                    <param name="url" type="String"/>
                    <param name="userName" type="String"/>
                    <param name="password" type="String"/>
                </params>
                <declaration name="key" type="String" line="325"/>
                <declaration name="proxyClient" type="ProxyClient" line="326"/>
                <scope line="327"/>
            </method>
            <method name="getConnectionName" type="String" line="333">
                <params>
                    <param name="url" type="String"/>
                    <param name="userName" type="String"/>
                </params>
                <scope line="334"/>
                <scope line="337"/>
            </method>
            <method name="getCacheKey" type="String" line="341">
                <params>
                    <param name="url" type="String"/>
                    <param name="userName" type="String"/>
                    <param name="password" type="String"/>
                </params>
            </method>
            <javadoc line="344">
                Gets a proxy client for a given &quot;hostname:port&quot;.                
            </javadoc>
            <method name="getProxyClient" type="ProxyClient" line="347">
                <params>
                    <param name="hostName" type="String"/>
                    <param name="port" type="int"/>
                    <param name="userName" type="String"/>
                    <param name="password" type="String"/>
                </params>
                <declaration name="key" type="String" line="348"/>
                <declaration name="proxyClient" type="ProxyClient" line="349"/>
                <scope line="350"/>
            </method>
            <method name="getConnectionName" type="String" line="356">
                <params>
                    <param name="hostName" type="String"/>
                    <param name="port" type="int"/>
                    <param name="userName" type="String"/>
                </params>
                <declaration name="name" type="String" line="357"/>
                <scope line="358"/>
                <scope line="361"/>
            </method>
            <method name="getCacheKey" type="String" line="365">
                <params>
                    <param name="hostName" type="String"/>
                    <param name="port" type="int"/>
                    <param name="userName" type="String"/>
                    <param name="password" type="String"/>
                </params>
            </method>
            <method name="connectionName" type="String" line="368"/>
            <method name="getDisplayName" type="String" line="371"/>
            <method name="toString" type="String" line="374">
                <scope line="375"/>
                <scope line="378"/>
            </method>
            <method name="getMBeanServerConnection" type="MBeanServerConnection" line="382"/>
            <method name="getSnapshotMBeanServerConnection" type="SnapshotMBeanServerConnection" line="385"/>
            <method name="getUrl" type="String" line="388"/>
            <method name="getHostName" type="String" line="391"/>
            <method name="getPort" type="int" line="394"/>
            <method name="getVmid" type="int" line="397"/>
            <method name="getUserName" type="String" line="400"/>
            <method name="getPassword" type="String" line="403"/>
            <method name="disconnect" type="void" line="406">
                <scope line="408">
                    <scope line="409"/>
                    <scope line="412"/>
                </scope>
                <scope line="423"/>
            </method>
            <javadoc line="428">
                Returns the list of domains in which any MBean is
                  currently registered.                
            </javadoc>
            <method name="getDomains" type="String[]" line="432"/>
            <javadoc line="435">
                Returns a map of MBeans with ObjectName as the key and MBeanInfo value
                  of a given domain.  If domain is &lt;tt&gt;null&lt;/tt&gt;, all MBeans
                  are returned.  If no MBean found, an empty map is returned.                
            </javadoc>
            <method name="getMBeans" type="Map<ObjectName,MBeanInfo>" line="440">
                <params>
                    <param name="domain" type="String"/>
                </params>
                <declaration name="name" type="ObjectName" line="441"/>
                <scope line="442">
                    <scope line="443"/>
                    <scope line="446"/>
                </scope>
                <declaration name="mbeans" type="Set" line="450"/>
                <declaration name="result" type="Map&lt;ObjectName,MBeanInfo&gt;" line="451"/>
                <declaration name="iterator" type="Iterator" line="452"/>
                <scope line="453">
                    <declaration name="object" type="Object" line="454"/>
                    <scope line="455">
                        <declaration name="o" type="ObjectName" line="456"/>
                        <scope line="457">
                            <declaration name="info" type="MBeanInfo" line="458"/>
                        </scope>
                        <scope line="461"/>
                        <scope line="463"/>
                        <scope line="465"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="471">
                Returns a list of attributes of a named MBean.                
            </javadoc>
            <method name="getAttributes" type="AttributeList" line="474">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="attributes" type="String[]"/>
                </params>
                <declaration name="list" type="AttributeList" line="475"/>
                <scope line="476"/>
                <scope line="479"/>
                <scope line="481"/>
            </method>
            <javadoc line="485">
                Set the value of a specific attribute of a named MBean.                
            </javadoc>
            <method name="setAttribute" type="void" line="488">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="attribute" type="Attribute"/>
                </params>
                <scope line="489"/>
                <scope line="492"/>
                <scope line="494"/>
                <scope line="497"/>
            </method>
            <javadoc line="500">
                Invokes an operation of a named MBean.                
                <throws>
                    MBeanException Wraps an exception thrown by
                      the MBean's invoked method.                    
                </throws>
            </javadoc>
            <method name="invoke" type="Object" line="505">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="operationName" type="String"/>
                    <param name="params" type="Object[]"/>
                    <param name="signature" type="String[]"/>
                </params>
                <declaration name="result" type="Object" line="506"/>
                <scope line="507"/>
                <scope line="510"/>
                <scope line="512"/>
            </method>
            <method name="getClassLoadingMXBean" type="ClassLoadingMXBean" line="516">
                <scope line="517"/>
            </method>
            <method name="getCompilationMXBean" type="CompilationMXBean" line="522">
                <scope line="523"/>
            </method>
            <method name="getMemoryPoolProxies" type="Collection<MemoryPoolProxy>" line="528">
                <scope line="529">
                    <declaration name="poolName" type="ObjectName" line="530"/>
                    <scope line="531"/>
                    <scope line="534"/>
                    <declaration name="mbeans" type="Set" line="537"/>
                    <scope line="538">
                        <declaration name="iterator" type="Iterator" line="540"/>
                        <scope line="541">
                            <declaration name="objName" type="ObjectName" line="542"/>
                            <declaration name="p" type="MemoryPoolProxy" line="543"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="getGarbageCollectorMXBeans" type="Collection<GarbageCollectorMXBean>" line="550">
                <scope line="551">
                    <declaration name="gcName" type="ObjectName" line="552"/>
                    <scope line="553"/>
                    <scope line="556"/>
                    <declaration name="mbeans" type="Set" line="559"/>
                    <scope line="560">
                        <declaration name="iterator" type="Iterator" line="562"/>
                        <scope line="563">
                            <declaration name="on" type="ObjectName" line="564"/>
                            <declaration name="name" type="String" line="565"/>
                            <declaration name="mBean" type="GarbageCollectorMXBean" line="566"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="getMemoryMXBean" type="MemoryMXBean" line="573">
                <scope line="574"/>
            </method>
            <method name="getRuntimeMXBean" type="RuntimeMXBean" line="579">
                <scope line="580"/>
            </method>
            <method name="getThreadMXBean" type="ThreadMXBean" line="585">
                <scope line="586"/>
            </method>
            <method name="getOperatingSystemMXBean" type="OperatingSystemMXBean" line="591">
                <scope line="592"/>
            </method>
            <method name="getSunOperatingSystemMXBean" type="com.sun.management.OperatingSystemMXBean" line="597">
                <scope line="598">
                    <declaration name="on" type="ObjectName" line="599"/>
                    <scope line="600">
                        <scope line="601"/>
                    </scope>
                </scope>
                <scope line="606"/>
                <scope line="609"/>
            </method>
            <method name="getHotSpotDiagnosticMXBean" type="HotSpotDiagnosticMXBean" line="614">
                <scope line="615"/>
            </method>
            <method name="getMXBean" type="T" line="620">
                <params>
                    <param name="objName" type="ObjectName"/>
                    <param name="interfaceClass" type="Class<T>"/>
                </params>
            </method>
            <method name="findDeadlockedThreads" type="long[]" line="623">
                <declaration name="tm" type="ThreadMXBean" line="624"/>
                <scope line="625"/>
                <scope line="628"/>
            </method>
            <method name="markAsDead" type="void" line="632"/>
            <method name="isDead" type="boolean" line="635"/>
            <method name="isConnected" type="boolean" line="638"/>
            <method name="hasPlatformMXBeans" type="boolean" line="641"/>
            <method name="hasHotSpotDiagnosticMXBean" type="boolean" line="644"/>
            <method name="isLockUsageSupported" type="boolean" line="647"/>
            <method name="isRegistered" type="boolean" line="650">
                <params>
                    <param name="name" type="ObjectName"/>
                </params>
            </method>
            <method name="addPropertyChangeListener" type="void" line="653">
                <params>
                    <param name="listener" type="PropertyChangeListener"/>
                </params>
            </method>
            <method name="addWeakPropertyChangeListener" type="void" line="656">
                <params>
                    <param name="listener" type="PropertyChangeListener"/>
                </params>
                <scope line="657"/>
            </method>
            <method name="removePropertyChangeListener" type="void" line="662">
                <params>
                    <param name="listener" type="PropertyChangeListener"/>
                </params>
                <scope line="663">
                    <scope line="664">
                        <scope line="665"/>
                    </scope>
                </scope>
            </method>
            <class name="WeakPCL" line="673">
                <extends class="WeakReference">
                    <type_params>
                        <type_param name="PropertyChangeListener"/>
                    </type_params>
                </extends>
                <implements interface="PropertyChangeListener"/>
                <javadoc line="673">
                    The PropertyChangeListener is handled via a WeakReference
                      so as not to pin down the listener.                    
                </javadoc>
                <method name="WeakPCL" type="constructor" line="678">
                    <params>
                        <param name="referent" type="PropertyChangeListener"/>
                    </params>
                </method>
                <method name="propertyChange" type="void" line="681">
                    <params>
                        <param name="pce" type="PropertyChangeEvent"/>
                    </params>
                    <declaration name="pcl" type="PropertyChangeListener" line="682"/>
                    <scope line="683"/>
                    <scope line="686"/>
                </method>
                <method name="dispose" type="void" line="690"/>
            </class>
            <interface name="SnapshotMBeanServerConnection">
                <implements interface="MBeanServerConnection"/>
                <method name="flush" type="void" line="695"/>
                <javadoc line="695">
                    Flush all cached values of attributes.                    
                </javadoc>
            </interface>
            <class name="Snapshot" line="700">
                <method name="Snapshot" type="constructor" line="701"/>
                <method name="newSnapshot" type="SnapshotMBeanServerConnection" line="703">
                    <params>
                        <param name="mbsc" type="MBeanServerConnection"/>
                    </params>
                    <declaration name="ih" type="InvocationHandler" line="704"/>
                </method>
            </class>
            <class name="SnapshotInvocationHandler" line="708">
                <implements interface="InvocationHandler"/>
                <declaration name="conn" type="MBeanServerConnection" line="709"/>
                <declaration name="cachedValues" type="Map&lt;ObjectName,NameValueMap&gt;" line="710"/>
                <declaration name="cachedNames" type="Map&lt;ObjectName,Set&lt;String&gt;&gt;" line="711"/>
                <class name="NameValueMap" line="712">
                    <extends class="HashMap">
                        <type_params>
                            <type_param name="String"/>
                            <type_param name="Object"/>
                        </type_params>
                    </extends>
                </class>
                <method name="SnapshotInvocationHandler" type="constructor" line="714">
                    <params>
                        <param name="conn" type="MBeanServerConnection"/>
                    </params>
                </method>
                <method name="flush" type="void" line="717"/>
                <method name="invoke" type="Object" line="720">
                    <params>
                        <param name="proxy" type="Object"/>
                        <param name="method" type="Method"/>
                        <param name="args" type="Object[]"/>
                    </params>
                    <declaration name="methodName" type="String" line="721"/>
                    <scope line="722"/>
                    <scope line="725"/>
                    <scope line="728"/>
                    <scope line="732">
                        <scope line="733"/>
                        <scope line="736"/>
                    </scope>
                </method>
                <method name="getAttribute" type="Object" line="741">
                    <params>
                        <param name="objName" type="ObjectName"/>
                        <param name="attrName" type="String"/>
                    </params>
                    <declaration name="values" type="NameValueMap" line="742"/>
                    <declaration name="value" type="Object" line="743"/>
                    <scope line="744"/>
                </method>
                <method name="getAttributes" type="AttributeList" line="749">
                    <params>
                        <param name="objName" type="ObjectName"/>
                        <param name="attrNames" type="String[]"/>
                    </params>
                    <declaration name="values" type="NameValueMap" line="750"/>
                    <declaration name="list" type="AttributeList" line="751"/>
                    <scope line="752">
                        <declaration name="value" type="Object" line="753"/>
                        <scope line="754"/>
                    </scope>
                </method>
                <method name="getCachedAttributes" type="NameValueMap" line="760">
                    <params>
                        <param name="objName" type="ObjectName"/>
                        <param name="attrNames" type="Set<String>"/>
                    </params>
                    <declaration name="values" type="NameValueMap" line="761"/>
                    <scope line="762"/>
                    <declaration name="oldNames" type="Set&lt;String&gt;" line="766"/>
                    <scope line="767"/>
                    <declaration name="attrs" type="AttributeList" line="771"/>
                    <scope line="772"/>
                </method>
                <method name="newMap" type="Map<K,V>" line="779"/>
            </class>
        </class>
    </source>