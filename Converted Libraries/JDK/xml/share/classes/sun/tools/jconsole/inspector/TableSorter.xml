<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.jconsole.inspector">
        <import package="java.awt.event.MouseEvent"/>
        <import package="java.awt.event.MouseListener"/>
        <import package="java.util.Vector"/>
        <import package="javax.swing.JTable"/>
        <import package="javax.swing.event.TableModelEvent"/>
        <import package="javax.swing.event.TableModelListener"/>
        <import package="javax.swing.table.DefaultTableModel"/>
        <import package="javax.swing.table.JTableHeader"/>
        <import package="javax.swing.table.TableColumnModel"/>
        <import package="sun.tools.jconsole.JConsole"/>
        <class name="TableSorter" line="42">
            <extends class="DefaultTableModel"/>
            <comment line="254">
                Add a mouse listener to the Table to trigger a table sort
                 when a column heading is clicked in the JTable.                
            </comment>
            <implements interface="MouseListener"/>
            <declaration name="ascending" type="boolean" line="44"/>
            <declaration name="columnModel" type="TableColumnModel" line="45"/>
            <declaration name="tableView" type="JTable" line="46"/>
            <declaration name="evtListenerList" type="Vector&lt;TableModelListener&gt;" line="47"/>
            <declaration name="sortColumn" type="int" line="48"/>
            <declaration name="invertedIndex" type="int[]" line="50"/>
            <method name="TableSorter" type="constructor" line="52"/>
            <method name="TableSorter" type="constructor" line="57">
                <params>
                    <param name="columnNames" type="Object[]"/>
                    <param name="numRows" type="int"/>
                </params>
            </method>
            <method name="newDataAvailable" type="void" line="63">
                <params>
                    <param name="e" type="TableModelEvent"/>
                </params>
                <scope line="66"/>
            </method>
            <method name="addTableModelListener" type="void" line="73">
                <params>
                    <param name="l" type="TableModelListener"/>
                </params>
            </method>
            <method name="removeTableModelListener" type="void" line="79">
                <params>
                    <param name="l" type="TableModelListener"/>
                </params>
            </method>
            <method name="removeListeners" type="void" line="84"/>
            <method name="restoreListeners" type="void" line="89"/>
            <method name="compare" type="int" line="95">
                <params>
                    <param name="o1" type="Object"/>
                    <param name="o2" type="Object"/>
                </params>
                <comment line="97">
                    take care of the case where both o1 &amp; o2 are null. Needed to keep
                     the method symetric. Without this quickSort gives surprising results.                    
                </comment>
                <comment line="105">
                    two object of the same class and that are comparable                    
                </comment>
                <scope line="106"/>
                <scope line="109"/>
            </method>
            <method name="sort" type="void" line="114">
                <params>
                    <param name="column" type="int"/>
                    <param name="isAscending" type="boolean"/>
                </params>
                <comment line="121">
                    We cannot sort rows when a cell is being
                     edited - so we&apos;re going to cancel cell editing here if needed.
                     This might happen when the user is editing a row, and clicks on
                     another row without validating. In that case there are two events
                     that compete: one is the validation of the value that was previously
                     edited, the other is the mouse click that opens the new editor.
                    
                     When we reach here the previous value is already validated, and the
                     old editor is closed, but the new editor might have opened.
                     It&apos;s this new editor that wil be cancelled here, if needed.                    
                </comment>
                <comment line="135">
                    remove registered listeners                    
                </comment>
                <comment line="137">
                    do the sort                    
                </comment>
                <comment line="144">
                    restore registered listeners                    
                </comment>
                <comment line="147">
                    update row heights in XMBeanAttributes (required by expandable cells)                    
                </comment>
                <declaration name="attrs" type="XMBeanAttributes" line="115"/>
                <scope line="138"/>
                <scope line="147">
                    <scope line="148">
                        <declaration name="data" type="Vector" line="149"/>
                    </scope>
                </scope>
            </method>
            <method name="compareS" type="boolean" line="155">
                <params>
                    <param name="s1" type="Object"/>
                    <param name="s2" type="Object"/>
                    <param name="isAscending" type="boolean"/>
                </params>
            </method>
            <method name="compareG" type="boolean" line="162">
                <params>
                    <param name="s1" type="Object"/>
                    <param name="s2" type="Object"/>
                    <param name="isAscending" type="boolean"/>
                </params>
            </method>
            <method name="quickSort" type="void" line="169">
                <params>
                    <param name="lo0" type="int"/>
                    <param name="hi0" type="int"/>
                    <param name="key" type="int"/>
                    <param name="isAscending" type="boolean"/>
                </params>
                <comment line="181">
                    find the first element that is greater than
                     or equal to the partition element starting
                     from the left Index.                    
                </comment>
                <comment line="189">
                    find an element that is smaller than or equal to
                     the partition element starting from the right Index.                    
                </comment>
                <comment line="196">
                    if the indexes have not crossed, swap                    
                </comment>
                <comment line="205">
                    If the right index has not reached the
                     left side of array
                     must now sort the left partition.                    
                </comment>
                <comment line="212">
                    If the left index has not reached the right
                     side of array
                     must now sort the right partition.                    
                </comment>
                <declaration name="lo" type="int" line="170"/>
                <declaration name="hi" type="int" line="171"/>
                <declaration name="mid" type="Object" line="172"/>
                <scope line="175">
                    <scope line="179">
                        <scope line="197"/>
                    </scope>
                </scope>
            </method>
            <method name="getRow" type="Vector" line="220">
                <params>
                    <param name="row" type="int"/>
                </params>
            </method>
            <method name="setRow" type="void" line="225">
                <params>
                    <param name="data" type="Vector"/>
                    <param name="row" type="int"/>
                </params>
            </method>
            <method name="swap" type="void" line="229">
                <params>
                    <param name="i" type="int"/>
                    <param name="j" type="int"/>
                    <param name="column" type="int"/>
                </params>
                <declaration name="data" type="Vector" line="230"/>
                <declaration name="a" type="int" line="234"/>
            </method>
            <method name="sortByColumn" type="void" line="239">
                <params>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="sortByColumn" type="void" line="243">
                <params>
                    <param name="column" type="int"/>
                    <param name="ascending" type="boolean"/>
                </params>
            </method>
            <method name="getIndexOfRow" type="int" line="249">
                <params>
                    <param name="row" type="int"/>
                </params>
            </method>
            <method name="addMouseListenerToHeaderInTable" type="void" line="255">
                <params>
                    <param name="table" type="JTable"/>
                </params>
                <declaration name="th" type="JTableHeader" line="258"/>
            </method>
            <method name="mouseClicked" type="void" line="262">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
                <comment line="269">
                    inform the table view that the rows are going to be sorted
                     against the values in a given column. This gives the
                     chance to the table view to close its editor - if needed.                    
                </comment>
                <declaration name="viewColumn" type="int" line="263"/>
                <declaration name="column" type="int" line="264"/>
                <scope line="265">
                    <scope line="266">
                        <declaration name="attrs" type="XTable" line="267"/>
                    </scope>
                </scope>
            </method>
            <method name="mousePressed" type="void" line="281">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <method name="mouseEntered" type="void" line="284">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <method name="mouseExited" type="void" line="287">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <method name="mouseReleased" type="void" line="290">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
        </class>
    </source>