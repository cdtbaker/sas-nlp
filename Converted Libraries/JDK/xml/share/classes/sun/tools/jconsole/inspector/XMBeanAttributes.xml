<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.jconsole.inspector">
        <import package="java.awt.Component"/>
        <import package="java.awt.EventQueue"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.event.MouseAdapter"/>
        <import package="java.awt.event.MouseEvent"/>
        <import package="java.io.IOException"/>
        <import package="java.lang.reflect.Array"/>
        <import package="java.util.EventObject"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.WeakHashMap"/>
        <import package="java.util.concurrent.ExecutionException"/>
        <import package="java.util.logging.Level"/>
        <import package="java.util.logging.Logger"/>
        <import package="javax.management.JMException"/>
        <import package="javax.management.MBeanInfo"/>
        <import package="javax.management.MBeanAttributeInfo"/>
        <import package="javax.management.AttributeList"/>
        <import package="javax.management.Attribute"/>
        <import package="javax.management.openmbean.CompositeData"/>
        <import package="javax.management.openmbean.TabularData"/>
        <import package="javax.swing.JComponent"/>
        <import package="javax.swing.JOptionPane"/>
        <import package="javax.swing.JTable"/>
        <import package="javax.swing.JTextField"/>
        <import package="javax.swing.SwingWorker"/>
        <import package="javax.swing.event.ChangeEvent"/>
        <import package="javax.swing.event.TableModelEvent"/>
        <import package="javax.swing.event.TableModelListener"/>
        <import package="javax.swing.table.DefaultTableCellRenderer"/>
        <import package="javax.swing.table.DefaultTableModel"/>
        <import package="javax.swing.table.TableCellEditor"/>
        <import package="javax.swing.table.TableCellRenderer"/>
        <import package="javax.swing.table.TableColumn"/>
        <import package="javax.swing.table.TableColumnModel"/>
        <import package="javax.swing.table.TableModel"/>
        <import package="sun.tools.jconsole.Resources"/>
        <import package="sun.tools.jconsole.MBeansTab"/>
        <import package="sun.tools.jconsole.JConsole"/>
        <import package="sun.tools.jconsole.ProxyClient.SnapshotMBeanServerConnection"/>
        <class name="XMBeanAttributes" line="80">
            <extends class="XTable"/>
            <comment line="260">
                Table methods                
            </comment>
            <comment line="305">
                tool tip only for editable column                
            </comment>
            <comment line="378">
                Call this in EDT                
            </comment>
            <comment line="415">
                Don&apos;t call this in EDT, but execute returned Runnable inside                
            </comment>
            <comment line="416">
                EDT - typically in the done() method of a SwingWorker                
            </comment>
            <comment line="417">
                This method can return null.                
            </comment>
            <comment line="616">
                This is called by XSheet when the &quot;refresh&quot; button is pressed.                
            </comment>
            <comment line="617">
                In this case we will commit any pending attribute values by                
            </comment>
            <comment line="618">
                calling &apos;stopCellEditing&apos;.                
            </comment>
            <comment line="619">
                                
            </comment>
            <comment line="624">
                refreshAttributes(false) is called by tableChanged().                
            </comment>
            <comment line="625">
                in this case we must not call stopCellEditing, because it&apos;s already                
            </comment>
            <comment line="626">
                been called - e.g.                
            </comment>
            <comment line="627">
                lostFocus/mousePressed -&gt; stopCellEditing -&gt; setValueAt -&gt; tableChanged                
            </comment>
            <comment line="628">
                -&gt; refreshAttributes(false)                
            </comment>
            <comment line="629">
                                
            </comment>
            <comment line="630">
                Can be called in EDT - as long as the implementation of                
            </comment>
            <comment line="631">
                mbeansTab.getCachedMBeanServerConnection() and mbsc.flush() doesn&apos;t                
            </comment>
            <comment line="632">
                change                
            </comment>
            <comment line="633">
                                
            </comment>
            <comment line="660">
                We need to call stop editing here - otherwise edits are lost                
            </comment>
            <comment line="661">
                when resizing the table.                
            </comment>
            <comment line="662">
                                
            </comment>
            <comment line="669">
                We need to call stop editing here - otherwise the edited value                
            </comment>
            <comment line="670">
                is transferred to the wrong row...                
            </comment>
            <comment line="671">
                                
            </comment>
            <comment line="684">
                Call this in synchronized block.                
            </comment>
            <comment line="739">
                will be called in a synchronzed block                
            </comment>
            <declaration name="LOGGER" type="Logger" line="83"/>
            <declaration name="columnNames" type="String[]" line="86"/>
            <declaration name="mbean" type="XMBean" line="90"/>
            <declaration name="mbeanInfo" type="MBeanInfo" line="91"/>
            <declaration name="attributesInfo" type="MBeanAttributeInfo[]" line="92"/>
            <declaration name="attributes" type="HashMap&lt;String,Object&gt;" line="93"/>
            <declaration name="unavailableAttributes" type="HashMap&lt;String,Object&gt;" line="94"/>
            <declaration name="viewableAttributes" type="HashMap&lt;String,Object&gt;" line="95"/>
            <declaration name="viewersCache" type="WeakHashMap&lt;XMBean,HashMap&lt;String,ZoomedCell&gt;&gt;" line="96"/>
            <declaration name="attributesListener" type="TableModelListener" line="98"/>
            <declaration name="mbeansTab" type="MBeansTab" line="99"/>
            <declaration name="valueCellEditor" type="TableCellEditor" line="100"/>
            <declaration name="rowMinHeight" type="int" line="101"/>
            <declaration name="mouseListener" type="AttributesMouseListener" line="102"/>
            <declaration name="editor" type="TableCellEditor" line="104"/>
            <method name="XMBeanAttributes" type="constructor" line="107">
                <params>
                    <param name="mbeansTab" type="MBeansTab"/>
                </params>
            </method>
            <method name="prepareRenderer" type="Component" line="123">
                <params>
                    <param name="renderer" type="TableCellRenderer"/>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
                <comment line="124">
                    In case we have a repaint thread that is in the process of                    
                </comment>
                <comment line="125">
                    repainting an obsolete table, just ignore the call.                    
                </comment>
                <comment line="126">
                    It can happen when MBean selection is switched at a very quick rate                    
                </comment>
            </method>
            <method name="updateRowHeight" type="void" line="133">
                <params>
                    <param name="obj" type="Object"/>
                    <param name="row" type="int"/>
                </params>
                <declaration name="cell" type="ZoomedCell" line="134"/>
                <scope line="135"/>
            </method>
            <method name="getCellRenderer" type="TableCellRenderer" line="149">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
                <comment line="150">
                    In case we have a repaint thread that is in the process of                    
                </comment>
                <comment line="151">
                    repainting an obsolete table, just ignore the call.                    
                </comment>
                <comment line="152">
                    It can happen when MBean selection is switched at a very quick rate                    
                </comment>
                <scope line="153"/>
                <scope line="155">
                    <scope line="156">
                        <declaration name="obj" type="Object" line="157"/>
                        <scope line="158">
                            <declaration name="cell" type="ZoomedCell" line="159"/>
                            <scope line="160">
                                <declaration name="renderer" type="DefaultTableCellRenderer" line="161"/>
                            </scope>
                        </scope>
                    </scope>
                    <declaration name="renderer" type="DefaultTableCellRenderer" line="168"/>
                    <scope line="170">
                        <scope line="172"/>
                    </scope>
                </scope>
            </method>
            <method name="setColumnEditors" type="void" line="180">
                <declaration name="tcm" type="TableColumnModel" line="181"/>
                <scope line="182">
                    <declaration name="tc" type="TableColumn" line="183"/>
                    <scope line="184"/>
                    <scope line="186"/>
                </scope>
            </method>
            <method name="cancelCellEditing" type="void" line="192">
                <scope line="193"/>
                <declaration name="tableCellEditor" type="TableCellEditor" line="196"/>
                <scope line="197"/>
            </method>
            <method name="stopCellEditing" type="void" line="202">
                <scope line="203"/>
                <declaration name="tableCellEditor" type="TableCellEditor" line="206"/>
                <scope line="207"/>
            </method>
            <method name="editCellAt" type="boolean" line="213">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="e" type="EventObject"/>
                </params>
                <scope line="214"/>
                <scope line="218"/>
                <declaration name="retVal" type="boolean" line="221"/>
                <scope line="222">
                    <declaration name="tableCellEditor" type="TableCellEditor" line="223"/>
                    <scope line="225"/>
                </scope>
            </method>
            <method name="isCellEditable" type="boolean" line="233">
                <params>
                    <param name="row" type="int"/>
                    <param name="col" type="int"/>
                </params>
                <comment line="234">
                    All the cells in non-editable columns are editable                    
                </comment>
                <comment line="238">
                    Maximized zoomed cells are editable                    
                </comment>
                <scope line="235"/>
                <declaration name="obj" type="Object" line="239"/>
                <scope line="240">
                    <declaration name="cell" type="ZoomedCell" line="241"/>
                </scope>
            </method>
            <method name="setValueAt" type="void" line="248">
                <params>
                    <param name="value" type="Object"/>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
                <scope line="250">
                    <scope line="251"/>
                </scope>
            </method>
            <method name="isTableEditable" type="boolean" line="261"/>
            <method name="setTableValue" type="void" line="265">
                <params>
                    <param name="value" type="Object"/>
                    <param name="row" type="int"/>
                </params>
            </method>
            <method name="isColumnEditable" type="boolean" line="268">
                <params>
                    <param name="column" type="int"/>
                </params>
                <scope line="269"/>
                <scope line="272"/>
            </method>
            <method name="getClassName" type="String" line="277">
                <params>
                    <param name="row" type="int"/>
                </params>
                <declaration name="index" type="int" line="278"/>
                <scope line="279"/>
                <scope line="282"/>
            </method>
            <method name="getValueName" type="String" line="288">
                <params>
                    <param name="row" type="int"/>
                </params>
                <declaration name="index" type="int" line="289"/>
                <scope line="290"/>
                <scope line="293"/>
            </method>
            <method name="getValue" type="Object" line="298">
                <params>
                    <param name="row" type="int"/>
                </params>
                <declaration name="val" type="Object" line="299"/>
            </method>
            <method name="getToolTip" type="String" line="306">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
                <scope line="307"/>
                <scope line="310">
                    <declaration name="value" type="Object" line="311"/>
                    <declaration name="tip" type="String" line="312"/>
                    <scope line="313"/>
                </scope>
                <scope line="323">
                    <declaration name="index" type="int" line="324"/>
                    <scope line="325"/>
                </scope>
            </method>
            <method name="isWritable" type="boolean" line="332">
                <params>
                    <param name="row" type="int"/>
                </params>
                <declaration name="index" type="int" line="333"/>
                <scope line="334"/>
                <scope line="337"/>
            </method>
            <javadoc line="342">
                Override JTable method in order to make any call to this method
                  atomic with TableModel elements.                
            </javadoc>
            <method name="getRowCount" type="int" line="347"/>
            <method name="isReadable" type="boolean" line="351">
                <params>
                    <param name="row" type="int"/>
                </params>
                <declaration name="index" type="int" line="352"/>
                <scope line="353"/>
                <scope line="356"/>
            </method>
            <method name="isCellError" type="boolean" line="361">
                <params>
                    <param name="row" type="int"/>
                    <param name="col" type="int"/>
                </params>
            </method>
            <method name="isAttributeViewable" type="boolean" line="366">
                <params>
                    <param name="row" type="int"/>
                    <param name="col" type="int"/>
                </params>
                <declaration name="isViewable" type="boolean" line="367"/>
                <scope line="368">
                    <declaration name="obj" type="Object" line="369"/>
                </scope>
            </method>
            <method name="loadAttributes" type="void" line="378">
                <params>
                    <param name="mbean" type="XMBean"/>
                    <param name="mbeanInfo" type="MBeanInfo"/>
                </params>
                <anonymous_class line="381">
                    <method name="doInBackground" type="Runnable" line="383"/>
                    <method name="done" type="void" line="388">
                        <scope line="389">
                            <declaration name="updateUI" type="Runnable" line="390"/>
                        </scope>
                        <scope line="392"/>
                        <scope line="394">
                            <scope line="395"/>
                        </scope>
                        <scope line="401">
                            <scope line="402"/>
                        </scope>
                    </method>
                </anonymous_class>
                <declaration name="load" type="SwingWorker&lt;Runnable,Void&gt;" line="380"/>
            </method>
            <method name="doLoadAttributes" type="Runnable" line="418">
                <params>
                    <param name="mbean" type="XMBean"/>
                    <param name="infoOrNull" type="MBeanInfo"/>
                </params>
                <comment line="419">
                    To avoid deadlock with events coming from the JMX side,                    
                </comment>
                <comment line="420">
                    we retrieve all JMX stuff in a non synchronized block.                    
                </comment>
                <comment line="446">
                    Can&apos;t load all attributes, do it one after each other.                    
                </comment>
                <comment line="475">
                    if not all attributes are accessible,                    
                </comment>
                <comment line="476">
                    check them one after the other.                    
                </comment>
                <comment line="486">
                    getAttributes didn&apos;t help resolving the                    
                </comment>
                <comment line="487">
                    exception.                    
                </comment>
                <comment line="488">
                    We must call it again to understand what                    
                </comment>
                <comment line="489">
                    went wrong.                    
                </comment>
                <comment line="494">
                    What happens if now it is ok?                    
                </comment>
                <comment line="495">
                    Be pragmatic, add it to readable...                    
                </comment>
                <comment line="499">
                    Put the exception that will be displayed                    
                </comment>
                <comment line="500">
                    in tooltip                    
                </comment>
                <comment line="510">
                    sets all attributes unavailable except the writable ones                    
                </comment>
                <comment line="520">
                    end of retrieval                    
                </comment>
                <comment line="522">
                    one update at a time                    
                </comment>
                <comment line="536">
                    add attribute information                    
                </comment>
                <comment line="546">
                    update the model with the new data                    
                </comment>
                <comment line="548">
                    re-register for change events                    
                </comment>
                <declaration name="curMBeanInfo" type="MBeanInfo" line="423"/>
                <declaration name="attrsInfo" type="MBeanAttributeInfo[]" line="426"/>
                <declaration name="attrs" type="HashMap&lt;String,Object&gt;" line="427"/>
                <declaration name="unavailableAttrs" type="HashMap&lt;String,Object&gt;" line="429"/>
                <declaration name="viewableAttrs" type="HashMap&lt;String,Object&gt;" line="431"/>
                <declaration name="list" type="AttributeList" line="433"/>
                <scope line="435"/>
                <scope line="437">
                    <scope line="438"/>
                    <scope line="447">
                        <declaration name="name" type="String" line="448"/>
                        <scope line="449">
                            <declaration name="value" type="Object" line="451"/>
                        </scope>
                        <scope line="455">
                            <scope line="456"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="463">
                    <declaration name="att_length" type="int" line="464"/>
                    <scope line="465">
                        <declaration name="attribute" type="Attribute" line="466"/>
                        <scope line="467"/>
                    </scope>
                    <scope line="477">
                        <scope line="478">
                            <declaration name="attributeInfo" type="MBeanAttributeInfo" line="479"/>
                            <scope line="484">
                                <scope line="485">
                                    <scope line="490">
                                        <declaration name="v" type="Object" line="491"/>
                                    </scope>
                                    <scope line="498"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="509">
                    <scope line="511">
                        <declaration name="attributeInfo" type="MBeanAttributeInfo" line="512"/>
                        <scope line="513"/>
                    </scope>
                </scope>
                <anonymous_class line="523">
                    <method name="run" type="void" line="524">
                        <comment line="536">
                            add attribute information                            
                        </comment>
                        <comment line="546">
                            update the model with the new data                            
                        </comment>
                        <comment line="548">
                            re-register for change events                            
                        </comment>
                        <scope line="525">
                            <declaration name="tableModel" type="DefaultTableModel" line="533"/>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <method name="collapse" type="void" line="555">
                <params>
                    <param name="attributeName" type="String"/>
                    <param name="c" type="Component"/>
                </params>
                <declaration name="row" type="int" line="556"/>
                <declaration name="obj" type="Object" line="557"/>
                <scope line="558">
                    <declaration name="cell" type="ZoomedCell" line="560"/>
                </scope>
            </method>
            <method name="updateZoomedCell" type="ZoomedCell" line="572">
                <params>
                    <param name="row" type="int"/>
                    <param name="col" type="int"/>
                </params>
                <comment line="604">
                    Back to simple editor.                    
                </comment>
                <declaration name="obj" type="Object" line="573"/>
                <declaration name="cell" type="ZoomedCell" line="574"/>
                <scope line="575">
                    <scope line="577">
                        <declaration name="elem" type="Object" line="578"/>
                        <declaration name="attributeName" type="String" line="579"/>
                        <declaration name="comp" type="Component" line="582"/>
                        <scope line="584"/>
                    </scope>
                    <scope line="602"/>
                </scope>
            </method>
            <method name="refreshAttributes" type="void" line="619"/>
            <method name="refreshAttributes" type="void" line="633">
                <params>
                    <param name="stopCellEditing" type="boolean"/>
                </params>
                <anonymous_class line="634">
                    <method name="doInBackground" type="Void" line="637">
                        <declaration name="mbsc" type="SnapshotMBeanServerConnection" line="638"/>
                    </method>
                    <method name="done" type="void" line="645">
                        <scope line="646"/>
                        <scope line="650">
                            <scope line="651"/>
                        </scope>
                    </method>
                </anonymous_class>
                <declaration name="sw" type="SwingWorker&lt;Void,Void&gt;" line="634"/>
            </method>
            <method name="columnMarginChanged" type="void" line="663">
                <params>
                    <param name="e" type="ChangeEvent"/>
                </params>
            </method>
            <method name="sortRequested" type="void" line="672">
                <params>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="emptyTable" type="void" line="679"/>
            <method name="emptyTable" type="void" line="684">
                <params>
                    <param name="model" type="DefaultTableModel"/>
                </params>
            </method>
            <method name="isViewable" type="boolean" line="689">
                <params>
                    <param name="attribute" type="Attribute"/>
                </params>
                <declaration name="data" type="Object" line="690"/>
            </method>
            <method name="removeAttributes" type="void" line="695">
                <scope line="696"/>
                <scope line="699"/>
                <scope line="702"/>
            </method>
            <method name="getZoomedCell" type="ZoomedCell" line="708">
                <params>
                    <param name="mbean" type="XMBean"/>
                    <param name="attribute" type="String"/>
                    <param name="value" type="Object"/>
                </params>
                <comment line="721">
                    Plotters are the only viewers with auto update capabilities.                    
                </comment>
                <comment line="722">
                    Other viewers need to be updated manually.                    
                </comment>
                <scope line="709">
                    <declaration name="viewers" type="HashMap&lt;String,ZoomedCell&gt;" line="710"/>
                    <scope line="711"/>
                    <scope line="713"/>
                    <declaration name="cell" type="ZoomedCell" line="716"/>
                    <scope line="717">
                        <scope line="720">
                            <declaration name="comp" type="Component" line="723"/>
                        </scope>
                    </scope>
                    <scope line="729"/>
                </scope>
            </method>
            <method name="addTableData" type="void" line="744">
                <params>
                    <param name="tableModel" type="DefaultTableModel"/>
                    <param name="mbean" type="XMBean"/>
                    <param name="attributesInfo" type="MBeanAttributeInfo[]"/>
                    <param name="attributes" type="HashMap<String,Object>"/>
                    <param name="unavailableAttributes" type="HashMap<String,Object>"/>
                    <param name="viewableAttributes" type="HashMap<String,Object>"/>
                </params>
                <comment line="765">
                    Update column width                    
                </comment>
                <comment line="766">
                                        
                </comment>
                <declaration name="rowData" type="Object" line="746"/>
                <declaration name="col1Width" type="int" line="747"/>
                <declaration name="col2Width" type="int" line="748"/>
                <scope line="749">
                    <scope line="751"/>
                    <scope line="753">
                        <scope line="756"/>
                    </scope>
                    <scope line="759"/>
                    <declaration name="str" type="String" line="767"/>
                    <scope line="768"/>
                    <scope line="773"/>
                </scope>
            </method>
            <method name="updateColumnWidth" type="void" line="782">
                <params>
                    <param name="col1Width" type="int"/>
                    <param name="col2Width" type="int"/>
                </params>
                <comment line="785">
                    Get the column at index pColumn, and set its preferred width.                    
                </comment>
                <declaration name="colModel" type="TableColumnModel" line="783"/>
            </method>
            <class name="AttributesMouseListener" line="796">
                <extends class="MouseAdapter"/>
                <comment line="817">
                    implements javax.swing.table.TableCellEditor                    
                </comment>
                <comment line="1000">
                    Call this in EDT                    
                </comment>
                <comment line="1032">
                    Call this in EDT                    
                </comment>
                <comment line="1065">
                    Call this outside EDT                    
                </comment>
                <method name="mousePressed" type="void" line="799">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <scope line="800">
                        <scope line="801">
                            <declaration name="row" type="int" line="803"/>
                            <declaration name="col" type="int" line="804"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="ValueCellEditor" line="814">
                <extends class="XTextFieldEditor"/>
                <comment line="817">
                    implements javax.swing.table.TableCellEditor                    
                </comment>
                <comment line="1000">
                    Call this in EDT                    
                </comment>
                <comment line="1032">
                    Call this in EDT                    
                </comment>
                <comment line="1065">
                    Call this outside EDT                    
                </comment>
                <method name="getTableCellEditorComponent" type="Component" line="822">
                    <params>
                        <param name="table" type="JTable"/>
                        <param name="value" type="Object"/>
                        <param name="isSelected" type="boolean"/>
                        <param name="row" type="int"/>
                        <param name="column" type="int"/>
                    </params>
                    <declaration name="val" type="Object" line="823"/>
                    <scope line="824">
                        <declaration name="obj" type="Object" line="825"/>
                        <scope line="827">
                            <declaration name="cell" type="ZoomedCell" line="828"/>
                            <scope line="829">
                                <declaration name="zr" type="MaximizedCellRenderer" line="830"/>
                            </scope>
                        </scope>
                        <scope line="834">
                            <declaration name="comp" type="Component" line="835"/>
                            <scope line="839"/>
                        </scope>
                    </scope>
                </method>
                <method name="stopCellEditing" type="boolean" line="852">
                    <declaration name="editingRow" type="int" line="853"/>
                    <declaration name="editingColumn" type="int" line="854"/>
                    <scope line="855">
                        <declaration name="obj" type="Object" line="856"/>
                        <scope line="857">
                            <declaration name="cell" type="ZoomedCell" line="858"/>
                            <scope line="859"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="MaximizedCellRenderer" line="869">
                <extends class="DefaultTableCellRenderer"/>
                <comment line="817">
                    implements javax.swing.table.TableCellEditor                    
                </comment>
                <comment line="1000">
                    Call this in EDT                    
                </comment>
                <comment line="1032">
                    Call this in EDT                    
                </comment>
                <comment line="1065">
                    Call this outside EDT                    
                </comment>
                <declaration name="comp" type="Component" line="871"/>
                <method name="MaximizedCellRenderer" type="constructor" line="872">
                    <params>
                        <param name="comp" type="Component"/>
                    </params>
                    <declaration name="d" type="Dimension" line="874"/>
                    <scope line="875"/>
                </method>
                <method name="getTableCellRendererComponent" type="Component" line="885">
                    <params>
                        <param name="table" type="JTable"/>
                        <param name="value" type="Object"/>
                        <param name="isSelected" type="boolean"/>
                        <param name="hasFocus" type="boolean"/>
                        <param name="row" type="int"/>
                        <param name="column" type="int"/>
                    </params>
                </method>
                <method name="getComponent" type="Component" line="888"/>
            </class>
            <class name="ZoomedCell" line="893">
                <comment line="817">
                    implements javax.swing.table.TableCellEditor                    
                </comment>
                <comment line="1000">
                    Call this in EDT                    
                </comment>
                <comment line="1032">
                    Call this in EDT                    
                </comment>
                <comment line="1065">
                    Call this outside EDT                    
                </comment>
                <declaration name="minRenderer" type="TableCellRenderer" line="894"/>
                <declaration name="maxRenderer" type="MaximizedCellRenderer" line="895"/>
                <declaration name="minHeight" type="int" line="896"/>
                <declaration name="minimized" type="boolean" line="897"/>
                <declaration name="init" type="boolean" line="898"/>
                <declaration name="type" type="int" line="899"/>
                <declaration name="value" type="Object" line="900"/>
                <method name="ZoomedCell" type="constructor" line="901">
                    <params>
                        <param name="value" type="Object"/>
                    </params>
                </method>
                <method name="isInited" type="boolean" line="906"/>
                <method name="getValue" type="Object" line="910"/>
                <method name="setValue" type="void" line="914">
                    <params>
                        <param name="value" type="Object"/>
                    </params>
                </method>
                <method name="init" type="void" line="920">
                    <params>
                        <param name="minRenderer" type="TableCellRenderer"/>
                        <param name="maxComponent" type="Component"/>
                        <param name="minHeight" type="int"/>
                    </params>
                </method>
                <method name="getType" type="int" line="928"/>
                <method name="reset" type="void" line="932"/>
                <method name="switchState" type="void" line="937"/>
                <method name="isMaximized" type="boolean" line="940"/>
                <method name="minimize" type="void" line="943"/>
                <method name="maximize" type="void" line="947"/>
                <method name="getHeight" type="int" line="951"/>
                <method name="getMinHeight" type="int" line="958"/>
                <method name="toString" type="String" line="963">
                    <scope line="967">
                        <declaration name="name" type="String" line="968"/>
                        <declaration name="length" type="int" line="970"/>
                    </scope>
                </method>
                <method name="getRenderer" type="TableCellRenderer" line="981"/>
                <method name="getMinRenderer" type="TableCellRenderer" line="986"/>
            </class>
            <class name="AttributesListener" line="991">
                <comment line="817">
                    implements javax.swing.table.TableCellEditor                    
                </comment>
                <comment line="1000">
                    Call this in EDT                    
                </comment>
                <comment line="1032">
                    Call this in EDT                    
                </comment>
                <comment line="1065">
                    Call this outside EDT                    
                </comment>
                <implements interface="TableModelListener"/>
                <declaration name="component" type="Component" line="993"/>
                <method name="AttributesListener" type="constructor" line="995">
                    <params>
                        <param name="component" type="Component"/>
                    </params>
                </method>
                <method name="tableChanged" type="void" line="1000">
                    <params>
                        <param name="e" type="TableModelEvent"/>
                    </params>
                    <comment line="1001">
                        only post changes to the draggable column                        
                    </comment>
                    <comment line="1012">
                        if it&apos;s a String, try construct new value                        
                    </comment>
                    <comment line="1013">
                        using the defined type.                        
                    </comment>
                    <comment line="1017">
                        type                        
                    </comment>
                    <comment line="1018">
                        value                        
                    </comment>
                    <scope line="1002">
                        <declaration name="model" type="TableModel" line="1003"/>
                        <declaration name="tableValue" type="Object" line="1004"/>
                        <scope line="1007"/>
                        <scope line="1014">
                            <scope line="1015"/>
                            <scope line="1019"/>
                        </scope>
                        <declaration name="attributeName" type="String" line="1024"/>
                        <declaration name="attribute" type="Attribute" line="1025"/>
                    </scope>
                </method>
                <method name="setAttribute" type="void" line="1032">
                    <params>
                        <param name="attribute" type="Attribute"/>
                        <param name="method" type="String"/>
                    </params>
                    <anonymous_class line="1034">
                        <method name="doInBackground" type="Void" line="1036">
                            <scope line="1037">
                                <scope line="1038"/>
                            </scope>
                            <scope line="1044"/>
                        </method>
                        <method name="done" type="void" line="1050">
                            <scope line="1051"/>
                            <scope line="1053"/>
                        </method>
                    </anonymous_class>
                    <declaration name="setAttribute" type="SwingWorker&lt;Void,Void&gt;" line="1033"/>
                </method>
                <method name="popupAndLog" type="void" line="1065">
                    <params>
                        <param name="ex" type="Throwable"/>
                        <param name="method" type="String"/>
                        <param name="key" type="String"/>
                    </params>
                    <declaration name="message" type="String" line="1069"/>
                </method>
            </class>
        </class>
    </source>