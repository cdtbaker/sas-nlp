<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.jstack">
        <import package="java.lang.reflect.Method"/>
        <import package="java.lang.reflect.Constructor"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="com.sun.tools.attach.VirtualMachine"/>
        <import package="com.sun.tools.attach.AttachNotSupportedException"/>
        <import package="sun.tools.attach.HotSpotVirtualMachine"/>
        <class name="JStack" line="42">
            <comment line="118">
                SA JStack tool                
            </comment>
            <comment line="140">
                Returns sun.jvm.hotspot.tools.JStack if available, otherwise null.                
            </comment>
            <comment line="156">
                Attach to pid and perform a thread dump                
            </comment>
            <comment line="194">
                return a new string array with arg as the first element                
            </comment>
            <comment line="202">
                print usage message                
            </comment>
            <method name="main" type="void" line="43">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <comment line="45">
                    no arguments                    
                </comment>
                <comment line="52">
                    Parse the options (arguments starting with &quot;-&quot; )                    
                </comment>
                <comment line="75">
                    mixed stack implies SA tool                    
                </comment>
                <comment line="80">
                    Next we check the parameter count. If there are two parameters                    
                </comment>
                <comment line="81">
                    we assume core file and executable so we use SA.                    
                </comment>
                <comment line="89">
                    If we can&apos;t parse it as a pid then it must be debug server                    
                </comment>
                <comment line="95">
                    now execute using the SA JStack tool or the built-in thread dumper                    
                </comment>
                <comment line="97">
                    parameters (&lt;pid&gt; or &lt;exe&gt; &lt;core&gt;                    
                </comment>
                <comment line="104">
                    pass -l to thread dump operation to get extra lock info                    
                </comment>
                <scope line="44"/>
                <declaration name="useSA" type="boolean" line="48"/>
                <declaration name="mixed" type="boolean" line="49"/>
                <declaration name="locks" type="boolean" line="50"/>
                <declaration name="optionCount" type="int" line="53"/>
                <scope line="54">
                    <declaration name="arg" type="String" line="55"/>
                    <scope line="56"/>
                    <scope line="59"/>
                    <scope line="61">
                        <scope line="62"/>
                        <scope line="64">
                            <scope line="65"/>
                            <scope line="67"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="76"/>
                <declaration name="paramCount" type="int" line="82"/>
                <scope line="83"/>
                <scope line="86"/>
                <scope line="88">
                    <scope line="90"/>
                </scope>
                <scope line="96">
                    <declaration name="params" type="String" line="98"/>
                    <scope line="99"/>
                </scope>
                <scope line="103">
                    <declaration name="pid" type="String" line="105"/>
                    <declaration name="params" type="String" line="106"/>
                    <scope line="107"/>
                    <scope line="109"/>
                </scope>
            </method>
            <method name="runJStackTool" type="void" line="118">
                <params>
                    <param name="mixed" type="boolean"/>
                    <param name="locks" type="boolean"/>
                    <param name="args" type="String"/>
                </params>
                <comment line="121">
                    SA not available                    
                </comment>
                <comment line="124">
                    JStack tool also takes -m and -l arguments                    
                </comment>
                <declaration name="cl" type="Class&lt;?&gt;" line="119"/>
                <scope line="120"/>
                <scope line="125"/>
                <scope line="128"/>
                <declaration name="argTypes" type="Class[]" line="132"/>
                <declaration name="m" type="Method" line="133"/>
                <declaration name="invokeArgs" type="Object[]" line="135"/>
            </method>
            <method name="loadSAClass" type="Class" line="140">
                <comment line="141">
                                        
                </comment>
                <comment line="142">
                    Attempt to load JStack class - we specify the system class                    
                </comment>
                <comment line="143">
                    loader so as to cater for development environments where                    
                </comment>
                <comment line="144">
                    this class is on the boot class path but sa-jdi.jar is on                    
                </comment>
                <comment line="145">
                    the system class path. Once the JDK is deployed then both                    
                </comment>
                <comment line="146">
                    tools.jar and sa-jdi.jar are on the system class path.                    
                </comment>
                <comment line="147">
                                        
                </comment>
                <scope line="148"/>
                <scope line="151"/>
            </method>
            <method name="runThreadDump" type="void" line="156">
                <params>
                    <param name="pid" type="String"/>
                    <param name="args" type="String"/>
                </params>
                <comment line="175">
                    Cast to HotSpotVirtualMachine as this is implementation specific                    
                </comment>
                <comment line="176">
                    method.                    
                </comment>
                <comment line="179">
                    read to EOF and just print output                    
                </comment>
                <declaration name="vm" type="VirtualMachine" line="157"/>
                <scope line="158"/>
                <scope line="160">
                    <declaration name="msg" type="String" line="161"/>
                    <scope line="162"/>
                    <scope line="164"/>
                    <scope line="168"/>
                </scope>
                <declaration name="in" type="InputStream" line="177"/>
                <declaration name="b" type="byte" line="180"/>
                <declaration name="n" type="int" line="181"/>
                <scope line="182">
                    <scope line="184">
                        <declaration name="s" type="String" line="185"/>
                    </scope>
                </scope>
            </method>
            <method name="prepend" type="String[]" line="194">
                <params>
                    <param name="arg" type="String"/>
                    <param name="args" type="String"/>
                </params>
                <declaration name="newargs" type="String[]" line="195"/>
            </method>
            <method name="usage" type="void" line="202">
                <scope line="207"/>
                <scope line="219"/>
            </method>
        </class>
    </source>