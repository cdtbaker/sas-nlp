<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.jar">
        <import package="java.io"/>
        <import package="java.util"/>
        <import package="java.security"/>
        <import package="sun.net.www.MessageHeader"/>
        <import package="sun.misc.BASE64Encoder"/>
        <import package="sun.misc.BASE64Decoder"/>
        <class name="Manifest" line="36">
            <comment line="48">
                list of headers that all pertain to a particular
                 file in the archive                
            </comment>
            <comment line="53">
                                
            </comment>
            <comment line="99">
                                
            </comment>
            <comment line="204">
                Add a manifest file at current position in a stream                
            </comment>
            <javadoc line="36">
                This is OBSOLETE. DO NOT USE THIS. Use java.util.jar.Manifest
                  instead. It has to stay here because some apps (namely HJ and HJV)
                  call directly into it.                
                <author>
                    David Brown                    
                </author>
                <author>
                    Benjamin Renaud                    
                </author>
            </javadoc>
            <declaration name="entries" type="Vector" line="50"/>
            <declaration name="tmpbuf" type="byte[]" line="51"/>
            <declaration name="tableEntries" type="Hashtable" line="53"/>
            <declaration name="hashes" type="String[]" line="55"/>
            <declaration name="EOL" type="byte[]" line="56"/>
            <declaration name="debug" type="boolean" line="58"/>
            <declaration name="VERSION" type="String" line="59"/>
            <method name="debug" type="void" line="60">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="Manifest" type="constructor" line="65"/>
            <method name="Manifest" type="constructor" line="67">
                <params>
                    <param name="bytes" type="byte[]"/>
                </params>
            </method>
            <method name="Manifest" type="constructor" line="71">
                <params>
                    <param name="is" type="InputStream"/>
                </params>
            </method>
            <javadoc line="75">
                Parse a manifest from a stream, optionally computing hashes
                  for the files.                
            </javadoc>
            <method name="Manifest" type="constructor" line="79">
                <params>
                    <param name="is" type="InputStream"/>
                    <param name="compute" type="boolean"/>
                </params>
                <comment line="84">
                                        
                </comment>
                <comment line="87">
                    EOF                    
                </comment>
                <scope line="80"/>
                <scope line="84">
                    <scope line="86"/>
                    <declaration name="m" type="MessageHeader" line="90"/>
                    <scope line="91"/>
                </scope>
            </method>
            <method name="Manifest" type="constructor" line="99">
                <params>
                    <param name="files" type="String[]"/>
                </params>
                <declaration name="globals" type="MessageHeader" line="100"/>
                <declaration name="jdkVersion" type="String" line="102"/>
            </method>
            <method name="addEntry" type="void" line="108">
                <params>
                    <param name="entry" type="MessageHeader"/>
                </params>
                <declaration name="name" type="String" line="110"/>
                <scope line="112"/>
            </method>
            <method name="getEntry" type="MessageHeader" line="117">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="entryAt" type="MessageHeader" line="121">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="entries" type="Enumeration" line="125"/>
            <method name="addFiles" type="void" line="129">
                <params>
                    <param name="dir" type="File"/>
                    <param name="files" type="String[]"/>
                </params>
                <scope line="132">
                    <declaration name="file" type="File" line="133"/>
                    <scope line="134"/>
                    <scope line="136"/>
                    <scope line="139"/>
                    <scope line="141"/>
                </scope>
            </method>
            <javadoc line="147">
                File names are represented internally using &quot;/&quot;;
                  they are converted to the local format for anything else                
            </javadoc>
            <method name="stdToLocal" type="String" line="152">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="localToStd" type="String" line="156">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="addFile" type="void" line="165">
                <params>
                    <param name="f" type="File"/>
                </params>
                <declaration name="stdName" type="String" line="166"/>
                <scope line="167">
                    <declaration name="mh" type="MessageHeader" line="168"/>
                </scope>
            </method>
            <method name="doHashes" type="void" line="174">
                <params>
                    <param name="mh" type="MessageHeader"/>
                </params>
                <comment line="176">
                    If unnamed or is a directory return immediately                    
                </comment>
                <comment line="184">
                                        
                </comment>
                <declaration name="name" type="String" line="176"/>
                <scope line="177"/>
                <declaration name="enc" type="BASE64Encoder" line="181"/>
                <scope line="184">
                    <declaration name="is" type="InputStream" line="185"/>
                    <scope line="186">
                        <declaration name="dig" type="MessageDigest" line="187"/>
                        <declaration name="len" type="int" line="189"/>
                        <scope line="190"/>
                    </scope>
                    <scope line="194"/>
                    <scope line="197"/>
                </scope>
            </method>
            <method name="stream" type="void" line="205">
                <params>
                    <param name="os" type="OutputStream"/>
                </params>
                <comment line="215">
                    the first header in the file should be the global one.
                     It should say &quot;Manifest-Version: x.x&quot;; if not add it                    
                </comment>
                <comment line="221">
                    Assume this is a user-defined manifest.  If it has a Name: &lt;..&gt;
                     field, then it is not global, in which case we just add our own
                     global Manifest-version: &lt;version&gt;
                     If the first MessageHeader has no Name: &lt;..&gt;, we assume it
                     is a global header and so prepend Manifest to it.                    
                </comment>
                <declaration name="ps" type="PrintStream" line="207"/>
                <scope line="208"/>
                <scope line="210"/>
                <declaration name="globals" type="MessageHeader" line="217"/>
                <scope line="219">
                    <declaration name="jdkVersion" type="String" line="226"/>
                    <scope line="228"/>
                    <scope line="231"/>
                </scope>
                <scope line="240">
                    <declaration name="mh" type="MessageHeader" line="241"/>
                </scope>
            </method>
            <method name="isManifestName" type="boolean" line="246">
                <params>
                    <param name="name" type="String"/>
                </params>
                <comment line="249">
                    remove leading /                    
                </comment>
                <comment line="253">
                    case insensitive                    
                </comment>
                <scope line="249"/>
                <scope line="255"/>
            </method>
        </class>
    </source>