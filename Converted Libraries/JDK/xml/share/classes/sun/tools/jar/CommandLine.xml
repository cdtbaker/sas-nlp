<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.jar">
        <import package="java.io.IOException"/>
        <import package="java.io.Reader"/>
        <import package="java.io.FileReader"/>
        <import package="java.io.BufferedReader"/>
        <import package="java.io.StreamTokenizer"/>
        <import package="java.util.List"/>
        <import package="java.util.ArrayList"/>
        <class name="CommandLine" line="9">
            <javadoc line="9">
                Various utility methods for processing Java tool command line arguments.
                  &lt;p&gt;&lt;b&gt;This is NOT part of any API supported by Oracle.  If
                  you write code that depends on this, you do so at your own risk.
                  This code and its internal interfaces are subject to change or
                  deletion without notice.&lt;/b&gt;                
            </javadoc>
            <javadoc line="17">
                Process Win32-style command files for the specified command line
                  arguments and return the resulting arguments. A command file argument
                  is of the form &apos;@file&apos; where &apos;file&apos; is the name of the file whose
                  contents are to be parsed for additional arguments. The contents of
                  the command file are parsed using StreamTokenizer and the original
                  &apos;@file&apos; argument replaced with the resulting tokens. Recursive command
                  files are not supported. The &apos;@&apos; character itself can be quoted with
                  the sequence &apos;@@&apos;.                
            </javadoc>
            <method name="parse" type="String[]" line="27">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <declaration name="newArgs" type="ArrayList" line="28"/>
                <scope line="29">
                    <declaration name="arg" type="String" line="30"/>
                    <scope line="31">
                        <scope line="33"/>
                        <scope line="36"/>
                    </scope>
                    <scope line="40"/>
                </scope>
            </method>
            <method name="loadCmdFile" type="void" line="46">
                <params>
                    <param name="name" type="String"/>
                    <param name="args" type="List"/>
                </params>
                <declaration name="r" type="Reader" line="47"/>
                <declaration name="st" type="StreamTokenizer" line="48"/>
                <scope line="55"/>
            </method>
        </class>
    </source>