<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.jinfo">
        <import package="java.lang.reflect.Method"/>
        <import package="java.io.File"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="com.sun.tools.attach.VirtualMachine"/>
        <import package="sun.tools.attach.HotSpotVirtualMachine"/>
        <class name="JInfo" line="43">
            <comment line="84">
                Invoke SA tool  with the given arguments                
            </comment>
            <comment line="101">
                loads the given class using the system class loader                
            </comment>
            <comment line="146">
                Attach to &lt;pid&gt;, exiting if we fail to attach                
            </comment>
            <comment line="162">
                Read the stream from the target VM until EOF, then detach                
            </comment>
            <comment line="179">
                print usage message                
            </comment>
            <method name="main" type="void" line="45">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <comment line="48">
                    no arguments                    
                </comment>
                <comment line="56">
                    SA JInfo needs &lt;pid&gt; or &lt;server&gt; or
                     (&lt;executable&gt; and &lt;code file&gt;). So, total
                     argument count including option has to 2 or 3.                    
                </comment>
                <comment line="63">
                    do not use SA, use attach-on-demand                    
                </comment>
                <comment line="66">
                    unknown option or -h or -help, print help                    
                </comment>
                <scope line="46"/>
                <declaration name="useSA" type="boolean" line="50"/>
                <declaration name="arg1" type="String" line="51"/>
                <scope line="52">
                    <scope line="54">
                        <scope line="58"/>
                    </scope>
                    <scope line="61"/>
                    <scope line="64"/>
                </scope>
                <scope line="70"/>
                <scope line="72">
                    <scope line="73">
                        <declaration name="pid" type="String" line="74"/>
                        <declaration name="option" type="String" line="75"/>
                    </scope>
                    <scope line="77"/>
                </scope>
            </method>
            <method name="runTool" type="void" line="84">
                <params>
                    <param name="args" type="String"/>
                </params>
                <comment line="87">
                    Tool not available on this  platform.                    
                </comment>
                <comment line="93">
                    invoke the main method with the arguments                    
                </comment>
                <declaration name="tool" type="String" line="85"/>
                <declaration name="c" type="Class&lt;?&gt;" line="87"/>
                <scope line="88"/>
                <declaration name="argTypes" type="Class[]" line="93"/>
                <declaration name="m" type="Method" line="94"/>
                <declaration name="invokeArgs" type="Object[]" line="96"/>
            </method>
            <method name="loadClass" type="Class" line="101">
                <params>
                    <param name="name" type="String"/>
                </params>
                <comment line="103">
                    We specify the system clas loader so as to cater for development
                     environments where this class is on the boot class path but sa-jdi.jar
                     is on the system class path. Once the JDK is deployed then both
                     tools.jar and sa-jdi.jar are on the system class path.                    
                </comment>
                <scope line="108"/>
                <scope line="111"/>
            </method>
            <method name="flag" type="void" line="115">
                <params>
                    <param name="pid" type="String"/>
                    <param name="option" type="String"/>
                </params>
                <declaration name="vm" type="VirtualMachine" line="116"/>
                <declaration name="flag" type="String" line="117"/>
                <declaration name="in" type="InputStream" line="118"/>
                <declaration name="index" type="int" line="119"/>
                <scope line="120">
                    <declaration name="value" type="String" line="122"/>
                </scope>
                <scope line="124">
                    <declaration name="c" type="char" line="125"/>
                </scope>
            </method>
            <method name="attach" type="VirtualMachine" line="146">
                <params>
                    <param name="pid" type="String"/>
                </params>
                <comment line="158">
                    keep compiler happy                    
                </comment>
                <scope line="147"/>
                <scope line="149">
                    <declaration name="msg" type="String" line="150"/>
                    <scope line="151"/>
                    <scope line="153"/>
                </scope>
            </method>
            <method name="drain" type="void" line="162">
                <params>
                    <param name="vm" type="VirtualMachine"/>
                    <param name="in" type="InputStream"/>
                </params>
                <comment line="164">
                    read to EOF and just print output                    
                </comment>
                <declaration name="b" type="byte" line="164"/>
                <declaration name="n" type="int" line="165"/>
                <scope line="166">
                    <scope line="168">
                        <declaration name="s" type="String" line="169"/>
                    </scope>
                </scope>
            </method>
            <method name="usage" type="void" line="179">
                <declaration name="c" type="Class" line="181"/>
                <declaration name="usageSA" type="boolean" line="182"/>
                <scope line="185"/>
                <scope line="201"/>
            </method>
        </class>
    </source>