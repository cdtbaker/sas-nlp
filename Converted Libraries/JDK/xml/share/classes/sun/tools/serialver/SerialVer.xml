<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.serialver">
        <import package="java.io"/>
        <import package="java.awt"/>
        <import package="java.applet"/>
        <import package="java.io.ObjectStreamClass"/>
        <import package="java.util.Properties"/>
        <import package="java.text.MessageFormat"/>
        <import package="java.util.ResourceBundle"/>
        <import package="java.util.MissingResourceException"/>
        <import package="java.net.URLClassLoader"/>
        <import package="java.net.URL"/>
        <import package="java.net.MalformedURLException"/>
        <import package="java.util.StringTokenizer"/>
        <import package="sun.net.www.ParseUtil"/>
        <class name="SerialVer" line="15">
            <extends class="Applet"/>
            <declaration name="gb" type="GridBagLayout" line="16"/>
            <declaration name="classname_t" type="TextField" line="17"/>
            <declaration name="show_b" type="Button" line="18"/>
            <declaration name="serialversion_t" type="TextField" line="19"/>
            <declaration name="footer_l" type="Label" line="20"/>
            <declaration name="serialVersionUID" type="long" line="21"/>
            <method name="init" type="void" line="22">
                <declaration name="c" type="GridBagConstraints" line="25"/>
                <declaration name="l1" type="Label" line="27"/>
                <declaration name="l2" type="Label" line="41"/>
            </method>
            <method name="start" type="void" line="57"/>
            <method name="action" type="boolean" line="60">
                <params>
                    <param name="ev" type="Event"/>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="61"/>
                <scope line="65"/>
            </method>
            <method name="handleEvent" type="boolean" line="71">
                <params>
                    <param name="ev" type="Event"/>
                </params>
                <declaration name="rc" type="boolean" line="72"/>
            </method>
            <javadoc line="75">
                Lookup the specified classname and display it.                
            </javadoc>
            <method name="show" type="void" line="78">
                <params>
                    <param name="classname" type="String"/>
                </params>
                <scope line="79">
                    <scope line="82"/>
                    <declaration name="s" type="String" line="85"/>
                    <scope line="86"/>
                    <scope line="89"/>
                </scope>
                <scope line="93"/>
            </method>
            <declaration name="loader" type="URLClassLoader" line="97"/>
            <method name="initializeLoader" type="void" line="98">
                <params>
                    <param name="cp" type="String"/>
                </params>
                <declaration name="urls" type="URL[]" line="99"/>
                <declaration name="st" type="StringTokenizer" line="100"/>
                <declaration name="count" type="int" line="101"/>
                <scope line="103"/>
            </method>
            <method name="serialSyntax" type="String" line="108">
                <params>
                    <param name="classname" type="String"/>
                </params>
                <declaration name="ret" type="String" line="109"/>
                <declaration name="classFound" type="boolean" line="110"/>
                <scope line="111"/>
                <scope line="114">
                    <scope line="115"/>
                    <scope line="119"/>
                    <scope line="121">
                        <declaration name="workBuffer" type="StringBuffer" line="122"/>
                        <declaration name="workName" type="String" line="123"/>
                        <declaration name="i" type="int" line="124"/>
                        <scope line="125">
                            <scope line="127"/>
                            <scope line="132"/>
                        </scope>
                    </scope>
                    <scope line="136"/>
                </scope>
            </method>
            <method name="resolveClass" type="String" line="142">
                <params>
                    <param name="classname" type="String"/>
                </params>
                <declaration name="cl" type="Class" line="143"/>
                <declaration name="desc" type="ObjectStreamClass" line="144"/>
                <scope line="145"/>
                <scope line="148"/>
            </method>
            <method name="main" type="void" line="152">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <declaration name="show" type="boolean" line="153"/>
                <declaration name="envcp" type="String" line="154"/>
                <declaration name="i" type="int" line="155"/>
                <scope line="156"/>
                <scope line="160">
                    <scope line="161"/>
                    <scope line="164">
                        <scope line="165"/>
                    </scope>
                    <scope line="173"/>
                    <scope line="178"/>
                </scope>
                <scope line="182">
                    <scope line="184"/>
                </scope>
                <scope line="188"/>
                <scope line="191"/>
                <scope line="195"/>
                <scope line="199">
                    <scope line="200"/>
                    <declaration name="exitFlag" type="boolean" line="204"/>
                    <scope line="205">
                        <scope line="206">
                            <declaration name="syntax" type="String" line="207"/>
                            <scope line="209"/>
                        </scope>
                        <scope line="214"/>
                    </scope>
                    <scope line="219"/>
                </scope>
                <scope line="223">
                    <scope line="224"/>
                    <declaration name="f" type="Frame" line="228"/>
                    <declaration name="sv" type="SerialVer" line="229"/>
                </scope>
            </method>
            <javadoc line="236">
                Usage                
            </javadoc>
            <method name="usage" type="void" line="239"/>
        </class>
        <class name="SerialVerFrame" line="243">
            <extends class="Frame"/>
            <javadoc line="243">
                Top level frame so serialVer can be run as an main program
                  and have an exit menu item.                
            </javadoc>
            <declaration name="menu_mb" type="MenuBar" line="248"/>
            <declaration name="file_m" type="Menu" line="249"/>
            <declaration name="exit_i" type="MenuItem" line="250"/>
            <declaration name="serialVersionUID" type="long" line="251"/>
            <method name="SerialVerFrame" type="constructor" line="252"/>
            <method name="handleEvent" type="boolean" line="259">
                <params>
                    <param name="e" type="Event"/>
                </params>
                <scope line="260"/>
            </method>
            <method name="action" type="boolean" line="265">
                <params>
                    <param name="ev" type="Event"/>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="266"/>
            </method>
            <method name="exit" type="void" line="271">
                <params>
                    <param name="ret" type="int"/>
                </params>
            </method>
        </class>
        <class name="Res" line="275">
            <javadoc line="275">
                Utility for integrating with serialver and for localization.
                  Handle Resources. Access to error and warning counts.
                  Message formatting.                
                <see>
                    java.util.ResourceBundle                    
                </see>
                <see>
                    java.text.MessageFormat                    
                </see>
            </javadoc>
            <declaration name="messageRB" type="ResourceBundle" line="283"/>
            <javadoc line="284">
                Initialize ResourceBundle                
            </javadoc>
            <method name="initResource" type="void" line="287">
                <scope line="288"/>
                <scope line="291"/>
            </method>
            <javadoc line="295">
                get and format message string from resource                
                <param>
                    key selects message from resource                    
                </param>
            </javadoc>
            <method name="getText" type="String" line="299">
                <params>
                    <param name="key" type="String"/>
                </params>
            </method>
            <javadoc line="302">
                get and format message string from resource                
                <param>
                    key selects message from resource                    
                </param>
                <param>
                    a1 first argument                    
                </param>
            </javadoc>
            <method name="getText" type="String" line="307">
                <params>
                    <param name="key" type="String"/>
                    <param name="a1" type="String"/>
                </params>
            </method>
            <javadoc line="310">
                get and format message string from resource                
                <param>
                    key selects message from resource                    
                </param>
                <param>
                    a1 first argument                    
                </param>
                <param>
                    a2 second argument                    
                </param>
            </javadoc>
            <method name="getText" type="String" line="316">
                <params>
                    <param name="key" type="String"/>
                    <param name="a1" type="String"/>
                    <param name="a2" type="String"/>
                </params>
            </method>
            <javadoc line="319">
                get and format message string from resource                
                <param>
                    key selects message from resource                    
                </param>
                <param>
                    a1 first argument                    
                </param>
                <param>
                    a2 second argument                    
                </param>
                <param>
                    a3 third argument                    
                </param>
            </javadoc>
            <method name="getText" type="String" line="326">
                <params>
                    <param name="key" type="String"/>
                    <param name="a1" type="String"/>
                    <param name="a2" type="String"/>
                    <param name="a3" type="String"/>
                </params>
                <scope line="327"/>
                <scope line="330">
                    <declaration name="message" type="String" line="331"/>
                    <declaration name="args" type="String[]" line="332"/>
                </scope>
                <scope line="338"/>
            </method>
        </class>
    </source>