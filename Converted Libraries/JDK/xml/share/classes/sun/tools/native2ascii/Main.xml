<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.native2ascii">
        <import package="java.io"/>
        <import package="java.util"/>
        <import package="java.text.MessageFormat"/>
        <import package="java.nio.charset.CharsetEncoder"/>
        <import package="java.nio.charset.Charset"/>
        <import package="java.nio.charset.IllegalCharsetNameException"/>
        <import package="java.io.UnsupportedEncodingException"/>
        <import package="java.nio.charset.UnsupportedCharsetException"/>
        <import package="sun.tools.native2ascii.A2NFilter"/>
        <import package="sun.tools.native2ascii.N2AFilter"/>
        <class name="Main" line="79">
            <javadoc line="79">
                Main program of the native2ascii                
            </javadoc>
            <declaration name="inputFileName" type="String" line="85"/>
            <declaration name="outputFileName" type="String" line="86"/>
            <declaration name="tempFile" type="File" line="87"/>
            <declaration name="reverse" type="boolean" line="88"/>
            <declaration name="encodingString" type="String" line="89"/>
            <declaration name="defaultEncoding" type="String" line="90"/>
            <declaration name="encoder" type="CharsetEncoder" line="91"/>
            <javadoc line="93">
                Run the converter                
            </javadoc>
            <method name="convert" type="boolean" line="96">
                <params>
                    <param name="argv" type="String"/>
                </params>
                <comment line="102">
                    Parse arguments                    
                </comment>
                <comment line="153">
                    flush stdout                    
                </comment>
                <comment line="157">
                    Close the stream.                    
                </comment>
                <comment line="160">
                    N2A                    
                </comment>
                <comment line="168">
                    flush stdout                    
                </comment>
                <comment line="174">
                    Since we are done rename temporary file to desired output file                    
                </comment>
                <comment line="177">
                    Some win32 platforms can&apos;t handle atomic
                     rename if source and target file paths are
                     identical. To make things simple we just unconditionally
                     delete the target file before calling renameTo()                    
                </comment>
                <declaration name="v" type="List&lt;String&gt;" line="97"/>
                <declaration name="outputFile" type="File" line="98"/>
                <declaration name="createOutputFile" type="boolean" line="99"/>
                <scope line="102">
                    <scope line="103">
                        <scope line="104"/>
                        <scope line="106"/>
                    </scope>
                    <scope line="111"/>
                    <scope line="113">
                        <scope line="114"/>
                    </scope>
                </scope>
                <declaration name="lineBreak" type="char[]" line="124"/>
                <scope line="125">
                    <scope line="131"/>
                    <scope line="137">
                        <scope line="139"/>
                    </scope>
                    <scope line="144">
                        <declaration name="reader" type="BufferedReader" line="145"/>
                        <declaration name="osw" type="Writer" line="146"/>
                        <declaration name="line" type="String" line="147"/>
                        <scope line="149">
                            <scope line="152"/>
                        </scope>
                    </scope>
                    <scope line="158">
                        <declaration name="inLine" type="String" line="160"/>
                        <declaration name="in" type="BufferedReader" line="161"/>
                        <declaration name="out" type="BufferedWriter" line="162"/>
                        <scope line="164">
                            <scope line="167"/>
                        </scope>
                    </scope>
                    <scope line="174">
                        <scope line="175"/>
                    </scope>
                </scope>
                <scope line="185"/>
            </method>
            <method name="error" type="void" line="193">
                <params>
                    <param name="msg" type="String"/>
                </params>
            </method>
            <method name="usage" type="void" line="197"/>
            <method name="getN2AInput" type="BufferedReader" line="202">
                <params>
                    <param name="inFile" type="String"/>
                </params>
                <declaration name="forwardIn" type="InputStream" line="204"/>
                <scope line="207">
                    <declaration name="f" type="File" line="208"/>
                    <scope line="209"/>
                    <scope line="213"/>
                    <scope line="215"/>
                </scope>
                <declaration name="r" type="BufferedReader" line="220"/>
            </method>
            <method name="getN2AOutput" type="BufferedWriter" line="228">
                <params>
                    <param name="outFile" type="String"/>
                </params>
                <declaration name="output" type="Writer" line="229"/>
                <declaration name="n2aOut" type="BufferedWriter" line="230"/>
                <scope line="235">
                    <declaration name="f" type="File" line="236"/>
                    <declaration name="tempDir" type="File" line="238"/>
                    <scope line="248"/>
                    <scope line="250"/>
                </scope>
            </method>
            <method name="getA2NInput" type="BufferedReader" line="259">
                <params>
                    <param name="inFile" type="String"/>
                </params>
                <declaration name="in" type="Reader" line="260"/>
                <declaration name="reader" type="BufferedReader" line="261"/>
                <scope line="265">
                    <declaration name="f" type="File" line="266"/>
                    <scope line="267"/>
                    <scope line="271"/>
                    <scope line="273"/>
                </scope>
            </method>
            <method name="getA2NOutput" type="Writer" line="282">
                <params>
                    <param name="outFile" type="String"/>
                </params>
                <declaration name="w" type="OutputStreamWriter" line="284"/>
                <declaration name="output" type="OutputStream" line="285"/>
                <scope line="289">
                    <declaration name="f" type="File" line="290"/>
                    <declaration name="tempDir" type="File" line="292"/>
                    <scope line="300"/>
                    <scope line="302"/>
                </scope>
            </method>
            <method name="lookupCharset" type="Charset" line="314">
                <params>
                    <param name="csName" type="String"/>
                </params>
                <scope line="315">
                    <scope line="316"/>
                    <scope line="318"/>
                </scope>
            </method>
            <method name="canConvert" type="boolean" line="325">
                <params>
                    <param name="ch" type="char"/>
                </params>
            </method>
            <method name="initializeConverter" type="void" line="329">
                <declaration name="cs" type="Charset" line="330"/>
                <scope line="332"/>
                <scope line="340"/>
            </method>
            <declaration name="rsrc" type="ResourceBundle" line="345"/>
            <scope line="347">
                <scope line="348"/>
                <scope line="351"/>
            </scope>
            <method name="getMsg" type="String" line="356">
                <params>
                    <param name="key" type="String"/>
                </params>
                <scope line="357"/>
                <scope line="359"/>
            </method>
            <method name="formatMsg" type="String" line="364">
                <params>
                    <param name="key" type="String"/>
                    <param name="arg" type="String"/>
                </params>
                <declaration name="msg" type="String" line="365"/>
            </method>
            <javadoc line="370">
                Main program                
            </javadoc>
            <method name="main" type="void" line="373">
                <params>
                    <param name="argv" type="String"/>
                </params>
                <declaration name="converter" type="Main" line="374"/>
            </method>
        </class>
    </source>