<?xml version="1.0" encoding="UTF-8"?>
    <source package="
 * This FilterReader class processes a sequence of characters from
 * a source stream containing a mixture of 7-bit ASCII data and
 * 'back-tick U' escaped sequences representing characters which have
 * the possibility of being encoded in a user specified encoding
 * The filter relies on knowing the target encoding and makes a
 * determination as to whether a given supplied character in its
 * source character stream is encodeable in the target encoding.
 * If not, it is remains in its back-tick U escaped form.
 */
package sun.tools.native2ascii">
        <import package="java.io"/>
        <javadoc line="26">
            This FilterReader class processes a sequence of characters from
              a source stream containing a mixture of 7-bit ASCII data and
              &apos;back-tick U&apos; escaped sequences representing characters which have
              the possibility of being encoded in a user specified encoding
              The filter relies on knowing the target encoding and makes a
              determination as to whether a given supplied character in its
              source character stream is encodeable in the target encoding.
              If not, it is remains in its back-tick U escaped form.            
        </javadoc>
        <class name="A2NFilter" line="41">
            <extends class="FilterReader"/>
            <comment line="44">
                maintain a trailing buffer to hold any incompleted                
            </comment>
            <comment line="45">
                unicode escaped sequences                
            </comment>
            <declaration name="trailChars" type="char[]" line="45"/>
            <method name="A2NFilter" type="constructor" line="47">
                <params>
                    <param name="in" type="Reader"/>
                </params>
            </method>
            <method name="read" type="int" line="51">
                <params>
                    <param name="buf" type="char[]"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <comment line="52">
                    how many characters have been read                    
                </comment>
                <comment line="53">
                    how many characters we&apos;ll return                    
                </comment>
                <comment line="56">
                    offset at which we&apos;ll start reading                    
                </comment>
                <comment line="59">
                    copy trailing chars from previous invocation to input buffer                    
                </comment>
                <comment line="71">
                    EOF;                    
                </comment>
                <comment line="80">
                    Not a backslash, so copy and continue                    
                </comment>
                <comment line="81">
                    Always pass non backslash chars straight thru                    
                </comment>
                <comment line="82">
                    for regular encoding. If backslash occurs in                    
                </comment>
                <comment line="83">
                    input stream at the final 5 chars then don&apos;t                    
                </comment>
                <comment line="84">
                    attempt to read-ahead and de-escape since these                    
                </comment>
                <comment line="85">
                    are literal occurrences of U+005C which need to                    
                </comment>
                <comment line="86">
                    be encoded verbatim in the target encoding.                    
                </comment>
                <comment line="93">
                    Might be the first character of a unicode escape, but we                    
                </comment>
                <comment line="94">
                    don&apos;t have enough characters to tell, so save it and finish                    
                </comment>
                <comment line="101">
                    At this point we have at least five characters remaining                    
                </comment>
                <comment line="105">
                    Not a unicode escape, so copy and continue                    
                </comment>
                <comment line="111">
                    The next four characters are the hex part of a unicode escape                    
                </comment>
                <comment line="120">
                    We&apos;ll be able to convert this                    
                </comment>
                <comment line="122">
                    Align beyond the current uXXXX sequence                    
                </comment>
                <comment line="124">
                    We won&apos;t, so just retain the original sequence                    
                </comment>
                <declaration name="numChars" type="int" line="52"/>
                <declaration name="retChars" type="int" line="53"/>
                <declaration name="cBuf" type="char[]" line="55"/>
                <declaration name="cOffset" type="int" line="56"/>
                <declaration name="eof" type="boolean" line="57"/>
                <scope line="60"/>
                <declaration name="n" type="int" line="67"/>
                <scope line="68"/>
                <scope line="72"/>
                <scope line="76">
                    <declaration name="c" type="char" line="77"/>
                    <scope line="79"/>
                    <declaration name="remaining" type="int" line="91"/>
                    <scope line="92"/>
                    <scope line="104"/>
                    <declaration name="rc" type="char" line="112"/>
                    <declaration name="isUE" type="boolean" line="113"/>
                    <scope line="114"/>
                    <scope line="116"/>
                    <scope line="119"/>
                    <scope line="123"/>
                </scope>
            </method>
            <method name="read" type="int" line="135">
                <declaration name="buf" type="char[]" line="136"/>
            </method>
        </class>
    </source>