<?xml version="1.0" encoding="UTF-8"?>
    <source package="
 * This FilterWriter class takes an existing Writer and uses
 * the 'back-tick U' escape notation to escape characters which are
 * encountered within the input character based stream which
 * are outside the 7-bit ASCII range. The native platforms linefeed
 * character is emitted for each line of processed input
 */
package sun.tools.native2ascii">
        <import package="java.io"/>
        <import package="java.nio.BufferOverflowException"/>
        <javadoc line="27">
            This FilterWriter class takes an existing Writer and uses
              the &apos;back-tick U&apos; escape notation to escape characters which are
              encountered within the input character based stream which
              are outside the 7-bit ASCII range. The native platforms linefeed
              character is emitted for each line of processed input            
        </javadoc>
        <class name="N2AFilter" line="39">
            <extends class="FilterWriter"/>
            <method name="N2AFilter" type="constructor" line="41">
                <params>
                    <param name="out" type="Writer"/>
                </params>
            </method>
            <method name="write" type="void" line="43">
                <params>
                    <param name="b" type="char"/>
                </params>
                <declaration name="buf" type="char[]" line="44"/>
            </method>
            <method name="write" type="void" line="49">
                <params>
                    <param name="buf" type="char[]"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <comment line="53">
                    System.err.println (&quot;xx Out buffer length is &quot; + buf.length );                    
                </comment>
                <comment line="56">
                    write \udddd                    
                </comment>
                <declaration name="lineBreak" type="String" line="51"/>
                <scope line="54">
                    <scope line="55">
                        <declaration name="hex" type="String" line="59"/>
                        <declaration name="hex4" type="StringBuffer" line="61"/>
                        <declaration name="length" type="int" line="63"/>
                        <scope line="64"/>
                        <scope line="67"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>