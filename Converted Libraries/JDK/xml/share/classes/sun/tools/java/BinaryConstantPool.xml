<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.java">
        <import package="java.io.IOException"/>
        <import package="java.io.DataInputStream"/>
        <import package="java.io.DataOutputStream"/>
        <import package="java.util.Vector"/>
        <import package="java.util.Hashtable"/>
        <class name="BinaryConstantPool" line="7">
            <implements interface="Constants"/>
            <javadoc line="7">
                This class is used to represent a constant table once
                  it is read from a class file.
                  WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <declaration name="types" type="byte" line="15"/>
            <declaration name="cpool" type="Object" line="16"/>
            <javadoc line="17">
                Constructor                
            </javadoc>
            <method name="BinaryConstantPool" type="constructor" line="20">
                <params>
                    <param name="in" type="DataInputStream"/>
                </params>
                <scope line="23">
                    <declaration name="j" type="int" line="24"/>
                </scope>
            </method>
            <javadoc line="57">
                get a integer                
            </javadoc>
            <method name="getInteger" type="int" line="60">
                <params>
                    <param name="n" type="int"/>
                </params>
            </method>
            <javadoc line="63">
                get a value                
            </javadoc>
            <method name="getValue" type="Object" line="66">
                <params>
                    <param name="n" type="int"/>
                </params>
            </method>
            <javadoc line="69">
                get a string                
            </javadoc>
            <method name="getString" type="String" line="72">
                <params>
                    <param name="n" type="int"/>
                </params>
            </method>
            <javadoc line="75">
                get an identifier                
            </javadoc>
            <method name="getIdentifier" type="Identifier" line="78">
                <params>
                    <param name="n" type="int"/>
                </params>
            </method>
            <javadoc line="81">
                get class declaration                
            </javadoc>
            <method name="getDeclarationFromName" type="ClassDeclaration" line="84">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="n" type="int"/>
                </params>
            </method>
            <javadoc line="87">
                get class declaration                
            </javadoc>
            <method name="getDeclaration" type="ClassDeclaration" line="90">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="n" type="int"/>
                </params>
            </method>
            <javadoc line="93">
                get a type from a type signature                
            </javadoc>
            <method name="getType" type="Type" line="96">
                <params>
                    <param name="n" type="int"/>
                </params>
            </method>
            <javadoc line="99">
                get the type of constant given an index                
            </javadoc>
            <method name="getConstantType" type="int" line="102">
                <params>
                    <param name="n" type="int"/>
                </params>
            </method>
            <javadoc line="105">
                get the n-th constant from the constant pool                
            </javadoc>
            <method name="getConstant" type="Object" line="108">
                <params>
                    <param name="n" type="int"/>
                    <param name="env" type="Environment"/>
                </params>
                <declaration name="constant_type" type="int" line="109"/>
                <scope line="123">
                    <declaration name="key" type="int" line="124"/>
                    <declaration name="clazz" type="ClassDefinition" line="125"/>
                    <declaration name="name_and_type" type="int" line="126"/>
                    <declaration name="id" type="Identifier" line="127"/>
                    <declaration name="type" type="Type" line="128"/>
                    <scope line="129">
                        <declaration name="field_type" type="Type" line="130"/>
                    </scope>
                </scope>
                <scope line="134"/>
            </method>
            <javadoc line="141">
                Get a list of dependencies, ie: all the classes referenced in this
                  constant pool.                
            </javadoc>
            <method name="getDependencies" type="Vector" line="145">
                <params>
                    <param name="env" type="Environment"/>
                </params>
                <declaration name="v" type="Vector" line="146"/>
                <scope line="147"/>
            </method>
            <declaration name="indexHashObject" type="Hashtable" line="156"/>
            <declaration name="MoreStuff" type="Vector" line="157"/>
            <javadoc line="158">
                Find the index of an Object in the constant pool                
            </javadoc>
            <method name="indexObject" type="int" line="161">
                <params>
                    <param name="obj" type="Object"/>
                    <param name="env" type="Environment"/>
                </params>
                <declaration name="result" type="Integer" line="163"/>
            </method>
            <javadoc line="167">
                Find the index of an ascii string in the constant pool.  If it&apos;s not in
                  the constant pool, then add it at the end.                
            </javadoc>
            <method name="indexString" type="int" line="171">
                <params>
                    <param name="string" type="String"/>
                    <param name="env" type="Environment"/>
                </params>
                <declaration name="result" type="Integer" line="173"/>
                <scope line="174"/>
            </method>
            <javadoc line="182">
                Create a hash table of all the items in the constant pool that could
                  possibly be referenced from the outside.                
            </javadoc>
            <method name="createIndexHash" type="void" line="186">
                <params>
                    <param name="env" type="Environment"/>
                </params>
                <scope line="189">
                    <scope line="190"/>
                    <scope line="193">
                        <scope line="194"/>
                        <scope line="197"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="202">
                Write out the contents of the constant pool, including any additions
                  that have been added.                
            </javadoc>
            <method name="write" type="void" line="206">
                <params>
                    <param name="out" type="DataOutputStream"/>
                    <param name="env" type="Environment"/>
                </params>
                <declaration name="length" type="int" line="207"/>
                <scope line="210">
                    <declaration name="type" type="int" line="211"/>
                    <declaration name="x" type="Object" line="212"/>
                    <scope line="240">
                        <declaration name="value" type="int" line="241"/>
                    </scope>
                </scope>
                <scope line="250">
                    <declaration name="string" type="String" line="251"/>
                </scope>
            </method>
        </class>
    </source>