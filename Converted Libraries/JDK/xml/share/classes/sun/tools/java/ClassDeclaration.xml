<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.java">
        <class name="ClassDeclaration" line="2">
            <implements interface="Constants"/>
            <javadoc line="2">
                This class represents an Java class declaration. It refers
                  to either a binary or source definition.
                  ClassDefinitions are loaded on demand, this means that
                  class declarations are late bound. The definition of the
                  class is obtained in stages. The status field describes
                  the state of the class definition:
                  CS_UNDEFINED - the definition is not yet loaded
                  CS_UNDECIDED - a binary definition is loaded, but it is
                  still unclear if the source definition need to
                  be loaded
                  CS_BINARY    - the binary class is loaded
                  CS_PARSED    - the class is loaded from the source file, the
                  type information is available, but the class has
                  not yet been compiled.
                  CS_CHECKED   - the class is loaded from the source file and has
                  been type-checked.
                  CS_COMPILED  - the class has been type checked, compiled,
                  and written out.
                  CS_NOTFOUND  - no class definition could be found
                  WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <declaration name="status" type="int" line="27"/>
            <declaration name="type" type="Type" line="28"/>
            <declaration name="definition" type="ClassDefinition" line="29"/>
            <javadoc line="30">
                Constructor                
            </javadoc>
            <method name="ClassDeclaration" type="constructor" line="33">
                <params>
                    <param name="name" type="Identifier"/>
                </params>
            </method>
            <javadoc line="36">
                Get the status of the class                
            </javadoc>
            <method name="getStatus" type="int" line="39"/>
            <javadoc line="42">
                Get the name of the class                
            </javadoc>
            <method name="getName" type="Identifier" line="45"/>
            <javadoc line="48">
                Get the type of the class                
            </javadoc>
            <method name="getType" type="Type" line="51"/>
            <javadoc line="54">
                Check if the class is defined                
            </javadoc>
            <method name="isDefined" type="boolean" line="57"/>
            <javadoc line="67">
                Get the definition of this class. Returns null if
                  the class is not yet defined.                
            </javadoc>
            <method name="getClassDefinition" type="ClassDefinition" line="71"/>
            <declaration name="found" type="boolean" line="74"/>
            <javadoc line="74">
                This is a flag for use by getClassDefinition(env).  It is
                  used to mark that a class has been successfully looked up
                  by that method before.                
            </javadoc>
            <javadoc line="80">
                Get the definition of this class, if the class is not
                  yet defined, load the definition. Loading a class may
                  throw various exceptions.                
            </javadoc>
            <method name="getClassDefinition" type="ClassDefinition" line="85">
                <params>
                    <param name="env" type="Environment"/>
                </params>
                <scope line="87"/>
                <scope line="90">
                    <scope line="99"/>
                </scope>
            </method>
            <javadoc line="113">
                Get the definition of this class, if the class is not
                  yet defined, load the definition. Loading a class may
                  throw various exceptions.  Perform no basicCheck() on this
                  class.                
            </javadoc>
            <method name="getClassDefinitionNoCheck" type="ClassDefinition" line="119">
                <params>
                    <param name="env" type="Environment"/>
                </params>
                <scope line="121"/>
            </method>
            <javadoc line="138">
                Set the class definition                
            </javadoc>
            <method name="setDefinition" type="void" line="141">
                <params>
                    <param name="definition" type="ClassDefinition"/>
                    <param name="status" type="int"/>
                </params>
                <scope line="142"/>
            </method>
            <javadoc line="148">
                Equality                
            </javadoc>
            <method name="equals" type="boolean" line="151">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="152"/>
            </method>
            <javadoc line="157">
                toString                
            </javadoc>
            <method name="toString" type="String" line="160">
                <declaration name="name" type="String" line="161"/>
                <declaration name="type" type="String" line="162"/>
                <declaration name="nested" type="String" line="163"/>
                <scope line="164">
                    <scope line="165"/>
                    <scope line="168"/>
                    <scope line="171">
                        <scope line="173">
                            <scope line="175"/>
                        </scope>
                    </scope>
                </scope>
            </method>
        </class>
    </source>