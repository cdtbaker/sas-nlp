<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.java">
        <import package="java.util.Hashtable"/>
        <import package="java.util.Vector"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.List"/>
        <import package="java.util.Collections"/>
        <import package="java.io.IOException"/>
        <class name="Imports" line="8">
            <implements interface="Constants"/>
            <javadoc line="8">
                This class describes the classes and packages imported
                  from a source file. A Hashtable called bindings is maintained
                  to quickly map symbol names to classes. This table is flushed
                  everytime a new import is added.
                  A class name is resolved as follows:
                  - if it is a qualified name then return the corresponding class
                  - if the name corresponds to an individually imported class then return that class
                  - check if the class is defined in any of the imported packages,
                  if it is then return it, make sure it is defined in only one package
                  - assume that the class is defined in the current package
                  WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <declaration name="currentPackage" type="Identifier" line="24"/>
            <javadoc line="24">
                The current package, which is implicitly imported,
                  and has precedence over other imported packages.                
            </javadoc>
            <declaration name="currentPackageWhere" type="long" line="29"/>
            <javadoc line="29">
                A location for the current package declaration.  Used to
                  report errors against the current package.                
            </javadoc>
            <declaration name="classes" type="Hashtable" line="34"/>
            <javadoc line="34">
                The imported classes, including memoized imports from packages.                
            </javadoc>
            <declaration name="packages" type="Vector" line="38"/>
            <javadoc line="38">
                The imported package identifiers.  This will not contain duplicate
                  imports for the same package.  It will also not contain the
                  current package.                
            </javadoc>
            <declaration name="singles" type="Vector" line="44"/>
            <javadoc line="44">
                The (originally) imported classes.
                  A vector of IdentifierToken.                
            </javadoc>
            <declaration name="checked" type="int" line="49"/>
            <javadoc line="49">
                Are the import names checked yet?                
            </javadoc>
            <javadoc line="53">
                Constructor, always import java.lang.                
            </javadoc>
            <method name="Imports" type="constructor" line="56">
                <params>
                    <param name="env" type="Environment"/>
                </params>
            </method>
            <javadoc line="59">
                Check the names of the imports.                
            </javadoc>
            <method name="resolve" type="void" line="62">
                <params>
                    <param name="env" type="Environment"/>
                </params>
                <scope line="63"/>
                <declaration name="resolvedPackages" type="Vector" line="67"/>
                <scope line="68">
                    <declaration name="t" type="IdentifierToken" line="69"/>
                    <declaration name="nm" type="Identifier" line="70"/>
                    <declaration name="where" type="long" line="71"/>
                    <scope line="72"/>
                    <scope line="76">
                        <declaration name="rnm" type="Identifier" line="77"/>
                        <scope line="78">
                            <scope line="79"/>
                        </scope>
                        <scope line="85"/>
                        <scope line="88"/>
                    </scope>
                    <scope line="93"/>
                </scope>
                <scope line="98">
                    <declaration name="t" type="IdentifierToken" line="99"/>
                    <declaration name="nm" type="Identifier" line="100"/>
                    <declaration name="where" type="long" line="101"/>
                    <declaration name="pkg" type="Identifier" line="102"/>
                    <scope line="104"/>
                    <declaration name="snm" type="Identifier" line="107"/>
                    <declaration name="className" type="Identifier" line="108"/>
                    <scope line="109">
                        <declaration name="f1" type="Identifier" line="110"/>
                        <declaration name="f2" type="Identifier" line="111"/>
                        <scope line="112"/>
                    </scope>
                    <scope line="117">
                        <declaration name="decl" type="ClassDeclaration" line="118"/>
                        <declaration name="def" type="ClassDefinition" line="119"/>
                        <declaration name="importedPackage" type="Identifier" line="120"/>
                        <scope line="121">
                            <scope line="122"/>
                        </scope>
                    </scope>
                    <scope line="128"/>
                    <scope line="131"/>
                </scope>
            </method>
            <javadoc line="137">
                Lookup a class, given the current set of imports,
                  AmbiguousClass exception is thrown if the name can be
                  resolved in more than one way. A ClassNotFound exception
                  is thrown if the class is not found in the imported classes
                  and packages.                
            </javadoc>
            <method name="resolve" type="Identifier" line="144">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="nm" type="Identifier"/>
                </params>
                <scope line="146"/>
                <scope line="149"/>
                <scope line="153"/>
                <declaration name="className" type="Identifier" line="157"/>
                <scope line="158"/>
                <declaration name="id" type="Identifier" line="162"/>
                <scope line="163"/>
                <scope line="166">
                    <declaration name="e" type="Enumeration" line="167"/>
                    <scope line="168">
                        <declaration name="t" type="IdentifierToken" line="169"/>
                        <scope line="171">
                            <scope line="172"/>
                            <scope line="175"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="182"/>
            </method>
            <javadoc line="190">
                Check to see if &apos;id&apos; names an importable class in `env&apos;.
                  This method was made public and static for utility.                
            </javadoc>
            <method name="importable" type="boolean" line="194">
                <params>
                    <param name="id" type="Identifier"/>
                    <param name="env" type="Environment"/>
                </params>
                <scope line="195"/>
                <scope line="198"/>
                <scope line="201">
                    <scope line="202">
                        <declaration name="decl" type="ClassDeclaration" line="203"/>
                        <declaration name="c" type="ClassDefinition" line="204"/>
                    </scope>
                    <scope line="207"/>
                </scope>
            </method>
            <javadoc line="212">
                Suppose a resolve() call has failed.
                  This routine can be used silently to give a reasonable
                  default qualification (the current package) to the identifier.
                  This decision is recorded for future reference.                
            </javadoc>
            <method name="forceResolve" type="Identifier" line="218">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="nm" type="Identifier"/>
                </params>
                <declaration name="className" type="Identifier" line="220"/>
                <scope line="221"/>
            </method>
            <javadoc line="228">
                Add a class import                
            </javadoc>
            <method name="addClass" type="void" line="231">
                <params>
                    <param name="t" type="IdentifierToken"/>
                </params>
            </method>
            <method name="addClass" type="void" line="234">
                <params>
                    <param name="nm" type="Identifier"/>
                </params>
            </method>
            <javadoc line="237">
                Add a package import, or perhaps an inner class scope.
                  Ignore any duplicate imports.                
            </javadoc>
            <method name="addPackage" type="void" line="241">
                <params>
                    <param name="t" type="IdentifierToken"/>
                </params>
                <declaration name="name" type="Identifier" line="242"/>
                <scope line="243"/>
                <declaration name="size" type="int" line="246"/>
                <scope line="247">
                    <scope line="248"/>
                </scope>
            </method>
            <method name="addPackage" type="void" line="254">
                <params>
                    <param name="id" type="Identifier"/>
                </params>
            </method>
            <javadoc line="257">
                Specify the current package with an IdentifierToken.                
            </javadoc>
            <method name="setCurrentPackage" type="void" line="260">
                <params>
                    <param name="t" type="IdentifierToken"/>
                </params>
            </method>
            <javadoc line="264">
                Specify the current package                
            </javadoc>
            <method name="setCurrentPackage" type="void" line="267">
                <params>
                    <param name="id" type="Identifier"/>
                </params>
            </method>
            <javadoc line="270">
                Report the current package                
            </javadoc>
            <method name="getCurrentPackage" type="Identifier" line="273"/>
            <javadoc line="276">
                Return an unmodifiable list of IdentifierToken representing
                  packages specified as imports.                
            </javadoc>
            <method name="getImportedPackages" type="List" line="280"/>
            <javadoc line="283">
                Return an unmodifiable list of IdentifierToken representing
                  classes specified as imports.                
            </javadoc>
            <method name="getImportedClasses" type="List" line="287"/>
            <javadoc line="290">
                Extend an environment with my resolve() method.                
            </javadoc>
            <method name="newEnvironment" type="Environment" line="293">
                <params>
                    <param name="env" type="Environment"/>
                </params>
            </method>
        </class>
        <class name="ImportEnvironment" line="297">
            <extends class="Environment"/>
            <declaration name="imports" type="Imports" line="298"/>
            <method name="ImportEnvironment" type="constructor" line="299">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="imports" type="Imports"/>
                </params>
            </method>
            <method name="resolve" type="Identifier" line="303">
                <params>
                    <param name="nm" type="Identifier"/>
                </params>
            </method>
            <method name="getImports" type="Imports" line="306"/>
        </class>
    </source>