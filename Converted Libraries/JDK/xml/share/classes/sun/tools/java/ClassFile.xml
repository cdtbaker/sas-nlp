<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.java">
        <import package="java.io.File"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.FileInputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.util.zip"/>
        <class name="ClassFile" line="7">
            <javadoc line="7">
                This class is used to represent a file loaded from the class path, and
                  can either be a regular file or a zip file entry.
                  WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <declaration name="file" type="File" line="15"/>
            <declaration name="zipFile" type="ZipFile" line="16"/>
            <declaration name="zipEntry" type="ZipEntry" line="17"/>
            <javadoc line="18">
                Constructor for instance representing a regular file                
            </javadoc>
            <method name="ClassFile" type="constructor" line="21">
                <params>
                    <param name="file" type="File"/>
                </params>
            </method>
            <javadoc line="24">
                Constructor for instance representing a zip file entry                
            </javadoc>
            <method name="ClassFile" type="constructor" line="27">
                <params>
                    <param name="zf" type="ZipFile"/>
                    <param name="ze" type="ZipEntry"/>
                </params>
            </method>
            <javadoc line="31">
                Returns true if this is zip file entry                
            </javadoc>
            <method name="isZipped" type="boolean" line="34"/>
            <javadoc line="37">
                Returns input stream to either regular file or zip file entry                
            </javadoc>
            <method name="getInputStream" type="InputStream" line="40">
                <scope line="41"/>
                <scope line="44">
                    <scope line="45"/>
                    <scope line="48"/>
                </scope>
            </method>
            <javadoc line="53">
                Returns true if file exists.                
            </javadoc>
            <method name="exists" type="boolean" line="56"/>
            <javadoc line="59">
                Returns true if this is a directory.                
            </javadoc>
            <method name="isDirectory" type="boolean" line="62"/>
            <javadoc line="65">
                Return last modification time                
            </javadoc>
            <method name="lastModified" type="long" line="68"/>
            <javadoc line="71">
                Get file path. The path for a zip file entry will also include
                  the zip file name.                
            </javadoc>
            <method name="getPath" type="String" line="75">
                <scope line="76"/>
                <scope line="79"/>
            </method>
            <javadoc line="83">
                Get name of file entry excluding directory name                
            </javadoc>
            <method name="getName" type="String" line="86"/>
            <javadoc line="89">
                Get absolute name of file entry                
            </javadoc>
            <method name="getAbsoluteName" type="String" line="92">
                <declaration name="absoluteName" type="String" line="93"/>
                <scope line="94">
                    <scope line="95"/>
                    <scope line="98"/>
                </scope>
                <scope line="102"/>
            </method>
            <javadoc line="107">
                Get length of file                
            </javadoc>
            <method name="length" type="long" line="110"/>
            <method name="toString" type="String" line="113"/>
        </class>
    </source>