<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.java">
        <import package="sun.tools.tree"/>
        <import package="java.util.Vector"/>
        <import package="java.util.Hashtable"/>
        <import package="java.io.IOException"/>
        <import package="java.io.DataInputStream"/>
        <import package="java.io.ByteArrayInputStream"/>
        <class name="BinaryMember" line="35">
            <extends class="MemberDefinition"/>
            <comment line="252">
                Add an attribute to a field                
            </comment>
            <javadoc line="35">
                This class represents a binary member
                  WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <declaration name="value" type="Expression" line="44"/>
            <declaration name="atts" type="BinaryAttribute" line="45"/>
            <javadoc line="47">
                Constructor                
            </javadoc>
            <method name="BinaryMember" type="constructor" line="51">
                <params>
                    <param name="clazz" type="ClassDefinition"/>
                    <param name="modifiers" type="int"/>
                    <param name="type" type="Type"/>
                    <param name="name" type="Identifier"/>
                    <param name="atts" type="BinaryAttribute"/>
                </params>
                <comment line="56">
                    Was it compiled as deprecated?                    
                </comment>
                <comment line="61">
                    Was it synthesized by the compiler?                    
                </comment>
                <scope line="56"/>
                <scope line="61"/>
            </method>
            <javadoc line="66">
                Constructor for an inner class.                
            </javadoc>
            <method name="BinaryMember" type="constructor" line="69">
                <params>
                    <param name="innerClass" type="ClassDefinition"/>
                </params>
            </method>
            <javadoc line="73">
                Inline allowed (currently only allowed for the constructor of Object).                
            </javadoc>
            <method name="isInlineable" type="boolean" line="76">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="fromFinal" type="boolean"/>
                </params>
                <comment line="78">
                    It is possible for &apos;getSuperClass()&apos; to return null due to error
                     recovery from cyclic inheritace.  Can this cause a problem here?                    
                </comment>
            </method>
            <javadoc line="82">
                Get arguments                
            </javadoc>
            <method name="getArguments" type="Vector" line="85">
                <scope line="86">
                    <declaration name="v" type="Vector" line="87"/>
                </scope>
            </method>
            <javadoc line="95">
                Get exceptions                
            </javadoc>
            <method name="getExceptions" type="ClassDeclaration[]" line="98">
                <params>
                    <param name="env" type="Environment"/>
                </params>
                <comment line="111">
                    JVM 4.7.5 Exceptions_attribute.number_of_exceptions                    
                </comment>
                <comment line="115">
                    JVM 4.7.5 Exceptions_attribute.exception_index_table[]                    
                </comment>
                <scope line="99"/>
                <declaration name="data" type="byte" line="102"/>
                <scope line="103"/>
                <scope line="107">
                    <declaration name="cpool" type="BinaryConstantPool" line="108"/>
                    <declaration name="in" type="DataInputStream" line="109"/>
                    <declaration name="n" type="int" line="111"/>
                    <scope line="113"/>
                </scope>
                <scope line="118"/>
            </method>
            <javadoc line="123">
                Get documentation                
            </javadoc>
            <method name="getDocumentation" type="String" line="126">
                <scope line="127"/>
                <declaration name="data" type="byte" line="130"/>
                <scope line="131"/>
                <scope line="134"/>
                <scope line="136"/>
            </method>
            <declaration name="isConstantCache" type="boolean" line="141"/>
            <javadoc line="141">
                Check if constant:  Will it inline away to a constant?
                  This override is needed to solve bug 4128266.  It is also
                  integral to the solution of 4119776.                
            </javadoc>
            <declaration name="isConstantCached" type="boolean" line="147"/>
            <method name="isConstant" type="boolean" line="148">
                <scope line="149"/>
            </method>
            <javadoc line="158">
                Get the value                
            </javadoc>
            <method name="getValue" type="Node" line="161">
                <params>
                    <param name="env" type="Environment"/>
                </params>
                <comment line="179">
                    JVM 4.7.3 ConstantValue.constantvalue_index                    
                </comment>
                <scope line="162"/>
                <scope line="165"/>
                <scope line="168"/>
                <declaration name="data" type="byte" line="171"/>
                <scope line="172"/>
                <scope line="176">
                    <declaration name="cpool" type="BinaryConstantPool" line="177"/>
                    <declaration name="obj" type="Object" line="179"/>
                </scope>
                <scope line="204"/>
            </method>
            <javadoc line="209">
                Get a field attribute                
            </javadoc>
            <method name="getAttribute" type="byte[]" line="212">
                <params>
                    <param name="name" type="Identifier"/>
                </params>
                <scope line="213">
                    <scope line="214"/>
                </scope>
            </method>
            <method name="deleteAttribute" type="boolean" line="221">
                <params>
                    <param name="name" type="Identifier"/>
                </params>
                <declaration name="walker" type="BinaryAttribute" line="222"/>
                <declaration name="succeed" type="boolean" line="224"/>
                <scope line="226"/>
                <scope line="230">
                    <scope line="232">
                        <scope line="233"/>
                    </scope>
                </scope>
                <scope line="240">
                    <scope line="241"/>
                </scope>
            </method>
            <method name="addAttribute" type="void" line="254">
                <params>
                    <param name="name" type="Identifier"/>
                    <param name="data" type="byte"/>
                    <param name="env" type="Environment"/>
                </params>
                <comment line="257">
                    Make sure that the new attribute is in the constant pool                    
                </comment>
            </method>
        </class>
    </source>