<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.java">
        <import package="java.util.Enumeration"/>
        <import package="java.util.Hashtable"/>
        <import package="java.io.File"/>
        <import package="java.io.IOException"/>
        <import package="java.util.zip"/>
        <class name="ClassPath" line="7">
            <javadoc line="7">
                This class is used to represent a class path, which can contain both
                  directories and zip files.
                  WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <declaration name="dirSeparator" type="char" line="15"/>
            <declaration name="pathstr" type="String" line="16"/>
            <javadoc line="16">
                The original class path string                
            </javadoc>
            <declaration name="path" type="ClassPathEntry[]" line="20"/>
            <javadoc line="20">
                List of class path entries                
            </javadoc>
            <javadoc line="24">
                Build a class path from the specified path string                
            </javadoc>
            <method name="ClassPath" type="constructor" line="27">
                <params>
                    <param name="pathstr" type="String"/>
                </params>
            </method>
            <javadoc line="30">
                Build a class path from the specified array of class path
                  element strings.  This constructor, and the corresponding
                  &quot;init&quot; method, were added as part of the fix for 6473331, which
                  adds support for Class-Path manifest entries in JAR files to
                  rmic.  It is conceivable that the value of a Class-Path
                  manifest entry will contain a path separator, which would cause
                  incorrect behavior if the expanded path were passed to the
                  previous constructor as a single path-separator-delimited
                  string; use of this constructor avoids that problem.                
            </javadoc>
            <method name="ClassPath" type="constructor" line="41">
                <params>
                    <param name="patharray" type="String[]"/>
                </params>
            </method>
            <javadoc line="44">
                Build a default class path from the path strings specified by
                  the properties sun.boot.class.path and env.class.path, in that
                  order.                
            </javadoc>
            <method name="ClassPath" type="constructor" line="49">
                <declaration name="syscp" type="String" line="50"/>
                <declaration name="envcp" type="String" line="51"/>
                <declaration name="cp" type="String" line="53"/>
            </method>
            <method name="init" type="void" line="56">
                <params>
                    <param name="pathstr" type="String"/>
                </params>
                <declaration name="i" type="int" line="57"/>
                <scope line="59"/>
                <scope line="63"/>
                <declaration name="path" type="ClassPathEntry[]" line="67"/>
                <declaration name="len" type="int" line="68"/>
                <scope line="69">
                    <scope line="70"/>
                    <scope line="73"/>
                    <scope line="77">
                        <declaration name="file" type="File" line="78"/>
                        <scope line="79">
                            <scope line="80">
                                <declaration name="zip" type="ZipFile" line="81"/>
                            </scope>
                            <scope line="85"/>
                            <scope line="87"/>
                        </scope>
                        <scope line="90"/>
                    </scope>
                </scope>
            </method>
            <method name="init" type="void" line="99">
                <params>
                    <param name="patharray" type="String[]"/>
                </params>
                <scope line="100"/>
                <scope line="103">
                    <declaration name="sb" type="StringBuilder" line="104"/>
                    <scope line="105"/>
                </scope>
                <declaration name="path" type="ClassPathEntry[]" line="111"/>
                <declaration name="n" type="int" line="112"/>
                <scope line="113">
                    <declaration name="file" type="File" line="114"/>
                    <scope line="115">
                        <scope line="116">
                            <declaration name="zip" type="ZipFile" line="117"/>
                        </scope>
                        <scope line="121"/>
                        <scope line="123"/>
                    </scope>
                    <scope line="126"/>
                </scope>
            </method>
            <javadoc line="134">
                Find the specified directory in the class path                
            </javadoc>
            <method name="getDirectory" type="ClassFile" line="137">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="140">
                Load the specified file from the class path                
            </javadoc>
            <method name="getFile" type="ClassFile" line="143">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <declaration name="fileSeparatorChar" type="String" line="146"/>
            <method name="getFile" type="ClassFile" line="147">
                <params>
                    <param name="name" type="String"/>
                    <param name="isDirectory" type="boolean"/>
                </params>
                <declaration name="subdir" type="String" line="148"/>
                <declaration name="basename" type="String" line="149"/>
                <scope line="150">
                    <declaration name="i" type="int" line="151"/>
                </scope>
                <scope line="155"/>
                <scope line="159">
                    <scope line="160">
                        <declaration name="newname" type="String" line="161"/>
                        <declaration name="entry" type="ZipEntry" line="162"/>
                        <scope line="163"/>
                    </scope>
                    <scope line="167">
                        <declaration name="file" type="File" line="168"/>
                        <declaration name="list" type="String" line="169"/>
                        <scope line="170">
                            <scope line="171"/>
                        </scope>
                        <scope line="175">
                            <scope line="176">
                                <scope line="177"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="186">
                Returns list of files given a package name and extension.                
            </javadoc>
            <method name="getFiles" type="Enumeration" line="189">
                <params>
                    <param name="pkg" type="String"/>
                    <param name="ext" type="String"/>
                </params>
                <declaration name="files" type="Hashtable" line="190"/>
                <scope line="191">
                    <scope line="192">
                        <declaration name="e" type="Enumeration" line="193"/>
                        <scope line="194">
                            <declaration name="entry" type="ZipEntry" line="195"/>
                            <declaration name="name" type="String" line="196"/>
                            <scope line="198"/>
                        </scope>
                    </scope>
                    <scope line="203">
                        <declaration name="list" type="String[]" line="204"/>
                        <scope line="205">
                            <declaration name="name" type="String" line="206"/>
                            <scope line="207">
                                <declaration name="file" type="File" line="209"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="217">
                Release resources.                
            </javadoc>
            <method name="close" type="void" line="220">
                <scope line="221">
                    <scope line="222"/>
                </scope>
            </method>
            <javadoc line="227">
                Returns original class path string                
            </javadoc>
            <method name="toString" type="String" line="230"/>
        </class>
        <class name="ClassPathEntry" line="234">
            <javadoc line="234">
                A class path entry, which can either be a directory or an open zip file.                
            </javadoc>
            <declaration name="dir" type="File" line="238"/>
            <declaration name="zip" type="ZipFile" line="239"/>
            <declaration name="subdirs" type="Hashtable" line="240"/>
            <method name="getFiles" type="String[]" line="241">
                <params>
                    <param name="subdir" type="String"/>
                </params>
                <declaration name="files" type="String" line="242"/>
                <scope line="243">
                    <declaration name="sd" type="File" line="244"/>
                    <scope line="245">
                        <scope line="247"/>
                        <scope line="250">
                            <declaration name="nonEmpty" type="String" line="251"/>
                        </scope>
                    </scope>
                    <scope line="255"/>
                </scope>
            </method>
        </class>
    </source>