<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.util">
        <import package="sun.tools.java"/>
        <class name="ModifierFilter" line="3">
            <extends class="java.lang.reflect.Modifier"/>
            <javadoc line="3">
                A class whose instances are filters over Modifier bits.
                  Filtering is done by returning boolean values.
                  Classes, methods and fields can be filtered, or filtering
                  can be done directly on modifier bits.
                  WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
                <see>
                    java.lang.reflect.Modifier                    
                </see>
                <author>
                    Robert Field                    
                </author>
            </javadoc>
            <declaration name="PACKAGE" type="long" line="15"/>
            <javadoc line="15">
                Package private access.
                  A &quot;pseudo-&quot; modifier bit that can be used in the
                  constructors of this class to specify package private
                  access. This is needed since there is no Modifier.PACKAGE.                
            </javadoc>
            <declaration name="ALL_ACCESS" type="long" line="22"/>
            <javadoc line="22">
                All access modifiers.
                  A short-hand set of modifier bits that can be used in the
                  constructors of this class to specify all access modifiers,
                  Same as PRIVATE | PROTECTED | PUBLIC | PACKAGE.                
            </javadoc>
            <declaration name="oneOf" type="long" line="29"/>
            <declaration name="must" type="long" line="30"/>
            <declaration name="cannot" type="long" line="31"/>
            <declaration name="ACCESS_BITS" type="int" line="32"/>
            <javadoc line="33">
                Constructor - Specify a filter.                
                <param>
                    oneOf   If zero, everything passes the filter.
                      If non-zero, at least one of the specified
                      bits must be on in the modifier bits to
                      pass the filter.                    
                </param>
            </javadoc>
            <method name="ModifierFilter" type="constructor" line="40">
                <params>
                    <param name="oneOf" type="long"/>
                </params>
            </method>
            <javadoc line="43">
                Constructor - Specify a filter.
                  For example, the filter below  will only pass synchronized
                  methods that are private or package private access and are
                  not native or static.
                  &lt;pre&gt;
                  ModifierFilter(  Modifier.PRIVATE | ModifierFilter.PACKAGE,
                  Modifier.SYNCHRONIZED,
                  Modifier.NATIVE | Modifier.STATIC)
                  &lt;/pre&gt;&lt;p&gt;
                  Each of the three arguments must either be
                  zero or the or&apos;ed combination of the bits specified in the
                  class Modifier or this class. During filtering, these values
                  are compared against the modifier bits as follows:                
                <param>
                    oneOf   If zero, ignore this argument.
                      If non-zero, at least one of the bits must be on.                    
                </param>
                <param>
                    must    All bits specified must be on.                    
                </param>
                <param>
                    cannot  None of the bits specified can be on.                    
                </param>
            </javadoc>
            <method name="ModifierFilter" type="constructor" line="62">
                <params>
                    <param name="oneOf" type="long"/>
                    <param name="must" type="long"/>
                    <param name="cannot" type="long"/>
                </params>
            </method>
            <javadoc line="67">
                Filter on modifier bits.                
                <param>
                    modifierBits    Bits as specified in the Modifier class                    
                </param>
                <return>
                    Whether the modifierBits pass this filter.                    
                </return>
            </javadoc>
            <method name="checkModifier" type="boolean" line="72">
                <params>
                    <param name="modifierBits" type="int"/>
                </params>
                <declaration name="fmod" type="long" line="73"/>
            </method>
            <javadoc line="76">
                Filter a MemberDefinition.                
                <param>
                    field           A MemberDefinition                    
                </param>
                <return>
                    Whether the modifier of the field
                      passes this filter.                    
                </return>
                <see>
                    sun.tools.MemberDefinition                    
                </see>
            </javadoc>
            <method name="checkMember" type="boolean" line="83">
                <params>
                    <param name="field" type="MemberDefinition"/>
                </params>
            </method>
            <javadoc line="86">
                Filter a ClassDefinition.                
                <param>
                    cdef            A ClassDefinition                    
                </param>
                <return>
                    Whether the modifier of the class
                      passes this filter.                    
                </return>
                <see>
                    sun.tools.ClassDefinition                    
                </see>
            </javadoc>
            <method name="checkClass" type="boolean" line="93">
                <params>
                    <param name="cdef" type="ClassDefinition"/>
                </params>
            </method>
        </class>
    </source>