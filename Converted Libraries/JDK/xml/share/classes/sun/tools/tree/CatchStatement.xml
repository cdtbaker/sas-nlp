<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.tree">
        <import package="sun.tools.java"/>
        <import package="sun.tools.asm.Assembler"/>
        <import package="sun.tools.asm.LocalVariable"/>
        <import package="sun.tools.asm.Label"/>
        <import package="java.io.PrintStream"/>
        <import package="java.util.Hashtable"/>
        <class name="CatchStatement" line="35">
            <extends class="Statement"/>
            <javadoc line="35">
                WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <declaration name="mod" type="int" line="42"/>
            <declaration name="texpr" type="Expression" line="43"/>
            <declaration name="id" type="Identifier" line="44"/>
            <declaration name="body" type="Statement" line="45"/>
            <declaration name="field" type="LocalMember" line="46"/>
            <javadoc line="48">
                Constructor                
            </javadoc>
            <method name="CatchStatement" type="constructor" line="51">
                <params>
                    <param name="where" type="long"/>
                    <param name="texpr" type="Expression"/>
                    <param name="id" type="IdentifierToken"/>
                    <param name="body" type="Statement"/>
                </params>
            </method>
            <javadoc line="58">
                @deprecated                
            </javadoc>
            <method name="CatchStatement" type="constructor" line="60">
                <params>
                    <param name="where" type="long"/>
                    <param name="texpr" type="Expression"/>
                    <param name="id" type="Identifier"/>
                    <param name="body" type="Statement"/>
                </params>
            </method>
            <javadoc line="67">
                Check statement                
            </javadoc>
            <method name="check" type="Vset" line="70">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                </params>
                <comment line="82">
                    error message printed out elsewhere                    
                </comment>
                <declaration name="type" type="Type" line="73"/>
                <scope line="75">
                    <scope line="76"/>
                    <scope line="80"/>
                    <scope line="82"/>
                    <scope line="84">
                        <declaration name="def" type="ClassDefinition" line="85"/>
                        <scope line="87"/>
                    </scope>
                </scope>
                <scope line="97"/>
            </method>
            <javadoc line="103">
                Inline                
            </javadoc>
            <method name="inline" type="Statement" line="106">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <scope line="108"/>
                <scope line="111"/>
            </method>
            <javadoc line="117">
                Create a copy of the statement for method inlining                
            </javadoc>
            <method name="copyInline" type="Statement" line="120">
                <params>
                    <param name="ctx" type="Context"/>
                    <param name="valNeeded" type="boolean"/>
                </params>
                <declaration name="s" type="CatchStatement" line="121"/>
                <scope line="122"/>
                <scope line="125"/>
            </method>
            <javadoc line="131">
                Compute cost of inlining this statement                
            </javadoc>
            <method name="costInline" type="int" line="134">
                <params>
                    <param name="thresh" type="int"/>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <declaration name="cost" type="int" line="135"/>
                <scope line="136"/>
            </method>
            <javadoc line="142">
                Code                
            </javadoc>
            <method name="code" type="void" line="145">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
                <comment line="157">
                    asm.add(newctx.breakLabel);                    
                </comment>
                <declaration name="newctx" type="CodeContext" line="146"/>
                <scope line="147"/>
                <scope line="150"/>
                <scope line="153"/>
            </method>
            <javadoc line="159">
                Print                
            </javadoc>
            <method name="print" type="void" line="162">
                <params>
                    <param name="out" type="PrintStream"/>
                    <param name="indent" type="int"/>
                </params>
                <scope line="167"/>
                <scope line="169"/>
            </method>
        </class>
    </source>