<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.tree">
        <import package="sun.tools.java"/>
        <import package="sun.tools.asm.Assembler"/>
        <import package="sun.tools.asm.Label"/>
        <import package="java.io.PrintStream"/>
        <import package="java.util.Hashtable"/>
        <class name="BreakStatement" line="34">
            <extends class="Statement"/>
            <javadoc line="34">
                WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <declaration name="lbl" type="Identifier" line="41"/>
            <javadoc line="43">
                Constructor                
            </javadoc>
            <method name="BreakStatement" type="constructor" line="46">
                <params>
                    <param name="where" type="long"/>
                    <param name="lbl" type="Identifier"/>
                </params>
            </method>
            <javadoc line="51">
                Check statement                
            </javadoc>
            <method name="check" type="Vset" line="54">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                </params>
                <declaration name="destctx" type="CheckContext" line="57"/>
                <scope line="58">
                    <scope line="59"/>
                </scope>
                <scope line="63">
                    <scope line="64"/>
                    <scope line="66"/>
                </scope>
                <declaration name="exitctx" type="CheckContext" line="70"/>
                <scope line="71"/>
            </method>
            <javadoc line="77">
                The cost of inlining this statement                
            </javadoc>
            <method name="costInline" type="int" line="80">
                <params>
                    <param name="thresh" type="int"/>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <javadoc line="84">
                Code                
            </javadoc>
            <method name="code" type="void" line="87">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
                <declaration name="newctx" type="CodeContext" line="88"/>
                <declaration name="destctx" type="CodeContext" line="89"/>
            </method>
            <javadoc line="95">
                Print                
            </javadoc>
            <method name="print" type="void" line="98">
                <params>
                    <param name="out" type="PrintStream"/>
                    <param name="indent" type="int"/>
                </params>
                <scope line="101"/>
            </method>
        </class>
    </source>