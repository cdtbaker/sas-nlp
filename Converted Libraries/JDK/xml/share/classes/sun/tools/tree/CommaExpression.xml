<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.tree">
        <import package="sun.tools.java"/>
        <import package="sun.tools.asm.Assembler"/>
        <import package="java.util.Hashtable"/>
        <class name="CommaExpression" line="32">
            <extends class="BinaryExpression"/>
            <javadoc line="32">
                WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <javadoc line="39">
                constructor                
            </javadoc>
            <method name="CommaExpression" type="constructor" line="42">
                <params>
                    <param name="where" type="long"/>
                    <param name="left" type="Expression"/>
                    <param name="right" type="Expression"/>
                </params>
            </method>
            <javadoc line="46">
                Check void expression                
            </javadoc>
            <method name="check" type="Vset" line="49">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                </params>
            </method>
            <javadoc line="55">
                Select the type                
            </javadoc>
            <method name="selectType" type="void" line="58">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="tm" type="int"/>
                </params>
            </method>
            <javadoc line="62">
                Simplify                
            </javadoc>
            <method name="simplify" type="Expression" line="65">
                <scope line="66"/>
                <scope line="69"/>
            </method>
            <javadoc line="75">
                Inline                
            </javadoc>
            <method name="inline" type="Expression" line="78">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <scope line="79"/>
                <scope line="82"/>
            </method>
            <method name="inlineValue" type="Expression" line="87">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <scope line="88"/>
                <scope line="91"/>
            </method>
            <javadoc line="97">
                Code                
            </javadoc>
            <method name="codeLValue" type="int" line="100">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
                <comment line="103">
                    throw an appropriate error                    
                </comment>
                <comment line="106">
                    Fully code the left-hand side.  Do the LValue part of the
                     right-hand side now.  The remainder will be done by codeLoad or
                     codeStore                    
                </comment>
                <scope line="101"/>
                <scope line="104">
                    <scope line="108"/>
                </scope>
            </method>
            <method name="codeLoad" type="void" line="115">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
                <comment line="117">
                    The left-hand part has already been handled by codeLValue.                    
                </comment>
                <comment line="120">
                    throw an appropriate error                    
                </comment>
                <scope line="118"/>
                <scope line="121"/>
            </method>
            <method name="codeStore" type="void" line="126">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
                <comment line="128">
                    The left-hand part has already been handled by codeLValue.                    
                </comment>
                <comment line="130">
                    throw an appropriate error                    
                </comment>
                <scope line="128"/>
                <scope line="131"/>
            </method>
            <method name="codeValue" type="void" line="136">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
                <scope line="137"/>
            </method>
            <method name="code" type="void" line="142">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
                <scope line="143"/>
                <scope line="146"/>
            </method>
        </class>
    </source>