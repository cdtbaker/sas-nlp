<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.tree">
        <import package="sun.tools.java"/>
        <import package="sun.tools.asm.Assembler"/>
        <import package="java.io.PrintStream"/>
        <import package="java.util.Hashtable"/>
        <class name="ThisExpression" line="33">
            <extends class="Expression"/>
            <comment line="120">
                A &apos;ThisExpression&apos; node can never appear on the LHS of an assignment in a correct
                 program, but handle this case anyhow to provide a safe error recovery.                
            </comment>
            <javadoc line="33">
                WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <declaration name="field" type="LocalMember" line="40"/>
            <declaration name="implementation" type="Expression" line="41"/>
            <declaration name="outerArg" type="Expression" line="42"/>
            <javadoc line="44">
                Constructor                
            </javadoc>
            <method name="ThisExpression" type="constructor" line="47">
                <params>
                    <param name="where" type="long"/>
                </params>
            </method>
            <method name="ThisExpression" type="constructor" line="50">
                <params>
                    <param name="op" type="int"/>
                    <param name="where" type="long"/>
                </params>
            </method>
            <method name="ThisExpression" type="constructor" line="53">
                <params>
                    <param name="where" type="long"/>
                    <param name="field" type="LocalMember"/>
                </params>
            </method>
            <method name="ThisExpression" type="constructor" line="58">
                <params>
                    <param name="where" type="long"/>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <javadoc line="64">
                Constructor for &quot;x.this()&quot;                
            </javadoc>
            <method name="ThisExpression" type="constructor" line="67">
                <params>
                    <param name="where" type="long"/>
                    <param name="outerArg" type="Expression"/>
                </params>
            </method>
            <method name="getImplementation" type="Expression" line="72"/>
            <javadoc line="78">
                From the &apos;this&apos; in an expression of the form outer.this(...),
                  or the &apos;super&apos; in an expression of the form outer.super(...),
                  return the &quot;outer&quot; expression, or null if there is none.                
            </javadoc>
            <method name="getOuterArg" type="Expression" line="83"/>
            <javadoc line="87">
                Check expression                
            </javadoc>
            <method name="checkValue" type="Vset" line="90">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                </params>
                <comment line="102">
                    get a &quot;this$C&quot; copy via the current object                    
                </comment>
                <scope line="91"/>
                <scope line="96"/>
                <scope line="100"/>
                <scope line="104"/>
                <scope line="107"/>
                <scope line="109"/>
            </method>
            <method name="isNonNull" type="boolean" line="115"/>
            <method name="getAssigner" type="FieldUpdater" line="122">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <method name="getUpdater" type="FieldUpdater" line="126">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <javadoc line="130">
                Inline                
            </javadoc>
            <method name="inlineValue" type="Expression" line="133">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <comment line="139">
                    System.out.println(&quot;INLINE = &quot;+ e + &quot;, THIS&quot;);                    
                </comment>
                <comment line="142">
                    in case op==SUPER                    
                </comment>
                <scope line="136">
                    <declaration name="e" type="Expression" line="137"/>
                    <scope line="139"/>
                </scope>
            </method>
            <javadoc line="148">
                Create a copy of the expression for method inlining                
            </javadoc>
            <method name="copyInline" type="Expression" line="151">
                <params>
                    <param name="ctx" type="Context"/>
                </params>
                <comment line="157">
                    The expression is copied into the context of a method                    
                </comment>
                <declaration name="e" type="ThisExpression" line="154"/>
                <scope line="155"/>
                <scope line="159"/>
                <scope line="162"/>
            </method>
            <javadoc line="168">
                Code                
            </javadoc>
            <method name="codeValue" type="void" line="171">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
            </method>
            <javadoc line="175">
                Print                
            </javadoc>
            <method name="print" type="void" line="178">
                <params>
                    <param name="out" type="PrintStream"/>
                </params>
                <scope line="179"/>
                <declaration name="pfx" type="String" line="184"/>
            </method>
        </class>
    </source>