<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.tree">
        <import package="sun.tools.java"/>
        <import package="java.io.PrintStream"/>
        <import package="sun.tools.asm.Assembler"/>
        <import package="java.util.Hashtable"/>
        <class name="DeclarationStatement" line="33">
            <extends class="Statement"/>
            <javadoc line="33">
                WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <declaration name="mod" type="int" line="40"/>
            <declaration name="type" type="Expression" line="41"/>
            <declaration name="args" type="Statement" line="42"/>
            <javadoc line="44">
                Constructor                
            </javadoc>
            <method name="DeclarationStatement" type="constructor" line="47">
                <params>
                    <param name="where" type="long"/>
                    <param name="mod" type="int"/>
                    <param name="type" type="Expression"/>
                    <param name="args" type="Statement"/>
                </params>
            </method>
            <javadoc line="54">
                Check statement
                  Report an error unless the call is checkBlockStatement.                
            </javadoc>
            <method name="check" type="Vset" line="58">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                </params>
            </method>
            <method name="checkBlockStatement" type="Vset" line="62">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                </params>
                <scope line="63"/>
                <declaration name="t" type="Type" line="67"/>
                <scope line="69"/>
            </method>
            <javadoc line="76">
                Inline                
            </javadoc>
            <method name="inline" type="Statement" line="79">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <declaration name="n" type="int" line="80"/>
                <scope line="81">
                    <scope line="82"/>
                </scope>
            </method>
            <javadoc line="89">
                Create a copy of the statement for method inlining                
            </javadoc>
            <method name="copyInline" type="Statement" line="92">
                <params>
                    <param name="ctx" type="Context"/>
                    <param name="valNeeded" type="boolean"/>
                </params>
                <declaration name="s" type="DeclarationStatement" line="93"/>
                <scope line="94"/>
                <scope line="98">
                    <scope line="99"/>
                </scope>
            </method>
            <javadoc line="106">
                The cost of inlining this statement                
            </javadoc>
            <method name="costInline" type="int" line="109">
                <params>
                    <param name="thresh" type="int"/>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <declaration name="cost" type="int" line="110"/>
                <scope line="111">
                    <scope line="112"/>
                </scope>
            </method>
            <javadoc line="120">
                Code                
            </javadoc>
            <method name="code" type="void" line="123">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
                <scope line="124">
                    <scope line="125"/>
                </scope>
            </method>
            <javadoc line="131">
                Print                
            </javadoc>
            <method name="print" type="void" line="134">
                <params>
                    <param name="out" type="PrintStream"/>
                    <param name="indent" type="int"/>
                </params>
                <scope line="139">
                    <scope line="140"/>
                    <scope line="143"/>
                    <scope line="145"/>
                </scope>
            </method>
        </class>
    </source>