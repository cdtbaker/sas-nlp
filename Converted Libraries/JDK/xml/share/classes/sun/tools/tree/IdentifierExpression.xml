<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.tree">
        <import package="sun.tools.java"/>
        <import package="sun.tools.asm.Assembler"/>
        <import package="sun.tools.asm.LocalVariable"/>
        <import package="java.io.PrintStream"/>
        <import package="java.util.Hashtable"/>
        <class name="IdentifierExpression" line="7">
            <extends class="Expression"/>
            <javadoc line="7">
                WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <declaration name="id" type="Identifier" line="13"/>
            <declaration name="field" type="MemberDefinition" line="14"/>
            <declaration name="implementation" type="Expression" line="15"/>
            <javadoc line="16">
                Constructor                
            </javadoc>
            <method name="IdentifierExpression" type="constructor" line="19">
                <params>
                    <param name="where" type="long"/>
                    <param name="id" type="Identifier"/>
                </params>
            </method>
            <method name="IdentifierExpression" type="constructor" line="23">
                <params>
                    <param name="id" type="IdentifierToken"/>
                </params>
            </method>
            <method name="IdentifierExpression" type="constructor" line="26">
                <params>
                    <param name="where" type="long"/>
                    <param name="field" type="MemberDefinition"/>
                </params>
            </method>
            <method name="getImplementation" type="Expression" line="31"/>
            <javadoc line="35">
                Check if the expression is equal to a value                
            </javadoc>
            <method name="equals" type="boolean" line="38">
                <params>
                    <param name="id" type="Identifier"/>
                </params>
            </method>
            <javadoc line="41">
                Assign a value to this identifier.  [It must already be &quot;bound&quot;]                
            </javadoc>
            <method name="assign" type="Vset" line="44">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                </params>
                <scope line="45">
                    <declaration name="local" type="LocalMember" line="46"/>
                    <scope line="47"/>
                    <scope line="50">
                        <scope line="51"/>
                        <scope line="54"/>
                    </scope>
                </scope>
                <scope line="61"/>
            </method>
            <javadoc line="66">
                Get the value of this identifier.  [ It must already be &quot;bound&quot;]                
            </javadoc>
            <method name="get" type="Vset" line="69">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                </params>
                <scope line="70">
                    <declaration name="local" type="LocalMember" line="71"/>
                    <scope line="72"/>
                    <scope line="75"/>
                </scope>
                <scope line="81">
                    <scope line="82">
                        <scope line="83"/>
                    </scope>
                    <scope line="88">
                        <declaration name="number" type="int" line="89"/>
                        <scope line="90"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="97">
                Bind to a field                
            </javadoc>
            <method name="bind" type="boolean" line="100">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <scope line="101">
                    <scope line="103">
                        <scope line="104">
                            <scope line="105"/>
                        </scope>
                    </scope>
                    <scope line="114"/>
                    <scope line="118">
                        <declaration name="local" type="LocalMember" line="119"/>
                        <scope line="120"/>
                    </scope>
                    <scope line="124">
                        <declaration name="f" type="MemberDefinition" line="125"/>
                        <scope line="126"/>
                        <declaration name="fclass" type="ClassDefinition" line="129"/>
                        <scope line="130">
                            <declaration name="f2" type="MemberDefinition" line="131"/>
                            <scope line="132">
                                <declaration name="c" type="ClassDefinition" line="133"/>
                                <scope line="135"/>
                                <scope line="138"/>
                            </scope>
                        </scope>
                        <scope line="143">
                            <declaration name="base" type="Expression" line="144"/>
                        </scope>
                        <scope line="147">
                            <declaration name="base" type="Expression" line="148"/>
                            <scope line="149"/>
                        </scope>
                    </scope>
                    <scope line="154"/>
                </scope>
                <scope line="160"/>
                <scope line="163"/>
            </method>
            <javadoc line="168">
                Check expression                
            </javadoc>
            <method name="checkValue" type="Vset" line="171">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                </params>
                <scope line="172"/>
                <scope line="175"/>
            </method>
            <javadoc line="182">
                Check the expression if it appears on the LHS of an assignment                
            </javadoc>
            <method name="checkLHS" type="Vset" line="185">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                </params>
            </method>
            <javadoc line="191">
                Check the expression if it appears on the LHS of an op= expression                
            </javadoc>
            <method name="checkAssignOp" type="Vset" line="194">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                    <param name="outside" type="Expression"/>
                </params>
            </method>
            <javadoc line="200">
                Return an accessor if one is needed for assignments to this expression.                
            </javadoc>
            <method name="getAssigner" type="FieldUpdater" line="203">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <javadoc line="207">
                Return an updater if one is needed for assignments to this expression.                
            </javadoc>
            <method name="getUpdater" type="FieldUpdater" line="210">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <javadoc line="214">
                Check if the present name is part of a scoping prefix.                
            </javadoc>
            <method name="checkAmbigName" type="Vset" line="217">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                    <param name="loc" type="UnaryExpression"/>
                </params>
                <scope line="218">
                    <scope line="219"/>
                </scope>
                <scope line="223"/>
                <scope line="225"/>
                <declaration name="c" type="ClassDefinition" line="227"/>
                <scope line="228"/>
            </method>
            <javadoc line="235">
                Convert an identifier to a known type, or null.                
            </javadoc>
            <method name="toResolvedType" type="ClassDefinition" line="238">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="pkgOK" type="boolean"/>
                </params>
                <declaration name="rid" type="Identifier" line="239"/>
                <declaration name="t" type="Type" line="240"/>
                <scope line="241"/>
                <scope line="244">
                    <scope line="245">
                        <declaration name="c" type="ClassDefinition" line="246"/>
                        <scope line="247">
                            <declaration name="sc" type="ClassDefinition" line="248"/>
                            <scope line="249">
                                <declaration name="rid2" type="Identifier" line="250"/>
                                <scope line="251"/>
                            </scope>
                        </scope>
                        <scope line="256"/>
                    </scope>
                    <scope line="261"/>
                </scope>
            </method>
            <javadoc line="266">
                Convert an identifier to a type.
                  If one is not known, use the current package as a qualifier.                
            </javadoc>
            <method name="toType" type="Type" line="270">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <declaration name="c" type="ClassDefinition" line="271"/>
                <scope line="272"/>
            </method>
            <javadoc line="277">
                Check if constant:  Will it inline away?                
            </javadoc>
            <method name="isConstant" type="boolean" line="280">
                <scope line="282"/>
            </method>
            <javadoc line="287">
                Inline                
            </javadoc>
            <method name="inline" type="Expression" line="290">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <method name="inlineValue" type="Expression" line="293">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <scope line="295"/>
                <scope line="298">
                    <scope line="299">
                        <scope line="300">
                            <declaration name="e" type="Expression" line="301"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="308"/>
            </method>
            <method name="inlineLHS" type="Expression" line="312">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <method name="copyInline" type="Expression" line="316">
                <params>
                    <param name="ctx" type="Context"/>
                </params>
                <declaration name="e" type="IdentifierExpression" line="318"/>
                <scope line="319"/>
            </method>
            <method name="costInline" type="int" line="324">
                <params>
                    <param name="thresh" type="int"/>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <javadoc line="328">
                Code local vars (object fields have been inlined away)                
            </javadoc>
            <method name="codeLValue" type="int" line="331">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
            </method>
            <method name="codeLoad" type="void" line="334">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
            </method>
            <method name="codeStore" type="void" line="337">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
                <declaration name="local" type="LocalMember" line="338"/>
            </method>
            <method name="codeValue" type="void" line="341">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
            </method>
            <javadoc line="345">
                Print                
            </javadoc>
            <method name="print" type="void" line="348">
                <params>
                    <param name="out" type="PrintStream"/>
                </params>
                <scope line="350"/>
            </method>
        </class>
    </source>