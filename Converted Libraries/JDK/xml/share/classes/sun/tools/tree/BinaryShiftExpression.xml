<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.tree">
        <import package="sun.tools.java"/>
        <class name="BinaryShiftExpression" line="30">
            <extends class="BinaryExpression"/>
            <javadoc line="30">
                WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <javadoc line="37">
                constructor                
            </javadoc>
            <method name="BinaryShiftExpression" type="constructor" line="40">
                <params>
                    <param name="op" type="int"/>
                    <param name="where" type="long"/>
                    <param name="left" type="Expression"/>
                    <param name="right" type="Expression"/>
                </params>
            </method>
            <javadoc line="44">
                Evaluate the expression                
            </javadoc>
            <method name="eval" type="Expression" line="47">
                <comment line="49">
                    The eval code in BinaryExpression.java only works correctly
                     for arithmetic expressions.  For shift expressions, we get cases
                     where the left and right operand may legitimately be of mixed
                     types (long and int).  This is a fix for 4082814.                    
                </comment>
                <comment line="58">
                    Delegate the rest of the cases to our parent, so as to minimize
                     impact on existing behavior.                    
                </comment>
                <scope line="52"/>
            </method>
            <javadoc line="62">
                Select the type                
            </javadoc>
            <method name="selectType" type="void" line="65">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="tm" type="int"/>
                </params>
                <scope line="66"/>
                <scope line="68"/>
                <scope line="71"/>
                <scope line="74"/>
                <scope line="76"/>
            </method>
        </class>
    </source>