<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.tree">
        <import package="sun.tools.java"/>
        <import package="sun.tools.asm.Assembler"/>
        <class name="IntegerExpression" line="31">
            <extends class="ConstantExpression"/>
            <javadoc line="31">
                WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <declaration name="value" type="int" line="38"/>
            <javadoc line="40">
                Constructor                
            </javadoc>
            <method name="IntegerExpression" type="constructor" line="43">
                <params>
                    <param name="op" type="int"/>
                    <param name="where" type="long"/>
                    <param name="type" type="Type"/>
                    <param name="value" type="int"/>
                </params>
            </method>
            <javadoc line="48">
                See if this number fits in the given type.                
            </javadoc>
            <method name="fitsType" type="boolean" line="51">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="t" type="Type"/>
                </params>
                <comment line="54">
                    A char constant is not really an int constant,
                     so do not report that &apos;a&apos; fits in a byte or short,
                     even if its value is in fact 7-bit ascii.  See JLS 5.2.                    
                </comment>
                <scope line="52"/>
            </method>
            <javadoc line="69">
                Get the value                
            </javadoc>
            <method name="getValue" type="Object" line="72"/>
            <javadoc line="76">
                Check if the expression is equal to a value                
            </javadoc>
            <method name="equals" type="boolean" line="79">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <javadoc line="83">
                Check if the expression is equal to its default static value                
            </javadoc>
            <method name="equalsDefault" type="boolean" line="86"/>
            <javadoc line="90">
                Code                
            </javadoc>
            <method name="codeValue" type="void" line="93">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
            </method>
        </class>
    </source>