<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.tree">
        <import package="sun.tools.java"/>
        <import package="sun.tools.asm.Assembler"/>
        <import package="sun.tools.asm.Label"/>
        <import package="java.io.PrintStream"/>
        <import package="java.util.Hashtable"/>
        <class name="ConditionalExpression" line="7">
            <extends class="BinaryExpression"/>
            <javadoc line="7">
                WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <declaration name="cond" type="Expression" line="13"/>
            <javadoc line="14">
                Constructor                
            </javadoc>
            <method name="ConditionalExpression" type="constructor" line="17">
                <params>
                    <param name="where" type="long"/>
                    <param name="cond" type="Expression"/>
                    <param name="left" type="Expression"/>
                    <param name="right" type="Expression"/>
                </params>
            </method>
            <javadoc line="21">
                Order the expression based on precedence                
            </javadoc>
            <method name="order" type="Expression" line="24">
                <scope line="25">
                    <declaration name="e" type="UnaryExpression" line="26"/>
                </scope>
            </method>
            <javadoc line="33">
                Check the expression                
            </javadoc>
            <method name="checkValue" type="Vset" line="36">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                </params>
                <declaration name="cvars" type="ConditionVars" line="37"/>
                <declaration name="tm" type="int" line="40"/>
                <scope line="41"/>
                <scope line="45"/>
                <scope line="48"/>
                <scope line="51"/>
                <scope line="54"/>
                <scope line="57">
                    <scope line="58"/>
                    <scope line="61"/>
                </scope>
                <scope line="65"/>
                <scope line="68"/>
                <scope line="71"/>
                <scope line="74"/>
            </method>
            <method name="check" type="Vset" line="81">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                </params>
            </method>
            <javadoc line="86">
                Check if constant                
            </javadoc>
            <method name="isConstant" type="boolean" line="89"/>
            <javadoc line="92">
                Simplify                
            </javadoc>
            <method name="simplify" type="Expression" line="95">
                <scope line="96"/>
                <scope line="99"/>
            </method>
            <javadoc line="104">
                Inline                
            </javadoc>
            <method name="inline" type="Expression" line="107">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <scope line="110"/>
                <scope line="113"/>
            </method>
            <method name="inlineValue" type="Expression" line="121">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <javadoc line="127">
                The cost of inlining this expression                
            </javadoc>
            <method name="costInline" type="int" line="130">
                <params>
                    <param name="thresh" type="int"/>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <javadoc line="133">
                Create a copy of the expression for method inlining                
            </javadoc>
            <method name="copyInline" type="Expression" line="136">
                <params>
                    <param name="ctx" type="Context"/>
                </params>
                <declaration name="e" type="ConditionalExpression" line="137"/>
            </method>
            <javadoc line="143">
                Code                
            </javadoc>
            <method name="codeValue" type="void" line="146">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
                <declaration name="l1" type="Label" line="147"/>
                <declaration name="l2" type="Label" line="148"/>
            </method>
            <method name="code" type="void" line="156">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
                <declaration name="l1" type="Label" line="157"/>
                <scope line="160">
                    <declaration name="l2" type="Label" line="161"/>
                </scope>
                <scope line="167"/>
            </method>
            <javadoc line="171">
                Print                
            </javadoc>
            <method name="print" type="void" line="174">
                <params>
                    <param name="out" type="PrintStream"/>
                </params>
                <scope line="180"/>
                <scope line="183"/>
            </method>
        </class>
    </source>