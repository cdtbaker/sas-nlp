<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.tree">
        <import package="sun.tools.java"/>
        <import package="sun.tools.asm.Assembler"/>
        <import package="sun.tools.asm.Label"/>
        <import package="java.io.PrintStream"/>
        <import package="java.util.Hashtable"/>
        <class name="CastExpression" line="34">
            <extends class="BinaryExpression"/>
            <javadoc line="34">
                WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <javadoc line="41">
                constructor                
            </javadoc>
            <method name="CastExpression" type="constructor" line="44">
                <params>
                    <param name="where" type="long"/>
                    <param name="left" type="Expression"/>
                    <param name="right" type="Expression"/>
                </params>
            </method>
            <javadoc line="48">
                Check the expression                
            </javadoc>
            <method name="checkValue" type="Vset" line="51">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                </params>
                <comment line="57">
                    An error was already reported                    
                </comment>
                <comment line="62">
                    The types are already the same                    
                </comment>
                <comment line="75">
                    The cast is not allowed                    
                </comment>
                <scope line="55"/>
                <scope line="60"/>
                <scope line="65">
                    <scope line="66"/>
                </scope>
                <scope line="70"/>
            </method>
            <javadoc line="79">
                Check if constant                
            </javadoc>
            <method name="isConstant" type="boolean" line="82">
                <comment line="85">
                    must be a primitive type, or String                    
                </comment>
                <scope line="83"/>
            </method>
            <javadoc line="90">
                Inline                
            </javadoc>
            <method name="inline" type="Expression" line="93">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <method name="inlineValue" type="Expression" line="96">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <method name="costInline" type="int" line="101">
                <params>
                    <param name="thresh" type="int"/>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <comment line="106">
                    sourceClass is the current class trying to inline this method                    
                </comment>
                <comment line="109">
                    We only allow the inlining if the current class can access
                     the casting class                    
                </comment>
                <scope line="102"/>
                <declaration name="sourceClass" type="ClassDefinition" line="106"/>
                <scope line="107"/>
                <scope line="114"/>
            </method>
            <javadoc line="121">
                Print                
            </javadoc>
            <method name="print" type="void" line="124">
                <params>
                    <param name="out" type="PrintStream"/>
                </params>
                <scope line="126"/>
                <scope line="128"/>
            </method>
        </class>
    </source>