<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.tree">
        <import package="sun.tools.java"/>
        <import package="sun.tools.asm.Assembler"/>
        <import package="java.io.PrintStream"/>
        <import package="java.util.Hashtable"/>
        <class name="MethodExpression" line="6">
            <extends class="NaryExpression"/>
            <javadoc line="6">
                WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <declaration name="id" type="Identifier" line="12"/>
            <declaration name="clazz" type="ClassDefinition" line="13"/>
            <declaration name="field" type="MemberDefinition" line="14"/>
            <declaration name="implementation" type="Expression" line="15"/>
            <declaration name="isSuper" type="boolean" line="16"/>
            <javadoc line="17">
                constructor                
            </javadoc>
            <method name="MethodExpression" type="constructor" line="20">
                <params>
                    <param name="where" type="long"/>
                    <param name="right" type="Expression"/>
                    <param name="id" type="Identifier"/>
                    <param name="args" type="Expression"/>
                </params>
            </method>
            <method name="MethodExpression" type="constructor" line="24">
                <params>
                    <param name="where" type="long"/>
                    <param name="right" type="Expression"/>
                    <param name="field" type="MemberDefinition"/>
                    <param name="args" type="Expression"/>
                </params>
            </method>
            <method name="MethodExpression" type="constructor" line="30">
                <params>
                    <param name="where" type="long"/>
                    <param name="right" type="Expression"/>
                    <param name="field" type="MemberDefinition"/>
                    <param name="args" type="Expression"/>
                    <param name="forceSuper" type="boolean"/>
                </params>
            </method>
            <method name="getImplementation" type="Expression" line="34"/>
            <javadoc line="38">
                Check expression type                
            </javadoc>
            <method name="checkValue" type="Vset" line="41">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                </params>
                <declaration name="c" type="ClassDeclaration" line="42"/>
                <declaration name="isArray" type="boolean" line="43"/>
                <declaration name="staticRef" type="boolean" line="44"/>
                <declaration name="implMethod" type="MemberDefinition" line="45"/>
                <declaration name="ctxClass" type="ClassDefinition" line="46"/>
                <declaration name="args" type="Expression" line="47"/>
                <scope line="48">
                    <declaration name="conCls" type="ClassDefinition" line="49"/>
                    <scope line="50">
                        <declaration name="conOuter" type="Expression" line="51"/>
                        <scope line="52"/>
                        <scope line="56"/>
                    </scope>
                    <scope line="61"/>
                </scope>
                <declaration name="argTypes" type="Type" line="64"/>
                <declaration name="sourceClass" type="ClassDefinition" line="65"/>
                <scope line="66">
                    <scope line="67">
                        <declaration name="cdef" type="ClassDefinition" line="69"/>
                        <declaration name="m" type="MemberDefinition" line="70"/>
                        <scope line="71">
                            <scope line="73"/>
                        </scope>
                        <scope line="77"/>
                        <scope line="80">
                            <scope line="82">
                                <declaration name="cdef2" type="ClassDefinition" line="83"/>
                                <scope line="84">
                                    <declaration name="m2" type="MemberDefinition" line="85"/>
                                    <scope line="86"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="94">
                        <scope line="95">
                            <declaration name="thisN" type="int" line="96"/>
                            <scope line="97"/>
                            <scope line="101"/>
                            <scope line="106"/>
                            <scope line="109"/>
                        </scope>
                        <scope line="113">
                            <scope line="115"/>
                            <scope line="119"/>
                        </scope>
                        <scope line="123"/>
                        <scope line="126"/>
                        <scope line="130">
                            <scope line="131"/>
                        </scope>
                        <scope line="136">
                            <declaration name="id" type="Identifier" line="137"/>
                            <scope line="138"/>
                            <scope line="141"/>
                        </scope>
                        <scope line="146"/>
                        <scope line="149">
                            <scope line="150">
                                <declaration name="cdecl" type="ClassDeclaration" line="151"/>
                                <scope line="152"/>
                                <scope line="155"/>
                            </scope>
                        </scope>
                    </scope>
                    <declaration name="hasErrors" type="boolean" line="161"/>
                    <scope line="162"/>
                    <scope line="165"/>
                    <scope line="170"/>
                    <scope line="173"/>
                    <scope line="177">
                        <scope line="179">
                            <scope line="180">
                                <declaration name="sig" type="String" line="182"/>
                            </scope>
                            <declaration name="sig" type="String" line="187"/>
                            <scope line="189">
                                <scope line="190"/>
                                <scope line="193"/>
                            </scope>
                            <scope line="197"/>
                            <scope line="199"/>
                        </scope>
                    </scope>
                    <scope line="206"/>
                    <scope line="210"/>
                    <scope line="214">
                        <scope line="215">
                            <scope line="216"/>
                        </scope>
                    </scope>
                    <scope line="221">
                        <declaration name="cdef" type="ClassDefinition" line="222"/>
                        <scope line="223"/>
                    </scope>
                    <scope line="227"/>
                    <scope line="231">
                        <scope line="232"/>
                        <scope line="235"/>
                    </scope>
                    <scope line="239"/>
                    <scope line="242">
                        <declaration name="declarer" type="ClassDefinition" line="243"/>
                        <scope line="244"/>
                    </scope>
                    <scope line="249"/>
                </scope>
                <scope line="253"/>
                <scope line="257"/>
                <scope line="261"/>
                <scope line="266"/>
                <scope line="269">
                    <declaration name="m" type="MemberDefinition" line="270"/>
                    <scope line="271"/>
                    <declaration name="nargs" type="int" line="274"/>
                    <declaration name="newargs" type="Expression[]" line="275"/>
                    <scope line="276">
                        <declaration name="rightI" type="Expression" line="277"/>
                        <scope line="278"/>
                        <scope line="282"/>
                        <scope line="285"/>
                        <scope line="288">
                            <scope line="293"/>
                        </scope>
                        <scope line="297">
                            <scope line="298"/>
                        </scope>
                    </scope>
                    <scope line="305">
                        <scope line="306">
                            <scope line="309"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="316">
                    <scope line="317"/>
                    <scope line="320">
                        <declaration name="oldargs" type="Expression" line="321"/>
                        <scope line="322">
                            <declaration name="call" type="Expression" line="323"/>
                        </scope>
                        <scope line="326">
                            <declaration name="nargs" type="int" line="327"/>
                            <declaration name="newargs" type="Expression" line="328"/>
                            <scope line="330"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="337">
                    <declaration name="e" type="Expression" line="338"/>
                    <scope line="339"/>
                </scope>
                <declaration name="exceptions" type="ClassDeclaration" line="344"/>
                <scope line="345">
                    <scope line="347">
                        <scope line="348"/>
                    </scope>
                </scope>
                <scope line="353">
                    <scope line="354"/>
                </scope>
                <scope line="358">
                    <declaration name="cls" type="ClassDefinition" line="359"/>
                    <scope line="360">
                        <scope line="361"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="368">
                Check void expression                
            </javadoc>
            <method name="check" type="Vset" line="371">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                </params>
            </method>
            <javadoc line="374">
                We&apos;re about to report a &quot;unmatched method&quot; error.
                  Try to issue a better diagnostic by comparing the actual argument types
                  with the method (or methods) available.
                  In particular, if there is an argument which fails to match &lt;em&gt;any&lt;/em&gt;
                  method, we report a type mismatch error against that particular argument.
                  The diagnostic will report a target type taken from one of the methods.
                  &lt;p&gt;
                  Return false if we couldn&apos;t think of anything smart to say.                
            </javadoc>
            <method name="diagnoseMismatch" type="boolean" line="384">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="args" type="Expression"/>
                    <param name="argTypes" type="Type"/>
                </params>
                <declaration name="margType" type="Type" line="385"/>
                <declaration name="saidSomething" type="boolean" line="386"/>
                <declaration name="start" type="int" line="387"/>
                <scope line="388">
                    <declaration name="code" type="int" line="389"/>
                    <declaration name="opName" type="String" line="390"/>
                    <scope line="391"/>
                    <declaration name="i" type="int" line="396"/>
                    <declaration name="castOK" type="boolean" line="397"/>
                    <declaration name="ambig" type="boolean" line="398"/>
                    <declaration name="targetType" type="Type" line="399"/>
                    <declaration name="ttype" type="String" line="400"/>
                </scope>
            </method>
            <declaration name="MAXINLINECOST" type="int" line="408"/>
            <javadoc line="408">
                Inline                
            </javadoc>
            <method name="inlineMethod" type="Expression" line="412">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="s" type="Statement"/>
                    <param name="valNeeded" type="boolean"/>
                </params>
                <scope line="413"/>
                <declaration name="v" type="LocalMember" line="416"/>
                <declaration name="body" type="Statement" line="417"/>
                <declaration name="n" type="int" line="418"/>
                <scope line="419"/>
                <scope line="422">
                    <scope line="423"/>
                </scope>
                <scope line="428"/>
                <declaration name="type" type="Type" line="433"/>
                <declaration name="e" type="Expression" line="434"/>
            </method>
            <method name="inline" type="Expression" line="437">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <scope line="439">
                    <scope line="440"/>
                    <scope line="443"/>
                    <declaration name="ctxClass" type="ClassDefinition" line="446"/>
                    <declaration name="e" type="Expression" line="447"/>
                    <scope line="448">
                        <declaration name="s" type="Statement" line="449"/>
                        <scope line="450"/>
                    </scope>
                </scope>
                <scope line="456"/>
            </method>
            <method name="inlineValue" type="Expression" line="460">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <scope line="462">
                    <scope line="463"/>
                    <scope line="466">
                        <declaration name="refc" type="ClassDefinition" line="467"/>
                        <declaration name="r" type="UplevelReference" line="468"/>
                        <scope line="469"/>
                    </scope>
                    <scope line="473"/>
                    <declaration name="ctxClass" type="ClassDefinition" line="476"/>
                    <scope line="477">
                        <declaration name="s" type="Statement" line="478"/>
                        <scope line="479"/>
                    </scope>
                </scope>
                <scope line="485"/>
            </method>
            <method name="copyInline" type="Expression" line="489">
                <params>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <method name="costInline" type="int" line="493">
                <params>
                    <param name="thresh" type="int"/>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <scope line="495"/>
            </method>
            <method name="makeVarInits" type="Expression" line="500">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <declaration name="clazz" type="ClassDefinition" line="501"/>
                <declaration name="e" type="Expression" line="502"/>
                <scope line="503">
                    <scope line="504">
                        <scope line="505"/>
                        <scope line="508"/>
                        <declaration name="val" type="Expression" line="511"/>
                        <scope line="512">
                            <scope line="513"/>
                            <declaration name="arg" type="IdentifierExpression" line="516"/>
                            <scope line="517"/>
                        </scope>
                        <scope line="522">
                            <declaration name="s" type="Statement" line="523"/>
                        </scope>
                        <scope line="526"/>
                        <scope line="529">
                            <declaration name="p" type="long" line="530"/>
                            <declaration name="init" type="Expression" line="532"/>
                            <scope line="533">
                                <declaration name="v" type="Expression" line="534"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="544">
                Code                
            </javadoc>
            <method name="codeValue" type="void" line="547">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
                <declaration name="i" type="int" line="549"/>
                <scope line="550">
                    <scope line="551"/>
                </scope>
                <scope line="555"/>
                <scope line="558">
                    <scope line="560">
                        <declaration name="refc" type="ClassDefinition" line="561"/>
                        <declaration name="r" type="UplevelReference" line="562"/>
                        <scope line="563">
                            <scope line="564"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="571"/>
                <scope line="574"/>
                <scope line="577"/>
                <scope line="580"/>
                <scope line="583"/>
                <scope line="586"/>
                <scope line="589">
                    <declaration name="refc" type="ClassDefinition" line="590"/>
                    <declaration name="r" type="UplevelReference" line="591"/>
                    <scope line="592"/>
                </scope>
            </method>
            <javadoc line="597">
                Check if the first thing is a constructor invocation                
            </javadoc>
            <method name="firstConstructor" type="Expression" line="600"/>
            <javadoc line="603">
                Print                
            </javadoc>
            <method name="print" type="void" line="606">
                <params>
                    <param name="out" type="PrintStream"/>
                </params>
                <scope line="608"/>
                <scope line="613">
                    <scope line="615"/>
                    <scope line="618"/>
                </scope>
                <scope line="623"/>
            </method>
        </class>
    </source>