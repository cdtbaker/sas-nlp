<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.tree">
        <import package="sun.tools.java"/>
        <import package="sun.tools.asm.Assembler"/>
        <import package="java.io.PrintStream"/>
        <import package="java.util.Hashtable"/>
        <class name="AssignOpExpression" line="6">
            <extends class="BinaryAssignExpression"/>
            <javadoc line="6">
                WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <declaration name="itype" type="Type" line="12"/>
            <declaration name="NOINC" type="int" line="13"/>
            <declaration name="updater" type="FieldUpdater" line="14"/>
            <javadoc line="15">
                Constructor                
            </javadoc>
            <method name="AssignOpExpression" type="constructor" line="18">
                <params>
                    <param name="op" type="int"/>
                    <param name="where" type="long"/>
                    <param name="left" type="Expression"/>
                    <param name="right" type="Expression"/>
                </params>
            </method>
            <javadoc line="21">
                Select the type                
            </javadoc>
            <method name="selectType" type="void" line="24">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="tm" type="int"/>
                </params>
                <declaration name="rtype" type="Type" line="25"/>
                <scope line="28">
                    <scope line="29"/>
                    <scope line="33"/>
                </scope>
                <scope line="42"/>
                <scope line="45"/>
                <scope line="48"/>
                <scope line="51"/>
                <scope line="58"/>
                <scope line="61"/>
                <scope line="64"/>
                <scope line="72"/>
                <scope line="75"/>
                <scope line="78"/>
                <scope line="85"/>
            </method>
            <javadoc line="91">
                Get the increment, return NOINC if an increment is not possible                
            </javadoc>
            <method name="getIncrement" type="int" line="94">
                <scope line="95">
                    <declaration name="val" type="int" line="96"/>
                </scope>
            </method>
            <javadoc line="102">
                Check an assignment expression                
            </javadoc>
            <method name="checkValue" type="Vset" line="105">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                </params>
                <declaration name="tm" type="int" line="108"/>
                <scope line="109"/>
                <scope line="113"/>
            </method>
            <javadoc line="119">
                Inline                
            </javadoc>
            <method name="inlineValue" type="Expression" line="122">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <scope line="125"/>
            </method>
            <javadoc line="130">
                Create a copy of the expression for method inlining                
            </javadoc>
            <method name="copyInline" type="Expression" line="133">
                <params>
                    <param name="ctx" type="Context"/>
                </params>
                <declaration name="e" type="AssignOpExpression" line="134"/>
                <scope line="137"/>
            </method>
            <javadoc line="142">
                The cost of inlining this statement                
            </javadoc>
            <method name="costInline" type="int" line="145">
                <params>
                    <param name="thresh" type="int"/>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <scope line="146"/>
                <scope line="149"/>
            </method>
            <javadoc line="153">
                Code                
            </javadoc>
            <method name="code" type="void" line="156">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                    <param name="valNeeded" type="boolean"/>
                </params>
                <declaration name="val" type="int" line="157"/>
                <scope line="158">
                    <declaration name="v" type="int" line="159"/>
                    <declaration name="operands" type="int[]" line="160"/>
                    <scope line="162"/>
                </scope>
                <scope line="167">
                    <declaration name="depth" type="int" line="168"/>
                    <scope line="175"/>
                </scope>
                <scope line="180"/>
            </method>
            <method name="codeValue" type="void" line="189">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
            </method>
            <method name="code" type="void" line="192">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
            </method>
            <javadoc line="195">
                Print                
            </javadoc>
            <method name="print" type="void" line="198">
                <params>
                    <param name="out" type="PrintStream"/>
                </params>
            </method>
        </class>
    </source>