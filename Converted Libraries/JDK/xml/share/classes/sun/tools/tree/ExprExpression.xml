<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.tree">
        <import package="sun.tools.java"/>
        <import package="java.util.Hashtable"/>
        <class name="ExprExpression" line="31">
            <extends class="UnaryExpression"/>
            <comment line="78">
                Allow (x) = 9;                
            </comment>
            <comment line="79">
                                
            </comment>
            <comment line="80">
                I will hold off on this until I&apos;m sure about it.  Nobody&apos;s                
            </comment>
            <comment line="81">
                going to clammer for this one.                
            </comment>
            <comment line="82">
                                
            </comment>
            <comment line="83">
                public Vset checkLHS(Environment env, Context ctx,                
            </comment>
            <comment line="84">
                Vset vset, Hashtable exp) {                
            </comment>
            <comment line="85">
                vset = right.check(env, ctx, vset, exp);                
            </comment>
            <comment line="86">
                type = right.type;                
            </comment>
            <comment line="87">
                return vset;                
            </comment>
            <comment line="88">
                }                
            </comment>
            <comment line="98">
                Probably not necessary                
            </comment>
            <javadoc line="31">
                Parenthesised expressions.
                  WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <javadoc line="41">
                Constructor                
            </javadoc>
            <method name="ExprExpression" type="constructor" line="44">
                <params>
                    <param name="where" type="long"/>
                    <param name="right" type="Expression"/>
                </params>
            </method>
            <javadoc line="48">
                Check a condition.  We must pass it on to our unparenthesised form.                
            </javadoc>
            <method name="checkCondition" type="void" line="52">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                    <param name="cvars" type="ConditionVars"/>
                </params>
            </method>
            <javadoc line="57">
                Check the expression if it appears as an lvalue.
                  We just pass it on to our unparenthesized subexpression.
                  (Part of fix for 4090372)                
            </javadoc>
            <method name="checkAssignOp" type="Vset" line="63">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                    <param name="outside" type="Expression"/>
                </params>
            </method>
            <javadoc line="69">
                Delegate to our subexpression.
                  (Part of fix for 4090372)                
            </javadoc>
            <method name="getUpdater" type="FieldUpdater" line="73">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <method name="isNull" type="boolean" line="89"/>
            <method name="isNonNull" type="boolean" line="93"/>
            <method name="getValue" type="Object" line="98"/>
            <javadoc line="102">
                Delegate to our subexpression.
                  See the comment in AddExpression#inlineValueSB() for
                  information about this method.                
            </javadoc>
            <method name="inlineValueSB" type="StringBuffer" line="109">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="buffer" type="StringBuffer"/>
                </params>
            </method>
            <javadoc line="113">
                Select the type of the expression                
            </javadoc>
            <method name="selectType" type="void" line="116">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="tm" type="int"/>
                </params>
            </method>
            <javadoc line="120">
                Simplify                
            </javadoc>
            <method name="simplify" type="Expression" line="123"/>
        </class>
    </source>