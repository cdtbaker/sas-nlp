<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.tree">
        <import package="sun.tools.java"/>
        <import package="sun.tools.asm.Assembler"/>
        <import package="sun.tools.asm.Label"/>
        <import package="java.io.PrintStream"/>
        <import package="java.util.Hashtable"/>
        <class name="InstanceOfExpression" line="34">
            <extends class="BinaryExpression"/>
            <javadoc line="34">
                WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <javadoc line="41">
                constructor                
            </javadoc>
            <method name="InstanceOfExpression" type="constructor" line="44">
                <params>
                    <param name="where" type="long"/>
                    <param name="left" type="Expression"/>
                    <param name="right" type="Expression"/>
                </params>
            </method>
            <javadoc line="48">
                Check the expression                
            </javadoc>
            <method name="checkValue" type="Vset" line="51">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                </params>
                <comment line="57">
                    An error was already reported                    
                </comment>
                <scope line="55"/>
                <scope line="60"/>
                <scope line="64">
                    <scope line="65"/>
                </scope>
                <scope line="68"/>
            </method>
            <javadoc line="74">
                Inline                
            </javadoc>
            <method name="inline" type="Expression" line="77">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <method name="inlineValue" type="Expression" line="80">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <method name="costInline" type="int" line="85">
                <params>
                    <param name="thresh" type="int"/>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <comment line="90">
                    sourceClass is the current class trying to inline this method                    
                </comment>
                <comment line="93">
                    We only allow the inlining if the current class can access
                     the &quot;instance of&quot; class                    
                </comment>
                <scope line="86"/>
                <declaration name="sourceClass" type="ClassDefinition" line="90"/>
                <scope line="91"/>
                <scope line="97"/>
            </method>
            <javadoc line="105">
                Code                
            </javadoc>
            <method name="codeValue" type="void" line="108">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
                <scope line="110"/>
                <scope line="112"/>
            </method>
            <method name="codeBranch" type="void" line="116">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                    <param name="lbl" type="Label"/>
                    <param name="whenTrue" type="boolean"/>
                </params>
            </method>
            <method name="code" type="void" line="120">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
            </method>
            <javadoc line="124">
                Print                
            </javadoc>
            <method name="print" type="void" line="127">
                <params>
                    <param name="out" type="PrintStream"/>
                </params>
                <scope line="131"/>
                <scope line="133"/>
            </method>
        </class>
    </source>