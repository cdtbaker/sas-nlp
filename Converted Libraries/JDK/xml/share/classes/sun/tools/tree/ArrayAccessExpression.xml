<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.tree">
        <import package="sun.tools.java"/>
        <import package="sun.tools.asm.Assembler"/>
        <import package="java.io.PrintStream"/>
        <import package="java.util.Hashtable"/>
        <class name="ArrayAccessExpression" line="6">
            <extends class="UnaryExpression"/>
            <javadoc line="6">
                WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <declaration name="index" type="Expression" line="12"/>
            <javadoc line="12">
                The index expression for the array access.  Note that
                  ArrayAccessExpression also `moonlights&apos; as a structure for
                  storing array types (like Object[]) which are used as part
                  of cast expressions.  For properly formed array types, the
                  value of index is null.  We need to be on the lookout for
                  null indices in true array accesses, and non-null indices
                  in array types.  We also need to make sure general purpose
                  methods (like copyInline(), which is called for both) are
                  prepared to handle either null or non-null indices.                
            </javadoc>
            <javadoc line="24">
                constructor                
            </javadoc>
            <method name="ArrayAccessExpression" type="constructor" line="27">
                <params>
                    <param name="where" type="long"/>
                    <param name="right" type="Expression"/>
                    <param name="index" type="Expression"/>
                </params>
            </method>
            <javadoc line="31">
                Check expression type                
            </javadoc>
            <method name="checkValue" type="Vset" line="34">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                </params>
                <scope line="36"/>
                <scope line="42">
                    <scope line="43"/>
                </scope>
            </method>
            <method name="checkAmbigName" type="Vset" line="51">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                    <param name="loc" type="UnaryExpression"/>
                </params>
                <scope line="52">
                    <scope line="54"/>
                    <scope line="58">
                        <declaration name="atype" type="Type" line="59"/>
                    </scope>
                </scope>
            </method>
            <method name="checkLHS" type="Vset" line="68">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                </params>
            </method>
            <method name="checkAssignOp" type="Vset" line="71">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                    <param name="outside" type="Expression"/>
                </params>
            </method>
            <javadoc line="74">
                An array access expression never requires the use of an access method to perform
                  an assignment to an array element, though an access method may be required to
                  fetch the array object itself.                
            </javadoc>
            <method name="getAssigner" type="FieldUpdater" line="79">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <javadoc line="82">
                An array access expression never requires a field updater.                
            </javadoc>
            <method name="getUpdater" type="FieldUpdater" line="85">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <javadoc line="88">
                Convert to a type                
            </javadoc>
            <method name="toType" type="Type" line="91">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <method name="toType" type="Type" line="94">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="t" type="Type"/>
                </params>
                <scope line="95"/>
            </method>
            <javadoc line="100">
                Inline                
            </javadoc>
            <method name="inline" type="Expression" line="103">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <method name="inlineValue" type="Expression" line="108">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <method name="inlineLHS" type="Expression" line="113">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <javadoc line="116">
                Create a copy of the expression for method inlining                
            </javadoc>
            <method name="copyInline" type="Expression" line="119">
                <params>
                    <param name="ctx" type="Context"/>
                </params>
                <declaration name="e" type="ArrayAccessExpression" line="120"/>
                <scope line="122"/>
                <scope line="125"/>
            </method>
            <javadoc line="130">
                The cost of inlining this expression                
            </javadoc>
            <method name="costInline" type="int" line="133">
                <params>
                    <param name="thresh" type="int"/>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <javadoc line="136">
                Code                
            </javadoc>
            <method name="codeLValue" type="int" line="139">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
            </method>
            <method name="codeLoad" type="void" line="144">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
            </method>
            <method name="codeStore" type="void" line="160">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
            </method>
            <method name="codeValue" type="void" line="176">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
            </method>
            <javadoc line="180">
                Print                
            </javadoc>
            <method name="print" type="void" line="183">
                <params>
                    <param name="out" type="PrintStream"/>
                </params>
                <scope line="187"/>
                <scope line="190"/>
            </method>
        </class>
    </source>