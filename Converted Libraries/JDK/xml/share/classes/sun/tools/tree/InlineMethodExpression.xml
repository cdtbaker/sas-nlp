<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.tree">
        <import package="sun.tools.java"/>
        <import package="sun.tools.asm.Label"/>
        <import package="sun.tools.asm.Assembler"/>
        <import package="java.io.PrintStream"/>
        <class name="InlineMethodExpression" line="33">
            <extends class="Expression"/>
            <javadoc line="33">
                WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <declaration name="field" type="MemberDefinition" line="40"/>
            <declaration name="body" type="Statement" line="41"/>
            <javadoc line="43">
                Constructor                
            </javadoc>
            <method name="InlineMethodExpression" type="constructor" line="46">
                <params>
                    <param name="where" type="long"/>
                    <param name="type" type="Type"/>
                    <param name="field" type="MemberDefinition"/>
                    <param name="body" type="Statement"/>
                </params>
            </method>
            <javadoc line="51">
                Inline                
            </javadoc>
            <method name="inline" type="Expression" line="54">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <scope line="56"/>
                <scope line="58">
                    <declaration name="expr" type="Expression" line="59"/>
                    <scope line="60"/>
                </scope>
                <scope line="64"/>
            </method>
            <method name="inlineValue" type="Expression" line="68">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <comment line="70">
                    When this node was constructed, &quot;copyInline&quot; walked the body
                     with a &quot;valNeeded&quot; flag which made all returns either void
                     or value-bearing.  The type of this node reflects that
                     earlier choice.  The present inline/inlineValue distinction
                     is ignored.                    
                </comment>
            </method>
            <javadoc line="77">
                Create a copy of the expression for method inlining                
            </javadoc>
            <method name="copyInline" type="Expression" line="80">
                <params>
                    <param name="ctx" type="Context"/>
                </params>
                <declaration name="e" type="InlineMethodExpression" line="81"/>
                <scope line="82"/>
            </method>
            <javadoc line="88">
                Code                
            </javadoc>
            <method name="code" type="void" line="91">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
                <comment line="93">
                    pop the result if there is any (usually, type is already void)                    
                </comment>
            </method>
            <method name="codeValue" type="void" line="95">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
                <declaration name="newctx" type="CodeContext" line="96"/>
            </method>
            <javadoc line="101">
                Print                
            </javadoc>
            <method name="print" type="void" line="104">
                <params>
                    <param name="out" type="PrintStream"/>
                </params>
            </method>
        </class>
    </source>