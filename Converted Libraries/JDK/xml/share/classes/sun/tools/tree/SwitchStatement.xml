<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.tree">
        <import package="sun.tools.java"/>
        <import package="sun.tools.asm.Assembler"/>
        <import package="sun.tools.asm.Label"/>
        <import package="sun.tools.asm.SwitchData"/>
        <import package="java.io.PrintStream"/>
        <import package="java.util.Hashtable"/>
        <class name="SwitchStatement" line="35">
            <extends class="Statement"/>
            <javadoc line="35">
                WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <declaration name="expr" type="Expression" line="42"/>
            <declaration name="args" type="Statement" line="43"/>
            <javadoc line="45">
                Constructor                
            </javadoc>
            <method name="SwitchStatement" type="constructor" line="48">
                <params>
                    <param name="where" type="long"/>
                    <param name="expr" type="Expression"/>
                    <param name="args" type="Statement"/>
                </params>
            </method>
            <javadoc line="54">
                Check statement                
            </javadoc>
            <method name="check" type="Vset" line="57">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                </params>
                <comment line="68">
                    Note that vs is reset to vset.copy() on every case label.
                     If the first substatement is not a case label, it is unreached.                    
                </comment>
                <comment line="106">
                    Suppose a class got an error early on during
                     checking.  It will set all of its members to
                     have the status &quot;ERROR&quot;.  Now suppose that a
                     case label refers to one of this class&apos;s
                     fields.  When we check the case label, the
                     compiler will try to inline the FieldExpression.
                     Since the expression has ERROR status, it doesn&apos;t
                     inline.  This means that instead of the case
                     label being an IntegerExpression, it will still
                     be a FieldExpression, and we will end up in this
                     else block.  So, before we just assume that
                     the expression isn&apos;t constant, do a check to
                     see if it was constant but unable to inline.
                     This eliminates some spurious error messages.
                     (Bug id 4067498).                    
                </comment>
                <declaration name="newctx" type="CheckContext" line="59"/>
                <declaration name="switchType" type="Type" line="61"/>
                <declaration name="tab" type="Hashtable" line="65"/>
                <declaration name="hasDefault" type="boolean" line="66"/>
                <declaration name="vs" type="Vset" line="69"/>
                <scope line="71">
                    <declaration name="s" type="Statement" line="72"/>
                    <scope line="74">
                        <declaration name="lbl" type="Expression" line="78"/>
                        <scope line="79">
                            <scope line="80">
                                <declaration name="Ivalue" type="Integer" line="81"/>
                                <declaration name="ivalue" type="int" line="83"/>
                                <scope line="84"/>
                                <scope line="86">
                                    <declaration name="overflow" type="boolean" line="88"/>
                                    <scope line="99"/>
                                </scope>
                            </scope>
                            <scope line="104">
                                <scope line="121"/>
                            </scope>
                        </scope>
                        <scope line="125">
                            <scope line="126"/>
                        </scope>
                    </scope>
                    <scope line="131"/>
                </scope>
                <scope line="135"/>
            </method>
            <javadoc line="143">
                Inline                
            </javadoc>
            <method name="inline" type="Statement" line="146">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <scope line="149">
                    <scope line="150"/>
                </scope>
            </method>
            <javadoc line="157">
                Create a copy of the statement for method inlining                
            </javadoc>
            <method name="copyInline" type="Statement" line="160">
                <params>
                    <param name="ctx" type="Context"/>
                    <param name="valNeeded" type="boolean"/>
                </params>
                <declaration name="s" type="SwitchStatement" line="161"/>
                <scope line="164">
                    <scope line="165"/>
                </scope>
            </method>
            <javadoc line="172">
                The cost of inlining this statement                
            </javadoc>
            <method name="costInline" type="int" line="175">
                <params>
                    <param name="thresh" type="int"/>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <declaration name="cost" type="int" line="176"/>
                <scope line="177">
                    <scope line="178"/>
                </scope>
            </method>
            <javadoc line="185">
                Code                
            </javadoc>
            <method name="code" type="void" line="188">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
                <comment line="204">
                    JCOV                    
                </comment>
                <comment line="208">
                    end JCOV                    
                </comment>
                <comment line="212">
                    JCOV                    
                </comment>
                <comment line="215">
                    end JCOV                    
                </comment>
                <comment line="225">
                    JCOV                    
                </comment>
                <comment line="227">
                    end JCOV                    
                </comment>
                <comment line="230">
                    JCOV                    
                </comment>
                <comment line="232">
                    end JCOV                    
                </comment>
                <comment line="233">
                                        
                </comment>
                <declaration name="newctx" type="CodeContext" line="189"/>
                <declaration name="sw" type="SwitchData" line="193"/>
                <declaration name="hasDefault" type="boolean" line="194"/>
                <scope line="196">
                    <declaration name="s" type="Statement" line="197"/>
                    <scope line="198">
                        <declaration name="e" type="Expression" line="199"/>
                        <scope line="200"/>
                        <scope line="204"/>
                    </scope>
                </scope>
                <scope line="217">
                    <declaration name="s" type="Statement" line="218"/>
                    <scope line="219">
                        <scope line="220">
                            <declaration name="e" type="Expression" line="221"/>
                            <scope line="222"/>
                            <scope line="227"/>
                        </scope>
                        <scope line="234"/>
                    </scope>
                </scope>
                <scope line="240"/>
            </method>
            <javadoc line="246">
                Print                
            </javadoc>
            <method name="print" type="void" line="249">
                <params>
                    <param name="out" type="PrintStream"/>
                    <param name="indent" type="int"/>
                </params>
                <scope line="254">
                    <scope line="255"/>
                </scope>
            </method>
        </class>
    </source>