<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.tree">
        <import package="sun.tools.java"/>
        <import package="sun.tools.asm.Assembler"/>
        <import package="sun.tools.asm.Label"/>
        <import package="java.io.PrintStream"/>
        <import package="java.util.Hashtable"/>
        <class name="CompoundStatement" line="34">
            <extends class="Statement"/>
            <javadoc line="34">
                WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <declaration name="args" type="Statement" line="41"/>
            <javadoc line="43">
                Constructor                
            </javadoc>
            <method name="CompoundStatement" type="constructor" line="46">
                <params>
                    <param name="where" type="long"/>
                    <param name="args" type="Statement"/>
                </params>
                <comment line="50">
                    To avoid the need for subsequent null checks:                    
                </comment>
                <scope line="50">
                    <scope line="51"/>
                </scope>
            </method>
            <javadoc line="57">
                Insert a new statement at the front.
                  This is used to introduce an implicit super-class constructor call.                
            </javadoc>
            <method name="insertStatement" type="void" line="61">
                <params>
                    <param name="s" type="Statement"/>
                </params>
                <declaration name="newargs" type="Statement" line="62"/>
                <scope line="64"/>
            </method>
            <javadoc line="70">
                Check statement                
            </javadoc>
            <method name="check" type="Vset" line="73">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                </params>
                <comment line="79">
                    In this environment, &apos;resolveName&apos; will look for local classes.                    
                </comment>
                <scope line="75">
                    <declaration name="newctx" type="CheckContext" line="77"/>
                    <declaration name="newenv" type="Environment" line="79"/>
                    <scope line="80"/>
                </scope>
            </method>
            <javadoc line="88">
                Inline                
            </javadoc>
            <method name="inline" type="Statement" line="91">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <declaration name="expand" type="boolean" line="93"/>
                <declaration name="count" type="int" line="94"/>
                <scope line="95">
                    <declaration name="s" type="Statement" line="96"/>
                    <scope line="97">
                        <scope line="98">
                            <scope line="99"/>
                            <scope line="101"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="114">
                    <scope line="115"/>
                </scope>
                <scope line="121">
                    <declaration name="newArgs" type="Statement" line="122"/>
                    <scope line="123">
                        <declaration name="s" type="Statement" line="124"/>
                        <scope line="125">
                            <scope line="126">
                                <declaration name="a" type="Statement" line="127"/>
                                <scope line="128"/>
                            </scope>
                            <scope line="131"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="141">
                Create a copy of the statement for method inlining                
            </javadoc>
            <method name="copyInline" type="Statement" line="144">
                <params>
                    <param name="ctx" type="Context"/>
                    <param name="valNeeded" type="boolean"/>
                </params>
                <declaration name="s" type="CompoundStatement" line="145"/>
                <scope line="147"/>
            </method>
            <javadoc line="153">
                The cost of inlining this statement                
            </javadoc>
            <method name="costInline" type="int" line="156">
                <params>
                    <param name="thresh" type="int"/>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <declaration name="cost" type="int" line="157"/>
                <scope line="158"/>
            </method>
            <javadoc line="164">
                Code                
            </javadoc>
            <method name="code" type="void" line="167">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
                <declaration name="newctx" type="CodeContext" line="168"/>
                <scope line="169"/>
            </method>
            <javadoc line="175">
                Check if the first thing is a constructor invocation                
            </javadoc>
            <method name="firstConstructor" type="Expression" line="178"/>
            <javadoc line="182">
                Print                
            </javadoc>
            <method name="print" type="void" line="185">
                <params>
                    <param name="out" type="PrintStream"/>
                    <param name="indent" type="int"/>
                </params>
                <scope line="188">
                    <scope line="190"/>
                    <scope line="192"/>
                </scope>
            </method>
        </class>
    </source>