<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.tree">
        <import package="sun.tools.java"/>
        <import package="sun.tools.asm.Assembler"/>
        <import package="sun.tools.asm.Label"/>
        <import package="java.io.PrintStream"/>
        <import package="java.util.Hashtable"/>
        <class name="CompoundStatement" line="7">
            <extends class="Statement"/>
            <javadoc line="7">
                WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <declaration name="args" type="Statement" line="13"/>
            <javadoc line="14">
                Constructor                
            </javadoc>
            <method name="CompoundStatement" type="constructor" line="17">
                <params>
                    <param name="where" type="long"/>
                    <param name="args" type="Statement"/>
                </params>
                <scope line="20">
                    <scope line="21"/>
                </scope>
            </method>
            <javadoc line="26">
                Insert a new statement at the front.
                  This is used to introduce an implicit super-class constructor call.                
            </javadoc>
            <method name="insertStatement" type="void" line="30">
                <params>
                    <param name="s" type="Statement"/>
                </params>
                <declaration name="newargs" type="Statement" line="31"/>
                <scope line="33"/>
            </method>
            <javadoc line="38">
                Check statement                
            </javadoc>
            <method name="check" type="Vset" line="41">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                    <param name="exp" type="Hashtable"/>
                </params>
                <scope line="43">
                    <declaration name="newctx" type="CheckContext" line="45"/>
                    <declaration name="newenv" type="Environment" line="46"/>
                    <scope line="47"/>
                </scope>
            </method>
            <javadoc line="54">
                Inline                
            </javadoc>
            <method name="inline" type="Statement" line="57">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <declaration name="expand" type="boolean" line="59"/>
                <declaration name="count" type="int" line="60"/>
                <scope line="61">
                    <declaration name="s" type="Statement" line="62"/>
                    <scope line="63">
                        <scope line="64">
                            <scope line="65"/>
                            <scope line="68"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="80">
                    <scope line="81"/>
                </scope>
                <scope line="87">
                    <declaration name="newArgs" type="Statement" line="88"/>
                    <scope line="89">
                        <declaration name="s" type="Statement" line="90"/>
                        <scope line="91">
                            <scope line="92">
                                <declaration name="a" type="Statement" line="93"/>
                                <scope line="94"/>
                            </scope>
                            <scope line="98"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="107">
                Create a copy of the statement for method inlining                
            </javadoc>
            <method name="copyInline" type="Statement" line="110">
                <params>
                    <param name="ctx" type="Context"/>
                    <param name="valNeeded" type="boolean"/>
                </params>
                <declaration name="s" type="CompoundStatement" line="111"/>
                <scope line="113"/>
            </method>
            <javadoc line="118">
                The cost of inlining this statement                
            </javadoc>
            <method name="costInline" type="int" line="121">
                <params>
                    <param name="thresh" type="int"/>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <declaration name="cost" type="int" line="122"/>
                <scope line="123"/>
            </method>
            <javadoc line="128">
                Code                
            </javadoc>
            <method name="code" type="void" line="131">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
                <declaration name="newctx" type="CodeContext" line="132"/>
                <scope line="133"/>
            </method>
            <javadoc line="138">
                Check if the first thing is a constructor invocation                
            </javadoc>
            <method name="firstConstructor" type="Expression" line="141"/>
            <javadoc line="144">
                Print                
            </javadoc>
            <method name="print" type="void" line="147">
                <params>
                    <param name="out" type="PrintStream"/>
                    <param name="indent" type="int"/>
                </params>
                <scope line="150">
                    <scope line="152"/>
                    <scope line="155"/>
                </scope>
            </method>
        </class>
    </source>