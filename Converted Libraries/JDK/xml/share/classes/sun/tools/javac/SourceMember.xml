<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.javac">
        <import package="sun.tools.java"/>
        <import package="sun.tools.tree"/>
        <import package="sun.tools.asm"/>
        <import package="java.util.Vector"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.Hashtable"/>
        <import package="java.io.PrintStream"/>
        <class name="SourceMember" line="9">
            <extends class="MemberDefinition"/>
            <implements interface="Constants"/>
            <javadoc line="9">
                A Source Member
                  WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
            </javadoc>
            <declaration name="args" type="Vector" line="16"/>
            <javadoc line="16">
                The argument names (if it is a method)                
            </javadoc>
            <declaration name="abstractSource" type="MemberDefinition" line="20"/>
            <declaration name="status" type="int" line="21"/>
            <javadoc line="21">
                The status of the field                
            </javadoc>
            <declaration name="PARSED" type="int" line="25"/>
            <declaration name="CHECKING" type="int" line="26"/>
            <declaration name="CHECKED" type="int" line="27"/>
            <declaration name="INLINING" type="int" line="28"/>
            <declaration name="INLINED" type="int" line="29"/>
            <declaration name="ERROR" type="int" line="30"/>
            <method name="getArguments" type="Vector" line="31"/>
            <javadoc line="34">
                Constructor                
                <param>
                    argNames a vector of IdentifierToken                    
                </param>
            </javadoc>
            <method name="SourceMember" type="constructor" line="38">
                <params>
                    <param name="where" type="long"/>
                    <param name="clazz" type="ClassDefinition"/>
                    <param name="doc" type="String"/>
                    <param name="modifiers" type="int"/>
                    <param name="type" type="Type"/>
                    <param name="name" type="Identifier"/>
                    <param name="argNames" type="Vector"/>
                    <param name="exp" type="IdentifierToken"/>
                    <param name="value" type="Node"/>
                </params>
                <scope line="42"/>
            </method>
            <method name="createArgumentFields" type="void" line="46">
                <params>
                    <param name="argNames" type="Vector"/>
                </params>
                <scope line="47">
                    <scope line="49"/>
                    <scope line="52">
                        <declaration name="e" type="Enumeration" line="53"/>
                        <declaration name="argTypes" type="Type" line="54"/>
                        <scope line="55">
                            <declaration name="x" type="Object" line="56"/>
                            <scope line="57"/>
                            <declaration name="id" type="Identifier" line="61"/>
                            <declaration name="mod" type="int" line="62"/>
                            <declaration name="where" type="long" line="63"/>
                            <scope line="64"/>
                            <scope line="69">
                                <declaration name="token" type="IdentifierToken" line="70"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <declaration name="outerThisArg" type="LocalMember" line="80"/>
            <javadoc line="81">
                Get outer instance link, or null if none.                
            </javadoc>
            <method name="getOuterThisArg" type="LocalMember" line="84"/>
            <javadoc line="87">
                Add the outer.this argument to the list of arguments for this
                  constructor.  This is called from resolveTypeStructure.  Any
                  additional uplevel arguments get added later by addUplevelArguments().                
            </javadoc>
            <method name="addOuterThis" type="void" line="92">
                <declaration name="refs" type="UplevelReference" line="93"/>
                <scope line="94"/>
                <scope line="97"/>
                <declaration name="oldArgTypes" type="Type" line="100"/>
                <declaration name="argTypes" type="Type" line="101"/>
                <declaration name="arg" type="LocalMember" line="102"/>
                <scope line="106"/>
            </method>
            <javadoc line="111">
                Prepend argument names and argument types for local variable references.
                  This information is never seen by the type-check phase,
                  but it affects code generation, which is the earliest moment
                  we have comprehensive information on uplevel references.
                  The code() methods tweaks the constructor calls, prepending
                  the proper values to the argument list.                
            </javadoc>
            <method name="addUplevelArguments" type="void" line="119">
                <declaration name="refs" type="UplevelReference" line="120"/>
                <declaration name="count" type="int" line="122"/>
                <scope line="123">
                    <scope line="124"/>
                </scope>
                <scope line="128"/>
                <declaration name="oldArgTypes" type="Type" line="131"/>
                <declaration name="argTypes" type="Type" line="132"/>
                <declaration name="ins" type="int" line="133"/>
                <scope line="134">
                    <scope line="135">
                        <declaration name="arg" type="LocalMember" line="136"/>
                    </scope>
                </scope>
                <scope line="142"/>
            </method>
            <javadoc line="147">
                Constructor for an inner class.                
            </javadoc>
            <method name="SourceMember" type="constructor" line="150">
                <params>
                    <param name="innerClass" type="ClassDefinition"/>
                </params>
            </method>
            <javadoc line="153">
                Constructor.
                  Used only to generate an abstract copy of a method that a class
                  inherits from an interface                
            </javadoc>
            <method name="SourceMember" type="constructor" line="158">
                <params>
                    <param name="f" type="MemberDefinition"/>
                    <param name="c" type="ClassDefinition"/>
                    <param name="env" type="Environment"/>
                </params>
            </method>
            <javadoc line="164">
                Get exceptions                
            </javadoc>
            <method name="getExceptions" type="ClassDeclaration[]" line="167">
                <params>
                    <param name="env" type="Environment"/>
                </params>
                <scope line="168"/>
                <scope line="171"/>
                <scope line="177">
                    <declaration name="e" type="Identifier" line="178"/>
                    <declaration name="rexp" type="Identifier" line="179"/>
                </scope>
            </method>
            <javadoc line="184">
                Set array of name-resolved exceptions directly, e.g., for access methods.                
            </javadoc>
            <method name="setExceptions" type="void" line="187">
                <params>
                    <param name="exp" type="ClassDeclaration[]"/>
                </params>
            </method>
            <declaration name="resolved" type="boolean" line="190"/>
            <javadoc line="190">
                Resolve types in a field, after parsing.                
                <see>
                    ClassDefinition.resolveTypeStructure                    
                </see>
            </javadoc>
            <method name="resolveTypeStructure" type="void" line="195">
                <params>
                    <param name="env" type="Environment"/>
                </params>
                <scope line="197"/>
                <scope line="201"/>
                <scope line="206">
                    <declaration name="nc" type="ClassDefinition" line="207"/>
                    <scope line="208"/>
                </scope>
                <scope line="213">
                    <scope line="216">
                        <declaration name="argNames" type="Vector" line="217"/>
                        <scope line="220"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="227">
                Get the class declaration in which the field is actually defined                
            </javadoc>
            <method name="getDefiningClassDeclaration" type="ClassDeclaration" line="230"/>
            <javadoc line="234">
                A source field never reports deprecation, since the compiler
                  allows access to deprecated features that are being compiled
                  in the same job.                
            </javadoc>
            <method name="reportDeprecated" type="boolean" line="239">
                <params>
                    <param name="env" type="Environment"/>
                </params>
            </method>
            <javadoc line="242">
                Check this field.
                  &lt;p&gt;
                  This is the method which requests checking.
                  The real work is done by
                  &lt;tt&gt;Vset check(Environment, Context, Vset)&lt;/tt&gt;.                
            </javadoc>
            <method name="check" type="void" line="249">
                <params>
                    <param name="env" type="Environment"/>
                </params>
                <scope line="251">
                    <scope line="252"/>
                    <scope line="259">
                        <scope line="260"/>
                        <scope line="263"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="271">
                Check a field.                
                <param>
                    vset tells which uplevel variables are definitely assigned
                      The vset is also used to track the initialization of blank finals
                      by whichever fields which are relevant to them.                    
                </param>
            </javadoc>
            <method name="check" type="Vset" line="277">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="vset" type="Vset"/>
                </params>
                <scope line="279">
                    <scope line="280">
                        <declaration name="nc" type="ClassDefinition" line="281"/>
                        <scope line="282"/>
                    </scope>
                    <scope line="289">
                        <scope line="291"/>
                    </scope>
                    <scope line="298">
                        <declaration name="throwable" type="ClassDeclaration" line="299"/>
                        <declaration name="exp" type="ClassDeclaration" line="300"/>
                        <scope line="301">
                            <declaration name="def" type="ClassDefinition" line="302"/>
                            <declaration name="where" type="long" line="303"/>
                            <scope line="304"/>
                            <scope line="307"/>
                            <scope line="311"/>
                            <scope line="316"/>
                            <scope line="319"/>
                        </scope>
                    </scope>
                    <scope line="325">
                        <declaration name="length" type="int" line="326"/>
                        <scope line="327">
                            <declaration name="lf" type="LocalMember" line="328"/>
                            <declaration name="name_i" type="Identifier" line="329"/>
                            <scope line="330">
                                <declaration name="lf2" type="LocalMember" line="331"/>
                                <declaration name="name_j" type="Identifier" line="332"/>
                                <scope line="333"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="340">
                        <scope line="342">
                            <declaration name="s" type="Statement" line="343"/>
                            <scope line="344">
                                <declaration name="f" type="LocalMember" line="345"/>
                            </scope>
                            <scope line="348">
                                <declaration name="supCall" type="Expression" line="350"/>
                                <scope line="351">
                                    <declaration name="scs" type="Statement" line="353"/>
                                </scope>
                            </scope>
                            <declaration name="exp" type="ClassDeclaration" line="358"/>
                            <declaration name="htsize" type="int" line="359"/>
                            <declaration name="thrown" type="Hashtable" line="360"/>
                            <declaration name="ignore1" type="ClassDeclaration" line="362"/>
                            <declaration name="ignore2" type="ClassDeclaration" line="363"/>
                            <scope line="364">
                                <declaration name="c" type="ClassDeclaration" line="365"/>
                                <declaration name="def" type="ClassDefinition" line="366"/>
                                <scope line="367"/>
                                <declaration name="ok" type="boolean" line="370"/>
                                <scope line="371">
                                    <scope line="372">
                                        <scope line="373"/>
                                    </scope>
                                </scope>
                                <scope line="378">
                                    <declaration name="n" type="Node" line="379"/>
                                    <declaration name="where" type="long" line="380"/>
                                    <declaration name="errorMsg" type="String" line="381"/>
                                    <scope line="382">
                                        <scope line="383"/>
                                        <scope line="386"/>
                                    </scope>
                                    <scope line="390"/>
                                    <scope line="393"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="400">
                            <declaration name="thrown" type="Hashtable" line="401"/>
                            <declaration name="val" type="Expression" line="402"/>
                            <scope line="405">
                                <scope line="406"/>
                            </scope>
                            <declaration name="except" type="ClassDeclaration" line="411"/>
                            <declaration name="ignore1" type="ClassDeclaration" line="412"/>
                            <declaration name="ignore2" type="ClassDeclaration" line="413"/>
                            <scope line="414">
                                <declaration name="c" type="ClassDeclaration" line="415"/>
                                <declaration name="def" type="ClassDefinition" line="416"/>
                                <scope line="417">
                                    <declaration name="n" type="Node" line="418"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="423"/>
                    </scope>
                </scope>
                <scope line="430"/>
            </method>
            <method name="getDefaultSuperCall" type="Expression" line="436">
                <params>
                    <param name="env" type="Environment"/>
                </params>
                <declaration name="se" type="Expression" line="437"/>
                <declaration name="sclass" type="ClassDefinition" line="438"/>
                <declaration name="reqc" type="ClassDefinition" line="439"/>
                <declaration name="thisc" type="ClassDefinition" line="440"/>
                <scope line="441"/>
                <scope line="445"/>
            </method>
            <javadoc line="450">
                Inline the field                
            </javadoc>
            <method name="inline" type="void" line="453">
                <params>
                    <param name="env" type="Environment"/>
                </params>
                <scope line="460"/>
                <scope line="465">
                    <scope line="466">
                        <declaration name="s" type="Statement" line="467"/>
                        <declaration name="ctx" type="Context" line="468"/>
                        <scope line="469">
                            <declaration name="local" type="LocalMember" line="470"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="476">
                    <declaration name="nc" type="ClassDefinition" line="477"/>
                    <scope line="478"/>
                </scope>
                <scope line="485">
                    <scope line="486">
                        <declaration name="ctx" type="Context" line="487"/>
                        <scope line="488">
                            <declaration name="ctxInst" type="Context" line="489"/>
                            <declaration name="thisArg" type="LocalMember" line="490"/>
                        </scope>
                        <scope line="494"/>
                    </scope>
                </scope>
                <scope line="499">
                    <scope line="501"/>
                    <scope line="505"/>
                </scope>
            </method>
            <javadoc line="513">
                Get the value of the field (or null if the value can&apos;t be determined)                
            </javadoc>
            <method name="getValue" type="Node" line="516">
                <params>
                    <param name="env" type="Environment"/>
                </params>
                <declaration name="value" type="Node" line="517"/>
                <scope line="518"/>
            </method>
            <method name="isInlineable" type="boolean" line="525">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="fromFinal" type="boolean"/>
                </params>
                <scope line="526"/>
            </method>
            <javadoc line="532">
                Get the initial value of the field                
            </javadoc>
            <method name="getInitialValue" type="Object" line="535">
                <scope line="536"/>
            </method>
            <javadoc line="541">
                Generate code                
            </javadoc>
            <method name="code" type="void" line="544">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="asm" type="Assembler"/>
                </params>
                <scope line="555"/>
                <scope line="558">
                    <declaration name="ctx" type="Context" line="560"/>
                    <declaration name="s" type="Statement" line="561"/>
                    <scope line="562">
                        <declaration name="f" type="LocalMember" line="563"/>
                    </scope>
                    <scope line="566"/>
                    <scope line="569"/>
                </scope>
            </method>
            <method name="codeInit" type="void" line="576">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="ctx" type="Context"/>
                    <param name="asm" type="Assembler"/>
                </params>
                <scope line="577"/>
                <scope line="590"/>
                <scope line="593">
                    <declaration name="e" type="Expression" line="594"/>
                    <scope line="595">
                        <scope line="596"/>
                    </scope>
                    <scope line="601"/>
                </scope>
            </method>
            <javadoc line="610">
                Print for debugging                
            </javadoc>
            <method name="print" type="void" line="613">
                <params>
                    <param name="out" type="PrintStream"/>
                </params>
                <scope line="615"/>
            </method>
        </class>
    </source>