<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.net.httpserver">
        <import package="java.io"/>
        <import package="java.net"/>
        <import package="com.sun.net.httpserver"/>
        <import package="com.sun.net.httpserver.spi"/>
        <class name="ChunkedInputStream" line="33">
            <extends class="LeftOverInputStream"/>
            <comment line="41">
                                
            </comment>
            <comment line="68">
                read the chunk header line and return the chunk length
                 any chunk extensions are ignored                
            </comment>
            <comment line="160">
                called after the stream is closed to see if bytes
                 have been read from the underlying channel
                 and buffered internally                
            </comment>
            <method name="ChunkedInputStream" type="constructor" line="34">
                <params>
                    <param name="t" type="ExchangeImpl"/>
                    <param name="src" type="InputStream"/>
                </params>
            </method>
            <declaration name="remaining" type="int" line="38"/>
            <declaration name="needToReadHeader" type="boolean" line="42"/>
            <declaration name="CR" type="char" line="44"/>
            <declaration name="LF" type="char" line="45"/>
            <method name="numeric" type="int" line="47">
                <params>
                    <param name="arr" type="char[]"/>
                    <param name="nchars" type="int"/>
                </params>
                <declaration name="len" type="int" line="49"/>
                <scope line="50">
                    <declaration name="c" type="char" line="51"/>
                    <declaration name="val" type="int" line="52"/>
                    <scope line="53"/>
                    <scope line="55"/>
                    <scope line="57"/>
                    <scope line="59"/>
                </scope>
            </method>
            <method name="readChunkHeader" type="int" line="70">
                <declaration name="gotCR" type="boolean" line="71"/>
                <declaration name="c" type="int" line="72"/>
                <declaration name="len_arr" type="char[]" line="73"/>
                <declaration name="len_size" type="int" line="74"/>
                <declaration name="end_of_len" type="boolean" line="75"/>
                <scope line="77">
                    <declaration name="ch" type="char" line="78"/>
                    <scope line="79"/>
                    <scope line="82">
                        <scope line="83">
                            <declaration name="l" type="int" line="84"/>
                        </scope>
                        <scope line="86"/>
                        <scope line="89"/>
                    </scope>
                    <scope line="92">
                        <scope line="93"/>
                        <scope line="95"/>
                        <scope line="97"/>
                    </scope>
                </scope>
            </method>
            <method name="readImpl" type="int" line="105">
                <params>
                    <param name="b" type="byte[]"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="106"/>
                <scope line="109">
                    <scope line="111"/>
                </scope>
                <scope line="119"/>
                <declaration name="n" type="int" line="122"/>
                <scope line="123"/>
                <scope line="126"/>
            </method>
            <method name="consumeCRLF" type="void" line="133">
                <comment line="136">
                                        
                </comment>
                <comment line="140">
                                        
                </comment>
                <declaration name="c" type="char" line="134"/>
                <scope line="136"/>
                <scope line="140"/>
            </method>
            <javadoc line="145">
                returns the number of bytes available to read in the current chunk
                  which may be less than the real amount, but we&apos;ll live with that
                  limitation for the moment. It only affects potential efficiency
                  rather than correctness.                
            </javadoc>
            <method name="available" type="int" line="151">
                <scope line="152"/>
                <declaration name="n" type="int" line="155"/>
            </method>
            <method name="isDataBuffered" type="boolean" line="163"/>
            <method name="markSupported" type="boolean" line="168"/>
            <method name="mark" type="void" line="170">
                <params>
                    <param name="l" type="int"/>
                </params>
            </method>
            <method name="reset" type="void" line="173"/>
        </class>
    </source>