<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.net.httpserver">
        <import package="java.io"/>
        <import package="java.util"/>
        <import package="java.util.logging.Logger"/>
        <import package="com.sun.net.httpserver"/>
        <import package="com.sun.net.httpserver.spi"/>
        <class name="HttpContextImpl" line="7">
            <extends class="HttpContext"/>
            <javadoc line="7">
                HttpContext represents a mapping between a protocol (http or https) together with a root URI path
                  to a {@link HttpHandler} which is invoked to handle requests destined
                  for the protocol/path on the associated HttpServer.
                  &lt;p&gt;
                  HttpContext instances are created by {@link HttpServer#createContext(String,String,HttpHandler,Object)}&lt;p&gt;                
            </javadoc>
            <declaration name="path" type="String" line="15"/>
            <declaration name="protocol" type="String" line="16"/>
            <declaration name="handler" type="HttpHandler" line="17"/>
            <declaration name="attributes" type="Map&amp;lt;String,Object&amp;gt;" line="18"/>
            <declaration name="server" type="ServerImpl" line="19"/>
            <declaration name="sfilters" type="LinkedList&amp;lt;Filter&amp;gt;" line="20"/>
            <declaration name="ufilters" type="LinkedList&amp;lt;Filter&amp;gt;" line="21"/>
            <declaration name="authenticator" type="Authenticator" line="22"/>
            <declaration name="authfilter" type="AuthFilter" line="23"/>
            <javadoc line="24">
                constructor is package private.                
            </javadoc>
            <method name="HttpContextImpl" type="constructor" line="27">
                <params>
                    <param name="protocol" type="String"/>
                    <param name="path" type="String"/>
                    <param name="cb" type="HttpHandler"/>
                    <param name="server" type="ServerImpl"/>
                </params>
                <scope line="28"/>
                <scope line="33"/>
            </method>
            <javadoc line="41">
                returns the handler for this context                
                <return>
                    the HttpHandler for this context                    
                </return>
            </javadoc>
            <method name="getHandler" type="HttpHandler" line="45"/>
            <method name="setHandler" type="void" line="48">
                <params>
                    <param name="h" type="HttpHandler"/>
                </params>
                <scope line="49"/>
                <scope line="52"/>
            </method>
            <javadoc line="57">
                returns the path this context was created with                
                <return>
                    this context&apos;s path                    
                </return>
            </javadoc>
            <method name="getPath" type="String" line="61"/>
            <javadoc line="64">
                returns the server this context was created with                
                <return>
                    this context&apos;s server                    
                </return>
            </javadoc>
            <method name="getServer" type="HttpServer" line="68"/>
            <method name="getServerImpl" type="ServerImpl" line="71"/>
            <javadoc line="74">
                returns the protocol this context was created with                
                <return>
                    this context&apos;s path                    
                </return>
            </javadoc>
            <method name="getProtocol" type="String" line="78"/>
            <javadoc line="81">
                returns a mutable Map, which can be used to pass
                  configuration and other data to Filter modules
                  and to the context&apos;s exchange handler.
                  &lt;p&gt;
                  Every attribute stored in this Map will be visible to
                  every HttpExchange processed by this context                
            </javadoc>
            <method name="getAttributes" type="Map&lt;String,Object&gt;" line="89"/>
            <method name="getFilters" type="List&lt;Filter&gt;" line="92"/>
            <method name="getSystemFilters" type="List&lt;Filter&gt;" line="95"/>
            <method name="setAuthenticator" type="Authenticator" line="98">
                <params>
                    <param name="auth" type="Authenticator"/>
                </params>
                <declaration name="old" type="Authenticator" line="99"/>
            </method>
            <method name="getAuthenticator" type="Authenticator" line="104"/>
            <method name="getLogger" type="Logger" line="107"/>
        </class>
    </source>