<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.net.httpserver">
        <import package="java.io"/>
        <import package="java.net"/>
        <import package="com.sun.net.httpserver"/>
        <import package="com.sun.net.httpserver.spi"/>
        <class name="FixedLengthOutputStream" line="33">
            <extends class="FilterOutputStream"/>
            <comment line="104">
                flush is a pass-through                
            </comment>
            <javadoc line="33">
                a class which allows the caller to write up to a defined
                  number of bytes to an underlying stream. The caller must
                  write the pre-defined number or else an exception will be thrown
                  and the whole request aborted.
                  normal close() does not close the underlying stream                
            </javadoc>
            <declaration name="remaining" type="long" line="43"/>
            <declaration name="eof" type="boolean" line="44"/>
            <declaration name="closed" type="boolean" line="45"/>
            <declaration name="t" type="ExchangeImpl" line="46"/>
            <method name="FixedLengthOutputStream" type="constructor" line="48">
                <params>
                    <param name="t" type="ExchangeImpl"/>
                    <param name="src" type="OutputStream"/>
                    <param name="len" type="long"/>
                </params>
            </method>
            <method name="write" type="void" line="54">
                <params>
                    <param name="b" type="int"/>
                </params>
                <scope line="55"/>
                <scope line="59"/>
            </method>
            <method name="write" type="void" line="66">
                <params>
                    <param name="b" type="byte[]"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <comment line="75">
                    stream is still open, caller can retry                    
                </comment>
                <scope line="67"/>
                <scope line="71"/>
                <scope line="74"/>
            </method>
            <method name="close" type="void" line="82">
                <scope line="83"/>
                <scope line="87"/>
                <declaration name="is" type="LeftOverInputStream" line="93"/>
                <scope line="94">
                    <scope line="95"/>
                    <scope line="97"/>
                </scope>
                <declaration name="e" type="WriteFinishedEvent" line="99"/>
            </method>
        </class>
    </source>