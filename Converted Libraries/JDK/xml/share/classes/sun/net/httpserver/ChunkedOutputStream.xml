<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.net.httpserver">
        <import package="java.io"/>
        <import package="java.net"/>
        <import package="com.sun.net.httpserver"/>
        <import package="com.sun.net.httpserver.spi"/>
        <class name="ChunkedOutputStream" line="6">
            <extends class="FilterOutputStream"/>
            <javadoc line="6">
                a class which allows the caller to write an arbitrary
                  number of bytes to an underlying stream.
                  normal close() does not close the underlying stream
                  This class is buffered.
                  Each chunk is written in one go as :-
                  abcd\r\nxxxxxxxxxxxxxx\r\n
                  abcd is the chunk-size, and xxx is the chunk data
                  If the length is less than 4 chars (in size) then the buffer
                  is written with an offset.
                  Final chunk is:
                  0\r\n\r\n                
            </javadoc>
            <declaration name="closed" type="boolean" line="20"/>
            <declaration name="CHUNK_SIZE" type="int" line="21"/>
            <declaration name="OFFSET" type="int" line="22"/>
            <declaration name="pos" type="int" line="23"/>
            <declaration name="count" type="int" line="24"/>
            <declaration name="buf" type="byte[]" line="25"/>
            <declaration name="t" type="ExchangeImpl" line="26"/>
            <method name="ChunkedOutputStream" type="constructor" line="27">
                <params>
                    <param name="t" type="ExchangeImpl"/>
                    <param name="src" type="OutputStream"/>
                </params>
            </method>
            <method name="write" type="void" line="31">
                <params>
                    <param name="b" type="int"/>
                </params>
            </method>
            <method name="write" type="void" line="42">
                <params>
                    <param name="b" type="byte[]"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="43"/>
                <declaration name="remain" type="int" line="46"/>
                <scope line="47">
                    <scope line="53"/>
                </scope>
                <scope line="61"/>
                <scope line="66"/>
            </method>
            <javadoc line="70">
                write out a chunk , and reset the pointers
                  chunk does not have to be CHUNK_SIZE bytes
                  count must == number of user bytes (&lt;= CHUNK_SIZE)                
            </javadoc>
            <method name="writeChunk" type="void" line="75">
                <declaration name="c" type="char[]" line="76"/>
                <declaration name="clen" type="int" line="77"/>
                <declaration name="startByte" type="int" line="78"/>
                <declaration name="i" type="int" line="79"/>
                <scope line="80"/>
            </method>
            <method name="close" type="void" line="91">
                <scope line="92"/>
                <scope line="96">
                    <declaration name="is" type="LeftOverInputStream" line="99"/>
                    <scope line="100"/>
                </scope>
                <scope line="104"/>
                <scope line="106"/>
                <declaration name="e" type="WriteFinishedEvent" line="109"/>
            </method>
            <method name="flush" type="void" line="112">
                <scope line="113"/>
                <scope line="116"/>
            </method>
        </class>
    </source>