<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.net.util">
        <class name="IPAddressUtil" line="28">
            <comment line="34">
                Converts IPv4 address in its textual presentation form
                 into its numeric binary form.
                
                 @param src a String representing an IPv4 address in standard format
                 @return a byte array representing the IPv4 numeric address                
            </comment>
            <comment line="128">
                Convert IPv6 presentation level address to network order binary form.
                 credit:
                  Converted from C code from Solaris 8 (inet_pton)
                
                 Any component of the string following a per-cent % is ignored.
                
                 @param src a String representing an IPv6 address in textual format
                 @return a byte array representing the IPv6 numeric address                
            </comment>
            <comment line="267">
                Convert IPv4-Mapped address to IPv4 address. Both input and
                 returned value are in network order binary form.
                
                 @param src a String representing an IPv4-Mapped address in textual format
                 @return a byte array representing the IPv4 numeric address                
            </comment>
            <declaration name="INADDR4SZ" type="int" line="29"/>
            <declaration name="INADDR16SZ" type="int" line="30"/>
            <declaration name="INT16SZ" type="int" line="31"/>
            <method name="textToNumericFormatV4" type="byte[]" line="41">
                <params>
                    <param name="src" type="String"/>
                </params>
                <comment line="52">
                    When only one part is given, the value is stored directly in
                     the network address without any byte rearrangement.                    
                </comment>
                <comment line="66">
                    When a two part address is supplied, the last part is
                     interpreted as a 24-bit quantity and placed in the right
                     most three bytes of the network address. This makes the
                     two part address format convenient for specifying Class A
                     network addresses as net.host.                    
                </comment>
                <comment line="86">
                    When a three part address is specified, the last part is
                     interpreted as a 16-bit quantity and placed in the right
                     most two bytes of the network address. This makes the
                     three part address format convenient for specifying
                     Class B net- work addresses as 128.net.host.                    
                </comment>
                <comment line="106">
                    When four parts are specified, each is interpreted as a
                     byte of data and assigned, from left to right, to the
                     four bytes of an IPv4 address.                    
                </comment>
                <scope line="42"/>
                <declaration name="res" type="byte[]" line="46"/>
                <declaration name="s" type="String[]" line="47"/>
                <declaration name="val" type="long" line="48"/>
                <scope line="49">
                    <scope line="93"/>
                    <scope line="111"/>
                </scope>
                <scope line="121"/>
            </method>
            <method name="textToNumericFormatV6" type="byte[]" line="138">
                <params>
                    <param name="src" type="String"/>
                </params>
                <comment line="139">
                    Shortest valid string is &quot;::&quot;, hence at least 2 chars                    
                </comment>
                <comment line="163">
                                        
                </comment>
                <comment line="201">
                                        
                </comment>
                <comment line="218">
                                        
                </comment>
                <scope line="140"/>
                <declaration name="colonp" type="int" line="144"/>
                <declaration name="ch" type="char" line="145"/>
                <declaration name="saw_xdigit" type="boolean" line="146"/>
                <declaration name="val" type="int" line="147"/>
                <declaration name="srcb" type="char[]" line="148"/>
                <declaration name="dst" type="byte[]" line="149"/>
                <declaration name="srcb_length" type="int" line="151"/>
                <declaration name="pc" type="int" line="152"/>
                <scope line="153"/>
                <scope line="157"/>
                <declaration name="i" type="int" line="162"/>
                <declaration name="curtok" type="int" line="167"/>
                <scope line="170">
                    <declaration name="chval" type="int" line="172"/>
                    <scope line="173"/>
                    <scope line="181">
                        <scope line="183"/>
                        <scope line="188"/>
                    </scope>
                    <scope line="199">
                        <declaration name="ia4" type="String" line="200"/>
                        <declaration name="dot_count" type="int" line="202"/>
                        <scope line="203"/>
                        <scope line="207"/>
                        <declaration name="v4addr" type="byte[]" line="210"/>
                        <scope line="211"/>
                        <scope line="214"/>
                    </scope>
                </scope>
                <scope line="222"/>
                <scope line="229">
                    <declaration name="n" type="int" line="230"/>
                    <scope line="234"/>
                </scope>
                <declaration name="newdst" type="byte[]" line="242"/>
                <scope line="243"/>
                <scope line="245"/>
            </method>
            <javadoc line="250">
                @param src a String representing an IPv4 address in textual format                
                <return>
                    a boolean indicating whether src is an IPv4 literal address                    
                </return>
            </javadoc>
            <method name="isIPv4LiteralAddress" type="boolean" line="254">
                <params>
                    <param name="src" type="String"/>
                </params>
            </method>
            <javadoc line="258">
                @param src a String representing an IPv6 address in textual format                
                <return>
                    a boolean indicating whether src is an IPv6 literal address                    
                </return>
            </javadoc>
            <method name="isIPv6LiteralAddress" type="boolean" line="262">
                <params>
                    <param name="src" type="String"/>
                </params>
            </method>
            <method name="convertFromIPv4MappedAddress" type="byte[]" line="273">
                <params>
                    <param name="addr" type="byte[]"/>
                </params>
                <scope line="274">
                    <declaration name="newAddr" type="byte[]" line="275"/>
                </scope>
            </method>
            <javadoc line="282">
                Utility routine to check if the InetAddress is an
                  IPv4 mapped IPv6 address.                
                <return>
                    a <code>boolean</code> indicating if the InetAddress is
                      an IPv4 mapped IPv6 address; or false if address is IPv4 address.                    
                </return>
            </javadoc>
            <method name="isIPv4MappedAddress" type="boolean" line="289">
                <params>
                    <param name="addr" type="byte[]"/>
                </params>
                <scope line="290"/>
                <scope line="299"/>
            </method>
        </class>
    </source>