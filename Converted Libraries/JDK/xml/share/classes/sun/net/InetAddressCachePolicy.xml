<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.net">
        <import package="java.security.PrivilegedAction"/>
        <import package="java.security.Security"/>
        <class name="InetAddressCachePolicy" line="31">
            <comment line="34">
                Controls the cache policy for successful lookups only                
            </comment>
            <comment line="39">
                Controls the cache policy for negative lookups only                
            </comment>
            <comment line="48">
                                
            </comment>
            <comment line="51">
                The Java-level namelookup cache policy for successful lookups:
                
                 -1: caching forever
                 any positive value: the number of seconds to cache an address for
                
                 default value is forever (FOREVER), as we let the platform do the
                 caching. For security reasons, this caching is made forever when
                 a security manager is set.                
            </comment>
            <comment line="62">
                The Java-level namelookup cache policy for negative lookups:
                
                 -1: caching forever
                 any positive value: the number of seconds to cache an address for
                
                 default value is 0. It can be set to some other value for
                 performance reasons.                
            </comment>
            <comment line="72">
                Whether or not the cache policy for successful lookups was set
                 using a property (cmd line).                
            </comment>
            <comment line="78">
                Whether or not the cache policy for negative lookups was set
                 using a property (cmd line).                
            </comment>
            <comment line="84">
                Initialize                
            </comment>
            <declaration name="cachePolicyProp" type="String" line="34"/>
            <declaration name="cachePolicyPropFallback" type="String" line="35"/>
            <declaration name="negativeCachePolicyProp" type="String" line="39"/>
            <declaration name="negativeCachePolicyPropFallback" type="String" line="41"/>
            <declaration name="FOREVER" type="int" line="44"/>
            <declaration name="NEVER" type="int" line="45"/>
            <declaration name="DEFAULT_POSITIVE" type="int" line="48"/>
            <declaration name="cachePolicy" type="int" line="59"/>
            <declaration name="negativeCachePolicy" type="int" line="69"/>
            <declaration name="propertySet" type="boolean" line="75"/>
            <declaration name="propertyNegativeSet" type="boolean" line="81"/>
            <scope line="86">
                <declaration name="tmp" type="Integer" line="87"/>
                <scope line="89">
                    <anonymous_class line="92">
                        <method name="run" type="String" line="93"/>
                    </anonymous_class>
                </scope>
                <scope line="97"/>
                <scope line="100">
                    <scope line="102"/>
                </scope>
                <scope line="106">
                    <scope line="109">
                        <scope line="111"/>
                    </scope>
                    <scope line="115">
                        <scope line="119"/>
                    </scope>
                </scope>
                <scope line="125">
                    <anonymous_class line="128">
                        <method name="run" type="String" line="129"/>
                    </anonymous_class>
                </scope>
                <scope line="133"/>
                <scope line="137">
                    <scope line="139"/>
                </scope>
                <scope line="143">
                    <scope line="146">
                        <scope line="148"/>
                    </scope>
                </scope>
            </scope>
            <method name="get" type="int" line="156"/>
            <method name="getNegative" type="int" line="160"/>
            <javadoc line="164">
                Sets the cache policy for successful lookups if the user has not
                  already specified a cache policy for it using a
                  command-property.                
                <param>
                    newPolicy the value in seconds for how long the lookup
                      should be cached                    
                </param>
            </javadoc>
            <method name="setIfNotSet" type="void" line="171">
                <params>
                    <param name="newPolicy" type="int"/>
                </params>
                <comment line="173">
                    When setting the new value we may want to signal that the
                     cache should be flushed, though this doesn&apos;t seem strictly
                     necessary.                    
                </comment>
                <scope line="177"/>
            </method>
            <javadoc line="183">
                Sets the cache policy for negative lookups if the user has not
                  already specified a cache policy for it using a
                  command-property.                
                <param>
                    newPolicy the value in seconds for how long the lookup
                      should be cached                    
                </param>
            </javadoc>
            <method name="setNegativeIfNotSet" type="void" line="190">
                <params>
                    <param name="newPolicy" type="int"/>
                </params>
                <comment line="192">
                    When setting the new value we may want to signal that the
                     cache should be flushed, though this doesn&apos;t seem strictly
                     necessary.                    
                </comment>
                <comment line="198">
                    Negative caching does not seem to have any security
                     implications.
                     checkValue(newPolicy, negativeCachePolicy);                    
                </comment>
                <scope line="196"/>
            </method>
            <method name="checkValue" type="void" line="204">
                <params>
                    <param name="newPolicy" type="int"/>
                    <param name="oldPolicy" type="int"/>
                </params>
                <comment line="206">
                    If malicious code gets a hold of this method, prevent
                     setting the cache policy to something laxer or some
                     invalid negative value.                    
                </comment>
                <scope line="215"/>
            </method>
        </class>
    </source>