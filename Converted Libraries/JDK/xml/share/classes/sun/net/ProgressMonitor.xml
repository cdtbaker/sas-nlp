<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.net">
        <import package="java.util.ArrayList"/>
        <import package="java.util.Iterator"/>
        <import package="java.net.URL"/>
        <class name="ProgressMonitor" line="32">
            <comment line="223">
                Metering policy                
            </comment>
            <comment line="226">
                Default implementation                
            </comment>
            <comment line="229">
                ArrayList for outstanding progress sources                
            </comment>
            <comment line="232">
                ArrayList for progress listeners                
            </comment>
            <javadoc line="32">
                ProgressMonitor is a class for monitoring progress in network input stream.                
                <author>
                    Stanley Man-Kit Ho                    
                </author>
            </javadoc>
            <javadoc line="39">
                Return default ProgressMonitor.                
            </javadoc>
            <method name="getDefault" type="ProgressMonitor" line="42"/>
            <javadoc line="46">
                Change default ProgressMonitor implementation.                
            </javadoc>
            <method name="setDefault" type="void" line="49">
                <params>
                    <param name="m" type="ProgressMonitor"/>
                </params>
            </method>
            <javadoc line="54">
                Change progress metering policy.                
            </javadoc>
            <method name="setMeteringPolicy" type="void" line="57">
                <params>
                    <param name="policy" type="ProgressMeteringPolicy"/>
                </params>
            </method>
            <javadoc line="63">
                Return a snapshot of the ProgressSource list                
            </javadoc>
            <method name="getProgressSources" type="ArrayList<ProgressSource>" line="66">
                <comment line="75">
                    Clone ProgressSource and add to snapshot                    
                </comment>
                <declaration name="snapshot" type="ArrayList&lt;ProgressSource&gt;" line="67"/>
                <scope line="69">
                    <scope line="70">
                        <scope line="71">
                            <declaration name="pi" type="ProgressSource" line="72"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="79"/>
            </method>
            <javadoc line="86">
                Return update notification threshold                
            </javadoc>
            <method name="getProgressUpdateThreshold" type="int" line="89"/>
            <javadoc line="93">
                Return true if metering should be turned on
                  for a particular URL input stream.                
            </javadoc>
            <method name="shouldMeterInput" type="boolean" line="97">
                <params>
                    <param name="url" type="URL"/>
                    <param name="method" type="String"/>
                </params>
            </method>
            <javadoc line="101">
                Register progress source when progress is began.                
            </javadoc>
            <method name="registerSource" type="void" line="104">
                <params>
                    <param name="pi" type="ProgressSource"/>
                </params>
                <comment line="114">
                    Notify only if there is at least one listener                    
                </comment>
                <comment line="117">
                    Notify progress listener if there is progress change                    
                </comment>
                <comment line="120">
                    Copy progress listeners to another list to avoid holding locks                    
                </comment>
                <comment line="127">
                    Fire event on each progress listener                    
                </comment>
                <scope line="106"/>
                <scope line="115">
                    <declaration name="listeners" type="ArrayList&lt;ProgressListener&gt;" line="117"/>
                    <scope line="120">
                        <scope line="121"/>
                    </scope>
                    <scope line="127">
                        <declaration name="pl" type="ProgressListener" line="128"/>
                        <declaration name="pe" type="ProgressEvent" line="129"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="135">
                Unregister progress source when progress is finished.                
            </javadoc>
            <method name="unregisterSource" type="void" line="138">
                <params>
                    <param name="pi" type="ProgressSource"/>
                </params>
                <comment line="142">
                    Return if ProgressEvent does not exist                    
                </comment>
                <comment line="146">
                    Close entry and remove from map                    
                </comment>
                <comment line="151">
                    Notify only if there is at least one listener                    
                </comment>
                <comment line="154">
                    Notify progress listener if there is progress change                    
                </comment>
                <comment line="157">
                    Copy progress listeners to another list to avoid holding locks                    
                </comment>
                <comment line="164">
                    Fire event on each progress listener                    
                </comment>
                <scope line="140"/>
                <scope line="152">
                    <declaration name="listeners" type="ArrayList&lt;ProgressListener&gt;" line="154"/>
                    <scope line="157">
                        <scope line="158"/>
                    </scope>
                    <scope line="164">
                        <declaration name="pl" type="ProgressListener" line="165"/>
                        <declaration name="pe" type="ProgressEvent" line="166"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="172">
                Progress source is updated.                
            </javadoc>
            <method name="updateProgress" type="void" line="175">
                <params>
                    <param name="pi" type="ProgressSource"/>
                </params>
                <comment line="183">
                    Notify only if there is at least one listener                    
                </comment>
                <comment line="186">
                    Notify progress listener if there is progress change                    
                </comment>
                <comment line="189">
                    Copy progress listeners to another list to avoid holding locks                    
                </comment>
                <comment line="196">
                    Fire event on each progress listener                    
                </comment>
                <scope line="177"/>
                <scope line="184">
                    <declaration name="listeners" type="ArrayList&lt;ProgressListener&gt;" line="186"/>
                    <scope line="189">
                        <scope line="190"/>
                    </scope>
                    <scope line="196">
                        <declaration name="pl" type="ProgressListener" line="197"/>
                        <declaration name="pe" type="ProgressEvent" line="198"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="204">
                Add progress listener in progress monitor.                
            </javadoc>
            <method name="addProgressListener" type="void" line="207">
                <params>
                    <param name="l" type="ProgressListener"/>
                </params>
                <scope line="208"/>
            </method>
            <javadoc line="213">
                Remove progress listener from progress monitor.                
            </javadoc>
            <method name="removeProgressListener" type="void" line="216">
                <params>
                    <param name="l" type="ProgressListener"/>
                </params>
                <scope line="217"/>
            </method>
            <declaration name="meteringPolicy" type="ProgressMeteringPolicy" line="223"/>
            <declaration name="pm" type="ProgressMonitor" line="226"/>
            <declaration name="progressSourceList" type="ArrayList&lt;ProgressSource&gt;" line="229"/>
            <declaration name="progressListenerList" type="ArrayList&lt;ProgressListener&gt;" line="232"/>
        </class>
        <class name="DefaultProgressMeteringPolicy" line="236">
            <comment line="223">
                Metering policy                
            </comment>
            <comment line="226">
                Default implementation                
            </comment>
            <comment line="229">
                ArrayList for outstanding progress sources                
            </comment>
            <comment line="232">
                ArrayList for progress listeners                
            </comment>
            <implements interface="ProgressMeteringPolicy"/>
            <javadoc line="236">
                Default progress metering policy.                
            </javadoc>
            <javadoc line="240">
                Return true if metering should be turned on for a particular network input stream.                
            </javadoc>
            <method name="shouldMeterInput" type="boolean" line="244">
                <params>
                    <param name="url" type="URL"/>
                    <param name="method" type="String"/>
                </params>
                <comment line="246">
                    By default, no URL input stream is metered for
                     performance reason.                    
                </comment>
            </method>
            <javadoc line="250">
                Return update notification threshold.                
            </javadoc>
            <method name="getProgressUpdateThreshold" type="int" line="253">
                <comment line="255">
                    8K - same as default I/O buffer size                    
                </comment>
            </method>
        </class>
    </source>