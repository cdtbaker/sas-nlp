<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.net.www.protocol.mailto">
        <import package="java.net.URL"/>
        <import package="java.net.URLConnection"/>
        <import package="java.net.URLStreamHandler"/>
        <import package="java.io"/>
        <import package="sun.net.www"/>
        <import package="sun.net.smtp.SmtpClient"/>
        <class name="Handler" line="40">
            <extends class="URLStreamHandler"/>
            <comment line="44">
                private String decodePercent(String s) {
                      if (s==null || s.indexOf(&apos;%&apos;) &lt; 0)
                          return s;
                      int limit = s.length();
                      char d[] = new char[limit];
                      int dp = 0;
                      for (int sp = 0; sp &lt; limit; sp++) {
                          int c = s.charAt(sp);
                          if (c == &apos;%&apos; &amp;&amp; sp + 2 &lt; limit) {
                              int s1 = s.charAt(sp + 1);
                              int s2 = s.charAt(sp + 2);
                              if (&apos;0&apos; &lt;= s1 &amp;&amp; s1 &lt;= &apos;9&apos;)
                                  s1 = s1 - &apos;0&apos;;
                              else if (&apos;a&apos; &lt;= s1 &amp;&amp; s1 &lt;= &apos;f&apos;)
                                  s1 = s1 - &apos;a&apos; + 10;
                              else if (&apos;A&apos; &lt;= s1 &amp;&amp; s1 &lt;= &apos;F&apos;)
                                  s1 = s1 - &apos;A&apos; + 10;
                              else
                                  s1 = -1;
                              if (&apos;0&apos; &lt;= s2 &amp;&amp; s2 &lt;= &apos;9&apos;)
                                  s2 = s2 - &apos;0&apos;;
                              else if (&apos;a&apos; &lt;= s2 &amp;&amp; s2 &lt;= &apos;f&apos;)
                                  s2 = s2 - &apos;a&apos; + 10;
                              else if (&apos;A&apos; &lt;= s2 &amp;&amp; s2 &lt;= &apos;F&apos;)
                                  s2 = s2 - &apos;A&apos; + 10;
                              else
                                  s2 = -1;
                              if (s1 &gt;= 0 &amp;&amp; s2 &gt;= 0) {
                                  c = (s1 &lt;&lt; 4) | s2;
                                  sp += 2;
                              }
                          }
                          d[dp++] = (char) c;
                      }
                      return new String(d, 0, dp);
                     }
                
                     public InputStream openStream(URL u) {
                          String dest = u.file;
                          String subj = &quot;&quot;;
                          int lastsl = dest.lastIndexOf(&apos;&apos;);
                          if (lastsl &gt;= 0) {
                              int st = dest.charAt(0) == &apos;&apos; ? 1 : 0;
                              if (lastsl &gt; st)
                                  subj = dest.substring(st, lastsl);
                              dest = dest.substring(lastsl + 1);
                          }
                          if (u.postData != null) {
                              ArticlePoster.MailTo(&quot;Posted form&quot;,
                                                   decodePercent(dest),
                                                   u.postData);
                          }
                          else
                              ArticlePoster.MailTo(decodePercent(subj), decodePercent(dest));
                      return null;
                     }                
            </comment>
            <javadoc line="40">
                open an nntp input stream given a URL                
            </javadoc>
            <method name="openConnection" type="URLConnection" line="102">
                <params>
                    <param name="u" type="URL"/>
                </params>
            </method>
            <javadoc line="106">
                This method is called to parse the string spec into URL u for a
                  mailto protocol.                
                <param>
                    u the URL to receive the result of parsing the spec                    
                </param>
                <param>
                    spec the URL string to parse                    
                </param>
                <param>
                    start the character position to start parsing at.  This is
                      just past the ':'.                    
                </param>
                <param>
                    limit the character position to stop parsing at.                    
                </param>
            </javadoc>
            <method name="parseURL" type="void" line="116">
                <params>
                    <param name="u" type="URL"/>
                    <param name="spec" type="String"/>
                    <param name="start" type="int"/>
                    <param name="limit" type="int"/>
                </params>
                <comment line="127">
                    Let&apos;s just make sure we DO have an Email address in the URL.                    
                </comment>
                <declaration name="protocol" type="String" line="118"/>
                <declaration name="host" type="String" line="119"/>
                <declaration name="port" type="int" line="120"/>
                <declaration name="file" type="String" line="121"/>
                <scope line="123"/>
                <declaration name="nogood" type="boolean" line="129"/>
                <scope line="132">
                    <declaration name="allwhites" type="boolean" line="133"/>
                </scope>
            </method>
        </class>
    </source>