<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.net.www">
        <import package="java.util.Iterator"/>
        <class name="HeaderParser" line="3">
            <declaration name="raw" type="String" line="4"/>
            <declaration name="tab" type="String[][]" line="5"/>
            <declaration name="nkeys" type="int" line="6"/>
            <declaration name="asize" type="int" line="7"/>
            <method name="HeaderParser" type="constructor" line="8">
                <params>
                    <param name="raw" type="String"/>
                </params>
            </method>
            <method name="HeaderParser" type="constructor" line="13"/>
            <javadoc line="15">
                create a new HeaderParser from this, whose keys (and corresponding values)
                  range from &quot;start&quot; to &quot;end-1&quot;                
            </javadoc>
            <method name="subsequence" type="HeaderParser" line="19">
                <params>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <scope line="20"/>
                <declaration name="n" type="HeaderParser" line="24"/>
            </method>
            <method name="parse" type="void" line="31">
                <scope line="32">
                    <declaration name="ca" type="char[]" line="34"/>
                    <declaration name="beg" type="int" line="35"/>
                    <declaration name="inKey" type="boolean" line="36"/>
                    <declaration name="inQuote" type="boolean" line="37"/>
                    <declaration name="len" type="int" line="38"/>
                    <scope line="39">
                        <declaration name="c" type="char" line="40"/>
                        <scope line="41"/>
                        <scope line="47">
                            <scope line="48">
                                <scope line="51"/>
                            </scope>
                            <scope line="58"/>
                        </scope>
                        <scope line="64">
                            <scope line="65"/>
                            <scope line="69"/>
                            <scope line="72"/>
                            <scope line="75"/>
                        </scope>
                        <scope line="81"/>
                        <scope line="84">
                            <declaration name="ntab" type="String[][]" line="86"/>
                        </scope>
                    </scope>
                    <scope line="91">
                        <scope line="92">
                            <scope line="93"/>
                            <scope line="96"/>
                        </scope>
                        <scope line="100"/>
                    </scope>
                    <scope line="104">
                        <scope line="105">
                            <scope line="106"/>
                            <scope line="109"/>
                        </scope>
                        <scope line="113"/>
                    </scope>
                </scope>
            </method>
            <method name="findKey" type="String" line="120">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="findValue" type="String" line="124">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="findValue" type="String" line="128">
                <params>
                    <param name="key" type="String"/>
                </params>
            </method>
            <method name="findValue" type="String" line="131">
                <params>
                    <param name="k" type="String"/>
                    <param name="Default" type="String"/>
                </params>
                <scope line="134">
                    <scope line="135"/>
                    <scope line="138"/>
                </scope>
            </method>
            <class name="ParserIterator" line="144">
                <implements interface="Iterator"/>
                <declaration name="index" type="int" line="145"/>
                <declaration name="returnsValue" type="boolean" line="146"/>
                <method name="ParserIterator" type="constructor" line="147">
                    <params>
                        <param name="returnValue" type="boolean"/>
                    </params>
                </method>
                <method name="hasNext" type="boolean" line="150"/>
                <method name="next" type="Object" line="153"/>
                <method name="remove" type="void" line="156"/>
            </class>
            <method name="keys" type="Iterator" line="160"/>
            <method name="values" type="Iterator" line="163"/>
            <method name="toString" type="String" line="166">
                <declaration name="k" type="Iterator" line="167"/>
                <declaration name="sbuf" type="StringBuffer" line="168"/>
                <scope line="170">
                    <declaration name="key" type="String" line="171"/>
                    <declaration name="val" type="String" line="172"/>
                    <scope line="173"/>
                    <scope line="177"/>
                </scope>
            </method>
            <method name="findInt" type="int" line="184">
                <params>
                    <param name="k" type="String"/>
                    <param name="Default" type="int"/>
                </params>
                <scope line="185"/>
                <scope line="188"/>
            </method>
        </class>
    </source>