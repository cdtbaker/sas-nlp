<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.net.www.protocol.http.spnego">
        <import package="com.sun.security.jgss.ExtendedGSSContext"/>
        <import package="java.io.IOException"/>
        <import package="org.ietf.jgss.GSSContext"/>
        <import package="org.ietf.jgss.GSSException"/>
        <import package="org.ietf.jgss.GSSName"/>
        <import package="org.ietf.jgss.Oid"/>
        <import package="sun.net.www.protocol.http.HttpCallerInfo"/>
        <import package="sun.net.www.protocol.http.Negotiator"/>
        <import package="sun.security.jgss.GSSManagerImpl"/>
        <import package="sun.security.jgss.GSSUtil"/>
        <import package="sun.security.jgss.HttpCaller"/>
        <class name="NegotiatorImpl" line="42">
            <extends class="Negotiator"/>
            <javadoc line="42">
                This class encapsulates all JAAS and JGSS API calls in a separate class
                  outside NegotiateAuthentication.java so that J2SE build can go smoothly
                  without the presence of it.                
                <author>
                    weijun.wang@sun.com                    
                </author>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="DEBUG" type="boolean" line="52"/>
            <declaration name="context" type="GSSContext" line="56"/>
            <declaration name="oneToken" type="byte[]" line="57"/>
            <javadoc line="59">
                Initialize the object, which includes:&lt;ul&gt;
                  &lt;li&gt;Find out what GSS mechanism to use from the system property
                  &lt;code&gt;http.negotiate.mechanism.oid&lt;/code&gt;, defaults SPNEGO
                  &lt;li&gt;Creating the GSSName for the target host, &quot;HTTP/&quot;+hostname
                  &lt;li&gt;Creating GSSContext
                  &lt;li&gt;A first call to initSecContext&lt;/ul&gt;                
            </javadoc>
            <method name="init" type="void" line="67">
                <params>
                    <param name="hci" type="HttpCallerInfo"/>
                </params>
                <comment line="72">
                    we can only use Kerberos mech when the scheme is kerberos                    
                </comment>
                <comment line="86">
                    currently there is no 3rd mech we can use                    
                </comment>
                <comment line="94">
                    RFC 4559 4.1 uses uppercase service name &quot;HTTP&quot;.
                     RFC 4120 6.2.1 demands the host be lowercase                    
                </comment>
                <comment line="105">
                    Always respect delegation policy in HTTP/SPNEGO.                    
                </comment>
                <declaration name="oid" type="Oid" line="68"/>
                <scope line="70"/>
                <scope line="73">
                    <anonymous_class line="75">
                        <method name="run" type="String" line="76"/>
                    </anonymous_class>
                    <declaration name="pref" type="String" line="74"/>
                    <scope line="82"/>
                    <scope line="84"/>
                </scope>
                <declaration name="manager" type="GSSManagerImpl" line="90"/>
                <declaration name="peerName" type="String" line="95"/>
                <declaration name="serverName" type="GSSName" line="97"/>
                <scope line="105"/>
            </method>
            <javadoc line="111">
                Constructor                
                <throws>
                    java.io.IOException If negotiator cannot be constructed                    
                </throws>
            </javadoc>
            <method name="NegotiatorImpl" type="constructor" line="115">
                <params>
                    <param name="hci" type="HttpCallerInfo"/>
                </params>
                <scope line="116"/>
                <scope line="118">
                    <scope line="119"/>
                    <declaration name="ioe" type="IOException" line="124"/>
                </scope>
            </method>
            <javadoc line="130">
                Return the first token of GSS, in SPNEGO, it&apos;s called NegTokenInit                
                <return>
                    the first token                    
                </return>
            </javadoc>
            <method name="firstToken" type="byte[]" line="135"/>
            <javadoc line="139">
                Return the rest tokens of GSS, in SPNEGO, it&apos;s called NegTokenTarg                
                <param>
                    token the token received from server                    
                </param>
                <return>
                    the next token                    
                </return>
                <throws>
                    java.io.IOException if the token cannot be created successfully                    
                </throws>
            </javadoc>
            <method name="nextToken" type="byte[]" line="146">
                <params>
                    <param name="token" type="byte[]"/>
                </params>
                <scope line="147"/>
                <scope line="149">
                    <scope line="150"/>
                    <declaration name="ioe" type="IOException" line="154"/>
                </scope>
            </method>
        </class>
    </source>