<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.net.www.protocol.http.logging">
        <import package="java.util.logging.LogRecord"/>
        <import package="java.util.regex"/>
        <class name="HttpLogFormatter" line="31">
            <extends class="java.util.logging.SimpleFormatter"/>
            <comment line="39">
                Pattern for MessageHeader data. Mostly pairs within curly brackets                
            </comment>
            <comment line="41">
                Pattern for Cookies                
            </comment>
            <javadoc line="31">
                A Formatter to make the HTTP logs a bit more palatable to the developer
                  looking at them. The idea is to present the HTTP events in such a way that
                  commands and headers are easily spotted (i.e. on separate lines).                
                <author>
                    jccollet                    
                </author>
            </javadoc>
            <declaration name="pattern" type="Pattern" line="39"/>
            <declaration name="cpattern" type="Pattern" line="41"/>
            <method name="HttpLogFormatter" type="constructor" line="43">
                <scope line="44"/>
            </method>
            <method name="format" type="String" line="51">
                <params>
                    <param name="record" type="LogRecord"/>
                </params>
                <comment line="61">
                    MessageHeader logs are composed of pairs within curly brackets                    
                </comment>
                <comment line="62">
                    Let&apos;s extract them to make it more readable. That way we get one                    
                </comment>
                <comment line="63">
                    header pair (name, value) per line. A lot easier to read.                    
                </comment>
                <comment line="78">
                    This comes from the Cookie handler, let&apos;s clean up the format a bit                    
                </comment>
                <comment line="125">
                    Anything else we let as is.                    
                </comment>
                <declaration name="sourceClassName" type="String" line="52"/>
                <scope line="55"/>
                <declaration name="src" type="String" line="58"/>
                <declaration name="buf" type="StringBuilder" line="59"/>
                <scope line="60">
                    <declaration name="match" type="Matcher" line="64"/>
                    <scope line="65">
                        <declaration name="i" type="int" line="66"/>
                        <declaration name="j" type="int" line="67"/>
                        <declaration name="s" type="String" line="68"/>
                        <scope line="69"/>
                        <scope line="72"/>
                    </scope>
                </scope>
                <scope line="77">
                    <declaration name="s" type="String" line="79"/>
                    <scope line="81">
                        <scope line="82">
                            <declaration name="s2" type="String" line="83"/>
                            <declaration name="c" type="int" line="84"/>
                            <scope line="85"/>
                            <scope line="88"/>
                            <scope line="91"/>
                            <declaration name="m" type="Matcher" line="94"/>
                            <scope line="95">
                                <declaration name="i" type="int" line="96"/>
                                <declaration name="j" type="int" line="97"/>
                                <scope line="98">
                                    <declaration name="cookie" type="String" line="99"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="104">
                            <declaration name="s2" type="String" line="105"/>
                            <declaration name="c" type="int" line="106"/>
                            <scope line="107"/>
                            <scope line="110"/>
                            <declaration name="m" type="Matcher" line="113"/>
                            <scope line="114">
                                <declaration name="i" type="int" line="115"/>
                                <declaration name="j" type="int" line="116"/>
                                <scope line="117">
                                    <declaration name="cookie" type="String" line="118"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="124"/>
            </method>
        </class>
    </source>