<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.net.www.http">
        <import package="java.io"/>
        <import package="java.net"/>
        <import package="java.util.Locale"/>
        <import package="sun.net.NetworkClient"/>
        <import package="sun.net.ProgressSource"/>
        <import package="sun.net.www.MessageHeader"/>
        <import package="sun.net.www.HeaderParser"/>
        <import package="sun.net.www.MeteredStream"/>
        <import package="sun.net.www.ParseUtil"/>
        <import package="sun.net.www.protocol.http.HttpURLConnection"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <class name="HttpClient" line="13">
            <extends class="NetworkClient"/>
            <javadoc line="13">
                @author Herb Jellinek                
                <author>
                    Dave Brown                    
                </author>
            </javadoc>
            <declaration name="cachedHttpClient" type="boolean" line="18"/>
            <declaration name="inCache" type="boolean" line="19"/>
            <declaration name="cookieHandler" type="CookieHandler" line="20"/>
            <declaration name="requests" type="MessageHeader" line="21"/>
            <declaration name="poster" type="PosterOutputStream" line="22"/>
            <declaration name="streaming" type="boolean" line="23"/>
            <declaration name="failedOnce" type="boolean" line="24"/>
            <declaration name="ignoreContinue" type="boolean" line="25"/>
            <javadoc line="25">
                Response code for CONTINUE                
            </javadoc>
            <declaration name="HTTP_CONTINUE" type="int" line="29"/>
            <declaration name="httpPortNumber" type="int" line="30"/>
            <javadoc line="30">
                Default port number for http daemons. REMIND: make these private                
            </javadoc>
            <javadoc line="34">
                return default port number (subclasses may override)                
            </javadoc>
            <method name="getDefaultPort" type="int" line="37"/>
            <method name="getDefaultPort" type="int" line="40">
                <params>
                    <param name="proto" type="String"/>
                </params>
            </method>
            <declaration name="proxyDisabled" type="boolean" line="45"/>
            <declaration name="usingProxy" type="boolean" line="46"/>
            <declaration name="host" type="String" line="47"/>
            <declaration name="port" type="int" line="48"/>
            <declaration name="kac" type="KeepAliveCache" line="49"/>
            <declaration name="keepAliveProp" type="boolean" line="50"/>
            <declaration name="retryPostProp" type="boolean" line="51"/>
            <declaration name="keepingAlive" type="boolean" line="52"/>
            <declaration name="keepAliveConnections" type="int" line="53"/>
            <declaration name="keepAliveTimeout" type="int" line="54"/>
            <javadoc line="54">
                Idle timeout value, in milliseconds. Zero means infinity,
                  iff keepingAlive=true.
                  Unfortunately, we can&apos;t always believe this one.  If I&apos;m connected
                  through a Netscape proxy to a server that sent me a keep-alive
                  time of 15 sec, the proxy unilaterally terminates my connection
                  after 5 sec.  So we have to hard code our effective timeout to
                  4 sec for the case where we&apos;re using a proxy. SIGH                
            </javadoc>
            <declaration name="cacheRequest" type="CacheRequest" line="64"/>
            <javadoc line="64">
                whether the response is to be cached                
            </javadoc>
            <declaration name="url" type="URL" line="68"/>
            <javadoc line="68">
                Url being fetched.                
            </javadoc>
            <declaration name="reuse" type="boolean" line="72"/>
            <declaration name="capture" type="HttpCapture" line="73"/>
            <javadoc line="74">
                A NOP method kept for backwards binary compatibility                
                <deprecated>
                    -- system properties are no longer cached.                    
                </deprecated>
            </javadoc>
            <method name="resetProperties" type="void" line="78"/>
            <method name="getKeepAliveTimeout" type="int" line="80"/>
            <scope line="83">
                <declaration name="keepAlive" type="String" line="84"/>
                <declaration name="retryPost" type="String" line="85"/>
                <scope line="86"/>
                <scope line="89"/>
                <scope line="92"/>
            </scope>
            <javadoc line="97">
                @return true iff http keep alive is set (i.e. enabled).  Defaults
                  to true if the system property http.keepAlive isn&apos;t set.                
            </javadoc>
            <method name="getHttpKeepAliveSet" type="boolean" line="101"/>
            <method name="HttpClient" type="constructor" line="104"/>
            <method name="HttpClient" type="constructor" line="106">
                <params>
                    <param name="url" type="URL"/>
                </params>
            </method>
            <method name="HttpClient" type="constructor" line="109">
                <params>
                    <param name="url" type="URL"/>
                    <param name="proxyDisabled" type="boolean"/>
                </params>
            </method>
            <method name="HttpClient" type="constructor" line="112">
                <params>
                    <param name="url" type="URL"/>
                    <param name="proxyHost" type="String"/>
                    <param name="proxyPort" type="int"/>
                </params>
            </method>
            <method name="HttpClient" type="constructor" line="115">
                <params>
                    <param name="url" type="URL"/>
                    <param name="p" type="Proxy"/>
                    <param name="to" type="int"/>
                </params>
                <scope line="120"/>
                <anonymous_class line="124">
                    <method name="run" type="CookieHandler" line="125"/>
                </anonymous_class>
            </method>
            <method name="newHttpProxy" type="Proxy" line="133">
                <params>
                    <param name="proxyHost" type="String"/>
                    <param name="proxyPort" type="int"/>
                    <param name="proto" type="String"/>
                </params>
                <declaration name="pport" type="int" line="135"/>
                <declaration name="saddr" type="InetSocketAddress" line="136"/>
            </method>
            <method name="HttpClient" type="constructor" line="139">
                <params>
                    <param name="url" type="URL"/>
                    <param name="proxyHost" type="String"/>
                    <param name="proxyPort" type="int"/>
                    <param name="proxyDisabled" type="boolean"/>
                </params>
            </method>
            <method name="HttpClient" type="constructor" line="142">
                <params>
                    <param name="url" type="URL"/>
                    <param name="proxyHost" type="String"/>
                    <param name="proxyPort" type="int"/>
                    <param name="proxyDisabled" type="boolean"/>
                    <param name="to" type="int"/>
                </params>
            </method>
            <method name="New" type="HttpClient" line="145">
                <params>
                    <param name="url" type="URL"/>
                </params>
            </method>
            <method name="New" type="HttpClient" line="148">
                <params>
                    <param name="url" type="URL"/>
                    <param name="useCache" type="boolean"/>
                </params>
            </method>
            <method name="New" type="HttpClient" line="151">
                <params>
                    <param name="url" type="URL"/>
                    <param name="p" type="Proxy"/>
                    <param name="to" type="int"/>
                    <param name="useCache" type="boolean"/>
                </params>
            </method>
            <method name="New" type="HttpClient" line="196">
                <params>
                    <param name="url" type="URL"/>
                    <param name="p" type="Proxy"/>
                    <param name="to" type="int"/>
                </params>
            </method>
            <method name="New" type="HttpClient" line="199">
                <params>
                    <param name="url" type="URL"/>
                    <param name="proxyHost" type="String"/>
                    <param name="proxyPort" type="int"/>
                    <param name="useCache" type="boolean"/>
                </params>
            </method>
            <method name="New" type="HttpClient" line="202">
                <params>
                    <param name="url" type="URL"/>
                    <param name="proxyHost" type="String"/>
                    <param name="proxyPort" type="int"/>
                    <param name="useCache" type="boolean"/>
                    <param name="to" type="int"/>
                </params>
            </method>
            <method name="finished" type="void" line="205">
                <scope line="209"/>
                <scope line="212"/>
            </method>
            <method name="putInKeepAliveCache" type="void" line="216"/>
            <method name="isInKeepAliveCache" type="boolean" line="224"/>
            <method name="closeIdleConnection" type="void" line="227">
                <declaration name="http" type="HttpClient" line="228"/>
                <scope line="229"/>
            </method>
            <method name="openServer" type="void" line="233">
                <params>
                    <param name="server" type="String"/>
                    <param name="port" type="int"/>
                </params>
                <scope line="235">
                    <declaration name="out" type="OutputStream" line="236"/>
                    <scope line="237"/>
                </scope>
                <scope line="242"/>
            </method>
            <method name="needsTunneling" type="boolean" line="247"/>
            <method name="isCachedConnection" type="boolean" line="250"/>
            <method name="afterConnect" type="void" line="253"/>
            <method name="privilegedOpenServer" type="void" line="255">
                <params>
                    <param name="server" type="InetSocketAddress"/>
                </params>
                <scope line="256">
                    <anonymous_class line="257">
                        <method name="run" type="Void" line="258"/>
                    </anonymous_class>
                </scope>
                <scope line="265"/>
            </method>
            <method name="superOpenServer" type="void" line="269">
                <params>
                    <param name="proxyHost" type="String"/>
                    <param name="proxyPort" type="int"/>
                </params>
            </method>
            <method name="openServer" type="void" line="272">
                <declaration name="security" type="SecurityManager" line="273"/>
                <scope line="274"/>
                <scope line="277"/>
                <scope line="280">
                    <scope line="281"/>
                    <scope line="287"/>
                </scope>
                <scope line="293">
                    <scope line="294"/>
                    <scope line="300"/>
                </scope>
            </method>
            <method name="getURLFile" type="String" line="307">
                <declaration name="fileName" type="String" line="308"/>
                <scope line="310">
                    <declaration name="result" type="StringBuffer" line="311"/>
                    <scope line="314"/>
                    <scope line="318"/>
                    <scope line="321"/>
                </scope>
            </method>
            <javadoc line="330">
                @deprecated                
            </javadoc>
            <method name="writeRequests" type="void" line="333">
                <params>
                    <param name="head" type="MessageHeader"/>
                </params>
            </method>
            <method name="writeRequests" type="void" line="338">
                <params>
                    <param name="head" type="MessageHeader"/>
                    <param name="pos" type="PosterOutputStream"/>
                </params>
            </method>
            <method name="writeRequests" type="void" line="345">
                <params>
                    <param name="head" type="MessageHeader"/>
                    <param name="pos" type="PosterOutputStream"/>
                    <param name="streaming" type="boolean"/>
                </params>
            </method>
            <javadoc line="349">
                Parse the first line of the HTTP request.  It usually looks
                  something like: &quot;HTTP/1.0 &lt;number&gt; comment\r\n&quot;.                
            </javadoc>
            <method name="parseHTTP" type="boolean" line="353">
                <params>
                    <param name="responses" type="MessageHeader"/>
                    <param name="pi" type="ProgressSource"/>
                    <param name="httpuc" type="HttpURLConnection"/>
                </params>
                <scope line="354">
                    <scope line="356"/>
                </scope>
                <scope line="362">
                    <scope line="363"/>
                </scope>
                <scope line="368">
                    <scope line="371">
                        <scope line="373"/>
                        <scope line="375">
                            <scope line="377"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="parseHTTPHeader" type="boolean" line="388">
                <params>
                    <param name="responses" type="MessageHeader"/>
                    <param name="pi" type="ProgressSource"/>
                    <param name="httpuc" type="HttpURLConnection"/>
                </params>
                <declaration name="ret" type="boolean" line="391"/>
                <declaration name="b" type="byte[]" line="392"/>
                <scope line="393">
                    <declaration name="nread" type="int" line="394"/>
                    <scope line="396">
                        <declaration name="r" type="int" line="397"/>
                        <scope line="398"/>
                    </scope>
                    <declaration name="keep" type="String" line="403"/>
                    <scope line="406">
                        <scope line="408">
                            <declaration name="uri" type="URI" line="409"/>
                        </scope>
                        <scope line="412"/>
                        <scope line="415"/>
                        <scope line="418">
                            <declaration name="p" type="HeaderParser" line="419"/>
                            <scope line="420"/>
                        </scope>
                        <scope line="425">
                            <scope line="426"/>
                            <scope line="429"/>
                        </scope>
                    </scope>
                    <scope line="434">
                        <scope line="435">
                            <scope line="437"/>
                            <scope line="439">
                                <scope line="443"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="453"/>
                </scope>
                <scope line="457"/>
                <declaration name="code" type="int" line="460"/>
                <scope line="461">
                    <declaration name="resp" type="String" line="462"/>
                    <declaration name="ind" type="int" line="464"/>
                </scope>
                <scope line="469"/>
                <scope line="471"/>
                <declaration name="cl" type="long" line="475"/>
                <declaration name="te" type="String" line="476"/>
                <scope line="477">
                    <scope line="479"/>
                    <scope line="483"/>
                </scope>
                <scope line="488">
                    <declaration name="cls" type="String" line="489"/>
                    <scope line="490">
                        <scope line="491"/>
                        <scope line="494"/>
                    </scope>
                    <declaration name="requestLine" type="String" line="498"/>
                    <scope line="499"/>
                    <scope line="502"/>
                    <scope line="506"/>
                </scope>
                <scope line="510">
                    <scope line="511"/>
                    <scope line="514">
                        <declaration name="logger" type="PlatformLogger" line="515"/>
                        <scope line="516"/>
                    </scope>
                    <scope line="522"/>
                </scope>
                <scope line="526">
                    <scope line="527"/>
                    <scope line="531"/>
                </scope>
                <scope line="534"/>
            </method>
            <method name="getInputStream" type="InputStream" line="539"/>
            <method name="getOutputStream" type="OutputStream" line="542"/>
            <method name="toString" type="String" line="545"/>
            <method name="isKeepingAlive" type="boolean" line="548"/>
            <method name="setCacheRequest" type="void" line="551">
                <params>
                    <param name="cacheRequest" type="CacheRequest"/>
                </params>
            </method>
            <method name="getCacheRequest" type="CacheRequest" line="554"/>
            <method name="finalize" type="void" line="557"/>
            <method name="setDoNotRetry" type="void" line="559">
                <params>
                    <param name="value" type="boolean"/>
                </params>
            </method>
            <method name="setIgnoreContinue" type="void" line="562">
                <params>
                    <param name="value" type="boolean"/>
                </params>
            </method>
            <method name="closeServer" type="void" line="565">
                <scope line="566"/>
                <scope line="570"/>
            </method>
            <javadoc line="573">
                @return the proxy host being used for this client, or null
                  if we&apos;re not going through a proxy                
            </javadoc>
            <method name="getProxyHostUsed" type="String" line="577">
                <scope line="578"/>
                <scope line="581"/>
            </method>
            <javadoc line="585">
                @return the proxy port being used for this client.  Meaningless
                  if getProxyHostUsed() gives null.                
            </javadoc>
            <method name="getProxyPortUsed" type="int" line="589"/>
        </class>
    </source>