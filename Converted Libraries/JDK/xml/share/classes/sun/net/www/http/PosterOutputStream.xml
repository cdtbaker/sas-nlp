<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.net.www.http">
        <import package="java.io"/>
        <import package="java.net"/>
        <class name="PosterOutputStream" line="31">
            <extends class="ByteArrayOutputStream"/>
            <javadoc line="31">
                Instances of this class are returned to applications for the purpose of
                  sending user data for a HTTP POST or PUT request. This class is used
                  when the content-length will be specified in the header of the request.
                  The semantics of ByteArrayOutputStream are extended so that
                  when close() is called, it is no longer possible to write
                  additional data to the stream. From this point the content length of
                  the request is fixed and cannot change.                
                <author>
                    Michael McMahon                    
                </author>
            </javadoc>
            <declaration name="closed" type="boolean" line="45"/>
            <javadoc line="47">
                Creates a new output stream for POST user data                
            </javadoc>
            <method name="PosterOutputStream" type="constructor" line="50"/>
            <javadoc line="54">
                Writes the specified byte to this output stream.                
                <param>
                    b   the byte to be written.                    
                </param>
            </javadoc>
            <method name="write" type="void" line="59">
                <params>
                    <param name="b" type="int"/>
                </params>
                <scope line="60"/>
            </method>
            <javadoc line="66">
                Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array
                  starting at offset &lt;code&gt;off&lt;/code&gt; to this output stream.                
                <param>
                    b     the data.                    
                </param>
                <param>
                    off   the start offset in the data.                    
                </param>
                <param>
                    len   the number of bytes to write.                    
                </param>
            </javadoc>
            <method name="write" type="void" line="74">
                <params>
                    <param name="b" type="byte"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="75"/>
            </method>
            <javadoc line="81">
                Resets the &lt;code&gt;count&lt;/code&gt; field of this output
                  stream to zero, so that all currently accumulated output in the
                  ouput stream is discarded. The output stream can be used again,
                  reusing the already allocated buffer space. If the output stream
                  has been closed, then this method has no effect.                
                <see>
                    java.io.ByteArrayInputStream#count                    
                </see>
            </javadoc>
            <method name="reset" type="void" line="90">
                <scope line="91"/>
            </method>
            <javadoc line="97">
                After close() has been called, it is no longer possible to write
                  to this stream. Further calls to write will have no effect.                
            </javadoc>
            <method name="close" type="void" line="101"/>
        </class>
    </source>