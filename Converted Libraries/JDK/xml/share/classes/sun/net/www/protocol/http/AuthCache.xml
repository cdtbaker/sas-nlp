<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.net.www.protocol.http">
        <interface name="AuthCache">
            <javadoc line="28">
                @author Michael McMahon
                  Interface provided by internal http authentication cache.
                  NB. This API will be replaced in a future release, and should
                  not be made public.                
            </javadoc>
            <method name="put" type="void" line="38"/>
            <javadoc line="38">
                Put an entry in the cache. pkey is a string specified as follows:
                  A:[B:]C:D:E[:F]   Between 4 and 6 fields separated by &quot;:&quot;
                  where the fields have the following meaning:
                  A is &quot;s&quot; or &quot;p&quot; for server or proxy authentication respectively
                  B is optional and is the {@link AuthScheme}, e.g. BASIC, DIGEST, NTLM, etc
                  C is either &quot;http&quot; or &quot;https&quot;
                  D is the hostname
                  E is the port number
                  F is optional and if present is the realm
                  Generally, two entries are created for each AuthCacheValue,
                  one including the realm and one without the realm.
                  Also, for some schemes (digest) multiple entries may be created
                  with the same pkey, but with a different path value in
                  the AuthCacheValue.                
            </javadoc>
            <method name="get" type="AuthCacheValue" line="58"/>
            <javadoc line="58">
                Get an entry from the cache based on pkey as described above, but also
                  using a pathname (skey) and the cache must return an entry
                  if skey is a sub-path of the AuthCacheValue.path field.                
            </javadoc>
            <method name="remove" type="void" line="65"/>
            <javadoc line="65">
                remove the entry from the cache whose pkey is specified and
                  whose path is equal to entry.path. If entry is null then
                  all entries with the same pkey should be removed.                
            </javadoc>
        </interface>
    </source>