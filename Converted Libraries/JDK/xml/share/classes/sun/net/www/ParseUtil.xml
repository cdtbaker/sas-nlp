<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.net.www">
        <import package="java.util.BitSet"/>
        <import package="java.io.UnsupportedEncodingException"/>
        <import package="java.io.File"/>
        <import package="java.net.URL"/>
        <import package="java.net.MalformedURLException"/>
        <import package="java.net.URI"/>
        <import package="java.net.URISyntaxException"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.CharBuffer"/>
        <import package="java.nio.charset.CharacterCodingException"/>
        <import package="sun.nio.cs.ThreadLocalCoders"/>
        <import package="java.nio.charset.CharsetDecoder"/>
        <import package="java.nio.charset.CoderResult"/>
        <import package="java.nio.charset.CodingErrorAction"/>
        <class name="ParseUtil" line="43">
            <comment line="100">
                flag indicates whether path uses platform dependent
                 File.separatorChar or not. True indicates path uses platform
                 dependent File.separatorChar.                
            </comment>
            <comment line="301">
                createURI() and its auxiliary code are cloned from java.net.URI.
                 Most of the code are just copy and paste, except that quote()
                 has been modified to avoid double-escape.
                
                 Usually it is unacceptable, but we&apos;re forced to do it because
                 otherwise we need to change public API, namely java.net.URI&apos;s
                 multi-argument constructors. It turns out that the changes cause
                 incompatibilities so can&apos;t be done.                
            </comment>
            <comment line="442">
                Quote any characters in s that are not permitted
                 by the given mask pair                
            </comment>
            <comment line="478">
                To check if the given string has an escaped triplet
                 at the given position                
            </comment>
            <comment line="519">
                Tell whether the given character is permitted by the given mask pair                
            </comment>
            <comment line="528">
                If a scheme is given then the path, if given, must be absolute                
            </comment>
            <comment line="542">
                -- Character classes for parsing --                
            </comment>
            <comment line="544">
                Compute a low-order mask for the characters
                 between first and last, inclusive                
            </comment>
            <comment line="555">
                Compute the low-order mask for the characters in the given string                
            </comment>
            <comment line="567">
                Compute a high-order mask for the characters
                 between first and last, inclusive                
            </comment>
            <comment line="578">
                Compute the high-order mask for the characters in the given string                
            </comment>
            <comment line="591">
                Character-class masks                
            </comment>
            <comment line="593">
                digit    = &quot;0&quot; | &quot;1&quot; | &quot;2&quot; | &quot;3&quot; | &quot;4&quot; | &quot;5&quot; | &quot;6&quot; | &quot;7&quot; |
                            &quot;8&quot; | &quot;9&quot;                
            </comment>
            <comment line="598">
                hex           =  digit | &quot;A&quot; | &quot;B&quot; | &quot;C&quot; | &quot;D&quot; | &quot;E&quot; | &quot;F&quot; |
                                          &quot;a&quot; | &quot;b&quot; | &quot;c&quot; | &quot;d&quot; | &quot;e&quot; | &quot;f&quot;                
            </comment>
            <comment line="603">
                upalpha  = &quot;A&quot; | &quot;B&quot; | &quot;C&quot; | &quot;D&quot; | &quot;E&quot; | &quot;F&quot; | &quot;G&quot; | &quot;H&quot; | &quot;I&quot; |
                            &quot;J&quot; | &quot;K&quot; | &quot;L&quot; | &quot;M&quot; | &quot;N&quot; | &quot;O&quot; | &quot;P&quot; | &quot;Q&quot; | &quot;R&quot; |
                            &quot;S&quot; | &quot;T&quot; | &quot;U&quot; | &quot;V&quot; | &quot;W&quot; | &quot;X&quot; | &quot;Y&quot; | &quot;Z&quot;                
            </comment>
            <comment line="609">
                lowalpha = &quot;a&quot; | &quot;b&quot; | &quot;c&quot; | &quot;d&quot; | &quot;e&quot; | &quot;f&quot; | &quot;g&quot; | &quot;h&quot; | &quot;i&quot; |
                            &quot;j&quot; | &quot;k&quot; | &quot;l&quot; | &quot;m&quot; | &quot;n&quot; | &quot;o&quot; | &quot;p&quot; | &quot;q&quot; | &quot;r&quot; |
                            &quot;s&quot; | &quot;t&quot; | &quot;u&quot; | &quot;v&quot; | &quot;w&quot; | &quot;x&quot; | &quot;y&quot; | &quot;z&quot;                
            </comment>
            <comment line="615">
                alpha         = lowalpha | upalpha                
            </comment>
            <comment line="619">
                alphanum      = alpha | digit                
            </comment>
            <comment line="623">
                mark          = &quot;-&quot; | &quot;_&quot; | &quot;.&quot; | &quot;!&quot; | &quot;~&quot; | &quot;*&quot; | &quot;&apos;&quot; |
                                 &quot;(&quot; | &quot;)&quot;                
            </comment>
            <comment line="628">
                unreserved    = alphanum | mark                
            </comment>
            <comment line="632">
                reserved      = &quot;;&quot; | &quot;/&quot; | &quot;?&quot; | &quot;:&quot; | &quot;@&quot; | &quot;&amp;&quot; | &quot;=&quot; | &quot;+&quot; |
                                 &quot;$&quot; | &quot;,&quot; | &quot;[&quot; | &quot;]&quot;
                 Added per RFC2732: &quot;[&quot;, &quot;]&quot;                
            </comment>
            <comment line="638">
                The zero&apos;th bit is used to indicate that escape pairs and non-US-ASCII
                 characters are allowed; this is handled by the scanEscape method below.                
            </comment>
            <comment line="643">
                Dash, for use in domainlabel and toplabel                
            </comment>
            <comment line="647">
                uric          = reserved | unreserved | escaped                
            </comment>
            <comment line="651">
                pchar         = unreserved | escaped |
                                 &quot;:&quot; | &quot;@&quot; | &quot;&amp;&quot; | &quot;=&quot; | &quot;+&quot; | &quot;$&quot; | &quot;,&quot;                
            </comment>
            <comment line="658">
                All valid path characters                
            </comment>
            <comment line="662">
                userinfo      = *( unreserved | escaped |
                                    &quot;;&quot; | &quot;:&quot; | &quot;&amp;&quot; | &quot;=&quot; | &quot;+&quot; | &quot;$&quot; | &quot;,&quot; )                
            </comment>
            <comment line="669">
                reg_name      = 1*( unreserved | escaped | &quot;$&quot; | &quot;,&quot; |
                                     &quot;;&quot; | &quot;:&quot; | &quot;@&quot; | &quot;&amp;&quot; | &quot;=&quot; | &quot;+&quot; )                
            </comment>
            <comment line="676">
                All valid characters for server-based authorities                
            </comment>
            <javadoc line="43">
                A class that contains useful routines common to sun.net.www                
                <author>
                    Mike McCloskey                    
                </author>
            </javadoc>
            <declaration name="encodedInPath" type="BitSet" line="49"/>
            <scope line="51"/>
            <javadoc line="87">
                Constructs an encoded version of the specified path string suitable
                  for use in the construction of a URL.
                  A path separator is replaced by a forward slash. The string is UTF8
                  encoded. The % escape sequence is used for characters that are above
                  0x7F or those defined in RFC2396 as reserved or excluded in the path
                  component of a URL.                
            </javadoc>
            <method name="encodePath" type="String" line="96">
                <params>
                    <param name="path" type="String"/>
                </params>
            </method>
            <method name="encodePath" type="String" line="104">
                <params>
                    <param name="path" type="String"/>
                    <param name="flag" type="boolean"/>
                </params>
                <comment line="135">
                    worst case scenario for character [0x7ff-] every single
                    character will be encoded into 9 characters.                    
                </comment>
                <declaration name="retCC" type="char[]" line="105"/>
                <declaration name="retLen" type="int" line="106"/>
                <declaration name="pathCC" type="char[]" line="107"/>
                <declaration name="n" type="int" line="109"/>
                <scope line="110">
                    <declaration name="c" type="char" line="111"/>
                    <scope line="114">
                        <scope line="115">
                            <scope line="118"/>
                        </scope>
                        <scope line="125"/>
                        <scope line="129"/>
                    </scope>
                    <scope line="136">
                        <declaration name="newLen" type="int" line="137"/>
                        <scope line="138"/>
                        <declaration name="buf" type="char[]" line="141"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="149">
                Appends the URL escape sequence for the specified char to the
                  specified StringBuffer.                
            </javadoc>
            <method name="escape" type="int" line="153">
                <params>
                    <param name="cc" type="char[]"/>
                    <param name="c" type="char"/>
                    <param name="index" type="int"/>
                </params>
            </method>
            <javadoc line="160">
                Un-escape and return the character at position i in string s.                
            </javadoc>
            <method name="unescape" type="byte" line="163">
                <params>
                    <param name="s" type="String"/>
                    <param name="i" type="int"/>
                </params>
            </method>
            <javadoc line="168">
                Returns a new String constructed from the specified String by replacing
                  the URL escape sequences and UTF8 encoding with the characters they
                  represent.                
            </javadoc>
            <method name="decode" type="String" line="173">
                <params>
                    <param name="s" type="String"/>
                </params>
                <declaration name="n" type="int" line="174"/>
                <declaration name="sb" type="StringBuilder" line="178"/>
                <declaration name="bb" type="ByteBuffer" line="179"/>
                <declaration name="cb" type="CharBuffer" line="180"/>
                <declaration name="dec" type="CharsetDecoder" line="181"/>
                <declaration name="c" type="char" line="185"/>
                <scope line="186">
                    <scope line="188"/>
                    <declaration name="ui" type="int" line="196"/>
                    <scope line="197">
                        <scope line="199"/>
                        <scope line="201"/>
                    </scope>
                    <declaration name="cr" type="CoderResult" line="214"/>
                </scope>
            </method>
            <javadoc line="226">
                Returns a canonical version of the specified string.                
            </javadoc>
            <method name="canonizeString" type="String" line="229">
                <params>
                    <param name="file" type="String"/>
                </params>
                <comment line="234">
                    Remove embedded /../                    
                </comment>
                <comment line="242">
                    Remove embedded /./                    
                </comment>
                <comment line="246">
                    Remove trailing ..                    
                </comment>
                <comment line="255">
                    Remove trailing .                    
                </comment>
                <declaration name="i" type="int" line="230"/>
                <declaration name="lim" type="int" line="231"/>
                <scope line="234">
                    <scope line="235"/>
                    <scope line="237"/>
                </scope>
                <scope line="242"/>
                <scope line="246">
                    <scope line="248"/>
                    <scope line="250"/>
                </scope>
            </method>
            <method name="fileToEncodedURL" type="URL" line="263">
                <params>
                    <param name="file" type="File"/>
                </params>
                <declaration name="path" type="String" line="264"/>
                <scope line="266"/>
                <scope line="269"/>
            </method>
            <method name="toURI" type="java.net.URI" line="275">
                <params>
                    <param name="url" type="URL"/>
                </params>
                <comment line="285">
                    In java.net.URI class, a port number of -1 implies the default
                     port number. So get it stripped off before creating URI instance.                    
                </comment>
                <declaration name="protocol" type="String" line="276"/>
                <declaration name="auth" type="String" line="277"/>
                <declaration name="path" type="String" line="278"/>
                <declaration name="query" type="String" line="279"/>
                <declaration name="ref" type="String" line="280"/>
                <declaration name="uri" type="java.net.URI" line="291"/>
                <scope line="292"/>
                <scope line="294"/>
            </method>
            <method name="createURI" type="URI" line="315">
                <params>
                    <param name="scheme" type="String"/>
                    <param name="authority" type="String"/>
                    <param name="path" type="String"/>
                    <param name="query" type="String"/>
                    <param name="fragment" type="String"/>
                </params>
                <declaration name="s" type="String" line="316"/>
            </method>
            <method name="toString" type="String" line="332">
                <params>
                    <param name="scheme" type="String"/>
                    <param name="opaquePart" type="String"/>
                    <param name="authority" type="String"/>
                    <param name="userInfo" type="String"/>
                    <param name="host" type="String"/>
                    <param name="port" type="int"/>
                    <param name="path" type="String"/>
                    <param name="query" type="String"/>
                    <param name="fragment" type="String"/>
                </params>
                <declaration name="sb" type="StringBuffer" line="333"/>
                <scope line="334"/>
            </method>
            <method name="appendSchemeSpecificPart" type="void" line="353">
                <params>
                    <param name="sb" type="StringBuffer"/>
                    <param name="opaquePart" type="String"/>
                    <param name="authority" type="String"/>
                    <param name="userInfo" type="String"/>
                    <param name="host" type="String"/>
                    <param name="port" type="int"/>
                    <param name="path" type="String"/>
                    <param name="query" type="String"/>
                </params>
                <comment line="356">
                    check if SSP begins with an IPv6 address
                     because we must not quote a literal IPv6 address                    
                </comment>
                <scope line="354">
                    <scope line="358">
                        <declaration name="end" type="int" line="359"/>
                        <scope line="360">
                            <declaration name="doquote" type="String" line="361"/>
                            <scope line="362"/>
                            <scope line="365"/>
                        </scope>
                    </scope>
                    <scope line="372"/>
                </scope>
                <scope line="375">
                    <scope line="379"/>
                </scope>
            </method>
            <method name="appendAuthority" type="void" line="391">
                <params>
                    <param name="sb" type="StringBuffer"/>
                    <param name="authority" type="String"/>
                    <param name="userInfo" type="String"/>
                    <param name="host" type="String"/>
                    <param name="port" type="int"/>
                </params>
                <scope line="392">
                    <scope line="394"/>
                    <declaration name="needBrackets" type="boolean" line="398"/>
                    <scope line="404"/>
                </scope>
                <scope line="408">
                    <scope line="410">
                        <declaration name="end" type="int" line="411"/>
                        <scope line="412">
                            <declaration name="doquote" type="String" line="413"/>
                            <scope line="414"/>
                            <scope line="417"/>
                        </scope>
                    </scope>
                    <scope line="426"/>
                </scope>
            </method>
            <method name="appendFragment" type="void" line="434">
                <params>
                    <param name="sb" type="StringBuffer"/>
                    <param name="fragment" type="String"/>
                </params>
                <scope line="435"/>
            </method>
            <method name="quote" type="String" line="444">
                <params>
                    <param name="s" type="String"/>
                    <param name="lowMask" type="long"/>
                    <param name="highMask" type="long"/>
                </params>
                <declaration name="n" type="int" line="445"/>
                <declaration name="sb" type="StringBuffer" line="446"/>
                <declaration name="allowNonASCII" type="boolean" line="447"/>
                <scope line="448">
                    <declaration name="c" type="char" line="449"/>
                    <scope line="450">
                        <scope line="451">
                            <scope line="452"/>
                        </scope>
                        <scope line="457"/>
                    </scope>
                    <scope line="463">
                        <scope line="464"/>
                    </scope>
                    <scope line="469"/>
                </scope>
            </method>
            <method name="isEscaped" type="boolean" line="481">
                <params>
                    <param name="s" type="String"/>
                    <param name="pos" type="int"/>
                </params>
            </method>
            <method name="appendEncoded" type="void" line="490">
                <params>
                    <param name="sb" type="StringBuffer"/>
                    <param name="c" type="char"/>
                </params>
                <declaration name="bb" type="ByteBuffer" line="491"/>
                <scope line="492"/>
                <scope line="495"/>
                <scope line="498">
                    <declaration name="b" type="int" line="499"/>
                </scope>
            </method>
            <declaration name="hexDigits" type="char[]" line="507"/>
            <method name="appendEscape" type="void" line="512">
                <params>
                    <param name="sb" type="StringBuffer"/>
                    <param name="b" type="byte"/>
                </params>
            </method>
            <method name="match" type="boolean" line="519">
                <params>
                    <param name="c" type="char"/>
                    <param name="lowMask" type="long"/>
                    <param name="highMask" type="long"/>
                </params>
            </method>
            <method name="checkPath" type="void" line="531">
                <params>
                    <param name="s" type="String"/>
                    <param name="scheme" type="String"/>
                    <param name="path" type="String"/>
                </params>
                <scope line="532"/>
            </method>
            <method name="lowMask" type="long" line="545">
                <params>
                    <param name="first" type="char"/>
                    <param name="last" type="char"/>
                </params>
                <declaration name="m" type="long" line="546"/>
                <declaration name="f" type="int" line="547"/>
                <declaration name="l" type="int" line="548"/>
            </method>
            <method name="lowMask" type="long" line="555">
                <params>
                    <param name="chars" type="String"/>
                </params>
                <declaration name="n" type="int" line="556"/>
                <declaration name="m" type="long" line="557"/>
                <scope line="558">
                    <declaration name="c" type="char" line="559"/>
                </scope>
            </method>
            <method name="highMask" type="long" line="568">
                <params>
                    <param name="first" type="char"/>
                    <param name="last" type="char"/>
                </params>
                <declaration name="m" type="long" line="569"/>
                <declaration name="f" type="int" line="570"/>
                <declaration name="l" type="int" line="571"/>
            </method>
            <method name="highMask" type="long" line="578">
                <params>
                    <param name="chars" type="String"/>
                </params>
                <declaration name="n" type="int" line="579"/>
                <declaration name="m" type="long" line="580"/>
                <scope line="581">
                    <declaration name="c" type="char" line="582"/>
                </scope>
            </method>
            <declaration name="L_DIGIT" type="long" line="594"/>
            <declaration name="H_DIGIT" type="long" line="595"/>
            <declaration name="L_HEX" type="long" line="599"/>
            <declaration name="H_HEX" type="long" line="600"/>
            <declaration name="L_UPALPHA" type="long" line="605"/>
            <declaration name="H_UPALPHA" type="long" line="606"/>
            <declaration name="L_LOWALPHA" type="long" line="611"/>
            <declaration name="H_LOWALPHA" type="long" line="612"/>
            <declaration name="L_ALPHA" type="long" line="615"/>
            <declaration name="H_ALPHA" type="long" line="616"/>
            <declaration name="L_ALPHANUM" type="long" line="619"/>
            <declaration name="H_ALPHANUM" type="long" line="620"/>
            <declaration name="L_MARK" type="long" line="624"/>
            <declaration name="H_MARK" type="long" line="625"/>
            <declaration name="L_UNRESERVED" type="long" line="628"/>
            <declaration name="H_UNRESERVED" type="long" line="629"/>
            <declaration name="L_RESERVED" type="long" line="634"/>
            <declaration name="H_RESERVED" type="long" line="635"/>
            <declaration name="L_ESCAPED" type="long" line="639"/>
            <declaration name="H_ESCAPED" type="long" line="640"/>
            <declaration name="L_DASH" type="long" line="643"/>
            <declaration name="H_DASH" type="long" line="644"/>
            <declaration name="L_URIC" type="long" line="647"/>
            <declaration name="H_URIC" type="long" line="648"/>
            <declaration name="L_PCHAR" type="long" line="652"/>
            <declaration name="H_PCHAR" type="long" line="654"/>
            <declaration name="L_PATH" type="long" line="658"/>
            <declaration name="H_PATH" type="long" line="659"/>
            <declaration name="L_USERINFO" type="long" line="663"/>
            <declaration name="H_USERINFO" type="long" line="665"/>
            <declaration name="L_REG_NAME" type="long" line="670"/>
            <declaration name="H_REG_NAME" type="long" line="672"/>
            <declaration name="L_SERVER" type="long" line="676"/>
            <declaration name="H_SERVER" type="long" line="678"/>
        </class>
    </source>