<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.net.www.http">
        <import package="java.io.IOException"/>
        <import package="java.util.LinkedList"/>
        <import package="sun.net.NetProperties"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <class name="KeepAliveStreamCleaner" line="7">
            <extends class="LinkedList">
                <type_params>
                    <type_param name="KeepAliveCleanerEntry"/>
                </type_params>
            </extends>
            <implements interface="Runnable"/>
            <javadoc line="7">
                This class is used to cleanup any remaining data that may be on a KeepAliveStream
                  so that the connection can be cached in the KeepAliveCache.
                  Instances of this class can be used as a FIFO queue for KeepAliveCleanerEntry objects.
                  Executing this Runnable removes each KeepAliveCleanerEntry from the Queue, reads
                  the reamining bytes on its KeepAliveStream, and if successful puts the connection in
                  the KeepAliveCache.                
                <author>
                    Chris Hegarty                    
                </author>
            </javadoc>
            <declaration name="MAX_DATA_REMAINING" type="int" line="17"/>
            <declaration name="MAX_CAPACITY" type="int" line="18"/>
            <declaration name="TIMEOUT" type="int" line="19"/>
            <declaration name="MAX_RETRIES" type="int" line="20"/>
            <scope line="21">
                <declaration name="maxDataKey" type="String" line="22"/>
                <anonymous_class line="23">
                    <method name="run" type="Integer" line="24"/>
                </anonymous_class>
                <declaration name="maxData" type="int" line="23"/>
                <declaration name="maxCapacityKey" type="String" line="30"/>
                <anonymous_class line="31">
                    <method name="run" type="Integer" line="32"/>
                </anonymous_class>
                <declaration name="maxCapacity" type="int" line="31"/>
            </scope>
            <method name="offer" type="boolean" line="39">
                <params>
                    <param name="e" type="KeepAliveCleanerEntry"/>
                </params>
            </method>
            <method name="run" type="void" line="43">
                <declaration name="kace" type="KeepAliveCleanerEntry" line="44"/>
                <scope line="45">
                    <scope line="46">
                        <scope line="47">
                            <declaration name="before" type="long" line="48"/>
                            <declaration name="timeout" type="long" line="49"/>
                            <scope line="50">
                                <declaration name="after" type="long" line="52"/>
                                <declaration name="elapsed" type="long" line="53"/>
                                <scope line="54"/>
                            </scope>
                        </scope>
                        <declaration name="kas" type="KeepAliveStream" line="63"/>
                        <scope line="64">
                            <scope line="65">
                                <declaration name="hc" type="HttpClient" line="66"/>
                                <scope line="67">
                                    <scope line="68">
                                        <declaration name="oldTimeout" type="int" line="69"/>
                                        <declaration name="remainingToRead" type="long" line="71"/>
                                        <scope line="72">
                                            <declaration name="n" type="long" line="73"/>
                                            <declaration name="retries" type="int" line="74"/>
                                            <scope line="75"/>
                                        </scope>
                                        <scope line="82"/>
                                    </scope>
                                </scope>
                                <scope line="89"/>
                                <scope line="92"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="98"/>
                </scope>
            </method>
        </class>
    </source>