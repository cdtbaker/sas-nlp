<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.net.www">
        <import package="java.net.URL"/>
        <import package="java.io"/>
        <import package="java.util.StringTokenizer"/>
        <class name="MimeEntry" line="5">
            <implements interface="Cloneable"/>
            <declaration name="typeName" type="String" line="6"/>
            <declaration name="tempFileNameTemplate" type="String" line="7"/>
            <declaration name="action" type="int" line="8"/>
            <declaration name="command" type="String" line="9"/>
            <declaration name="description" type="String" line="10"/>
            <declaration name="imageFileName" type="String" line="11"/>
            <declaration name="fileExtensions" type="String" line="12"/>
            <declaration name="starred" type="boolean" line="13"/>
            <declaration name="UNKNOWN" type="int" line="14"/>
            <declaration name="LOAD_INTO_BROWSER" type="int" line="15"/>
            <declaration name="SAVE_TO_FILE" type="int" line="16"/>
            <declaration name="LAUNCH_APPLICATION" type="int" line="17"/>
            <declaration name="actionKeywords" type="String[]" line="18"/>
            <javadoc line="19">
                Construct an empty entry of the given type and subtype.                
            </javadoc>
            <method name="MimeEntry" type="constructor" line="22">
                <params>
                    <param name="type" type="String"/>
                </params>
            </method>
            <method name="MimeEntry" type="constructor" line="25">
                <params>
                    <param name="type" type="String"/>
                    <param name="imageFileName" type="String"/>
                    <param name="extensionString" type="String"/>
                </params>
            </method>
            <method name="MimeEntry" type="constructor" line="33">
                <params>
                    <param name="typeName" type="String"/>
                    <param name="action" type="int"/>
                    <param name="command" type="String"/>
                    <param name="tempFileNameTemplate" type="String"/>
                </params>
            </method>
            <method name="MimeEntry" type="constructor" line="41">
                <params>
                    <param name="typeName" type="String"/>
                    <param name="action" type="int"/>
                    <param name="command" type="String"/>
                    <param name="imageFileName" type="String"/>
                    <param name="fileExtensions" type="String"/>
                </params>
            </method>
            <method name="getType" type="String" line="49"/>
            <method name="setType" type="void" line="52">
                <params>
                    <param name="type" type="String"/>
                </params>
            </method>
            <method name="getAction" type="int" line="55"/>
            <method name="setAction" type="void" line="58">
                <params>
                    <param name="action" type="int"/>
                    <param name="command" type="String"/>
                </params>
            </method>
            <method name="setAction" type="void" line="62">
                <params>
                    <param name="action" type="int"/>
                </params>
            </method>
            <method name="getLaunchString" type="String" line="65"/>
            <method name="setCommand" type="void" line="68">
                <params>
                    <param name="command" type="String"/>
                </params>
            </method>
            <method name="getDescription" type="String" line="71"/>
            <method name="setDescription" type="void" line="74">
                <params>
                    <param name="description" type="String"/>
                </params>
            </method>
            <method name="getImageFileName" type="String" line="77"/>
            <method name="setImageFileName" type="void" line="80">
                <params>
                    <param name="filename" type="String"/>
                </params>
                <declaration name="file" type="File" line="81"/>
                <scope line="82"/>
                <scope line="85"/>
                <scope line="88"/>
            </method>
            <method name="getTempFileTemplate" type="String" line="92"/>
            <method name="getExtensions" type="String[]" line="95"/>
            <method name="getExtensionsAsList" type="String" line="98">
                <declaration name="extensionsAsString" type="String" line="99"/>
                <scope line="100">
                    <scope line="101">
                        <scope line="103"/>
                    </scope>
                </scope>
            </method>
            <method name="setExtensions" type="void" line="110">
                <params>
                    <param name="extensionString" type="String"/>
                </params>
                <declaration name="extTokens" type="StringTokenizer" line="111"/>
                <declaration name="numExts" type="int" line="112"/>
                <declaration name="extensionStrings" type="String" line="113"/>
                <scope line="114">
                    <declaration name="ext" type="String" line="115"/>
                </scope>
            </method>
            <method name="isStarred" type="boolean" line="120">
                <params>
                    <param name="typeName" type="String"/>
                </params>
            </method>
            <javadoc line="123">
                Invoke the MIME type specific behavior for this MIME type.
                  Returned value can be one of several types:
                  &lt;ol&gt;
                  &lt;li&gt;A thread -- the caller can choose when to launch this thread.
                  &lt;li&gt;A string -- the string is loaded into the browser directly.
                  &lt;li&gt;An input stream -- the caller can read from this byte stream and
                  will typically store the results in a file.
                  &lt;li&gt;A document (?) --
                  &lt;/ol&gt;                
            </javadoc>
            <method name="launch" type="Object" line="134">
                <params>
                    <param name="urlc" type="java.net.URLConnection"/>
                    <param name="is" type="InputStream"/>
                    <param name="mt" type="MimeTable"/>
                </params>
                <scope line="137"/>
                <scope line="140"/>
                <scope line="144"/>
                <scope line="147"/>
                <scope line="151">
                    <declaration name="threadName" type="String" line="152"/>
                    <declaration name="fst" type="int" line="153"/>
                    <scope line="154"/>
                </scope>
            </method>
            <method name="matches" type="boolean" line="164">
                <params>
                    <param name="type" type="String"/>
                </params>
                <scope line="165"/>
                <scope line="168"/>
            </method>
            <method name="clone" type="Object" line="172">
                <declaration name="theClone" type="MimeEntry" line="173"/>
            </method>
            <method name="toProperty" type="String" line="182">
                <declaration name="buf" type="StringBuffer" line="183"/>
                <declaration name="separator" type="String" line="184"/>
                <declaration name="needSeparator" type="boolean" line="185"/>
                <declaration name="action" type="int" line="186"/>
                <scope line="187"/>
                <declaration name="command" type="String" line="191"/>
                <scope line="192">
                    <scope line="193"/>
                </scope>
                <scope line="199">
                    <scope line="200"/>
                </scope>
                <declaration name="extensions" type="String" line="206"/>
                <scope line="207">
                    <scope line="208"/>
                </scope>
                <declaration name="description" type="String" line="214"/>
                <scope line="215">
                    <scope line="216"/>
                </scope>
            </method>
            <method name="toString" type="String" line="223"/>
        </class>
    </source>