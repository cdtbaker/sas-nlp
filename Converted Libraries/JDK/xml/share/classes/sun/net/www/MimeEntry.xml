<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.net.www">
        <import package="java.net.URL"/>
        <import package="java.io"/>
        <import package="java.util.StringTokenizer"/>
        <class name="MimeEntry" line="31">
            <comment line="33">
                of the form: &quot;type/subtype&quot;                
            </comment>
            <comment line="44">
                Actions                
            </comment>
            <comment line="66">
                                
            </comment>
            <comment line="67">
                The next two constructors are used only by the deprecated                
            </comment>
            <comment line="68">
                PlatformMimeTable classes or, in last case, is called by the public                
            </comment>
            <comment line="69">
                constructor.  They are kept here anticipating putting support for                
            </comment>
            <comment line="70">
                mailcap formatted config files back in (so BOTH the properties format                
            </comment>
            <comment line="71">
                and the mailcap formats are supported).                
            </comment>
            <comment line="72">
                                
            </comment>
            <comment line="82">
                For use with MimeTable::parseMailCap                
            </comment>
            <comment line="94">
                This is the one called by the public constructor.                
            </comment>
            <comment line="145">
                ??? what to return for the image -- the file name or should this return                
            </comment>
            <comment line="146">
                something more advanced like an image source or something?                
            </comment>
            <comment line="147">
                returning the name has the least policy associated with it.                
            </comment>
            <comment line="148">
                pro tempore, we&apos;ll use the name                
            </comment>
            <implements interface="Cloneable"/>
            <declaration name="typeName" type="String" line="32"/>
            <declaration name="tempFileNameTemplate" type="String" line="33"/>
            <declaration name="action" type="int" line="35"/>
            <declaration name="command" type="String" line="36"/>
            <declaration name="description" type="String" line="37"/>
            <declaration name="imageFileName" type="String" line="38"/>
            <declaration name="fileExtensions" type="String" line="39"/>
            <declaration name="starred" type="boolean" line="41"/>
            <declaration name="UNKNOWN" type="int" line="44"/>
            <declaration name="LOAD_INTO_BROWSER" type="int" line="45"/>
            <declaration name="SAVE_TO_FILE" type="int" line="46"/>
            <declaration name="LAUNCH_APPLICATION" type="int" line="47"/>
            <declaration name="actionKeywords" type="String[]" line="49"/>
            <javadoc line="56">
                Construct an empty entry of the given type and subtype.                
            </javadoc>
            <method name="MimeEntry" type="constructor" line="59">
                <params>
                    <param name="type" type="String"/>
                </params>
                <comment line="60">
                    Default action is UNKNOWN so clients can decide what the default                    
                </comment>
                <comment line="61">
                    should be, typically save to file or ask user.                    
                </comment>
            </method>
            <method name="MimeEntry" type="constructor" line="72">
                <params>
                    <param name="type" type="String"/>
                    <param name="imageFileName" type="String"/>
                    <param name="extensionString" type="String"/>
                </params>
            </method>
            <method name="MimeEntry" type="constructor" line="83">
                <params>
                    <param name="typeName" type="String"/>
                    <param name="action" type="int"/>
                    <param name="command" type="String"/>
                    <param name="tempFileNameTemplate" type="String"/>
                </params>
            </method>
            <method name="MimeEntry" type="constructor" line="95">
                <params>
                    <param name="typeName" type="String"/>
                    <param name="action" type="int"/>
                    <param name="command" type="String"/>
                    <param name="imageFileName" type="String"/>
                    <param name="fileExtensions" type="String"/>
                </params>
            </method>
            <method name="getType" type="String" line="107"/>
            <method name="setType" type="void" line="111">
                <params>
                    <param name="type" type="String"/>
                </params>
            </method>
            <method name="getAction" type="int" line="115"/>
            <method name="setAction" type="void" line="119">
                <params>
                    <param name="action" type="int"/>
                    <param name="command" type="String"/>
                </params>
            </method>
            <method name="setAction" type="void" line="124">
                <params>
                    <param name="action" type="int"/>
                </params>
            </method>
            <method name="getLaunchString" type="String" line="128"/>
            <method name="setCommand" type="void" line="132">
                <params>
                    <param name="command" type="String"/>
                </params>
            </method>
            <method name="getDescription" type="String" line="136"/>
            <method name="setDescription" type="void" line="140">
                <params>
                    <param name="description" type="String"/>
                </params>
            </method>
            <method name="getImageFileName" type="String" line="148"/>
            <method name="setImageFileName" type="void" line="152">
                <params>
                    <param name="filename" type="String"/>
                </params>
                <declaration name="file" type="File" line="153"/>
                <scope line="154"/>
                <scope line="158"/>
                <scope line="162"/>
            </method>
            <method name="getTempFileTemplate" type="String" line="167"/>
            <method name="getExtensions" type="String[]" line="171"/>
            <method name="getExtensionsAsList" type="String" line="175">
                <declaration name="extensionsAsString" type="String" line="176"/>
                <scope line="177">
                    <scope line="178">
                        <scope line="180"/>
                    </scope>
                </scope>
            </method>
            <method name="setExtensions" type="void" line="189">
                <params>
                    <param name="extensionString" type="String"/>
                </params>
                <declaration name="extTokens" type="StringTokenizer" line="190"/>
                <declaration name="numExts" type="int" line="191"/>
                <declaration name="extensionStrings" type="String" line="192"/>
                <scope line="194">
                    <declaration name="ext" type="String" line="195"/>
                </scope>
            </method>
            <method name="isStarred" type="boolean" line="202">
                <params>
                    <param name="typeName" type="String"/>
                </params>
            </method>
            <javadoc line="208">
                Invoke the MIME type specific behavior for this MIME type.
                  Returned value can be one of several types:
                  &lt;ol&gt;
                  &lt;li&gt;A thread -- the caller can choose when to launch this thread.
                  &lt;li&gt;A string -- the string is loaded into the browser directly.
                  &lt;li&gt;An input stream -- the caller can read from this byte stream and
                  will typically store the results in a file.
                  &lt;li&gt;A document (?) --
                  &lt;/ol&gt;                
            </javadoc>
            <method name="launch" type="Object" line="219">
                <params>
                    <param name="urlc" type="java.net.URLConnection"/>
                    <param name="is" type="InputStream"/>
                    <param name="mt" type="MimeTable"/>
                </params>
                <comment line="222">
                    REMIND: is this really the right thing to do?                    
                </comment>
                <comment line="226">
                    I18N                    
                </comment>
                <comment line="231">
                    REMIND: invoke the content handler?                    
                </comment>
                <comment line="232">
                    may be the right thing to do, may not be -- short term                    
                </comment>
                <comment line="233">
                    where docs are not loaded asynch, loading and returning                    
                </comment>
                <comment line="234">
                    the content is the right thing to do.                    
                </comment>
                <comment line="254">
                    REMIND: What do do here?                    
                </comment>
                <scope line="223"/>
                <scope line="225"/>
                <scope line="235"/>
                <scope line="237"/>
                <scope line="242">
                    <declaration name="threadName" type="String" line="243"/>
                    <declaration name="fst" type="int" line="244"/>
                    <scope line="245"/>
                </scope>
            </method>
            <method name="matches" type="boolean" line="261">
                <params>
                    <param name="type" type="String"/>
                </params>
                <comment line="263">
                    REMIND: is this the right thing or not?                    
                </comment>
                <scope line="262"/>
                <scope line="265"/>
            </method>
            <method name="clone" type="Object" line="270">
                <comment line="271">
                    return a shallow copy of this.                    
                </comment>
                <declaration name="theClone" type="MimeEntry" line="272"/>
            </method>
            <method name="toProperty" type="String" line="283">
                <declaration name="buf" type="StringBuffer" line="284"/>
                <declaration name="separator" type="String" line="286"/>
                <declaration name="needSeparator" type="boolean" line="287"/>
                <declaration name="action" type="int" line="289"/>
                <scope line="290"/>
                <declaration name="command" type="String" line="295"/>
                <scope line="296">
                    <scope line="297"/>
                </scope>
                <scope line="304">
                    <scope line="305"/>
                </scope>
                <declaration name="extensions" type="String" line="312"/>
                <scope line="313">
                    <scope line="314"/>
                </scope>
                <declaration name="description" type="String" line="321"/>
                <scope line="322">
                    <scope line="323"/>
                </scope>
            </method>
            <method name="toString" type="String" line="332"/>
        </class>
    </source>