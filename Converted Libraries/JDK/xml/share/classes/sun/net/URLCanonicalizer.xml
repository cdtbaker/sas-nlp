<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.net">
        <class name="URLCanonicalizer" line="28">
            <javadoc line="28">
                Helper class to map URL &quot;abbreviations&quot; to real URLs.
                  The default implementation supports the following mappings:
                  ftp.mumble.bar/... =&gt; ftp://ftp.mumble.bar/...
                  gopher.mumble.bar/... =&gt; gopher://gopher.mumble.bar/...
                  other.name.dom/... =&gt; http://other.name.dom/...
                  /foo/... =&gt; file:/foo/...
                  Full URLs (those including a protocol name) are passed through unchanged.
                  Subclassers can override or extend this behavior to support different
                  or additional canonicalization policies.                
                <author>
                    Steve Byrne                    
                </author>
            </javadoc>
            <javadoc line="45">
                Creates the default canonicalizer instance.                
            </javadoc>
            <method name="URLCanonicalizer" type="constructor" line="48"/>
            <javadoc line="50">
                Given a possibly abbreviated URL (missing a protocol name, typically),
                  this method&apos;s job is to transform that URL into a canonical form,
                  by including a protocol name and additional syntax, if necessary.
                  For a correctly formed URL, this method should just return its argument.                
            </javadoc>
            <method name="canonicalize" type="String" line="57">
                <params>
                    <param name="simpleURL" type="String"/>
                </params>
                <declaration name="resultURL" type="String" line="58"/>
                <scope line="59"/>
                <scope line="61"/>
                <scope line="63"/>
                <scope line="65">
                    <scope line="66"/>
                </scope>
            </method>
            <javadoc line="75">
                Given a possibly abbreviated URL, this predicate function returns
                  true if it appears that the URL contains a protocol name                
            </javadoc>
            <method name="hasProtocolName" type="boolean" line="79">
                <params>
                    <param name="url" type="String"/>
                </params>
                <comment line="81">
                    treat &quot;:foo&quot; as not having a protocol spec                    
                </comment>
                <comment line="88">
                    REMIND: this is a guess at legal characters in a protocol --                    
                </comment>
                <comment line="89">
                    need to be verified                    
                </comment>
                <comment line="96">
                    found an illegal character                    
                </comment>
                <declaration name="index" type="int" line="80"/>
                <scope line="81"/>
                <scope line="85">
                    <declaration name="c" type="char" line="86"/>
                    <scope line="92"/>
                </scope>
            </method>
            <javadoc line="103">
                Returns true if the URL is just a single name, no periods or
                  slashes, false otherwise                
            </javadoc>
            <method name="isSimpleHostName" type="boolean" line="107">
                <params>
                    <param name="url" type="String"/>
                </params>
                <comment line="112">
                    REMIND: this is a guess at legal characters in a protocol --                    
                </comment>
                <comment line="113">
                    need to be verified                    
                </comment>
                <comment line="121">
                    found an illegal character                    
                </comment>
                <scope line="109">
                    <declaration name="c" type="char" line="110"/>
                    <scope line="117"/>
                </scope>
            </method>
        </class>
    </source>