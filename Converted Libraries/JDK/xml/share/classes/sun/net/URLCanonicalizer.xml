<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.net">
        <class name="URLCanonicalizer" line="2">
            <javadoc line="2">
                Helper class to map URL &quot;abbreviations&quot; to real URLs.
                  The default implementation supports the following mappings:
                  ftp.mumble.bar/... =&gt; ftp://ftp.mumble.bar/...
                  gopher.mumble.bar/... =&gt; gopher://gopher.mumble.bar/...
                  other.name.dom/... =&gt; http://other.name.dom/...
                  /foo/... =&gt; file:/foo/...
                  Full URLs (those including a protocol name) are passed through unchanged.
                  Subclassers can override or extend this behavior to support different
                  or additional canonicalization policies.                
                <author>
                    Steve Byrne                    
                </author>
            </javadoc>
            <javadoc line="15">
                Creates the default canonicalizer instance.                
            </javadoc>
            <method name="URLCanonicalizer" type="constructor" line="18"/>
            <javadoc line="20">
                Given a possibly abbreviated URL (missing a protocol name, typically),
                  this method&apos;s job is to transform that URL into a canonical form,
                  by including a protocol name and additional syntax, if necessary.
                  For a correctly formed URL, this method should just return its argument.                
            </javadoc>
            <method name="canonicalize" type="String" line="26">
                <params>
                    <param name="simpleURL" type="String"/>
                </params>
                <declaration name="resultURL" type="String" line="27"/>
                <scope line="28"/>
                <scope line="31"/>
                <scope line="34"/>
                <scope line="37">
                    <scope line="38"/>
                </scope>
            </method>
            <javadoc line="45">
                Given a possibly abbreviated URL, this predicate function returns
                  true if it appears that the URL contains a protocol name                
            </javadoc>
            <method name="hasProtocolName" type="boolean" line="49">
                <params>
                    <param name="url" type="String"/>
                </params>
                <declaration name="index" type="int" line="50"/>
                <scope line="51"/>
                <scope line="54">
                    <declaration name="c" type="char" line="55"/>
                    <scope line="56"/>
                </scope>
            </method>
            <javadoc line="63">
                Returns true if the URL is just a single name, no periods or
                  slashes, false otherwise                
            </javadoc>
            <method name="isSimpleHostName" type="boolean" line="67">
                <params>
                    <param name="url" type="String"/>
                </params>
                <scope line="68">
                    <declaration name="c" type="char" line="69"/>
                    <scope line="70"/>
                </scope>
            </method>
        </class>
    </source>