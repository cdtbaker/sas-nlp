<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.net.spi">
        <import package="java.net.InetSocketAddress"/>
        <import package="java.net.Proxy"/>
        <import package="java.net.ProxySelector"/>
        <import package="java.net.SocketAddress"/>
        <import package="java.net.URI"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="java.util.StringTokenizer"/>
        <import package="java.io.IOException"/>
        <import package="sun.misc.RegexpPool"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="sun.net.NetProperties"/>
        <import package="sun.net.SocksProxy"/>
        <class name="DefaultProxySelector" line="16">
            <extends class="ProxySelector"/>
            <javadoc line="16">
                Supports proxy settings using system properties This proxy selector
                  provides backward compatibility with the old http protocol handler
                  as far as how proxy is set
                  Most of the implementation copied from the old http protocol handler
                  Supports http/https/ftp.proxyHost, http/https/ftp.proxyPort,
                  proxyHost, proxyPort, and http/https/ftp.nonProxyHost, and socks.
                  NOTE: need to do gopher as well                
            </javadoc>
            <declaration name="props" type="String[][]" line="26"/>
            <javadoc line="26">
                This is where we define all the valid System Properties we have to
                  support for each given protocol.
                  The format of this 2 dimensional array is :
                  - 1 row per protocol (http, ftp, ...)
                  - 1st element of each row is the protocol name
                  - subsequent elements are prefixes for Host &amp; Port properties
                  listed in order of priority.
                  Example:
                  {&quot;ftp&quot;, &quot;ftp.proxy&quot;, &quot;ftpProxy&quot;, &quot;proxy&quot;, &quot;socksProxy&quot;},
                  means for FTP we try in that oder:
                  + ftp.proxyHost &amp; ftp.proxyPort
                  + ftpProxyHost &amp; ftpProxyPort
                  + proxyHost &amp; proxyPort
                  + socksProxyHost &amp; socksProxyPort
                  Note that the socksProxy should always be the last on the list                
            </javadoc>
            <declaration name="SOCKS_PROXY_VERSION" type="String" line="44"/>
            <declaration name="hasSystemProxies" type="boolean" line="45"/>
            <scope line="46">
                <declaration name="key" type="String" line="47"/>
                <anonymous_class line="48">
                    <method name="run" type="Boolean" line="49"/>
                </anonymous_class>
                <declaration name="b" type="Boolean" line="48"/>
                <scope line="54"/>
            </scope>
            <class name="NonProxyInfo" line="59">
                <javadoc line="59">
                    How to deal with &quot;non proxy hosts&quot;:
                      since we do have to generate a RegexpPool we don&apos;t want to do that if
                      it&apos;s not necessary. Therefore we do cache the result, on a per-protocol
                      basis, and change it only when the &quot;source&quot;, i.e. the system property,
                      did change.                    
                </javadoc>
                <declaration name="defStringVal" type="String" line="67"/>
                <declaration name="hostsSource" type="String" line="68"/>
                <declaration name="hostsPool" type="RegexpPool" line="69"/>
                <declaration name="property" type="String" line="70"/>
                <declaration name="defaultVal" type="String" line="71"/>
                <declaration name="ftpNonProxyInfo" type="NonProxyInfo" line="72"/>
                <declaration name="httpNonProxyInfo" type="NonProxyInfo" line="73"/>
                <method name="NonProxyInfo" type="constructor" line="74">
                    <params>
                        <param name="p" type="String"/>
                        <param name="s" type="String"/>
                        <param name="pool" type="RegexpPool"/>
                        <param name="d" type="String"/>
                    </params>
                </method>
            </class>
            <javadoc line="81">
                select() method. Where all the hard work is done.
                  Build a list of proxies depending on URI.
                  Since we&apos;re only providing compatibility with the system properties
                  from previous releases (see list above), that list will always
                  contain 1 single proxy, default being NO_PROXY.                
            </javadoc>
            <method name="select" type="java.util.List<Proxy>" line="88">
                <params>
                    <param name="uri" type="URI"/>
                </params>
                <scope line="89"/>
                <declaration name="protocol" type="String" line="92"/>
                <declaration name="host" type="String" line="93"/>
                <scope line="94">
                    <declaration name="auth" type="String" line="95"/>
                    <scope line="96">
                        <declaration name="i" type="int" line="97"/>
                        <scope line="99"/>
                        <scope line="103"/>
                    </scope>
                </scope>
                <scope line="109"/>
                <declaration name="proxyl" type="List&lt;Proxy&gt;" line="112"/>
                <declaration name="pinfo" type="NonProxyInfo" line="113"/>
                <scope line="114"/>
                <scope line="117"/>
                <scope line="120"/>
                <declaration name="proto" type="String" line="123"/>
                <declaration name="nprop" type="NonProxyInfo" line="124"/>
                <declaration name="urlhost" type="String" line="125"/>
                <anonymous_class line="126">
                    <method name="run" type="Proxy" line="127">
                        <declaration name="i" type="int" line="128"/>
                        <declaration name="phost" type="String" line="129"/>
                        <declaration name="pport" type="int" line="130"/>
                        <declaration name="nphosts" type="String" line="131"/>
                        <declaration name="saddr" type="InetSocketAddress" line="132"/>
                        <scope line="133">
                            <scope line="134">
                                <scope line="135"/>
                                <scope line="139">
                                    <scope line="140">
                                        <declaration name="sproto" type="String" line="141"/>
                                        <declaration name="sproxy" type="Proxy" line="144"/>
                                        <scope line="145"/>
                                    </scope>
                                </scope>
                                <scope line="151">
                                    <scope line="153">
                                        <scope line="154">
                                            <scope line="155"/>
                                            <scope line="158"/>
                                        </scope>
                                        <scope line="163">
                                            <scope line="164">
                                                <declaration name="pool" type="RegexpPool" line="165"/>
                                                <declaration name="st" type="StringTokenizer" line="166"/>
                                                <scope line="167">
                                                    <scope line="168"/>
                                                </scope>
                                                <scope line="172"/>
                                            </scope>
                                        </scope>
                                        <scope line="178"/>
                                    </scope>
                                </scope>
                                <scope line="184">
                                    <scope line="185"/>
                                </scope>
                                <scope line="189"/>
                                <scope line="194">
                                    <declaration name="version" type="int" line="195"/>
                                </scope>
                                <scope line="198"/>
                            </scope>
                        </scope>
                    </method>
                </anonymous_class>
                <declaration name="p" type="Proxy" line="126"/>
            </method>
            <method name="connectFailed" type="void" line="210">
                <params>
                    <param name="uri" type="URI"/>
                    <param name="sa" type="SocketAddress"/>
                    <param name="ioe" type="IOException"/>
                </params>
                <scope line="211"/>
            </method>
            <method name="defaultPort" type="int" line="215">
                <params>
                    <param name="protocol" type="String"/>
                </params>
                <scope line="216"/>
                <scope line="219"/>
                <scope line="222"/>
                <scope line="225"/>
                <scope line="228"/>
                <scope line="231"/>
            </method>
            <method name="init" type="boolean" line="235"/>
            <method name="getSystemProxy" type="Proxy" line="236"/>
        </class>
    </source>