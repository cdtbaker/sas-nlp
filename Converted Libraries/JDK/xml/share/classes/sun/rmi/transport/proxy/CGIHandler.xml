<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.rmi.transport.proxy">
        <import package="java.io"/>
        <import package="java.net"/>
        <import package="java.util.Hashtable"/>
        <class name="CGIClientException" line="5">
            <extends class="Exception"/>
            <javadoc line="5">
                CGIClientException is thrown when an error is detected
                  in a client&apos;s request.                
            </javadoc>
            <method name="CGIClientException" type="constructor" line="10">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
        </class>
        <class name="CGIServerException" line="14">
            <extends class="Exception"/>
            <javadoc line="14">
                CGIServerException is thrown when an error occurs here on the server.                
            </javadoc>
            <method name="CGIServerException" type="constructor" line="18">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
        </class>
        <interface name="CGICommandHandler">
            <javadoc line="22">
                CGICommandHandler is the interface to an object that handles a
                  particular supported command.                
            </javadoc>
            <method name="getName" type="String" line="27"/>
            <javadoc line="27">
                Return the string form of the command
                  to be recognized in the query string.                
            </javadoc>
            <method name="execute" type="void" line="32"/>
            <javadoc line="32">
                Execute the command with the given string as parameter.                
            </javadoc>
        </interface>
        <class name="CGIHandler" line="37">
            <javadoc line="37">
                The CGIHandler class contains methods for executing as a CGI program.
                  The main function interprets the query string as a command of the form
                  &quot;&lt;command&gt;=&lt;parameters&gt;&quot;.
                  This class depends on the CGI 1.0 environment variables being set as
                  properties of the same name in this Java VM.
                  All data and methods of this class are static because they are specific
                  to this particular CGI process.                
            </javadoc>
            <declaration name="ContentLength" type="int" line="47"/>
            <declaration name="QueryString" type="String" line="48"/>
            <declaration name="RequestMethod" type="String" line="49"/>
            <declaration name="ServerName" type="String" line="50"/>
            <declaration name="ServerPort" type="int" line="51"/>
            <scope line="52">
                <anonymous_class line="53">
                    <method name="run" type="Void" line="54"/>
                </anonymous_class>
            </scope>
            <declaration name="commands" type="CGICommandHandler" line="65"/>
            <declaration name="commandLookup" type="Hashtable" line="66"/>
            <scope line="67"/>
            <method name="CGIHandler" type="constructor" line="71"/>
            <javadoc line="73">
                Execute command given in query string on URL.  The string before
                  the first &apos;=&apos; is interpreted as the command name, and the string
                  after the first &apos;=&apos; is the parameters to the command.                
            </javadoc>
            <method name="main" type="void" line="78">
                <params>
                    <param name="args" type="String"/>
                </params>
                <scope line="79">
                    <declaration name="command" type="String" line="80"/>
                    <declaration name="delim" type="int" line="81"/>
                    <scope line="82"/>
                    <scope line="86"/>
                    <declaration name="handler" type="CGICommandHandler" line="90"/>
                    <scope line="91"/>
                    <scope line="94"/>
                    <scope line="97"/>
                </scope>
                <scope line="102"/>
            </method>
            <javadoc line="107">
                Return an HTML error message indicating there was error in
                  the client&apos;s request.                
            </javadoc>
            <method name="returnClientError" type="void" line="111">
                <params>
                    <param name="message" type="String"/>
                </params>
            </method>
            <javadoc line="122">
                Return an HTML error message indicating an error occurred
                  here on the server.                
            </javadoc>
            <method name="returnServerError" type="void" line="126">
                <params>
                    <param name="message" type="String"/>
                </params>
            </method>
        </class>
        <class name="CGIForwardCommand" line="138">
            <implements interface="CGICommandHandler"/>
            <javadoc line="138">
                &quot;forward&quot; command: Forward request body to local port on the server,
                  and send reponse back to client.                
            </javadoc>
            <method name="getName" type="String" line="143"/>
            <method name="execute" type="void" line="146">
                <params>
                    <param name="param" type="String"/>
                </params>
                <declaration name="port" type="int" line="148"/>
                <scope line="149"/>
                <scope line="152"/>
                <declaration name="buffer" type="byte" line="157"/>
                <declaration name="socket" type="Socket" line="158"/>
                <scope line="159"/>
                <scope line="162"/>
                <declaration name="clientIn" type="DataInputStream" line="165"/>
                <scope line="167"/>
                <scope line="170"/>
                <scope line="173"/>
                <scope line="176">
                    <declaration name="socketOut" type="DataOutputStream" line="177"/>
                </scope>
                <scope line="183"/>
                <declaration name="socketIn" type="DataInputStream" line="186"/>
                <scope line="187"/>
                <scope line="190"/>
                <declaration name="key" type="String" line="193"/>
                <declaration name="contentLengthFound" type="boolean" line="194"/>
                <declaration name="line" type="String" line="195"/>
                <declaration name="responseContentLength" type="int" line="196"/>
                <scope line="197">
                    <scope line="198"/>
                    <scope line="201"/>
                    <scope line="205"/>
                </scope>
                <scope line="214"/>
                <scope line="217"/>
                <scope line="220"/>
                <scope line="226"/>
                <scope line="229"/>
            </method>
        </class>
        <class name="CGIGethostnameCommand" line="235">
            <implements interface="CGICommandHandler"/>
            <javadoc line="235">
                &quot;gethostname&quot; command: Return the host name of the server as the
                  response body                
            </javadoc>
            <method name="getName" type="String" line="240"/>
            <method name="execute" type="void" line="243">
                <params>
                    <param name="param" type="String"/>
                </params>
            </method>
        </class>
        <class name="CGIPingCommand" line="252">
            <implements interface="CGICommandHandler"/>
            <javadoc line="252">
                &quot;ping&quot; command: Return an OK status to indicate that connection
                  was successful.                
            </javadoc>
            <method name="getName" type="String" line="257"/>
            <method name="execute" type="void" line="260">
                <params>
                    <param name="param" type="String"/>
                </params>
            </method>
        </class>
        <class name="CGITryHostnameCommand" line="267">
            <implements interface="CGICommandHandler"/>
            <javadoc line="267">
                &quot;tryhostname&quot; command: Return a human readable message describing
                  what host name is available to local Java VMs.                
            </javadoc>
            <method name="getName" type="String" line="272"/>
            <method name="execute" type="void" line="275">
                <params>
                    <param name="param" type="String"/>
                </params>
                <scope line="283">
                    <declaration name="localHostName" type="String" line="284"/>
                </scope>
                <scope line="287"/>
            </method>
        </class>
    </source>