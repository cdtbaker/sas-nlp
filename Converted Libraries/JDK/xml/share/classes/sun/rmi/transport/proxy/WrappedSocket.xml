<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.rmi.transport.proxy">
        <import package="java.io"/>
        <import package="java.net.InetAddress"/>
        <import package="java.net.Socket"/>
        <import package="java.net.SocketException"/>
        <class name="WrappedSocket" line="6">
            <extends class="Socket"/>
            <javadoc line="6">
                The WrappedSocket class provides a general wrapper for providing an
                  extended implementation of java.net.Socket that can be attached to
                  a pre-existing Socket object.  WrappedSocket itself provides a
                  constructor for specifying alternate input or output streams to be
                  returned than those of the underlying Socket.                
            </javadoc>
            <declaration name="socket" type="Socket" line="14"/>
            <javadoc line="14">
                the underlying concrete socket                
            </javadoc>
            <declaration name="in" type="InputStream" line="18"/>
            <javadoc line="18">
                the input stream to return for socket                
            </javadoc>
            <declaration name="out" type="OutputStream" line="22"/>
            <javadoc line="22">
                the output stream to return for socket                
            </javadoc>
            <javadoc line="26">
                Layer on top of a pre-existing Socket object, and use specified
                  input and output streams.  This allows the creator of the
                  underlying socket to peek at the beginning of the input with a
                  BufferedInputStream and determine which kind of socket
                  to create, without consuming the input.                
                <param>
                    socket the pre-existing socket to use                    
                </param>
                <param>
                    in the InputStream to return to users (can be null)                    
                </param>
                <param>
                    out the OutputStream to return to users (can be null)                    
                </param>
            </javadoc>
            <method name="WrappedSocket" type="constructor" line="36">
                <params>
                    <param name="socket" type="Socket"/>
                    <param name="in" type="InputStream"/>
                    <param name="out" type="OutputStream"/>
                </params>
            </method>
            <javadoc line="42">
                Get the address to which the socket is connected.                
            </javadoc>
            <method name="getInetAddress" type="InetAddress" line="45"/>
            <javadoc line="48">
                Get the local address to which the socket is bound.                
            </javadoc>
            <method name="getLocalAddress" type="InetAddress" line="51"/>
            <javadoc line="54">
                Get the remote port to which the socket is connected.                
            </javadoc>
            <method name="getPort" type="int" line="57"/>
            <javadoc line="60">
                Get the local port to which the socket is connected.                
            </javadoc>
            <method name="getLocalPort" type="int" line="63"/>
            <javadoc line="66">
                Get an InputStream for this socket.                
            </javadoc>
            <method name="getInputStream" type="InputStream" line="69"/>
            <javadoc line="73">
                Get an OutputStream for this socket.                
            </javadoc>
            <method name="getOutputStream" type="OutputStream" line="76"/>
            <javadoc line="80">
                Enable/disable TCP_NODELAY.                
            </javadoc>
            <method name="setTcpNoDelay" type="void" line="83">
                <params>
                    <param name="on" type="boolean"/>
                </params>
            </method>
            <javadoc line="86">
                Retrieve whether TCP_NODELAY is enabled.                
            </javadoc>
            <method name="getTcpNoDelay" type="boolean" line="89"/>
            <javadoc line="92">
                Enable/disable SO_LINGER with the specified linger time.                
            </javadoc>
            <method name="setSoLinger" type="void" line="95">
                <params>
                    <param name="on" type="boolean"/>
                    <param name="val" type="int"/>
                </params>
            </method>
            <javadoc line="98">
                Retrive setting for SO_LINGER.                
            </javadoc>
            <method name="getSoLinger" type="int" line="101"/>
            <javadoc line="104">
                Enable/disable SO_TIMEOUT with the specified timeout                
            </javadoc>
            <method name="setSoTimeout" type="void" line="107">
                <params>
                    <param name="timeout" type="int"/>
                </params>
            </method>
            <javadoc line="110">
                Retrive setting for SO_TIMEOUT.                
            </javadoc>
            <method name="getSoTimeout" type="int" line="113"/>
            <javadoc line="116">
                Close the socket.                
            </javadoc>
            <method name="close" type="void" line="119"/>
            <javadoc line="122">
                Return string representation of the socket.                
            </javadoc>
            <method name="toString" type="String" line="125"/>
        </class>
    </source>