<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.rmi.transport.proxy">
        <import package="java.io"/>
        <import package="java.net.InetAddress"/>
        <import package="java.net.Socket"/>
        <import package="java.net.SocketException"/>
        <class name="WrappedSocket" line="32">
            <extends class="Socket"/>
            <javadoc line="32">
                The WrappedSocket class provides a general wrapper for providing an
                  extended implementation of java.net.Socket that can be attached to
                  a pre-existing Socket object.  WrappedSocket itself provides a
                  constructor for specifying alternate input or output streams to be
                  returned than those of the underlying Socket.                
            </javadoc>
            <declaration name="socket" type="Socket" line="41"/>
            <javadoc line="41">
                the underlying concrete socket                
            </javadoc>
            <declaration name="in" type="InputStream" line="44"/>
            <javadoc line="44">
                the input stream to return for socket                
            </javadoc>
            <declaration name="out" type="OutputStream" line="47"/>
            <javadoc line="47">
                the output stream to return for socket                
            </javadoc>
            <javadoc line="50">
                Layer on top of a pre-existing Socket object, and use specified
                  input and output streams.  This allows the creator of the
                  underlying socket to peek at the beginning of the input with a
                  BufferedInputStream and determine which kind of socket
                  to create, without consuming the input.                
                <param>
                    socket the pre-existing socket to use                    
                </param>
                <param>
                    in the InputStream to return to users (can be null)                    
                </param>
                <param>
                    out the OutputStream to return to users (can be null)                    
                </param>
            </javadoc>
            <method name="WrappedSocket" type="constructor" line="62">
                <params>
                    <param name="socket" type="Socket"/>
                    <param name="in" type="InputStream"/>
                    <param name="out" type="OutputStream"/>
                </params>
                <comment line="63">
                    no underlying SocketImpl for this object                    
                </comment>
            </method>
            <javadoc line="69">
                Get the address to which the socket is connected.                
            </javadoc>
            <method name="getInetAddress" type="InetAddress" line="73"/>
            <javadoc line="77">
                Get the local address to which the socket is bound.                
            </javadoc>
            <method name="getLocalAddress" type="InetAddress" line="80"/>
            <javadoc line="84">
                Get the remote port to which the socket is connected.                
            </javadoc>
            <method name="getPort" type="int" line="88"/>
            <javadoc line="92">
                Get the local port to which the socket is connected.                
            </javadoc>
            <method name="getLocalPort" type="int" line="96"/>
            <javadoc line="100">
                Get an InputStream for this socket.                
            </javadoc>
            <method name="getInputStream" type="InputStream" line="104"/>
            <javadoc line="110">
                Get an OutputStream for this socket.                
            </javadoc>
            <method name="getOutputStream" type="OutputStream" line="114"/>
            <javadoc line="120">
                Enable/disable TCP_NODELAY.                
            </javadoc>
            <method name="setTcpNoDelay" type="void" line="124">
                <params>
                    <param name="on" type="boolean"/>
                </params>
            </method>
            <javadoc line="128">
                Retrieve whether TCP_NODELAY is enabled.                
            </javadoc>
            <method name="getTcpNoDelay" type="boolean" line="132"/>
            <javadoc line="136">
                Enable/disable SO_LINGER with the specified linger time.                
            </javadoc>
            <method name="setSoLinger" type="void" line="140">
                <params>
                    <param name="on" type="boolean"/>
                    <param name="val" type="int"/>
                </params>
            </method>
            <javadoc line="144">
                Retrive setting for SO_LINGER.                
            </javadoc>
            <method name="getSoLinger" type="int" line="148"/>
            <javadoc line="152">
                Enable/disable SO_TIMEOUT with the specified timeout                
            </javadoc>
            <method name="setSoTimeout" type="void" line="156">
                <params>
                    <param name="timeout" type="int"/>
                </params>
            </method>
            <javadoc line="160">
                Retrive setting for SO_TIMEOUT.                
            </javadoc>
            <method name="getSoTimeout" type="int" line="164"/>
            <javadoc line="168">
                Close the socket.                
            </javadoc>
            <method name="close" type="void" line="172"/>
            <javadoc line="176">
                Return string representation of the socket.                
            </javadoc>
            <method name="toString" type="String" line="180"/>
        </class>
    </source>