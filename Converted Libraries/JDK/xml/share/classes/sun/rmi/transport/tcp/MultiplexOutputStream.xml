<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.rmi.transport.tcp">
        <import package="java.io"/>
        <class name="MultiplexOutputStream" line="3">
            <extends class="OutputStream"/>
            <javadoc line="3">
                MultiplexOutputStream manages sending data over a conection managed
                  by a ConnectionMultiplexer object.  Data written is buffered until the
                  internal buffer is full or the flush() method is called, at which
                  point it attempts to push a packet of bytes through to the remote
                  endpoint.  This will never push more bytes than the amount already
                  requested by the remote endpoint (to prevent receive buffer from
                  overflowing), so if the write() and flush() methods will block
                  until their operation can complete if enough bytes cannot be
                  pushed immediately.                
                <author>
                    Peter Jones                    
                </author>
            </javadoc>
            <declaration name="manager" type="ConnectionMultiplexer" line="16"/>
            <javadoc line="16">
                object managing multiplexed connection                
            </javadoc>
            <declaration name="info" type="MultiplexConnectionInfo" line="20"/>
            <javadoc line="20">
                information about the connection this is the output stream for                
            </javadoc>
            <declaration name="buffer" type="byte" line="24"/>
            <javadoc line="24">
                output buffer                
            </javadoc>
            <declaration name="pos" type="int" line="28"/>
            <javadoc line="28">
                current position to write to in output buffer                
            </javadoc>
            <declaration name="requested" type="int" line="32"/>
            <javadoc line="32">
                pending number of bytes requested by remote endpoint                
            </javadoc>
            <declaration name="disconnected" type="boolean" line="36"/>
            <javadoc line="36">
                true if this connection has been disconnected                
            </javadoc>
            <declaration name="lock" type="Object" line="40"/>
            <javadoc line="40">
                lock acquired to access shared variables:
                  requested &amp; disconnected
                  WARNING:  Any of the methods manager.send() should not be
                  invoked while this lock is held, since they could potentially
                  block if the underlying connection&apos;s transport buffers are
                  full, and the manager may need to acquire this lock to process
                  and consume data coming over the underlying connection.                
            </javadoc>
            <javadoc line="50">
                Create a new MultiplexOutputStream for the given manager.                
                <param>
                    manager object that manages this connection                    
                </param>
                <param>
                    info structure for connection this stream writes to                    
                </param>
                <param>
                    bufferLength length of output buffer                    
                </param>
            </javadoc>
            <method name="MultiplexOutputStream" type="constructor" line="56">
                <params>
                    <param name="manager" type="ConnectionMultiplexer"/>
                    <param name="info" type="MultiplexConnectionInfo"/>
                    <param name="bufferLength" type="int"/>
                </params>
            </method>
            <javadoc line="62">
                Write a byte over connection.                
                <param>
                    b byte of data to write                    
                </param>
            </javadoc>
            <method name="write" type="void" line="66">
                <params>
                    <param name="b" type="int"/>
                </params>
            </method>
            <javadoc line="70">
                Write a subarray of bytes over connection.                
                <param>
                    b array containing bytes to write                    
                </param>
                <param>
                    off offset of beginning of bytes to write                    
                </param>
                <param>
                    len number of bytes to write                    
                </param>
            </javadoc>
            <method name="write" type="void" line="76">
                <params>
                    <param name="b" type="byte"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <declaration name="freeSpace" type="int" line="78"/>
                <scope line="79"/>
                <declaration name="local_requested" type="int" line="85"/>
                <scope line="86">
                    <scope line="87">
                        <scope line="88">
                            <scope line="89"/>
                            <scope line="92"/>
                        </scope>
                    </scope>
                    <scope line="97">
                        <scope line="101"/>
                    </scope>
                    <scope line="105">
                        <scope line="107"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="114">
                Guarantee that all data written to this stream has been pushed
                  over and made available to the remote endpoint.                
            </javadoc>
            <method name="flush" type="void" line="118"/>
            <javadoc line="121">
                Close this connection.                
            </javadoc>
            <method name="close" type="void" line="124"/>
            <javadoc line="127">
                Take note of more bytes requested by conection at remote endpoint.                
                <param>
                    num number of additional bytes requested                    
                </param>
            </javadoc>
            <method name="request" type="void" line="131">
                <params>
                    <param name="num" type="int"/>
                </params>
                <scope line="132"/>
            </method>
            <javadoc line="137">
                Disconnect this stream from all connection activity.                
            </javadoc>
            <method name="disconnect" type="void" line="140">
                <scope line="141"/>
            </method>
            <javadoc line="146">
                Push bytes in output buffer to connection at remote endpoint.
                  This method blocks until at least one byte has been pushed across.                
            </javadoc>
            <method name="push" type="void" line="150">
                <declaration name="local_requested" type="int" line="151"/>
                <scope line="152">
                    <scope line="153">
                        <scope line="154"/>
                        <scope line="157"/>
                    </scope>
                </scope>
                <scope line="162">
                    <scope line="166"/>
                </scope>
                <scope line="170">
                    <scope line="172"/>
                </scope>
            </method>
        </class>
    </source>