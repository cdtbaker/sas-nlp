<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.rmi.runtime">
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.PrintStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.rmi.server.LogStream"/>
        <import package="java.util.logging.ConsoleHandler"/>
        <import package="java.util.logging.Handler"/>
        <import package="java.util.logging.Formatter"/>
        <import package="java.util.logging.SimpleFormatter"/>
        <import package="java.util.logging.StreamHandler"/>
        <import package="java.util.logging.Level"/>
        <import package="java.util.logging.Logger"/>
        <import package="java.util.logging.LogManager"/>
        <import package="java.util.logging.LogRecord"/>
        <import package="java.util.logging.StreamHandler"/>
        <import package="java.util.Map"/>
        <import package="java.util.HashMap"/>
        <class name="Log" line="46">
            <comment line="71">
                                
            </comment>
            <comment line="98">
                                
            </comment>
            <javadoc line="46">
                Utility which provides an abstract &quot;logger&quot; like RMI internal API
                  which can be directed to use one of two types of logging
                  infrastructure: the java.util.logging API or the
                  java.rmi.server.LogStream API.  The default behavior is to use the
                  java.util.logging API.  The LogStream API may be used instead by
                  setting the system property sun.rmi.log.useOld to true.
                  For backwards compatibility, supports the RMI system logging
                  properties which pre-1.4 comprised the only way to configure RMI
                  logging.  If the java.util.logging API is used and RMI system log
                  properties are set, the system properties override initial RMI
                  logger values as appropriate. If the java.util.logging API is
                  turned off, pre-1.4 logging behavior is used.                
                <author>
                    Laird Dornin                    
                </author>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="BRIEF" type="Level" line="66"/>
            <javadoc line="66">
                Logger re-definition of old RMI log values                
            </javadoc>
            <declaration name="VERBOSE" type="Level" line="68"/>
            <declaration name="logFactory" type="LogFactory" line="71"/>
            <scope line="72">
                <declaration name="useOld" type="boolean" line="73"/>
            </scope>
            <method name="isLoggable" type="boolean" line="83"/>
            <javadoc line="83">
                &quot;logger like&quot; API to be used by RMI implementation                
            </javadoc>
            <method name="log" type="void" line="85"/>
            <method name="log" type="void" line="86"/>
            <method name="setOutputStream" type="void" line="88"/>
            <javadoc line="88">
                get and set the RMI server call output stream                
            </javadoc>
            <method name="getPrintStream" type="PrintStream" line="90"/>
            <interface name="LogFactory">
                <comment line="163">
                    Accessor to obtain an arbitrary RMI logger with name
                     loggerName.  If the level of the logger is greater than the
                     level for the system property with name, the logger level
                     will be set to the value of system property.                    
                </comment>
                <comment line="182">
                                        
                </comment>
                <comment line="197">
                                        
                </comment>
                <comment line="200">
                                        
                </comment>
                <comment line="357">
                                        
                </comment>
                <comment line="433">
                    Mimic old log messages that only contain unqualified names.                    
                </comment>
                <javadoc line="92">
                    factory interface enables Logger and LogStream implementations                    
                </javadoc>
                <method name="createLog" type="Log" line="94"/>
            </interface>
            <javadoc line="99">
                Access log for a tri-state system property.
                  Need to first convert override value to a log level, taking
                  care to interpret a range of values between BRIEF, VERBOSE and
                  SILENT.
                  An override &lt; 0 is interpreted to mean that the logging
                  configuration should not be overridden. The level passed to the
                  factories createLog method will be null in this case.
                  Note that if oldLogName is null and old logging is on, the
                  returned LogStreamLog will ignore the override parameter - the
                  log will never log messages.  This permits new logs that only
                  write to Loggers to do nothing when old logging is active.
                  Do not call getLog multiple times on the same logger name.
                  Since this is an internal API, no checks are made to ensure
                  that multiple logs do not exist for the same logger.                
            </javadoc>
            <method name="getLog" type="Log" line="121">
                <params>
                    <param name="loggerName" type="String"/>
                    <param name="oldLogName" type="String"/>
                    <param name="override" type="int"/>
                </params>
                <declaration name="level" type="Level" line="122"/>
                <scope line="124"/>
                <scope line="126"/>
                <scope line="129"/>
                <scope line="133"/>
                <scope line="135"/>
            </method>
            <javadoc line="141">
                Access logs associated with boolean properties
                  Do not call getLog multiple times on the same logger name.
                  Since this is an internal API, no checks are made to ensure
                  that multiple logs do not exist for the same logger.                
            </javadoc>
            <method name="getLog" type="Log" line="150">
                <params>
                    <param name="loggerName" type="String"/>
                    <param name="oldLogName" type="String"/>
                    <param name="override" type="boolean"/>
                </params>
                <declaration name="level" type="Level" line="151"/>
            </method>
            <class name="LoggerLogFactory" line="155">
                <comment line="163">
                    Accessor to obtain an arbitrary RMI logger with name
                     loggerName.  If the level of the logger is greater than the
                     level for the system property with name, the logger level
                     will be set to the value of system property.                    
                </comment>
                <comment line="182">
                                        
                </comment>
                <comment line="197">
                                        
                </comment>
                <comment line="200">
                                        
                </comment>
                <comment line="357">
                                        
                </comment>
                <comment line="433">
                    Mimic old log messages that only contain unqualified names.                    
                </comment>
                <implements interface="LogFactory"/>
                <javadoc line="155">
                    Factory to create Log objects which deliver log messages to the
                      java.util.logging API.                    
                </javadoc>
                <method name="LoggerLogFactory" type="constructor" line="160"/>
                <method name="createLog" type="Log" line="170">
                    <params>
                        <param name="loggerName" type="String"/>
                        <param name="oldLogName" type="String"/>
                        <param name="level" type="Level"/>
                    </params>
                    <declaration name="logger" type="Logger" line="171"/>
                </method>
            </class>
            <class name="LoggerLog" line="176">
                <extends class="Log"/>
                <comment line="163">
                    Accessor to obtain an arbitrary RMI logger with name
                     loggerName.  If the level of the logger is greater than the
                     level for the system property with name, the logger level
                     will be set to the value of system property.                    
                </comment>
                <comment line="182">
                                        
                </comment>
                <comment line="197">
                                        
                </comment>
                <comment line="200">
                                        
                </comment>
                <comment line="357">
                                        
                </comment>
                <comment line="433">
                    Mimic old log messages that only contain unqualified names.                    
                </comment>
                <javadoc line="176">
                    Class specialized to log messages to the java.util.logging API                    
                </javadoc>
                <declaration name="alternateConsole" type="Handler" line="182"/>
                <anonymous_class line="184">
                    <method name="run" type="Handler" line="185">
                        <declaration name="alternate" type="InternalStreamHandler" line="186"/>
                    </method>
                </anonymous_class>
                <declaration name="copyHandler" type="InternalStreamHandler" line="193"/>
                <javadoc line="193">
                    handler to which messages are copied                    
                </javadoc>
                <declaration name="logger" type="Logger" line="197"/>
                <declaration name="loggerSandwich" type="LoggerPrintStream" line="200"/>
                <javadoc line="202">
                    creates a Log which will delegate to the given logger                    
                </javadoc>
                <method name="LoggerLog" type="constructor" line="203">
                    <params>
                        <param name="logger" type="Logger"/>
                        <param name="level" type="Level"/>
                    </params>
                    <scope line="206">
                        <anonymous_class line="208">
                            <method name="run" type="Void" line="209">
                                <scope line="210"/>
                            </method>
                        </anonymous_class>
                    </scope>
                </method>
                <method name="isLoggable" type="boolean" line="221">
                    <params>
                        <param name="level" type="Level"/>
                    </params>
                </method>
                <method name="log" type="void" line="225">
                    <params>
                        <param name="level" type="Level"/>
                        <param name="message" type="String"/>
                    </params>
                    <scope line="226">
                        <declaration name="source" type="String[]" line="227"/>
                    </scope>
                </method>
                <method name="log" type="void" line="233">
                    <params>
                        <param name="level" type="Level"/>
                        <param name="message" type="String"/>
                        <param name="thrown" type="Throwable"/>
                    </params>
                    <scope line="234">
                        <declaration name="source" type="String[]" line="235"/>
                    </scope>
                </method>
                <javadoc line="242">
                    Set the output stream associated with the RMI server call
                      logger.
                      Calling code needs LoggingPermission &quot;control&quot;.                    
                </javadoc>
                <method name="setOutputStream" type="void" line="248">
                    <params>
                        <param name="out" type="OutputStream"/>
                    </params>
                    <comment line="257">
                                                
                    </comment>
                    <scope line="249">
                        <scope line="250"/>
                    </scope>
                    <scope line="256">
                        <scope line="258"/>
                    </scope>
                </method>
                <method name="getPrintStream" type="PrintStream" line="265">
                    <scope line="266"/>
                </method>
            </class>
            <class name="InternalStreamHandler" line="273">
                <extends class="StreamHandler"/>
                <comment line="163">
                    Accessor to obtain an arbitrary RMI logger with name
                     loggerName.  If the level of the logger is greater than the
                     level for the system property with name, the logger level
                     will be set to the value of system property.                    
                </comment>
                <comment line="182">
                                        
                </comment>
                <comment line="197">
                                        
                </comment>
                <comment line="200">
                                        
                </comment>
                <comment line="357">
                                        
                </comment>
                <comment line="433">
                    Mimic old log messages that only contain unqualified names.                    
                </comment>
                <javadoc line="273">
                    Subclass of StreamHandler for redirecting log output.  flush
                      must be called in the publish and close methods.                    
                </javadoc>
                <method name="InternalStreamHandler" type="constructor" line="278">
                    <params>
                        <param name="out" type="OutputStream"/>
                    </params>
                </method>
                <method name="publish" type="void" line="282">
                    <params>
                        <param name="record" type="LogRecord"/>
                    </params>
                </method>
                <method name="close" type="void" line="287"/>
            </class>
            <class name="LoggerPrintStream" line="292">
                <extends class="PrintStream"/>
                <comment line="163">
                    Accessor to obtain an arbitrary RMI logger with name
                     loggerName.  If the level of the logger is greater than the
                     level for the system property with name, the logger level
                     will be set to the value of system property.                    
                </comment>
                <comment line="182">
                                        
                </comment>
                <comment line="197">
                                        
                </comment>
                <comment line="200">
                                        
                </comment>
                <comment line="357">
                                        
                </comment>
                <comment line="433">
                    Mimic old log messages that only contain unqualified names.                    
                </comment>
                <javadoc line="292">
                    PrintStream which forwards log messages to the logger.  Class
                      is needed to maintain backwards compatibility with
                      RemoteServer.{set|get}Log().                    
                </javadoc>
                <declaration name="logger" type="Logger" line="299"/>
                <javadoc line="299">
                    logger where output of this log is sent                    
                </javadoc>
                <declaration name="last" type="int" line="302"/>
                <javadoc line="302">
                    record the last character written to this stream                    
                </javadoc>
                <declaration name="bufOut" type="ByteArrayOutputStream" line="305"/>
                <javadoc line="305">
                    stream used for buffering lines                    
                </javadoc>
                <method name="LoggerPrintStream" type="constructor" line="309">
                    <params>
                        <param name="logger" type="Logger"/>
                    </params>
                </method>
                <method name="write" type="void" line="315">
                    <params>
                        <param name="b" type="int"/>
                    </params>
                    <comment line="321">
                                                
                    </comment>
                    <scope line="316"/>
                    <scope line="319">
                        <scope line="320">
                            <declaration name="message" type="String" line="322"/>
                        </scope>
                        <scope line="326"/>
                    </scope>
                    <scope line="329"/>
                </method>
                <method name="write" type="void" line="335">
                    <params>
                        <param name="b" type="byte"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                    </params>
                    <scope line="336"/>
                    <scope line="339"/>
                </method>
                <method name="toString" type="String" line="344"/>
            </class>
            <class name="LogStreamLogFactory" line="349">
                <comment line="163">
                    Accessor to obtain an arbitrary RMI logger with name
                     loggerName.  If the level of the logger is greater than the
                     level for the system property with name, the logger level
                     will be set to the value of system property.                    
                </comment>
                <comment line="182">
                                        
                </comment>
                <comment line="197">
                                        
                </comment>
                <comment line="200">
                                        
                </comment>
                <comment line="357">
                                        
                </comment>
                <comment line="433">
                    Mimic old log messages that only contain unqualified names.                    
                </comment>
                <implements interface="LogFactory"/>
                <javadoc line="349">
                    Factory to create Log objects which deliver log messages to the
                      java.rmi.server.LogStream API                    
                </javadoc>
                <method name="LogStreamLogFactory" type="constructor" line="354"/>
                <method name="createLog" type="Log" line="359">
                    <params>
                        <param name="loggerName" type="String"/>
                        <param name="oldLogName" type="String"/>
                        <param name="level" type="Level"/>
                    </params>
                    <declaration name="stream" type="LogStream" line="360"/>
                    <scope line="361"/>
                </method>
            </class>
            <class name="LogStreamLog" line="368">
                <extends class="Log"/>
                <comment line="163">
                    Accessor to obtain an arbitrary RMI logger with name
                     loggerName.  If the level of the logger is greater than the
                     level for the system property with name, the logger level
                     will be set to the value of system property.                    
                </comment>
                <comment line="182">
                                        
                </comment>
                <comment line="197">
                                        
                </comment>
                <comment line="200">
                                        
                </comment>
                <comment line="357">
                                        
                </comment>
                <comment line="433">
                    Mimic old log messages that only contain unqualified names.                    
                </comment>
                <javadoc line="368">
                    Class specialized to log messages to the
                      java.rmi.server.LogStream API                    
                </javadoc>
                <declaration name="stream" type="LogStream" line="373"/>
                <javadoc line="373">
                    Log stream to which log messages are written                    
                </javadoc>
                <declaration name="levelValue" type="int" line="376"/>
                <javadoc line="376">
                    the level of the log as set by associated property                    
                </javadoc>
                <method name="LogStreamLog" type="constructor" line="379">
                    <params>
                        <param name="stream" type="LogStream"/>
                        <param name="level" type="Level"/>
                    </params>
                    <comment line="381">
                        if the stream or level is null, dont log any
                         messages                        
                    </comment>
                    <scope line="380"/>
                </method>
                <method name="isLoggable" type="boolean" line="389">
                    <params>
                        <param name="level" type="Level"/>
                    </params>
                </method>
                <method name="log" type="void" line="393">
                    <params>
                        <param name="messageLevel" type="Level"/>
                        <param name="message" type="String"/>
                    </params>
                    <scope line="394">
                        <declaration name="source" type="String[]" line="395"/>
                    </scope>
                </method>
                <method name="log" type="void" line="401">
                    <params>
                        <param name="level" type="Level"/>
                        <param name="message" type="String"/>
                        <param name="thrown" type="Throwable"/>
                    </params>
                    <comment line="403">
                        keep output contiguous and maintain the contract of
                         RemoteServer.getLog                        
                    </comment>
                    <scope line="402">
                        <scope line="407">
                            <declaration name="source" type="String[]" line="408"/>
                        </scope>
                    </scope>
                </method>
                <method name="getPrintStream" type="PrintStream" line="416"/>
                <method name="setOutputStream" type="void" line="420">
                    <params>
                        <param name="out" type="OutputStream"/>
                    </params>
                    <comment line="427">
                                                
                    </comment>
                    <scope line="421">
                        <scope line="422"/>
                    </scope>
                    <scope line="426"/>
                </method>
                <method name="unqualifiedName" type="String" line="435">
                    <params>
                        <param name="name" type="String"/>
                    </params>
                    <declaration name="lastDot" type="int" line="436"/>
                    <scope line="437"/>
                </method>
            </class>
            <javadoc line="445">
                Obtain class and method names of code calling a log method.                
            </javadoc>
            <method name="getSource" type="String[]" line="448">
                <declaration name="trace" type="StackTraceElement[]" line="449"/>
            </method>
        </class>
    </source>