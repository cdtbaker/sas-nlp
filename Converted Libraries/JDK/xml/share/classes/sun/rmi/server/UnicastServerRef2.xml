<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.rmi.server">
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectOutput"/>
        <import package="java.rmi"/>
        <import package="java.rmi.server"/>
        <import package="sun.rmi.transport"/>
        <import package="sun.rmi.transport.tcp"/>
        <class name="UnicastServerRef2" line="8">
            <extends class="UnicastServerRef"/>
            <javadoc line="8">
                Server-side ref for a remote impl that uses a custom socket factory.                
                <author>
                    Ann Wollrath                    
                </author>
                <author>
                    Roger Riggs                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="14"/>
            <javadoc line="15">
                Create a new (empty) Unicast server remote reference.                
            </javadoc>
            <method name="UnicastServerRef2" type="constructor" line="18"/>
            <javadoc line="20">
                Construct a Unicast server remote reference for a specified
                  liveRef.                
            </javadoc>
            <method name="UnicastServerRef2" type="constructor" line="24">
                <params>
                    <param name="ref" type="LiveRef"/>
                </params>
            </method>
            <javadoc line="27">
                Construct a Unicast server remote reference to be exported
                  on the specified port.                
            </javadoc>
            <method name="UnicastServerRef2" type="constructor" line="31">
                <params>
                    <param name="port" type="int"/>
                    <param name="csf" type="RMIClientSocketFactory"/>
                    <param name="ssf" type="RMIServerSocketFactory"/>
                </params>
            </method>
            <javadoc line="34">
                Returns the class of the ref type to be serialized                
            </javadoc>
            <method name="getRefClass" type="String" line="37">
                <params>
                    <param name="out" type="ObjectOutput"/>
                </params>
            </method>
            <javadoc line="40">
                Return the client remote reference for this remoteRef.
                  In the case of a client RemoteRef &quot;this&quot; is the answer.
                  For  a server remote reference, a client side one will have to
                  found or created.                
            </javadoc>
            <method name="getClientRef" type="RemoteRef" line="46"/>
        </class>
    </source>