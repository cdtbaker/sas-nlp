<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.rmi.server">
        <import package="java.io.IOException"/>
        <import package="java.io.NotSerializableException"/>
        <import package="java.io.ObjectOutput"/>
        <import package="java.rmi"/>
        <import package="java.rmi.server"/>
        <import package="java.rmi.activation.ActivationID"/>
        <import package="sun.rmi.transport.LiveRef"/>
        <class name="ActivatableServerRef" line="36">
            <extends class="UnicastServerRef2"/>
            <javadoc line="36">
                Server-side ref for a persistent remote impl.                
                <author>
                    Ann Wollrath                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="43"/>
            <declaration name="id" type="ActivationID" line="45"/>
            <javadoc line="47">
                Construct a Unicast server remote reference to be exported
                  on the specified port.                
            </javadoc>
            <method name="ActivatableServerRef" type="constructor" line="52">
                <params>
                    <param name="id" type="ActivationID"/>
                    <param name="port" type="int"/>
                </params>
            </method>
            <javadoc line="56">
                Construct a Unicast server remote reference to be exported
                  on the specified port.                
            </javadoc>
            <method name="ActivatableServerRef" type="constructor" line="63">
                <params>
                    <param name="id" type="ActivationID"/>
                    <param name="port" type="int"/>
                    <param name="csf" type="RMIClientSocketFactory"/>
                    <param name="ssf" type="RMIServerSocketFactory"/>
                </params>
            </method>
            <javadoc line="68">
                Returns the class of the ref type to be serialized                
            </javadoc>
            <method name="getRefClass" type="String" line="72">
                <params>
                    <param name="out" type="ObjectOutput"/>
                </params>
            </method>
            <javadoc line="76">
                Return the client remote reference for this remoteRef.
                  In the case of a client RemoteRef &quot;this&quot; is the answer.
                  For  a server remote reference, a client side one will have to
                  found or created.                
            </javadoc>
            <method name="getClientRef" type="RemoteRef" line="82"/>
            <javadoc line="86">
                Prevents serialization (because deserializaion is impossible).                
            </javadoc>
            <method name="writeExternal" type="void" line="89">
                <params>
                    <param name="out" type="ObjectOutput"/>
                </params>
            </method>
        </class>
    </source>