<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.rmi.rmic">
        <import package="java.io.File"/>
        <import package="sun.tools.java.ClassDefinition"/>
        <interface name="Generator">
            <javadoc line="38">
                Generator defines the protocol for back-end implementations to be added
                  to rmic.  See the rmic.properties file for a description of the format for
                  adding new Generators to rmic.
                  &lt;p&gt;
                  Classes implementing this interface must have a public default constructor
                  which should set any required arguments to their defaults.  When Main
                  encounters a command line argument which maps to a specific Generator
                  subclass, it will instantiate one and call parseArgs(...).  At some later
                  point, Main will invoke the generate(...) method once for _each_ class passed
                  on the command line.
                  WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
                <author>
                    Bryan Atsatt                    
                </author>
            </javadoc>
            <method name="parseArgs" type="boolean" line="58"/>
            <javadoc line="58">
                Examine and consume command line arguments.                
                <param>
                    argv The command line arguments. Ignore null
                      and unknown arguments. Set each consumed argument to null.                    
                </param>
                <param>
                    main Report any errors using the main.error() methods.                    
                </param>
                <return>
                    true if no errors, false otherwise.                    
                </return>
            </javadoc>
            <method name="generate" type="void" line="67"/>
            <javadoc line="67">
                Generate output. Any source files created which need compilation should
                  be added to the compiler environment using the addGeneratedFile(File)
                  method.                
                <param>
                    env       The compiler environment                    
                </param>
                <param>
                    cdef      The definition for the implementation class or interface from
                      which to generate output                    
                </param>
                <param>
                    destDir   The directory for the root of the package hierarchy
                      for generated files. May be null.                    
                </param>
            </javadoc>
        </interface>
    </source>