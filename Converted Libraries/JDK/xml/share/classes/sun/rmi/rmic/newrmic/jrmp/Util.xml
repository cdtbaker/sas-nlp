<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.rmi.rmic.newrmic.jrmp">
        <import package="com.sun.javadoc.ClassDoc"/>
        <import package="com.sun.javadoc.MethodDoc"/>
        <import package="com.sun.javadoc.Parameter"/>
        <import package="com.sun.javadoc.Type"/>
        <class name="Util" line="33">
            <javadoc line="33">
                Provides static utility methods.
                  WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
                <author>
                    Peter Jones                    
                </author>
            </javadoc>
            <method name="Util" type="constructor" line="44"/>
            <javadoc line="46">
                Returns the binary name of the class or interface represented
                  by the specified ClassDoc.                
            </javadoc>
            <method name="binaryNameOf" type="String" line="50">
                <params>
                    <param name="cl" type="ClassDoc"/>
                </params>
                <declaration name="flat" type="String" line="51"/>
                <declaration name="packageName" type="String" line="52"/>
            </method>
            <javadoc line="56">
                Returns the method descriptor for the specified method.
                  See section 4.3.3 of The Java Virtual Machine Specification
                  Second Edition for the definition of a &quot;method descriptor&quot;.                
            </javadoc>
            <method name="methodDescriptorOf" type="String" line="62">
                <params>
                    <param name="method" type="MethodDoc"/>
                </params>
                <declaration name="desc" type="String" line="63"/>
                <declaration name="parameters" type="Parameter[]" line="64"/>
                <scope line="65"/>
            </method>
            <javadoc line="72">
                Returns the descriptor for the specified type, as appropriate
                  for either a parameter or return type in a method descriptor.                
            </javadoc>
            <method name="typeDescriptorOf" type="String" line="76">
                <params>
                    <param name="type" type="Type"/>
                </params>
                <comment line="81">
                    Handle primitive types.                    
                </comment>
                <comment line="108">
                    Handle non-array reference types.                    
                </comment>
                <comment line="114">
                    Handle array types.                    
                </comment>
                <declaration name="desc" type="String" line="77"/>
                <declaration name="classDoc" type="ClassDoc" line="78"/>
                <scope line="79">
                    <declaration name="name" type="String" line="83"/>
                    <scope line="84"/>
                    <scope line="86"/>
                    <scope line="88"/>
                    <scope line="90"/>
                    <scope line="92"/>
                    <scope line="94"/>
                    <scope line="96"/>
                    <scope line="98"/>
                    <scope line="100"/>
                    <scope line="102"/>
                </scope>
                <scope line="106"/>
                <declaration name="dimensions" type="int" line="116"/>
                <scope line="117"/>
            </method>
            <javadoc line="124">
                Returns a reader-friendly string representation of the
                  specified method&apos;s signature.  Names of reference types are not
                  package-qualified.                
            </javadoc>
            <method name="getFriendlyUnqualifiedSignature" type="String" line="129">
                <params>
                    <param name="method" type="MethodDoc"/>
                </params>
                <declaration name="sig" type="String" line="130"/>
                <declaration name="parameters" type="Parameter[]" line="131"/>
                <scope line="132">
                    <scope line="133"/>
                    <declaration name="paramType" type="Type" line="136"/>
                </scope>
            </method>
            <javadoc line="143">
                Returns true if the specified type is void.                
            </javadoc>
            <method name="isVoid" type="boolean" line="146">
                <params>
                    <param name="type" type="Type"/>
                </params>
            </method>
        </class>
    </source>