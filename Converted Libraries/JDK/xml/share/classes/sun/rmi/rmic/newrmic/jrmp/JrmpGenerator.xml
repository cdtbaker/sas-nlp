<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.rmi.rmic.newrmic.jrmp">
        <import package="com.sun.javadoc.ClassDoc"/>
        <import package="java.io.File"/>
        <import package="java.io.FileOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStreamWriter"/>
        <import package="java.util.Collections"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Map"/>
        <import package="java.util.Set"/>
        <import package="sun.rmi.rmic.newrmic.BatchEnvironment"/>
        <import package="sun.rmi.rmic.newrmic.Generator"/>
        <import package="sun.rmi.rmic.newrmic.IndentingWriter"/>
        <import package="sun.rmi.rmic.newrmic.Main"/>
        <import package="sun.rmi.rmic.newrmic.Resources"/>
        <import package="sun.rmi.rmic.newrmic.jrmp.Constants"/>
        <class name="JrmpGenerator" line="18">
            <implements interface="Generator"/>
            <javadoc line="18">
                JRMP rmic back end; generates source code for JRMP stub and
                  skeleton classes.
                  WARNING: The contents of this source file are not part of any
                  supported API.  Code that depends on them does so at its own risk:
                  they are subject to change or removal without notice.                
                <author>
                    Peter Jones                    
                </author>
            </javadoc>
            <declaration name="versionOptions" type="Map&lt;String,StubVersion&gt;" line="27"/>
            <scope line="28"/>
            <declaration name="bootstrapClassNames" type="Set&lt;String&gt;" line="33"/>
            <scope line="34"/>
            <declaration name="version" type="StubVersion" line="40"/>
            <javadoc line="40">
                version of the JRMP stub protocol to generate code for                
            </javadoc>
            <javadoc line="44">
                Creates a new JrmpGenerator.                
            </javadoc>
            <method name="JrmpGenerator" type="constructor" line="47"/>
            <javadoc line="49">
                The JRMP generator recognizes command line options for
                  selecting the JRMP stub protocol version to generate classes
                  for.  Only one such option is allowed.                
            </javadoc>
            <method name="parseArgs" type="boolean" line="54">
                <params>
                    <param name="args" type="String[]"/>
                    <param name="main" type="Main"/>
                </params>
                <declaration name="explicitVersion" type="String" line="55"/>
                <scope line="56">
                    <declaration name="arg" type="String" line="57"/>
                    <scope line="58">
                        <scope line="59"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="70">
                The JRMP generator does not require an environment class more
                  specific than BatchEnvironment.                
            </javadoc>
            <method name="envClass" type="Class<? extends BatchEnvironment>" line="74"/>
            <method name="bootstrapClassNames" type="Set<String>" line="77"/>
            <javadoc line="80">
                Generates the source file(s) for the JRMP stub class and
                  (optionally) skeleton class for the specified remote
                  implementation class.                
            </javadoc>
            <method name="generate" type="void" line="85">
                <params>
                    <param name="env" type="BatchEnvironment"/>
                    <param name="inputClass" type="ClassDoc"/>
                    <param name="destDir" type="File"/>
                </params>
                <declaration name="remoteClass" type="RemoteClass" line="86"/>
                <scope line="87"/>
                <declaration name="writer" type="StubSkeletonWriter" line="90"/>
                <declaration name="stubFile" type="File" line="91"/>
                <scope line="92">
                    <declaration name="out" type="IndentingWriter" line="93"/>
                    <scope line="96"/>
                </scope>
                <scope line="101"/>
                <declaration name="skeletonFile" type="File" line="105"/>
                <scope line="106">
                    <scope line="107">
                        <declaration name="out" type="IndentingWriter" line="108"/>
                        <scope line="111"/>
                    </scope>
                    <scope line="116"/>
                </scope>
                <scope line="121">
                    <declaration name="skeletonClassFile" type="File" line="122"/>
                </scope>
            </method>
            <javadoc line="127">
                Returns the File object to be used as the source file for a
                  class with the specified binary name, with the specified
                  destination directory as the top of the package hierarchy.                
            </javadoc>
            <method name="sourceFileForClass" type="File" line="132">
                <params>
                    <param name="binaryName" type="String"/>
                    <param name="destDir" type="File"/>
                </params>
            </method>
            <javadoc line="135">
                Returns the File object to be used as the class file for a
                  class with the specified binary name, with the supplied
                  destination directory as the top of the package hierarchy.                
            </javadoc>
            <method name="classFileForClass" type="File" line="140">
                <params>
                    <param name="binaryName" type="String"/>
                    <param name="destDir" type="File"/>
                </params>
            </method>
            <method name="fileForClass" type="File" line="143">
                <params>
                    <param name="binaryName" type="String"/>
                    <param name="destDir" type="File"/>
                    <param name="ext" type="String"/>
                </params>
                <declaration name="i" type="int" line="144"/>
                <declaration name="classFileName" type="String" line="145"/>
                <scope line="146">
                    <declaration name="packageName" type="String" line="147"/>
                    <declaration name="packagePath" type="String" line="148"/>
                    <declaration name="packageDir" type="File" line="149"/>
                    <scope line="150"/>
                </scope>
                <scope line="155"/>
            </method>
        </class>
    </source>