<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.instrument">
        <import package="java.lang.instrument.Instrumentation"/>
        <import package="java.lang.instrument.ClassFileTransformer"/>
        <import package="java.security.ProtectionDomain"/>
        <class name="TransformerManager" line="37">
            <comment line="161">
                This function doesn&apos;t actually snapshot anything, but should be
                 used to set a local variable, which will snapshot the transformer
                 list because of the copying semantics of mTransformerList (see
                 the comment for mTransformerList).                
            </comment>
            <javadoc line="37">
                Support class for the InstrumentationImpl. Manages the list of registered transformers.
                  Keeps everything in the right order, deals with sync of the list,
                  and actually does the calling of the transformers.                
            </javadoc>
            <class name="TransformerInfo" line="44">
                <declaration name="mTransformer" type="ClassFileTransformer" line="45"/>
                <declaration name="mPrefix" type="String" line="46"/>
                <method name="TransformerInfo" type="constructor" line="48">
                    <params>
                        <param name="transformer" type="ClassFileTransformer"/>
                    </params>
                </method>
                <method name="transformer" type="ClassFileTransformer" line="53"/>
                <method name="getPrefix" type="String" line="57"/>
                <method name="setPrefix" type="void" line="61">
                    <params>
                        <param name="prefix" type="String"/>
                    </params>
                </method>
            </class>
            <declaration name="mTransformerList" type="TransformerInfo[]" line="66"/>
            <javadoc line="66">
                a given instance of this list is treated as immutable to simplify sync;
                  we pay copying overhead whenever the list is changed rather than every time
                  the list is referenced.
                  The array is kept in the order the transformers are added via addTransformer
                  (first added is 0, last added is length-1)
                  Use an array, not a List or other Collection. This keeps the set of classes
                  used by this code to a minimum. We want as few dependencies as possible in this
                  code, since it is used inside the class definition system. Any class referenced here
                  cannot be transformed by Java code.                
            </javadoc>
            <declaration name="mIsRetransformable" type="boolean" line="79"/>
            <javadoc line="79">
                Is this TransformerManager for transformers capable of retransformation?                
            </javadoc>
            <method name="TransformerManager" type="constructor" line="84">
                <params>
                    <param name="isRetransformable" type="boolean"/>
                </params>
            </method>
            <method name="isRetransformable" type="boolean" line="89"/>
            <method name="addTransformer" type="void" line="94">
                <params>
                    <param name="transformer" type="ClassFileTransformer"/>
                </params>
                <declaration name="oldList" type="TransformerInfo[]" line="95"/>
                <declaration name="newList" type="TransformerInfo[]" line="96"/>
            </method>
            <method name="removeTransformer" type="boolean" line="107">
                <params>
                    <param name="transformer" type="ClassFileTransformer"/>
                </params>
                <comment line="114">
                    look for it in the list, starting at the last added, and remember
                     where it was if we found it                    
                </comment>
                <comment line="125">
                    make a copy of the array without the matching element                    
                </comment>
                <comment line="129">
                    copy up to but not including the match                    
                </comment>
                <comment line="138">
                    if there is anything after the match, copy it as well                    
                </comment>
                <declaration name="found" type="boolean" line="108"/>
                <declaration name="oldList" type="TransformerInfo[]" line="109"/>
                <declaration name="oldLength" type="int" line="110"/>
                <declaration name="newLength" type="int" line="111"/>
                <declaration name="matchingIndex" type="int" line="115"/>
                <scope line="116">
                    <scope line="117"/>
                </scope>
                <scope line="125">
                    <declaration name="newList" type="TransformerInfo[]" line="126"/>
                    <scope line="129"/>
                    <scope line="138"/>
                </scope>
            </method>
            <method name="includesTransformer" type="boolean" line="151">
                <params>
                    <param name="transformer" type="ClassFileTransformer"/>
                </params>
                <scope line="152">
                    <scope line="153"/>
                </scope>
            </method>
            <method name="getSnapshotTransformerList" type="TransformerInfo[]" line="165"/>
            <method name="transform" type="byte[]" line="174">
                <params>
                    <param name="loader" type="ClassLoader"/>
                    <param name="classname" type="String"/>
                    <param name="classBeingRedefined" type="Class"/>
                    <param name="protectionDomain" type="ProtectionDomain"/>
                    <param name="classfileBuffer" type="byte[]"/>
                </params>
                <comment line="182">
                    order matters, gotta run &apos;em in the order they were added                    
                </comment>
                <comment line="196">
                    don&apos;t let any one transformer mess it up for the others.
                     This is where we need to put some logging. What should go here? FIXME                    
                </comment>
                <comment line="206">
                    if someone modified it, return the modified buffer.
                     otherwise return null to mean &quot;no transforms occurred&quot;                    
                </comment>
                <declaration name="someoneTouchedTheBytecode" type="boolean" line="175"/>
                <declaration name="transformerList" type="TransformerInfo[]" line="177"/>
                <declaration name="bufferToUse" type="byte[]" line="179"/>
                <scope line="182">
                    <declaration name="transformerInfo" type="TransformerInfo" line="183"/>
                    <declaration name="transformer" type="ClassFileTransformer" line="184"/>
                    <declaration name="transformedBytes" type="byte[]" line="185"/>
                    <scope line="187"/>
                    <scope line="194"/>
                    <scope line="199"/>
                </scope>
                <declaration name="result" type="byte[]" line="207"/>
                <scope line="208"/>
                <scope line="211"/>
            </method>
            <method name="getTransformerCount" type="int" line="220">
                <declaration name="transformerList" type="TransformerInfo[]" line="221"/>
            </method>
            <method name="setNativeMethodPrefix" type="boolean" line="226">
                <params>
                    <param name="transformer" type="ClassFileTransformer"/>
                    <param name="prefix" type="String"/>
                </params>
                <declaration name="transformerList" type="TransformerInfo[]" line="227"/>
                <scope line="229">
                    <declaration name="transformerInfo" type="TransformerInfo" line="230"/>
                    <declaration name="aTransformer" type="ClassFileTransformer" line="231"/>
                    <scope line="233"/>
                </scope>
            </method>
            <method name="getNativeMethodPrefixes" type="String[]" line="243">
                <declaration name="transformerList" type="TransformerInfo[]" line="244"/>
                <declaration name="prefixes" type="String[]" line="245"/>
                <scope line="247">
                    <declaration name="transformerInfo" type="TransformerInfo" line="248"/>
                </scope>
            </method>
        </class>
    </source>