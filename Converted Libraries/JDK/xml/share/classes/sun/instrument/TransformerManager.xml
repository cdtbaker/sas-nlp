<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.instrument">
        <import package="java.lang.instrument.Instrumentation"/>
        <import package="java.lang.instrument.ClassFileTransformer"/>
        <import package="java.security.ProtectionDomain"/>
        <class name="TransformerManager" line="5">
            <javadoc line="5">
                Support class for the InstrumentationImpl. Manages the list of registered transformers.
                  Keeps everything in the right order, deals with sync of the list,
                  and actually does the calling of the transformers.                
            </javadoc>
            <class name="TransformerInfo" line="11">
                <declaration name="mTransformer" type="ClassFileTransformer" line="12"/>
                <declaration name="mPrefix" type="String" line="13"/>
                <method name="TransformerInfo" type="constructor" line="14">
                    <params>
                        <param name="transformer" type="ClassFileTransformer"/>
                    </params>
                </method>
                <method name="transformer" type="ClassFileTransformer" line="18"/>
                <method name="getPrefix" type="String" line="21"/>
                <method name="setPrefix" type="void" line="24">
                    <params>
                        <param name="prefix" type="String"/>
                    </params>
                </method>
            </class>
            <declaration name="mTransformerList" type="TransformerInfo[]" line="28"/>
            <javadoc line="28">
                a given instance of this list is treated as immutable to simplify sync;
                  we pay copying overhead whenever the list is changed rather than every time
                  the list is referenced.
                  The array is kept in the order the transformers are added via addTransformer
                  (first added is 0, last added is length-1)
                  Use an array, not a List or other Collection. This keeps the set of classes
                  used by this code to a minimum. We want as few dependencies as possible in this
                  code, since it is used inside the class definition system. Any class referenced here
                  cannot be transformed by Java code.                
            </javadoc>
            <declaration name="mIsRetransformable" type="boolean" line="40"/>
            <javadoc line="40">
                Is this TransformerManager for transformers capable of retransformation?                
            </javadoc>
            <method name="TransformerManager" type="constructor" line="44">
                <params>
                    <param name="isRetransformable" type="boolean"/>
                </params>
            </method>
            <method name="isRetransformable" type="boolean" line="48"/>
            <method name="addTransformer" type="void" line="51">
                <params>
                    <param name="transformer" type="ClassFileTransformer"/>
                </params>
                <declaration name="oldList" type="TransformerInfo[]" line="52"/>
                <declaration name="newList" type="TransformerInfo[]" line="53"/>
            </method>
            <method name="removeTransformer" type="boolean" line="58">
                <params>
                    <param name="transformer" type="ClassFileTransformer"/>
                </params>
                <declaration name="found" type="boolean" line="59"/>
                <declaration name="oldList" type="TransformerInfo[]" line="60"/>
                <declaration name="oldLength" type="int" line="61"/>
                <declaration name="newLength" type="int" line="62"/>
                <declaration name="matchingIndex" type="int" line="63"/>
                <scope line="64">
                    <scope line="65"/>
                </scope>
                <scope line="71">
                    <declaration name="newList" type="TransformerInfo[]" line="72"/>
                    <scope line="73"/>
                    <scope line="76"/>
                </scope>
            </method>
            <method name="includesTransformer" type="boolean" line="83">
                <params>
                    <param name="transformer" type="ClassFileTransformer"/>
                </params>
                <scope line="84">
                    <scope line="85"/>
                </scope>
            </method>
            <method name="getSnapshotTransformerList" type="TransformerInfo[]" line="91"/>
            <method name="transform" type="byte[]" line="94">
                <params>
                    <param name="loader" type="ClassLoader"/>
                    <param name="classname" type="String"/>
                    <param name="classBeingRedefined" type="Class"/>
                    <param name="protectionDomain" type="ProtectionDomain"/>
                    <param name="classfileBuffer" type="byte[]"/>
                </params>
                <declaration name="someoneTouchedTheBytecode" type="boolean" line="95"/>
                <declaration name="transformerList" type="TransformerInfo[]" line="96"/>
                <declaration name="bufferToUse" type="byte[]" line="97"/>
                <scope line="98">
                    <declaration name="transformerInfo" type="TransformerInfo" line="99"/>
                    <declaration name="transformer" type="ClassFileTransformer" line="100"/>
                    <declaration name="transformedBytes" type="byte[]" line="101"/>
                    <scope line="102"/>
                    <scope line="105"/>
                    <scope line="107"/>
                </scope>
                <declaration name="result" type="byte[]" line="112"/>
                <scope line="113"/>
                <scope line="116"/>
            </method>
            <method name="getTransformerCount" type="int" line="121">
                <declaration name="transformerList" type="TransformerInfo[]" line="122"/>
            </method>
            <method name="setNativeMethodPrefix" type="boolean" line="125">
                <params>
                    <param name="transformer" type="ClassFileTransformer"/>
                    <param name="prefix" type="String"/>
                </params>
                <declaration name="transformerList" type="TransformerInfo[]" line="126"/>
                <scope line="127">
                    <declaration name="transformerInfo" type="TransformerInfo" line="128"/>
                    <declaration name="aTransformer" type="ClassFileTransformer" line="129"/>
                    <scope line="130"/>
                </scope>
            </method>
            <method name="getNativeMethodPrefixes" type="String[]" line="137">
                <declaration name="transformerList" type="TransformerInfo[]" line="138"/>
                <declaration name="prefixes" type="String[]" line="139"/>
                <scope line="140">
                    <declaration name="transformerInfo" type="TransformerInfo" line="141"/>
                </scope>
            </method>
        </class>
    </source>