<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.instrument">
        <import package="java.lang.reflect.Method"/>
        <import package="java.lang.reflect.AccessibleObject"/>
        <import package="java.lang.instrument.ClassFileTransformer"/>
        <import package="java.lang.instrument.ClassDefinition"/>
        <import package="java.lang.instrument.Instrumentation"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.security.ProtectionDomain"/>
        <import package="java.util.jar.JarFile"/>
        <class name="InstrumentationImpl" line="11">
            <implements interface="Instrumentation"/>
            <javadoc line="11">
                The Java side of the JPLIS implementation. Works in concert with a native JVMTI agent
                  to implement the JPLIS API set. Provides both the Java API implementation of
                  the Instrumentation interface and utility Java routines to support the native code.
                  Keeps a pointer to the native data structure in a scalar field to allow native
                  processing behind native methods.                
            </javadoc>
            <declaration name="mTransformerManager" type="TransformerManager" line="19"/>
            <declaration name="mRetransfomableTransformerManager" type="TransformerManager" line="20"/>
            <declaration name="mNativeAgent" type="long" line="21"/>
            <declaration name="mEnvironmentSupportsRedefineClasses" type="boolean" line="22"/>
            <declaration name="mEnvironmentSupportsRetransformClassesKnown" type="boolean" line="23"/>
            <declaration name="mEnvironmentSupportsRetransformClasses" type="boolean" line="24"/>
            <declaration name="mEnvironmentSupportsNativeMethodPrefix" type="boolean" line="25"/>
            <method name="InstrumentationImpl" type="constructor" line="26">
                <params>
                    <param name="nativeAgent" type="long"/>
                    <param name="environmentSupportsRedefineClasses" type="boolean"/>
                    <param name="environmentSupportsNativeMethodPrefix" type="boolean"/>
                </params>
            </method>
            <method name="addTransformer" type="void" line="35">
                <params>
                    <param name="transformer" type="ClassFileTransformer"/>
                </params>
            </method>
            <method name="addTransformer" type="void" line="38">
                <params>
                    <param name="transformer" type="ClassFileTransformer"/>
                    <param name="canRetransform" type="boolean"/>
                </params>
                <scope line="39"/>
                <scope line="42">
                    <scope line="43"/>
                    <scope line="46"/>
                    <scope line="50"/>
                </scope>
                <scope line="54"/>
            </method>
            <method name="removeTransformer" type="boolean" line="58">
                <params>
                    <param name="transformer" type="ClassFileTransformer"/>
                </params>
                <scope line="59"/>
                <declaration name="mgr" type="TransformerManager" line="62"/>
                <scope line="63">
                    <scope line="65"/>
                </scope>
            </method>
            <method name="isModifiableClass" type="boolean" line="72">
                <params>
                    <param name="theClass" type="Class<?>"/>
                </params>
                <scope line="73"/>
            </method>
            <method name="isRetransformClassesSupported" type="boolean" line="78">
                <scope line="79"/>
            </method>
            <method name="retransformClasses" type="void" line="85">
                <params>
                    <param name="classes" type="Class<?>[]"/>
                </params>
                <scope line="86"/>
            </method>
            <method name="isRedefineClassesSupported" type="boolean" line="91"/>
            <method name="redefineClasses" type="void" line="94">
                <params>
                    <param name="definitions" type="ClassDefinition[]"/>
                </params>
                <scope line="95"/>
                <scope line="98"/>
                <scope line="101">
                    <scope line="102"/>
                </scope>
                <scope line="106"/>
            </method>
            <method name="getAllLoadedClasses" type="Class[]" line="111"/>
            <method name="getInitiatedClasses" type="Class[]" line="114">
                <params>
                    <param name="loader" type="ClassLoader"/>
                </params>
            </method>
            <method name="getObjectSize" type="long" line="117">
                <params>
                    <param name="objectToSize" type="Object"/>
                </params>
                <scope line="118"/>
            </method>
            <method name="appendToBootstrapClassLoaderSearch" type="void" line="123">
                <params>
                    <param name="jarfile" type="JarFile"/>
                </params>
            </method>
            <method name="appendToSystemClassLoaderSearch" type="void" line="126">
                <params>
                    <param name="jarfile" type="JarFile"/>
                </params>
            </method>
            <method name="isNativeMethodPrefixSupported" type="boolean" line="129"/>
            <method name="setNativeMethodPrefix" type="void" line="132">
                <params>
                    <param name="transformer" type="ClassFileTransformer"/>
                    <param name="prefix" type="String"/>
                </params>
                <scope line="133"/>
                <scope line="136"/>
                <declaration name="mgr" type="TransformerManager" line="139"/>
                <scope line="140"/>
                <declaration name="prefixes" type="String[]" line="144"/>
            </method>
            <method name="findTransformerManager" type="TransformerManager" line="147">
                <params>
                    <param name="transformer" type="ClassFileTransformer"/>
                </params>
                <scope line="148"/>
                <scope line="151"/>
            </method>
            <method name="isModifiableClass0" type="boolean" line="156"/>
            <method name="isRetransformClassesSupported0" type="boolean" line="157"/>
            <method name="setHasRetransformableTransformers" type="void" line="158"/>
            <method name="retransformClasses0" type="void" line="159"/>
            <method name="redefineClasses0" type="void" line="160"/>
            <method name="getAllLoadedClasses0" type="Class[]" line="161"/>
            <method name="getInitiatedClasses0" type="Class[]" line="162"/>
            <method name="getObjectSize0" type="long" line="163"/>
            <method name="appendToClassLoaderSearch0" type="void" line="164"/>
            <method name="setNativeMethodPrefixes" type="void" line="165"/>
            <scope line="166"/>
            <method name="setAccessible" type="void" line="169">
                <params>
                    <param name="ao" type="AccessibleObject"/>
                    <param name="accessible" type="boolean"/>
                </params>
                <anonymous_class line="170">
                    <method name="run" type="Object" line="171"/>
                </anonymous_class>
            </method>
            <method name="loadClassAndStartAgent" type="void" line="178">
                <params>
                    <param name="classname" type="String"/>
                    <param name="methodname" type="String"/>
                    <param name="optionsString" type="String"/>
                </params>
                <declaration name="mainAppLoader" type="ClassLoader" line="179"/>
                <declaration name="javaAgentClass" type="Class&lt;?&gt;" line="180"/>
                <declaration name="m" type="Method" line="181"/>
                <declaration name="firstExc" type="NoSuchMethodException" line="182"/>
                <declaration name="twoArgAgent" type="boolean" line="183"/>
                <scope line="184"/>
                <scope line="188"/>
                <scope line="191">
                    <scope line="192"/>
                    <scope line="195"/>
                </scope>
                <scope line="198">
                    <scope line="199"/>
                    <scope line="203"/>
                </scope>
                <scope line="206">
                    <scope line="207"/>
                    <scope line="210"/>
                </scope>
                <scope line="215"/>
                <scope line="218"/>
            </method>
            <method name="loadClassAndCallPremain" type="void" line="223">
                <params>
                    <param name="classname" type="String"/>
                    <param name="optionsString" type="String"/>
                </params>
            </method>
            <method name="loadClassAndCallAgentmain" type="void" line="226">
                <params>
                    <param name="classname" type="String"/>
                    <param name="optionsString" type="String"/>
                </params>
            </method>
            <method name="transform" type="byte[]" line="229">
                <params>
                    <param name="loader" type="ClassLoader"/>
                    <param name="classname" type="String"/>
                    <param name="classBeingRedefined" type="Class"/>
                    <param name="protectionDomain" type="ProtectionDomain"/>
                    <param name="classfileBuffer" type="byte[]"/>
                    <param name="isRetransformer" type="boolean"/>
                </params>
                <declaration name="mgr" type="TransformerManager" line="230"/>
                <scope line="231"/>
                <scope line="234"/>
            </method>
        </class>
    </source>