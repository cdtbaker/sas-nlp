<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.applet">
        <import package="java.io.File"/>
        <import package="java.io.FilePermission"/>
        <import package="java.io.IOException"/>
        <import package="java.io.FileDescriptor"/>
        <import package="java.net.URL"/>
        <import package="java.net.URLClassLoader"/>
        <import package="java.net.InetAddress"/>
        <import package="java.net.UnknownHostException"/>
        <import package="java.net.SocketPermission"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.StringTokenizer"/>
        <import package="java.security"/>
        <import package="java.lang.reflect"/>
        <import package="sun.awt.AWTSecurityManager"/>
        <import package="sun.awt.AppContext"/>
        <import package="sun.security.provider"/>
        <import package="sun.security.util.SecurityConstants"/>
        <class name="AppletSecurity" line="21">
            <extends class="AWTSecurityManager"/>
            <javadoc line="21">
                This class defines an applet security policy                
            </javadoc>
            <declaration name="mainAppContext" type="AppContext" line="25"/>
            <declaration name="facc" type="Field" line="26"/>
            <declaration name="fcontext" type="Field" line="27"/>
            <scope line="28">
                <scope line="29"/>
                <scope line="35"/>
            </scope>
            <javadoc line="39">
                Construct and initialize.                
            </javadoc>
            <method name="AppletSecurity" type="constructor" line="42"/>
            <declaration name="restrictedPackages" type="HashSet" line="46"/>
            <javadoc line="47">
                Reset from Properties                
            </javadoc>
            <method name="reset" type="void" line="50">
                <anonymous_class line="52">
                    <method name="run" type="Object" line="53">
                        <declaration name="e" type="Enumeration" line="54"/>
                        <scope line="55">
                            <declaration name="name" type="String" line="56"/>
                            <scope line="57">
                                <declaration name="value" type="String" line="58"/>
                                <scope line="59">
                                    <declaration name="pkg" type="String" line="60"/>
                                </scope>
                            </scope>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="70">
                get the current (first) instance of an AppletClassLoader on the stack.                
            </javadoc>
            <method name="currentAppletClassLoader" type="AppletClassLoader" line="73">
                <declaration name="loader" type="ClassLoader" line="74"/>
                <declaration name="context" type="Class[]" line="76"/>
                <scope line="77"/>
                <scope line="81">
                    <declaration name="currentLoader" type="ClassLoader" line="82"/>
                    <scope line="83">
                        <anonymous_class line="84">
                            <method name="run" type="Object" line="85">
                                <declaration name="acc" type="AccessControlContext" line="86"/>
                                <declaration name="pds" type="ProtectionDomain[]" line="87"/>
                                <scope line="88">
                                    <scope line="90"/>
                                    <scope line="94"/>
                                </scope>
                                <scope line="98"/>
                                <scope line="101">
                                    <declaration name="cl" type="ClassLoader" line="102"/>
                                    <scope line="103"/>
                                </scope>
                            </method>
                        </anonymous_class>
                        <scope line="111"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="120">
                Returns true if this threadgroup is in the applet&apos;s own thread
                  group. This will return false if there is no current class
                  loader.                
            </javadoc>
            <method name="inThreadGroup" type="boolean" line="125">
                <params>
                    <param name="g" type="ThreadGroup"/>
                </params>
            </method>
            <javadoc line="129">
                Returns true of the threadgroup of thread is in the applet&apos;s
                  own threadgroup.                
            </javadoc>
            <method name="inThreadGroup" type="boolean" line="133">
                <params>
                    <param name="thread" type="Thread"/>
                </params>
            </method>
            <javadoc line="136">
                Applets are not allowed to manipulate threads outside
                  applet thread groups. However a terminated thread no longer belongs
                  to any group.                
            </javadoc>
            <method name="checkAccess" type="void" line="141">
                <params>
                    <param name="t" type="Thread"/>
                </params>
                <scope line="142"/>
            </method>
            <declaration name="inThreadGroupCheck" type="boolean" line="146"/>
            <javadoc line="147">
                Applets are not allowed to manipulate thread groups outside
                  applet thread groups.                
            </javadoc>
            <method name="checkAccess" type="void" line="151">
                <params>
                    <param name="g" type="ThreadGroup"/>
                </params>
                <scope line="152"/>
                <scope line="155">
                    <scope line="156">
                        <scope line="158"/>
                    </scope>
                    <scope line="162"/>
                </scope>
            </method>
            <javadoc line="167">
                Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the
                  calling thread is not allowed to access the package specified by
                  the argument.
                  &lt;p&gt;
                  This method is used by the &lt;code&gt;loadClass&lt;/code&gt; method of class
                  loaders.
                  &lt;p&gt;
                  The &lt;code&gt;checkPackageAccess&lt;/code&gt; method for class
                  &lt;code&gt;SecurityManager&lt;/code&gt;  calls
                  &lt;code&gt;checkPermission&lt;/code&gt; with the
                  &lt;code&gt;RuntimePermission(&quot;accessClassInPackage.&quot;+pkg)&lt;/code&gt;
                  permission.                
                <param>
                    pkg   the package name.                    
                </param>
                <exception>
                    SecurityException  if the caller does not have
                      permission to access the specified package.                    
                </exception>
                <see>
                    java.lang.ClassLoader#loadClass(java.lang.String,boolean)                    
                </see>
            </javadoc>
            <method name="checkPackageAccess" type="void" line="185">
                <params>
                    <param name="pkgname" type="String"/>
                </params>
                <scope line="187">
                    <declaration name="pkg" type="String" line="188"/>
                    <scope line="189"/>
                </scope>
            </method>
            <javadoc line="194">
                Tests if a client can get access to the AWT event queue.
                  &lt;p&gt;
                  This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the
                  &lt;code&gt;AWTPermission(&quot;accessEventQueue&quot;)&lt;/code&gt; permission.                
                <since>
                    JDK1.1                    
                </since>
                <exception>
                    SecurityException  if the caller does not have
                      permission to accesss the AWT event queue.                    
                </exception>
            </javadoc>
            <method name="checkAwtEventQueueAccess" type="void" line="203">
                <declaration name="appContext" type="AppContext" line="204"/>
                <declaration name="appletClassLoader" type="AppletClassLoader" line="205"/>
                <scope line="206"/>
            </method>
            <javadoc line="210">
                Returns the thread group of the applet. We consult the classloader
                  if there is one.                
            </javadoc>
            <method name="getThreadGroup" type="ThreadGroup" line="214">
                <declaration name="appletLoader" type="AppletClassLoader" line="215"/>
                <declaration name="loaderGroup" type="ThreadGroup" line="216"/>
                <scope line="217"/>
                <scope line="220"/>
            </method>
            <javadoc line="224">
                Get the AppContext corresponding to the current context.
                  The default implementation returns null, but this method
                  may be overridden by various SecurityManagers
                  (e.g. AppletSecurity) to index AppContext objects by the
                  calling context.                
                <return>
                    the AppContext corresponding to the current context.                    
                </return>
                <see>
                    sun.awt.AppContext                    
                </see>
                <see>
                    java.lang.SecurityManager                    
                </see>
                <since>
                    JDK1.2.1                    
                </since>
            </javadoc>
            <method name="getAppContext" type="AppContext" line="235">
                <declaration name="appletLoader" type="AppletClassLoader" line="236"/>
                <scope line="237"/>
                <scope line="240">
                    <declaration name="context" type="AppContext" line="241"/>
                    <scope line="242"/>
                </scope>
            </method>
        </class>
    </source>