<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.applet">
        <import package="java.util"/>
        <import package="java.io"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.awt.print"/>
        <import package="javax.print.attribute"/>
        <import package="java.applet"/>
        <import package="java.net.URL"/>
        <import package="java.net.MalformedURLException"/>
        <import package="java.net.SocketPermission"/>
        <import package="sun.misc.Ref"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="java.lang.reflect.Method"/>
        <import package="sun.awt.SunToolkit"/>
        <import package="sun.awt.AppContext"/>
        <import package="java.lang.ref.WeakReference"/>
        <class name="TextFrame" line="47">
            <extends class="Frame"/>
            <comment line="275">
                XXX 99/9/10 probably should be &quot;private&quot;                
            </comment>
            <comment line="365">
                Methods for java.applet.AppletContext                
            </comment>
            <comment line="1051">
                                
            </comment>
            <javadoc line="47">
                A frame to show the applet tag in.                
            </javadoc>
            <javadoc line="52">
                Create the tag frame.                
            </javadoc>
            <method name="TextFrame" type="constructor" line="55">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="title" type="String"/>
                    <param name="text" type="String"/>
                </params>
                <declaration name="txt" type="TextArea" line="57"/>
                <declaration name="p" type="Panel" line="63"/>
                <declaration name="b" type="Button" line="65"/>
                <class name="ActionEventListener" line="68">
                    <implements interface="ActionListener"/>
                    <method name="actionPerformed" type="void" line="69">
                        <params>
                            <param name="evt" type="ActionEvent"/>
                        </params>
                    </method>
                </class>
                <anonymous_class line="79">
                    <method name="windowClosing" type="void" line="81">
                        <params>
                            <param name="evt" type="WindowEvent"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="windowEventListener" type="WindowListener" line="79"/>
            </method>
            <declaration name="amh" type="AppletMessageHandler" line="88"/>
        </class>
        <class name="StdAppletViewerFactory" line="92">
            <comment line="275">
                XXX 99/9/10 probably should be &quot;private&quot;                
            </comment>
            <comment line="365">
                Methods for java.applet.AppletContext                
            </comment>
            <comment line="1051">
                                
            </comment>
            <implements interface="AppletViewerFactory"/>
            <javadoc line="92">
                Lets us construct one using unix-style one shot behaviors                
            </javadoc>
            <method name="createAppletViewer" type="AppletViewer" line="99">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="doc" type="URL"/>
                    <param name="atts" type="Hashtable"/>
                </params>
            </method>
            <method name="getBaseMenuBar" type="MenuBar" line="103"/>
            <method name="isStandalone" type="boolean" line="107"/>
        </class>
        <class name="AppletViewer" line="112">
            <extends class="Frame"/>
            <comment line="275">
                XXX 99/9/10 probably should be &quot;private&quot;                
            </comment>
            <comment line="365">
                Methods for java.applet.AppletContext                
            </comment>
            <comment line="1051">
                                
            </comment>
            <implements interface="AppletContext"/>
            <implements interface="Printable"/>
            <javadoc line="112">
                The applet viewer makes it possible to run a Java applet without using a browser.
                  For details on the syntax that &lt;B&gt;appletviewer&lt;/B&gt; supports, see
                  &lt;a href=&quot;../../../docs/tooldocs/appletviewertags.html&quot;&gt;AppletViewer Tags&lt;/a&gt;.
                  (The document named appletviewertags.html in the JDK&apos;s docs/tooldocs directory,
                  once the JDK docs have been installed.)                
            </javadoc>
            <declaration name="defaultSaveFile" type="String" line="122"/>
            <javadoc line="122">
                Some constants...                
            </javadoc>
            <declaration name="panel" type="AppletViewerPanel" line="127"/>
            <javadoc line="127">
                The panel in which the applet is being displayed.                
            </javadoc>
            <declaration name="label" type="Label" line="132"/>
            <javadoc line="132">
                The status line.                
            </javadoc>
            <declaration name="statusMsgStream" type="PrintStream" line="137"/>
            <javadoc line="137">
                output status messages to this stream                
            </javadoc>
            <declaration name="factory" type="AppletViewerFactory" line="143"/>
            <javadoc line="143">
                For cloning                
            </javadoc>
            <class name="UserActionListener" line="149">
                <implements interface="ActionListener"/>
                <method name="actionPerformed" type="void" line="150">
                    <params>
                        <param name="evt" type="ActionEvent"/>
                    </params>
                </method>
            </class>
            <javadoc line="155">
                Create the applet viewer                
            </javadoc>
            <method name="AppletViewer" type="constructor" line="159">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="doc" type="URL"/>
                    <param name="atts" type="Hashtable"/>
                    <param name="statusMsgStream" type="PrintStream"/>
                    <param name="factory" type="AppletViewerFactory"/>
                </params>
                <comment line="239">
                    sun.applet.AppletPanel                    
                </comment>
                <comment line="241">
                    Fixed #4754451: Applet can have methods running on main                    
                </comment>
                <comment line="242">
                    thread event queue.                    
                </comment>
                <comment line="243">
                                        
                </comment>
                <comment line="244">
                    The cause of this bug is that the frame of the applet                    
                </comment>
                <comment line="245">
                    is created in main thread group. Thus, when certain                    
                </comment>
                <comment line="246">
                    AWT/Swing events are generated, the events will be                    
                </comment>
                <comment line="247">
                    dispatched through the wrong event dispatch thread.                    
                </comment>
                <comment line="248">
                                        
                </comment>
                <comment line="249">
                    To fix this, we rearrange the AppContext with the frame,                    
                </comment>
                <comment line="250">
                    so the proper event queue will be looked up.                    
                </comment>
                <comment line="251">
                                        
                </comment>
                <comment line="252">
                    Swing also maintains a Frame list for the AppContext,                    
                </comment>
                <comment line="253">
                    so we will have to rearrange it as well.                    
                </comment>
                <comment line="254">
                                        
                </comment>
                <comment line="269">
                    Start the applet                    
                </comment>
                <declaration name="mb" type="MenuBar" line="164"/>
                <declaration name="m" type="Menu" line="166"/>
                <scope line="185"/>
                <anonymous_class line="202">
                    <method name="windowClosing" type="void" line="204">
                        <params>
                            <param name="evt" type="WindowEvent"/>
                        </params>
                    </method>
                    <method name="windowIconified" type="void" line="208">
                        <params>
                            <param name="evt" type="WindowEvent"/>
                        </params>
                    </method>
                    <method name="windowDeiconified" type="void" line="212">
                        <params>
                            <param name="evt" type="WindowEvent"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="windowEventListener" type="WindowListener" line="202"/>
                <class name="AppletEventListener" line="217">
                    <implements interface="AppletListener"/>
                    <declaration name="frame" type="Frame" line="219"/>
                    <method name="AppletEventListener" type="constructor" line="222">
                        <params>
                            <param name="frame" type="Frame"/>
                        </params>
                    </method>
                    <method name="appletStateChanged" type="void" line="227">
                        <params>
                            <param name="evt" type="AppletEvent"/>
                        </params>
                        <comment line="239">
                            sun.applet.AppletPanel                            
                        </comment>
                        <comment line="241">
                            Fixed #4754451: Applet can have methods running on main                            
                        </comment>
                        <comment line="242">
                            thread event queue.                            
                        </comment>
                        <comment line="243">
                                                        
                        </comment>
                        <comment line="244">
                            The cause of this bug is that the frame of the applet                            
                        </comment>
                        <comment line="245">
                            is created in main thread group. Thus, when certain                            
                        </comment>
                        <comment line="246">
                            AWT/Swing events are generated, the events will be                            
                        </comment>
                        <comment line="247">
                            dispatched through the wrong event dispatch thread.                            
                        </comment>
                        <comment line="248">
                                                        
                        </comment>
                        <comment line="249">
                            To fix this, we rearrange the AppContext with the frame,                            
                        </comment>
                        <comment line="250">
                            so the proper event queue will be looked up.                            
                        </comment>
                        <comment line="251">
                                                        
                        </comment>
                        <comment line="252">
                            Swing also maintains a Frame list for the AppContext,                            
                        </comment>
                        <comment line="253">
                            so we will have to rearrange it as well.                            
                        </comment>
                        <comment line="254">
                                                        
                        </comment>
                        <declaration name="src" type="AppletPanel" line="228"/>
                        <scope line="231">
                            <scope line="232"/>
                        </scope>
                        <scope line="238">
                            <declaration name="a" type="Applet" line="239"/>
                        </scope>
                    </method>
                </class>
            </method>
            <method name="addMenuItem" type="MenuItem" line="275">
                <params>
                    <param name="m" type="Menu"/>
                    <param name="s" type="String"/>
                </params>
                <declaration name="mItem" type="MenuItem" line="276"/>
            </method>
            <javadoc line="281">
                Send the initial set of events to the appletviewer event queue.
                  On start-up the current behaviour is to load the applet and call
                  Applet.init() and Applet.start().                
            </javadoc>
            <method name="initEventQueue" type="void" line="286">
                <comment line="287">
                    appletviewer.send.event is an undocumented and unsupported system                    
                </comment>
                <comment line="288">
                    property which is used exclusively for testing purposes.                    
                </comment>
                <comment line="292">
                    Add the standard events onto the event queue.                    
                </comment>
                <comment line="297">
                    We&apos;re testing AppletViewer.  Force the specified set of events                    
                </comment>
                <comment line="298">
                    onto the event queue, wait for the events to be processed, and                    
                </comment>
                <comment line="299">
                    exit.                    
                </comment>
                <comment line="301">
                    The list of events that will be executed is provided as a                    
                </comment>
                <comment line="302">
                    &quot;,&quot;-separated list.  No error-checking will be done on the list.                    
                </comment>
                <comment line="324">
                    non-fatal error if we get an unrecognized event                    
                </comment>
                <declaration name="eventList" type="String" line="289"/>
                <scope line="291"/>
                <scope line="296">
                    <declaration name="events" type="String[]" line="303"/>
                    <scope line="305"/>
                </scope>
            </method>
            <javadoc line="333">
                Split a string based on the presence of a specified separator.  Returns
                  an array of arbitrary length.  The end of each element in the array is
                  indicated by the separator of the end of the string.  If there is a
                  separator immediately before the end of the string, the final element
                  will be empty.  None of the strings will contain the separator.  Useful
                  when separating strings such as &quot;foo/bar/bas&quot; using separator &quot;/&quot;.                
                <param>
                    sep  The separator.                    
                </param>
                <param>
                    s    The string to split.                    
                </param>
                <return>
                    An array of strings.  Each string in the array is determined
                      by the location of the provided sep in the original string,
                      s.  Whitespace not stripped.                    
                </return>
            </javadoc>
            <method name="splitSeparator" type="String[]" line="347">
                <params>
                    <param name="sep" type="String"/>
                    <param name="s" type="String"/>
                </params>
                <comment line="356">
                    Add the final element.                    
                </comment>
                <declaration name="v" type="Vector" line="348"/>
                <declaration name="tokenStart" type="int" line="349"/>
                <declaration name="tokenEnd" type="int" line="350"/>
                <scope line="352"/>
                <declaration name="retVal" type="String[]" line="359"/>
            </method>
            <declaration name="audioClips" type="Map" line="368"/>
            <javadoc line="370">
                Get an audio clip.                
            </javadoc>
            <method name="getAudioClip" type="AudioClip" line="373">
                <params>
                    <param name="url" type="URL"/>
                </params>
                <scope line="375">
                    <declaration name="clip" type="AudioClip" line="376"/>
                    <scope line="377"/>
                </scope>
            </method>
            <declaration name="imageRefs" type="Map" line="384"/>
            <javadoc line="386">
                Get an image.                
            </javadoc>
            <method name="getImage" type="Image" line="389">
                <params>
                    <param name="url" type="URL"/>
                </params>
            </method>
            <method name="getCachedImage" type="Image" line="393">
                <params>
                    <param name="url" type="URL"/>
                </params>
                <comment line="394">
                    System.getSecurityManager().checkConnection(url.getHost(), url.getPort());                    
                </comment>
            </method>
            <javadoc line="398">
                Get an image ref.                
            </javadoc>
            <method name="getCachedImageRef" type="Ref" line="401">
                <params>
                    <param name="url" type="URL"/>
                </params>
                <scope line="402">
                    <declaration name="ref" type="AppletImageRef" line="403"/>
                    <scope line="404"/>
                </scope>
            </method>
            <javadoc line="412">
                Flush the image cache.                
            </javadoc>
            <method name="flushImageCache" type="void" line="415"/>
            <declaration name="appletPanels" type="Vector" line="419"/>
            <javadoc line="421">
                Get an applet by name.                
            </javadoc>
            <method name="getApplet" type="Applet" line="424">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="security" type="AppletSecurity" line="425"/>
                <declaration name="panelSp" type="SocketPermission" line="427"/>
                <scope line="429">
                    <declaration name="p" type="AppletPanel" line="430"/>
                    <declaration name="param" type="String" line="431"/>
                    <scope line="432"/>
                    <scope line="436">
                        <declaration name="sp" type="SocketPermission" line="438"/>
                        <scope line="441"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="449">
                Return an enumeration of all the accessible
                  applets on this page.                
            </javadoc>
            <method name="getApplets" type="Enumeration" line="453">
                <declaration name="security" type="AppletSecurity" line="454"/>
                <declaration name="v" type="Vector" line="455"/>
                <declaration name="panelSp" type="SocketPermission" line="456"/>
                <scope line="459">
                    <declaration name="p" type="AppletPanel" line="460"/>
                    <scope line="461">
                        <declaration name="sp" type="SocketPermission" line="463"/>
                        <scope line="465"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="473">
                Ignore.                
            </javadoc>
            <method name="showDocument" type="void" line="476">
                <params>
                    <param name="url" type="URL"/>
                </params>
            </method>
            <javadoc line="479">
                Ignore.                
            </javadoc>
            <method name="showDocument" type="void" line="482">
                <params>
                    <param name="url" type="URL"/>
                    <param name="target" type="String"/>
                </params>
            </method>
            <javadoc line="485">
                Show status.                
            </javadoc>
            <method name="showStatus" type="void" line="488">
                <params>
                    <param name="status" type="String"/>
                </params>
            </method>
            <method name="setStream" type="void" line="492">
                <params>
                    <param name="key" type="String"/>
                    <param name="stream" type="InputStream"/>
                </params>
                <comment line="493">
                    We do nothing.                    
                </comment>
            </method>
            <method name="getStream" type="InputStream" line="496">
                <params>
                    <param name="key" type="String"/>
                </params>
                <comment line="497">
                    We do nothing.                    
                </comment>
            </method>
            <method name="getStreamKeys" type="Iterator" line="501">
                <comment line="502">
                    We do nothing.                    
                </comment>
            </method>
            <declaration name="systemParam" type="Hashtable" line="506"/>
            <javadoc line="506">
                System parameters.                
            </javadoc>
            <scope line="511"/>
            <javadoc line="522">
                Print the HTML tag.                
            </javadoc>
            <method name="printTag" type="void" line="525">
                <params>
                    <param name="out" type="PrintStream"/>
                    <param name="atts" type="Hashtable"/>
                </params>
                <comment line="556">
                    A very slow sorting algorithm                    
                </comment>
                <declaration name="v" type="String" line="528"/>
                <scope line="529"/>
                <scope line="534"/>
                <scope line="539"/>
                <scope line="545"/>
                <scope line="551"/>
                <declaration name="len" type="int" line="557"/>
                <declaration name="params" type="String" line="558"/>
                <scope line="560">
                    <declaration name="param" type="String" line="561"/>
                    <declaration name="i" type="int" line="562"/>
                    <scope line="563">
                        <scope line="564"/>
                    </scope>
                </scope>
                <scope line="573">
                    <declaration name="param" type="String" line="574"/>
                    <scope line="575"/>
                </scope>
            </method>
            <javadoc line="583">
                Make sure the atrributes are uptodate.                
            </javadoc>
            <method name="updateAtts" type="void" line="586">
                <declaration name="d" type="Dimension" line="587"/>
                <declaration name="in" type="Insets" line="588"/>
            </method>
            <javadoc line="595">
                Restart the applet.                
            </javadoc>
            <method name="appletRestart" type="void" line="598"/>
            <javadoc line="605">
                Reload the applet.                
            </javadoc>
            <method name="appletReload" type="void" line="608">
                <comment line="613">
                    Fixed #4501142: Classlaoder sharing policy doesn&apos;t
                     take &quot;archive&quot; into account. This will be overridden
                     by Java Plug-in.                     [stanleyh]                    
                </comment>
                <comment line="620">
                    Make sure we don&apos;t have two threads running through the event queue
                     at the same time.                    
                </comment>
                <comment line="628">
                    abort the reload                    
                </comment>
                <scope line="624"/>
                <scope line="627"/>
            </method>
            <javadoc line="637">
                Save the applet to a well known file (for now) as a serialized object                
            </javadoc>
            <method name="appletSave" type="void" line="640">
                <comment line="644">
                    XXX: this privileged block should be made smaller                    
                </comment>
                <comment line="645">
                    by initializing a private static variable with &quot;user.dir&quot;                    
                </comment>
                <comment line="647">
                    Applet needs to be stopped for serialization to succeed.                    
                </comment>
                <comment line="648">
                    Since panel.sendEvent only queues the event, there is a                    
                </comment>
                <comment line="649">
                    chance that the event will not be processed before                    
                </comment>
                <comment line="650">
                    serialization begins.  However, by sending the event before                    
                </comment>
                <comment line="651">
                    FileDialog is created, enough time is given such that this                    
                </comment>
                <comment line="652">
                    situation is unlikely to ever occur.                    
                </comment>
                <comment line="658">
                    needed for a bug under Solaris...                    
                </comment>
                <comment line="664">
                    Restart applet if Save is cancelled.                    
                </comment>
                <comment line="666">
                    cancelled                    
                </comment>
                <anonymous_class line="641">
                    <method name="run" type="Object" line="643">
                        <comment line="644">
                            XXX: this privileged block should be made smaller                            
                        </comment>
                        <comment line="645">
                            by initializing a private static variable with &quot;user.dir&quot;                            
                        </comment>
                        <comment line="647">
                            Applet needs to be stopped for serialization to succeed.                            
                        </comment>
                        <comment line="648">
                            Since panel.sendEvent only queues the event, there is a                            
                        </comment>
                        <comment line="649">
                            chance that the event will not be processed before                            
                        </comment>
                        <comment line="650">
                            serialization begins.  However, by sending the event before                            
                        </comment>
                        <comment line="651">
                            FileDialog is created, enough time is given such that this                            
                        </comment>
                        <comment line="652">
                            situation is unlikely to ever occur.                            
                        </comment>
                        <comment line="658">
                            needed for a bug under Solaris...                            
                        </comment>
                        <comment line="664">
                            Restart applet if Save is cancelled.                            
                        </comment>
                        <comment line="666">
                            cancelled                            
                        </comment>
                        <declaration name="fd" type="FileDialog" line="655"/>
                        <declaration name="fname" type="String" line="662"/>
                        <scope line="663"/>
                        <declaration name="dname" type="String" line="668"/>
                        <declaration name="file" type="File" line="669"/>
                        <scope line="671">
                            <declaration name="s" type="BufferedOutputStream" line="672"/>
                            <declaration name="os" type="ObjectOutputStream" line="673"/>
                        </scope>
                        <scope line="677"/>
                        <scope line="679"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="687">
                Clone the viewer and the applet.                
            </javadoc>
            <method name="appletClone" type="void" line="690">
                <declaration name="p" type="Point" line="691"/>
            </method>
            <javadoc line="697">
                Show the applet tag.                
            </javadoc>
            <method name="appletTag" type="void" line="700">
                <declaration name="out" type="ByteArrayOutputStream" line="701"/>
                <declaration name="p" type="Point" line="706"/>
            </method>
            <javadoc line="710">
                Show the applet info.                
            </javadoc>
            <method name="appletInfo" type="void" line="713">
                <declaration name="str" type="String" line="714"/>
                <scope line="715"/>
                <declaration name="atts" type="String" line="720"/>
                <scope line="721">
                    <scope line="722"/>
                </scope>
                <scope line="725"/>
                <declaration name="p" type="Point" line="729"/>
            </method>
            <javadoc line="734">
                Show character encoding type                
            </javadoc>
            <method name="appletCharacterEncoding" type="void" line="737"/>
            <javadoc line="741">
                Edit the applet.                
            </javadoc>
            <method name="appletEdit" type="void" line="744"/>
            <javadoc line="747">
                Print the applet.                
            </javadoc>
            <method name="appletPrint" type="void" line="750">
                <declaration name="pj" type="PrinterJob" line="751"/>
                <scope line="753">
                    <declaration name="aset" type="PrintRequestAttributeSet" line="754"/>
                    <scope line="755">
                        <scope line="757"/>
                        <scope line="760"/>
                    </scope>
                    <scope line="763"/>
                </scope>
                <scope line="766"/>
            </method>
            <method name="print" type="int" line="771">
                <params>
                    <param name="graphics" type="Graphics"/>
                    <param name="pf" type="PageFormat"/>
                    <param name="pageIndex" type="int"/>
                </params>
                <scope line="772"/>
                <scope line="774">
                    <declaration name="g2d" type="Graphics2D" line="775"/>
                </scope>
            </method>
            <declaration name="props" type="AppletProps" line="782"/>
            <javadoc line="782">
                Properties.                
            </javadoc>
            <method name="networkProperties" type="void" line="786">
                <scope line="787"/>
            </method>
            <javadoc line="794">
                Start the applet.                
            </javadoc>
            <method name="appletStart" type="void" line="797"/>
            <javadoc line="801">
                Stop the applet.                
            </javadoc>
            <method name="appletStop" type="void" line="804"/>
            <javadoc line="808">
                Shutdown a viewer.
                  Stop, Destroy, Dispose and Quit a viewer                
            </javadoc>
            <method name="appletShutdown" type="void" line="812">
                <params>
                    <param name="p" type="AppletPanel"/>
                </params>
            </method>
            <javadoc line="819">
                Close this viewer.
                  Stop, Destroy, Dispose and Quit an AppletView, then
                  reclaim resources and exit the program if this is
                  the last applet.                
            </javadoc>
            <method name="appletClose" type="void" line="825">
                <comment line="827">
                    The caller thread is event dispatch thread, so                    
                </comment>
                <comment line="828">
                    spawn a new thread to avoid blocking the event queue                    
                </comment>
                <comment line="829">
                    when calling appletShutdown.                    
                </comment>
                <comment line="830">
                                        
                </comment>
                <declaration name="p" type="AppletPanel" line="831"/>
                <anonymous_class line="834">
                    <method name="run" type="void" line="836">
                        <scope line="841"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="848">
                Exit the program.
                  Exit from the program (if not stand alone) - do no clean-up                
            </javadoc>
            <method name="appletSystemExit" type="void" line="852"/>
            <javadoc line="857">
                Quit all viewers.
                  Shutdown all viewers properly then
                  exit from the program (if not stand alone)                
            </javadoc>
            <method name="appletQuit" type="void" line="863">
                <comment line="864">
                    The caller thread is event dispatch thread, so                    
                </comment>
                <comment line="865">
                    spawn a new thread to avoid blocking the event queue                    
                </comment>
                <comment line="866">
                    when calling appletShutdown.                    
                </comment>
                <comment line="867">
                                        
                </comment>
                <anonymous_class line="869">
                    <method name="run" type="void" line="871">
                        <scope line="872">
                            <declaration name="p" type="AppletPanel" line="873"/>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="881">
                Handle events.                
            </javadoc>
            <method name="processUserAction" type="void" line="884">
                <params>
                    <param name="evt" type="ActionEvent"/>
                </params>
                <comment line="957">
                    statusMsgStream.println(&quot;evt = &quot; + evt);                    
                </comment>
                <declaration name="label" type="String" line="886"/>
                <scope line="888"/>
                <scope line="893"/>
                <scope line="898"/>
                <scope line="903"/>
                <scope line="908"/>
                <scope line="913"/>
                <scope line="918"/>
                <scope line="923"/>
                <scope line="928"/>
                <scope line="933"/>
                <scope line="938"/>
                <scope line="943"/>
                <scope line="948"/>
                <scope line="953"/>
            </method>
            <javadoc line="960">
                How many applets are running?                
            </javadoc>
            <method name="countApplets" type="int" line="964"/>
            <declaration name="c" type="int" line="969"/>
            <javadoc line="969">
                The current character.                
            </javadoc>
            <javadoc line="974">
                Scan spaces.                
            </javadoc>
            <method name="skipSpace" type="void" line="977">
                <params>
                    <param name="in" type="Reader"/>
                </params>
                <scope line="979"/>
            </method>
            <javadoc line="984">
                Scan identifier                
            </javadoc>
            <method name="scanIdentifier" type="String" line="987">
                <params>
                    <param name="in" type="Reader"/>
                </params>
                <declaration name="buf" type="StringBuffer" line="988"/>
                <scope line="989">
                    <scope line="992"/>
                    <scope line="995"/>
                </scope>
            </method>
            <javadoc line="1001">
                Scan tag                
            </javadoc>
            <method name="scanTag" type="Hashtable" line="1004">
                <params>
                    <param name="in" type="Reader"/>
                </params>
                <comment line="1033">
                    statusMsgStream.println(&quot;PUT &quot; + att + &quot; = &apos;&quot; + val + &quot;&apos;&quot;);                    
                </comment>
                <comment line="1045">
                    skipSpace(in);                    
                </comment>
                <declaration name="atts" type="Hashtable" line="1005"/>
                <scope line="1007">
                    <declaration name="att" type="String" line="1008"/>
                    <declaration name="val" type="String" line="1009"/>
                    <scope line="1011">
                        <declaration name="quote" type="int" line="1012"/>
                        <scope line="1015"/>
                        <declaration name="buf" type="StringBuffer" line="1019"/>
                        <scope line="1023"/>
                        <scope line="1027"/>
                    </scope>
                    <scope line="1034"/>
                    <scope line="1037"/>
                </scope>
            </method>
            <declaration name="x" type="int" line="1051"/>
            <declaration name="y" type="int" line="1052"/>
            <declaration name="XDELTA" type="int" line="1053"/>
            <declaration name="YDELTA" type="int" line="1054"/>
            <declaration name="encoding" type="String" line="1056"/>
            <method name="makeReader" type="Reader" line="1058">
                <params>
                    <param name="is" type="InputStream"/>
                </params>
                <scope line="1059">
                    <scope line="1060"/>
                    <scope line="1062"/>
                </scope>
                <declaration name="r" type="InputStreamReader" line="1064"/>
            </method>
            <javadoc line="1069">
                Scan an html file for &lt;applet&gt; tags                
            </javadoc>
            <method name="parse" type="void" line="1072">
                <params>
                    <param name="url" type="URL"/>
                    <param name="enc" type="String"/>
                </params>
            </method>
            <method name="parse" type="void" line="1077">
                <params>
                    <param name="url" type="URL"/>
                </params>
            </method>
            <method name="parse" type="void" line="1082">
                <params>
                    <param name="url" type="URL"/>
                    <param name="statusMsgStream" type="PrintStream"/>
                    <param name="factory" type="AppletViewerFactory"/>
                </params>
                <comment line="1083">
                    &lt;OBJECT&gt; &lt;EMBED&gt; tag flags                    
                </comment>
                <comment line="1088">
                    warning messages                    
                </comment>
                <comment line="1104">
                    The original URL may have been redirected - this
                     sets it to whatever URLcodebase we ended up getting                    
                </comment>
                <comment line="1126">
                    We can&apos;t test for a code tag until &lt;/OBJECT&gt;                    
                </comment>
                <comment line="1127">
                    because it is a parameter, not an attribute.                    
                </comment>
                <comment line="1136">
                    XXX 5/18 In general this code just simply                    
                </comment>
                <comment line="1137">
                    shouldn&apos;t be part of parsing.  It&apos;s presence                    
                </comment>
                <comment line="1138">
                    causes things to be a little too much of a                    
                </comment>
                <comment line="1139">
                    hack.                    
                </comment>
                <comment line="1143">
                    make sure we don&apos;t go too far!                    
                </comment>
                <comment line="1192">
                    The &lt;OBJECT&gt; attribute codebase isn&apos;t what                    
                </comment>
                <comment line="1193">
                    we want. If its defined, remove it.                    
                </comment>
                <declaration name="isAppletTag" type="boolean" line="1084"/>
                <declaration name="isObjectTag" type="boolean" line="1085"/>
                <declaration name="isEmbedTag" type="boolean" line="1086"/>
                <declaration name="requiresNameWarning" type="String" line="1089"/>
                <declaration name="paramOutsideWarning" type="String" line="1090"/>
                <declaration name="appletRequiresCodeWarning" type="String" line="1091"/>
                <declaration name="appletRequiresHeightWarning" type="String" line="1092"/>
                <declaration name="appletRequiresWidthWarning" type="String" line="1093"/>
                <declaration name="objectRequiresCodeWarning" type="String" line="1094"/>
                <declaration name="objectRequiresHeightWarning" type="String" line="1095"/>
                <declaration name="objectRequiresWidthWarning" type="String" line="1096"/>
                <declaration name="embedRequiresCodeWarning" type="String" line="1097"/>
                <declaration name="embedRequiresHeightWarning" type="String" line="1098"/>
                <declaration name="embedRequiresWidthWarning" type="String" line="1099"/>
                <declaration name="appNotLongerSupportedWarning" type="String" line="1100"/>
                <declaration name="conn" type="java.net.URLConnection" line="1102"/>
                <declaration name="in" type="Reader" line="1103"/>
                <declaration name="ydisp" type="int" line="1109"/>
                <declaration name="atts" type="Hashtable" line="1110"/>
                <scope line="1112">
                    <scope line="1117">
                        <scope line="1119">
                            <declaration name="nm" type="String" line="1121"/>
                            <scope line="1124">
                                <scope line="1128">
                                    <scope line="1129"/>
                                </scope>
                                <scope line="1135">
                                    <declaration name="d" type="Dimension" line="1144"/>
                                    <scope line="1145"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="1157">
                            <declaration name="nm" type="String" line="1158"/>
                            <scope line="1159">
                                <declaration name="t" type="Hashtable" line="1160"/>
                                <declaration name="att" type="String" line="1161"/>
                                <scope line="1162"/>
                                <scope line="1164">
                                    <declaration name="val" type="String" line="1165"/>
                                    <scope line="1166"/>
                                    <scope line="1168"/>
                                    <scope line="1170"/>
                                </scope>
                            </scope>
                            <scope line="1175">
                                <scope line="1178"/>
                                <scope line="1181"/>
                                <scope line="1184"/>
                            </scope>
                            <scope line="1189">
                                <scope line="1194"/>
                                <scope line="1198"/>
                                <scope line="1201"/>
                            </scope>
                            <scope line="1206">
                                <scope line="1210"/>
                                <scope line="1213"/>
                                <scope line="1216"/>
                            </scope>
                            <scope line="1221">
                                <declaration name="atts2" type="Hashtable" line="1223"/>
                                <scope line="1225"/>
                                <scope line="1230"/>
                                <scope line="1234"/>
                                <scope line="1237"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1249">
                Old main entry point.                
                <deprecated>
                                        
                </deprecated>
            </javadoc>
            <method name="main" type="void" line="1255">
                <params>
                    <param name="argv" type="String"/>
                </params>
                <comment line="1256">
                    re-route everything to the new main entry point                    
                </comment>
            </method>
            <declaration name="amh" type="AppletMessageHandler" line="1260"/>
            <method name="checkConnect" type="void" line="1263">
                <params>
                    <param name="url" type="URL"/>
                </params>
                <declaration name="security" type="SecurityManager" line="1264"/>
                <scope line="1265">
                    <scope line="1266">
                        <declaration name="perm" type="java.security.Permission" line="1267"/>
                    </scope>
                    <scope line="1273"/>
                </scope>
            </method>
        </class>
    </source>