<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.applet">
        <import package="java.util"/>
        <import package="java.io"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.awt.print"/>
        <import package="javax.print.attribute"/>
        <import package="java.applet"/>
        <import package="java.net.URL"/>
        <import package="java.net.MalformedURLException"/>
        <import package="java.net.SocketPermission"/>
        <import package="sun.misc.Ref"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="java.lang.reflect.Method"/>
        <import package="sun.awt.SunToolkit"/>
        <import package="sun.awt.AppContext"/>
        <import package="java.lang.ref.WeakReference"/>
        <class name="TextFrame" line="20">
            <extends class="Frame"/>
            <javadoc line="20">
                A frame to show the applet tag in.                
            </javadoc>
            <javadoc line="24">
                Create the tag frame.                
            </javadoc>
            <method name="TextFrame" type="constructor" line="27">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="title" type="String"/>
                    <param name="text" type="String"/>
                </params>
                <declaration name="txt" type="TextArea" line="29"/>
                <declaration name="p" type="Panel" line="33"/>
                <declaration name="b" type="Button" line="35"/>
                <class name="ActionEventListener" line="37">
                    <implements interface="ActionListener"/>
                    <method name="actionPerformed" type="void" line="38">
                        <params>
                            <param name="evt" type="ActionEvent"/>
                        </params>
                    </method>
                </class>
                <anonymous_class line="46">
                    <method name="windowClosing" type="void" line="47">
                        <params>
                            <param name="evt" type="WindowEvent"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="windowEventListener" type="WindowListener" line="46"/>
            </method>
            <declaration name="amh" type="AppletMessageHandler" line="54"/>
        </class>
        <class name="StdAppletViewerFactory" line="56">
            <implements interface="AppletViewerFactory"/>
            <javadoc line="56">
                Lets us construct one using unix-style one shot behaviors                
            </javadoc>
            <method name="createAppletViewer" type="AppletViewer" line="60">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="doc" type="URL"/>
                    <param name="atts" type="Hashtable"/>
                </params>
            </method>
            <method name="getBaseMenuBar" type="MenuBar" line="63"/>
            <method name="isStandalone" type="boolean" line="66"/>
        </class>
        <class name="AppletViewer" line="70">
            <extends class="Frame"/>
            <implements interface="AppletContext"/>
            <implements interface="Printable"/>
            <javadoc line="70">
                The applet viewer makes it possible to run a Java applet without using a browser.
                  For details on the syntax that &lt;B&gt;appletviewer&lt;/B&gt; supports, see
                  &lt;a href=&quot;../../../docs/tooldocs/appletviewertags.html&quot;&gt;AppletViewer Tags&lt;/a&gt;.
                  (The document named appletviewertags.html in the JDK&apos;s docs/tooldocs directory,
                  once the JDK docs have been installed.)                
            </javadoc>
            <declaration name="defaultSaveFile" type="String" line="78"/>
            <javadoc line="78">
                Some constants...                
            </javadoc>
            <declaration name="panel" type="AppletViewerPanel" line="82"/>
            <javadoc line="82">
                The panel in which the applet is being displayed.                
            </javadoc>
            <declaration name="label" type="Label" line="86"/>
            <javadoc line="86">
                The status line.                
            </javadoc>
            <declaration name="statusMsgStream" type="PrintStream" line="90"/>
            <javadoc line="90">
                output status messages to this stream                
            </javadoc>
            <declaration name="factory" type="AppletViewerFactory" line="94"/>
            <javadoc line="94">
                For cloning                
            </javadoc>
            <class name="UserActionListener" line="98">
                <implements interface="ActionListener"/>
                <method name="actionPerformed" type="void" line="99">
                    <params>
                        <param name="evt" type="ActionEvent"/>
                    </params>
                </method>
            </class>
            <javadoc line="103">
                Create the applet viewer                
            </javadoc>
            <method name="AppletViewer" type="constructor" line="106">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="doc" type="URL"/>
                    <param name="atts" type="Hashtable"/>
                    <param name="statusMsgStream" type="PrintStream"/>
                    <param name="factory" type="AppletViewerFactory"/>
                </params>
                <declaration name="mb" type="MenuBar" line="110"/>
                <declaration name="m" type="Menu" line="111"/>
                <scope line="129"/>
                <anonymous_class line="141">
                    <method name="windowClosing" type="void" line="142">
                        <params>
                            <param name="evt" type="WindowEvent"/>
                        </params>
                    </method>
                    <method name="windowIconified" type="void" line="145">
                        <params>
                            <param name="evt" type="WindowEvent"/>
                        </params>
                    </method>
                    <method name="windowDeiconified" type="void" line="148">
                        <params>
                            <param name="evt" type="WindowEvent"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="windowEventListener" type="WindowListener" line="141"/>
                <class name="AppletEventListener" line="153">
                    <implements interface="AppletListener"/>
                    <declaration name="frame" type="Frame" line="154"/>
                    <method name="AppletEventListener" type="constructor" line="155">
                        <params>
                            <param name="frame" type="Frame"/>
                        </params>
                    </method>
                    <method name="appletStateChanged" type="void" line="158">
                        <params>
                            <param name="evt" type="AppletEvent"/>
                        </params>
                        <declaration name="src" type="AppletPanel" line="159"/>
                        <scope line="162">
                            <scope line="163"/>
                        </scope>
                        <scope line="170">
                            <declaration name="a" type="Applet" line="171"/>
                        </scope>
                    </method>
                </class>
            </method>
            <method name="addMenuItem" type="MenuItem" line="185">
                <params>
                    <param name="m" type="Menu"/>
                    <param name="s" type="String"/>
                </params>
                <declaration name="mItem" type="MenuItem" line="186"/>
            </method>
            <javadoc line="190">
                Send the initial set of events to the appletviewer event queue.
                  On start-up the current behaviour is to load the applet and call
                  Applet.init() and Applet.start().                
            </javadoc>
            <method name="initEventQueue" type="void" line="195">
                <declaration name="eventList" type="String" line="196"/>
                <scope line="197"/>
                <scope line="202">
                    <declaration name="events" type="String[]" line="203"/>
                    <scope line="204"/>
                </scope>
            </method>
            <javadoc line="220">
                Split a string based on the presence of a specified separator.  Returns
                  an array of arbitrary length.  The end of each element in the array is
                  indicated by the separator of the end of the string.  If there is a
                  separator immediately before the end of the string, the final element
                  will be empty.  None of the strings will contain the separator.  Useful
                  when separating strings such as &quot;foo/bar/bas&quot; using separator &quot;/&quot;.                
                <param>
                    sep  The separator.                    
                </param>
                <param>
                    s    The string to split.                    
                </param>
                <return>
                    An array of strings.  Each string in the array is determined
                      by the location of the provided sep in the original string,
                      s.  Whitespace not stripped.                    
                </return>
            </javadoc>
            <method name="splitSeparator" type="String[]" line="233">
                <params>
                    <param name="sep" type="String"/>
                    <param name="s" type="String"/>
                </params>
                <declaration name="v" type="Vector" line="234"/>
                <declaration name="tokenStart" type="int" line="235"/>
                <declaration name="tokenEnd" type="int" line="236"/>
                <scope line="237"/>
                <declaration name="retVal" type="String[]" line="242"/>
            </method>
            <declaration name="audioClips" type="Map" line="246"/>
            <javadoc line="247">
                Get an audio clip.                
            </javadoc>
            <method name="getAudioClip" type="AudioClip" line="250">
                <params>
                    <param name="url" type="URL"/>
                </params>
                <scope line="252">
                    <declaration name="clip" type="AudioClip" line="253"/>
                    <scope line="254"/>
                </scope>
            </method>
            <declaration name="imageRefs" type="Map" line="260"/>
            <javadoc line="261">
                Get an image.                
            </javadoc>
            <method name="getImage" type="Image" line="264">
                <params>
                    <param name="url" type="URL"/>
                </params>
            </method>
            <method name="getCachedImage" type="Image" line="267">
                <params>
                    <param name="url" type="URL"/>
                </params>
            </method>
            <javadoc line="270">
                Get an image ref.                
            </javadoc>
            <method name="getCachedImageRef" type="Ref" line="273">
                <params>
                    <param name="url" type="URL"/>
                </params>
                <scope line="274">
                    <declaration name="ref" type="AppletImageRef" line="275"/>
                    <scope line="276"/>
                </scope>
            </method>
            <javadoc line="283">
                Flush the image cache.                
            </javadoc>
            <method name="flushImageCache" type="void" line="286"/>
            <declaration name="appletPanels" type="Vector" line="289"/>
            <javadoc line="290">
                Get an applet by name.                
            </javadoc>
            <method name="getApplet" type="Applet" line="293">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="security" type="AppletSecurity" line="294"/>
                <declaration name="panelSp" type="SocketPermission" line="296"/>
                <scope line="297">
                    <declaration name="p" type="AppletPanel" line="298"/>
                    <declaration name="param" type="String" line="299"/>
                    <scope line="300"/>
                    <scope line="303">
                        <declaration name="sp" type="SocketPermission" line="304"/>
                        <scope line="305"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="312">
                Return an enumeration of all the accessible
                  applets on this page.                
            </javadoc>
            <method name="getApplets" type="Enumeration" line="316">
                <declaration name="security" type="AppletSecurity" line="317"/>
                <declaration name="v" type="Vector" line="318"/>
                <declaration name="panelSp" type="SocketPermission" line="319"/>
                <scope line="320">
                    <declaration name="p" type="AppletPanel" line="321"/>
                    <scope line="322">
                        <declaration name="sp" type="SocketPermission" line="323"/>
                        <scope line="324"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="331">
                Ignore.                
            </javadoc>
            <method name="showDocument" type="void" line="334">
                <params>
                    <param name="url" type="URL"/>
                </params>
            </method>
            <javadoc line="336">
                Ignore.                
            </javadoc>
            <method name="showDocument" type="void" line="339">
                <params>
                    <param name="url" type="URL"/>
                    <param name="target" type="String"/>
                </params>
            </method>
            <javadoc line="341">
                Show status.                
            </javadoc>
            <method name="showStatus" type="void" line="344">
                <params>
                    <param name="status" type="String"/>
                </params>
            </method>
            <method name="setStream" type="void" line="347">
                <params>
                    <param name="key" type="String"/>
                    <param name="stream" type="InputStream"/>
                </params>
            </method>
            <method name="getStream" type="InputStream" line="349">
                <params>
                    <param name="key" type="String"/>
                </params>
            </method>
            <method name="getStreamKeys" type="Iterator" line="352"/>
            <declaration name="systemParam" type="Hashtable" line="355"/>
            <javadoc line="355">
                System parameters.                
            </javadoc>
            <scope line="359"/>
            <javadoc line="369">
                Print the HTML tag.                
            </javadoc>
            <method name="printTag" type="void" line="372">
                <params>
                    <param name="out" type="PrintStream"/>
                    <param name="atts" type="Hashtable"/>
                </params>
                <declaration name="v" type="String" line="374"/>
                <scope line="375"/>
                <scope line="379"/>
                <scope line="384"/>
                <scope line="389"/>
                <scope line="394"/>
                <declaration name="len" type="int" line="398"/>
                <declaration name="params" type="String" line="399"/>
                <scope line="401">
                    <declaration name="param" type="String" line="402"/>
                    <declaration name="i" type="int" line="403"/>
                    <scope line="404">
                        <scope line="405"/>
                    </scope>
                </scope>
                <scope line="413">
                    <declaration name="param" type="String" line="414"/>
                    <scope line="415"/>
                </scope>
            </method>
            <javadoc line="421">
                Make sure the atrributes are uptodate.                
            </javadoc>
            <method name="updateAtts" type="void" line="424">
                <declaration name="d" type="Dimension" line="425"/>
                <declaration name="in" type="Insets" line="426"/>
            </method>
            <javadoc line="430">
                Restart the applet.                
            </javadoc>
            <method name="appletRestart" type="void" line="433"/>
            <javadoc line="439">
                Reload the applet.                
            </javadoc>
            <method name="appletReload" type="void" line="442">
                <scope line="447"/>
                <scope line="451"/>
            </method>
            <javadoc line="459">
                Save the applet to a well known file (for now) as a serialized object                
            </javadoc>
            <method name="appletSave" type="void" line="462">
                <anonymous_class line="463">
                    <method name="run" type="Object" line="464">
                        <declaration name="fd" type="FileDialog" line="466"/>
                        <declaration name="fname" type="String" line="470"/>
                        <scope line="471"/>
                        <declaration name="dname" type="String" line="475"/>
                        <declaration name="file" type="File" line="476"/>
                        <scope line="477">
                            <declaration name="s" type="BufferedOutputStream" line="478"/>
                            <declaration name="os" type="ObjectOutputStream" line="479"/>
                        </scope>
                        <scope line="483"/>
                        <scope line="486"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="494">
                Clone the viewer and the applet.                
            </javadoc>
            <method name="appletClone" type="void" line="497">
                <declaration name="p" type="Point" line="498"/>
            </method>
            <javadoc line="502">
                Show the applet tag.                
            </javadoc>
            <method name="appletTag" type="void" line="505">
                <declaration name="out" type="ByteArrayOutputStream" line="506"/>
                <declaration name="p" type="Point" line="510"/>
            </method>
            <javadoc line="513">
                Show the applet info.                
            </javadoc>
            <method name="appletInfo" type="void" line="516">
                <declaration name="str" type="String" line="517"/>
                <scope line="518"/>
                <declaration name="atts" type="String" line="522"/>
                <scope line="523">
                    <scope line="524"/>
                </scope>
                <scope line="528"/>
                <declaration name="p" type="Point" line="531"/>
            </method>
            <javadoc line="534">
                Show character encoding type                
            </javadoc>
            <method name="appletCharacterEncoding" type="void" line="537"/>
            <javadoc line="540">
                Edit the applet.                
            </javadoc>
            <method name="appletEdit" type="void" line="543"/>
            <javadoc line="545">
                Print the applet.                
            </javadoc>
            <method name="appletPrint" type="void" line="548">
                <declaration name="pj" type="PrinterJob" line="549"/>
                <scope line="550">
                    <declaration name="aset" type="PrintRequestAttributeSet" line="551"/>
                    <scope line="552">
                        <scope line="554"/>
                        <scope line="558"/>
                    </scope>
                    <scope line="562"/>
                </scope>
                <scope line="566"/>
            </method>
            <method name="print" type="int" line="570">
                <params>
                    <param name="graphics" type="Graphics"/>
                    <param name="pf" type="PageFormat"/>
                    <param name="pageIndex" type="int"/>
                </params>
                <scope line="571"/>
                <scope line="574">
                    <declaration name="g2d" type="Graphics2D" line="575"/>
                </scope>
            </method>
            <declaration name="props" type="AppletProps" line="581"/>
            <javadoc line="581">
                Properties.                
            </javadoc>
            <method name="networkProperties" type="void" line="585">
                <scope line="586"/>
            </method>
            <javadoc line="592">
                Start the applet.                
            </javadoc>
            <method name="appletStart" type="void" line="595"/>
            <javadoc line="598">
                Stop the applet.                
            </javadoc>
            <method name="appletStop" type="void" line="601"/>
            <javadoc line="604">
                Shutdown a viewer.
                  Stop, Destroy, Dispose and Quit a viewer                
            </javadoc>
            <method name="appletShutdown" type="void" line="608">
                <params>
                    <param name="p" type="AppletPanel"/>
                </params>
            </method>
            <javadoc line="614">
                Close this viewer.
                  Stop, Destroy, Dispose and Quit an AppletView, then
                  reclaim resources and exit the program if this is
                  the last applet.                
            </javadoc>
            <method name="appletClose" type="void" line="620">
                <declaration name="p" type="AppletPanel" line="621"/>
                <anonymous_class line="622">
                    <method name="run" type="void" line="623">
                        <scope line="627"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="634">
                Exit the program.
                  Exit from the program (if not stand alone) - do no clean-up                
            </javadoc>
            <method name="appletSystemExit" type="void" line="638"/>
            <javadoc line="641">
                Quit all viewers.
                  Shutdown all viewers properly then
                  exit from the program (if not stand alone)                
            </javadoc>
            <method name="appletQuit" type="void" line="646">
                <anonymous_class line="647">
                    <method name="run" type="void" line="648">
                        <scope line="649">
                            <declaration name="p" type="AppletPanel" line="650"/>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="658">
                Handle events.                
            </javadoc>
            <method name="processUserAction" type="void" line="661">
                <params>
                    <param name="evt" type="ActionEvent"/>
                </params>
                <declaration name="label" type="String" line="662"/>
                <scope line="663"/>
                <scope line="667"/>
                <scope line="671"/>
                <scope line="675"/>
                <scope line="679"/>
                <scope line="683"/>
                <scope line="687"/>
                <scope line="691"/>
                <scope line="695"/>
                <scope line="699"/>
                <scope line="703"/>
                <scope line="707"/>
                <scope line="711"/>
                <scope line="715"/>
            </method>
            <javadoc line="720">
                How many applets are running?                
            </javadoc>
            <method name="countApplets" type="int" line="723"/>
            <declaration name="c" type="int" line="726"/>
            <javadoc line="726">
                The current character.                
            </javadoc>
            <javadoc line="730">
                Scan spaces.                
            </javadoc>
            <method name="skipSpace" type="void" line="733">
                <params>
                    <param name="in" type="Reader"/>
                </params>
                <scope line="734"/>
            </method>
            <javadoc line="738">
                Scan identifier                
            </javadoc>
            <method name="scanIdentifier" type="String" line="741">
                <params>
                    <param name="in" type="Reader"/>
                </params>
                <declaration name="buf" type="StringBuffer" line="742"/>
                <scope line="743">
                    <scope line="744"/>
                    <scope line="748"/>
                </scope>
            </method>
            <javadoc line="753">
                Scan tag                
            </javadoc>
            <method name="scanTag" type="Hashtable" line="756">
                <params>
                    <param name="in" type="Reader"/>
                </params>
                <declaration name="atts" type="Hashtable" line="757"/>
                <scope line="759">
                    <declaration name="att" type="String" line="760"/>
                    <declaration name="val" type="String" line="761"/>
                    <scope line="763">
                        <declaration name="quote" type="int" line="764"/>
                        <scope line="767"/>
                        <declaration name="buf" type="StringBuffer" line="771"/>
                        <scope line="772"/>
                        <scope line="776"/>
                    </scope>
                    <scope line="782"/>
                    <scope line="785"/>
                </scope>
            </method>
            <declaration name="x" type="int" line="792"/>
            <declaration name="y" type="int" line="793"/>
            <declaration name="XDELTA" type="int" line="794"/>
            <declaration name="YDELTA" type="int" line="795"/>
            <declaration name="encoding" type="String" line="796"/>
            <method name="makeReader" type="Reader" line="797">
                <params>
                    <param name="is" type="InputStream"/>
                </params>
                <scope line="798">
                    <scope line="799"/>
                    <scope line="802"/>
                </scope>
                <declaration name="r" type="InputStreamReader" line="805"/>
            </method>
            <javadoc line="809">
                Scan an html file for &lt;applet&gt; tags                
            </javadoc>
            <method name="parse" type="void" line="812">
                <params>
                    <param name="url" type="URL"/>
                    <param name="enc" type="String"/>
                </params>
            </method>
            <method name="parse" type="void" line="816">
                <params>
                    <param name="url" type="URL"/>
                </params>
            </method>
            <method name="parse" type="void" line="819">
                <params>
                    <param name="url" type="URL"/>
                    <param name="statusMsgStream" type="PrintStream"/>
                    <param name="factory" type="AppletViewerFactory"/>
                </params>
                <declaration name="isAppletTag" type="boolean" line="820"/>
                <declaration name="isObjectTag" type="boolean" line="821"/>
                <declaration name="isEmbedTag" type="boolean" line="822"/>
                <declaration name="requiresNameWarning" type="String" line="823"/>
                <declaration name="paramOutsideWarning" type="String" line="824"/>
                <declaration name="appletRequiresCodeWarning" type="String" line="825"/>
                <declaration name="appletRequiresHeightWarning" type="String" line="826"/>
                <declaration name="appletRequiresWidthWarning" type="String" line="827"/>
                <declaration name="objectRequiresCodeWarning" type="String" line="828"/>
                <declaration name="objectRequiresHeightWarning" type="String" line="829"/>
                <declaration name="objectRequiresWidthWarning" type="String" line="830"/>
                <declaration name="embedRequiresCodeWarning" type="String" line="831"/>
                <declaration name="embedRequiresHeightWarning" type="String" line="832"/>
                <declaration name="embedRequiresWidthWarning" type="String" line="833"/>
                <declaration name="appNotLongerSupportedWarning" type="String" line="834"/>
                <declaration name="conn" type="java.net.URLConnection" line="835"/>
                <declaration name="in" type="Reader" line="836"/>
                <declaration name="ydisp" type="int" line="838"/>
                <declaration name="atts" type="Hashtable" line="839"/>
                <scope line="840">
                    <scope line="843">
                        <scope line="845">
                            <declaration name="nm" type="String" line="847"/>
                            <scope line="848">
                                <scope line="849">
                                    <scope line="850"/>
                                </scope>
                                <scope line="855">
                                    <declaration name="d" type="Dimension" line="859"/>
                                    <scope line="860"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="872">
                            <declaration name="nm" type="String" line="873"/>
                            <scope line="874">
                                <declaration name="t" type="Hashtable" line="875"/>
                                <declaration name="att" type="String" line="876"/>
                                <scope line="877"/>
                                <scope line="880">
                                    <declaration name="val" type="String" line="881"/>
                                    <scope line="882"/>
                                    <scope line="885"/>
                                    <scope line="888"/>
                                </scope>
                            </scope>
                            <scope line="893">
                                <scope line="896"/>
                                <scope line="900"/>
                                <scope line="904"/>
                            </scope>
                            <scope line="909">
                                <scope line="912"/>
                                <scope line="915"/>
                                <scope line="919"/>
                            </scope>
                            <scope line="924">
                                <scope line="927"/>
                                <scope line="931"/>
                                <scope line="935"/>
                            </scope>
                            <scope line="940">
                                <declaration name="atts2" type="Hashtable" line="942"/>
                                <scope line="944"/>
                                <scope line="949"/>
                                <scope line="953"/>
                                <scope line="956"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="967">
                Old main entry point.                
                <deprecated>
                                        
                </deprecated>
            </javadoc>
            <method name="main" type="void" line="971">
                <params>
                    <param name="argv" type="String"/>
                </params>
            </method>
            <declaration name="amh" type="AppletMessageHandler" line="974"/>
            <method name="checkConnect" type="void" line="975">
                <params>
                    <param name="url" type="URL"/>
                </params>
                <declaration name="security" type="SecurityManager" line="976"/>
                <scope line="977">
                    <scope line="978">
                        <declaration name="perm" type="java.security.Permission" line="979"/>
                    </scope>
                    <scope line="983"/>
                </scope>
            </method>
        </class>
    </source>