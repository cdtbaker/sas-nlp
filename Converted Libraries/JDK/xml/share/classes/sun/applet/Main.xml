<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.applet">
        <import package="java.io.BufferedInputStream"/>
        <import package="java.io.File"/>
        <import package="java.io.FileInputStream"/>
        <import package="java.io.FileOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.lang.reflect.Method"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="java.net.URL"/>
        <import package="java.net.MalformedURLException"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.Properties"/>
        <import package="java.util.Vector"/>
        <import package="sun.net.www.ParseUtil"/>
        <class name="Main" line="15">
            <javadoc line="15">
                The main entry point into AppletViewer.                
            </javadoc>
            <declaration name="theUserPropertiesFile" type="File" line="19"/>
            <javadoc line="19">
                The file which contains all of the AppletViewer specific properties.                
            </javadoc>
            <declaration name="avDefaultUserProps" type="String[][]" line="23"/>
            <javadoc line="23">
                The default key/value pairs for the required user-specific properties.                
            </javadoc>
            <scope line="27">
                <declaration name="userHome" type="File" line="28"/>
            </scope>
            <declaration name="amh" type="AppletMessageHandler" line="32"/>
            <declaration name="debugFlag" type="boolean" line="33"/>
            <javadoc line="33">
                Member variables set according to options passed in to AppletViewer.                
            </javadoc>
            <declaration name="helpFlag" type="boolean" line="37"/>
            <declaration name="encoding" type="String" line="38"/>
            <declaration name="noSecurityFlag" type="boolean" line="39"/>
            <declaration name="cmdLineTestFlag" type="boolean" line="40"/>
            <declaration name="urlList" type="Vector" line="41"/>
            <javadoc line="41">
                The list of valid URLs passed in to AppletViewer.                
            </javadoc>
            <declaration name="theVersion" type="String" line="45"/>
            <javadoc line="46">
                The main entry point into AppletViewer.                
            </javadoc>
            <method name="main" type="void" line="49">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <declaration name="m" type="Main" line="50"/>
                <declaration name="ret" type="int" line="51"/>
            </method>
            <method name="run" type="int" line="54">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <scope line="55">
                    <scope line="56"/>
                    <scope line="60">
                        <declaration name="j" type="int" line="61"/>
                        <scope line="62"/>
                    </scope>
                </scope>
                <scope line="68"/>
                <scope line="72"/>
                <scope line="76"/>
                <scope line="80"/>
                <scope line="84">
                    <scope line="85"/>
                    <scope line="88"/>
                </scope>
            </method>
            <method name="usage" type="void" line="95"/>
            <javadoc line="98">
                Decode a single argument in an array and return the number of elements
                  used.                
                <param>
                    args The array of arguments.                    
                </param>
                <param>
                    i    The argument to decode.                    
                </param>
                <return>
                    The number of array elements used when the argument was
                      decoded.                    
                </return>
                <exception>
                    ParseExceptionThrown when there is a problem with something in the
                      argument array.                    
                </exception>
            </javadoc>
            <method name="decodeArg" type="int" line="108">
                <params>
                    <param name="args" type="String[]"/>
                    <param name="i" type="int"/>
                </params>
                <declaration name="arg" type="String" line="109"/>
                <declaration name="argc" type="int" line="110"/>
                <scope line="111"/>
                <scope line="115"/>
                <scope line="120"/>
                <scope line="124"/>
                <scope line="131"/>
                <scope line="135"/>
                <scope line="138">
                    <declaration name="url" type="URL" line="139"/>
                    <scope line="140"/>
                </scope>
            </method>
            <javadoc line="147">
                Following the relevant RFC, construct a valid URL based on the passed in
                  string.                
                <param>
                    url  a string which represents either a relative or absolute URL.                    
                </param>
                <return>
                    a URL when the passed in string can be interpreted according
                      to the RFC, <code>null</code> otherwise.                    
                </return>
                <exception>
                    ParseExceptionThrown when we are unable to construct a proper URL from the
                      passed in string.                    
                </exception>
            </javadoc>
            <method name="parseURL" type="URL" line="156">
                <params>
                    <param name="url" type="String"/>
                </params>
                <declaration name="u" type="URL" line="157"/>
                <declaration name="prefix" type="String" line="158"/>
                <scope line="159">
                    <scope line="160"/>
                    <scope line="163">
                        <declaration name="path" type="String" line="164"/>
                    </scope>
                    <scope line="167"/>
                </scope>
                <scope line="171"/>
            </method>
            <javadoc line="176">
                Invoke the debugger with the arguments passed in to appletviewer.                
                <param>
                    args The arguments passed into the debugger.                    
                </param>
                <return>
                    <code>0</code> if the debugger is invoked successfully,
                      <code>1</code> otherwise.                    
                </return>
            </javadoc>
            <method name="invokeDebugger" type="int" line="182">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <declaration name="newArgs" type="String[]" line="183"/>
                <declaration name="current" type="int" line="184"/>
                <declaration name="phonyDir" type="String" line="185"/>
                <scope line="188">
                    <scope line="189"/>
                </scope>
                <scope line="193">
                    <declaration name="c" type="Class" line="194"/>
                    <declaration name="m" type="Method" line="195"/>
                </scope>
                <scope line="198"/>
                <scope line="202"/>
                <scope line="206"/>
                <scope line="210"/>
            </method>
            <method name="init" type="void" line="216">
                <declaration name="avProps" type="Properties" line="217"/>
                <declaration name="sysProps" type="Properties" line="234"/>
                <scope line="235">
                    <declaration name="key" type="String" line="236"/>
                    <declaration name="val" type="String" line="237"/>
                    <declaration name="oldVal" type="String" line="238"/>
                </scope>
                <scope line="242"/>
                <scope line="245"/>
            </method>
            <javadoc line="249">
                Read the AppletViewer user-specific properties.  Typically, these
                  properties should reside in the file $USER/.appletviewer.  If this file
                  does not exist, one will be created.  Information for this file will
                  be gleaned from $USER/.hotjava/properties.  If that file does not exist,
                  then default values will be used.                
                <return>
                    A Properties object containing all of the AppletViewer
                      user-specific properties.                    
                </return>
            </javadoc>
            <method name="getAVProps" type="Properties" line="258">
                <declaration name="avProps" type="Properties" line="259"/>
                <declaration name="dotAV" type="File" line="260"/>
                <scope line="261">
                    <scope line="262"/>
                    <scope line="265"/>
                </scope>
                <scope line="270">
                    <declaration name="userHome" type="File" line="271"/>
                    <declaration name="dotHJ" type="File" line="272"/>
                    <scope line="274"/>
                    <scope line="277"/>
                    <scope line="281">
                        <declaration name="out" type="FileOutputStream" line="282"/>
                    </scope>
                    <scope line="286"/>
                </scope>
            </method>
            <javadoc line="292">
                Set the AppletViewer user-specific properties to be the default values.                
                <return>
                    A Properties object containing all of the AppletViewer
                      user-specific properties, set to the default values.                    
                </return>
            </javadoc>
            <method name="setDefaultAVProps" type="Properties" line="297">
                <declaration name="avProps" type="Properties" line="298"/>
                <scope line="299"/>
            </method>
            <javadoc line="304">
                Given a file, find only the properties that are setable by AppletViewer.                
                <param>
                    inFile A Properties file from which we select the properties of
                      interest.                    
                </param>
                <return>
                    A Properties object containing all of the AppletViewer
                      user-specific properties.                    
                </return>
            </javadoc>
            <method name="getAVProps" type="Properties" line="311">
                <params>
                    <param name="inFile" type="File"/>
                </params>
                <declaration name="avProps" type="Properties" line="312"/>
                <declaration name="tmpProps" type="Properties" line="313"/>
                <scope line="314">
                    <declaration name="in" type="FileInputStream" line="315"/>
                </scope>
                <scope line="319"/>
                <scope line="322">
                    <declaration name="value" type="String" line="323"/>
                    <scope line="324"/>
                    <scope line="327"/>
                </scope>
            </method>
            <javadoc line="333">
                Methods for easier i18n handling.                
            </javadoc>
            <method name="lookup" type="String" line="336">
                <params>
                    <param name="key" type="String"/>
                </params>
            </method>
            <method name="lookup" type="String" line="339">
                <params>
                    <param name="key" type="String"/>
                    <param name="arg0" type="String"/>
                </params>
            </method>
            <method name="lookup" type="String" line="342">
                <params>
                    <param name="key" type="String"/>
                    <param name="arg0" type="String"/>
                    <param name="arg1" type="String"/>
                </params>
            </method>
            <method name="lookup" type="String" line="345">
                <params>
                    <param name="key" type="String"/>
                    <param name="arg0" type="String"/>
                    <param name="arg1" type="String"/>
                    <param name="arg2" type="String"/>
                </params>
            </method>
            <class name="ParseException" line="348">
                <extends class="RuntimeException"/>
                <method name="ParseException" type="constructor" line="349">
                    <params>
                        <param name="msg" type="String"/>
                    </params>
                </method>
                <method name="ParseException" type="constructor" line="352">
                    <params>
                        <param name="t" type="Throwable"/>
                    </params>
                </method>
                <declaration name="t" type="Throwable" line="356"/>
            </class>
        </class>
    </source>