<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.print">
        <import package="java.io.OutputStream"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Iterator"/>
        <import package="javax.print.DocFlavor"/>
        <import package="sun.awt.AppContext"/>
        <import package="java.util.ServiceLoader"/>
        <import package="java.util.ServiceConfigurationError"/>
        <class name="StreamPrintServiceFactory" line="39">
            <javadoc line="39">
                A &lt;code&gt;StreamPrintServiceFactory&lt;/code&gt; is the factory for{@link StreamPrintService} instances,
                  which can print to an output stream in a particular
                  document format described as a mime type.
                  A typical output document format may be Postscript(TM).
                  &lt;p&gt;
                  This class is implemented by a service and located by the
                  implementation using the
                  &lt;a href=&quot;../../../technotes/guides/jar/jar.html#Service Provider&quot;&gt;
                  SPI JAR File specification&lt;/a&gt;.
                  &lt;p&gt;
                  Applications locate instances of this class by calling the{@link #lookupStreamPrintServiceFactories(DocFlavor,String)} method.
                  &lt;p&gt;
                  Applications can use a &lt;code&gt;StreamPrintService&lt;/code&gt; obtained from a
                  factory in place of a &lt;code&gt;PrintService&lt;/code&gt; which represents a
                  physical printer device.                
            </javadoc>
            <class name="Services" line="61">
                <declaration name="listOfFactories" type="ArrayList" line="62"/>
            </class>
            <method name="getServices" type="Services" line="65">
                <declaration name="services" type="Services" line="66"/>
                <scope line="68"/>
            </method>
            <method name="getListOfFactories" type="ArrayList" line="75"/>
            <method name="initListOfFactories" type="ArrayList" line="79">
                <declaration name="listOfFactories" type="ArrayList" line="80"/>
            </method>
            <javadoc line="85">
                Locates factories for print services that can be used with
                  a print job to output a stream of data in the
                  format specified by {@code outputMimeType}.
                  &lt;p&gt;
                  The {@code outputMimeType} parameter describes the document type that
                  you want to create, whereas the {@code flavor} parameter describes the
                  format in which the input data will be provided by the application
                  to the {@code StreamPrintService}.
                  &lt;p&gt;
                  Although null is an acceptable value to use in the lookup of stream
                  printing services, it&apos;s typical to search for a particular
                  desired format, such as Postscript(TM).
                  &lt;p&gt;                
                <param>
                    flavor of the input document type - null means match all
                      types.                    
                </param>
                <param>
                    outputMimeType representing the required output format, used to
                      identify suitable stream printer factories. A value of null means
                      match all formats.                    
                </param>
                <return>
                    - matching factories for stream print service instance,
                      empty if no suitable factories could be located.                    
                </return>
            </javadoc>
            <method name="lookupStreamPrintServiceFactories" type="StreamPrintServiceFactory[]" line="109">
                <params>
                    <param name="flavor" type="DocFlavor"/>
                    <param name="outputMimeType" type="String"/>
                </params>
                <declaration name="list" type="ArrayList" line="111"/>
            </method>
            <method name="getOutputFormat" type="String" line="116"/>
            <javadoc line="116">
                Queries the factory for the document format that is emitted
                  by printers obtained from this factory.                
                <return>
                    the output format described as a mime type.                    
                </return>
            </javadoc>
            <method name="getSupportedDocFlavors" type="DocFlavor[]" line="123"/>
            <javadoc line="123">
                Queries the factory for the document flavors that can be accepted
                  by printers obtained from this factory.                
                <return>
                    array of supported doc flavors.                    
                </return>
            </javadoc>
            <method name="getPrintService" type="StreamPrintService" line="130"/>
            <javadoc line="130">
                Returns a &lt;code&gt;StreamPrintService&lt;/code&gt; that can print to
                  the specified output stream.
                  The output stream is created and managed by the application.
                  It is the application&apos;s responsibility to close the stream and
                  to ensure that this Printer is not reused.
                  The application should not close this stream until any print job
                  created from the printer is complete. Doing so earlier may generate
                  a &lt;code&gt;PrinterException&lt;/code&gt; and an event indicating that the
                  job failed.
                  &lt;p&gt;
                  Whereas a &lt;code&gt;PrintService&lt;/code&gt; connected to a physical printer
                  can be reused,
                  a &lt;code&gt;StreamPrintService&lt;/code&gt; connected to a stream cannot.
                  The underlying &lt;code&gt;StreamPrintService&lt;/code&gt; may be disposed by
                  the print system with
                  the {@link StreamPrintService#dispose() dispose} method
                  before returning from the{@link DocPrintJob#print(Doc,javax.print.attribute.PrintRequestAttributeSet) print}method of &lt;code&gt;DocPrintJob&lt;/code&gt; so that the print system knows
                  this printer is no longer usable.
                  This is equivalent to a physical printer going offline - permanently.
                  Applications may supply a null print stream to create a queryable
                  service. It is not valid to create a PrintJob for such a stream.
                  Implementations which allocate resources on construction should examine
                  the stream and may wish to only allocate resources if the stream is
                  non-null.
                  &lt;p&gt;                
                <param>
                    out destination stream for generated output.                    
                </param>
                <return>
                    a PrintService which will generate the format specified by the
                      DocFlavor supported by this Factory.                    
                </return>
            </javadoc>
            <method name="getAllFactories" type="ArrayList" line="165">
                <comment line="188">
                                        
                </comment>
                <scope line="166">
                    <declaration name="listOfFactories" type="ArrayList" line="168"/>
                    <scope line="169"/>
                    <scope line="171"/>
                    <scope line="175">
                        <anonymous_class line="177">
                            <method name="run" type="Object" line="178">
                                <comment line="188">
                                                                        
                                </comment>
                                <declaration name="iterator" type="Iterator&lt;StreamPrintServiceFactory&gt;" line="179"/>
                                <declaration name="lof" type="ArrayList" line="182"/>
                                <scope line="183">
                                    <scope line="184"/>
                                    <scope line="186">
                                        <scope line="188"/>
                                        <scope line="190"/>
                                    </scope>
                                </scope>
                            </method>
                        </anonymous_class>
                    </scope>
                    <scope line="198"/>
                </scope>
            </method>
            <method name="isMember" type="boolean" line="204">
                <params>
                    <param name="flavor" type="DocFlavor"/>
                    <param name="flavors" type="DocFlavor[]"/>
                </params>
                <scope line="205">
                    <scope line="206"/>
                </scope>
            </method>
            <method name="getFactories" type="ArrayList" line="213">
                <params>
                    <param name="flavor" type="DocFlavor"/>
                    <param name="outType" type="String"/>
                </params>
                <scope line="215"/>
                <declaration name="list" type="ArrayList" line="219"/>
                <declaration name="iterator" type="Iterator" line="220"/>
                <scope line="221">
                    <declaration name="factory" type="StreamPrintServiceFactory" line="222"/>
                    <scope line="227"/>
                </scope>
            </method>
        </class>
    </source>