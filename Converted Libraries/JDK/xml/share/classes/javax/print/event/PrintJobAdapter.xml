<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.print.event">
        <class name="PrintJobAdapter" line="2">
            <implements interface="PrintJobListener"/>
            <javadoc line="2">
                An abstract adapter class for receiving print job events.
                  The methods in this class are empty.
                  This class exists as a convenience for creating listener objects.
                  Extend this class to create a {@link PrintJobEvent} listener and override
                  the methods for the events of interest.  Unlike the{@link java.awt.event.ComponentListener ComponentListener}interface, this abstract interface provides null methods so that you
                  only need to define the methods you need, rather than all of the methods.                
            </javadoc>
            <javadoc line="11">
                Called to notify the client that data has been successfully
                  transferred to the print service, and the client may free
                  local resources allocated for that data.  The client should
                  not assume that the data has been completely printed after
                  receiving this event.                
                <param>
                    pje the event being notified                    
                </param>
            </javadoc>
            <method name="printDataTransferCompleted" type="void" line="19">
                <params>
                    <param name="pje" type="PrintJobEvent"/>
                </params>
            </method>
            <javadoc line="21">
                Called to notify the client that the job completed successfully.                
                <param>
                    pje the event being notified                    
                </param>
            </javadoc>
            <method name="printJobCompleted" type="void" line="25">
                <params>
                    <param name="pje" type="PrintJobEvent"/>
                </params>
            </method>
            <javadoc line="27">
                Called to notify the client that the job failed to complete
                  successfully and will have to be resubmitted.                
                <param>
                    pje the event being notified                    
                </param>
            </javadoc>
            <method name="printJobFailed" type="void" line="32">
                <params>
                    <param name="pje" type="PrintJobEvent"/>
                </params>
            </method>
            <javadoc line="34">
                Called to notify the client that the job was canceled
                  by user or program.                
                <param>
                    pje the event being notified                    
                </param>
            </javadoc>
            <method name="printJobCanceled" type="void" line="39">
                <params>
                    <param name="pje" type="PrintJobEvent"/>
                </params>
            </method>
            <javadoc line="41">
                Called to notify the client that no more events will be delivered.
                  One cause of this event being generated is if the job
                  has successfully completed, but the printing system
                  is limited in capability and cannot verify this.
                  This event is required to be delivered if none of the other
                  terminal events (completed/failed/canceled) are delivered.                
                <param>
                    pje the event being notified                    
                </param>
            </javadoc>
            <method name="printJobNoMoreEvents" type="void" line="50">
                <params>
                    <param name="pje" type="PrintJobEvent"/>
                </params>
            </method>
            <javadoc line="52">
                Called to notify the client that some possibly user rectifiable
                  problem occurs (eg printer out of paper).                
                <param>
                    pje the event being notified                    
                </param>
            </javadoc>
            <method name="printJobRequiresAttention" type="void" line="57">
                <params>
                    <param name="pje" type="PrintJobEvent"/>
                </params>
            </method>
        </class>
    </source>