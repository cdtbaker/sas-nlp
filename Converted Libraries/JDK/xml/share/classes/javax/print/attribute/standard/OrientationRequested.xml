<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.print.attribute.standard">
        <import package="javax.print.attribute.Attribute"/>
        <import package="javax.print.attribute.EnumSyntax"/>
        <import package="javax.print.attribute.DocAttribute"/>
        <import package="javax.print.attribute.PrintRequestAttribute"/>
        <import package="javax.print.attribute.PrintJobAttribute"/>
        <class name="OrientationRequested" line="33">
            <extends class="EnumSyntax"/>
            <implements interface="DocAttribute"/>
            <implements interface="PrintRequestAttribute"/>
            <implements interface="PrintJobAttribute"/>
            <javadoc line="33">
                Class OrientationRequested is a printing attribute class, an enumeration,
                  that indicates the desired orientation for printed print-stream pages; it
                  does not describe the orientation of the client-supplied print-stream
                  pages.
                  &lt;P&gt;
                  For some document formats (such as &lt;CODE&gt;&quot;application/postscript&quot;&lt;/CODE&gt;),
                  the desired orientation of the print-stream pages is specified within the
                  document data. This information is generated by a device driver prior to
                  the submission of the print job. Other document formats (such as
                  &lt;CODE&gt;&quot;text/plain&quot;&lt;/CODE&gt;) do not include the notion of desired orientation
                  within the document data. In the latter case it is possible for the printer
                  to bind the desired orientation to the document data after it has been
                  submitted. It is expected that a printer would only support the
                  OrientationRequested attribute for some document formats (e.g.,
                  &lt;CODE&gt;&quot;text/plain&quot;&lt;/CODE&gt; or &lt;CODE&gt;&quot;text/html&quot;&lt;/CODE&gt;) but not others (e.g.
                  &lt;CODE&gt;&quot;application/postscript&quot;&lt;/CODE&gt;). This is no different from any other
                  job template attribute, since a print job can always impose constraints
                  among the values of different job template attributes.
                  However, a special mention
                  is made here since it is very likely that a printer will support the
                  OrientationRequested attribute for only a subset of the supported document
                  formats.
                  &lt;P&gt;
                  &lt;B&gt;IPP Compatibility:&lt;/B&gt; The category name returned by
                  &lt;CODE&gt;getName()&lt;/CODE&gt; is the IPP attribute name.  The enumeration&apos;s
                  integer value is the IPP enum value.  The &lt;code&gt;toString()&lt;/code&gt; method
                  returns the IPP string representation of the attribute value.
                  &lt;P&gt;                
                <author>
                    Alan Kaminsky                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="68"/>
            <declaration name="PORTRAIT" type="OrientationRequested" line="70"/>
            <javadoc line="70">
                The content will be imaged across the short edge of the medium.                
            </javadoc>
            <declaration name="LANDSCAPE" type="OrientationRequested" line="76"/>
            <javadoc line="76">
                The content will be imaged across the long edge of the medium.
                  Landscape is defined to be a rotation of the print-stream page to be
                  imaged by +90 degrees with respect to the medium
                  (i.e. anti-clockwise) from the
                  portrait orientation. &lt;I&gt;Note:&lt;/I&gt; The +90 direction was chosen because
                  simple finishing on the long edge is the same edge whether portrait or
                  landscape.                
            </javadoc>
            <declaration name="REVERSE_LANDSCAPE" type="OrientationRequested" line="88"/>
            <javadoc line="88">
                The content will be imaged across the long edge of the medium, but in
                  the opposite manner from landscape. Reverse-landscape is defined to be
                  a rotation of the print-stream page to be imaged by -90 degrees with
                  respect to the medium (i.e. clockwise) from the portrait orientation.
                  &lt;I&gt;Note:&lt;/I&gt; The REVERSE_LANDSCAPE value was added because some
                  applications rotate landscape -90 degrees from portrait, rather than
                  +90 degrees.                
            </javadoc>
            <declaration name="REVERSE_PORTRAIT" type="OrientationRequested" line="100"/>
            <javadoc line="100">
                The content will be imaged across the short edge of the medium, but in
                  the opposite manner from portrait. Reverse-portrait is defined to be a
                  rotation of the print-stream page to be imaged by 180 degrees with
                  respect to the medium from the portrait orientation. &lt;I&gt;Note:&lt;/I&gt; The
                  REVERSE_PORTRAIT value was added for use with the {@link Finishings Finishings} attribute in cases where the
                  opposite edge is desired for finishing a portrait document on simple
                  finishing devices that have only one finishing position. Thus a
                  &lt;CODE&gt;&quot;text/plain&quot;&lt;/CODE&gt; portrait document can be stapled &quot;on the
                  right&quot; by a simple finishing device as is common use with some
                  Middle Eastern languages such as Hebrew.                
            </javadoc>
            <javadoc line="116">
                Construct a new orientation requested enumeration value with the given
                  integer value.                
                <param>
                    value  Integer value.                    
                </param>
            </javadoc>
            <method name="OrientationRequested" type="constructor" line="122">
                <params>
                    <param name="value" type="int"/>
                </params>
            </method>
            <declaration name="myStringTable" type="String[]" line="126"/>
            <declaration name="myEnumValueTable" type="OrientationRequested[]" line="133"/>
            <javadoc line="140">
                Returns the string table for class OrientationRequested.                
            </javadoc>
            <method name="getStringTable" type="String[]" line="143"/>
            <javadoc line="147">
                Returns the enumeration value table for class OrientationRequested.                
            </javadoc>
            <method name="getEnumValueTable" type="EnumSyntax[]" line="150"/>
            <javadoc line="154">
                Returns the lowest integer value used by class OrientationRequested.                
            </javadoc>
            <method name="getOffset" type="int" line="157"/>
            <javadoc line="161">
                Get the printing attribute class which is to be used as the &quot;category&quot;
                  for this printing attribute value.
                  &lt;P&gt;
                  For class OrientationRequested, the
                  category is class OrientationRequested itself.                
                <return>
                    Printing attribute class (category), an instance of class{@link java.lang.Class java.lang.Class}.                    
                </return>
            </javadoc>
            <method name="getCategory" type="Class<? extends Attribute>" line="171"/>
            <javadoc line="175">
                Get the name of the category of which this attribute value is an
                  instance.
                  &lt;P&gt;
                  For class OrientationRequested, the
                  category name is &lt;CODE&gt;&quot;orientation-requested&quot;&lt;/CODE&gt;.                
                <return>
                    Attribute category name.                    
                </return>
            </javadoc>
            <method name="getName" type="String" line="184"/>
        </class>
    </source>