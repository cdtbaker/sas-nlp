<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.print.attribute.standard">
        <import package="java.net.URI"/>
        <import package="javax.print.attribute.Attribute"/>
        <import package="javax.print.attribute.URISyntax"/>
        <import package="javax.print.attribute.PrintRequestAttribute"/>
        <import package="javax.print.attribute.PrintJobAttribute"/>
        <class name="Destination" line="7">
            <extends class="URISyntax"/>
            <implements interface="PrintJobAttribute"/>
            <implements interface="PrintRequestAttribute"/>
            <javadoc line="7">
                Class Destination is a printing attribute class, a URI, that is used to
                  indicate an alternate destination for the spooled printer formatted
                  data. Many PrintServices will not support the notion of a destination
                  other than the printer device, and so will not support this attribute.
                  &lt;p&gt;
                  A common use for this attribute will be applications which want
                  to redirect output to a local disk file : eg.&quot;file:out.prn&quot;.
                  Note that proper construction of &quot;file:&quot; scheme URI instances should
                  be performed using the &lt;code&gt;toURI()&lt;/code&gt; method of class{@link java.io.File File}.
                  See the documentation on that class for more information.
                  &lt;p&gt;
                  If a destination URI is specified in a PrintRequest and it is not
                  accessible for output by the PrintService, a PrintException will be thrown.
                  The PrintException may implement URIException to provide a more specific
                  cause.
                  &lt;P&gt;
                  &lt;B&gt;IPP Compatibility:&lt;/B&gt; Destination is not an IPP attribute.
                  &lt;P&gt;                
                <author>
                    Phil Race.                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="29"/>
            <javadoc line="30">
                Constructs a new destination attribute with the specified URI.                
                <param>
                    uri  URI.                    
                </param>
                <exception>
                    NullPointerException(unchecked exception) Thrown if <CODE>uri</CODE> is null.                    
                </exception>
            </javadoc>
            <method name="Destination" type="constructor" line="35">
                <params>
                    <param name="uri" type="URI"/>
                </params>
            </method>
            <javadoc line="38">
                Returns whether this destination attribute is equivalent to the
                  passed in object. To be equivalent, all of the following conditions
                  must be true:
                  &lt;OL TYPE=1&gt;
                  &lt;LI&gt;
                  &lt;CODE&gt;object&lt;/CODE&gt; is not null.
                  &lt;LI&gt;
                  &lt;CODE&gt;object&lt;/CODE&gt; is an instance of class Destination.
                  &lt;LI&gt;
                  This destination attribute&apos;s URI and &lt;CODE&gt;object&lt;/CODE&gt;&apos;s URI
                  are equal.
                  &lt;/OL&gt;                
                <param>
                    object  Object to compare to.                    
                </param>
                <return>
                    True if <CODE>object</CODE> is equivalent to this destination
                      attribute, false otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="55">
                <params>
                    <param name="object" type="Object"/>
                </params>
            </method>
            <javadoc line="58">
                Get the printing attribute class which is to be used as the &quot;category&quot;
                  for this printing attribute value.
                  &lt;P&gt;
                  For class Destination, the category is class Destination itself.                
                <return>
                    Printing attribute class (category), an instance of class{@link java.lang.Class java.lang.Class}.                    
                </return>
            </javadoc>
            <method name="getCategory" type="Class<? extends Attribute>" line="65"/>
            <javadoc line="68">
                Get the name of the category of which this attribute value is an
                  instance.
                  &lt;P&gt;
                  For class Destination, the category name is &lt;CODE&gt;&quot;spool-data-destination&quot;&lt;/CODE&gt;.                
                <return>
                    Attribute category name.                    
                </return>
            </javadoc>
            <method name="getName" type="String" line="75"/>
        </class>
    </source>