<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.print.attribute.standard">
        <import package="javax.print.attribute.Attribute"/>
        <import package="javax.print.attribute.EnumSyntax"/>
        <import package="javax.print.attribute.DocAttribute"/>
        <import package="javax.print.attribute.PrintRequestAttribute"/>
        <import package="javax.print.attribute.PrintJobAttribute"/>
        <class name="Chromaticity" line="34">
            <extends class="EnumSyntax"/>
            <implements interface="DocAttribute"/>
            <implements interface="PrintRequestAttribute"/>
            <implements interface="PrintJobAttribute"/>
            <javadoc line="34">
                Class Chromaticity is a printing attribute class, an enumeration, that
                  specifies monochrome or color printing. This is used by a print client
                  to specify how the print data should be generated or processed. It is not
                  descriptive of the color capabilities of the device. Query the service&apos;s{@link ColorSupported ColorSupported} attribute to determine if the device
                  can be verified to support color printing.
                  &lt;P&gt;
                  The table below shows the effects of specifying a Chromaticity attribute of{@link #MONOCHROME &lt;CODE&gt;MONOCHROME&lt;/CODE&gt;} or {@link #COLOR&lt;CODE&gt;COLOR&lt;/CODE&gt;} for a monochrome or color document.
                  &lt;P&gt;
                  &lt;TABLE BORDER=1 CELLPADDING=2 CELLSPACING=1 SUMMARY=&quot;Shows effects of specifying MONOCHROME or COLOR Chromaticity attributes&quot;&gt;
                  &lt;TR BGCOLOR=&quot;#E5E5E5&quot;&gt;
                  &lt;TH&gt;
                  Chromaticity&lt;BR&gt;Attribute
                  &lt;/TH&gt;
                  &lt;TH&gt;
                  Effect on&lt;BR&gt;Monochrome Document
                  &lt;/TH&gt;
                  &lt;TH&gt;
                  Effect on&lt;BR&gt;Color Document
                  &lt;/TH&gt;
                  &lt;/TR&gt;
                  &lt;TR&gt;
                  &lt;TD&gt;{@link #MONOCHROME &lt;CODE&gt;MONOCHROME&lt;/CODE&gt;}&lt;/TD&gt;
                  &lt;TD&gt;
                  Printed as is, in monochrome
                  &lt;/TD&gt;
                  &lt;TD&gt;
                  Printed in monochrome, with colors converted to shades of gray
                  &lt;/TD&gt;
                  &lt;/TR&gt;
                  &lt;TR&gt;
                  &lt;TD&gt;{@link #COLOR &lt;CODE&gt;COLOR&lt;/CODE&gt;}&lt;/TD&gt;
                  &lt;TD&gt;
                  Printed as is, in monochrome
                  &lt;/TD&gt;
                  &lt;TD&gt;
                  Printed as is, in color
                  &lt;/TD&gt;
                  &lt;/TR&gt;
                  &lt;/TABLE&gt;
                  &lt;P&gt;
                  &lt;P&gt;
                  &lt;B&gt;IPP Compatibility:&lt;/B&gt; Chromaticity is not an IPP attribute at present.
                  &lt;P&gt;                
                <author>
                    Alan Kaminsky                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="91"/>
            <declaration name="MONOCHROME" type="Chromaticity" line="93"/>
            <javadoc line="93">
                Monochrome printing.                
            </javadoc>
            <declaration name="COLOR" type="Chromaticity" line="98"/>
            <javadoc line="98">
                Color printing.                
            </javadoc>
            <javadoc line="104">
                Construct a new chromaticity enumeration value with the given integer
                  value.                
                <param>
                    value  Integer value.                    
                </param>
            </javadoc>
            <method name="Chromaticity" type="constructor" line="110">
                <params>
                    <param name="value" type="int"/>
                </params>
            </method>
            <declaration name="myStringTable" type="String[]" line="114"/>
            <declaration name="myEnumValueTable" type="Chromaticity[]" line="117"/>
            <javadoc line="120">
                Returns the string table for class Chromaticity.                
            </javadoc>
            <method name="getStringTable" type="String[]" line="123"/>
            <javadoc line="127">
                Returns the enumeration value table for class Chromaticity.                
            </javadoc>
            <method name="getEnumValueTable" type="EnumSyntax[]" line="130"/>
            <javadoc line="134">
                Get the printing attribute class which is to be used as the &quot;category&quot;
                  for this printing attribute value.
                  &lt;P&gt;
                  For class Chromaticity, the category is the class Chromaticity itself.                
                <return>
                    Printing attribute class (category), an instance of class{@link java.lang.Class java.lang.Class}.                    
                </return>
            </javadoc>
            <method name="getCategory" type="Class<? extends Attribute>" line="143"/>
            <javadoc line="147">
                Get the name of the category of which this attribute value is an
                  instance.
                  &lt;P&gt;
                  For class Chromaticity, the category name is &lt;CODE&gt;&quot;chromaticity&quot;&lt;/CODE&gt;.                
                <return>
                    Attribute category name.                    
                </return>
            </javadoc>
            <method name="getName" type="String" line="155"/>
        </class>
    </source>