<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.print.attribute.standard">
        <import package="javax.print.attribute.Attribute"/>
        <import package="javax.print.attribute.IntegerSyntax"/>
        <import package="javax.print.attribute.PrintRequestAttribute"/>
        <import package="javax.print.attribute.PrintJobAttribute"/>
        <class name="JobImpressions" line="6">
            <extends class="IntegerSyntax"/>
            <implements interface="PrintRequestAttribute"/>
            <implements interface="PrintJobAttribute"/>
            <javadoc line="6">
                Class JobImpressions is an integer valued printing attribute class that
                  specifies the total size in number of impressions of the document(s) being
                  submitted. An &quot;impression&quot; is the image (possibly many print-stream pages in
                  different configurations) imposed onto a single media page.
                  &lt;P&gt;
                  The JobImpressions attribute describes the size of the job. This attribute is
                  not intended to be a counter; it is intended to be useful routing and
                  scheduling information if known. The printer may try to compute the
                  JobImpressions attribute&apos;s value if it is not supplied in the Print Request.
                  Even if the client does supply a value for the JobImpressions attribute in
                  the Print Request, the printer may choose to change the value if the printer
                  is able to compute a value which is more accurate than the client supplied
                  value. The printer may be able to determine the correct value for the
                  JobImpressions attribute either right at job submission time or at any later
                  point in time.
                  &lt;P&gt;
                  As with {@link JobKOctets JobKOctets}, the JobImpressions value must not
                  include the multiplicative factors contributed by the number of copies
                  specified by the {@link Copies Copies} attribute, independent of whether the
                  device can process multiple copies without making multiple passes over the
                  job or document data and independent of whether the output is collated or
                  not. Thus the value is independent of the implementation and reflects the
                  size of the document(s) measured in impressions independent of the number of
                  copies.
                  &lt;P&gt;
                  As with {@link JobKOctets JobKOctets}, the JobImpressions value must also not
                  include the multiplicative factor due to a copies instruction embedded in the
                  document data. If the document data actually includes replications of the
                  document data, this value will include such replication. In other words, this
                  value is always the number of impressions in the source document data, rather
                  than a measure of the number of impressions to be produced by the job.
                  &lt;P&gt;
                  &lt;B&gt;IPP Compatibility:&lt;/B&gt; The integer value gives the IPP integer value. The
                  category name returned by &lt;CODE&gt;getName()&lt;/CODE&gt; gives the IPP attribute
                  name.
                  &lt;P&gt;                
                <see>
                    JobImpressionsSupported                    
                </see>
                <see>
                    JobImpressionsCompleted                    
                </see>
                <see>
                    JobKOctets                    
                </see>
                <see>
                    JobMediaSheets                    
                </see>
                <author>
                    Alan Kaminsky                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="50"/>
            <javadoc line="51">
                Construct a new job impressions attribute with the given integer value.                
                <param>
                    value  Integer value.                    
                </param>
                <exception>
                    IllegalArgumentException(Unchecked exception) Thrown if <CODE>value</CODE> is less than 0.                    
                </exception>
            </javadoc>
            <method name="JobImpressions" type="constructor" line="56">
                <params>
                    <param name="value" type="int"/>
                </params>
            </method>
            <javadoc line="59">
                Returns whether this job impressions attribute is equivalent to the
                  passed in object. To be equivalent, all of the following conditions must
                  be true:
                  &lt;OL TYPE=1&gt;
                  &lt;LI&gt;
                  &lt;CODE&gt;object&lt;/CODE&gt; is not null.
                  &lt;LI&gt;
                  &lt;CODE&gt;object&lt;/CODE&gt; is an instance of class JobImpressions.
                  &lt;LI&gt;
                  This job impressions attribute&apos;s value and &lt;CODE&gt;object&lt;/CODE&gt;&apos;s value
                  are equal.
                  &lt;/OL&gt;                
                <param>
                    object  Object to compare to.                    
                </param>
                <return>
                    True if <CODE>object</CODE> is equivalent to this job
                      impressions attribute, false otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="76">
                <params>
                    <param name="object" type="Object"/>
                </params>
            </method>
            <javadoc line="79">
                Get the printing attribute class which is to be used as the &quot;category&quot;
                  for this printing attribute value.
                  &lt;P&gt;
                  For class JobImpressions, the category is class JobImpressions itself.                
                <return>
                    Printing attribute class (category), an instance of class{@link java.lang.Class java.lang.Class}.                    
                </return>
            </javadoc>
            <method name="getCategory" type="Class<? extends Attribute>" line="86"/>
            <javadoc line="89">
                Get the name of the category of which this attribute value is an
                  instance.
                  &lt;P&gt;
                  For class JobImpressions, the category name is
                  &lt;CODE&gt;&quot;job-impressions&quot;&lt;/CODE&gt;.                
                <return>
                    Attribute category name.                    
                </return>
            </javadoc>
            <method name="getName" type="String" line="97"/>
        </class>
    </source>