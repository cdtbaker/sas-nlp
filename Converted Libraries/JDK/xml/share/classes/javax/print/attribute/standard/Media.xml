<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.print.attribute.standard">
        <import package="javax.print.attribute.Attribute"/>
        <import package="javax.print.attribute.DocAttribute"/>
        <import package="javax.print.attribute.EnumSyntax"/>
        <import package="javax.print.attribute.PrintRequestAttribute"/>
        <import package="javax.print.attribute.PrintJobAttribute"/>
        <class name="Media" line="33">
            <extends class="EnumSyntax"/>
            <implements interface="DocAttribute"/>
            <implements interface="PrintRequestAttribute"/>
            <implements interface="PrintJobAttribute"/>
            <javadoc line="33">
                Class Media is a printing attribute class that specifies the
                  medium on which to print.
                  &lt;p&gt;
                  Media may be specified in different ways.
                  &lt;ul&gt;
                  &lt;li&gt; it may be specified by paper source - eg paper tray
                  &lt;li&gt; it may be specified by a standard size - eg &quot;A4&quot;
                  &lt;li&gt; it may be specified by a name - eg &quot;letterhead&quot;
                  &lt;/ul&gt;
                  Each of these corresponds to the IPP &quot;media&quot; attribute.
                  The current API does not support describing media by characteristics
                  (eg colour, opacity).
                  This may be supported in a later revision of the specification.
                  &lt;p&gt;
                  A Media object is constructed with a value which represents
                  one of the ways in which the Media attribute can be specified.
                  &lt;p&gt;
                  &lt;B&gt;IPP Compatibility:&lt;/B&gt;  The category name returned by
                  &lt;CODE&gt;getName()&lt;/CODE&gt; is the IPP attribute name.  The enumeration&apos;s
                  integer value is the IPP enum value.  The &lt;code&gt;toString()&lt;/code&gt; method
                  returns the IPP string representation of the attribute value.
                  &lt;P&gt;                
                <author>
                    Phil Race                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="62"/>
            <javadoc line="64">
                Constructs a new media attribute specified by name.                
                <param>
                    value         a value                    
                </param>
            </javadoc>
            <method name="Media" type="constructor" line="69">
                <params>
                    <param name="value" type="int"/>
                </params>
            </method>
            <javadoc line="73">
                Returns whether this media attribute is equivalent to the passed in
                  object. To be equivalent, all of the following conditions must be true:
                  &lt;OL TYPE=1&gt;
                  &lt;LI&gt;
                  &lt;CODE&gt;object&lt;/CODE&gt; is not null.
                  &lt;LI&gt;
                  &lt;CODE&gt;object&lt;/CODE&gt; is of the same subclass of Media as this object.
                  &lt;LI&gt;
                  The values are equal.
                  &lt;/OL&gt;                
                <param>
                    object  Object to compare to.                    
                </param>
                <return>
                    True if &lt;CODE&gt;object&lt;/CODE&gt; is equivalent to this media
                      attribute, false otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="90">
                <params>
                    <param name="object" type="Object"/>
                </params>
            </method>
            <javadoc line="96">
                Get the printing attribute class which is to be used as the &quot;category&quot;
                  for this printing attribute value.
                  &lt;P&gt;
                  For class Media and any vendor-defined subclasses, the category is
                  class Media itself.                
                <return>
                    Printing attribute class (category), an instance of class{@link java.lang.Class java.lang.Class}.                    
                </return>
            </javadoc>
            <method name="getCategory" type="Class<? extends Attribute>" line="106"/>
            <javadoc line="110">
                Get the name of the category of which this attribute value is an
                  instance.
                  &lt;P&gt;
                  For class Media and any vendor-defined subclasses, the category name is
                  &lt;CODE&gt;&quot;media&quot;&lt;/CODE&gt;.                
                <return>
                    Attribute category name.                    
                </return>
            </javadoc>
            <method name="getName" type="String" line="119"/>
        </class>
    </source>