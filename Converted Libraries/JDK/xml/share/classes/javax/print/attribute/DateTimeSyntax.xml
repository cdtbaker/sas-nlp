<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.print.attribute">
        <import package="java.io.Serializable"/>
        <import package="java.util.Date"/>
        <class name="DateTimeSyntax" line="33">
            <comment line="66">
                Hidden data members.                
            </comment>
            <comment line="74">
                Hidden constructors.                
            </comment>
            <comment line="92">
                Exported operations.                
            </comment>
            <comment line="103">
                Exported operations inherited and overridden from class Object.                
            </comment>
            <implements interface="Serializable"/>
            <implements interface="Cloneable"/>
            <javadoc line="33">
                Class DateTimeSyntax is an abstract base class providing the common
                  implementation of all attributes whose value is a date and time.
                  &lt;P&gt;
                  Under the hood, a date-time attribute is stored as a value of class &lt;code&gt;
                  java.util.Date&lt;/code&gt;. You can get a date-time attribute&apos;s Date value by
                  calling {@link #getValue() &lt;CODE&gt;getValue()&lt;/CODE&gt;}. A date-time attribute&apos;s
                  Date value is established when it is constructed (see {@link #DateTimeSyntax(Date) &lt;CODE&gt;DateTimeSyntax(Date)&lt;/CODE&gt;}). Once
                  constructed, a date-time attribute&apos;s value is immutable.
                  &lt;P&gt;
                  To construct a date-time attribute from separate values of the year, month,
                  day, hour, minute, and so on, use a &lt;code&gt;java.util.Calendar&lt;/code&gt;
                  object to construct a &lt;code&gt;java.util.Date&lt;/code&gt; object, then use the
                  &lt;code&gt;java.util.Date&lt;/code&gt; object to construct the date-time attribute.
                  To convert
                  a date-time attribute to separate values of the year, month, day, hour,
                  minute, and so on, create a &lt;code&gt;java.util.Calendar&lt;/code&gt; object and
                  set it to the &lt;code&gt;java.util.Date&lt;/code&gt; from the date-time attribute. Class
                  DateTimeSyntax stores its value in the form of a &lt;code&gt;java.util.Date
                  &lt;/code&gt;
                  rather than a &lt;code&gt;java.util.Calendar&lt;/code&gt; because it typically takes
                  less memory to store and less time to compare a &lt;code&gt;java.util.Date&lt;/code&gt;
                  than a &lt;code&gt;java.util.Calendar&lt;/code&gt;.
                  &lt;P&gt;                
                <author>
                    Alan Kaminsky                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="63"/>
            <declaration name="value" type="Date" line="67"/>
            <javadoc line="67">
                This date-time attribute&apos;s&lt;code&gt;java.util.Date&lt;/code&gt; value.                
                <serial>
                                        
                </serial>
            </javadoc>
            <javadoc line="75">
                Construct a new date-time attribute with the given
                  &lt;code&gt;java.util.Date &lt;/code&gt; value.                
                <param>
                    value   <code>java.util.Date</code> value.                    
                </param>
                <exception>
                    NullPointerException(unchecked exception) Thrown if <CODE>theValue</CODE> is null.                    
                </exception>
            </javadoc>
            <method name="DateTimeSyntax" type="constructor" line="84">
                <params>
                    <param name="value" type="Date"/>
                </params>
                <scope line="85"/>
            </method>
            <javadoc line="93">
                Returns this date-time attribute&apos;s &lt;code&gt;java.util.Date&lt;/code&gt;
                  value.                
                <return>
                    the Date.                    
                </return>
            </javadoc>
            <method name="getValue" type="Date" line="98"/>
            <javadoc line="104">
                Returns whether this date-time attribute is equivalent to the passed in
                  object. To be equivalent, all of the following conditions must be true:
                  &lt;OL TYPE=1&gt;
                  &lt;LI&gt;
                  &lt;CODE&gt;object&lt;/CODE&gt; is not null.
                  &lt;LI&gt;
                  &lt;CODE&gt;object&lt;/CODE&gt; is an instance of class DateTimeSyntax.
                  &lt;LI&gt;
                  This date-time attribute&apos;s &lt;code&gt;java.util.Date&lt;/code&gt; value and
                  &lt;CODE&gt;object&lt;/CODE&gt;&apos;s &lt;code&gt;java.util.Date&lt;/code&gt; value are
                  equal. &lt;/OL&gt;                
                <param>
                    object  Object to compare to.                    
                </param>
                <return>
                    True if <CODE>object</CODE> is equivalent to this date-time
                      attribute, false otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="122">
                <params>
                    <param name="object" type="Object"/>
                </params>
            </method>
            <javadoc line="128">
                Returns a hash code value for this date-time attribute. The hashcode is
                  that of this attribute&apos;s &lt;code&gt;java.util.Date&lt;/code&gt; value.                
            </javadoc>
            <method name="hashCode" type="int" line="132"/>
            <javadoc line="136">
                Returns a string value corresponding to this date-time attribute.
                  The string value is just this attribute&apos;s
                  &lt;code&gt;java.util.Date&lt;/code&gt;  value
                  converted to a string.                
            </javadoc>
            <method name="toString" type="String" line="142"/>
        </class>
    </source>