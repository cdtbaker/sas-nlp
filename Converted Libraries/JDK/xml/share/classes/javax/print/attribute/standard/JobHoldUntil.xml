<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.print.attribute.standard">
        <import package="java.util.Date"/>
        <import package="javax.print.attribute.Attribute"/>
        <import package="javax.print.attribute.DateTimeSyntax"/>
        <import package="javax.print.attribute.PrintRequestAttribute"/>
        <import package="javax.print.attribute.PrintJobAttribute"/>
        <class name="JobHoldUntil" line="7">
            <extends class="DateTimeSyntax"/>
            <implements interface="PrintRequestAttribute"/>
            <implements interface="PrintJobAttribute"/>
            <javadoc line="7">
                Class JobHoldUntil is a printing attribute class, a date-time attribute, that
                  specifies the exact date and time at which the job must become a candidate
                  for printing.
                  &lt;P&gt;
                  If the value of this attribute specifies a date-time that is in the future,
                  the printer should add the {@link JobStateReason JobStateReason} value of
                  JOB_HOLD_UNTIL_SPECIFIED to the job&apos;s {@link JobStateReasons JobStateReasons}attribute, must move the job to the PENDING_HELD state, and must not schedule
                  the job for printing until the specified date-time arrives.
                  &lt;P&gt;
                  When the specified date-time arrives, the printer must remove the {@link JobStateReason JobStateReason} value of JOB_HOLD_UNTIL_SPECIFIED from the
                  job&apos;s {@link JobStateReasons JobStateReasons} attribute, if present. If there
                  are no other job state reasons that keep the job in the PENDING_HELD state,
                  the printer must consider the job as a candidate for processing by moving the
                  job to the PENDING state.
                  &lt;P&gt;
                  If the specified date-time has already passed, the job must be a candidate
                  for processing immediately. Thus, one way to make the job immediately become
                  a candidate for processing is to specify a JobHoldUntil attribute constructed
                  like this (denoting a date-time of January 1, 1970, 00:00:00 GMT):
                  &lt;PRE&gt;
                  JobHoldUntil immediately = new JobHoldUntil (new Date (0L));
                  &lt;/PRE&gt;
                  &lt;P&gt;
                  If the client does not supply this attribute in a Print Request and the
                  printer supports this attribute, the printer must use its
                  (implementation-dependent) default JobHoldUntil value at job submission time
                  (unlike most job template attributes that are used if necessary at job
                  processing time).
                  &lt;P&gt;
                  To construct a JobHoldUntil attribute from separate values of the year,
                  month, day, hour, minute, and so on, use a {@link java.util.CalendarCalendar} object to construct a {@link java.util.Date Date} object, then use
                  the {@link java.util.Date Date} object to construct the JobHoldUntil
                  attribute. To convert a JobHoldUntil attribute to separate values of the
                  year, month, day, hour, minute, and so on, create a {@link java.util.CalendarCalendar} object and set it to the {@link java.util.Date Date} from the
                  JobHoldUntil attribute.
                  &lt;P&gt;
                  &lt;B&gt;IPP Compatibility:&lt;/B&gt; Although IPP supports a &quot;job-hold-until&quot; attribute
                  specified as a keyword, IPP does not at this time support a &quot;job-hold-until&quot;
                  attribute specified as a date and time. However, the date and time can be
                  converted to one of the standard IPP keywords with some loss of precision;
                  for example, a JobHoldUntil value with today&apos;s date and 9:00pm local time
                  might be converted to the standard IPP keyword &quot;night&quot;. The category name
                  returned by &lt;CODE&gt;getName()&lt;/CODE&gt; gives the IPP attribute name.
                  &lt;P&gt;                
                <author>
                    Alan Kaminsky                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="55"/>
            <javadoc line="56">
                Construct a new job hold until date-time attribute with the given{@link java.util.Date Date} value.                
                <param>
                    dateTime  {@link java.util.Date Date} value.                    
                </param>
                <exception>
                    NullPointerException(unchecked exception) Thrown if <CODE>dateTime</CODE> is null.                    
                </exception>
            </javadoc>
            <method name="JobHoldUntil" type="constructor" line="61">
                <params>
                    <param name="dateTime" type="Date"/>
                </params>
            </method>
            <javadoc line="64">
                Returns whether this job hold until attribute is equivalent to the
                  passed in object. To be equivalent, all of the following conditions
                  must be true:
                  &lt;OL TYPE=1&gt;
                  &lt;LI&gt;
                  &lt;CODE&gt;object&lt;/CODE&gt; is not null.
                  &lt;LI&gt;
                  &lt;CODE&gt;object&lt;/CODE&gt; is an instance of class JobHoldUntil.
                  &lt;LI&gt;
                  This job hold until attribute&apos;s {@link java.util.Date Date} value and
                  &lt;CODE&gt;object&lt;/CODE&gt;&apos;s {@link java.util.Date Date} value are equal.
                  &lt;/OL&gt;                
                <param>
                    object  Object to compare to.                    
                </param>
                <return>
                    True if <CODE>object</CODE> is equivalent to this job hold
                      until attribute, false otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="81">
                <params>
                    <param name="object" type="Object"/>
                </params>
            </method>
            <javadoc line="84">
                Get the printing attribute class which is to be used as the &quot;category&quot;
                  for this printing attribute value.
                  &lt;P&gt;
                  For class JobHoldUntil, the category is class JobHoldUntil itself.                
                <return>
                    Printing attribute class (category), an instance of class{@link java.lang.Class java.lang.Class}.                    
                </return>
            </javadoc>
            <method name="getCategory" type="Class<? extends Attribute>" line="91"/>
            <javadoc line="94">
                Get the name of the category of which this attribute value is an
                  instance.
                  &lt;P&gt;
                  For class JobHoldUntil, the category name is &lt;CODE&gt;&quot;job-hold-until&quot;&lt;/CODE&gt;.                
                <return>
                    Attribute category name.                    
                </return>
            </javadoc>
            <method name="getName" type="String" line="101"/>
        </class>
    </source>