<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.print.attribute.standard">
        <import package="javax.print.attribute.Attribute"/>
        <import package="javax.print.attribute.IntegerSyntax"/>
        <import package="javax.print.attribute.PrintRequestAttribute"/>
        <import package="javax.print.attribute.PrintJobAttribute"/>
        <class name="Copies" line="6">
            <extends class="IntegerSyntax"/>
            <implements interface="PrintRequestAttribute"/>
            <implements interface="PrintJobAttribute"/>
            <javadoc line="6">
                Class Copies is an integer valued printing attribute class that specifies the
                  number of copies to be printed.
                  &lt;P&gt;
                  On many devices the supported number of collated copies will be limited by
                  the number of physical output bins on the device, and may be different from
                  the number of uncollated copies which can be supported.
                  &lt;P&gt;
                  The effect of a Copies attribute with a value of &lt;I&gt;n&lt;/I&gt; on a multidoc print
                  job (a job with multiple documents) depends on the (perhaps defaulted) value
                  of the {@link MultipleDocumentHandling MultipleDocumentHandling} attribute:
                  &lt;UL&gt;
                  &lt;LI&gt;
                  SINGLE_DOCUMENT -- The result will be &lt;I&gt;n&lt;/I&gt; copies of a single output
                  document comprising all the input docs.
                  &lt;P&gt;
                  &lt;LI&gt;
                  SINGLE_DOCUMENT_NEW_SHEET -- The result will be &lt;I&gt;n&lt;/I&gt; copies of a single
                  output document comprising all the input docs, and the first impression of
                  each input doc will always start on a new media sheet.
                  &lt;P&gt;
                  &lt;LI&gt;
                  SEPARATE_DOCUMENTS_UNCOLLATED_COPIES -- The result will be &lt;I&gt;n&lt;/I&gt; copies of
                  the first input document, followed by &lt;I&gt;n&lt;/I&gt; copies of the second input
                  document, . . . followed by &lt;I&gt;n&lt;/I&gt; copies of the last input document.
                  &lt;P&gt;
                  &lt;LI&gt;
                  SEPARATE_DOCUMENTS_COLLATED_COPIES -- The result will be the first input
                  document, the second input document, . . . the last input document, the group
                  of documents being repeated &lt;I&gt;n&lt;/I&gt; times.
                  &lt;/UL&gt;
                  &lt;P&gt;
                  &lt;B&gt;IPP Compatibility:&lt;/B&gt; The integer value gives the IPP integer value. The
                  category name returned by &lt;CODE&gt;getName()&lt;/CODE&gt; gives the IPP attribute
                  name.
                  &lt;P&gt;                
                <author>
                    David Mendenhall                    
                </author>
                <author>
                    Alan Kamihensky                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="46"/>
            <javadoc line="47">
                Construct a new copies attribute with the given integer value.                
                <param>
                    value  Integer value.                    
                </param>
                <exception>
                    IllegalArgumentException(Unchecked exception) Thrown if <CODE>value</CODE> is less than 1.                    
                </exception>
            </javadoc>
            <method name="Copies" type="constructor" line="52">
                <params>
                    <param name="value" type="int"/>
                </params>
            </method>
            <javadoc line="55">
                Returns whether this copies attribute is equivalent to the passed in
                  object. To be equivalent, all of the following conditions must be true:
                  &lt;OL TYPE=1&gt;
                  &lt;LI&gt;
                  &lt;CODE&gt;object&lt;/CODE&gt; is not null.
                  &lt;LI&gt;
                  &lt;CODE&gt;object&lt;/CODE&gt; is an instance of class Copies.
                  &lt;LI&gt;
                  This copies attribute&apos;s value and &lt;CODE&gt;object&lt;/CODE&gt;&apos;s value are
                  equal.
                  &lt;/OL&gt;                
                <param>
                    object  Object to compare to.                    
                </param>
                <return>
                    True if <CODE>object</CODE> is equivalent to this copies
                      attribute, false otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="71">
                <params>
                    <param name="object" type="Object"/>
                </params>
            </method>
            <javadoc line="74">
                Get the printing attribute class which is to be used as the &quot;category&quot;
                  for this printing attribute value.
                  &lt;P&gt;
                  For class Copies, the category is class Copies itself.                
                <return>
                    Printing attribute class (category), an instance of class{@link java.lang.Class java.lang.Class}.                    
                </return>
            </javadoc>
            <method name="getCategory" type="Class<? extends Attribute>" line="81"/>
            <javadoc line="84">
                Get the name of the category of which this attribute value is an
                  instance.
                  &lt;P&gt;
                  For class Copies, the category name is &lt;CODE&gt;&quot;copies&quot;&lt;/CODE&gt;.                
                <return>
                    Attribute category name.                    
                </return>
            </javadoc>
            <method name="getName" type="String" line="91"/>
        </class>
    </source>