<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.print.attribute.standard">
        <import package="java.util.Collection"/>
        <import package="java.util.HashSet"/>
        <import package="javax.print.attribute.Attribute"/>
        <import package="javax.print.attribute.PrintJobAttribute"/>
        <class name="JobStateReasons" line="33">
            <extends class="HashSet">
                <type_params>
                    <type_param name="JobStateReason"/>
                </type_params>
            </extends>
            <implements interface="PrintJobAttribute"/>
            <javadoc line="33">
                Class JobStateReasons is a printing attribute class, a set of enumeration
                  values, that provides additional information about the job&apos;s current state,
                  i.e., information that augments the value of the job&apos;s {@link JobStateJobState} attribute.
                  &lt;P&gt;
                  Instances of {@link JobStateReason JobStateReason} do not appear in a Print
                  Job&apos;s attribute set directly. Rather, a JobStateReasons attribute appears in
                  the Print Job&apos;s attribute set. The JobStateReasons attribute contains zero,
                  one, or more than one {@link JobStateReason JobStateReason} objects which
                  pertain to the Print Job&apos;s status. The printer adds a {@link JobStateReasonJobStateReason} object to the Print Job&apos;s JobStateReasons attribute when the
                  corresponding condition becomes true of the Print Job, and the printer
                  removes the {@link JobStateReason JobStateReason} object again when the
                  corresponding condition becomes false, regardless of whether the Print Job&apos;s
                  overall {@link JobState JobState} also changed.
                  &lt;P&gt;
                  Class JobStateReasons inherits its implementation from class {@link java.util.HashSet java.util.HashSet}. Unlike most printing attributes which
                  are immutable once constructed, class JobStateReasons is designed to be
                  mutable; you can add {@link JobStateReason JobStateReason} objects to an
                  existing JobStateReasons object and remove them again. However, like class{@link java.util.HashSet java.util.HashSet}, class JobStateReasons is not
                  multiple thread safe. If a JobStateReasons object will be used by multiple
                  threads, be sure to synchronize its operations (e.g., using a synchronized
                  set view obtained from class {@link java.util.Collectionsjava.util.Collections}).
                  &lt;P&gt;
                  &lt;B&gt;IPP Compatibility:&lt;/B&gt; The string value returned by each individual {@link JobStateReason JobStateReason} object&apos;s &lt;CODE&gt;toString()&lt;/CODE&gt; method gives
                  the IPP keyword value. The category name returned by &lt;CODE&gt;getName()&lt;/CODE&gt;
                  gives the IPP attribute name.
                  &lt;P&gt;                
                <author>
                    Alan Kaminsky                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="72"/>
            <javadoc line="74">
                Construct a new, empty job state reasons attribute; the underlying hash
                  set has the default initial capacity and load factor.                
            </javadoc>
            <method name="JobStateReasons" type="constructor" line="78"/>
            <javadoc line="82">
                Construct a new, empty job state reasons attribute; the underlying hash
                  set has the given initial capacity and the default load factor.                
                <param>
                    initialCapacity  Initial capacity.                    
                </param>
                <throws>
                    IllegalArgumentException if the initial capacity is less
                      than zero.                    
                </throws>
            </javadoc>
            <method name="JobStateReasons" type="constructor" line="90">
                <params>
                    <param name="initialCapacity" type="int"/>
                </params>
            </method>
            <javadoc line="94">
                Construct a new, empty job state reasons attribute; the underlying hash
                  set has the given initial capacity and load factor.                
                <param>
                    initialCapacity  Initial capacity.                    
                </param>
                <param>
                    loadFactor       Load factor.                    
                </param>
                <throws>
                    IllegalArgumentException if the initial capacity is less
                      than zero.                    
                </throws>
            </javadoc>
            <method name="JobStateReasons" type="constructor" line="103">
                <params>
                    <param name="initialCapacity" type="int"/>
                    <param name="loadFactor" type="float"/>
                </params>
            </method>
            <javadoc line="107">
                Construct a new job state reasons attribute that contains the same{@link JobStateReason JobStateReason} objects as the given collection.
                  The underlying hash set&apos;s initial capacity and load factor are as
                  specified in the superclass constructor {@link java.util.HashSet#HashSet(java.util.Collection)&lt;CODE&gt;HashSet(Collection)&lt;/CODE&gt;}.                
                <param>
                    collection  Collection to copy.                    
                </param>
                <exception>
                    NullPointerException(unchecked exception) Thrown if <CODE>collection</CODE> is null or
                      if any element in <CODE>collection</CODE> is null.                    
                </exception>
                <throws>
                    ClassCastException(unchecked exception) Thrown if any element in
                      <CODE>collection</CODE> is not an instance of class {@link JobStateReason JobStateReason}.                    
                </throws>
            </javadoc>
            <method name="JobStateReasons" type="constructor" line="125">
                <params>
                    <param name="collection" type="Collection<JobStateReason>"/>
                </params>
            </method>
            <javadoc line="129">
                Adds the specified element to this job state reasons attribute if it is
                  not already present. The element to be added must be an instance of class{@link JobStateReason JobStateReason}. If this job state reasons
                  attribute already contains the specified element, the call leaves this
                  job state reasons attribute unchanged and returns &lt;tt&gt;false&lt;/tt&gt;.                
                <param>
                    o  Element to be added to this job state reasons attribute.                    
                </param>
                <return>
                    <tt>true</tt> if this job state reasons attribute did not
                      already contain the specified element.                    
                </return>
                <throws>
                    NullPointerException(unchecked exception) Thrown if the specified element is null.                    
                </throws>
                <throws>
                    ClassCastException(unchecked exception) Thrown if the specified element is not an
                      instance of class {@link JobStateReason JobStateReason}.                    
                </throws>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="add" type="boolean" line="148">
                <params>
                    <param name="o" type="JobStateReason"/>
                </params>
                <scope line="149"/>
            </method>
            <javadoc line="155">
                Get the printing attribute class which is to be used as the &quot;category&quot;
                  for this printing attribute value.
                  &lt;P&gt;
                  For class JobStateReasons, the category is class JobStateReasons itself.                
                <return>
                    Printing attribute class (category), an instance of class{@link java.lang.Class java.lang.Class}.                    
                </return>
            </javadoc>
            <method name="getCategory" type="Class<? extends Attribute>" line="164"/>
            <javadoc line="168">
                Get the name of the category of which this attribute value is an
                  instance.
                  &lt;P&gt;
                  For class JobStateReasons, the category
                  name is &lt;CODE&gt;&quot;job-state-reasons&quot;&lt;/CODE&gt;.                
                <return>
                    Attribute category name.                    
                </return>
            </javadoc>
            <method name="getName" type="String" line="177"/>
        </class>
    </source>