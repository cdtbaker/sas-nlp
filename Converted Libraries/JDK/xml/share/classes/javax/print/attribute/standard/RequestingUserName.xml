<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.print.attribute.standard">
        <import package="java.util.Locale"/>
        <import package="javax.print.attribute.Attribute"/>
        <import package="javax.print.attribute.TextSyntax"/>
        <import package="javax.print.attribute.PrintRequestAttribute"/>
        <class name="RequestingUserName" line="6">
            <extends class="TextSyntax"/>
            <implements interface="PrintRequestAttribute"/>
            <javadoc line="6">
                Class RequestingUserName is a printing attribute class, a text attribute,
                  that specifies the name of the end user that submitted the print job. A
                  requesting user name is an arbitrary string defined by the client. The
                  printer does not put the client-specified RequestingUserName attribute into
                  the Print Job&apos;s attribute set; rather, the printer puts in a {@link JobOriginatingUserName JobOriginatingUserName} attribute.
                  This means that services which support specifying a username with this
                  attribute should also report a JobOriginatingUserName in the job&apos;s
                  attribute set. Note that many print services may have a way to independently
                  authenticate the user name, and so may state support for a
                  requesting user name, but in practice will then report the user name
                  authenticated by the service rather than that specified via this
                  attribute.
                  &lt;P&gt;
                  &lt;B&gt;IPP Compatibility:&lt;/B&gt; The string value gives the IPP name value. The
                  locale gives the IPP natural language. The category name returned by
                  &lt;CODE&gt;getName()&lt;/CODE&gt; gives the IPP attribute name.
                  &lt;P&gt;                
                <author>
                    Alan Kaminsky                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="27"/>
            <javadoc line="28">
                Constructs a new requesting user name attribute with the given user
                  name and locale.                
                <param>
                    userName  User name.                    
                </param>
                <param>
                    locale    Natural language of the text string. null
                      is interpreted to mean the default locale as returned
                      by <code>Locale.getDefault()</code>                    
                </param>
                <exception>
                    NullPointerException(unchecked exception) Thrown if <CODE>userName</CODE> is null.                    
                </exception>
            </javadoc>
            <method name="RequestingUserName" type="constructor" line="37">
                <params>
                    <param name="userName" type="String"/>
                    <param name="locale" type="Locale"/>
                </params>
            </method>
            <javadoc line="40">
                Returns whether this requesting user name attribute is equivalent to
                  the passed in object. To be equivalent, all of the following
                  conditions must be true:
                  &lt;OL TYPE=1&gt;
                  &lt;LI&gt;
                  &lt;CODE&gt;object&lt;/CODE&gt; is not null.
                  &lt;LI&gt;
                  &lt;CODE&gt;object&lt;/CODE&gt; is an instance of class RequestingUserName.
                  &lt;LI&gt;
                  This requesting user name attribute&apos;s underlying string and
                  &lt;CODE&gt;object&lt;/CODE&gt;&apos;s underlying string are equal.
                  &lt;LI&gt;
                  This requesting user name attribute&apos;s locale and
                  &lt;CODE&gt;object&lt;/CODE&gt;&apos;s locale are equal.
                  &lt;/OL&gt;                
                <param>
                    object  Object to compare to.                    
                </param>
                <return>
                    True if <CODE>object</CODE> is equivalent to this requesting
                      user name attribute, false otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="60">
                <params>
                    <param name="object" type="Object"/>
                </params>
            </method>
            <javadoc line="63">
                Get the printing attribute class which is to be used as the &quot;category&quot;
                  for this printing attribute value.
                  &lt;P&gt;
                  For class RequestingUserName, the
                  category is class RequestingUserName itself.                
                <return>
                    Printing attribute class (category), an instance of class{@link java.lang.Class java.lang.Class}.                    
                </return>
            </javadoc>
            <method name="getCategory" type="Class<? extends Attribute>" line="71"/>
            <javadoc line="74">
                Get the name of the category of which this attribute value is an
                  instance.
                  &lt;P&gt;
                  For class RequestingUserName, the
                  category name is &lt;CODE&gt;&quot;requesting-user-name&quot;&lt;/CODE&gt;.                
                <return>
                    Attribute category name.                    
                </return>
            </javadoc>
            <method name="getName" type="String" line="82"/>
        </class>
    </source>