<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.print.attribute.standard">
        <import package="java.util.Locale"/>
        <import package="javax.print.attribute.Attribute"/>
        <import package="javax.print.attribute.TextSyntax"/>
        <import package="javax.print.attribute.DocAttribute"/>
        <class name="DocumentName" line="6">
            <extends class="TextSyntax"/>
            <implements interface="DocAttribute"/>
            <javadoc line="6">
                Class DocumentName is a printing attribute class, a text attribute, that
                  specifies the name of a document. DocumentName is an attribute of the print
                  data (the doc), not of the Print Job. A document&apos;s name is an arbitrary
                  string defined by the client.
                  However if a JobName is not specified, the DocumentName should be used
                  instead, which implies that supporting specification of DocumentName
                  requires reporting of JobName and vice versa.
                  See {@link JobName JobName} for more information.
                  &lt;P&gt;
                  &lt;B&gt;IPP Compatibility:&lt;/B&gt; The string value gives the IPP name value. The
                  locale gives the IPP natural language. The category name returned by
                  &lt;CODE&gt;getName()&lt;/CODE&gt; gives the IPP attribute name.
                  &lt;P&gt;                
                <author>
                    Alan Kaminsky                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="23"/>
            <javadoc line="24">
                Constructs a new document name attribute with the given document name
                  and locale.                
                <param>
                    documentName  Document name.                    
                </param>
                <param>
                    locale        Natural language of the text string. null
                      is interpreted to mean the default locale as returned
                      by &lt;code&gt;Locale.getDefault()&lt;/code&gt;                    
                </param>
                <exception>
                    NullPointerException(unchecked exception) Thrown if &lt;CODE&gt;documentName&lt;/CODE&gt; is null.                    
                </exception>
            </javadoc>
            <method name="DocumentName" type="constructor" line="33">
                <params>
                    <param name="documentName" type="String"/>
                    <param name="locale" type="Locale"/>
                </params>
            </method>
            <javadoc line="36">
                Returns whether this document name attribute is equivalent to the
                  passed in object.
                  To be equivalent, all of the following conditions must be true:
                  &lt;OL TYPE=1&gt;
                  &lt;LI&gt;
                  &lt;CODE&gt;object&lt;/CODE&gt; is not null.
                  &lt;LI&gt;
                  &lt;CODE&gt;object&lt;/CODE&gt; is an instance of class DocumentName.
                  &lt;LI&gt;
                  This document name attribute&apos;s underlying string and
                  &lt;CODE&gt;object&lt;/CODE&gt;&apos;s underlying string are equal.
                  &lt;LI&gt;
                  This document name attribute&apos;s locale and &lt;CODE&gt;object&lt;/CODE&gt;&apos;s locale
                  are equal.
                  &lt;/OL&gt;                
                <param>
                    object  Object to compare to.                    
                </param>
                <return>
                    True if &lt;CODE&gt;object&lt;/CODE&gt; is equivalent to this document
                      name attribute, false otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="56">
                <params>
                    <param name="object" type="Object"/>
                </params>
            </method>
            <javadoc line="59">
                Get the printing attribute class which is to be used as the &quot;category&quot;
                  for this printing attribute value.
                  &lt;P&gt;
                  For class DocumentName, the category is class DocumentName itself.                
                <return>
                    Printing attribute class (category), an instance of class{@link java.lang.Class java.lang.Class}.                    
                </return>
            </javadoc>
            <method name="getCategory" type="Class&lt;? extends Attribute&gt;" line="66"/>
            <javadoc line="69">
                Get the name of the category of which this attribute value is an
                  instance.
                  &lt;P&gt;
                  For class DocumentName, the category name is &lt;CODE&gt;&quot;document-name&quot;&lt;/CODE&gt;.                
                <return>
                    Attribute category name.                    
                </return>
            </javadoc>
            <method name="getName" type="String" line="76"/>
        </class>
    </source>