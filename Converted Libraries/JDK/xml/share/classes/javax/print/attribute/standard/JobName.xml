<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.print.attribute.standard">
        <import package="java.util.Locale"/>
        <import package="javax.print.attribute.Attribute"/>
        <import package="javax.print.attribute.TextSyntax"/>
        <import package="javax.print.attribute.PrintRequestAttribute"/>
        <import package="javax.print.attribute.PrintJobAttribute"/>
        <class name="JobName" line="7">
            <extends class="TextSyntax"/>
            <implements interface="PrintRequestAttribute"/>
            <implements interface="PrintJobAttribute"/>
            <javadoc line="7">
                Class JobName is a printing attribute class, a text attribute, that specifies
                  the name of a print job. A job&apos;s name is an arbitrary string defined by the
                  client. It does not need to be unique between different jobs. A Print Job&apos;s
                  JobName attribute is set to the value supplied by the client in the Print
                  Request&apos;s attribute set. If, however, the client does not supply a JobName
                  attribute in the Print Request, the printer, when it creates the Print Job,
                  must generate a JobName. The printer should generate the value of the Print
                  Job&apos;s JobName attribute from the first of the following sources that produces
                  a value: (1) the {@link DocumentName DocumentName} attribute of the first (or
                  only) doc in the job, (2) the URL of the first (or only) doc in the job, if
                  the doc&apos;s print data representation object is a URL, or (3) any other piece
                  of Print Job specific and/or document content information.
                  &lt;P&gt;
                  &lt;B&gt;IPP Compatibility:&lt;/B&gt; The string value gives the IPP name value. The
                  locale gives the IPP natural language. The category name returned by
                  &lt;CODE&gt;getName()&lt;/CODE&gt; gives the IPP attribute name.
                  &lt;P&gt;                
                <author>
                    Alan Kaminsky                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="28"/>
            <javadoc line="29">
                Constructs a new job name attribute with the given job name and locale.                
                <param>
                    jobName  Job name.                    
                </param>
                <param>
                    locale   Natural language of the text string. null
                      is interpreted to mean the default locale as returned
                      by <code>Locale.getDefault()</code>                    
                </param>
                <exception>
                    NullPointerException(unchecked exception) Thrown if <CODE>jobName</CODE> is null.                    
                </exception>
            </javadoc>
            <method name="JobName" type="constructor" line="37">
                <params>
                    <param name="jobName" type="String"/>
                    <param name="locale" type="Locale"/>
                </params>
            </method>
            <javadoc line="40">
                Returns whether this job name attribute is equivalent to the passed in
                  object. To be equivalent, all of the following conditions must be true:
                  &lt;OL TYPE=1&gt;
                  &lt;LI&gt;
                  &lt;CODE&gt;object&lt;/CODE&gt; is not null.
                  &lt;LI&gt;
                  &lt;CODE&gt;object&lt;/CODE&gt; is an instance of class JobName.
                  &lt;LI&gt;
                  This job name attribute&apos;s underlying string and &lt;CODE&gt;object&lt;/CODE&gt;&apos;s
                  underlying string are equal.
                  &lt;LI&gt;
                  This job name attribute&apos;s locale and &lt;CODE&gt;object&lt;/CODE&gt;&apos;s locale are
                  equal.
                  &lt;/OL&gt;                
                <param>
                    object  Object to compare to.                    
                </param>
                <return>
                    True if <CODE>object</CODE> is equivalent to this job name
                      attribute, false otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="59">
                <params>
                    <param name="object" type="Object"/>
                </params>
            </method>
            <javadoc line="62">
                Get the printing attribute class which is to be used as the &quot;category&quot;
                  for this printing attribute value.
                  &lt;P&gt;
                  For class JobName, the category is class JobName itself.                
                <return>
                    Printing attribute class (category), an instance of class{@link java.lang.Class java.lang.Class}.                    
                </return>
            </javadoc>
            <method name="getCategory" type="Class<? extends Attribute>" line="69"/>
            <javadoc line="72">
                Get the name of the category of which this attribute value is an
                  instance.
                  &lt;P&gt;
                  For class JobName, the category name is &lt;CODE&gt;&quot;job-name&quot;&lt;/CODE&gt;.                
                <return>
                    Attribute category name.                    
                </return>
            </javadoc>
            <method name="getName" type="String" line="79"/>
        </class>
    </source>