<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.print.attribute.standard">
        <import package="javax.print.attribute.Attribute"/>
        <import package="javax.print.attribute.SetOfIntegerSyntax"/>
        <import package="javax.print.attribute.SupportedValuesAttribute"/>
        <class name="NumberUpSupported" line="5">
            <extends class="SetOfIntegerSyntax"/>
            <implements interface="SupportedValuesAttribute"/>
            <javadoc line="5">
                Class NumberUpSupported is a printing attribute class, a set of integers,
                  that gives the supported values for a {@link NumberUp NumberUp} attribute.
                  &lt;P&gt;
                  &lt;B&gt;IPP Compatibility:&lt;/B&gt; The NumberUpSupported attribute&apos;s canonical array
                  form gives the lower and upper bound for each range of number-up to be
                  included in an IPP &quot;number-up-supported&quot; attribute. See class {@link javax.print.attribute.SetOfIntegerSyntax SetOfIntegerSyntax} for an
                  explanation of canonical array form. The category name returned by
                  &lt;CODE&gt;getName()&lt;/CODE&gt; gives the IPP attribute name.
                  &lt;P&gt;                
                <author>
                    Alan Kaminsky                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="18"/>
            <javadoc line="19">
                Construct a new number up supported attribute with the given members.
                  The supported values for NumberUp are specified in &quot;array form;&quot; see
                  class{@link javax.print.attribute.SetOfIntegerSyntax SetOfIntegerSyntax}for an explanation of array form.                
                <param>
                    members  Set members in array form.                    
                </param>
                <exception>
                    NullPointerException(unchecked exception) Thrown if <CODE>members</CODE> is null or
                      any element of <CODE>members</CODE> is null.                    
                </exception>
                <exception>
                    IllegalArgumentException(unchecked exception) Thrown if any element of
                      <CODE>members</CODE> is not a length-one or length-two array. Also
                      thrown if <CODE>members</CODE> is a zero-length array or if any
                      member of the set is less than 1.                    
                </exception>
            </javadoc>
            <method name="NumberUpSupported" type="constructor" line="31">
                <params>
                    <param name="members" type="int[][]"/>
                </params>
                <scope line="33"/>
                <declaration name="myMembers" type="int[][]" line="36"/>
                <declaration name="n" type="int" line="37"/>
                <scope line="38"/>
                <declaration name="i" type="int" line="41"/>
                <scope line="42">
                    <scope line="43"/>
                </scope>
            </method>
            <javadoc line="48">
                Construct a new number up supported attribute containing a single
                  integer. That is, only the one value of NumberUp is supported.                
                <param>
                    member  Set member.                    
                </param>
                <exception>
                    IllegalArgumentException(Unchecked exception) Thrown if <CODE>member</CODE> is less than
                      1.                    
                </exception>
            </javadoc>
            <method name="NumberUpSupported" type="constructor" line="55">
                <params>
                    <param name="member" type="int"/>
                </params>
                <scope line="57"/>
            </method>
            <javadoc line="61">
                Construct a new number up supported attribute containing a single range
                  of integers. That is, only those values of NumberUp in the one range are
                  supported.                
                <param>
                    lowerBound  Lower bound of the range.                    
                </param>
                <param>
                    upperBound  Upper bound of the range.                    
                </param>
                <exception>
                    IllegalArgumentException(Unchecked exception) Thrown if a null range is specified or if a
                      non-null range is specified with <CODE>lowerBound</CODE> less than
                      1.                    
                </exception>
            </javadoc>
            <method name="NumberUpSupported" type="constructor" line="71">
                <params>
                    <param name="lowerBound" type="int"/>
                    <param name="upperBound" type="int"/>
                </params>
                <scope line="73"/>
                <scope line="76"/>
            </method>
            <javadoc line="80">
                Returns whether this number up supported attribute is equivalent to the
                  passed in object. To be equivalent, all of the following conditions
                  must be true:
                  &lt;OL TYPE=1&gt;
                  &lt;LI&gt;
                  &lt;CODE&gt;object&lt;/CODE&gt; is not null.
                  &lt;LI&gt;
                  &lt;CODE&gt;object&lt;/CODE&gt; is an instance of class NumberUpSupported.
                  &lt;LI&gt;
                  This number up supported attribute&apos;s members and &lt;CODE&gt;object&lt;/CODE&gt;&apos;s
                  members are the same.
                  &lt;/OL&gt;                
                <param>
                    object  Object to compare to.                    
                </param>
                <return>
                    True if <CODE>object</CODE> is equivalent to this number up
                      supported attribute, false otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="97">
                <params>
                    <param name="object" type="Object"/>
                </params>
            </method>
            <javadoc line="100">
                Get the printing attribute class which is to be used as the &quot;category&quot;
                  for this printing attribute value.
                  &lt;P&gt;
                  For class NumberUpSupported, the
                  category is class NumberUpSupported itself.                
                <return>
                    Printing attribute class (category), an instance of class{@link java.lang.Class java.lang.Class}.                    
                </return>
            </javadoc>
            <method name="getCategory" type="Class<? extends Attribute>" line="108"/>
            <javadoc line="111">
                Get the name of the category of which this attribute value is an
                  instance.
                  &lt;P&gt;
                  For class NumberUpSupported, the
                  category name is &lt;CODE&gt;&quot;number-up-supported&quot;&lt;/CODE&gt;.                
                <return>
                    Attribute category name.                    
                </return>
            </javadoc>
            <method name="getName" type="String" line="119"/>
        </class>
    </source>