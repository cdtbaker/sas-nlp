<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.print.attribute.standard">
        <import package="javax.print.attribute.Attribute"/>
        <import package="javax.print.attribute.EnumSyntax"/>
        <import package="javax.print.attribute.PrintJobAttribute"/>
        <import package="javax.print.attribute.PrintRequestAttribute"/>
        <class name="PresentationDirection" line="6">
            <extends class="EnumSyntax"/>
            <implements interface="PrintJobAttribute"/>
            <implements interface="PrintRequestAttribute"/>
            <javadoc line="6">
                Class PresentationDirection is a printing attribute class, an enumeration,
                  that is used in conjunction with the {@link NumberUp NumberUp} attribute to
                  indicate the layout of multiple print-stream pages to impose upon a
                  single side of an instance of a selected medium.
                  This is useful to mirror the text layout conventions of different scripts.
                  For example, English is &quot;toright-tobottom&quot;, Hebrew is &quot;toleft-tobottom&quot;
                  and Japanese is usually &quot;tobottom-toleft&quot;.
                  &lt;P&gt;
                  &lt;B&gt;IPP Compatibility:&lt;/B&gt;  This attribute is not an IPP 1.1
                  attribute; it is an attribute in the Production Printing Extension
                  (&lt;a href=&quot;ftp://ftp.pwg.org/pub/pwg/standards/pwg5100.3.pdf&quot;&gt;PDF&lt;/a&gt;)
                  of IPP 1.1.  The category name returned by
                  &lt;CODE&gt;getName()&lt;/CODE&gt; is the IPP attribute name.  The enumeration&apos;s
                  integer value is the IPP enum value.  The &lt;code&gt;toString()&lt;/code&gt; method
                  returns the IPP string representation of the attribute value.
                  &lt;P&gt;                
                <author>
                    Phil Race.                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="26"/>
            <declaration name="TOBOTTOM_TORIGHT" type="PresentationDirection" line="27"/>
            <javadoc line="27">
                Pages are laid out in columns starting at the top left,
                  proceeeding towards the bottom &amp; right.                
            </javadoc>
            <declaration name="TOBOTTOM_TOLEFT" type="PresentationDirection" line="32"/>
            <javadoc line="32">
                Pages are laid out in columns starting at the top right,
                  proceeeding towards the bottom &amp; left.                
            </javadoc>
            <declaration name="TOTOP_TORIGHT" type="PresentationDirection" line="37"/>
            <javadoc line="37">
                Pages are laid out in columns starting at the bottom left,
                  proceeeding towards the top &amp; right.                
            </javadoc>
            <declaration name="TOTOP_TOLEFT" type="PresentationDirection" line="42"/>
            <javadoc line="42">
                Pages are laid out in columns starting at the bottom right,
                  proceeeding towards the top &amp; left.                
            </javadoc>
            <declaration name="TORIGHT_TOBOTTOM" type="PresentationDirection" line="47"/>
            <javadoc line="47">
                Pages are laid out in rows starting at the top left,
                  proceeeding towards the right &amp; bottom.                
            </javadoc>
            <declaration name="TORIGHT_TOTOP" type="PresentationDirection" line="52"/>
            <javadoc line="52">
                Pages are laid out in rows starting at the bottom left,
                  proceeeding towards the right &amp; top.                
            </javadoc>
            <declaration name="TOLEFT_TOBOTTOM" type="PresentationDirection" line="57"/>
            <javadoc line="57">
                Pages are laid out in rows starting at the top right,
                  proceeeding towards the left &amp; bottom.                
            </javadoc>
            <declaration name="TOLEFT_TOTOP" type="PresentationDirection" line="62"/>
            <javadoc line="62">
                Pages are laid out in rows starting at the bottom right,
                  proceeeding towards the left &amp; top.                
            </javadoc>
            <javadoc line="67">
                Construct a new presentation direction enumeration value with the given
                  integer value.                
                <param>
                    value  Integer value.                    
                </param>
            </javadoc>
            <method name="PresentationDirection" type="constructor" line="72">
                <params>
                    <param name="value" type="int"/>
                </params>
            </method>
            <declaration name="myStringTable" type="String[]" line="75"/>
            <declaration name="myEnumValueTable" type="PresentationDirection[]" line="76"/>
            <javadoc line="77">
                Returns the string table for class PresentationDirection.                
            </javadoc>
            <method name="getStringTable" type="String[]" line="80"/>
            <javadoc line="83">
                Returns the enumeration value table for class PresentationDirection.                
            </javadoc>
            <method name="getEnumValueTable" type="EnumSyntax[]" line="86"/>
            <javadoc line="89">
                Get the printing attribute class which is to be used as the &quot;category&quot;
                  for this printing attribute value.
                  &lt;P&gt;
                  For class PresentationDirection
                  the category is class PresentationDirection itself.                
                <return>
                    Printing attribute class (category), an instance of class{@link java.lang.Class java.lang.Class}.                    
                </return>
            </javadoc>
            <method name="getCategory" type="Class&lt;? extends Attribute&gt;" line="97"/>
            <javadoc line="100">
                Get the name of the category of which this attribute value is an
                  instance.
                  &lt;P&gt;
                  For class PresentationDirection
                  the category name is &lt;CODE&gt;&quot;presentation-direction&quot;&lt;/CODE&gt;.                
                <return>
                    Attribute category name.                    
                </return>
            </javadoc>
            <method name="getName" type="String" line="108"/>
        </class>
    </source>