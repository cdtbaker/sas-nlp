<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.print.attribute.standard">
        <import package="javax.print.attribute.Attribute"/>
        <import package="javax.print.attribute.ResolutionSyntax"/>
        <import package="javax.print.attribute.DocAttribute"/>
        <import package="javax.print.attribute.PrintRequestAttribute"/>
        <import package="javax.print.attribute.PrintJobAttribute"/>
        <class name="PrinterResolution" line="33">
            <extends class="ResolutionSyntax"/>
            <implements interface="DocAttribute"/>
            <implements interface="PrintRequestAttribute"/>
            <implements interface="PrintJobAttribute"/>
            <javadoc line="33">
                Class PrinterResolution is a printing attribute class that specifies an
                  exact resolution supported by a printer or to be used for a print job.
                  This attribute assumes that printers have a small set of device resolutions
                  at which they can operate rather than a continuum.
                  &lt;p&gt;
                  PrinterResolution is used in multiple ways:
                  &lt;OL TYPE=1&gt;
                  &lt;LI&gt;
                  When a client searches looking for a printer that supports the client&apos;s
                  desired resolution exactly (no more, no less), the client specifies
                  an instance of class PrinterResolution indicating the exact resolution the
                  client wants. Only printers supporting that exact resolution will match the
                  search.
                  &lt;P&gt;
                  &lt;LI&gt;
                  When a client needs to print a job using the client&apos;s desired resolution
                  exactly (no more, no less), the client specifies an instance of class
                  PrinterResolution as an attribute of the Print Job. This will fail if the
                  Print Job doesn&apos;t support that exact resolution, and Fidelity is set to
                  true.
                  &lt;/OL&gt;
                  If a client wants to locate a printer supporting a resolution
                  greater than some required minimum, then it may be necessary to exclude
                  this attribute from a lookup request and to directly query the set of
                  supported resolutions, and specify the one that most closely meets
                  the client&apos;s requirements.
                  In some cases this may be more simply achieved by specifying a
                  PrintQuality attribute which often controls resolution.
                  &lt;P&gt;
                  &lt;P&gt;
                  &lt;B&gt;IPP Compatibility:&lt;/B&gt; The information needed to construct an IPP
                  &lt;CODE&gt;&quot;printer-resolution&quot;&lt;/CODE&gt; attribute can be obtained by calling
                  methods on the PrinterResolution object. The category name returned by
                  &lt;CODE&gt;getName()&lt;/CODE&gt; gives the IPP attribute name.
                  &lt;P&gt;                
                <author>
                    David Mendenhall                    
                </author>
                <author>
                    Alan Kaminsky                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="76"/>
            <javadoc line="78">
                Construct a new printer resolution attribute from the given items.                
                <param>
                    crossFeedResolutionCross feed direction resolution.                    
                </param>
                <param>
                    feedResolutionFeed direction resolution.                    
                </param>
                <param>
                    unitsUnit conversion factor, e.g. <code>ResolutionSyntax.DPI</CODE>
                      or <code>ResolutionSyntax.>DPCM</CODE>.                    
                </param>
                <exception>
                    IllegalArgumentException(unchecked exception) Thrown if <CODE>crossFeedResolution</CODE> <
                      1 or <CODE>feedResolution</CODE> < 1 or <CODE>units</CODE> < 1.                    
                </exception>
            </javadoc>
            <method name="PrinterResolution" type="constructor" line="94">
                <params>
                    <param name="crossFeedResolution" type="int"/>
                    <param name="feedResolution" type="int"/>
                    <param name="units" type="int"/>
                </params>
            </method>
            <javadoc line="98">
                Returns whether this printer resolution attribute is equivalent to the
                  passed in object. To be equivalent, all of the following conditions
                  must be true:
                  &lt;OL TYPE=1&gt;
                  &lt;LI&gt;
                  &lt;CODE&gt;object&lt;/CODE&gt; is not null.
                  &lt;LI&gt;
                  &lt;CODE&gt;object&lt;/CODE&gt; is an instance of class PrinterResolution.
                  &lt;LI&gt;
                  This attribute&apos;s cross feed direction resolution is equal to
                  &lt;CODE&gt;object&lt;/CODE&gt;&apos;s cross feed direction resolution.
                  &lt;LI&gt;
                  This attribute&apos;s feed direction resolution is equal to
                  &lt;CODE&gt;object&lt;/CODE&gt;&apos;s feed direction resolution.
                  &lt;/OL&gt;                
                <param>
                    object  Object to compare to.                    
                </param>
                <return>
                    True if <CODE>object</CODE> is equivalent to this printer
                      resolution attribute, false otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="120">
                <params>
                    <param name="object" type="Object"/>
                </params>
            </method>
            <javadoc line="125">
                Get the printing attribute class which is to be used as the &quot;category&quot;
                  for this printing attribute value.
                  &lt;P&gt;
                  For class PrinterResolution, the category is class PrinterResolution itself.                
                <return>
                    Printing attribute class (category), an instance of class{@link java.lang.Class java.lang.Class}.                    
                </return>
            </javadoc>
            <method name="getCategory" type="Class<? extends Attribute>" line="134"/>
            <javadoc line="138">
                Get the name of the category of which this attribute value is an
                  instance.
                  &lt;P&gt;
                  For class PrinterResolution, the
                  category name is &lt;CODE&gt;&quot;printer-resolution&quot;&lt;/CODE&gt;.                
                <return>
                    Attribute category name.                    
                </return>
            </javadoc>
            <method name="getName" type="String" line="147"/>
        </class>
    </source>