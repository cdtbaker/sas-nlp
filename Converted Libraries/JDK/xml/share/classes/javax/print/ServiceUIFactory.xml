<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.print">
        <class name="ServiceUIFactory" line="2">
            <javadoc line="2">
                Services may optionally provide UIs which allow different styles
                  of interaction in different roles.
                  One role may be end-user browsing and setting of print options.
                  Another role may be administering the print service.
                  &lt;p&gt;
                  Although the Print Service API does not presently provide standardised
                  support for administering a print service, monitoring of the print
                  service is possible and a UI may provide for private update mechanisms.
                  &lt;p&gt;
                  The basic design intent is to allow applications to lazily locate and
                  initialize services only when needed without any API dependencies
                  except in an environment in which they are used.
                  &lt;p&gt;
                  Swing UIs are preferred as they provide a more consistent L&amp;F and
                  can support accessibility APIs.
                  &lt;p&gt;
                  Example usage:
                  &lt;pre&gt;
                  ServiceUIFactory factory = printService.getServiceUIFactory();
                  if (factory != null) {
                  JComponent swingui = (JComponent)factory.getUI(
                  ServiceUIFactory.MAIN_UIROLE,
                  ServiceUIFactory.JCOMPONENT_UI);
                  if (swingui != null) {
                  tabbedpane.add(&quot;Custom UI&quot;, swingui);
                  }
                  }
                  &lt;/pre&gt;                
            </javadoc>
            <declaration name="JCOMPONENT_UI" type="String" line="33"/>
            <javadoc line="33">
                Denotes a UI implemented as a Swing component.
                  The value of the String is the fully qualified classname :
                  &quot;javax.swing.JComponent&quot;.                
            </javadoc>
            <declaration name="PANEL_UI" type="String" line="39"/>
            <javadoc line="39">
                Denotes a UI implemented as an AWT panel.
                  The value of the String is the fully qualified classname :
                  &quot;java.awt.Panel&quot;                
            </javadoc>
            <declaration name="DIALOG_UI" type="String" line="45"/>
            <javadoc line="45">
                Denotes a UI implemented as an AWT dialog.
                  The value of the String is the fully qualified classname :
                  &quot;java.awt.Dialog&quot;                
            </javadoc>
            <declaration name="JDIALOG_UI" type="String" line="51"/>
            <javadoc line="51">
                Denotes a UI implemented as a Swing dialog.
                  The value of the String is the fully qualified classname :
                  &quot;javax.swing.JDialog&quot;                
            </javadoc>
            <declaration name="ABOUT_UIROLE" type="int" line="57"/>
            <javadoc line="57">
                Denotes a UI which performs an informative &quot;About&quot; role.                
            </javadoc>
            <declaration name="ADMIN_UIROLE" type="int" line="61"/>
            <javadoc line="61">
                Denotes a UI which performs an administrative role.                
            </javadoc>
            <declaration name="MAIN_UIROLE" type="int" line="65"/>
            <javadoc line="65">
                Denotes a UI which performs the normal end user role.                
            </javadoc>
            <declaration name="RESERVED_UIROLE" type="int" line="69"/>
            <javadoc line="69">
                Not a valid role but role id&apos;s greater than this may be used
                  for private roles supported by a service. Knowledge of the
                  function performed by this role is required to make proper use
                  of it.                
            </javadoc>
            <method name="getUI" type="Object" line="76"/>
            <javadoc line="76">
                Get a UI object which may be cast to the requested UI type
                  by the application and used in its user interface.
                  &lt;P&gt;                
                <param>
                    role requested. Must be one of the standard roles or
                      a private role supported by this factory.                    
                </param>
                <param>
                    ui type in which the role is requested.                    
                </param>
                <return>
                    the UI role or null if the requested UI role is not available
                      from this factory                    
                </return>
                <throws>
                    IllegalArgumentException if the role or ui is neither
                      one of the standard ones, nor a private one
                      supported by the factory.                    
                </throws>
            </javadoc>
            <method name="getUIClassNamesForRole" type="String[]" line="90"/>
            <javadoc line="90">
                Given a UI role obtained from this factory obtain the UI
                  types available from this factory which implement this role.
                  The returned Strings should refer to the static variables defined
                  in this class so that applications can use equality of reference
                  (&quot;==&quot;).                
                <param>
                    role to be looked up.                    
                </param>
                <return>
                    the UI types supported by this class for the specified role,
                      null if no UIs are available for the role.                    
                </return>
                <throws>
                    IllegalArgumentException is the role is a non-standard
                      role not supported by this factory.                    
                </throws>
            </javadoc>
        </class>
    </source>