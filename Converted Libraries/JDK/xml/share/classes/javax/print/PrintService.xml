<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.print">
        <import package="java.util.Locale"/>
        <import package="javax.print.attribute.Attribute"/>
        <import package="javax.print.attribute.AttributeSet"/>
        <import package="javax.print.attribute.PrintServiceAttribute"/>
        <import package="javax.print.attribute.PrintServiceAttributeSet"/>
        <import package="javax.print.event.PrintServiceAttributeListener"/>
        <interface name="PrintService">
            <javadoc line="37">
                Interface PrintService is the factory for a DocPrintJob. A PrintService
                  describes the capabilities of a Printer and can be queried regarding
                  a printer&apos;s supported attributes.
                  &lt;P&gt;
                  Example:
                  &lt;PRE&gt;
                  DocFlavor flavor = DocFlavor.INPUT_STREAM.POSTSCRIPT;
                  PrintRequestAttributeSet aset = new HashPrintRequestAttributeSet();
                  aset.add(MediaSizeName.ISO_A4);
                  PrintService[] pservices =
                  PrintServiceLookup.lookupPrintServices(flavor, aset);
                  if (pservices.length &gt; 0) {
                  DocPrintJob pj = pservices[0].createPrintJob();
                  try {
                  FileInputStream fis = new FileInputStream(&quot;test.ps&quot;);
                  Doc doc = new SimpleDoc(fis, flavor, null);
                  pj.print(doc, aset);
                  } catch (FileNotFoundException fe) {
                  } catch (PrintException e) {
                  }
                  }
                  &lt;/PRE&gt;                
            </javadoc>
            <method name="getName" type="String" line="63"/>
            <javadoc line="63">
                Returns a String name for this print service which may be used
                  by applications to request a particular print service.
                  In a suitable context, such as a name service, this name must be
                  unique.
                  In some environments this unique name may be the same as the user
                  friendly printer name defined as the{@link javax.print.attribute.standard.PrinterName PrinterName}attribute.                
                <return>
                    name of the service.                    
                </return>
            </javadoc>
            <method name="createPrintJob" type="DocPrintJob" line="75"/>
            <javadoc line="75">
                Creates and returns a PrintJob capable of handling data from
                  any of the supported document flavors.                
                <return>
                    a DocPrintJob object                    
                </return>
            </javadoc>
            <method name="addPrintServiceAttributeListener" type="void" line="82"/>
            <javadoc line="82">
                Registers a listener for events on this PrintService.                
                <param>
                    listener  a PrintServiceAttributeListener, which
                      monitors the status of a print service                    
                </param>
                <see>
                    #removePrintServiceAttributeListener                    
                </see>
            </javadoc>
            <method name="removePrintServiceAttributeListener" type="void" line="91"/>
            <javadoc line="91">
                Removes the print-service listener from this print service.
                  This means the listener is no longer interested in
                  &lt;code&gt;PrintService&lt;/code&gt; events.                
                <param>
                    listener  a PrintServiceAttributeListener object                    
                </param>
                <see>
                    #addPrintServiceAttributeListener                    
                </see>
            </javadoc>
            <method name="getAttributes" type="PrintServiceAttributeSet" line="101"/>
            <javadoc line="101">
                Obtains this print service&apos;s set of printer description attributes
                  giving this Print Service&apos;s status. The returned attribute set object
                  is unmodifiable. The returned attribute set object is a &quot;snapshot&quot; of
                  this Print Service&apos;s attribute set at the time of the
                  &lt;CODE&gt;getAttributes()&lt;/CODE&gt; method call: that is, the returned
                  attribute set&apos;s contents will &lt;I&gt;not&lt;/I&gt; be updated if this print
                  service&apos;s attribute set&apos;s contents change in the future. To detect
                  changes in attribute values, call &lt;CODE&gt;getAttributes()&lt;/CODE&gt; again
                  and compare the new attribute set to the previous attribute set;
                  alternatively, register a listener for print service events.                
                <return>
                    Unmodifiable snapshot of this Print Service&apos;s attribute set.
                      May be empty, but not null.                    
                </return>
            </javadoc>
            <method name="getAttribute" type="T" line="118"/>
            <javadoc line="118">
                Gets the value of the single specified service attribute.
                  This may be useful to clients which only need the value of one
                  attribute and want to minimise overhead.                
                <param>
                    category the category of a PrintServiceAttribute supported
                      by this service - may not be null.                    
                </param>
                <return>
                    the value of the supported attribute or null if the
                      attribute is not supported by this service.                    
                </return>
                <exception>
                    NullPointerException if the category is null.                    
                </exception>
                <exception>
                    IllegalArgumentException(unchecked exception) if &lt;CODE&gt;category&lt;/CODE&gt; is not a
                      &lt;code&gt;Class&lt;/code&gt; that implements interface{@link javax.print.attribute.PrintServiceAttribute PrintServiceAttribute}.                    
                </exception>
            </javadoc>
            <method name="getSupportedDocFlavors" type="DocFlavor[]" line="135"/>
            <javadoc line="135">
                Determines the print data formats a client can specify when setting
                  up a job for this &lt;code&gt;PrintService&lt;/code&gt;. A print data format is
                  designated by a &quot;doc
                  flavor&quot; (class {@link javax.print.DocFlavor DocFlavor})
                  consisting of a MIME type plus a print data representation class.
                  &lt;P&gt;
                  Note that some doc flavors may not be supported in combination
                  with all attributes. Use &lt;code&gt;getUnsupportedAttributes(..)&lt;/code&gt;
                  to validate specific combinations.                
                <return>
                    Array of supported doc flavors, should have at least
                      one element.                    
                </return>
            </javadoc>
            <method name="isDocFlavorSupported" type="boolean" line="152"/>
            <javadoc line="152">
                Determines if this print service supports a specific
                  &lt;code&gt;DocFlavor&lt;/code&gt;.  This is a convenience method to determine
                  if the &lt;code&gt;DocFlavor&lt;/code&gt; would be a member of the result of
                  &lt;code&gt;getSupportedDocFlavors()&lt;/code&gt;.
                  &lt;p&gt;
                  Note that some doc flavors may not be supported in combination
                  with all attributes. Use &lt;code&gt;getUnsupportedAttributes(..)&lt;/code&gt;
                  to validate specific combinations.                
                <param>
                    flavor the &lt;code&gt;DocFlavor&lt;/code&gt;to query for support.                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if this print service supports the
                      specified &lt;code&gt;DocFlavor&lt;/code&gt;; &lt;code&gt;false&lt;/code&gt; otherwise.                    
                </return>
                <exception>
                    NullPointerException(unchecked exception) Thrown if &lt;CODE&gt;flavor&lt;/CODE&gt; is null.                    
                </exception>
            </javadoc>
            <method name="getSupportedAttributeCategories" type="Class<?>[]" line="171"/>
            <javadoc line="171">
                Determines the printing attribute categories a client can specify
                  when setting up a job for this print service.
                  A printing attribute category is
                  designated by a &lt;code&gt;Class&lt;/code&gt; that implements interface{@link javax.print.attribute.Attribute Attribute}. This method returns
                  just the attribute &lt;I&gt;categories&lt;/I&gt; that are supported; it does not
                  return the particular attribute &lt;I&gt;values&lt;/I&gt; that are supported.
                  &lt;P&gt;
                  This method returns all the printing attribute
                  categories this print service supports for any possible job.
                  Some categories may not be supported in a particular context (ie
                  for a particular &lt;code&gt;DocFlavor&lt;/code&gt;).
                  Use one of the methods that include a &lt;code&gt;DocFlavor&lt;/code&gt; to
                  validate the request before submitting it, such as
                  &lt;code&gt;getSupportedAttributeValues(..)&lt;/code&gt;.                
                <return>
                    Array of printing attribute categories that the client can
                      specify as a doc-level or job-level attribute in a Print
                      Request. Each element in the array is a {@link java.lang.ClassClass} that implements interface {@link javax.print.attribute.Attribute Attribute}.
                      The array is empty if no categories are supported.                    
                </return>
            </javadoc>
            <method name="isAttributeCategorySupported" type="boolean" line="197"/>
            <javadoc line="197">
                Determines whether a client can specify the given printing
                  attribute category when setting up a job for this print service. A
                  printing attribute category is designated by a &lt;code&gt;Class&lt;/code&gt;
                  that implements interface {@link javax.print.attribute.AttributeAttribute}. This method tells whether the attribute &lt;I&gt;category&lt;/I&gt; is
                  supported; it does not tell whether a particular attribute &lt;I&gt;value&lt;/I&gt;
                  is supported.
                  &lt;p&gt;
                  Some categories may not be supported in a particular context (ie
                  for a particular &lt;code&gt;DocFlavor&lt;/code&gt;).
                  Use one of the methods which include a &lt;code&gt;DocFlavor&lt;/code&gt; to
                  validate the request before submitting it, such as
                  &lt;code&gt;getSupportedAttributeValues(..)&lt;/code&gt;.
                  &lt;P&gt;
                  This is a convenience method to determine if the category
                  would be a member of the result of
                  &lt;code&gt;getSupportedAttributeCategories()&lt;/code&gt;.                
                <param>
                    category    Printing attribute category to test. It must be a
                      &lt;code&gt;Class&lt;/code&gt; that implements
                      interface{@link javax.print.attribute.Attribute Attribute}.                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if this print service supports
                      specifying a doc-level or
                      job-level attribute in &lt;CODE&gt;category&lt;/CODE&gt; in a Print
                      Request; &lt;code&gt;false&lt;/code&gt; if it doesn&apos;t.                    
                </return>
                <exception>
                    NullPointerException(unchecked exception) Thrown if &lt;CODE&gt;category&lt;/CODE&gt; is null.                    
                </exception>
                <exception>
                    IllegalArgumentException(unchecked exception) Thrown if &lt;CODE&gt;category&lt;/CODE&gt; is not a
                      &lt;code&gt;Class&lt;/code&gt; that implements interface{@link javax.print.attribute.Attribute Attribute}.                    
                </exception>
            </javadoc>
            <method name="getDefaultAttributeValue" type="Object" line="236"/>
            <javadoc line="236">
                Determines this print service&apos;s default printing attribute value in
                  the given category. A printing attribute value is an instance of
                  a class that implements interface{@link javax.print.attribute.Attribute Attribute}. If a client sets
                  up a print job and does not specify any attribute value in the
                  given category, this Print Service will use the
                  default attribute value instead.
                  &lt;p&gt;
                  Some attributes may not be supported in a particular context (ie
                  for a particular &lt;code&gt;DocFlavor&lt;/code&gt;).
                  Use one of the methods that include a &lt;code&gt;DocFlavor&lt;/code&gt; to
                  validate the request before submitting it, such as
                  &lt;code&gt;getSupportedAttributeValues(..)&lt;/code&gt;.
                  &lt;P&gt;
                  Not all attributes have a default value. For example the
                  service will not have a defaultvalue for &lt;code&gt;RequestingUser&lt;/code&gt;
                  i.e. a null return for a supported category means there is no
                  service default value for that category. Use the
                  &lt;code&gt;isAttributeCategorySupported(Class)&lt;/code&gt; method to
                  distinguish these cases.                
                <param>
                    category    Printing attribute category for which the default
                      attribute value is requested. It must be a {@link java.lang.Class Class} that implements interface{@link javax.print.attribute.AttributeAttribute}.                    
                </param>
                <return>
                    Default attribute value for &lt;CODE&gt;category&lt;/CODE&gt;, or null
                      if this Print Service does not support specifying a doc-level or
                      job-level attribute in &lt;CODE&gt;category&lt;/CODE&gt; in a Print
                      Request, or the service does not have a default value
                      for this attribute.                    
                </return>
                <exception>
                    NullPointerException(unchecked exception) Thrown if &lt;CODE&gt;category&lt;/CODE&gt; is null.                    
                </exception>
                <exception>
                    IllegalArgumentException(unchecked exception) Thrown if &lt;CODE&gt;category&lt;/CODE&gt; is not a{@link java.lang.Class Class} that implements interface {@link javax.print.attribute.Attribute Attribute}.                    
                </exception>
            </javadoc>
            <method name="getSupportedAttributeValues" type="Object" line="280"/>
            <javadoc line="280">
                Determines the printing attribute values a client can specify in
                  the given category when setting up a job for this print service. A
                  printing
                  attribute value is an instance of a class that implements interface{@link javax.print.attribute.Attribute Attribute}.
                  &lt;P&gt;
                  If &lt;CODE&gt;flavor&lt;/CODE&gt; is null and &lt;CODE&gt;attributes&lt;/CODE&gt; is null
                  or is an empty set, this method returns all the printing attribute
                  values this Print Service supports for any possible job. If
                  &lt;CODE&gt;flavor&lt;/CODE&gt; is not null or &lt;CODE&gt;attributes&lt;/CODE&gt; is not
                  an empty set, this method returns just the printing attribute values
                  that are compatible with the given doc flavor and/or set of attributes.
                  That is, a null return value may indicate that specifying this attribute
                  is incompatible with the specified DocFlavor.
                  Also if DocFlavor is not null it must be a flavor supported by this
                  PrintService, else IllegalArgumentException will be thrown.
                  &lt;P&gt;
                  If the &lt;code&gt;attributes&lt;/code&gt; parameter contains an Attribute whose
                  category is the same as the &lt;code&gt;category&lt;/code&gt; parameter, the service
                  must ignore this attribute in the AttributeSet.
                  &lt;p&gt;
                  &lt;code&gt;DocAttribute&lt;/code&gt;s which are to be specified on the
                  &lt;code&gt;Doc&lt;/code&gt; must be included in this set to accurately
                  represent the context.
                  &lt;p&gt;
                  This method returns an Object because different printing attribute
                  categories indicate the supported attribute values in different ways.
                  The documentation for each printing attribute in package {@link javax.print.attribute.standard javax.print.attribute.standard}describes how each attribute indicates its supported values. Possible
                  ways of indicating support include:
                  &lt;UL&gt;
                  &lt;LI&gt;
                  Return a single instance of the attribute category to indicate that any
                  value is legal -- used, for example, by an attribute whose value is an
                  arbitrary text string. (The value of the returned attribute object is
                  irrelevant.)
                  &lt;LI&gt;
                  Return an array of one or more instances of the attribute category,
                  containing the legal values -- used, for example, by an attribute with
                  a list of enumerated values. The type of the array is an array of the
                  specified attribute category type as returned by its
                  &lt;code&gt;getCategory(Class)&lt;/code&gt;.
                  &lt;LI&gt;
                  Return a single object (of some class other than the attribute category)
                  that indicates bounds on the legal values -- used, for example, by an
                  integer-valued attribute that must lie within a certain range.
                  &lt;/UL&gt;
                  &lt;P&gt;                
                <param>
                    category    Printing attribute category to test. It must be a{@link java.lang.Class Class} that implements
                      interface {@link javax.print.attribute.Attribute Attribute}.                    
                </param>
                <param>
                    flavor      Doc flavor for a supposed job, or null.                    
                </param>
                <param>
                    attributes  Set of printing attributes for a supposed job
                      (both job-level attributes and document-level
                      attributes), or null.                    
                </param>
                <return>
                    Object indicating supported values for &lt;CODE&gt;category&lt;/CODE&gt;,
                      or null if this Print Service does not support specifying a
                      doc-level or job-level attribute in &lt;CODE&gt;category&lt;/CODE&gt; in
                      a Print Request.                    
                </return>
                <exception>
                    NullPointerException(unchecked exception) Thrown if &lt;CODE&gt;category&lt;/CODE&gt; is null.                    
                </exception>
                <exception>
                    IllegalArgumentException(unchecked exception) Thrown if &lt;CODE&gt;category&lt;/CODE&gt; is not a{@link java.lang.Class Class} that implements interface {@link javax.print.attribute.Attribute Attribute}, or
                      &lt;code&gt;DocFlavor&lt;/code&gt; is not supported by this service.                    
                </exception>
            </javadoc>
            <method name="isAttributeValueSupported" type="boolean" line="358"/>
            <javadoc line="358">
                Determines whether a client can specify the given printing
                  attribute
                  value when setting up a job for this Print Service. A printing
                  attribute value is an instance of a class that implements interface{@link javax.print.attribute.Attribute Attribute}.
                  &lt;P&gt;
                  If &lt;CODE&gt;flavor&lt;/CODE&gt; is null and &lt;CODE&gt;attributes&lt;/CODE&gt; is null or
                  is an empty set, this method tells whether this Print Service supports
                  the given printing attribute value for some possible combination of doc
                  flavor and set of attributes. If &lt;CODE&gt;flavor&lt;/CODE&gt; is not null or
                  &lt;CODE&gt;attributes&lt;/CODE&gt; is not an empty set, this method tells whether
                  this Print Service supports the given printing attribute value in
                  combination with the given doc flavor and/or set of attributes.
                  &lt;p&gt;
                  Also if DocFlavor is not null it must be a flavor supported by this
                  PrintService, else IllegalArgumentException will be thrown.
                  &lt;p&gt;
                  &lt;code&gt;DocAttribute&lt;/code&gt;s which are to be specified on the
                  &lt;code&gt;Doc&lt;/code&gt; must be included in this set to accurately
                  represent the context.
                  &lt;p&gt;
                  This is a convenience method to determine if the value
                  would be a member of the result of
                  &lt;code&gt;getSupportedAttributeValues(...)&lt;/code&gt;.                
                <param>
                    attrval       Printing attribute value to test.                    
                </param>
                <param>
                    flavor      Doc flavor for a supposed job, or null.                    
                </param>
                <param>
                    attributes  Set of printing attributes for a supposed job
                      (both job-level attributes and document-level
                      attributes), or null.                    
                </param>
                <return>
                    True if this Print Service supports specifying
                      &lt;CODE&gt;attrval&lt;/CODE&gt; as a doc-level or job-level attribute in a
                      Print Request, false if it doesn&apos;t.                    
                </return>
                <exception>
                    NullPointerException(unchecked exception)  if &lt;CODE&gt;attrval&lt;/CODE&gt; is null.                    
                </exception>
                <exception>
                    IllegalArgumentException if flavor is not supported by
                      this PrintService.                    
                </exception>
            </javadoc>
            <method name="getUnsupportedAttributes" type="AttributeSet" line="404"/>
            <javadoc line="404">
                Identifies the attributes that are unsupported for a print request
                  in the context of a particular DocFlavor.
                  This method is useful for validating a potential print job and
                  identifying the specific attributes which cannot be supported.
                  It is important to supply only a supported DocFlavor or an
                  IllegalArgumentException will be thrown. If the
                  return value from this method is null, all attributes are supported.
                  &lt;p&gt;
                  &lt;code&gt;DocAttribute&lt;/code&gt;s which are to be specified on the
                  &lt;code&gt;Doc&lt;/code&gt; must be included in this set to accurately
                  represent the context.
                  &lt;p&gt;
                  If the return value is non-null, all attributes in the returned
                  set are unsupported with this DocFlavor. The returned set does not
                  distinguish attribute categories that are unsupported from
                  unsupported attribute values.
                  &lt;p&gt;
                  A supported print request can then be created by removing
                  all unsupported attributes from the original attribute set,
                  except in the case that the DocFlavor is unsupported.
                  &lt;p&gt;
                  If any attributes are unsupported only because they are in conflict
                  with other attributes then it is at the discretion of the service
                  to select the attribute(s) to be identified as the cause of the
                  conflict.
                  &lt;p&gt;
                  Use &lt;code&gt;isDocFlavorSupported()&lt;/code&gt; to verify that a DocFlavor
                  is supported before calling this method.                
                <param>
                    flavor      Doc flavor to test, or null                    
                </param>
                <param>
                    attributes  Set of printing attributes for a supposed job
                      (both job-level attributes and document-level
                      attributes), or null.                    
                </param>
                <return>
                    null if this Print Service supports the print request
                      specification, else the unsupported attributes.                    
                </return>
                <exception>
                    IllegalArgumentException if&lt;CODE&gt;flavor&lt;/CODE&gt; is
                      not supported by this PrintService.                    
                </exception>
            </javadoc>
            <method name="getServiceUIFactory" type="ServiceUIFactory" line="448"/>
            <javadoc line="448">
                Returns a factory for UI components which allow users to interact
                  with the service in various roles.
                  Services which do not provide any UI should return null.
                  Print Services which do provide UI but want to be supported in
                  an environment with no UI support should ensure that the factory
                  is not initialised unless the application calls this method to
                  obtain the factory.
                  See &lt;code&gt;ServiceUIFactory&lt;/code&gt; for more information.                
                <return>
                    null or a factory for UI components.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="461"/>
            <javadoc line="461">
                Determines if two services are referring to the same underlying
                  service.  Objects encapsulating a print service may not exhibit
                  equality of reference even though they refer to the same underlying
                  service.
                  &lt;p&gt;
                  Clients should call this method to determine if two services are
                  referring to the same underlying service.
                  &lt;p&gt;
                  Services must implement this method and return true only if the
                  service objects being compared may be used interchangeably by the
                  client.
                  Services are free to return the same object reference to an underlying
                  service if that, but clients must not depend on equality of reference.                
                <param>
                    obj the reference object with which to compare.                    
                </param>
                <return>
                    true if this service is the same as the obj argument,
                      false otherwise.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="481"/>
            <javadoc line="481">
                This method should be implemented consistently with
                  &lt;code&gt;equals(Object)&lt;/code&gt;.                
                <return>
                    hash code of this object.                    
                </return>
            </javadoc>
        </interface>
    </source>