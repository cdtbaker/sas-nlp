<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.modelmbean">
        <import package="com.sun.jmx.mbeanserver.GetPropertyAction"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.ObjectStreamField"/>
        <import package="java.security.AccessController"/>
        <class name="InvalidTargetObjectTypeException" line="41">
            <extends class="Exception"/>
            <comment line="50">
                serialVersionUID not constant                
            </comment>
            <comment line="54">
                Serialization compatibility stuff:
                 Two serial forms are supported in this class. The selected form depends
                 on system property &quot;jmx.serial.form&quot;:
                  - &quot;1.0&quot; for JMX 1.0
                  - any other value for JMX 1.1 and higher
                
                 Serial version for old serial form                
            </comment>
            <comment line="62">
                Serial version for new serial form                
            </comment>
            <comment line="65">
                Serializable fields in old serial form                
            </comment>
            <comment line="72">
                Serializable fields in new serial form                
            </comment>
            <comment line="78">
                Actual serial version and serial form                
            </comment>
            <comment line="102">
                END Serialization compatibility stuff                
            </comment>
            <javadoc line="41">
                Exception thrown when an invalid target object type is specified.
                  &lt;p&gt;The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;1190536278266811217L&lt;/code&gt;.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="oldSerialVersionUID" type="long" line="60"/>
            <declaration name="newSerialVersionUID" type="long" line="63"/>
            <declaration name="oldSerialPersistentFields" type="ObjectStreamField[]" line="66"/>
            <declaration name="newSerialPersistentFields" type="ObjectStreamField[]" line="73"/>
            <declaration name="serialVersionUID" type="long" line="79"/>
            <declaration name="serialPersistentFields" type="ObjectStreamField[]" line="80"/>
            <javadoc line="80">
                @serialField exception Exception Encapsulated {@link Exception}                
            </javadoc>
            <declaration name="compat" type="boolean" line="84"/>
            <scope line="85">
                <scope line="86">
                    <declaration name="act" type="GetPropertyAction" line="87"/>
                    <declaration name="form" type="String" line="88"/>
                </scope>
                <scope line="90"/>
                <scope line="93"/>
                <scope line="96"/>
            </scope>
            <declaration name="exception" type="Exception" line="104"/>
            <javadoc line="104">
                @serial Encapsulated {@link Exception}                
            </javadoc>
            <javadoc line="110">
                Default constructor.                
            </javadoc>
            <method name="InvalidTargetObjectTypeException" type="constructor" line="114"/>
            <javadoc line="120">
                Constructor from a string.                
                <param>
                    s String value that will be incorporated in the message for
                      this exception.                    
                </param>
            </javadoc>
            <method name="InvalidTargetObjectTypeException" type="constructor" line="128">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <javadoc line="134">
                Constructor taking an exception and a string.                
                <param>
                    e Exception that we may have caught to reissue as an
                      InvalidTargetObjectTypeException.  The message will be used, and we may want to
                      consider overriding the printStackTrace() methods to get data
                      pointing back to original throw stack.                    
                </param>
                <param>
                    s String value that will be incorporated in message for
                      this exception.                    
                </param>
            </javadoc>
            <method name="InvalidTargetObjectTypeException" type="constructor" line="146">
                <params>
                    <param name="e" type="Exception"/>
                    <param name="s" type="String"/>
                </params>
            </method>
            <javadoc line="153">
                Deserializes an {@link InvalidTargetObjectTypeException} from an {@link ObjectInputStream}.                
            </javadoc>
            <method name="readObject" type="void" line="157">
                <params>
                    <param name="in" type="ObjectInputStream"/>
                </params>
                <comment line="161">
                    Read an object serialized in the old serial form                    
                </comment>
                <comment line="172">
                    Read an object serialized in the new serial form                    
                </comment>
                <scope line="159">
                    <declaration name="fields" type="ObjectInputStream.GetField" line="162"/>
                    <scope line="165"/>
                </scope>
                <scope line="170"/>
            </method>
            <javadoc line="178">
                Serializes an {@link InvalidTargetObjectTypeException} to an {@link ObjectOutputStream}.                
            </javadoc>
            <method name="writeObject" type="void" line="182">
                <params>
                    <param name="out" type="ObjectOutputStream"/>
                </params>
                <comment line="186">
                    Serializes this instance in the old serial form                    
                </comment>
                <comment line="195">
                    Serializes this instance in the new serial form                    
                </comment>
                <scope line="184">
                    <declaration name="fields" type="ObjectOutputStream.PutField" line="187"/>
                </scope>
                <scope line="193"/>
            </method>
        </class>
    </source>