<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.modelmbean">
        <import package="com.sun.jmx.defaults.JmxProperties.MODELMBEAN_LOGGER"/>
        <import package="com.sun.jmx.mbeanserver.GetPropertyAction"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.ObjectStreamField"/>
        <import package="java.lang.reflect.Method"/>
        <import package="java.security.AccessController"/>
        <import package="java.util.logging.Level"/>
        <import package="javax.management.Descriptor"/>
        <import package="javax.management.DescriptorKey"/>
        <import package="javax.management.DescriptorAccess"/>
        <import package="javax.management.MBeanAttributeInfo"/>
        <import package="javax.management.RuntimeOperationsException"/>
        <class name="ModelMBeanAttributeInfo" line="50">
            <extends class="MBeanAttributeInfo"/>
            <comment line="115">
                serialVersionUID is not constant                
            </comment>
            <comment line="120">
                Serialization compatibility stuff:                
            </comment>
            <comment line="121">
                Two serial forms are supported in this class. The selected form depends                
            </comment>
            <comment line="122">
                on system property &quot;jmx.serial.form&quot;:                
            </comment>
            <comment line="123">
                - &quot;1.0&quot; for JMX 1.0                
            </comment>
            <comment line="124">
                - any other value for JMX 1.1 and higher                
            </comment>
            <comment line="125">
                                
            </comment>
            <comment line="126">
                Serial version for old serial form                
            </comment>
            <comment line="128">
                                
            </comment>
            <comment line="129">
                Serial version for new serial form                
            </comment>
            <comment line="131">
                                
            </comment>
            <comment line="132">
                Serializable fields in old serial form                
            </comment>
            <comment line="138">
                                
            </comment>
            <comment line="139">
                Serializable fields in new serial form                
            </comment>
            <comment line="144">
                                
            </comment>
            <comment line="145">
                Actual serial version and serial form                
            </comment>
            <comment line="169">
                                
            </comment>
            <comment line="170">
                END Serialization compatibility stuff                
            </comment>
            <implements interface="DescriptorAccess"/>
            <javadoc line="50">
                &lt;p&gt;The ModelMBeanAttributeInfo object describes an attribute of the ModelMBean.
                  It is a subclass of MBeanAttributeInfo with the addition of an associated Descriptor
                  and an implementation of the DescriptorAccess interface.&lt;/p&gt;
                  &lt;P id=&quot;descriptor&quot;&gt;
                  The fields in the descriptor are defined, but not limited to, the following.
                  Note that when the Type in this table is Number, a String that is the decimal
                  representation of a Long can also be used.&lt;/P&gt;
                  &lt;table border=&quot;1&quot; cellpadding=&quot;5&quot;&gt;
                  &lt;tr&gt;&lt;th&gt;Name&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th&gt;Meaning&lt;/th&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;name&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;
                  &lt;td&gt;Attribute name.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;descriptorType&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;
                  &lt;td&gt;Must be &quot;attribute&quot;.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr id=&quot;value-field&quot;&gt;&lt;td&gt;value&lt;/td&gt;&lt;td&gt;Object&lt;/td&gt;
                  &lt;td&gt;Current (cached) value for attribute.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;default&lt;/td&gt;&lt;td&gt;Object&lt;/td&gt;
                  &lt;td&gt;Default value for attribute.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;displayName&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;
                  &lt;td&gt;Name of attribute to be used in displays.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;getMethod&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;
                  &lt;td&gt;Name of operation descriptor for get method.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;setMethod&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;
                  &lt;td&gt;Name of operation descriptor for set method.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;protocolMap&lt;/td&gt;&lt;td&gt;Descriptor&lt;/td&gt;
                  &lt;td&gt;See the section &quot;Protocol Map Support&quot; in the JMX specification
                  document.  Mappings must be appropriate for the attribute and entries
                  can be updated or augmented at runtime.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;persistPolicy&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;
                  &lt;td&gt;One of: OnUpdate|OnTimer|NoMoreOftenThan|OnUnregister|Always|Never.
                  See the section &quot;MBean Descriptor Fields&quot; in the JMX specification
                  document.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;persistPeriod&lt;/td&gt;&lt;td&gt;Number&lt;/td&gt;
                  &lt;td&gt;Frequency of persist cycle in seconds. Used when persistPolicy is
                  &quot;OnTimer&quot; or &quot;NoMoreOftenThan&quot;.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;currencyTimeLimit&lt;/td&gt;&lt;td&gt;Number&lt;/td&gt;
                  &lt;td&gt;How long &lt;a href=&quot;#value=field&quot;&gt;value&lt;/a&gt; is valid: &amp;lt;0 never,
                  =0 always, &amp;gt;0 seconds.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;lastUpdatedTimeStamp&lt;/td&gt;&lt;td&gt;Number&lt;/td&gt;
                  &lt;td&gt;When &lt;a href=&quot;#value-field&quot;&gt;value&lt;/a&gt; was set.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;visibility&lt;/td&gt;&lt;td&gt;Number&lt;/td&gt;
                  &lt;td&gt;1-4 where 1: always visible, 4: rarely visible.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;presentationString&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;
                  &lt;td&gt;XML formatted string to allow presentation of data.&lt;/td&gt;&lt;/tr&gt;
                  &lt;/table&gt;
                  &lt;p&gt;The default descriptor contains the name, descriptorType and displayName
                  fields.  The default value of the name and displayName fields is the name of
                  the attribute.&lt;/p&gt;
                  &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; because of inconsistencies in previous versions of
                  this specification, it is recommended not to use negative or zero
                  values for &lt;code&gt;currencyTimeLimit&lt;/code&gt;.  To indicate that a
                  cached value is never valid, omit the
                  &lt;code&gt;currencyTimeLimit&lt;/code&gt; field.  To indicate that it is
                  always valid, use a very large number for this field.&lt;/p&gt;
                  &lt;p&gt;The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;6181543027787327345L&lt;/code&gt;.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="oldSerialVersionUID" type="long" line="126"/>
            <declaration name="newSerialVersionUID" type="long" line="129"/>
            <declaration name="oldSerialPersistentFields" type="ObjectStreamField[]" line="132"/>
            <declaration name="newSerialPersistentFields" type="ObjectStreamField[]" line="139"/>
            <declaration name="serialVersionUID" type="long" line="145"/>
            <declaration name="serialPersistentFields" type="ObjectStreamField[]" line="146"/>
            <javadoc line="146">
                @serialField attrDescriptor Descriptor The {@link Descriptor}containing the metadata corresponding to this attribute                
            </javadoc>
            <declaration name="compat" type="boolean" line="151"/>
            <scope line="152">
                <scope line="153">
                    <declaration name="act" type="GetPropertyAction" line="154"/>
                    <declaration name="form" type="String" line="155"/>
                </scope>
                <scope line="157"/>
                <scope line="160"/>
                <scope line="163"/>
            </scope>
            <declaration name="attrDescriptor" type="Descriptor" line="171"/>
            <javadoc line="171">
                @serial The {@link Descriptor} containing the metadata corresponding to
                  this attribute                
            </javadoc>
            <declaration name="currClass" type="String" line="177"/>
            <javadoc line="179">
                Constructs a ModelMBeanAttributeInfo object with a default
                  descriptor. The {@link Descriptor} of the constructed
                  object will include fields contributed by any annotations
                  on the {@code Method} objects that contain the {@link DescriptorKey} meta-annotation.                
                <param>
                    name The name of the attribute.                    
                </param>
                <param>
                    description A human readable description of the attribute. Optional.                    
                </param>
                <param>
                    getter The method used for reading the attribute value.
                      May be null if the property is write-only.                    
                </param>
                <param>
                    setter The method used for writing the attribute value.
                      May be null if the attribute is read-only.                    
                </param>
                <exception>
                    IntrospectionException There is a consistency
                      problem in the definition of this attribute.                    
                </exception>
            </javadoc>
            <method name="ModelMBeanAttributeInfo" type="constructor" line="201">
                <params>
                    <param name="name" type="String"/>
                    <param name="description" type="String"/>
                    <param name="getter" type="Method"/>
                    <param name="setter" type="Method"/>
                </params>
                <comment line="213">
                    put getter and setter methods in operations list                    
                </comment>
                <comment line="214">
                    create default descriptor                    
                </comment>
                <scope line="204"/>
            </method>
            <javadoc line="218">
                Constructs a ModelMBeanAttributeInfo object.  The {@link Descriptor} of the constructed object will include fields
                  contributed by any annotations on the {@code Method}objects that contain the {@link DescriptorKey}meta-annotation.                
                <param>
                    name The name of the attribute.                    
                </param>
                <param>
                    description A human readable description of the attribute. Optional.                    
                </param>
                <param>
                    getter The method used for reading the attribute value.
                      May be null if the property is write-only.                    
                </param>
                <param>
                    setter The method used for writing the attribute value.
                      May be null if the attribute is read-only.                    
                </param>
                <param>
                    descriptor An instance of Descriptor containing the
                      appropriate metadata for this instance of the Attribute. If
                      it is null, then a default descriptor will be created.  If
                      the descriptor does not contain the field "displayName" this field is added
                      in the descriptor with its default value.                    
                </param>
                <exception>
                    IntrospectionException There is a consistency
                      problem in the definition of this attribute.                    
                </exception>
                <exception>
                    RuntimeOperationsException Wraps an
                      IllegalArgumentException. The descriptor is invalid, or descriptor
                      field "name" is not equal to name parameter, or descriptor field
                      "descriptorType" is not equal to "attribute".                    
                </exception>
            </javadoc>
            <method name="ModelMBeanAttributeInfo" type="constructor" line="250">
                <params>
                    <param name="name" type="String"/>
                    <param name="description" type="String"/>
                    <param name="getter" type="Method"/>
                    <param name="setter" type="Method"/>
                    <param name="descriptor" type="Descriptor"/>
                </params>
                <comment line="253">
                    put getter and setter methods in operations list                    
                </comment>
                <scope line="254"/>
            </method>
            <javadoc line="264">
                Constructs a ModelMBeanAttributeInfo object with a default descriptor.                
                <param>
                    name The name of the attribute                    
                </param>
                <param>
                    type The type or class name of the attribute                    
                </param>
                <param>
                    description A human readable description of the attribute.                    
                </param>
                <param>
                    isReadable True if the attribute has a getter method, false otherwise.                    
                </param>
                <param>
                    isWritable True if the attribute has a setter method, false otherwise.                    
                </param>
                <param>
                    isIs True if the attribute has an "is" getter, false otherwise.                    
                </param>
            </javadoc>
            <method name="ModelMBeanAttributeInfo" type="constructor" line="281">
                <params>
                    <param name="name" type="String"/>
                    <param name="type" type="String"/>
                    <param name="description" type="String"/>
                    <param name="isReadable" type="boolean"/>
                    <param name="isWritable" type="boolean"/>
                    <param name="isIs" type="boolean"/>
                </params>
                <comment line="284">
                    create default descriptor                    
                </comment>
                <scope line="285"/>
            </method>
            <javadoc line="295">
                Constructs a ModelMBeanAttributeInfo object.                
                <param>
                    name The name of the attribute                    
                </param>
                <param>
                    type The type or class name of the attribute                    
                </param>
                <param>
                    description A human readable description of the attribute.                    
                </param>
                <param>
                    isReadable True if the attribute has a getter method, false otherwise.                    
                </param>
                <param>
                    isWritable True if the attribute has a setter method, false otherwise.                    
                </param>
                <param>
                    isIs True if the attribute has an "is" getter, false otherwise.                    
                </param>
                <param>
                    descriptor An instance of Descriptor containing the
                      appropriate metadata for this instance of the Attribute. If
                      it is null then a default descriptor will be created.  If
                      the descriptor does not contain the field "displayName" this field
                      is added in the descriptor with its default value.                    
                </param>
                <exception>
                    RuntimeOperationsException Wraps an
                      IllegalArgumentException. The descriptor is invalid, or descriptor
                      field "name" is not equal to name parameter, or descriptor field
                      "descriptorType" is not equal to "attribute".                    
                </exception>
            </javadoc>
            <method name="ModelMBeanAttributeInfo" type="constructor" line="322">
                <params>
                    <param name="name" type="String"/>
                    <param name="type" type="String"/>
                    <param name="description" type="String"/>
                    <param name="isReadable" type="boolean"/>
                    <param name="isWritable" type="boolean"/>
                    <param name="isIs" type="boolean"/>
                    <param name="descriptor" type="Descriptor"/>
                </params>
                <scope line="324"/>
            </method>
            <javadoc line="334">
                Constructs a new ModelMBeanAttributeInfo object from this
                  ModelMBeanAttributeInfo Object.  A default descriptor will
                  be created.                
                <param>
                    inInfo the ModelMBeanAttributeInfo to be duplicated                    
                </param>
            </javadoc>
            <method name="ModelMBeanAttributeInfo" type="constructor" line="343">
                <params>
                    <param name="inInfo" type="ModelMBeanAttributeInfo"/>
                </params>
                <scope line="350"/>
                <declaration name="newDesc" type="Descriptor" line="356"/>
            </method>
            <javadoc line="360">
                Gets a copy of the associated Descriptor for the
                  ModelMBeanAttributeInfo.                
                <return>
                    Descriptor associated with the
                      ModelMBeanAttributeInfo object.                    
                </return>
                <see>
                    #setDescriptor                    
                </see>
            </javadoc>
            <method name="getDescriptor" type="Descriptor" line="370">
                <scope line="371"/>
                <scope line="376"/>
            </method>
            <javadoc line="383">
                Sets associated Descriptor (full replace) for the
                  ModelMBeanAttributeDescriptor.  If the new Descriptor is
                  null, then the associated Descriptor reverts to a default
                  descriptor.  The Descriptor is validated before it is
                  assigned.  If the new Descriptor is invalid, then a
                  RuntimeOperationsException wrapping an
                  IllegalArgumentException is thrown.                
                <param>
                    inDescriptor replaces the Descriptor associated with the
                      ModelMBeanAttributeInfo                    
                </param>
                <exception>
                    RuntimeOperationsException Wraps an
                      IllegalArgumentException for an invalid Descriptor                    
                </exception>
                <see>
                    #getDescriptor                    
                </see>
            </javadoc>
            <method name="setDescriptor" type="void" line="399">
                <params>
                    <param name="inDescriptor" type="Descriptor"/>
                </params>
            </method>
            <javadoc line="403">
                Creates and returns a new ModelMBeanAttributeInfo which is a duplicate of this ModelMBeanAttributeInfo.                
                <exception>
                    RuntimeOperationsException for illegal value for
                      field Names or field Values.  If the descriptor construction
                      fails for any reason, this exception will be thrown.                    
                </exception>
            </javadoc>
            <method name="clone" type="Object" line="413">
                <scope line="414"/>
            </method>
            <javadoc line="422">
                Returns a human-readable version of the
                  ModelMBeanAttributeInfo instance.                
            </javadoc>
            <method name="toString" type="String" line="428"/>
            <javadoc line="439">
                Clones the passed in Descriptor, sets default values, and checks for validity.
                  If the Descriptor is invalid (for instance by having the wrong &quot;name&quot;),
                  this indicates programming error and a RuntimeOperationsException will be thrown.
                  The following fields will be defaulted if they are not already set:
                  displayName=this.getName(),name=this.getName(),descriptorType = &quot;attribute&quot;                
                <param>
                    in Descriptor to be checked, or null which is equivalent to
                      an empty Descriptor.                    
                </param>
                <exception>
                    RuntimeOperationsException if Descriptor is invalid                    
                </exception>
            </javadoc>
            <method name="validDescriptor" type="Descriptor" line="451">
                <params>
                    <param name="in" type="Descriptor"/>
                </params>
                <comment line="462">
                    Setting defaults.                    
                </comment>
                <comment line="476">
                    Checking validity                    
                </comment>
                <declaration name="clone" type="Descriptor" line="453"/>
                <declaration name="defaulted" type="boolean" line="454"/>
                <scope line="455"/>
                <scope line="458"/>
                <scope line="463"/>
                <scope line="467"/>
                <scope line="471"/>
                <scope line="477"/>
                <scope line="482"/>
                <scope line="488"/>
            </method>
            <javadoc line="498">
                Deserializes a {@link ModelMBeanAttributeInfo} from an {@link ObjectInputStream}.                
            </javadoc>
            <method name="readObject" type="void" line="502">
                <params>
                    <param name="in" type="ObjectInputStream"/>
                </params>
                <comment line="503">
                    New serial form ignores extra field &quot;currClass&quot;                    
                </comment>
            </method>
            <javadoc line="508">
                Serializes a {@link ModelMBeanAttributeInfo} to an {@link ObjectOutputStream}.                
            </javadoc>
            <method name="writeObject" type="void" line="512">
                <params>
                    <param name="out" type="ObjectOutputStream"/>
                </params>
                <comment line="515">
                    Serializes this instance in the old serial form                    
                </comment>
                <comment line="516">
                                        
                </comment>
                <comment line="524">
                    Serializes this instance in the new serial form                    
                </comment>
                <comment line="525">
                                        
                </comment>
                <scope line="514">
                    <declaration name="fields" type="ObjectOutputStream.PutField" line="517"/>
                </scope>
                <scope line="523"/>
            </method>
        </class>
    </source>