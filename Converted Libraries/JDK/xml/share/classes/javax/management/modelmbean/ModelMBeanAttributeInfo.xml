<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.modelmbean">
        <import package="com.sun.jmx.defaults.JmxProperties.MODELMBEAN_LOGGER"/>
        <import package="com.sun.jmx.mbeanserver.GetPropertyAction"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.ObjectStreamField"/>
        <import package="java.lang.reflect.Method"/>
        <import package="java.security.AccessController"/>
        <import package="java.util.logging.Level"/>
        <import package="javax.management.Descriptor"/>
        <import package="javax.management.DescriptorKey"/>
        <import package="javax.management.DescriptorAccess"/>
        <import package="javax.management.MBeanAttributeInfo"/>
        <import package="javax.management.RuntimeOperationsException"/>
        <class name="ModelMBeanAttributeInfo" line="16">
            <extends class="MBeanAttributeInfo"/>
            <implements interface="DescriptorAccess"/>
            <javadoc line="16">
                &lt;p&gt;The ModelMBeanAttributeInfo object describes an attribute of the ModelMBean.
                  It is a subclass of MBeanAttributeInfo with the addition of an associated Descriptor
                  and an implementation of the DescriptorAccess interface.&lt;/p&gt;
                  &lt;P id=&quot;descriptor&quot;&gt;
                  The fields in the descriptor are defined, but not limited to, the following.
                  Note that when the Type in this table is Number, a String that is the decimal
                  representation of a Long can also be used.&lt;/P&gt;
                  &lt;table border=&quot;1&quot; cellpadding=&quot;5&quot;&gt;
                  &lt;tr&gt;&lt;th&gt;Name&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th&gt;Meaning&lt;/th&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;name&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;
                  &lt;td&gt;Attribute name.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;descriptorType&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;
                  &lt;td&gt;Must be &quot;attribute&quot;.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr id=&quot;value-field&quot;&gt;&lt;td&gt;value&lt;/td&gt;&lt;td&gt;Object&lt;/td&gt;
                  &lt;td&gt;Current (cached) value for attribute.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;default&lt;/td&gt;&lt;td&gt;Object&lt;/td&gt;
                  &lt;td&gt;Default value for attribute.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;displayName&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;
                  &lt;td&gt;Name of attribute to be used in displays.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;getMethod&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;
                  &lt;td&gt;Name of operation descriptor for get method.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;setMethod&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;
                  &lt;td&gt;Name of operation descriptor for set method.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;protocolMap&lt;/td&gt;&lt;td&gt;Descriptor&lt;/td&gt;
                  &lt;td&gt;See the section &quot;Protocol Map Support&quot; in the JMX specification
                  document.  Mappings must be appropriate for the attribute and entries
                  can be updated or augmented at runtime.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;persistPolicy&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;
                  &lt;td&gt;One of: OnUpdate|OnTimer|NoMoreOftenThan|OnUnregister|Always|Never.
                  See the section &quot;MBean Descriptor Fields&quot; in the JMX specification
                  document.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;persistPeriod&lt;/td&gt;&lt;td&gt;Number&lt;/td&gt;
                  &lt;td&gt;Frequency of persist cycle in seconds. Used when persistPolicy is
                  &quot;OnTimer&quot; or &quot;NoMoreOftenThan&quot;.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;currencyTimeLimit&lt;/td&gt;&lt;td&gt;Number&lt;/td&gt;
                  &lt;td&gt;How long &lt;a href=&quot;#value=field&quot;&gt;value&lt;/a&gt; is valid: &amp;lt;0 never,
                  =0 always, &amp;gt;0 seconds.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;lastUpdatedTimeStamp&lt;/td&gt;&lt;td&gt;Number&lt;/td&gt;
                  &lt;td&gt;When &lt;a href=&quot;#value-field&quot;&gt;value&lt;/a&gt; was set.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;visibility&lt;/td&gt;&lt;td&gt;Number&lt;/td&gt;
                  &lt;td&gt;1-4 where 1: always visible, 4: rarely visible.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;presentationString&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;
                  &lt;td&gt;XML formatted string to allow presentation of data.&lt;/td&gt;&lt;/tr&gt;
                  &lt;/table&gt;
                  &lt;p&gt;The default descriptor contains the name, descriptorType and displayName
                  fields.  The default value of the name and displayName fields is the name of
                  the attribute.&lt;/p&gt;
                  &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; because of inconsistencies in previous versions of
                  this specification, it is recommended not to use negative or zero
                  values for &lt;code&gt;currencyTimeLimit&lt;/code&gt;.  To indicate that a
                  cached value is never valid, omit the
                  &lt;code&gt;currencyTimeLimit&lt;/code&gt; field.  To indicate that it is
                  always valid, use a very large number for this field.&lt;/p&gt;
                  &lt;p&gt;The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;6181543027787327345L&lt;/code&gt;.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="oldSerialVersionUID" type="long" line="74"/>
            <declaration name="newSerialVersionUID" type="long" line="75"/>
            <declaration name="oldSerialPersistentFields" type="ObjectStreamField[]" line="76"/>
            <declaration name="newSerialPersistentFields" type="ObjectStreamField[]" line="77"/>
            <declaration name="serialVersionUID" type="long" line="78"/>
            <declaration name="serialPersistentFields" type="ObjectStreamField[]" line="79"/>
            <javadoc line="79">
                @serialField attrDescriptor Descriptor The {@link Descriptor}containing the metadata corresponding to this attribute                
            </javadoc>
            <declaration name="compat" type="boolean" line="83"/>
            <scope line="84">
                <scope line="85">
                    <declaration name="act" type="GetPropertyAction" line="86"/>
                    <declaration name="form" type="String" line="87"/>
                </scope>
                <scope line="90"/>
                <scope line="92"/>
                <scope line="96"/>
            </scope>
            <declaration name="attrDescriptor" type="Descriptor" line="101"/>
            <javadoc line="101">
                @serial The {@link Descriptor} containing the metadata corresponding to
                  this attribute                
            </javadoc>
            <declaration name="currClass" type="String" line="106"/>
            <javadoc line="107">
                Constructs a ModelMBeanAttributeInfo object with a default
                  descriptor. The {@link Descriptor} of the constructed
                  object will include fields contributed by any annotations
                  on the {@code Method} objects that contain the {@link DescriptorKey} meta-annotation.                
                <param>
                    name The name of the attribute.                    
                </param>
                <param>
                    description A human readable description of the attribute. Optional.                    
                </param>
                <param>
                    getter The method used for reading the attribute value.
                      May be null if the property is write-only.                    
                </param>
                <param>
                    setter The method used for writing the attribute value.
                      May be null if the attribute is read-only.                    
                </param>
                <exception>
                    IntrospectionException There is a consistency
                      problem in the definition of this attribute.                    
                </exception>
            </javadoc>
            <method name="ModelMBeanAttributeInfo" type="constructor" line="121">
                <params>
                    <param name="name" type="String"/>
                    <param name="description" type="String"/>
                    <param name="getter" type="Method"/>
                    <param name="setter" type="Method"/>
                </params>
                <scope line="123"/>
            </method>
            <javadoc line="128">
                Constructs a ModelMBeanAttributeInfo object.  The {@link Descriptor} of the constructed object will include fields
                  contributed by any annotations on the {@code Method}objects that contain the {@link DescriptorKey}meta-annotation.                
                <param>
                    name The name of the attribute.                    
                </param>
                <param>
                    description A human readable description of the attribute. Optional.                    
                </param>
                <param>
                    getter The method used for reading the attribute value.
                      May be null if the property is write-only.                    
                </param>
                <param>
                    setter The method used for writing the attribute value.
                      May be null if the attribute is read-only.                    
                </param>
                <param>
                    descriptor An instance of Descriptor containing the
                      appropriate metadata for this instance of the Attribute. If
                      it is null, then a default descriptor will be created.  If
                      the descriptor does not contain the field &quot;displayName&quot; this field is added
                      in the descriptor with its default value.                    
                </param>
                <exception>
                    IntrospectionException There is a consistency
                      problem in the definition of this attribute.                    
                </exception>
                <exception>
                    RuntimeOperationsException Wraps an
                      IllegalArgumentException. The descriptor is invalid, or descriptor
                      field &quot;name&quot; is not equal to name parameter, or descriptor field
                      &quot;descriptorType&quot; is not equal to &quot;attribute&quot;.                    
                </exception>
            </javadoc>
            <method name="ModelMBeanAttributeInfo" type="constructor" line="149">
                <params>
                    <param name="name" type="String"/>
                    <param name="description" type="String"/>
                    <param name="getter" type="Method"/>
                    <param name="setter" type="Method"/>
                    <param name="descriptor" type="Descriptor"/>
                </params>
                <scope line="151"/>
            </method>
            <javadoc line="156">
                Constructs a ModelMBeanAttributeInfo object with a default descriptor.                
                <param>
                    name The name of the attribute                    
                </param>
                <param>
                    type The type or class name of the attribute                    
                </param>
                <param>
                    description A human readable description of the attribute.                    
                </param>
                <param>
                    isReadable True if the attribute has a getter method, false otherwise.                    
                </param>
                <param>
                    isWritable True if the attribute has a setter method, false otherwise.                    
                </param>
                <param>
                    isIs True if the attribute has an &quot;is&quot; getter, false otherwise.                    
                </param>
            </javadoc>
            <method name="ModelMBeanAttributeInfo" type="constructor" line="165">
                <params>
                    <param name="name" type="String"/>
                    <param name="type" type="String"/>
                    <param name="description" type="String"/>
                    <param name="isReadable" type="boolean"/>
                    <param name="isWritable" type="boolean"/>
                    <param name="isIs" type="boolean"/>
                </params>
                <scope line="167"/>
            </method>
            <javadoc line="172">
                Constructs a ModelMBeanAttributeInfo object.                
                <param>
                    name The name of the attribute                    
                </param>
                <param>
                    type The type or class name of the attribute                    
                </param>
                <param>
                    description A human readable description of the attribute.                    
                </param>
                <param>
                    isReadable True if the attribute has a getter method, false otherwise.                    
                </param>
                <param>
                    isWritable True if the attribute has a setter method, false otherwise.                    
                </param>
                <param>
                    isIs True if the attribute has an &quot;is&quot; getter, false otherwise.                    
                </param>
                <param>
                    descriptor An instance of Descriptor containing the
                      appropriate metadata for this instance of the Attribute. If
                      it is null then a default descriptor will be created.  If
                      the descriptor does not contain the field &quot;displayName&quot; this field
                      is added in the descriptor with its default value.                    
                </param>
                <exception>
                    RuntimeOperationsException Wraps an
                      IllegalArgumentException. The descriptor is invalid, or descriptor
                      field &quot;name&quot; is not equal to name parameter, or descriptor field
                      &quot;descriptorType&quot; is not equal to &quot;attribute&quot;.                    
                </exception>
            </javadoc>
            <method name="ModelMBeanAttributeInfo" type="constructor" line="190">
                <params>
                    <param name="name" type="String"/>
                    <param name="type" type="String"/>
                    <param name="description" type="String"/>
                    <param name="isReadable" type="boolean"/>
                    <param name="isWritable" type="boolean"/>
                    <param name="isIs" type="boolean"/>
                    <param name="descriptor" type="Descriptor"/>
                </params>
                <scope line="192"/>
            </method>
            <javadoc line="197">
                Constructs a new ModelMBeanAttributeInfo object from this
                  ModelMBeanAttributeInfo Object.  A default descriptor will
                  be created.                
                <param>
                    inInfo the ModelMBeanAttributeInfo to be duplicated                    
                </param>
            </javadoc>
            <method name="ModelMBeanAttributeInfo" type="constructor" line="203">
                <params>
                    <param name="inInfo" type="ModelMBeanAttributeInfo"/>
                </params>
                <scope line="205"/>
                <declaration name="newDesc" type="Descriptor" line="208"/>
            </method>
            <javadoc line="211">
                Gets a copy of the associated Descriptor for the
                  ModelMBeanAttributeInfo.                
                <return>
                    Descriptor associated with the
                      ModelMBeanAttributeInfo object.                    
                </return>
                <see>
                    #setDescriptor                    
                </see>
            </javadoc>
            <method name="getDescriptor" type="Descriptor" line="218">
                <scope line="219"/>
                <scope line="222"/>
            </method>
            <javadoc line="227">
                Sets associated Descriptor (full replace) for the
                  ModelMBeanAttributeDescriptor.  If the new Descriptor is
                  null, then the associated Descriptor reverts to a default
                  descriptor.  The Descriptor is validated before it is
                  assigned.  If the new Descriptor is invalid, then a
                  RuntimeOperationsException wrapping an
                  IllegalArgumentException is thrown.                
                <param>
                    inDescriptor replaces the Descriptor associated with the
                      ModelMBeanAttributeInfo                    
                </param>
                <exception>
                    RuntimeOperationsException Wraps an
                      IllegalArgumentException for an invalid Descriptor                    
                </exception>
                <see>
                    #getDescriptor                    
                </see>
            </javadoc>
            <method name="setDescriptor" type="void" line="241">
                <params>
                    <param name="inDescriptor" type="Descriptor"/>
                </params>
            </method>
            <javadoc line="244">
                Creates and returns a new ModelMBeanAttributeInfo which is a duplicate of this ModelMBeanAttributeInfo.                
                <exception>
                    RuntimeOperationsException for illegal value for
                      field Names or field Values.  If the descriptor construction
                      fails for any reason, this exception will be thrown.                    
                </exception>
            </javadoc>
            <method name="clone" type="Object" line="250">
                <scope line="251"/>
            </method>
            <javadoc line="256">
                Returns a human-readable version of the
                  ModelMBeanAttributeInfo instance.                
            </javadoc>
            <method name="toString" type="String" line="260"/>
            <javadoc line="263">
                Clones the passed in Descriptor, sets default values, and checks for validity.
                  If the Descriptor is invalid (for instance by having the wrong &quot;name&quot;),
                  this indicates programming error and a RuntimeOperationsException will be thrown.
                  The following fields will be defaulted if they are not already set:
                  displayName=this.getName(),name=this.getName(),descriptorType = &quot;attribute&quot;                
                <param>
                    in Descriptor to be checked, or null which is equivalent to
                      an empty Descriptor.                    
                </param>
                <exception>
                    RuntimeOperationsException if Descriptor is invalid                    
                </exception>
            </javadoc>
            <method name="validDescriptor" type="Descriptor" line="273">
                <params>
                    <param name="in" type="Descriptor"/>
                </params>
                <declaration name="clone" type="Descriptor" line="274"/>
                <declaration name="defaulted" type="boolean" line="275"/>
                <scope line="276"/>
                <scope line="280"/>
                <scope line="283"/>
                <scope line="287"/>
                <scope line="291"/>
                <scope line="295"/>
                <scope line="298"/>
                <scope line="301"/>
            </method>
            <javadoc line="306">
                Deserializes a {@link ModelMBeanAttributeInfo} from an {@link ObjectInputStream}.                
            </javadoc>
            <method name="readObject" type="void" line="309">
                <params>
                    <param name="in" type="ObjectInputStream"/>
                </params>
            </method>
            <javadoc line="312">
                Serializes a {@link ModelMBeanAttributeInfo} to an {@link ObjectOutputStream}.                
            </javadoc>
            <method name="writeObject" type="void" line="315">
                <params>
                    <param name="out" type="ObjectOutputStream"/>
                </params>
                <scope line="316">
                    <declaration name="fields" type="ObjectOutputStream.PutField" line="317"/>
                </scope>
                <scope line="322"/>
            </method>
        </class>
    </source>