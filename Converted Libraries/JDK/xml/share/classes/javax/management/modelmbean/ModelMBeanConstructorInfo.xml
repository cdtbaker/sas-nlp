<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.modelmbean">
        <import package="com.sun.jmx.defaults.JmxProperties.MODELMBEAN_LOGGER"/>
        <import package="com.sun.jmx.mbeanserver.GetPropertyAction"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.ObjectStreamField"/>
        <import package="java.lang.reflect.Constructor"/>
        <import package="java.security.AccessController"/>
        <import package="java.util.logging.Level"/>
        <import package="javax.management.Descriptor"/>
        <import package="javax.management.DescriptorAccess"/>
        <import package="javax.management.DescriptorKey"/>
        <import package="javax.management.MBeanConstructorInfo"/>
        <import package="javax.management.MBeanParameterInfo"/>
        <import package="javax.management.RuntimeOperationsException"/>
        <class name="ModelMBeanConstructorInfo" line="51">
            <extends class="MBeanConstructorInfo"/>
            <comment line="89">
                serialVersionUID is not constant                
            </comment>
            <comment line="94">
                Serialization compatibility stuff:
                 Two serial forms are supported in this class. The selected form depends
                 on system property &quot;jmx.serial.form&quot;:
                  - &quot;1.0&quot; for JMX 1.0
                  - any other value for JMX 1.1 and higher
                
                 Serial version for old serial form                
            </comment>
            <comment line="102">
                Serial version for new serial form                
            </comment>
            <comment line="105">
                Serializable fields in old serial form                
            </comment>
            <comment line="112">
                Serializable fields in new serial form                
            </comment>
            <comment line="118">
                Actual serial version and serial form                
            </comment>
            <comment line="142">
                END Serialization compatibility stuff                
            </comment>
            <implements interface="DescriptorAccess"/>
            <javadoc line="51">
                &lt;p&gt;The ModelMBeanConstructorInfo object describes a constructor of the ModelMBean.
                  It is a subclass of MBeanConstructorInfo with the addition of an associated Descriptor
                  and an implementation of the DescriptorAccess interface.&lt;/p&gt;
                  &lt;P id=&quot;descriptor&quot;&gt;
                  The fields in the descriptor are defined, but not limited to, the following.
                  Note that when the Type in this table is Number, a String that is the decimal
                  representation of a Long can also be used.&lt;/P&gt;
                  &lt;table border=&quot;1&quot; cellpadding=&quot;5&quot;&gt;
                  &lt;tr&gt;&lt;th&gt;Name&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th&gt;Meaning&lt;/th&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;name&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;
                  &lt;td&gt;Constructor name.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;descriptorType&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;
                  &lt;td&gt;Must be &quot;operation&quot;.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;role&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;
                  &lt;td&gt;Must be &quot;constructor&quot;.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;displayName&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;
                  &lt;td&gt;Human readable name of constructor.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;visibility&lt;/td&gt;&lt;td&gt;Number&lt;/td&gt;
                  &lt;td&gt;1-4 where 1: always visible 4: rarely visible.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;presentationString&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;
                  &lt;td&gt;XML formatted string to describe how to present operation&lt;/td&gt;&lt;/tr&gt;
                  &lt;/table&gt;
                  &lt;p&gt;The {@code persistPolicy} and {@code currencyTimeLimit} fields
                  are meaningless for constructors, but are not considered invalid.&lt;/p&gt;
                  &lt;p&gt;The default descriptor will have the {@code name}, {@codedescriptorType}, {@code displayName} and {@code role} fields.
                  &lt;p&gt;The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;3862947819818064362L&lt;/code&gt;.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="oldSerialVersionUID" type="long" line="100"/>
            <declaration name="newSerialVersionUID" type="long" line="103"/>
            <declaration name="oldSerialPersistentFields" type="ObjectStreamField[]" line="106"/>
            <declaration name="newSerialPersistentFields" type="ObjectStreamField[]" line="113"/>
            <declaration name="serialVersionUID" type="long" line="119"/>
            <declaration name="serialPersistentFields" type="ObjectStreamField[]" line="120"/>
            <javadoc line="120">
                @serialField consDescriptor Descriptor The {@link Descriptor} containing the metadata for this instance                
            </javadoc>
            <declaration name="compat" type="boolean" line="124"/>
            <scope line="125">
                <scope line="126">
                    <declaration name="act" type="GetPropertyAction" line="127"/>
                    <declaration name="form" type="String" line="128"/>
                </scope>
                <scope line="130"/>
                <scope line="133"/>
                <scope line="136"/>
            </scope>
            <declaration name="consDescriptor" type="Descriptor" line="144"/>
            <javadoc line="144">
                @serial The {@link Descriptor} containing the metadata for this instance                
            </javadoc>
            <declaration name="currClass" type="String" line="149"/>
            <javadoc line="152">
                Constructs a ModelMBeanConstructorInfo object with a default
                  descriptor.  The {@link Descriptor} of the constructed
                  object will include fields contributed by any annotations on
                  the {@code Constructor} object that contain the {@link DescriptorKey} meta-annotation.                
                <param>
                    description A human readable description of the constructor.                    
                </param>
                <param>
                    constructorMethod The java.lang.reflect.Constructor object
                      describing the MBean constructor.                    
                </param>
            </javadoc>
            <method name="ModelMBeanConstructorInfo" type="constructor" line="165">
                <params>
                    <param name="description" type="String"/>
                    <param name="constructorMethod" type="Constructor<?>"/>
                </params>
                <comment line="176">
                    put getter and setter methods in constructors list
                     create default descriptor                    
                </comment>
                <scope line="167"/>
            </method>
            <javadoc line="180">
                Constructs a ModelMBeanConstructorInfo object.  The {@link Descriptor} of the constructed object will include fields
                  contributed by any annotations on the {@code Constructor}object that contain the {@link DescriptorKey}meta-annotation.                
                <param>
                    description A human readable description of the constructor.                    
                </param>
                <param>
                    constructorMethod The java.lang.reflect.Constructor object
                      describing the ModelMBean constructor.                    
                </param>
                <param>
                    descriptor An instance of Descriptor containing the
                      appropriate metadata for this instance of the
                      ModelMBeanConstructorInfo.  If it is null, then a default
                      descriptor will be created. If the descriptor does not
                      contain the field "displayName" this field is added in the
                      descriptor with its default value.                    
                </param>
                <exception>
                    RuntimeOperationsException Wraps an
                      IllegalArgumentException. The descriptor is invalid, or
                      descriptor field "name" is not equal to name
                      parameter, or descriptor field "descriptorType" is
                      not equal to "operation" or descriptor field "role" is
                      present but not equal to "constructor".                    
                </exception>
            </javadoc>
            <method name="ModelMBeanConstructorInfo" type="constructor" line="208">
                <params>
                    <param name="description" type="String"/>
                    <param name="constructorMethod" type="Constructor<?>"/>
                    <param name="descriptor" type="Descriptor"/>
                </params>
                <comment line="212">
                    put getter and setter methods in constructors list                    
                </comment>
                <scope line="212"/>
            </method>
            <javadoc line="220">
                Constructs a ModelMBeanConstructorInfo object with a default descriptor.                
                <param>
                    name The name of the constructor.                    
                </param>
                <param>
                    description A human readable description of the constructor.                    
                </param>
                <param>
                    signature MBeanParameterInfo object array describing the parameters(arguments) of the constructor.                    
                </param>
            </javadoc>
            <method name="ModelMBeanConstructorInfo" type="constructor" line="231">
                <params>
                    <param name="name" type="String"/>
                    <param name="description" type="String"/>
                    <param name="signature" type="MBeanParameterInfo[]"/>
                </params>
                <comment line="235">
                    create default descriptor                    
                </comment>
                <scope line="235"/>
            </method>
            <javadoc line="243">
                Constructs a ModelMBeanConstructorInfo object.                
                <param>
                    name The name of the constructor.                    
                </param>
                <param>
                    description A human readable description of the constructor.                    
                </param>
                <param>
                    signature MBeanParameterInfo objects describing the parameters(arguments) of the constructor.                    
                </param>
                <param>
                    descriptor An instance of Descriptor containing the appropriate metadata
                      for this instance of the MBeanConstructorInfo. If it is null then a default descriptor will be created.
                      If the descriptor does not contain the field "displayName" this field
                      is added in the descriptor with its default value.                    
                </param>
                <exception>
                    RuntimeOperationsException Wraps an
                      IllegalArgumentException. The descriptor is invalid, or
                      descriptor field "name" is not equal to name
                      parameter, or descriptor field "descriptorType" is
                      not equal to "operation" or descriptor field "role" is
                      present but not equal to "constructor".                    
                </exception>
            </javadoc>
            <method name="ModelMBeanConstructorInfo" type="constructor" line="266">
                <params>
                    <param name="name" type="String"/>
                    <param name="description" type="String"/>
                    <param name="signature" type="MBeanParameterInfo[]"/>
                    <param name="descriptor" type="Descriptor"/>
                </params>
                <scope line="268"/>
            </method>
            <javadoc line="278">
                Constructs a new ModelMBeanConstructorInfo object from this ModelMBeanConstructor Object.                
                <param>
                    old the ModelMBeanConstructorInfo to be duplicated                    
                </param>
            </javadoc>
            <method name="ModelMBeanConstructorInfo" type="constructor" line="285">
                <params>
                    <param name="old" type="ModelMBeanConstructorInfo"/>
                </params>
                <scope line="287"/>
            </method>
            <javadoc line="296">
                Creates and returns a new ModelMBeanConstructorInfo which is a duplicate of this ModelMBeanConstructorInfo.                
            </javadoc>
            <method name="clone" type="Object" line="302">
                <scope line="303"/>
            </method>
            <javadoc line="311">
                Returns a copy of the associated Descriptor.                
                <return>
                    Descriptor associated with the
                      ModelMBeanConstructorInfo object.                    
                </return>
                <see>
                    #setDescriptor                    
                </see>
            </javadoc>
            <method name="getDescriptor" type="Descriptor" line="323">
                <scope line="324"/>
                <scope line="329"/>
            </method>
            <javadoc line="334">
                Sets associated Descriptor (full replace) of
                  ModelMBeanConstructorInfo.  If the new Descriptor is null,
                  then the associated Descriptor reverts to a default
                  descriptor.  The Descriptor is validated before it is
                  assigned.  If the new Descriptor is invalid, then a
                  RuntimeOperationsException wrapping an
                  IllegalArgumentException is thrown.                
                <param>
                    inDescriptor replaces the Descriptor associated with
                      the ModelMBeanConstructor. If the descriptor does not
                      contain all the following fields, the missing ones are added with
                      their default values: displayName, name, role, descriptorType.                    
                </param>
                <exception>
                    RuntimeOperationsException Wraps an
                      IllegalArgumentException.  The descriptor is invalid, or
                      descriptor field "name" is present but not equal to name
                      parameter, or descriptor field "descriptorType" is present
                      but not equal to "operation" or descriptor field "role" is
                      present but not equal to "constructor".                    
                </exception>
                <see>
                    #getDescriptor                    
                </see>
            </javadoc>
            <method name="setDescriptor" type="void" line="358">
                <params>
                    <param name="inDescriptor" type="Descriptor"/>
                </params>
                <scope line="359"/>
            </method>
            <javadoc line="367">
                Returns a string containing the entire contents of the ModelMBeanConstructorInfo in human readable form.                
            </javadoc>
            <method name="toString" type="String" line="372">
                <scope line="373"/>
                <declaration name="retStr" type="String" line="378"/>
                <declaration name="pTypes" type="MBeanParameterInfo[]" line="383"/>
                <scope line="385"/>
            </method>
            <javadoc line="392">
                Clones the passed in Descriptor, sets default values, and checks for validity.
                  If the Descriptor is invalid (for instance by having the wrong &quot;name&quot;),
                  this indicates programming error and a RuntimeOperationsException will be thrown.
                  The following fields will be defaulted if they are not already set:
                  displayName=this.getName(), name=this.getName(), descriptorType=&quot;operation&quot;,
                  role=&quot;constructor&quot;                
                <param>
                    in Descriptor to be checked, or null which is equivalent to
                      an empty Descriptor.                    
                </param>
                <exception>
                    RuntimeOperationsException if Descriptor is invalid                    
                </exception>
            </javadoc>
            <method name="validDescriptor" type="Descriptor" line="406">
                <params>
                    <param name="in" type="Descriptor"/>
                </params>
                <comment line="417">
                    Setting defaults.                    
                </comment>
                <comment line="435">
                    Checking validity                    
                </comment>
                <declaration name="clone" type="Descriptor" line="407"/>
                <declaration name="defaulted" type="boolean" line="408"/>
                <scope line="409"/>
                <scope line="412"/>
                <scope line="417"/>
                <scope line="421"/>
                <scope line="425"/>
                <scope line="429"/>
                <scope line="435"/>
                <scope line="440"/>
                <scope line="445"/>
                <scope line="450"/>
            </method>
            <javadoc line="459">
                Deserializes a {@link ModelMBeanConstructorInfo} from an {@link ObjectInputStream}.                
            </javadoc>
            <method name="readObject" type="void" line="463">
                <params>
                    <param name="in" type="ObjectInputStream"/>
                </params>
                <comment line="465">
                    New serial form ignores extra field &quot;currClass&quot;                    
                </comment>
            </method>
            <javadoc line="469">
                Serializes a {@link ModelMBeanConstructorInfo} to an {@link ObjectOutputStream}.                
            </javadoc>
            <method name="writeObject" type="void" line="473">
                <params>
                    <param name="out" type="ObjectOutputStream"/>
                </params>
                <comment line="477">
                    Serializes this instance in the old serial form                    
                </comment>
                <comment line="486">
                    Serializes this instance in the new serial form                    
                </comment>
                <scope line="475">
                    <declaration name="fields" type="ObjectOutputStream.PutField" line="478"/>
                </scope>
                <scope line="484"/>
            </method>
        </class>
    </source>