<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.modelmbean">
        <import package="com.sun.jmx.defaults.JmxProperties.MODELMBEAN_LOGGER"/>
        <import package="com.sun.jmx.mbeanserver.GetPropertyAction"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.ObjectStreamField"/>
        <import package="java.lang.reflect.Constructor"/>
        <import package="java.security.AccessController"/>
        <import package="java.util.logging.Level"/>
        <import package="javax.management.Descriptor"/>
        <import package="javax.management.DescriptorAccess"/>
        <import package="javax.management.DescriptorKey"/>
        <import package="javax.management.MBeanConstructorInfo"/>
        <import package="javax.management.MBeanParameterInfo"/>
        <import package="javax.management.RuntimeOperationsException"/>
        <class name="ModelMBeanConstructorInfo" line="17">
            <extends class="MBeanConstructorInfo"/>
            <implements interface="DescriptorAccess"/>
            <javadoc line="17">
                &lt;p&gt;The ModelMBeanConstructorInfo object describes a constructor of the ModelMBean.
                  It is a subclass of MBeanConstructorInfo with the addition of an associated Descriptor
                  and an implementation of the DescriptorAccess interface.&lt;/p&gt;
                  &lt;P id=&quot;descriptor&quot;&gt;
                  The fields in the descriptor are defined, but not limited to, the following.
                  Note that when the Type in this table is Number, a String that is the decimal
                  representation of a Long can also be used.&lt;/P&gt;
                  &lt;table border=&quot;1&quot; cellpadding=&quot;5&quot;&gt;
                  &lt;tr&gt;&lt;th&gt;Name&lt;/th&gt;&lt;th&gt;Type&lt;/th&gt;&lt;th&gt;Meaning&lt;/th&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;name&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;
                  &lt;td&gt;Constructor name.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;descriptorType&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;
                  &lt;td&gt;Must be &quot;operation&quot;.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;role&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;
                  &lt;td&gt;Must be &quot;constructor&quot;.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;displayName&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;
                  &lt;td&gt;Human readable name of constructor.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;visibility&lt;/td&gt;&lt;td&gt;Number&lt;/td&gt;
                  &lt;td&gt;1-4 where 1: always visible 4: rarely visible.&lt;/td&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;presentationString&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;
                  &lt;td&gt;XML formatted string to describe how to present operation&lt;/td&gt;&lt;/tr&gt;
                  &lt;/table&gt;
                  &lt;p&gt;The {@code persistPolicy} and {@code currencyTimeLimit} fields
                  are meaningless for constructors, but are not considered invalid.&lt;/p&gt;
                  &lt;p&gt;The default descriptor will have the {@code name}, {@codedescriptorType}, {@code displayName} and {@code role} fields.
                  &lt;p&gt;The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;3862947819818064362L&lt;/code&gt;.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="oldSerialVersionUID" type="long" line="47"/>
            <declaration name="newSerialVersionUID" type="long" line="48"/>
            <declaration name="oldSerialPersistentFields" type="ObjectStreamField[]" line="49"/>
            <declaration name="newSerialPersistentFields" type="ObjectStreamField[]" line="50"/>
            <declaration name="serialVersionUID" type="long" line="51"/>
            <declaration name="serialPersistentFields" type="ObjectStreamField[]" line="52"/>
            <javadoc line="52">
                @serialField consDescriptor Descriptor The {@link Descriptor} containing the metadata for this instance                
            </javadoc>
            <declaration name="compat" type="boolean" line="56"/>
            <scope line="57">
                <scope line="58">
                    <declaration name="act" type="GetPropertyAction" line="59"/>
                    <declaration name="form" type="String" line="60"/>
                </scope>
                <scope line="63"/>
                <scope line="65"/>
                <scope line="69"/>
            </scope>
            <declaration name="consDescriptor" type="Descriptor" line="74"/>
            <javadoc line="74">
                @serial The {@link Descriptor} containing the metadata for this instance                
            </javadoc>
            <declaration name="currClass" type="String" line="78"/>
            <javadoc line="79">
                Constructs a ModelMBeanConstructorInfo object with a default
                  descriptor.  The {@link Descriptor} of the constructed
                  object will include fields contributed by any annotations on
                  the {@code Constructor} object that contain the {@link DescriptorKey} meta-annotation.                
                <param>
                    description A human readable description of the constructor.                    
                </param>
                <param>
                    constructorMethod The java.lang.reflect.Constructor object
                      describing the MBean constructor.                    
                </param>
            </javadoc>
            <method name="ModelMBeanConstructorInfo" type="constructor" line="88">
                <params>
                    <param name="description" type="String"/>
                    <param name="constructorMethod" type="Constructor&lt;?&gt;"/>
                </params>
                <scope line="90"/>
            </method>
            <javadoc line="95">
                Constructs a ModelMBeanConstructorInfo object.  The {@link Descriptor} of the constructed object will include fields
                  contributed by any annotations on the {@code Constructor}object that contain the {@link DescriptorKey}meta-annotation.                
                <param>
                    description A human readable description of the constructor.                    
                </param>
                <param>
                    constructorMethod The java.lang.reflect.Constructor object
                      describing the ModelMBean constructor.                    
                </param>
                <param>
                    descriptor An instance of Descriptor containing the
                      appropriate metadata for this instance of the
                      ModelMBeanConstructorInfo.  If it is null, then a default
                      descriptor will be created. If the descriptor does not
                      contain the field &quot;displayName&quot; this field is added in the
                      descriptor with its default value.                    
                </param>
                <exception>
                    RuntimeOperationsException Wraps an
                      IllegalArgumentException. The descriptor is invalid, or
                      descriptor field &quot;name&quot; is not equal to name
                      parameter, or descriptor field &quot;descriptorType&quot; is
                      not equal to &quot;operation&quot; or descriptor field &quot;role&quot; is
                      present but not equal to &quot;constructor&quot;.                    
                </exception>
            </javadoc>
            <method name="ModelMBeanConstructorInfo" type="constructor" line="114">
                <params>
                    <param name="description" type="String"/>
                    <param name="constructorMethod" type="Constructor&lt;?&gt;"/>
                    <param name="descriptor" type="Descriptor"/>
                </params>
                <scope line="116"/>
            </method>
            <javadoc line="121">
                Constructs a ModelMBeanConstructorInfo object with a default descriptor.                
                <param>
                    name The name of the constructor.                    
                </param>
                <param>
                    description A human readable description of the constructor.                    
                </param>
                <param>
                    signature MBeanParameterInfo object array describing the parameters(arguments) of the constructor.                    
                </param>
            </javadoc>
            <method name="ModelMBeanConstructorInfo" type="constructor" line="127">
                <params>
                    <param name="name" type="String"/>
                    <param name="description" type="String"/>
                    <param name="signature" type="MBeanParameterInfo[]"/>
                </params>
                <scope line="129"/>
            </method>
            <javadoc line="134">
                Constructs a ModelMBeanConstructorInfo object.                
                <param>
                    name The name of the constructor.                    
                </param>
                <param>
                    description A human readable description of the constructor.                    
                </param>
                <param>
                    signature MBeanParameterInfo objects describing the parameters(arguments) of the constructor.                    
                </param>
                <param>
                    descriptor An instance of Descriptor containing the appropriate metadata
                      for this instance of the MBeanConstructorInfo. If it is null then a default descriptor will be created.
                      If the descriptor does not contain the field &quot;displayName&quot; this field
                      is added in the descriptor with its default value.                    
                </param>
                <exception>
                    RuntimeOperationsException Wraps an
                      IllegalArgumentException. The descriptor is invalid, or
                      descriptor field &quot;name&quot; is not equal to name
                      parameter, or descriptor field &quot;descriptorType&quot; is
                      not equal to &quot;operation&quot; or descriptor field &quot;role&quot; is
                      present but not equal to &quot;constructor&quot;.                    
                </exception>
            </javadoc>
            <method name="ModelMBeanConstructorInfo" type="constructor" line="150">
                <params>
                    <param name="name" type="String"/>
                    <param name="description" type="String"/>
                    <param name="signature" type="MBeanParameterInfo[]"/>
                    <param name="descriptor" type="Descriptor"/>
                </params>
                <scope line="152"/>
            </method>
            <javadoc line="157">
                Constructs a new ModelMBeanConstructorInfo object from this ModelMBeanConstructor Object.                
                <param>
                    old the ModelMBeanConstructorInfo to be duplicated                    
                </param>
            </javadoc>
            <method name="ModelMBeanConstructorInfo" type="constructor" line="161">
                <params>
                    <param name="old" type="ModelMBeanConstructorInfo"/>
                </params>
                <scope line="163"/>
            </method>
            <javadoc line="168">
                Creates and returns a new ModelMBeanConstructorInfo which is a duplicate of this ModelMBeanConstructorInfo.                
            </javadoc>
            <method name="clone" type="Object" line="171">
                <scope line="172"/>
            </method>
            <javadoc line="177">
                Returns a copy of the associated Descriptor.                
                <return>
                    Descriptor associated with the
                      ModelMBeanConstructorInfo object.                    
                </return>
                <see>
                    #setDescriptor                    
                </see>
            </javadoc>
            <method name="getDescriptor" type="Descriptor" line="183">
                <scope line="184"/>
                <scope line="187"/>
            </method>
            <javadoc line="192">
                Sets associated Descriptor (full replace) of
                  ModelMBeanConstructorInfo.  If the new Descriptor is null,
                  then the associated Descriptor reverts to a default
                  descriptor.  The Descriptor is validated before it is
                  assigned.  If the new Descriptor is invalid, then a
                  RuntimeOperationsException wrapping an
                  IllegalArgumentException is thrown.                
                <param>
                    inDescriptor replaces the Descriptor associated with
                      the ModelMBeanConstructor. If the descriptor does not
                      contain all the following fields, the missing ones are added with
                      their default values: displayName, name, role, descriptorType.                    
                </param>
                <exception>
                    RuntimeOperationsException Wraps an
                      IllegalArgumentException.  The descriptor is invalid, or
                      descriptor field &quot;name&quot; is present but not equal to name
                      parameter, or descriptor field &quot;descriptorType&quot; is present
                      but not equal to &quot;operation&quot; or descriptor field &quot;role&quot; is
                      present but not equal to &quot;constructor&quot;.                    
                </exception>
                <see>
                    #getDescriptor                    
                </see>
            </javadoc>
            <method name="setDescriptor" type="void" line="212">
                <params>
                    <param name="inDescriptor" type="Descriptor"/>
                </params>
                <scope line="213"/>
            </method>
            <javadoc line="218">
                Returns a string containing the entire contents of the ModelMBeanConstructorInfo in human readable form.                
            </javadoc>
            <method name="toString" type="String" line="221">
                <scope line="222"/>
                <declaration name="retStr" type="String" line="225"/>
                <declaration name="pTypes" type="MBeanParameterInfo[]" line="226"/>
                <scope line="227"/>
            </method>
            <javadoc line="232">
                Clones the passed in Descriptor, sets default values, and checks for validity.
                  If the Descriptor is invalid (for instance by having the wrong &quot;name&quot;),
                  this indicates programming error and a RuntimeOperationsException will be thrown.
                  The following fields will be defaulted if they are not already set:
                  displayName=this.getName(), name=this.getName(), descriptorType=&quot;operation&quot;,
                  role=&quot;constructor&quot;                
                <param>
                    in Descriptor to be checked, or null which is equivalent to
                      an empty Descriptor.                    
                </param>
                <exception>
                    RuntimeOperationsException if Descriptor is invalid                    
                </exception>
            </javadoc>
            <method name="validDescriptor" type="Descriptor" line="243">
                <params>
                    <param name="in" type="Descriptor"/>
                </params>
                <declaration name="clone" type="Descriptor" line="244"/>
                <declaration name="defaulted" type="boolean" line="245"/>
                <scope line="246"/>
                <scope line="250"/>
                <scope line="253"/>
                <scope line="257"/>
                <scope line="261"/>
                <scope line="265"/>
                <scope line="269"/>
                <scope line="272"/>
                <scope line="275"/>
                <scope line="278"/>
            </method>
            <javadoc line="283">
                Deserializes a {@link ModelMBeanConstructorInfo} from an {@link ObjectInputStream}.                
            </javadoc>
            <method name="readObject" type="void" line="286">
                <params>
                    <param name="in" type="ObjectInputStream"/>
                </params>
            </method>
            <javadoc line="289">
                Serializes a {@link ModelMBeanConstructorInfo} to an {@link ObjectOutputStream}.                
            </javadoc>
            <method name="writeObject" type="void" line="292">
                <params>
                    <param name="out" type="ObjectOutputStream"/>
                </params>
                <scope line="293">
                    <declaration name="fields" type="ObjectOutputStream.PutField" line="294"/>
                </scope>
                <scope line="299"/>
            </method>
        </class>
    </source>