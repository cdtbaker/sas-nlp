<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.timer">
        <import package="com.sun.jmx.defaults.JmxProperties.TIMER_LOGGER"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Date"/>
        <import package="java.util.Hashtable"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.Map"/>
        <import package="java.util.Set"/>
        <import package="java.util.TreeSet"/>
        <import package="java.util.Vector"/>
        <import package="java.util.logging.Level"/>
        <import package="javax.management.InstanceNotFoundException"/>
        <import package="javax.management.MBeanNotificationInfo"/>
        <import package="javax.management.MBeanRegistration"/>
        <import package="javax.management.MBeanServer"/>
        <import package="javax.management.NotificationBroadcasterSupport"/>
        <import package="javax.management.ObjectName"/>
        <class name="Timer" line="48">
            <extends class="NotificationBroadcasterSupport"/>
            <comment line="86">
                ------------------------------------------
                  PUBLIC VARIABLES
                 ------------------------------------------                
            </comment>
            <comment line="122">
                ------------------------------------------
                  PRIVATE VARIABLES
                 ------------------------------------------                
            </comment>
            <comment line="154">
                Flags needed to keep the indexes of the objects in the array.                
            </comment>
            <comment line="155">
                                
            </comment>
            <comment line="171">
                ------------------------------------------
                  CONSTRUCTORS
                 ------------------------------------------                
            </comment>
            <comment line="183">
                ------------------------------------------
                  PUBLIC METHODS
                 ------------------------------------------                
            </comment>
            <comment line="243">
                This overrides the method in NotificationBroadcasterSupport.
                 Return the MBeanNotificationInfo[] array for this MBean.
                 The returned array has one element to indicate that the MBean
                 can emit TimerNotification.  The array of type strings
                 associated with this entry is a snapshot of the current types
                 that were given to addNotification.                
            </comment>
            <comment line="772">
                GETTERS AND SETTERS                
            </comment>
            <comment line="773">
                --------------------                
            </comment>
            <comment line="818">
                5089997: return is Vector&lt;Integer&gt; not Vector&lt;TimerNotification&gt;                
            </comment>
            <comment line="990">
                ------------------------------------------
                  PRIVATE METHODS
                 ------------------------------------------                
            </comment>
            <comment line="1166">
                ------------------------------------------
                  PACKAGE METHODS
                 ------------------------------------------                
            </comment>
            <comment line="1257">
                ------------------------------------------
                  CONSTRUCTORS
                 ------------------------------------------                
            </comment>
            <comment line="1273">
                ------------------------------------------
                  PUBLIC METHODS
                 ------------------------------------------                
            </comment>
            <implements interface="TimerMBean"/>
            <implements interface="MBeanRegistration"/>
            <javadoc line="48">
                Provides the implementation of the timer MBean.
                  The timer MBean sends out an alarm at a specified time
                  that wakes up all the listeners registered to receive timer notifications.
                  &lt;P&gt;
                  This class manages a list of dated timer notifications.
                  A method allows users to add/remove as many notifications as required.
                  When a timer notification is emitted by the timer and becomes obsolete,
                  it is automatically removed from the list of timer notifications.
                  &lt;BR&gt;Additional timer notifications can be added into regularly repeating notifications.
                  &lt;P&gt;
                  Note:
                  &lt;OL&gt;
                  &lt;LI&gt;When sending timer notifications, the timer updates the notification sequence number
                  irrespective of the notification type.
                  &lt;LI&gt;The timer service relies on the system date of the host where the &lt;CODE&gt;Timer&lt;/CODE&gt; class is loaded.
                  Listeners may receive untimely notifications
                  if their host has a different system date.
                  To avoid such problems, synchronize the system date of all host machines where timing is needed.
                  &lt;LI&gt;The default behavior for periodic notifications is &lt;i&gt;fixed-delay execution&lt;/i&gt;, as
                  specified in {@link java.util.Timer}. In order to use &lt;i&gt;fixed-rate execution&lt;/i&gt;, use the
                  overloaded {@link #addNotification(String,String,Object,Date,long,long,boolean)} method.
                  &lt;LI&gt;Notification listeners are potentially all executed in the same
                  thread.  Therefore, they should execute rapidly to avoid holding up
                  other listeners or perturbing the regularity of fixed-delay
                  executions.  See {@link NotificationBroadcasterSupport}.
                  &lt;/OL&gt;                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="ONE_SECOND" type="long" line="91"/>
            <javadoc line="91">
                Number of milliseconds in one second.
                  Useful constant for the &lt;CODE&gt;addNotification&lt;/CODE&gt; method.                
            </javadoc>
            <declaration name="ONE_MINUTE" type="long" line="97"/>
            <javadoc line="97">
                Number of milliseconds in one minute.
                  Useful constant for the &lt;CODE&gt;addNotification&lt;/CODE&gt; method.                
            </javadoc>
            <declaration name="ONE_HOUR" type="long" line="103"/>
            <javadoc line="103">
                Number of milliseconds in one hour.
                  Useful constant for the &lt;CODE&gt;addNotification&lt;/CODE&gt; method.                
            </javadoc>
            <declaration name="ONE_DAY" type="long" line="109"/>
            <javadoc line="109">
                Number of milliseconds in one day.
                  Useful constant for the &lt;CODE&gt;addNotification&lt;/CODE&gt; method.                
            </javadoc>
            <declaration name="ONE_WEEK" type="long" line="115"/>
            <javadoc line="115">
                Number of milliseconds in one week.
                  Useful constant for the &lt;CODE&gt;addNotification&lt;/CODE&gt; method.                
            </javadoc>
            <declaration name="timerTable" type="Map&lt;Integer,Object[]&gt;" line="127"/>
            <javadoc line="127">
                Table containing all the timer notifications of this timer,
                  with the associated date, period and number of occurrences.                
            </javadoc>
            <declaration name="sendPastNotifications" type="boolean" line="134"/>
            <javadoc line="134">
                Past notifications sending on/off flag value.
                  This attribute is used to specify if the timer has to send past notifications after start.
                  &lt;BR&gt;The default value is set to &lt;CODE&gt;false&lt;/CODE&gt;.                
            </javadoc>
            <declaration name="isActive" type="boolean" line="141"/>
            <javadoc line="141">
                Timer state.
                  The default value is set to &lt;CODE&gt;false&lt;/CODE&gt;.                
            </javadoc>
            <declaration name="sequenceNumber" type="long" line="147"/>
            <javadoc line="147">
                Timer sequence number.
                  The default value is set to 0.                
            </javadoc>
            <declaration name="TIMER_NOTIF_INDEX" type="int" line="155"/>
            <declaration name="TIMER_DATE_INDEX" type="int" line="156"/>
            <declaration name="TIMER_PERIOD_INDEX" type="int" line="157"/>
            <declaration name="TIMER_NB_OCCUR_INDEX" type="int" line="158"/>
            <declaration name="ALARM_CLOCK_INDEX" type="int" line="159"/>
            <declaration name="FIXED_RATE_INDEX" type="int" line="160"/>
            <declaration name="counterID" type="int" line="162"/>
            <javadoc line="162">
                The notification counter ID.
                  Used to keep the max key value inserted into the timer table.                
            </javadoc>
            <declaration name="timer" type="java.util.Timer" line="168"/>
            <javadoc line="176">
                Default constructor.                
            </javadoc>
            <method name="Timer" type="constructor" line="179"/>
            <javadoc line="188">
                Allows the timer MBean to perform any operations it needs before being registered
                  in the MBean server.
                  &lt;P&gt;
                  Not used in this context.                
                <param>
                    server The MBean server in which the timer MBean will be registered.                    
                </param>
                <param>
                    name The object name of the timer MBean.                    
                </param>
                <return>
                    The name of the timer MBean registered.                    
                </return>
                <exception>
                    java.lang.Exception                    
                </exception>
            </javadoc>
            <method name="preRegister" type="ObjectName" line="202">
                <params>
                    <param name="server" type="MBeanServer"/>
                    <param name="name" type="ObjectName"/>
                </params>
            </method>
            <javadoc line="206">
                Allows the timer MBean to perform any operations needed after having been
                  registered in the MBean server or after the registration has failed.
                  &lt;P&gt;
                  Not used in this context.                
            </javadoc>
            <method name="postRegister" type="void" line="212">
                <params>
                    <param name="registrationDone" type="Boolean"/>
                </params>
            </method>
            <javadoc line="215">
                Allows the timer MBean to perform any operations it needs before being unregistered
                  by the MBean server.
                  &lt;P&gt;
                  Stops the timer.                
                <exception>
                    java.lang.Exception                    
                </exception>
            </javadoc>
            <method name="preDeregister" type="void" line="223">
                <comment line="228">
                    Stop the timer.                    
                </comment>
                <comment line="229">
                                        
                </comment>
            </method>
            <javadoc line="233">
                Allows the timer MBean to perform any operations needed after having been
                  unregistered by the MBean server.
                  &lt;P&gt;
                  Not used in this context.                
            </javadoc>
            <method name="postDeregister" type="void" line="239"/>
            <method name="getNotificationInfo" type="MBeanNotificationInfo[]" line="250">
                <declaration name="notifTypes" type="Set&lt;String&gt;" line="251"/>
                <scope line="252">
                    <declaration name="notif" type="TimerNotification" line="253"/>
                </scope>
                <declaration name="notifTypesArray" type="String[]" line="257"/>
            </method>
            <javadoc line="266">
                Starts the timer.
                  &lt;P&gt;
                  If there is one or more timer notifications before the time in the list of notifications, the notification
                  is sent according to the &lt;CODE&gt;sendPastNotifications&lt;/CODE&gt; flag and then, updated
                  according to its period and remaining number of occurrences.
                  If the timer notification date remains earlier than the current date, this notification is just removed
                  from the list of notifications.                
            </javadoc>
            <method name="start" type="void" line="275">
                <comment line="280">
                    Start the TimerAlarmClock.                    
                </comment>
                <comment line="281">
                                        
                </comment>
                <comment line="291">
                    Send or not past notifications depending on the flag.                    
                </comment>
                <comment line="292">
                    Update the date and the number of occurrences of past notifications                    
                </comment>
                <comment line="293">
                    to make them later than the current date.                    
                </comment>
                <comment line="294">
                                        
                </comment>
                <comment line="297">
                    Update and start all the TimerAlarmClocks.                    
                </comment>
                <comment line="298">
                    Here, all the notifications in the timer table are later than the current date.                    
                </comment>
                <comment line="299">
                                        
                </comment>
                <comment line="302">
                    Retrieve the date notification and the TimerAlarmClock.                    
                </comment>
                <comment line="303">
                                        
                </comment>
                <comment line="306">
                    Update all the TimerAlarmClock timeouts and start them.                    
                </comment>
                <comment line="307">
                                        
                </comment>
                <comment line="323">
                    Set the state to ON.                    
                </comment>
                <comment line="324">
                                        
                </comment>
                <scope line="282">
                    <declaration name="alarmClock" type="TimerAlarmClock" line="286"/>
                    <declaration name="date" type="Date" line="287"/>
                    <declaration name="currentDate" type="Date" line="289"/>
                    <scope line="300">
                        <declaration name="fixedRate" type="boolean" line="308"/>
                        <scope line="310"/>
                        <scope line="316"/>
                    </scope>
                </scope>
                <scope line="329"/>
            </method>
            <javadoc line="335">
                Stops the timer.                
            </javadoc>
            <method name="stop" type="void" line="338">
                <comment line="343">
                    Stop the TimerAlarmClock.                    
                </comment>
                <comment line="344">
                                        
                </comment>
                <comment line="349">
                    Stop all the TimerAlarmClock.                    
                </comment>
                <comment line="350">
                                        
                </comment>
                <comment line="353">
                    alarmClock.interrupt();                    
                </comment>
                <comment line="354">
                    try {                    
                </comment>
                <comment line="355">
                    // Wait until the thread die.                    
                </comment>
                <comment line="356">
                    //                    
                </comment>
                <comment line="357">
                    alarmClock.join();                    
                </comment>
                <comment line="358">
                    } catch (InterruptedException ex) {                    
                </comment>
                <comment line="359">
                    // Ignore...                    
                </comment>
                <comment line="360">
                    }                    
                </comment>
                <comment line="361">
                    // Remove the reference on the TimerAlarmClock.                    
                </comment>
                <comment line="362">
                    //                    
                </comment>
                <comment line="370">
                    Set the state to OFF.                    
                </comment>
                <comment line="371">
                                        
                </comment>
                <scope line="345">
                    <scope line="347">
                        <declaration name="alarmClock" type="TimerAlarmClock" line="351"/>
                        <scope line="352"/>
                    </scope>
                </scope>
                <scope line="376"/>
            </method>
            <javadoc line="382">
                Creates a new timer notification with the specified &lt;CODE&gt;type&lt;/CODE&gt;, &lt;CODE&gt;message&lt;/CODE&gt;
                  and &lt;CODE&gt;userData&lt;/CODE&gt; and inserts it into the list of notifications with a given date,
                  period and number of occurrences.
                  &lt;P&gt;
                  If the timer notification to be inserted has a date that is before the current date,
                  the method behaves as if the specified date were the current date. &lt;BR&gt;
                  For once-off notifications, the notification is delivered immediately. &lt;BR&gt;
                  For periodic notifications, the first notification is delivered immediately and the
                  subsequent ones are spaced as specified by the period parameter.
                  &lt;P&gt;
                  Note that once the timer notification has been added into the list of notifications,
                  its associated date, period and number of occurrences cannot be updated.
                  &lt;P&gt;
                  In the case of a periodic notification, the value of parameter &lt;i&gt;fixedRate&lt;/i&gt; is used to
                  specify the execution scheme, as specified in {@link java.util.Timer}.                
                <param>
                    type The timer notification type.                    
                </param>
                <param>
                    message The timer notification detailed message.                    
                </param>
                <param>
                    userData The timer notification user data object.                    
                </param>
                <param>
                    date The date when the notification occurs.                    
                </param>
                <param>
                    period The period of the timer notification (in milliseconds).                    
                </param>
                <param>
                    nbOccurences The total number the timer notification will be emitted.                    
                </param>
                <param>
                    fixedRate If <code>true</code> and if the notification is periodic, the notification
                      is scheduled with a <i>fixed-rate</i> execution scheme. If
                      <code>false</code> and if the notification is periodic, the notification
                      is scheduled with a <i>fixed-delay</i> execution scheme. Ignored if the
                      notification is not periodic.                    
                </param>
                <return>
                    The identifier of the new created timer notification.                    
                </return>
                <exception>
                    java.lang.IllegalArgumentException The date is {@code null} or
                      the period or the number of occurrences is negative.                    
                </exception>
                <see>
                    #addNotification(String,String,Object,Date,long,long)                    
                </see>
            </javadoc>
            <method name="addNotification" type="Integer" line="425">
                <params>
                    <param name="type" type="String"/>
                    <param name="message" type="String"/>
                    <param name="userData" type="Object"/>
                    <param name="date" type="Date"/>
                    <param name="period" type="long"/>
                    <param name="nbOccurences" type="long"/>
                    <param name="fixedRate" type="boolean"/>
                </params>
                <comment line="418">
                    NPCTE fix for bugId 4464388, esc 0,  MR, to be added after modification of jmx spec                    
                </comment>
                <comment line="419">
                    public synchronized Integer addNotification(String type, String message, Serializable userData,                    
                </comment>
                <comment line="420">
                    Date date, long period, long nbOccurences)                    
                </comment>
                <comment line="421">
                    end of NPCTE fix for bugId 4464388                    
                </comment>
                <comment line="431">
                    Check that all the timer notification attributes are valid.                    
                </comment>
                <comment line="432">
                                        
                </comment>
                <comment line="434">
                    Invalid timer period value exception:                    
                </comment>
                <comment line="435">
                    Check that the period and the nbOccurences are POSITIVE VALUES.                    
                </comment>
                <comment line="436">
                                        
                </comment>
                <comment line="443">
                    Update the date if it is before the current date.                    
                </comment>
                <comment line="444">
                                        
                </comment>
                <comment line="456">
                    Create and add the timer notification into the timer table.                    
                </comment>
                <comment line="457">
                                        
                </comment>
                <comment line="460">
                    The sequenceNumber and the timeStamp attributes are updated                    
                </comment>
                <comment line="461">
                    when the notification is emitted by the timer.                    
                </comment>
                <comment line="462">
                                        
                </comment>
                <comment line="478">
                    Fix bug 00417.B                    
                </comment>
                <comment line="479">
                    The date registered into the timer is a clone from the date parameter.                    
                </comment>
                <comment line="480">
                                        
                </comment>
                <comment line="513">
                    Update and start the TimerAlarmClock.                    
                </comment>
                <comment line="514">
                                        
                </comment>
                <scope line="427"/>
                <scope line="437"/>
                <declaration name="currentDate" type="Date" line="441"/>
                <scope line="445">
                    <scope line="448"/>
                </scope>
                <declaration name="notifID" type="Integer" line="458"/>
                <declaration name="notif" type="TimerNotification" line="463"/>
                <declaration name="obj" type="Object[]" line="466"/>
                <declaration name="alarmClock" type="TimerAlarmClock" line="468"/>
                <scope line="470"/>
                <scope line="474"/>
                <declaration name="d" type="Date" line="481"/>
                <scope line="490">
                    <declaration name="strb" type="StringBuilder" line="491"/>
                </scope>
                <scope line="515">
                    <scope line="517"/>
                    <scope line="521"/>
                </scope>
            </method>
            <javadoc line="531">
                Creates a new timer notification with the specified &lt;CODE&gt;type&lt;/CODE&gt;, &lt;CODE&gt;message&lt;/CODE&gt;
                  and &lt;CODE&gt;userData&lt;/CODE&gt; and inserts it into the list of notifications with a given date,
                  period and number of occurrences.
                  &lt;P&gt;
                  If the timer notification to be inserted has a date that is before the current date,
                  the method behaves as if the specified date were the current date. &lt;BR&gt;
                  For once-off notifications, the notification is delivered immediately. &lt;BR&gt;
                  For periodic notifications, the first notification is delivered immediately and the
                  subsequent ones are spaced as specified by the period parameter.
                  &lt;P&gt;
                  Note that once the timer notification has been added into the list of notifications,
                  its associated date, period and number of occurrences cannot be updated.
                  &lt;P&gt;
                  In the case of a periodic notification, uses a &lt;i&gt;fixed-delay&lt;/i&gt; execution scheme, as specified in{@link java.util.Timer}. In order to use a &lt;i&gt;fixed-rate&lt;/i&gt; execution scheme, use{@link #addNotification(String,String,Object,Date,long,long,boolean)} instead.                
                <param>
                    type The timer notification type.                    
                </param>
                <param>
                    message The timer notification detailed message.                    
                </param>
                <param>
                    userData The timer notification user data object.                    
                </param>
                <param>
                    date The date when the notification occurs.                    
                </param>
                <param>
                    period The period of the timer notification (in milliseconds).                    
                </param>
                <param>
                    nbOccurences The total number the timer notification will be emitted.                    
                </param>
                <return>
                    The identifier of the new created timer notification.                    
                </return>
                <exception>
                    java.lang.IllegalArgumentException The date is {@code null} or
                      the period or the number of occurrences is negative.                    
                </exception>
                <see>
                    #addNotification(String,String,Object,Date,long,long,boolean)                    
                </see>
            </javadoc>
            <method name="addNotification" type="Integer" line="570">
                <params>
                    <param name="type" type="String"/>
                    <param name="message" type="String"/>
                    <param name="userData" type="Object"/>
                    <param name="date" type="Date"/>
                    <param name="period" type="long"/>
                    <param name="nbOccurences" type="long"/>
                </params>
                <comment line="563">
                    NPCTE fix for bugId 4464388, esc 0,  MR , to be added after modification of jmx spec                    
                </comment>
                <comment line="564">
                    public synchronized Integer addNotification(String type, String message, Serializable userData,                    
                </comment>
                <comment line="565">
                    Date date, long period)                    
                </comment>
                <comment line="566">
                    end of NPCTE fix for bugId 4464388 */                    
                </comment>
            </method>
            <javadoc line="575">
                Creates a new timer notification with the specified &lt;CODE&gt;type&lt;/CODE&gt;, &lt;CODE&gt;message&lt;/CODE&gt;
                  and &lt;CODE&gt;userData&lt;/CODE&gt; and inserts it into the list of notifications with a given date
                  and period and a null number of occurrences.
                  &lt;P&gt;
                  The timer notification will repeat continuously using the timer period using a &lt;i&gt;fixed-delay&lt;/i&gt;
                  execution scheme, as specified in {@link java.util.Timer}. In order to use a &lt;i&gt;fixed-rate&lt;/i&gt;
                  execution scheme, use {@link #addNotification(String,String,Object,Date,long,long,boolean)} instead.
                  &lt;P&gt;
                  If the timer notification to be inserted has a date that is before the current date,
                  the method behaves as if the specified date were the current date. The
                  first notification is delivered immediately and the subsequent ones are
                  spaced as specified by the period parameter.                
                <param>
                    type The timer notification type.                    
                </param>
                <param>
                    message The timer notification detailed message.                    
                </param>
                <param>
                    userData The timer notification user data object.                    
                </param>
                <param>
                    date The date when the notification occurs.                    
                </param>
                <param>
                    period The period of the timer notification (in milliseconds).                    
                </param>
                <return>
                    The identifier of the new created timer notification.                    
                </return>
                <exception>
                    java.lang.IllegalArgumentException The date is {@code null} or
                      the period is negative.                    
                </exception>
            </javadoc>
            <method name="addNotification" type="Integer" line="608">
                <params>
                    <param name="type" type="String"/>
                    <param name="message" type="String"/>
                    <param name="userData" type="Object"/>
                    <param name="date" type="Date"/>
                    <param name="period" type="long"/>
                </params>
                <comment line="601">
                    NPCTE fix for bugId 4464388, esc 0,  MR , to be added after modification of jmx spec                    
                </comment>
                <comment line="602">
                    public synchronized Integer addNotification(String type, String message, Serializable userData,                    
                </comment>
                <comment line="603">
                    Date date, long period)                    
                </comment>
                <comment line="604">
                    end of NPCTE fix for bugId 4464388 */                    
                </comment>
            </method>
            <javadoc line="613">
                Creates a new timer notification with the specified &lt;CODE&gt;type&lt;/CODE&gt;, &lt;CODE&gt;message&lt;/CODE&gt;
                  and &lt;CODE&gt;userData&lt;/CODE&gt; and inserts it into the list of notifications with a given date
                  and a null period and number of occurrences.
                  &lt;P&gt;
                  The timer notification will be handled once at the specified date.
                  &lt;P&gt;
                  If the timer notification to be inserted has a date that is before the current date,
                  the method behaves as if the specified date were the current date and the
                  notification is delivered immediately.                
                <param>
                    type The timer notification type.                    
                </param>
                <param>
                    message The timer notification detailed message.                    
                </param>
                <param>
                    userData The timer notification user data object.                    
                </param>
                <param>
                    date The date when the notification occurs.                    
                </param>
                <return>
                    The identifier of the new created timer notification.                    
                </return>
                <exception>
                    java.lang.IllegalArgumentException The date is {@code null}.                    
                </exception>
            </javadoc>
            <method name="addNotification" type="Integer" line="639">
                <params>
                    <param name="type" type="String"/>
                    <param name="message" type="String"/>
                    <param name="userData" type="Object"/>
                    <param name="date" type="Date"/>
                </params>
                <comment line="633">
                    NPCTE fix for bugId 4464388, esc 0,  MR, to be added after modification of jmx spec                    
                </comment>
                <comment line="634">
                    public synchronized Integer addNotification(String type, String message, Serializable userData, Date date)                    
                </comment>
                <comment line="635">
                    throws java.lang.IllegalArgumentException {                    
                </comment>
                <comment line="636">
                    end of NPCTE fix for bugId 4464388                    
                </comment>
            </method>
            <javadoc line="645">
                Removes the timer notification corresponding to the specified identifier from the list of notifications.                
                <param>
                    id The timer notification identifier.                    
                </param>
                <exception>
                    InstanceNotFoundException The specified identifier does not correspond to any timer notification
                      in the list of notifications of this timer MBean.                    
                </exception>
            </javadoc>
            <method name="removeNotification" type="void" line="653">
                <params>
                    <param name="id" type="Integer"/>
                </params>
                <comment line="655">
                    Check that the notification to remove is effectively in the timer table.                    
                </comment>
                <comment line="656">
                                        
                </comment>
                <comment line="661">
                    Stop the TimerAlarmClock.                    
                </comment>
                <comment line="662">
                                        
                </comment>
                <comment line="666">
                    alarmClock.interrupt();                    
                </comment>
                <comment line="667">
                    try {                    
                </comment>
                <comment line="668">
                    // Wait until the thread die.                    
                </comment>
                <comment line="669">
                    //                    
                </comment>
                <comment line="670">
                    alarmClock.join();                    
                </comment>
                <comment line="671">
                    } catch (InterruptedException e) {                    
                </comment>
                <comment line="672">
                    // Ignore...                    
                </comment>
                <comment line="673">
                    }                    
                </comment>
                <comment line="674">
                    // Remove the reference on the TimerAlarmClock.                    
                </comment>
                <comment line="675">
                    //                    
                </comment>
                <comment line="679">
                    Remove the timer notification from the timer table.                    
                </comment>
                <comment line="680">
                                        
                </comment>
                <scope line="657"/>
                <declaration name="obj" type="Object[]" line="663"/>
                <declaration name="alarmClock" type="TimerAlarmClock" line="664"/>
                <scope line="665"/>
                <scope line="681">
                    <declaration name="strb" type="StringBuilder" line="682"/>
                </scope>
            </method>
            <javadoc line="708">
                Removes all the timer notifications corresponding to the specified type from the list of notifications.                
                <param>
                    type The timer notification type.                    
                </param>
                <exception>
                    InstanceNotFoundException The specified type does not correspond to any timer notification
                      in the list of notifications of this timer MBean.                    
                </exception>
            </javadoc>
            <method name="removeNotifications" type="void" line="716">
                <params>
                    <param name="type" type="String"/>
                </params>
                <declaration name="v" type="Vector&lt;Integer&gt;" line="718"/>
            </method>
            <javadoc line="727">
                Removes all the timer notifications from the list of notifications
                  and resets the counter used to update the timer notification identifiers.                
            </javadoc>
            <method name="removeAllNotifications" type="void" line="731">
                <comment line="737">
                    Stop the TimerAlarmClock.                    
                </comment>
                <comment line="738">
                                        
                </comment>
                <comment line="740">
                    if (alarmClock != null) {                    
                </comment>
                <comment line="741">
                    alarmClock.interrupt();                    
                </comment>
                <comment line="742">
                    try {                    
                </comment>
                <comment line="743">
                    // Wait until the thread die.                    
                </comment>
                <comment line="744">
                    //                    
                </comment>
                <comment line="745">
                    alarmClock.join();                    
                </comment>
                <comment line="746">
                    } catch (InterruptedException ex) {                    
                </comment>
                <comment line="747">
                    // Ignore...                    
                </comment>
                <comment line="748">
                    }                    
                </comment>
                <comment line="749">
                    Remove the reference on the TimerAlarmClock.                    
                </comment>
                <comment line="750">
                                        
                </comment>
                <comment line="751">
                    }                    
                </comment>
                <comment line="755">
                    Remove all the timer notifications from the timer table.                    
                </comment>
                <comment line="763">
                    Reset the counterID.                    
                </comment>
                <comment line="764">
                                        
                </comment>
                <declaration name="alarmClock" type="TimerAlarmClock" line="733"/>
                <scope line="735"/>
            </method>
            <javadoc line="774">
                Gets the number of timer notifications registered into the list of notifications.                
                <return>
                    The number of timer notifications.                    
                </return>
            </javadoc>
            <method name="getNbNotifications" type="int" line="779"/>
            <javadoc line="783">
                Gets all timer notification identifiers registered into the list of notifications.                
                <return>
                    A vector of <CODE>Integer</CODE> objects containing all the timer notification identifiers.
                      <BR>The vector is empty if there is no timer notification registered for this timer MBean.                    
                </return>
            </javadoc>
            <method name="getAllNotificationIDs" type="Vector<Integer>" line="789"/>
            <javadoc line="793">
                Gets all the identifiers of timer notifications corresponding to the specified type.                
                <param>
                    type The timer notification type.                    
                </param>
                <return>
                    A vector of <CODE>Integer</CODE> objects containing all the identifiers of
                      timer notifications with the specified <CODE>type</CODE>.
                      <BR>The vector is empty if there is no timer notifications registered for this timer MBean
                      with the specified <CODE>type</CODE>.                    
                </return>
            </javadoc>
            <method name="getNotificationIDs" type="Vector<Integer>" line="803">
                <params>
                    <param name="type" type="String"/>
                </params>
                <declaration name="s" type="String" line="805"/>
                <declaration name="v" type="Vector&lt;Integer&gt;" line="807"/>
                <scope line="809">
                    <declaration name="obj" type="Object[]" line="810"/>
                </scope>
            </method>
            <javadoc line="819">
                Gets the timer notification type corresponding to the specified identifier.                
                <param>
                    id The timer notification identifier.                    
                </param>
                <return>
                    The timer notification type or null if the identifier is not mapped to any
                      timer notification registered for this timer MBean.                    
                </return>
            </javadoc>
            <method name="getNotificationType" type="String" line="827">
                <params>
                    <param name="id" type="Integer"/>
                </params>
                <declaration name="obj" type="Object[]" line="829"/>
                <scope line="830"/>
            </method>
            <javadoc line="836">
                Gets the timer notification detailed message corresponding to the specified identifier.                
                <param>
                    id The timer notification identifier.                    
                </param>
                <return>
                    The timer notification detailed message or null if the identifier is not mapped to any
                      timer notification registered for this timer MBean.                    
                </return>
            </javadoc>
            <method name="getNotificationMessage" type="String" line="844">
                <params>
                    <param name="id" type="Integer"/>
                </params>
                <declaration name="obj" type="Object[]" line="846"/>
                <scope line="847"/>
            </method>
            <javadoc line="853">
                Gets the timer notification user data object corresponding to the specified identifier.                
                <param>
                    id The timer notification identifier.                    
                </param>
                <return>
                    The timer notification user data object or null if the identifier is not mapped to any
                      timer notification registered for this timer MBean.                    
                </return>
            </javadoc>
            <method name="getNotificationUserData" type="Object" line="865">
                <params>
                    <param name="id" type="Integer"/>
                </params>
                <comment line="861">
                    NPCTE fix for bugId 4464388, esc 0, MR, 03 sept 2001, to be added after modification of jmx spec                    
                </comment>
                <comment line="862">
                    public Serializable getNotificationUserData(Integer id) {                    
                </comment>
                <comment line="863">
                    end of NPCTE fix for bugId 4464388                    
                </comment>
                <declaration name="obj" type="Object[]" line="866"/>
                <scope line="867"/>
            </method>
            <javadoc line="873">
                Gets a copy of the date associated to a timer notification.                
                <param>
                    id The timer notification identifier.                    
                </param>
                <return>
                    A copy of the date or null if the identifier is not mapped to any
                      timer notification registered for this timer MBean.                    
                </return>
            </javadoc>
            <method name="getDate" type="Date" line="881">
                <params>
                    <param name="id" type="Integer"/>
                </params>
                <declaration name="obj" type="Object[]" line="883"/>
                <scope line="884">
                    <declaration name="date" type="Date" line="885"/>
                </scope>
            </method>
            <javadoc line="891">
                Gets a copy of the period (in milliseconds) associated to a timer notification.                
                <param>
                    id The timer notification identifier.                    
                </param>
                <return>
                    A copy of the period or null if the identifier is not mapped to any
                      timer notification registered for this timer MBean.                    
                </return>
            </javadoc>
            <method name="getPeriod" type="Long" line="899">
                <params>
                    <param name="id" type="Integer"/>
                </params>
                <declaration name="obj" type="Object[]" line="901"/>
                <scope line="902"/>
            </method>
            <javadoc line="908">
                Gets a copy of the remaining number of occurrences associated to a timer notification.                
                <param>
                    id The timer notification identifier.                    
                </param>
                <return>
                    A copy of the remaining number of occurrences or null if the identifier is not mapped to any
                      timer notification registered for this timer MBean.                    
                </return>
            </javadoc>
            <method name="getNbOccurences" type="Long" line="916">
                <params>
                    <param name="id" type="Integer"/>
                </params>
                <declaration name="obj" type="Object[]" line="918"/>
                <scope line="919"/>
            </method>
            <javadoc line="925">
                Gets a copy of the flag indicating whether a periodic notification is
                  executed at &lt;i&gt;fixed-delay&lt;/i&gt; or at &lt;i&gt;fixed-rate&lt;/i&gt;.                
                <param>
                    id The timer notification identifier.                    
                </param>
                <return>
                    A copy of the flag indicating whether a periodic notification is
                      executed at <i>fixed-delay</i> or at <i>fixed-rate</i>.                    
                </return>
            </javadoc>
            <method name="getFixedRate" type="Boolean" line="934">
                <params>
                    <param name="id" type="Integer"/>
                </params>
                <declaration name="obj" type="Object[]" line="936"/>
                <scope line="937">
                    <declaration name="fixedRate" type="Boolean" line="938"/>
                </scope>
            </method>
            <javadoc line="944">
                Gets the flag indicating whether or not the timer sends past notifications.
                  &lt;BR&gt;The default value of the past notifications sending on/off flag is &lt;CODE&gt;false&lt;/CODE&gt;.                
                <return>
                    The past notifications sending on/off flag value.                    
                </return>
                <see>
                    #setSendPastNotifications                    
                </see>
            </javadoc>
            <method name="getSendPastNotifications" type="boolean" line="952"/>
            <javadoc line="956">
                Sets the flag indicating whether the timer sends past notifications or not.
                  &lt;BR&gt;The default value of the past notifications sending on/off flag is &lt;CODE&gt;false&lt;/CODE&gt;.                
                <param>
                    value The past notifications sending on/off flag value.                    
                </param>
                <see>
                    #getSendPastNotifications                    
                </see>
            </javadoc>
            <method name="setSendPastNotifications" type="void" line="964">
                <params>
                    <param name="value" type="boolean"/>
                </params>
            </method>
            <javadoc line="968">
                Tests whether the timer MBean is active.
                  A timer MBean is marked active when the {@link #start start} method is called.
                  It becomes inactive when the {@link #stop stop} method is called.
                  &lt;BR&gt;The default value of the active on/off flag is &lt;CODE&gt;false&lt;/CODE&gt;.                
                <return>
                    <CODE>true</CODE> if the timer MBean is active, <CODE>false</CODE> otherwise.                    
                </return>
            </javadoc>
            <method name="isActive" type="boolean" line="976"/>
            <javadoc line="980">
                Tests whether the list of timer notifications is empty.                
                <return>
                    <CODE>true</CODE> if the list of timer notifications is empty, <CODE>false</CODE> otherwise.                    
                </return>
            </javadoc>
            <method name="isEmpty" type="boolean" line="985"/>
            <javadoc line="995">
                Sends or not past notifications depending on the specified flag.                
                <param>
                    currentDate The current date.                    
                </param>
                <param>
                    currentFlag The flag indicating if past notifications must be sent or not.                    
                </param>
            </javadoc>
            <method name="sendPastNotifications" type="void" line="1001">
                <params>
                    <param name="currentDate" type="Date"/>
                    <param name="currentFlag" type="boolean"/>
                </params>
                <comment line="1012">
                    Retrieve the timer notification and the date notification.                    
                </comment>
                <comment line="1013">
                                        
                </comment>
                <comment line="1018">
                    Update the timer notification while:                    
                </comment>
                <comment line="1019">
                    - the timer notification date is earlier than the current date                    
                </comment>
                <comment line="1020">
                    - the timer notification has not been removed from the timer table.                    
                </comment>
                <comment line="1021">
                                        
                </comment>
                <comment line="1051">
                    Update the date and the number of occurrences of the timer notification.                    
                </comment>
                <comment line="1052">
                                        
                </comment>
                <declaration name="notif" type="TimerNotification" line="1003"/>
                <declaration name="notifID" type="Integer" line="1004"/>
                <declaration name="date" type="Date" line="1005"/>
                <declaration name="values" type="ArrayList&lt;Object[]&gt;" line="1007"/>
                <scope line="1010">
                    <scope line="1022">
                        <scope line="1024">
                            <scope line="1025">
                                <declaration name="strb" type="StringBuilder" line="1026"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1058">
                If the timer notification is not periodic, it is removed from the list of notifications.
                  &lt;P&gt;
                  If the timer period of the timer notification has a non null periodicity,
                  the date of the timer notification is updated by adding the periodicity.
                  The associated TimerAlarmClock is updated by setting its timeout to the period value.
                  &lt;P&gt;
                  If the timer period has a defined number of occurrences, the timer
                  notification is updated if the number of occurrences has not yet been reached.
                  Otherwise it is removed from the list of notifications.                
                <param>
                    notifID The timer notification identifier to update.                    
                </param>
            </javadoc>
            <method name="updateTimerTable" type="void" line="1071">
                <params>
                    <param name="notifID" type="Integer"/>
                </params>
                <comment line="1073">
                    Retrieve the timer notification and the TimerAlarmClock.                    
                </comment>
                <comment line="1074">
                                        
                </comment>
                <comment line="1084">
                    Update the date and the number of occurrences of the timer notification                    
                </comment>
                <comment line="1085">
                    and the TimerAlarmClock time out.                    
                </comment>
                <comment line="1086">
                    NOTES :                    
                </comment>
                <comment line="1087">
                    nbOccurences = 0 notifies an infinite periodicity.                    
                </comment>
                <comment line="1088">
                    nbOccurences = 1 notifies a finite periodicity that has reached its end.                    
                </comment>
                <comment line="1089">
                    nbOccurences &gt; 1 notifies a finite periodicity that has not yet reached its end.                    
                </comment>
                <comment line="1090">
                                        
                </comment>
                <comment line="1135">
                    alarmClock.interrupt();                    
                </comment>
                <comment line="1136">
                    try {                    
                </comment>
                <comment line="1137">
                    // Wait until the thread die.                    
                </comment>
                <comment line="1138">
                    //                    
                </comment>
                <comment line="1139">
                    alarmClock.join();                    
                </comment>
                <comment line="1140">
                    } catch (InterruptedException e) {                    
                </comment>
                <comment line="1141">
                    // Ignore...                    
                </comment>
                <comment line="1142">
                    }                    
                </comment>
                <comment line="1150">
                    alarmClock.interrupt();                    
                </comment>
                <comment line="1151">
                    try {                    
                </comment>
                <comment line="1152">
                    // Wait until the thread die.                    
                </comment>
                <comment line="1153">
                    //                    
                </comment>
                <comment line="1154">
                    alarmClock.join();                    
                </comment>
                <comment line="1155">
                    } catch (InterruptedException e) {                    
                </comment>
                <comment line="1156">
                    // Ignore...                    
                </comment>
                <comment line="1157">
                    }                    
                </comment>
                <declaration name="obj" type="Object[]" line="1075"/>
                <declaration name="date" type="Date" line="1076"/>
                <declaration name="period" type="Long" line="1077"/>
                <declaration name="nbOccurences" type="Long" line="1078"/>
                <declaration name="fixedRate" type="Boolean" line="1079"/>
                <declaration name="alarmClock" type="TimerAlarmClock" line="1080"/>
                <scope line="1082">
                    <scope line="1091">
                        <scope line="1097">
                            <scope line="1099"/>
                            <scope line="1105"/>
                        </scope>
                        <scope line="1111">
                            <declaration name="notif" type="TimerNotification" line="1112"/>
                            <declaration name="strb" type="StringBuilder" line="1113"/>
                        </scope>
                    </scope>
                    <scope line="1133">
                        <scope line="1134"/>
                    </scope>
                </scope>
                <scope line="1148">
                    <scope line="1149"/>
                </scope>
            </method>
            <javadoc line="1171">
                This method is called by the timer each time
                  the TimerAlarmClock has exceeded its timeout.                
                <param>
                    notification The TimerAlarmClock notification.                    
                </param>
            </javadoc>
            <method name="notifyAlarmClock" type="void" line="1178">
                <params>
                    <param name="notification" type="TimerAlarmClockNotification"/>
                </params>
                <comment line="1183">
                    Retrieve the timer notification associated to the alarm-clock.                    
                </comment>
                <comment line="1184">
                                        
                </comment>
                <comment line="1195">
                    Notify the timer.                    
                </comment>
                <comment line="1196">
                                        
                </comment>
                <comment line="1199">
                    Update the notification and the TimerAlarmClock timeout.                    
                </comment>
                <comment line="1200">
                                        
                </comment>
                <declaration name="timerNotification" type="TimerNotification" line="1180"/>
                <declaration name="timerDate" type="Date" line="1181"/>
                <declaration name="alarmClock" type="TimerAlarmClock" line="1185"/>
                <scope line="1187">
                    <scope line="1188"/>
                </scope>
            </method>
            <javadoc line="1204">
                This method is used by the timer MBean to update and send a timer
                  notification to all the listeners registered for this kind of notification.                
                <param>
                    timeStamp The notification emission date.                    
                </param>
                <param>
                    notification The timer notification to send.                    
                </param>
            </javadoc>
            <method name="sendNotification" type="void" line="1211">
                <params>
                    <param name="timeStamp" type="Date"/>
                    <param name="notification" type="TimerNotification"/>
                </params>
                <scope line="1213">
                    <declaration name="strb" type="StringBuilder" line="1214"/>
                </scope>
                <declaration name="curSeqNumber" type="long" line="1227"/>
                <scope line="1228"/>
                <scope line="1232"/>
            </method>
        </class>
        <class name="TimerAlarmClock" line="1243">
            <extends class="java.util.TimerTask"/>
            <comment line="86">
                ------------------------------------------
                  PUBLIC VARIABLES
                 ------------------------------------------                
            </comment>
            <comment line="122">
                ------------------------------------------
                  PRIVATE VARIABLES
                 ------------------------------------------                
            </comment>
            <comment line="154">
                Flags needed to keep the indexes of the objects in the array.                
            </comment>
            <comment line="155">
                                
            </comment>
            <comment line="171">
                ------------------------------------------
                  CONSTRUCTORS
                 ------------------------------------------                
            </comment>
            <comment line="183">
                ------------------------------------------
                  PUBLIC METHODS
                 ------------------------------------------                
            </comment>
            <comment line="243">
                This overrides the method in NotificationBroadcasterSupport.
                 Return the MBeanNotificationInfo[] array for this MBean.
                 The returned array has one element to indicate that the MBean
                 can emit TimerNotification.  The array of type strings
                 associated with this entry is a snapshot of the current types
                 that were given to addNotification.                
            </comment>
            <comment line="772">
                GETTERS AND SETTERS                
            </comment>
            <comment line="773">
                --------------------                
            </comment>
            <comment line="818">
                5089997: return is Vector&lt;Integer&gt; not Vector&lt;TimerNotification&gt;                
            </comment>
            <comment line="990">
                ------------------------------------------
                  PRIVATE METHODS
                 ------------------------------------------                
            </comment>
            <comment line="1166">
                ------------------------------------------
                  PACKAGE METHODS
                 ------------------------------------------                
            </comment>
            <comment line="1257">
                ------------------------------------------
                  CONSTRUCTORS
                 ------------------------------------------                
            </comment>
            <comment line="1273">
                ------------------------------------------
                  PUBLIC METHODS
                 ------------------------------------------                
            </comment>
            <javadoc line="1243">
                TimerAlarmClock inner class:
                  This class provides a simple implementation of an alarm clock MBean.
                  The aim of this MBean is to set up an alarm which wakes up the timer every timeout (fixed-delay)
                  or at the specified date (fixed-rate).                
            </javadoc>
            <declaration name="listener" type="Timer" line="1252"/>
            <declaration name="timeout" type="long" line="1253"/>
            <declaration name="next" type="Date" line="1254"/>
            <method name="TimerAlarmClock" type="constructor" line="1262">
                <params>
                    <param name="listener" type="Timer"/>
                    <param name="timeout" type="long"/>
                </params>
            </method>
            <method name="TimerAlarmClock" type="constructor" line="1267">
                <params>
                    <param name="listener" type="Timer"/>
                    <param name="next" type="Date"/>
                </params>
            </method>
            <javadoc line="1278">
                This method is called by the timer when it is started.                
            </javadoc>
            <method name="run" type="void" line="1281">
                <comment line="1284">
                    this.sleep(timeout);                    
                </comment>
                <scope line="1283">
                    <declaration name="notif" type="TimerAlarmClockNotification" line="1285"/>
                </scope>
                <scope line="1287"/>
            </method>
        </class>
    </source>