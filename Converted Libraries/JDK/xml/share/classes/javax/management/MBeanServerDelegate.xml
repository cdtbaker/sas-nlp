<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management">
        <import package="com.sun.jmx.defaults.JmxProperties"/>
        <import package="com.sun.jmx.defaults.ServiceName"/>
        <import package="com.sun.jmx.mbeanserver.Util"/>
        <class name="MBeanServerDelegate" line="32">
            <comment line="158">
                From NotificationEmitter extends NotificationBroacaster                
            </comment>
            <comment line="168">
                From NotificationEmitter extends NotificationBroacaster                
            </comment>
            <comment line="178">
                From NotificationEmitter extends NotificationBroacaster                
            </comment>
            <comment line="188">
                From NotificationEmitter extends NotificationBroacaster                
            </comment>
            <comment line="221">
                Return a timestamp that is monotonically increasing even if
                System.currentTimeMillis() isn&apos;t (for example, if you call this
                constructor more than once in the same millisecond, or if the
                clock always returns the same value).  This means that the ids
                for a given JVM will always be distinact, though there is no                
            </comment>
            <implements interface="MBeanServerDelegateMBean"/>
            <implements interface="NotificationEmitter"/>
            <javadoc line="32">
                Represents  the MBean server from the management point of view.
                  The MBeanServerDelegate MBean emits the MBeanServerNotifications when
                  an MBean is registered/unregistered in the MBean server.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="mbeanServerId" type="String" line="42"/>
            <javadoc line="42">
                The MBean server agent identification.                
            </javadoc>
            <declaration name="broadcaster" type="NotificationBroadcasterSupport" line="45"/>
            <javadoc line="45">
                The NotificationBroadcasterSupport object that sends the
                  notifications                
            </javadoc>
            <declaration name="oldStamp" type="long" line="49"/>
            <declaration name="stamp" type="long" line="50"/>
            <declaration name="sequenceNumber" type="long" line="51"/>
            <declaration name="notifsInfo" type="MBeanNotificationInfo[]" line="53"/>
            <scope line="55">
                <declaration name="types" type="String[]" line="56"/>
            </scope>
            <javadoc line="67">
                Create a MBeanServerDelegate object.                
            </javadoc>
            <method name="MBeanServerDelegate" type="constructor" line="70"/>
            <javadoc line="76">
                Returns the MBean server agent identity.                
                <return>
                    the identity.                    
                </return>
            </javadoc>
            <method name="getMBeanServerId" type="String" line="81">
                <scope line="82">
                    <declaration name="localHost" type="String" line="83"/>
                    <scope line="84"/>
                    <scope line="86"/>
                </scope>
            </method>
            <javadoc line="96">
                Returns the full name of the JMX specification implemented
                  by this product.                
                <return>
                    the specification name.                    
                </return>
            </javadoc>
            <method name="getSpecificationName" type="String" line="102"/>
            <javadoc line="106">
                Returns the version of the JMX specification implemented
                  by this product.                
                <return>
                    the specification version.                    
                </return>
            </javadoc>
            <method name="getSpecificationVersion" type="String" line="112"/>
            <javadoc line="116">
                Returns the vendor of the JMX specification implemented
                  by this product.                
                <return>
                    the specification vendor.                    
                </return>
            </javadoc>
            <method name="getSpecificationVendor" type="String" line="122"/>
            <javadoc line="126">
                Returns the JMX implementation name (the name of this product).                
                <return>
                    the implementation name.                    
                </return>
            </javadoc>
            <method name="getImplementationName" type="String" line="131"/>
            <javadoc line="135">
                Returns the JMX implementation version (the version of this product).                
                <return>
                    the implementation version.                    
                </return>
            </javadoc>
            <method name="getImplementationVersion" type="String" line="140">
                <scope line="141"/>
                <scope line="143"/>
            </method>
            <javadoc line="148">
                Returns the JMX implementation vendor (the vendor of this product).                
                <return>
                    the implementation vendor.                    
                </return>
            </javadoc>
            <method name="getImplementationVendor" type="String" line="153"/>
            <method name="getNotificationInfo" type="MBeanNotificationInfo[]" line="159">
                <declaration name="len" type="int" line="160"/>
                <declaration name="infos" type="MBeanNotificationInfo[]" line="161"/>
            </method>
            <method name="addNotificationListener" type="void" line="173">
                <params>
                    <param name="listener" type="NotificationListener"/>
                    <param name="filter" type="NotificationFilter"/>
                    <param name="handback" type="Object"/>
                </params>
            </method>
            <method name="removeNotificationListener" type="void" line="183">
                <params>
                    <param name="listener" type="NotificationListener"/>
                    <param name="filter" type="NotificationFilter"/>
                    <param name="handback" type="Object"/>
                </params>
            </method>
            <method name="removeNotificationListener" type="void" line="191">
                <params>
                    <param name="listener" type="NotificationListener"/>
                </params>
            </method>
            <javadoc line="195">
                Enables the MBean server to send a notification.
                  If the passed &lt;var&gt;notification&lt;/var&gt; has a sequence number lesser
                  or equal to 0, then replace it with the delegate&apos;s own sequence
                  number.                
                <param>
                    notification The notification to send.                    
                </param>
            </javadoc>
            <method name="sendNotification" type="void" line="203">
                <params>
                    <param name="notification" type="Notification"/>
                </params>
                <scope line="204">
                    <scope line="205"/>
                </scope>
            </method>
            <declaration name="DELEGATE_NAME" type="ObjectName" line="212"/>
            <javadoc line="212">
                Defines the default ObjectName of the MBeanServerDelegate.                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="getStamp" type="long" line="226">
                <declaration name="s" type="long" line="227"/>
                <scope line="228"/>
            </method>
        </class>
    </source>