<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management">
        <import package="com.sun.jmx.mbeanserver.JmxMBeanServer"/>
        <class name="MBeanServerBuilder" line="30">
            <javadoc line="30">
                &lt;p&gt;This class represents a builder that creates a default{@link javax.management.MBeanServer} implementation.
                  The JMX {@link javax.management.MBeanServerFactory} allows
                  applications to provide their custom MBeanServer
                  implementation by providing a subclass of this class.&lt;/p&gt;                
                <see>
                    MBeanServer                    
                </see>
                <see>
                    MBeanServerFactory                    
                </see>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <javadoc line="43">
                Public default constructor.                
            </javadoc>
            <method name="MBeanServerBuilder" type="constructor" line="46"/>
            <javadoc line="49">
                This method creates a new MBeanServerDelegate for a new MBeanServer.
                  When creating a new MBeanServer the{@link javax.management.MBeanServerFactory} first calls this method
                  in order to create a new MBeanServerDelegate.
                  &lt;br&gt;Then it calls
                  &lt;code&gt;newMBeanServer(defaultDomain,outer,delegate)&lt;/code&gt;
                  passing the &lt;var&gt;delegate&lt;/var&gt; that should be used by the MBeanServer
                  implementation.
                  &lt;p&gt;Note that the passed &lt;var&gt;delegate&lt;/var&gt; might not be directly the
                  MBeanServerDelegate that was returned by this method. It could
                  be, for instance, a new object wrapping the previously
                  returned object.                
                <return>
                    A new {@link javax.management.MBeanServerDelegate}.                    
                </return>
            </javadoc>
            <method name="newMBeanServerDelegate" type="MBeanServerDelegate" line="65"/>
            <javadoc line="69">
                This method creates a new MBeanServer implementation object.
                  When creating a new MBeanServer the{@link javax.management.MBeanServerFactory} first calls
                  &lt;code&gt;newMBeanServerDelegate()&lt;/code&gt; in order to obtain a new{@link javax.management.MBeanServerDelegate} for the new
                  MBeanServer. Then it calls
                  &lt;code&gt;newMBeanServer(defaultDomain,outer,delegate)&lt;/code&gt;
                  passing the &lt;var&gt;delegate&lt;/var&gt; that should be used by the MBeanServer
                  implementation.
                  &lt;p&gt;Note that the passed &lt;var&gt;delegate&lt;/var&gt; might not be directly the
                  MBeanServerDelegate that was returned by this implementation. It could
                  be, for instance, a new object wrapping the previously
                  returned delegate.
                  &lt;p&gt;The &lt;var&gt;outer&lt;/var&gt; parameter is a pointer to the MBeanServer that
                  should be passed to the {@link javax.management.MBeanRegistration}interface when registering MBeans inside the MBeanServer.
                  If &lt;var&gt;outer&lt;/var&gt; is &lt;code&gt;null&lt;/code&gt;, then the MBeanServer
                  implementation must use its own &lt;code&gt;this&lt;/code&gt; reference when
                  invoking the {@link javax.management.MBeanRegistration} interface.
                  &lt;p&gt;This makes it possible for a MBeanServer implementation to wrap
                  another MBeanServer implementation, in order to implement, e.g,
                  security checks, or to prevent access to the actual MBeanServer
                  implementation by returning a pointer to a wrapping object.                
                <param>
                    defaultDomain Default domain of the new MBeanServer.                    
                </param>
                <param>
                    outer A pointer to the MBeanServer object that must be
                      passed to the MBeans when invoking their{@link javax.management.MBeanRegistration} interface.                    
                </param>
                <param>
                    delegate A pointer to the MBeanServerDelegate associated
                      with the new MBeanServer. The new MBeanServer must register
                      this MBean in its MBean repository.                    
                </param>
                <return>
                    A new private implementation of an MBeanServer.                    
                </return>
            </javadoc>
            <method name="newMBeanServer" type="MBeanServer" line="106">
                <params>
                    <param name="defaultDomain" type="String"/>
                    <param name="outer" type="MBeanServer"/>
                    <param name="delegate" type="MBeanServerDelegate"/>
                </params>
                <comment line="108">
                    By default, MBeanServerInterceptors are disabled.
                     Use com.sun.jmx.mbeanserver.MBeanServerBuilder to obtain
                     MBeanServers on which MBeanServerInterceptors are enabled.                    
                </comment>
            </method>
        </class>
    </source>