<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management">
        <class name="StringValueExp" line="30">
            <comment line="39">
                                
            </comment>
            <implements interface="ValueExp"/>
            <javadoc line="30">
                Represents strings that are arguments to relational constraints.
                  A &lt;CODE&gt;StringValueExp&lt;/CODE&gt; may be used anywhere a &lt;CODE&gt;ValueExp&lt;/CODE&gt; is required.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="39"/>
            <declaration name="val" type="String" line="41"/>
            <javadoc line="41">
                @serial The string literal                
            </javadoc>
            <javadoc line="46">
                Basic constructor.                
            </javadoc>
            <method name="StringValueExp" type="constructor" line="49"/>
            <javadoc line="52">
                Creates a new &lt;CODE&gt;StringValueExp&lt;/CODE&gt; representing the
                  given string.                
                <param>
                    val the string that will be the value of this expression                    
                </param>
            </javadoc>
            <method name="StringValueExp" type="constructor" line="58">
                <params>
                    <param name="val" type="String"/>
                </params>
            </method>
            <javadoc line="62">
                Returns the string represented by the
                  &lt;CODE&gt;StringValueExp&lt;/CODE&gt; instance.                
                <return>
                    the string.                    
                </return>
            </javadoc>
            <method name="getValue" type="String" line="68"/>
            <javadoc line="72">
                Returns the string representing the object.                
            </javadoc>
            <method name="toString" type="String" line="75"/>
            <javadoc line="80">
                Sets the MBean server on which the query is to be performed.                
                <param>
                    s The MBean server on which the query is to be performed.                    
                </param>
            </javadoc>
            <method name="setMBeanServer" type="void" line="89">
                <params>
                    <param name="s" type="MBeanServer"/>
                </params>
                <comment line="86">
                    There is no need for this method, because if a query is being
                    evaluated a StringValueExp can only appear inside a QueryExp,                    
                </comment>
            </method>
            <javadoc line="91">
                Applies the ValueExp on a MBean.                
                <param>
                    name The name of the MBean on which the ValueExp will be applied.                    
                </param>
                <return>
                    The <CODE>ValueExp</CODE>.                    
                </return>
                <exception>
                    BadStringOperationException                    
                </exception>
                <exception>
                    BadBinaryOpValueExpException                    
                </exception>
                <exception>
                    BadAttributeValueExpException                    
                </exception>
                <exception>
                    InvalidApplicationException                    
                </exception>
            </javadoc>
            <method name="apply" type="ValueExp" line="104">
                <params>
                    <param name="name" type="ObjectName"/>
                </params>
            </method>
        </class>
    </source>