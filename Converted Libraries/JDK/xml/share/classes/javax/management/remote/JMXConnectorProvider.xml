<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.remote">
        <import package="java.io.IOException"/>
        <import package="java.util.Map"/>
        <interface name="JMXConnectorProvider">
            <javadoc line="4">
                &lt;p&gt;A provider for creating JMX API connector clients using a given
                  protocol.  Instances of this interface are created by {@link JMXConnectorFactory} as part of its {@link JMXConnectorFactory#newJMXConnector(JMXServiceURL,Map)newJMXConnector} method.&lt;/p&gt;                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="newJMXConnector" type="JMXConnector" line="10"/>
            <javadoc line="10">
                &lt;p&gt;Creates a new connector client that is ready to connect
                  to the connector server at the given address.  Each successful
                  call to this method produces a different
                  &lt;code&gt;JMXConnector&lt;/code&gt; object.&lt;/p&gt;                
                <param>
                    serviceURL the address of the connector server to connect to.                    
                </param>
                <param>
                    environment a read-only Map containing named attributes
                      to determine how the connection is made.  Keys in this map must
                      be Strings.  The appropriate type of each associated value
                      depends on the attribute.</p>                    
                </param>
                <return>
                    a <code>JMXConnector</code> representing the new
                      connector client.  Each successful call to this method produces
                      a different object.                    
                </return>
                <exception>
                    NullPointerException if <code>serviceURL</code> or
                      <code>environment</code> is null.                    
                </exception>
                <exception>
                    IOException It is recommended for a provider
                      implementation to throw {@code MalformedURLException} if the
                      protocol in the {@code serviceURL} is not recognized by this
                      provider, {@code JMXProviderException} if this is a provider
                      for the protocol in {@code serviceURL} but it cannot be used
                      for some reason or any other {@code IOException} if the
                      connection cannot be made because of a communication problem.                    
                </exception>
            </javadoc>
        </interface>
    </source>