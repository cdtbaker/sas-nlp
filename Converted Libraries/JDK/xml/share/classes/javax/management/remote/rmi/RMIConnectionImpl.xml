<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.remote.rmi">
        <import package="com.sun.jmx.mbeanserver.Util.cast"/>
        <import package="com.sun.jmx.remote.internal.ServerCommunicatorAdmin"/>
        <import package="com.sun.jmx.remote.internal.ServerNotifForwarder"/>
        <import package="com.sun.jmx.remote.security.JMXSubjectDomainCombiner"/>
        <import package="com.sun.jmx.remote.security.SubjectDelegator"/>
        <import package="com.sun.jmx.remote.util.ClassLoaderWithRepository"/>
        <import package="com.sun.jmx.remote.util.ClassLogger"/>
        <import package="com.sun.jmx.remote.util.EnvHelp"/>
        <import package="com.sun.jmx.remote.util.OrderClassLoaders"/>
        <import package="java.io.IOException"/>
        <import package="java.rmi.MarshalledObject"/>
        <import package="java.rmi.UnmarshalException"/>
        <import package="java.rmi.server.Unreferenced"/>
        <import package="java.security.AccessControlContext"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.security.PrivilegedActionException"/>
        <import package="java.security.PrivilegedExceptionAction"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.Collections"/>
        <import package="java.util.Map"/>
        <import package="java.util.Set"/>
        <import package="javax.management.Attribute"/>
        <import package="javax.management.AttributeList"/>
        <import package="javax.management.AttributeNotFoundException"/>
        <import package="javax.management.InstanceAlreadyExistsException"/>
        <import package="javax.management.InstanceNotFoundException"/>
        <import package="javax.management.IntrospectionException"/>
        <import package="javax.management.InvalidAttributeValueException"/>
        <import package="javax.management.ListenerNotFoundException"/>
        <import package="javax.management.MBeanException"/>
        <import package="javax.management.MBeanInfo"/>
        <import package="javax.management.MBeanRegistrationException"/>
        <import package="javax.management.MBeanServer"/>
        <import package="javax.management.NotCompliantMBeanException"/>
        <import package="javax.management.NotificationFilter"/>
        <import package="javax.management.ObjectInstance"/>
        <import package="javax.management.ObjectName"/>
        <import package="javax.management.QueryExp"/>
        <import package="javax.management.ReflectionException"/>
        <import package="javax.management.RuntimeOperationsException"/>
        <import package="javax.management.remote.JMXServerErrorException"/>
        <import package="javax.management.remote.NotificationResult"/>
        <import package="javax.management.remote.TargetedNotification"/>
        <import package="javax.security.auth.Subject"/>
        <class name="RMIConnectionImpl" line="47">
            <implements interface="RMIConnection"/>
            <implements interface="Unreferenced"/>
            <javadoc line="47">
                &lt;p&gt;Implementation of the {@link RMIConnection} interface.  User
                  code will not usually reference this class.&lt;/p&gt;                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <javadoc line="53">
                Constructs a new {@link RMIConnection}. This connection can be
                  used with either the JRMP or IIOP transport. This object does
                  not export itself: it is the responsibility of the caller to
                  export it appropriately (see {@link RMIJRMPServerImpl#makeClient(String,Subject)} and {@link RMIIIOPServerImpl#makeClient(String,Subject)}.                
                <param>
                    rmiServer The RMIServerImpl object for which this
                      connection is created.  The behavior is unspecified if this
                      parameter is null.                    
                </param>
                <param>
                    connectionId The ID for this connection.  The behavior
                      is unspecified if this parameter is null.                    
                </param>
                <param>
                    defaultClassLoader The default ClassLoader to be used
                      when deserializing marshalled objects.  Can be null, to signify
                      the bootstrap class loader.                    
                </param>
                <param>
                    subject the authenticated subject to be used for
                      authorization.  Can be null, to signify that no subject has
                      been authenticated.                    
                </param>
                <param>
                    env the environment containing attributes for the new
                      &lt;code&gt;RMIServerImpl&lt;/code&gt;.  Can be null, equivalent to an
                      empty map.                    
                </param>
            </javadoc>
            <method name="RMIConnectionImpl" type="constructor" line="73">
                <params>
                    <param name="rmiServer" type="RMIServerImpl"/>
                    <param name="connectionId" type="String"/>
                    <param name="defaultClassLoader" type="ClassLoader"/>
                    <param name="subject" type="Subject"/>
                    <param name="env" type="Map&lt;String,?&gt;"/>
                </params>
                <scope line="81"/>
                <scope line="85">
                    <scope line="87"/>
                    <scope line="90"/>
                </scope>
                <declaration name="dcl" type="ClassLoader" line="95"/>
                <anonymous_class line="96">
                    <method name="run" type="ClassLoaderWithRepository" line="97"/>
                </anonymous_class>
            </method>
            <method name="getServerNotifFwd" type="ServerNotifForwarder" line="105"/>
            <method name="getConnectionId" type="String" line="109"/>
            <method name="close" type="void" line="112">
                <declaration name="debug" type="boolean" line="113"/>
                <declaration name="idstr" type="String" line="114"/>
                <scope line="115">
                    <scope line="116"/>
                    <scope line="122"/>
                    <scope line="125"/>
                </scope>
            </method>
            <method name="unreferenced" type="void" line="132">
                <scope line="134"/>
                <scope line="138"/>
            </method>
            <method name="createMBean" type="ObjectInstance" line="142">
                <params>
                    <param name="className" type="String"/>
                    <param name="name" type="ObjectName"/>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <scope line="143">
                    <declaration name="params" type="Object" line="144"/>
                </scope>
                <scope line="148">
                    <declaration name="e" type="Exception" line="149"/>
                </scope>
            </method>
            <method name="createMBean" type="ObjectInstance" line="159">
                <params>
                    <param name="className" type="String"/>
                    <param name="name" type="ObjectName"/>
                    <param name="loaderName" type="ObjectName"/>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <scope line="160">
                    <declaration name="params" type="Object" line="161"/>
                </scope>
                <scope line="165">
                    <declaration name="e" type="Exception" line="166"/>
                </scope>
            </method>
            <method name="createMBean" type="ObjectInstance" line="177">
                <params>
                    <param name="className" type="String"/>
                    <param name="name" type="ObjectName"/>
                    <param name="params" type="MarshalledObject"/>
                    <param name="signature" type="String"/>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <declaration name="values" type="Object[]" line="178"/>
                <declaration name="debug" type="boolean" line="179"/>
                <scope line="182">
                    <declaration name="params2" type="Object" line="183"/>
                </scope>
                <scope line="187">
                    <declaration name="e" type="Exception" line="188"/>
                </scope>
            </method>
            <method name="createMBean" type="ObjectInstance" line="198">
                <params>
                    <param name="className" type="String"/>
                    <param name="name" type="ObjectName"/>
                    <param name="loaderName" type="ObjectName"/>
                    <param name="params" type="MarshalledObject"/>
                    <param name="signature" type="String"/>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <declaration name="values" type="Object[]" line="199"/>
                <declaration name="debug" type="boolean" line="200"/>
                <scope line="203">
                    <declaration name="params2" type="Object" line="204"/>
                </scope>
                <scope line="208">
                    <declaration name="e" type="Exception" line="209"/>
                </scope>
            </method>
            <method name="unregisterMBean" type="void" line="220">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <scope line="221">
                    <declaration name="params" type="Object" line="222"/>
                </scope>
                <scope line="226">
                    <declaration name="e" type="Exception" line="227"/>
                </scope>
            </method>
            <method name="getObjectInstance" type="ObjectInstance" line="234">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <scope line="236">
                    <declaration name="params" type="Object" line="237"/>
                </scope>
                <scope line="241">
                    <declaration name="e" type="Exception" line="242"/>
                </scope>
            </method>
            <method name="queryMBeans" type="Set&lt;ObjectInstance&gt;" line="248">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="query" type="MarshalledObject"/>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <declaration name="queryValue" type="QueryExp" line="249"/>
                <declaration name="debug" type="boolean" line="250"/>
                <scope line="253">
                    <declaration name="params" type="Object" line="254"/>
                </scope>
                <scope line="258">
                    <declaration name="e" type="Exception" line="259"/>
                </scope>
            </method>
            <method name="queryNames" type="Set&lt;ObjectName&gt;" line="264">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="query" type="MarshalledObject"/>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <declaration name="queryValue" type="QueryExp" line="265"/>
                <declaration name="debug" type="boolean" line="266"/>
                <scope line="269">
                    <declaration name="params" type="Object" line="270"/>
                </scope>
                <scope line="274">
                    <declaration name="e" type="Exception" line="275"/>
                </scope>
            </method>
            <method name="isRegistered" type="boolean" line="280">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <scope line="281">
                    <declaration name="params" type="Object" line="282"/>
                </scope>
                <scope line="285">
                    <declaration name="e" type="Exception" line="286"/>
                </scope>
            </method>
            <method name="getMBeanCount" type="Integer" line="291">
                <params>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <scope line="292">
                    <declaration name="params" type="Object" line="293"/>
                </scope>
                <scope line="297">
                    <declaration name="e" type="Exception" line="298"/>
                </scope>
            </method>
            <method name="getAttribute" type="Object" line="303">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="attribute" type="String"/>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <scope line="304">
                    <declaration name="params" type="Object" line="305"/>
                </scope>
                <scope line="309">
                    <declaration name="e" type="Exception" line="310"/>
                </scope>
            </method>
            <method name="getAttributes" type="AttributeList" line="319">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="attributes" type="String[]"/>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <scope line="320">
                    <declaration name="params" type="Object" line="321"/>
                </scope>
                <scope line="325">
                    <declaration name="e" type="Exception" line="326"/>
                </scope>
            </method>
            <method name="setAttribute" type="void" line="333">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="attribute" type="MarshalledObject"/>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <declaration name="attr" type="Attribute" line="334"/>
                <declaration name="debug" type="boolean" line="335"/>
                <scope line="338">
                    <declaration name="params" type="Object" line="339"/>
                </scope>
                <scope line="343">
                    <declaration name="e" type="Exception" line="344"/>
                </scope>
            </method>
            <method name="setAttributes" type="AttributeList" line="354">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="attributes" type="MarshalledObject"/>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <declaration name="attrlist" type="AttributeList" line="355"/>
                <declaration name="debug" type="boolean" line="356"/>
                <scope line="359">
                    <declaration name="params" type="Object" line="360"/>
                </scope>
                <scope line="364">
                    <declaration name="e" type="Exception" line="365"/>
                </scope>
            </method>
            <method name="invoke" type="Object" line="372">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="operationName" type="String"/>
                    <param name="params" type="MarshalledObject"/>
                    <param name="signature" type="String"/>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <declaration name="values" type="Object[]" line="375"/>
                <declaration name="debug" type="boolean" line="376"/>
                <scope line="379">
                    <declaration name="params2" type="Object" line="380"/>
                </scope>
                <scope line="384">
                    <declaration name="e" type="Exception" line="385"/>
                </scope>
            </method>
            <method name="getDefaultDomain" type="String" line="393">
                <params>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <scope line="394">
                    <declaration name="params" type="Object" line="395"/>
                </scope>
                <scope line="399">
                    <declaration name="e" type="Exception" line="400"/>
                </scope>
            </method>
            <method name="getDomains" type="String[]" line="405">
                <params>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <scope line="406">
                    <declaration name="params" type="Object" line="407"/>
                </scope>
                <scope line="411">
                    <declaration name="e" type="Exception" line="412"/>
                </scope>
            </method>
            <method name="getMBeanInfo" type="MBeanInfo" line="417">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <scope line="419">
                    <declaration name="params" type="Object" line="420"/>
                </scope>
                <scope line="424">
                    <declaration name="e" type="Exception" line="425"/>
                </scope>
            </method>
            <method name="isInstanceOf" type="boolean" line="433">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="className" type="String"/>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <scope line="435">
                    <declaration name="params" type="Object" line="436"/>
                </scope>
                <scope line="440">
                    <declaration name="e" type="Exception" line="441"/>
                </scope>
            </method>
            <method name="addNotificationListeners" type="Integer[]" line="447">
                <params>
                    <param name="names" type="ObjectName[]"/>
                    <param name="filters" type="MarshalledObject[]"/>
                    <param name="delegationSubjects" type="Subject[]"/>
                </params>
                <scope line="448"/>
                <declaration name="sbjs" type="Subject[]" line="451"/>
                <scope line="452">
                    <declaration name="msg" type="String" line="453"/>
                </scope>
                <scope line="456">
                    <scope line="457"/>
                </scope>
                <declaration name="i" type="int" line="461"/>
                <declaration name="targetCl" type="ClassLoader" line="462"/>
                <declaration name="filterValues" type="NotificationFilter[]" line="463"/>
                <declaration name="ids" type="Integer[]" line="464"/>
                <declaration name="debug" type="boolean" line="465"/>
                <scope line="466">
                    <scope line="467"/>
                </scope>
                <scope line="476">
                    <scope line="477">
                        <scope line="478"/>
                        <scope line="481"/>
                    </scope>
                    <scope line="484"/>
                    <scope line="487"/>
                    <scope line="490"/>
                    <scope line="493"/>
                    <scope line="496"/>
                    <scope line="499"/>
                </scope>
            </method>
            <method name="addNotificationListener" type="void" line="504">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="listener" type="ObjectName"/>
                    <param name="filter" type="MarshalledObject"/>
                    <param name="handback" type="MarshalledObject"/>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <declaration name="filterValue" type="NotificationFilter" line="507"/>
                <declaration name="handbackValue" type="Object" line="508"/>
                <declaration name="debug" type="boolean" line="509"/>
                <declaration name="targetCl" type="ClassLoader" line="510"/>
                <scope line="515">
                    <declaration name="params" type="Object" line="516"/>
                </scope>
                <scope line="520">
                    <declaration name="e" type="Exception" line="521"/>
                </scope>
            </method>
            <method name="removeNotificationListeners" type="void" line="527">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="listenerIDs" type="Integer[]"/>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <scope line="529"/>
                <scope line="532">
                    <declaration name="params" type="Object" line="533"/>
                </scope>
                <scope line="537">
                    <declaration name="e" type="Exception" line="538"/>
                </scope>
            </method>
            <method name="removeNotificationListener" type="void" line="545">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="listener" type="ObjectName"/>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <scope line="548">
                    <declaration name="params" type="Object" line="549"/>
                </scope>
                <scope line="553">
                    <declaration name="e" type="Exception" line="554"/>
                </scope>
            </method>
            <method name="removeNotificationListener" type="void" line="561">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="listener" type="ObjectName"/>
                    <param name="filter" type="MarshalledObject"/>
                    <param name="handback" type="MarshalledObject"/>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <declaration name="filterValue" type="NotificationFilter" line="564"/>
                <declaration name="handbackValue" type="Object" line="565"/>
                <declaration name="debug" type="boolean" line="566"/>
                <declaration name="targetCl" type="ClassLoader" line="567"/>
                <scope line="572">
                    <declaration name="params" type="Object" line="573"/>
                </scope>
                <scope line="577">
                    <declaration name="e" type="Exception" line="578"/>
                </scope>
            </method>
            <method name="fetchNotifications" type="NotificationResult" line="585">
                <params>
                    <param name="clientSequenceNumber" type="long"/>
                    <param name="maxNotifications" type="int"/>
                    <param name="timeout" type="long"/>
                </params>
                <declaration name="serverTerminated" type="boolean" line="588"/>
                <scope line="589">
                    <scope line="590"/>
                    <declaration name="csn" type="long" line="593"/>
                    <declaration name="mn" type="int" line="594"/>
                    <declaration name="t" type="long" line="595"/>
                    <anonymous_class line="596">
                        <method name="run" type="NotificationResult" line="597"/>
                    </anonymous_class>
                    <declaration name="action" type="PrivilegedAction&amp;lt;NotificationResult&amp;gt;" line="596"/>
                </scope>
                <scope line="605"/>
            </method>
            <javadoc line="609">
                &lt;p&gt;Returns a string representation of this object.  In general,
                  the &lt;code&gt;toString&lt;/code&gt; method returns a string that
                  &quot;textually represents&quot; this object. The result should be a
                  concise but informative representation that is easy for a
                  person to read.&lt;/p&gt;                
                <return>
                    a String representation of this object.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="617"/>
            <class name="PrivilegedOperation" line="620">
                <implements interface="PrivilegedExceptionAction">
                    <type_params>
                        <type_param name="Object"/>
                    </type_params>
                </implements>
                <method name="PrivilegedOperation" type="constructor" line="621">
                    <params>
                        <param name="operation" type="int"/>
                        <param name="params" type="Object[]"/>
                    </params>
                </method>
                <method name="run" type="Object" line="625"/>
                <declaration name="operation" type="int" line="628"/>
                <declaration name="params" type="Object[]" line="629"/>
            </class>
            <class name="RMIServerCommunicatorAdmin" line="631">
                <extends class="ServerCommunicatorAdmin"/>
                <method name="RMIServerCommunicatorAdmin" type="constructor" line="632">
                    <params>
                        <param name="timeout" type="long"/>
                    </params>
                </method>
                <method name="doStop" type="void" line="635">
                    <scope line="636"/>
                    <scope line="639"/>
                </method>
            </class>
            <method name="getClassLoader" type="ClassLoader" line="645">
                <params>
                    <param name="name" type="ObjectName"/>
                </params>
                <scope line="646">
                    <anonymous_class line="647">
                        <method name="run" type="ClassLoader" line="648"/>
                    </anonymous_class>
                </scope>
                <scope line="654"/>
            </method>
            <method name="getClassLoaderFor" type="ClassLoader" line="658">
                <params>
                    <param name="name" type="ObjectName"/>
                </params>
                <scope line="659">
                    <anonymous_class line="660">
                        <method name="run" type="Object" line="661"/>
                    </anonymous_class>
                </scope>
                <scope line="667"/>
            </method>
            <method name="doPrivilegedOperation" type="Object" line="671">
                <params>
                    <param name="operation" type="int"/>
                    <param name="params" type="Object[]"/>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <scope line="673">
                    <declaration name="reqACC" type="AccessControlContext" line="674"/>
                    <scope line="676">
                        <scope line="677">
                            <declaration name="msg" type="String" line="678"/>
                        </scope>
                    </scope>
                    <declaration name="op" type="PrivilegedOperation" line="683"/>
                    <scope line="684">
                        <scope line="685"/>
                        <scope line="688"/>
                    </scope>
                    <scope line="693"/>
                </scope>
                <scope line="697"/>
                <scope line="700"/>
            </method>
            <method name="doOperation" type="Object" line="704">
                <params>
                    <param name="operation" type="int"/>
                    <param name="params" type="Object[]"/>
                </params>
            </method>
            <class name="SetCcl" line="764">
                <implements interface="PrivilegedExceptionAction">
                    <type_params>
                        <type_param name="ClassLoader"/>
                    </type_params>
                </implements>
                <declaration name="classLoader" type="ClassLoader" line="765"/>
                <method name="SetCcl" type="constructor" line="766">
                    <params>
                        <param name="classLoader" type="ClassLoader"/>
                    </params>
                </method>
                <method name="run" type="ClassLoader" line="769">
                    <declaration name="currentThread" type="Thread" line="770"/>
                    <declaration name="old" type="ClassLoader" line="771"/>
                </method>
            </class>
            <method name="unwrap" type="T" line="776">
                <params>
                    <param name="mo" type="MarshalledObject&lt;?&gt;"/>
                    <param name="cl" type="ClassLoader"/>
                    <param name="wrappedClass" type="Class&lt;T&gt;"/>
                </params>
                <scope line="777"/>
                <scope line="780">
                    <declaration name="old" type="ClassLoader" line="781"/>
                    <scope line="782"/>
                    <scope line="785"/>
                    <scope line="788"/>
                </scope>
                <scope line="792">
                    <declaration name="e" type="Exception" line="793"/>
                    <scope line="794"/>
                    <scope line="797"/>
                </scope>
            </method>
            <method name="unwrap" type="T" line="805">
                <params>
                    <param name="mo" type="MarshalledObject&lt;?&gt;"/>
                    <param name="cl1" type="ClassLoader"/>
                    <param name="cl2" type="ClassLoader"/>
                    <param name="wrappedClass" type="Class&lt;T&gt;"/>
                </params>
                <scope line="806"/>
                <scope line="809">
                    <anonymous_class line="810">
                        <method name="run" type="ClassLoader" line="811"/>
                    </anonymous_class>
                    <declaration name="orderCL" type="ClassLoader" line="810"/>
                </scope>
                <scope line="818">
                    <declaration name="e" type="Exception" line="819"/>
                    <scope line="820"/>
                    <scope line="823"/>
                </scope>
            </method>
            <javadoc line="831">
                Construct a new IOException with a nested exception.
                  The nested exception is set only if JDK &gt;= 1.4                
            </javadoc>
            <method name="newIOException" type="IOException" line="835">
                <params>
                    <param name="message" type="String"/>
                    <param name="cause" type="Throwable"/>
                </params>
                <declaration name="x" type="IOException" line="836"/>
            </method>
            <javadoc line="839">
                Iterate until we extract the real exception
                  from a stack of PrivilegedActionExceptions.                
            </javadoc>
            <method name="extractException" type="Exception" line="843">
                <params>
                    <param name="e" type="Exception"/>
                </params>
                <scope line="844"/>
            </method>
            <declaration name="NO_OBJECTS" type="Object[]" line="849"/>
            <declaration name="NO_STRINGS" type="String[]" line="850"/>
            <method name="nullIsEmpty" type="Object[]" line="851">
                <params>
                    <param name="array" type="Object[]"/>
                </params>
            </method>
            <method name="nullIsEmpty" type="String[]" line="854">
                <params>
                    <param name="array" type="String[]"/>
                </params>
            </method>
            <method name="checkNonNull" type="void" line="857">
                <params>
                    <param name="what" type="String"/>
                    <param name="x" type="Object"/>
                </params>
                <scope line="858">
                    <declaration name="wrapped" type="RuntimeException" line="859"/>
                </scope>
            </method>
            <declaration name="subject" type="Subject" line="863"/>
            <declaration name="subjectDelegator" type="SubjectDelegator" line="864"/>
            <declaration name="removeCallerContext" type="boolean" line="865"/>
            <declaration name="acc" type="AccessControlContext" line="866"/>
            <declaration name="rmiServer" type="RMIServerImpl" line="867"/>
            <declaration name="mbeanServer" type="MBeanServer" line="868"/>
            <declaration name="defaultClassLoader" type="ClassLoader" line="869"/>
            <declaration name="classLoaderWithRepository" type="ClassLoaderWithRepository" line="870"/>
            <declaration name="terminated" type="boolean" line="871"/>
            <declaration name="connectionId" type="String" line="872"/>
            <declaration name="serverCommunicatorAdmin" type="ServerCommunicatorAdmin" line="873"/>
            <declaration name="ADD_NOTIFICATION_LISTENERS" type="int" line="874"/>
            <declaration name="ADD_NOTIFICATION_LISTENER_OBJECTNAME" type="int" line="875"/>
            <declaration name="CREATE_MBEAN" type="int" line="876"/>
            <declaration name="CREATE_MBEAN_PARAMS" type="int" line="877"/>
            <declaration name="CREATE_MBEAN_LOADER" type="int" line="878"/>
            <declaration name="CREATE_MBEAN_LOADER_PARAMS" type="int" line="879"/>
            <declaration name="GET_ATTRIBUTE" type="int" line="880"/>
            <declaration name="GET_ATTRIBUTES" type="int" line="881"/>
            <declaration name="GET_DEFAULT_DOMAIN" type="int" line="882"/>
            <declaration name="GET_DOMAINS" type="int" line="883"/>
            <declaration name="GET_MBEAN_COUNT" type="int" line="884"/>
            <declaration name="GET_MBEAN_INFO" type="int" line="885"/>
            <declaration name="GET_OBJECT_INSTANCE" type="int" line="886"/>
            <declaration name="INVOKE" type="int" line="887"/>
            <declaration name="IS_INSTANCE_OF" type="int" line="888"/>
            <declaration name="IS_REGISTERED" type="int" line="889"/>
            <declaration name="QUERY_MBEANS" type="int" line="890"/>
            <declaration name="QUERY_NAMES" type="int" line="891"/>
            <declaration name="REMOVE_NOTIFICATION_LISTENER" type="int" line="892"/>
            <declaration name="REMOVE_NOTIFICATION_LISTENER_OBJECTNAME" type="int" line="893"/>
            <declaration name="REMOVE_NOTIFICATION_LISTENER_OBJECTNAME_FILTER_HANDBACK" type="int" line="894"/>
            <declaration name="SET_ATTRIBUTE" type="int" line="895"/>
            <declaration name="SET_ATTRIBUTES" type="int" line="896"/>
            <declaration name="UNREGISTER_MBEAN" type="int" line="897"/>
            <declaration name="serverNotifForwarder" type="ServerNotifForwarder" line="898"/>
            <declaration name="env" type="Map&amp;lt;String,?&amp;gt;" line="899"/>
            <method name="objects" type="String" line="900">
                <params>
                    <param name="objs" type="Object[]"/>
                </params>
            </method>
            <method name="strings" type="String" line="904">
                <params>
                    <param name="strs" type="String[]"/>
                </params>
            </method>
            <declaration name="logger" type="ClassLogger" line="907"/>
        </class>
    </source>