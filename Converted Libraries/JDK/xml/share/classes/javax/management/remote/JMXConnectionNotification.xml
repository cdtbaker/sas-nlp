<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.remote">
        <import package="javax.management.Notification"/>
        <import package="javax.management.ObjectName"/>
        <class name="JMXConnectionNotification" line="4">
            <extends class="Notification"/>
            <javadoc line="4">
                &lt;p&gt;Notification emitted when a client connection is opened or
                  closed or when notifications are lost.  These notifications are
                  sent by connector servers (instances of {@link JMXConnectorServer})
                  and by connector clients (instances of {@link JMXConnector}).  For
                  certain connectors, a session can consist of a sequence of
                  connections.  Connection-opened and connection-closed notifications
                  will be sent for each one.&lt;/p&gt;
                  &lt;p&gt;The notification type is one of the following:&lt;/p&gt;
                  &lt;table&gt;
                  &lt;tr&gt;
                  &lt;th align=left&gt;Type&lt;/th&gt;
                  &lt;th align=left&gt;Meaning&lt;/th&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;&lt;code&gt;jmx.remote.connection.opened&lt;/code&gt;&lt;/td&gt;
                  &lt;td&gt;A new client connection has been opened.&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;&lt;code&gt;jmx.remote.connection.closed&lt;/code&gt;&lt;/td&gt;
                  &lt;td&gt;A client connection has been closed.&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;&lt;code&gt;jmx.remote.connection.failed&lt;/code&gt;&lt;/td&gt;
                  &lt;td&gt;A client connection has failed unexpectedly.&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;&lt;code&gt;jmx.remote.connection.notifs.lost&lt;/code&gt;&lt;/td&gt;
                  &lt;td&gt;A client connection has potentially lost notifications.  This
                  notification only appears on the client side.&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;/table&gt;
                  &lt;p&gt;The &lt;code&gt;timeStamp&lt;/code&gt; of the notification is a time value
                  (consistent with {@link System#currentTimeMillis()}) indicating
                  when the notification was constructed.&lt;/p&gt;                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="42"/>
            <declaration name="OPENED" type="String" line="43"/>
            <javadoc line="43">
                &lt;p&gt;Notification type string for a connection-opened notification.                
            </javadoc>
            <declaration name="CLOSED" type="String" line="47"/>
            <javadoc line="47">
                &lt;p&gt;Notification type string for a connection-closed notification.                
            </javadoc>
            <declaration name="FAILED" type="String" line="51"/>
            <javadoc line="51">
                &lt;p&gt;Notification type string for a connection-failed notification.                
            </javadoc>
            <declaration name="NOTIFS_LOST" type="String" line="55"/>
            <javadoc line="55">
                &lt;p&gt;Notification type string for a connection that has possibly
                  lost notifications.&lt;/p&gt;                
            </javadoc>
            <javadoc line="60">
                Constructs a new connection notification.  The {@link #getSource() source} of the notification depends on whether it
                  is being sent by a connector server or a connector client:
                  &lt;ul&gt;
                  &lt;li&gt;For a connector server, if it is registered in an MBean
                  server, the source is the {@link ObjectName} under which it is
                  registered.  Otherwise, it is a reference to the connector
                  server object itself, an instance of a subclass of {@link JMXConnectorServer}.
                  &lt;li&gt;For a connector client, the source is a reference to the
                  connector client object, an instance of a class implementing{@link JMXConnector}.
                  &lt;/ul&gt;                
                <param>
                    type the type of the notification.  This is usually one
                      of the constants {@link #OPENED}, {@link #CLOSED}, {@link #FAILED}, {@link #NOTIFS_LOST}.  It is not an error for it to
                      be a different string.                    
                </param>
                <param>
                    source the connector server or client emitting the
                      notification.                    
                </param>
                <param>
                    connectionId the ID of the connection within its
                      connector server.                    
                </param>
                <param>
                    sequenceNumber a non-negative integer.  It is expected
                      but not required that this number will be greater than any
                      previous <code>sequenceNumber</code> in a notification from
                      this source.                    
                </param>
                <param>
                    message an unspecified text message, typically containing
                      a human-readable description of the event.  Can be null.                    
                </param>
                <param>
                    userData an object whose type and meaning is defined by
                      the connector server.  Can be null.                    
                </param>
                <exception>
                    NullPointerException if <code>type</code>,
                      <code>source</code>, or <code>connectionId</code> is null.                    
                </exception>
                <exception>
                    IllegalArgumentException if
                      <code>sequenceNumber</code> is negative.                    
                </exception>
            </javadoc>
            <method name="JMXConnectionNotification" type="constructor" line="91">
                <params>
                    <param name="type" type="String"/>
                    <param name="source" type="Object"/>
                    <param name="connectionId" type="String"/>
                    <param name="sequenceNumber" type="long"/>
                    <param name="message" type="String"/>
                    <param name="userData" type="Object"/>
                </params>
            </method>
            <method name="nonNull" type="Object" line="98">
                <params>
                    <param name="arg" type="Object"/>
                </params>
            </method>
            <javadoc line="102">
                &lt;p&gt;The connection ID to which this notification pertains.                
                <return>
                    the connection ID.                    
                </return>
            </javadoc>
            <method name="getConnectionId" type="String" line="106"/>
            <declaration name="connectionId" type="String" line="109"/>
            <javadoc line="109">
                @serial The connection ID to which this notification pertains.                
                <see>
                    #getConnectionId()                    
                </see>
            </javadoc>
        </class>
    </source>