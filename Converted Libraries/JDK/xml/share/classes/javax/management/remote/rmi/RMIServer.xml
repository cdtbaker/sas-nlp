<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.remote.rmi">
        <import package="java.io.IOException"/>
        <import package="java.rmi.Remote"/>
        <import package="java.rmi.RemoteException"/>
        <interface name="RMIServer">
            <implements interface="Remote"/>
            <javadoc line="5">
                &lt;p&gt;RMI object used to establish connections to an RMI connector.
                  There is one Remote object implementing this interface for each RMI
                  connector.&lt;/p&gt;
                  &lt;p&gt;User code does not usually refer to this interface.  It is
                  specified as part of the public API so that different
                  implementations of that API will interoperate.&lt;/p&gt;                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="getVersion" type="String" line="15"/>
            <javadoc line="15">
                &lt;p&gt;The version of the RMI Connector Protocol understood by this
                  connector server.  This is a string with the following format:&lt;/p&gt;
                  &lt;pre&gt;
                  &lt;em&gt;protocol-version&lt;/em&gt; &lt;em&gt;implementation-name&lt;/em&gt;
                  &lt;/pre&gt;
                  &lt;p&gt;The &lt;code&gt;&lt;em&gt;protocol-version&lt;/em&gt;&lt;/code&gt; is a series of
                  two or more non-negative integers separated by periods
                  (&lt;code&gt;.&lt;/code&gt;).  An implementation of the version described
                  by this documentation must use the string &lt;code&gt;1.0&lt;/code&gt;
                  here.&lt;/p&gt;
                  &lt;p&gt;After the protocol version there must be a space, followed
                  by the implementation name.  The format of the implementation
                  name is unspecified.  It is recommended that it include an
                  implementation version number.  An implementation can use an
                  empty string as its implementation name, for example for
                  security reasons.&lt;/p&gt;                
                <return>
                    a string with the format described here.                    
                </return>
                <exception>
                    RemoteException if there is a communication
                      exception during the remote method call.                    
                </exception>
            </javadoc>
            <method name="newClient" type="RMIConnection" line="37"/>
            <javadoc line="37">
                &lt;p&gt;Makes a new connection through this RMI connector.  Each
                  remote client calls this method to obtain a new RMI object
                  representing its connection.&lt;/p&gt;                
                <param>
                    credentials this object specifies the user-defined credentials
                      to be passed in to the server in order to authenticate the user before
                      creating the &lt;code&gt;RMIConnection&lt;/code&gt;.  Can be null.                    
                </param>
                <return>
                    the newly-created connection object.                    
                </return>
                <exception>
                    IOException if the new client object cannot be
                      created or exported, or if there is a communication exception
                      during the remote method call.                    
                </exception>
                <exception>
                    SecurityException if the given credentials do not
                      allow the server to authenticate the caller successfully.                    
                </exception>
            </javadoc>
        </interface>
    </source>