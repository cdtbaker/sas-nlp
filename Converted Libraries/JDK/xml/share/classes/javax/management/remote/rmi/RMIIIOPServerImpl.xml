<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.remote.rmi">
        <import package="java.io.IOException"/>
        <import package="java.rmi.Remote"/>
        <import package="java.security.AccessControlContext"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedActionException"/>
        <import package="java.security.PrivilegedExceptionAction"/>
        <import package="java.util.Map"/>
        <import package="java.util.Collections"/>
        <import package="javax.security.auth.Subject"/>
        <import package="com.sun.jmx.remote.internal.IIOPHelper"/>
        <class name="RMIIIOPServerImpl" line="40">
            <extends class="RMIServerImpl"/>
            <javadoc line="40">
                &lt;p&gt;An {@link RMIServerImpl} that is exported through IIOP and that
                  creates client connections as RMI objects exported through IIOP.
                  User code does not usually reference this class directly.&lt;/p&gt;                
                <see>
                    RMIServerImpl                    
                </see>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <javadoc line="50">
                &lt;p&gt;Creates a new {@link RMIServerImpl}.&lt;/p&gt;                
                <param>
                    env the environment containing attributes for the new
                      <code>RMIServerImpl</code>.  Can be null, which is equivalent
                      to an empty Map.                    
                </param>
                <exception>
                    IOException if the RMI object cannot be created.                    
                </exception>
            </javadoc>
            <method name="RMIIIOPServerImpl" type="constructor" line="60">
                <params>
                    <param name="env" type="Map<String,?>"/>
                </params>
            </method>
            <method name="export" type="void" line="68"/>
            <method name="getProtocol" type="String" line="72"/>
            <javadoc line="76">
                &lt;p&gt;Returns an IIOP stub.&lt;/p&gt;
                  The stub might not yet be connected to the ORB. The stub will
                  be serializable only if it is connected to the ORB.                
                <return>
                    an IIOP stub.                    
                </return>
                <exception>
                    IOException if the stub cannot be created - e.g the
                      RMIIIOPServerImpl has not been exported yet.                    
                </exception>
            </javadoc>
            <method name="toStub" type="Remote" line="84">
                <comment line="86">
                    javax.rmi.CORBA.Stub stub =
                        (javax.rmi.CORBA.Stub) PortableRemoteObject.toStub(this);                    
                </comment>
                <comment line="89">
                    java.lang.System.out.println(&quot;NON CONNECTED STUB &quot; + stub);
                     org.omg.CORBA.ORB orb =
                        org.omg.CORBA.ORB.init((String[])null, (Properties)null);
                     stub.connect(orb);
                     java.lang.System.out.println(&quot;CONNECTED STUB &quot; + stub);                    
                </comment>
                <declaration name="stub" type="Remote" line="87"/>
            </method>
            <javadoc line="96">
                &lt;p&gt;Creates a new client connection as an RMI object exported
                  through IIOP.                
                <param>
                    connectionId the ID of the new connection.  Every
                      connection opened by this connector server will have a
                      different ID.  The behavior is unspecified if this parameter is
                      null.                    
                </param>
                <param>
                    subject the authenticated subject.  Can be null.                    
                </param>
                <return>
                    the newly-created <code>RMIConnection</code>.                    
                </return>
                <exception>
                    IOException if the new client object cannot be
                      created or exported.                    
                </exception>
            </javadoc>
            <method name="makeClient" type="RMIConnection" line="113">
                <params>
                    <param name="connectionId" type="String"/>
                    <param name="subject" type="Subject"/>
                </params>
                <declaration name="client" type="RMIConnection" line="118"/>
            </method>
            <method name="closeClient" type="void" line="125">
                <params>
                    <param name="client" type="RMIConnection"/>
                </params>
            </method>
            <javadoc line="129">
                &lt;p&gt;Called by {@link #close()} to close the connector server by
                  unexporting this object.  After returning from this method, the
                  connector server must not accept any new connections.&lt;/p&gt;                
                <exception>
                    IOException if the attempt to close the connector
                      server failed.                    
                </exception>
            </javadoc>
            <method name="closeServer" type="void" line="137"/>
            <method name="doNewClient" type="RMIConnection" line="142">
                <params>
                    <param name="credentials" type="Object"/>
                </params>
                <scope line="143"/>
                <scope line="146">
                    <anonymous_class line="148">
                        <method name="run" type="RMIConnection" line="149"/>
                    </anonymous_class>
                </scope>
                <scope line="153"/>
            </method>
            <method name="superDoNewClient" type="RMIConnection" line="158">
                <params>
                    <param name="credentials" type="Object"/>
                </params>
            </method>
            <declaration name="env" type="Map&lt;String,?&gt;" line="162"/>
            <declaration name="callerACC" type="AccessControlContext" line="163"/>
        </class>
    </source>