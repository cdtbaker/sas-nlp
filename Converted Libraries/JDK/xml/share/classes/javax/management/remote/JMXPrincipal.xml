<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.remote">
        <import package="java.io.Serializable"/>
        <import package="java.security.Principal"/>
        <class name="JMXPrincipal" line="4">
            <implements interface="Principal"/>
            <implements interface="Serializable"/>
            <javadoc line="4">
                &lt;p&gt;The identity of a remote client of the JMX Remote API.&lt;/p&gt;
                  &lt;p&gt;Principals such as this &lt;code&gt;JMXPrincipal&lt;/code&gt;
                  may be associated with a particular &lt;code&gt;Subject&lt;/code&gt;
                  to augment that &lt;code&gt;Subject&lt;/code&gt; with an additional
                  identity.  Refer to the {@link javax.security.auth.Subject}class for more information on how to achieve this.
                  Authorization decisions can then be based upon
                  the Principals associated with a &lt;code&gt;Subject&lt;/code&gt;.                
                <see>
                    java.security.Principal                    
                </see>
                <see>
                    javax.security.auth.Subject                    
                </see>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="17"/>
            <declaration name="name" type="String" line="18"/>
            <javadoc line="18">
                @serial The JMX Remote API name for the identity represented by
                  this &lt;code&gt;JMXPrincipal&lt;/code&gt; object.                
                <see>
                    #getName()                    
                </see>
            </javadoc>
            <javadoc line="24">
                &lt;p&gt;Creates a JMXPrincipal for a given identity.&lt;/p&gt;                
                <param>
                    name the JMX Remote API name for this identity.                    
                </param>
                <exception>
                    NullPointerException if the &lt;code&gt;name&lt;/code&gt; is
                      &lt;code&gt;null&lt;/code&gt;.                    
                </exception>
            </javadoc>
            <method name="JMXPrincipal" type="constructor" line="30">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="34">
                Returns the name of this principal.
                  &lt;p&gt;                
                <return>
                    the name of this &lt;code&gt;JMXPrincipal&lt;/code&gt;.                    
                </return>
            </javadoc>
            <method name="getName" type="String" line="39"/>
            <javadoc line="42">
                Returns a string representation of this &lt;code&gt;JMXPrincipal&lt;/code&gt;.
                  &lt;p&gt;                
                <return>
                    a string representation of this &lt;code&gt;JMXPrincipal&lt;/code&gt;.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="47"/>
            <javadoc line="50">
                Compares the specified Object with this &lt;code&gt;JMXPrincipal&lt;/code&gt;
                  for equality.  Returns true if the given object is also a
                  &lt;code&gt;JMXPrincipal&lt;/code&gt; and the two JMXPrincipals
                  have the same name.
                  &lt;p&gt;                
                <param>
                    o Object to be compared for equality with this
                      &lt;code&gt;JMXPrincipal&lt;/code&gt;.                    
                </param>
                <return>
                    true if the specified Object is equal to this
                      &lt;code&gt;JMXPrincipal&lt;/code&gt;.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="61">
                <params>
                    <param name="o" type="Object"/>
                </params>
                <declaration name="that" type="JMXPrincipal" line="65"/>
            </method>
            <javadoc line="68">
                Returns a hash code for this &lt;code&gt;JMXPrincipal&lt;/code&gt;.
                  &lt;p&gt;                
                <return>
                    a hash code for this &lt;code&gt;JMXPrincipal&lt;/code&gt;.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="73"/>
        </class>
    </source>