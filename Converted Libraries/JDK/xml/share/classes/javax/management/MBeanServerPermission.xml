<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management">
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.security.BasicPermission"/>
        <import package="java.security.Permission"/>
        <import package="java.security.PermissionCollection"/>
        <import package="java.util.Collections"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.Set"/>
        <import package="java.util.StringTokenizer"/>
        <class name="MBeanServerPermission" line="11">
            <extends class="BasicPermission"/>
            <javadoc line="11">
                A Permission to perform actions related to MBeanServers.
                  The &lt;em&gt;name&lt;/em&gt; of the permission specifies the operation requested
                  or granted by the permission.  For a granted permission, it can be
                  &lt;code&gt;&lt;/code&gt; to allow all of the MBeanServer operations specified below.
                  Otherwise, for a granted or requested permission, it must be one of the
                  following:
                  &lt;dl&gt;
                  &lt;dt&gt;createMBeanServer&lt;/dt&gt;
                  &lt;dd&gt;Create a new MBeanServer object using the method{@link MBeanServerFactory#createMBeanServer()} or{@link MBeanServerFactory#createMBeanServer(java.lang.String)}.
                  &lt;dt&gt;findMBeanServer&lt;/dt&gt;
                  &lt;dd&gt;Find an MBeanServer with a given name, or all MBeanServers in this
                  JVM, using the method {@link MBeanServerFactory#findMBeanServer}.
                  &lt;dt&gt;newMBeanServer&lt;/dt&gt;
                  &lt;dd&gt;Create a new MBeanServer object without keeping a reference to it,
                  using the method {@link MBeanServerFactory#newMBeanServer()} or{@link MBeanServerFactory#newMBeanServer(java.lang.String)}.
                  &lt;dt&gt;releaseMBeanServer&lt;/dt&gt;
                  &lt;dd&gt;Remove the MBeanServerFactory&apos;s reference to an MBeanServer,
                  using the method {@link MBeanServerFactory#releaseMBeanServer}.
                  &lt;/dl&gt;
                  The &lt;em&gt;name&lt;/em&gt; of the permission can also denote a list of one or more
                  comma-separated operations.  Spaces are allowed at the beginning and
                  end of the &lt;em&gt;name&lt;/em&gt; and before and after commas.
                  &lt;p&gt;
                  &lt;code&gt;MBeanServerPermission(&quot;createMBeanServer&quot;)&lt;/code&gt; implies
                  &lt;code&gt;MBeanServerPermission(&quot;newMBeanServer&quot;)&lt;/code&gt;.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="40"/>
            <declaration name="CREATE" type="int" line="41"/>
            <declaration name="names" type="String[]" line="42"/>
            <declaration name="CREATE_MASK" type="int" line="43"/>
            <declaration name="canonicalNames" type="String[]" line="44"/>
            <declaration name="mask" type="int" line="45"/>
            <javadoc line="46">
                &lt;p&gt;Create a new MBeanServerPermission with the given name.&lt;/p&gt;
                  &lt;p&gt;This constructor is equivalent to
                  &lt;code&gt;MBeanServerPermission(name,null)&lt;/code&gt;.&lt;/p&gt;                
                <param>
                    name the name of the granted permission.  It must
                      respect the constraints spelt out in the description of the{@link MBeanServerPermission} class.                    
                </param>
                <exception>
                    NullPointerException if the name is null.                    
                </exception>
                <exception>
                    IllegalArgumentException if the name is not
                      &lt;code&gt;&lt;/code&gt; or one of the allowed names or a comma-separated
                      list of the allowed names.                    
                </exception>
            </javadoc>
            <method name="MBeanServerPermission" type="constructor" line="57">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="60">
                &lt;p&gt;Create a new MBeanServerPermission with the given name.&lt;/p&gt;                
                <param>
                    name the name of the granted permission.  It must
                      respect the constraints spelt out in the description of the{@link MBeanServerPermission} class.                    
                </param>
                <param>
                    actions the associated actions.  This parameter is not
                      currently used and must be null or the empty string.                    
                </param>
                <exception>
                    NullPointerException if the name is null.                    
                </exception>
                <exception>
                    IllegalArgumentException if the name is not
                      &lt;code&gt;&lt;/code&gt; or one of the allowed names or a comma-separated
                      list of the allowed names, or if &lt;code&gt;actions&lt;/code&gt; is a non-null
                      non-empty string.                    
                </exception>
                <throws>
                    NullPointerException if &lt;code&gt;name&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.                    
                </throws>
                <throws>
                    IllegalArgumentException if &lt;code&gt;name&lt;/code&gt; is empty or
                      if arguments are invalid.                    
                </throws>
            </javadoc>
            <method name="MBeanServerPermission" type="constructor" line="75">
                <params>
                    <param name="name" type="String"/>
                    <param name="actions" type="String"/>
                </params>
            </method>
            <method name="MBeanServerPermission" type="constructor" line="80">
                <params>
                    <param name="mask" type="int"/>
                </params>
            </method>
            <method name="readObject" type="void" line="84">
                <params>
                    <param name="in" type="ObjectInputStream"/>
                </params>
            </method>
            <method name="simplifyMask" type="int" line="88">
                <params>
                    <param name="mask" type="int"/>
                </params>
            </method>
            <method name="impliedMask" type="int" line="92">
                <params>
                    <param name="mask" type="int"/>
                </params>
            </method>
            <method name="getCanonicalName" type="String" line="96">
                <params>
                    <param name="mask" type="int"/>
                </params>
                <scope line="99"/>
            </method>
            <method name="makeCanonicalName" type="String" line="104">
                <params>
                    <param name="mask" type="int"/>
                </params>
                <declaration name="buf" type="StringBuilder" line="105"/>
                <scope line="106">
                    <scope line="107"/>
                </scope>
            </method>
            <method name="parseMask" type="int" line="114">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="115"/>
                <declaration name="mask" type="int" line="121"/>
                <declaration name="tok" type="StringTokenizer" line="122"/>
                <scope line="123">
                    <declaration name="action" type="String" line="124"/>
                    <declaration name="i" type="int" line="125"/>
                </scope>
            </method>
            <method name="nameIndex" type="int" line="130">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="131"/>
                <declaration name="msg" type="String" line="134"/>
            </method>
            <method name="hashCode" type="int" line="137"/>
            <javadoc line="140">
                &lt;p&gt;Checks if this MBeanServerPermission object &quot;implies&quot; the specified
                  permission.&lt;/p&gt;
                  &lt;p&gt;More specifically, this method returns true if:&lt;/p&gt;
                  &lt;ul&gt;
                  &lt;li&gt; &lt;i&gt;p&lt;/i&gt; is an instance of MBeanServerPermission,&lt;/li&gt;
                  &lt;li&gt; &lt;i&gt;p&lt;/i&gt;&apos;s target names are a subset of this object&apos;s target
                  names&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;p&gt;The &lt;code&gt;createMBeanServer&lt;/code&gt; permission implies the
                  &lt;code&gt;newMBeanServer&lt;/code&gt; permission.&lt;/p&gt;                
                <param>
                    p the permission to check against.                    
                </param>
                <return>
                    true if the specified permission is implied by this object,
                      false if not.                    
                </return>
            </javadoc>
            <method name="implies" type="boolean" line="155">
                <params>
                    <param name="p" type="Permission"/>
                </params>
                <declaration name="that" type="MBeanServerPermission" line="157"/>
            </method>
            <javadoc line="160">
                Checks two MBeanServerPermission objects for equality. Checks that
                  &lt;i&gt;obj&lt;/i&gt; is an MBeanServerPermission, and represents the same
                  list of allowable actions as this object.
                  &lt;P&gt;                
                <param>
                    obj the object we are testing for equality with this object.                    
                </param>
                <return>
                    true if the objects are equal.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="168">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <declaration name="that" type="MBeanServerPermission" line="171"/>
            </method>
            <method name="newPermissionCollection" type="PermissionCollection" line="174"/>
        </class>
        <class name="MBeanServerPermissionCollection" line="178">
            <extends class="PermissionCollection"/>
            <javadoc line="178">
                Class returned by {@link MBeanServerPermission#newPermissionCollection()}.                
                <serial>
                    include                    
                </serial>
            </javadoc>
            <declaration name="collectionPermission" type="MBeanServerPermission" line="183"/>
            <javadoc line="183">
                @serial Null if no permissions in collection, otherwise a
                  single permission that is the union of all permissions that
                  have been added.                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="189"/>
            <method name="add" type="void" line="190">
                <params>
                    <param name="permission" type="Permission"/>
                </params>
                <scope line="191">
                    <declaration name="msg" type="String" line="192"/>
                </scope>
                <declaration name="mbsp" type="MBeanServerPermission" line="196"/>
                <scope line="198">
                    <declaration name="newmask" type="int" line="199"/>
                </scope>
            </method>
            <method name="implies" type="boolean" line="203">
                <params>
                    <param name="permission" type="Permission"/>
                </params>
            </method>
            <method name="elements" type="Enumeration&lt;Permission&gt;" line="206">
                <declaration name="set" type="Set&amp;lt;Permission&amp;gt;" line="207"/>
            </method>
        </class>
    </source>