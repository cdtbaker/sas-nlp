<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management">
        <import package="com.sun.jmx.mbeanserver.Introspector"/>
        <import package="java.lang.annotation.Annotation"/>
        <import package="java.lang.reflect.Constructor"/>
        <import package="java.util.Arrays"/>
        <class name="MBeanConstructorInfo" line="6">
            <extends class="MBeanFeatureInfo"/>
            <implements interface="Cloneable"/>
            <javadoc line="6">
                Describes a constructor exposed by an MBean.  Instances of this
                  class are immutable.  Subclasses may be mutable but this is not
                  recommended.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="13"/>
            <declaration name="NO_CONSTRUCTORS" type="MBeanConstructorInfo[]" line="14"/>
            <declaration name="arrayGettersSafe" type="boolean" line="15"/>
            <javadoc line="15">
                @see MBeanInfo#arrayGettersSafe                
            </javadoc>
            <declaration name="signature" type="MBeanParameterInfo[]" line="19"/>
            <javadoc line="19">
                @serial The signature of the method, that is, the class names of the arguments.                
            </javadoc>
            <javadoc line="23">
                Constructs an &lt;CODE&gt;MBeanConstructorInfo&lt;/CODE&gt; object.  The{@link Descriptor} of the constructed object will include
                  fields contributed by any annotations on the {@codeConstructor} object that contain the {@link DescriptorKey}meta-annotation.                
                <param>
                    description A human readable description of the operation.                    
                </param>
                <param>
                    constructor The <CODE>java.lang.reflect.Constructor</CODE>
                      object describing the MBean constructor.                    
                </param>
            </javadoc>
            <method name="MBeanConstructorInfo" type="constructor" line="30">
                <params>
                    <param name="description" type="String"/>
                    <param name="constructor" type="Constructor<?>"/>
                </params>
            </method>
            <javadoc line="33">
                Constructs an &lt;CODE&gt;MBeanConstructorInfo&lt;/CODE&gt; object.                
                <param>
                    name The name of the constructor.                    
                </param>
                <param>
                    signature <CODE>MBeanParameterInfo</CODE> objects
                      describing the parameters(arguments) of the constructor.  This
                      may be null with the same effect as a zero-length array.                    
                </param>
                <param>
                    description A human readable description of the constructor.                    
                </param>
            </javadoc>
            <method name="MBeanConstructorInfo" type="constructor" line="41">
                <params>
                    <param name="name" type="String"/>
                    <param name="description" type="String"/>
                    <param name="signature" type="MBeanParameterInfo[]"/>
                </params>
            </method>
            <javadoc line="44">
                Constructs an &lt;CODE&gt;MBeanConstructorInfo&lt;/CODE&gt; object.                
                <param>
                    name The name of the constructor.                    
                </param>
                <param>
                    signature <CODE>MBeanParameterInfo</CODE> objects
                      describing the parameters(arguments) of the constructor.  This
                      may be null with the same effect as a zero-length array.                    
                </param>
                <param>
                    description A human readable description of the constructor.                    
                </param>
                <param>
                    descriptor The descriptor for the constructor.  This may be null
                      which is equivalent to an empty descriptor.                    
                </param>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="MBeanConstructorInfo" type="constructor" line="55">
                <params>
                    <param name="name" type="String"/>
                    <param name="description" type="String"/>
                    <param name="signature" type="MBeanParameterInfo[]"/>
                    <param name="descriptor" type="Descriptor"/>
                </params>
            </method>
            <javadoc line="62">
                &lt;p&gt;Returns a shallow clone of this instance.  The clone is
                  obtained by simply calling &lt;tt&gt;super.clone()&lt;/tt&gt;, thus calling
                  the default native shallow cloning mechanism implemented by
                  &lt;tt&gt;Object.clone()&lt;/tt&gt;.  No deeper cloning of any internal
                  field is made.&lt;/p&gt;
                  &lt;p&gt;Since this class is immutable, cloning is chiefly of
                  interest to subclasses.&lt;/p&gt;                
            </javadoc>
            <method name="clone" type="Object" line="71">
                <scope line="72"/>
                <scope line="75"/>
            </method>
            <javadoc line="79">
                &lt;p&gt;Returns the list of parameters for this constructor.  Each
                  parameter is described by an &lt;CODE&gt;MBeanParameterInfo&lt;/CODE&gt;
                  object.&lt;/p&gt;
                  &lt;p&gt;The returned array is a shallow copy of the internal array,
                  which means that it is a copy of the internal array of
                  references to the &lt;CODE&gt;MBeanParameterInfo&lt;/CODE&gt; objects but
                  that each referenced &lt;CODE&gt;MBeanParameterInfo&lt;/CODE&gt; object is
                  not copied.&lt;/p&gt;                
                <return>
                    An array of <CODE>MBeanParameterInfo</CODE> objects.                    
                </return>
            </javadoc>
            <method name="getSignature" type="MBeanParameterInfo[]" line="90"/>
            <method name="fastGetSignature" type="MBeanParameterInfo[]" line="94"/>
            <method name="toString" type="String" line="98"/>
            <javadoc line="101">
                Compare this MBeanConstructorInfo to another.                
                <param>
                    o the object to compare to.                    
                </param>
                <return>
                    true if and only if <code>o</code> is an MBeanConstructorInfo such
                      that its {@link #getName()}, {@link #getDescription()},{@link #getSignature()}, and {@link #getDescriptor()}values are equal (not necessarily
                      identical) to those of this MBeanConstructorInfo.  Two
                      signature arrays are equal if their elements are pairwise
                      equal.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="110">
                <params>
                    <param name="o" type="Object"/>
                </params>
                <declaration name="p" type="MBeanConstructorInfo" line="113"/>
            </method>
            <method name="hashCode" type="int" line="116">
                <declaration name="hash" type="int" line="117"/>
                <declaration name="sig" type="MBeanParameterInfo[]" line="118"/>
            </method>
            <method name="constructorSignature" type="MBeanParameterInfo[]" line="122">
                <params>
                    <param name="cn" type="Constructor<?>"/>
                </params>
                <declaration name="classes" type="Class&lt;?&gt;[]" line="123"/>
                <declaration name="annots" type="Annotation[][]" line="124"/>
            </method>
        </class>
    </source>