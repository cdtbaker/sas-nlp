<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.monitor">
        <import package="javax.management.ObjectName"/>
        <class name="MonitorNotification" line="3">
            <extends class="javax.management.Notification"/>
            <javadoc line="3">
                Provides definitions of the notifications sent by monitor MBeans.
                  &lt;P&gt;
                  The notification source and a set of parameters concerning the monitor MBean&apos;s state
                  need to be specified when creating a new object of this class.
                  The list of notifications fired by the monitor MBeans is the following:
                  &lt;UL&gt;
                  &lt;LI&gt;Common to all kind of monitors:
                  &lt;UL&gt;
                  &lt;LI&gt;The observed object is not registered in the MBean server.
                  &lt;LI&gt;The observed attribute is not contained in the observed object.
                  &lt;LI&gt;The type of the observed attribute is not correct.
                  &lt;LI&gt;Any exception (except the cases described above) occurs when trying to get the value of the observed attribute.
                  &lt;/UL&gt;
                  &lt;LI&gt;Common to the counter and the gauge monitors:
                  &lt;UL&gt;
                  &lt;LI&gt;The threshold high or threshold low are not of the same type as the gauge (gauge monitors).
                  &lt;LI&gt;The threshold or the offset or the modulus are not of the same type as the counter (counter monitors).
                  &lt;/UL&gt;
                  &lt;LI&gt;Counter monitors only:
                  &lt;UL&gt;
                  &lt;LI&gt;The observed attribute has reached the threshold value.
                  &lt;/UL&gt;
                  &lt;LI&gt;Gauge monitors only:
                  &lt;UL&gt;
                  &lt;LI&gt;The observed attribute has exceeded the threshold high value.
                  &lt;LI&gt;The observed attribute has exceeded the threshold low value.
                  &lt;/UL&gt;
                  &lt;LI&gt;String monitors only:
                  &lt;UL&gt;
                  &lt;LI&gt;The observed attribute has matched the &quot;string to compare&quot; value.
                  &lt;LI&gt;The observed attribute has differed from the &quot;string to compare&quot; value.
                  &lt;/UL&gt;
                  &lt;/UL&gt;                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="OBSERVED_OBJECT_ERROR" type="String" line="40"/>
            <javadoc line="40">
                Notification type denoting that the observed object is not registered in the MBean server.
                  This notification is fired by all kinds of monitors.
                  &lt;BR&gt;The value of this notification type is &lt;CODE&gt;jmx.monitor.error.mbean&lt;/CODE&gt;.                
            </javadoc>
            <declaration name="OBSERVED_ATTRIBUTE_ERROR" type="String" line="46"/>
            <javadoc line="46">
                Notification type denoting that the observed attribute is not contained in the observed object.
                  This notification is fired by all kinds of monitors.
                  &lt;BR&gt;The value of this notification type is &lt;CODE&gt;jmx.monitor.error.attribute&lt;/CODE&gt;.                
            </javadoc>
            <declaration name="OBSERVED_ATTRIBUTE_TYPE_ERROR" type="String" line="52"/>
            <javadoc line="52">
                Notification type denoting that the type of the observed attribute is not correct.
                  This notification is fired by all kinds of monitors.
                  &lt;BR&gt;The value of this notification type is &lt;CODE&gt;jmx.monitor.error.type&lt;/CODE&gt;.                
            </javadoc>
            <declaration name="THRESHOLD_ERROR" type="String" line="58"/>
            <javadoc line="58">
                Notification type denoting that the type of the thresholds, offset or modulus is not correct.
                  This notification is fired by counter and gauge monitors.
                  &lt;BR&gt;The value of this notification type is &lt;CODE&gt;jmx.monitor.error.threshold&lt;/CODE&gt;.                
            </javadoc>
            <declaration name="RUNTIME_ERROR" type="String" line="64"/>
            <javadoc line="64">
                Notification type denoting that a non-predefined error type has occurred when trying to get the value of the observed attribute.
                  This notification is fired by all kinds of monitors.
                  &lt;BR&gt;The value of this notification type is &lt;CODE&gt;jmx.monitor.error.runtime&lt;/CODE&gt;.                
            </javadoc>
            <declaration name="THRESHOLD_VALUE_EXCEEDED" type="String" line="70"/>
            <javadoc line="70">
                Notification type denoting that the observed attribute has reached the threshold value.
                  This notification is only fired by counter monitors.
                  &lt;BR&gt;The value of this notification type is &lt;CODE&gt;jmx.monitor.counter.threshold&lt;/CODE&gt;.                
            </javadoc>
            <declaration name="THRESHOLD_HIGH_VALUE_EXCEEDED" type="String" line="76"/>
            <javadoc line="76">
                Notification type denoting that the observed attribute has exceeded the threshold high value.
                  This notification is only fired by gauge monitors.
                  &lt;BR&gt;The value of this notification type is &lt;CODE&gt;jmx.monitor.gauge.high&lt;/CODE&gt;.                
            </javadoc>
            <declaration name="THRESHOLD_LOW_VALUE_EXCEEDED" type="String" line="82"/>
            <javadoc line="82">
                Notification type denoting that the observed attribute has exceeded the threshold low value.
                  This notification is only fired by gauge monitors.
                  &lt;BR&gt;The value of this notification type is &lt;CODE&gt;jmx.monitor.gauge.low&lt;/CODE&gt;.                
            </javadoc>
            <declaration name="STRING_TO_COMPARE_VALUE_MATCHED" type="String" line="88"/>
            <javadoc line="88">
                Notification type denoting that the observed attribute has matched the &quot;string to compare&quot; value.
                  This notification is only fired by string monitors.
                  &lt;BR&gt;The value of this notification type is &lt;CODE&gt;jmx.monitor.string.matches&lt;/CODE&gt;.                
            </javadoc>
            <declaration name="STRING_TO_COMPARE_VALUE_DIFFERED" type="String" line="94"/>
            <javadoc line="94">
                Notification type denoting that the observed attribute has differed from the &quot;string to compare&quot; value.
                  This notification is only fired by string monitors.
                  &lt;BR&gt;The value of this notification type is &lt;CODE&gt;jmx.monitor.string.differs&lt;/CODE&gt;.                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="100"/>
            <declaration name="observedObject" type="ObjectName" line="101"/>
            <javadoc line="101">
                @serial Monitor notification observed object.                
            </javadoc>
            <declaration name="observedAttribute" type="String" line="105"/>
            <javadoc line="105">
                @serial Monitor notification observed attribute.                
            </javadoc>
            <declaration name="derivedGauge" type="Object" line="109"/>
            <javadoc line="109">
                @serial Monitor notification derived gauge.                
            </javadoc>
            <declaration name="trigger" type="Object" line="113"/>
            <javadoc line="113">
                @serial Monitor notification release mechanism.
                  This value is used to keep the threshold/string (depending on the
                  monitor type) that triggered off this notification.                
            </javadoc>
            <javadoc line="119">
                Creates a monitor notification object.                
                <param>
                    type The notification type.                    
                </param>
                <param>
                    source The notification producer.                    
                </param>
                <param>
                    sequenceNumber The notification sequence number within the source object.                    
                </param>
                <param>
                    timeStamp The notification emission date.                    
                </param>
                <param>
                    msg The notification message.                    
                </param>
                <param>
                    obsObj The object observed by the producer of this notification.                    
                </param>
                <param>
                    obsAtt The attribute observed by the producer of this notification.                    
                </param>
                <param>
                    derGauge The derived gauge.                    
                </param>
                <param>
                    trigger The threshold/string (depending on the monitor type) that triggered the notification.                    
                </param>
            </javadoc>
            <method name="MonitorNotification" type="constructor" line="131">
                <params>
                    <param name="type" type="String"/>
                    <param name="source" type="Object"/>
                    <param name="sequenceNumber" type="long"/>
                    <param name="timeStamp" type="long"/>
                    <param name="msg" type="String"/>
                    <param name="obsObj" type="ObjectName"/>
                    <param name="obsAtt" type="String"/>
                    <param name="derGauge" type="Object"/>
                    <param name="trigger" type="Object"/>
                </params>
            </method>
            <javadoc line="138">
                Gets the observed object of this monitor notification.                
                <return>
                    The observed object.                    
                </return>
            </javadoc>
            <method name="getObservedObject" type="ObjectName" line="142"/>
            <javadoc line="145">
                Gets the observed attribute of this monitor notification.                
                <return>
                    The observed attribute.                    
                </return>
            </javadoc>
            <method name="getObservedAttribute" type="String" line="149"/>
            <javadoc line="152">
                Gets the derived gauge of this monitor notification.                
                <return>
                    The derived gauge.                    
                </return>
            </javadoc>
            <method name="getDerivedGauge" type="Object" line="156"/>
            <javadoc line="159">
                Gets the threshold/string (depending on the monitor type) that triggered off this monitor notification.                
                <return>
                    The trigger.                    
                </return>
            </javadoc>
            <method name="getTrigger" type="Object" line="163"/>
        </class>
    </source>