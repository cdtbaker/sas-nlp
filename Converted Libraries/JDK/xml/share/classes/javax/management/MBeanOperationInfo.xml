<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management">
        <import package="com.sun.jmx.mbeanserver.Introspector"/>
        <import package="java.lang.annotation.Annotation"/>
        <import package="java.lang.reflect.Method"/>
        <import package="java.util.Arrays"/>
        <class name="MBeanOperationInfo" line="33">
            <extends class="MBeanFeatureInfo"/>
            <comment line="43">
                                
            </comment>
            <comment line="305">
                We do not include everything in the hashcode.  We assume that
                if two operations are different they&apos;ll probably have different
                names or types.  The penalty we pay when this assumption is
                wrong should be less than the penalty we would pay if it were
                right and we needlessly hashed in the description and the                
            </comment>
            <implements interface="Cloneable"/>
            <javadoc line="33">
                Describes a management operation exposed by an MBean.  Instances of
                  this class are immutable.  Subclasses may be mutable but this is
                  not recommended.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="43"/>
            <declaration name="NO_OPERATIONS" type="MBeanOperationInfo[]" line="45"/>
            <declaration name="INFO" type="int" line="48"/>
            <javadoc line="48">
                Indicates that the operation is read-like:
                  it returns information but does not change any state.                
            </javadoc>
            <declaration name="ACTION" type="int" line="54"/>
            <javadoc line="54">
                Indicates that the operation is write-like: it has an effect but does
                  not return any information from the MBean.                
            </javadoc>
            <declaration name="ACTION_INFO" type="int" line="60"/>
            <javadoc line="60">
                Indicates that the operation is both read-like and write-like:
                  it has an effect, and it also returns information from the MBean.                
            </javadoc>
            <declaration name="UNKNOWN" type="int" line="66"/>
            <javadoc line="66">
                Indicates that the impact of the operation is unknown or cannot be
                  expressed using one of the other values.                
            </javadoc>
            <declaration name="type" type="String" line="72"/>
            <javadoc line="72">
                @serial The method&apos;s return value.                
            </javadoc>
            <declaration name="signature" type="MBeanParameterInfo[]" line="77"/>
            <javadoc line="77">
                @serial The signature of the method, that is, the class names
                  of the arguments.                
            </javadoc>
            <declaration name="impact" type="int" line="83"/>
            <javadoc line="83">
                @serial The impact of the method, one of
                  &lt;CODE&gt;INFO&lt;/CODE&gt;,
                  &lt;CODE&gt;ACTION&lt;/CODE&gt;,
                  &lt;CODE&gt;ACTION_INFO&lt;/CODE&gt;,
                  &lt;CODE&gt;UNKNOWN&lt;/CODE&gt;                
            </javadoc>
            <declaration name="arrayGettersSafe" type="boolean" line="92"/>
            <javadoc line="92">
                @see MBeanInfo#arrayGettersSafe                
            </javadoc>
            <javadoc line="96">
                Constructs an &lt;CODE&gt;MBeanOperationInfo&lt;/CODE&gt; object.  The{@link Descriptor} of the constructed object will include
                  fields contributed by any annotations on the {@code Method}object that contain the {@link DescriptorKey} meta-annotation.                
                <param>
                    method The <CODE>java.lang.reflect.Method</CODE> object
                      describing the MBean operation.                    
                </param>
                <param>
                    description A human readable description of the operation.                    
                </param>
            </javadoc>
            <method name="MBeanOperationInfo" type="constructor" line="106">
                <params>
                    <param name="description" type="String"/>
                    <param name="method" type="Method"/>
                </params>
            </method>
            <javadoc line="115">
                Constructs an &lt;CODE&gt;MBeanOperationInfo&lt;/CODE&gt; object.                
                <param>
                    name The name of the method.                    
                </param>
                <param>
                    description A human readable description of the operation.                    
                </param>
                <param>
                    signature <CODE>MBeanParameterInfo</CODE> objects
                      describing the parameters(arguments) of the method.  This may be
                      null with the same effect as a zero-length array.                    
                </param>
                <param>
                    type The type of the method's return value.                    
                </param>
                <param>
                    impact The impact of the method, one of{@link #INFO}, {@link #ACTION}, {@link #ACTION_INFO},{@link #UNKNOWN}.                    
                </param>
            </javadoc>
            <method name="MBeanOperationInfo" type="constructor" line="132">
                <params>
                    <param name="name" type="String"/>
                    <param name="description" type="String"/>
                    <param name="signature" type="MBeanParameterInfo[]"/>
                    <param name="type" type="String"/>
                    <param name="impact" type="int"/>
                </params>
            </method>
            <javadoc line="136">
                Constructs an &lt;CODE&gt;MBeanOperationInfo&lt;/CODE&gt; object.                
                <param>
                    name The name of the method.                    
                </param>
                <param>
                    description A human readable description of the operation.                    
                </param>
                <param>
                    signature <CODE>MBeanParameterInfo</CODE> objects
                      describing the parameters(arguments) of the method.  This may be
                      null with the same effect as a zero-length array.                    
                </param>
                <param>
                    type The type of the method's return value.                    
                </param>
                <param>
                    impact The impact of the method, one of{@link #INFO}, {@link #ACTION}, {@link #ACTION_INFO},{@link #UNKNOWN}.                    
                </param>
                <param>
                    descriptor The descriptor for the operation.  This may be null
                      which is equivalent to an empty descriptor.                    
                </param>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="MBeanOperationInfo" type="constructor" line="158">
                <params>
                    <param name="name" type="String"/>
                    <param name="description" type="String"/>
                    <param name="signature" type="MBeanParameterInfo[]"/>
                    <param name="type" type="String"/>
                    <param name="impact" type="int"/>
                    <param name="descriptor" type="Descriptor"/>
                </params>
            </method>
            <javadoc line="174">
                &lt;p&gt;Returns a shallow clone of this instance.
                  The clone is obtained by simply calling &lt;tt&gt;super.clone()&lt;/tt&gt;,
                  thus calling the default native shallow cloning mechanism
                  implemented by &lt;tt&gt;Object.clone()&lt;/tt&gt;.
                  No deeper cloning of any internal field is made.&lt;/p&gt;
                  &lt;p&gt;Since this class is immutable, cloning is chiefly of interest
                  to subclasses.&lt;/p&gt;                
            </javadoc>
            <method name="clone" type="Object" line="185">
                <comment line="189">
                    should not happen as this class is cloneable                    
                </comment>
                <scope line="186"/>
                <scope line="188"/>
            </method>
            <javadoc line="194">
                Returns the type of the method&apos;s return value.                
                <return>
                    the return type.                    
                </return>
            </javadoc>
            <method name="getReturnType" type="String" line="199"/>
            <javadoc line="203">
                &lt;p&gt;Returns the list of parameters for this operation.  Each
                  parameter is described by an &lt;CODE&gt;MBeanParameterInfo&lt;/CODE&gt;
                  object.&lt;/p&gt;
                  &lt;p&gt;The returned array is a shallow copy of the internal array,
                  which means that it is a copy of the internal array of
                  references to the &lt;CODE&gt;MBeanParameterInfo&lt;/CODE&gt; objects but
                  that each referenced &lt;CODE&gt;MBeanParameterInfo&lt;/CODE&gt; object is
                  not copied.&lt;/p&gt;                
                <return>
                    An array of <CODE>MBeanParameterInfo</CODE> objects.                    
                </return>
            </javadoc>
            <method name="getSignature" type="MBeanParameterInfo[]" line="216">
                <comment line="217">
                    If MBeanOperationInfo was created in our implementation,                    
                </comment>
                <comment line="218">
                    signature cannot be null - because our constructors replace                    
                </comment>
                <comment line="219">
                    null with MBeanParameterInfo.NO_PARAMS;                    
                </comment>
                <comment line="220">
                                        
                </comment>
                <comment line="221">
                    However, signature could be null if an  MBeanOperationInfo is                    
                </comment>
                <comment line="222">
                    deserialized from a byte array produced by another implementation.                    
                </comment>
                <comment line="223">
                    This is not very likely but possible, since the serial form says                    
                </comment>
                <comment line="224">
                    nothing against it. (see 6373150)                    
                </comment>
                <comment line="225">
                                        
                </comment>
                <comment line="227">
                    if signature is null simply return an empty array .                    
                </comment>
                <comment line="228">
                                        
                </comment>
            </method>
            <method name="fastGetSignature" type="MBeanParameterInfo[]" line="236">
                <comment line="238">
                    if signature is null simply return an empty array .                    
                </comment>
                <comment line="239">
                    see getSignature() above.                    
                </comment>
                <comment line="240">
                                        
                </comment>
                <scope line="237"/>
            </method>
            <javadoc line="247">
                Returns the impact of the method, one of
                  &lt;CODE&gt;INFO&lt;/CODE&gt;, &lt;CODE&gt;ACTION&lt;/CODE&gt;, &lt;CODE&gt;ACTION_INFO&lt;/CODE&gt;, &lt;CODE&gt;UNKNOWN&lt;/CODE&gt;.                
                <return>
                    the impact code.                    
                </return>
            </javadoc>
            <method name="getImpact" type="int" line="253"/>
            <method name="toString" type="String" line="258">
                <declaration name="impactString" type="String" line="259"/>
            </method>
            <javadoc line="277">
                Compare this MBeanOperationInfo to another.                
                <param>
                    o the object to compare to.                    
                </param>
                <return>
                    true if and only if <code>o</code> is an MBeanOperationInfo such
                      that its {@link #getName()}, {@link #getReturnType()}, {@link #getDescription()}, {@link #getImpact()}, {@link #getDescriptor()}and {@link #getSignature()} values are equal (not necessarily identical)
                      to those of this MBeanConstructorInfo.  Two signature arrays
                      are equal if their elements are pairwise equal.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="290">
                <params>
                    <param name="o" type="Object"/>
                </params>
                <declaration name="p" type="MBeanOperationInfo" line="295"/>
            </method>
            <method name="hashCode" type="int" line="311"/>
            <method name="methodSignature" type="MBeanParameterInfo[]" line="315">
                <params>
                    <param name="method" type="Method"/>
                </params>
                <declaration name="classes" type="Class&lt;?&gt;[]" line="316"/>
                <declaration name="annots" type="Annotation[][]" line="317"/>
            </method>
            <method name="parameters" type="MBeanParameterInfo[]" line="322">
                <params>
                    <param name="classes" type="Class<?>[]"/>
                    <param name="annots" type="Annotation[][]"/>
                </params>
                <declaration name="params" type="MBeanParameterInfo[]" line="323"/>
                <scope line="327">
                    <declaration name="d" type="Descriptor" line="328"/>
                    <declaration name="pn" type="String" line="329"/>
                </scope>
            </method>
        </class>
    </source>