<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management">
        <import package="java.util.Arrays"/>
        <class name="MBeanNotificationInfo" line="30">
            <extends class="MBeanFeatureInfo"/>
            <comment line="60">
                                
            </comment>
            <implements interface="Cloneable"/>
            <javadoc line="30">
                &lt;p&gt;The &lt;CODE&gt;MBeanNotificationInfo&lt;/CODE&gt; class is used to describe the
                  characteristics of the different notification instances
                  emitted by an MBean, for a given Java class of notification.
                  If an MBean emits notifications that can be instances of different Java classes,
                  then the metadata for that MBean should provide an &lt;CODE&gt;MBeanNotificationInfo&lt;/CODE&gt;
                  object for each of these notification Java classes.&lt;/p&gt;
                  &lt;p&gt;Instances of this class are immutable.  Subclasses may be
                  mutable but this is not recommended.&lt;/p&gt;
                  &lt;p&gt;This class extends &lt;CODE&gt;javax.management.MBeanFeatureInfo&lt;/CODE&gt;
                  and thus provides &lt;CODE&gt;name&lt;/CODE&gt; and &lt;CODE&gt;description&lt;/CODE&gt; fields.
                  The &lt;CODE&gt;name&lt;/CODE&gt; field should be the fully qualified Java class name of
                  the notification objects described by this class.&lt;/p&gt;
                  &lt;p&gt;The &lt;CODE&gt;getNotifTypes&lt;/CODE&gt; method returns an array of
                  strings containing the notification types that the MBean may
                  emit. The notification type is a dot-notation string which
                  describes what the emitted notification is about, not the Java
                  class of the notification.  A single generic notification class can
                  be used to send notifications of several types.  All of these types
                  are returned in the string array result of the
                  &lt;CODE&gt;getNotifTypes&lt;/CODE&gt; method.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="60"/>
            <declaration name="NO_TYPES" type="String[]" line="62"/>
            <declaration name="NO_NOTIFICATIONS" type="MBeanNotificationInfo[]" line="64"/>
            <declaration name="types" type="String[]" line="67"/>
            <javadoc line="67">
                @serial The different types of the notification.                
            </javadoc>
            <declaration name="arrayGettersSafe" type="boolean" line="72"/>
            <javadoc line="72">
                @see MBeanInfo#arrayGettersSafe                
            </javadoc>
            <javadoc line="75">
                Constructs an &lt;CODE&gt;MBeanNotificationInfo&lt;/CODE&gt; object.                
                <param>
                    notifTypes The array of strings (in dot notation)
                      containing the notification types that the MBean may emit.
                      This may be null with the same effect as a zero-length array.                    
                </param>
                <param>
                    name The fully qualified Java class name of the
                      described notifications.                    
                </param>
                <param>
                    description A human readable description of the data.                    
                </param>
            </javadoc>
            <method name="MBeanNotificationInfo" type="constructor" line="87">
                <params>
                    <param name="notifTypes" type="String[]"/>
                    <param name="name" type="String"/>
                    <param name="description" type="String"/>
                </params>
            </method>
            <javadoc line="91">
                Constructs an &lt;CODE&gt;MBeanNotificationInfo&lt;/CODE&gt; object.                
                <param>
                    notifTypes The array of strings (in dot notation)
                      containing the notification types that the MBean may emit.
                      This may be null with the same effect as a zero-length array.                    
                </param>
                <param>
                    name The fully qualified Java class name of the
                      described notifications.                    
                </param>
                <param>
                    description A human readable description of the data.                    
                </param>
                <param>
                    descriptor The descriptor for the notifications.  This may be null
                      which is equivalent to an empty descriptor.                    
                </param>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="MBeanNotificationInfo" type="constructor" line="108">
                <params>
                    <param name="notifTypes" type="String[]"/>
                    <param name="name" type="String"/>
                    <param name="description" type="String"/>
                    <param name="descriptor" type="Descriptor"/>
                </params>
                <comment line="112">
                    We do not validate the notifTypes, since the spec just says
                    they are dot-separated, not that they must look like Java
                    classes.  E.g. the spec doesn&apos;t forbid &quot;sun.prob.25&quot; as a
                    notifType, though it doesn&apos;t explicitly allow it                    
                </comment>
            </method>
            <javadoc line="126">
                Returns a shallow clone of this instance.
                  The clone is obtained by simply calling &lt;tt&gt;super.clone()&lt;/tt&gt;,
                  thus calling the default native shallow cloning mechanism
                  implemented by &lt;tt&gt;Object.clone()&lt;/tt&gt;.
                  No deeper cloning of any internal field is made.                
            </javadoc>
            <method name="clone" type="Object" line="133">
                <comment line="138">
                    should not happen as this class is cloneable                    
                </comment>
                <scope line="134"/>
                <scope line="136"/>
            </method>
            <javadoc line="143">
                Returns the array of strings (in dot notation) containing the
                  notification types that the MBean may emit.                
                <return>
                    the array of strings.  Changing the returned array has no
                      effect on this MBeanNotificationInfo.                    
                </return>
            </javadoc>
            <method name="getNotifTypes" type="String[]" line="150"/>
            <method name="fastGetNotifTypes" type="String[]" line="157"/>
            <method name="toString" type="String" line="164"/>
            <javadoc line="174">
                Compare this MBeanNotificationInfo to another.                
                <param>
                    o the object to compare to.                    
                </param>
                <return>
                    true if and only if <code>o</code> is an MBeanNotificationInfo
                      such that its {@link #getName()}, {@link #getDescription()},{@link #getDescriptor()},
                      and {@link #getNotifTypes()} values are equal (not necessarily
                      identical) to those of this MBeanNotificationInfo.  Two
                      notification type arrays are equal if their corresponding
                      elements are equal.  They are not equal if they have the same
                      elements but in a different order.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="188">
                <params>
                    <param name="o" type="Object"/>
                </params>
                <declaration name="p" type="MBeanNotificationInfo" line="193"/>
            </method>
            <method name="hashCode" type="int" line="200">
                <declaration name="hash" type="int" line="201"/>
            </method>
        </class>
    </source>