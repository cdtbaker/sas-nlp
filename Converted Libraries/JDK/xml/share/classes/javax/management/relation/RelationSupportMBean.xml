<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.relation">
        <interface name="RelationSupportMBean">
            <implements interface="Relation"/>
            <javadoc line="2">
                A RelationSupport object is used internally by the Relation Service to
                  represent simple relations (only roles, no properties or methods), with an
                  unlimited number of roles, of any relation type. As internal representation,
                  it is not exposed to the user.
                  &lt;P&gt;RelationSupport class conforms to the design patterns of standard MBean. So
                  the user can decide to instantiate a RelationSupport object himself as
                  a MBean (as it follows the MBean design patterns), to register it in the
                  MBean Server, and then to add it in the Relation Service.
                  &lt;P&gt;The user can also, when creating his own MBean relation class, have it
                  extending RelationSupport, to retrieve the implementations of required
                  interfaces (see below).
                  &lt;P&gt;It is also possible to have in a user relation MBean class a member
                  being a RelationSupport object, and to implement the required interfaces by
                  delegating all to this member.
                  &lt;P&gt; RelationSupport implements the Relation interface (to be handled by the
                  Relation Service).                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="isInRelationService" type="Boolean" line="22"/>
            <javadoc line="22">
                Returns an internal flag specifying if the object is still handled by
                  the Relation Service.                
                <return>
                    a Boolean equal to {@link Boolean#TRUE} if the object
                      is still handled by the Relation Service and {@link Boolean#FALSE} otherwise.                    
                </return>
            </javadoc>
            <method name="setRelationServiceManagementFlag" type="void" line="29"/>
            <javadoc line="29">
                &lt;p&gt;Specifies whether this relation is handled by the Relation
                  Service.&lt;/p&gt;
                  &lt;P&gt;BEWARE, this method has to be exposed as the Relation Service will
                  access the relation through its management interface. It is RECOMMENDED
                  NOT to use this method. Using it does not affect the registration of the
                  relation object in the Relation Service, but will provide wrong
                  information about it!                
                <param>
                    flag whether the relation is handled by the Relation Service.                    
                </param>
                <exception>
                    IllegalArgumentException  if null parameter                    
                </exception>
            </javadoc>
        </interface>
    </source>