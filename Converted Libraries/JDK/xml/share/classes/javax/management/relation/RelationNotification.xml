<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.relation">
        <import package="javax.management.Notification"/>
        <import package="javax.management.ObjectName"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.ObjectStreamField"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Collections"/>
        <import package="java.util.List"/>
        <import package="com.sun.jmx.mbeanserver.GetPropertyAction"/>
        <import package="com.sun.jmx.mbeanserver.Util.cast"/>
        <class name="RelationNotification" line="15">
            <extends class="Notification"/>
            <javadoc line="15">
                A notification of a change in the Relation Service.
                  A RelationNotification notification is sent when a relation is created via
                  the Relation Service, or an MBean is added as a relation in the Relation
                  Service, or a role is updated in a relation, or a relation is removed from
                  the Relation Service.
                  &lt;p&gt;The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-6871117877523310399L&lt;/code&gt;.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="oldSerialVersionUID" type="long" line="25"/>
            <declaration name="newSerialVersionUID" type="long" line="26"/>
            <declaration name="oldSerialPersistentFields" type="ObjectStreamField[]" line="27"/>
            <declaration name="newSerialPersistentFields" type="ObjectStreamField[]" line="28"/>
            <declaration name="serialVersionUID" type="long" line="29"/>
            <declaration name="serialPersistentFields" type="ObjectStreamField[]" line="30"/>
            <javadoc line="30">
                @serialField relationId String Relation identifier of
                  created/removed/updated relation                
                <serialField>
                    relationTypeName String Relation type name of
                      created/removed/updated relation                    
                </serialField>
                <serialField>
                    relationObjName ObjectName {@link ObjectName} of
                      the relation MBean of created/removed/updated relation (only if
                      the relation is represented by an MBean)                    
                </serialField>
                <serialField>
                    unregisterMBeanList List List of {@link ObjectName}s of referenced MBeans to be unregistered due to
                      relation removal                    
                </serialField>
                <serialField>
                    roleName String Name of updated role (only for role update)                    
                </serialField>
                <serialField>
                    oldRoleValue List Old role value ({@link ArrayList} of {@link ObjectName}s) (only for role update)                    
                </serialField>
                <serialField>
                    newRoleValue List New role value ({@link ArrayList} of {@link ObjectName}s) (only for role update)                    
                </serialField>
            </javadoc>
            <declaration name="compat" type="boolean" line="45"/>
            <scope line="46">
                <scope line="47">
                    <declaration name="act" type="GetPropertyAction" line="48"/>
                    <declaration name="form" type="String" line="49"/>
                </scope>
                <scope line="52"/>
                <scope line="54"/>
                <scope line="58"/>
            </scope>
            <declaration name="RELATION_BASIC_CREATION" type="String" line="63"/>
            <javadoc line="63">
                Type for the creation of an internal relation.                
            </javadoc>
            <declaration name="RELATION_MBEAN_CREATION" type="String" line="67"/>
            <javadoc line="67">
                Type for the relation MBean added into the Relation Service.                
            </javadoc>
            <declaration name="RELATION_BASIC_UPDATE" type="String" line="71"/>
            <javadoc line="71">
                Type for an update of an internal relation.                
            </javadoc>
            <declaration name="RELATION_MBEAN_UPDATE" type="String" line="75"/>
            <javadoc line="75">
                Type for the update of a relation MBean.                
            </javadoc>
            <declaration name="RELATION_BASIC_REMOVAL" type="String" line="79"/>
            <javadoc line="79">
                Type for the removal from the Relation Service of an internal relation.                
            </javadoc>
            <declaration name="RELATION_MBEAN_REMOVAL" type="String" line="83"/>
            <javadoc line="83">
                Type for the removal from the Relation Service of a relation MBean.                
            </javadoc>
            <declaration name="relationId" type="String" line="87"/>
            <javadoc line="87">
                @serial Relation identifier of created/removed/updated relation                
            </javadoc>
            <declaration name="relationTypeName" type="String" line="91"/>
            <javadoc line="91">
                @serial Relation type name of created/removed/updated relation                
            </javadoc>
            <declaration name="relationObjName" type="ObjectName" line="95"/>
            <javadoc line="95">
                @serial {@link ObjectName} of the relation MBean of created/removed/updated relation
                  (only if the relation is represented by an MBean)                
            </javadoc>
            <declaration name="unregisterMBeanList" type="List&lt;ObjectName&gt;" line="100"/>
            <javadoc line="100">
                @serial List of {@link ObjectName}s of referenced MBeans to be unregistered due to
                  relation removal                
            </javadoc>
            <declaration name="roleName" type="String" line="105"/>
            <javadoc line="105">
                @serial Name of updated role (only for role update)                
            </javadoc>
            <declaration name="oldRoleValue" type="List&lt;ObjectName&gt;" line="109"/>
            <javadoc line="109">
                @serial Old role value ({@link ArrayList} of {@link ObjectName}s) (only for role update)                
            </javadoc>
            <declaration name="newRoleValue" type="List&lt;ObjectName&gt;" line="113"/>
            <javadoc line="113">
                @serial New role value ({@link ArrayList} of {@link ObjectName}s) (only for role update)                
            </javadoc>
            <javadoc line="117">
                Creates a notification for either a relation creation (RelationSupport
                  object created internally in the Relation Service, or an MBean added as a
                  relation) or for a relation removal from the Relation Service.                
                <param>
                    notifType  type of the notification; either:
                      <P>- RELATION_BASIC_CREATION
                      <P>- RELATION_MBEAN_CREATION
                      <P>- RELATION_BASIC_REMOVAL
                      <P>- RELATION_MBEAN_REMOVAL                    
                </param>
                <param>
                    sourceObj  source object, sending the notification.  This is either
                      an ObjectName or a RelationService object.  In the latter case it must be
                      the MBean emitting the notification; the MBean Server will rewrite the
                      source to be the ObjectName under which that MBean is registered.                    
                </param>
                <param>
                    sequence  sequence number to identify the notification                    
                </param>
                <param>
                    timeStamp  time stamp                    
                </param>
                <param>
                    message  human-readable message describing the notification                    
                </param>
                <param>
                    id  relation id identifying the relation in the Relation
                      Service                    
                </param>
                <param>
                    typeName  name of the relation type                    
                </param>
                <param>
                    objectName  ObjectName of the relation object if it is an MBean
                      (null for relations internally handled by the Relation Service)                    
                </param>
                <param>
                    unregMBeanList  list of ObjectNames of referenced MBeans
                      expected to be unregistered due to relation removal (only for removal,
                      due to CIM qualifiers, can be null)                    
                </param>
                <exception>
                    IllegalArgumentException  if:
                      <P>- no value for the notification type
                      <P>- the notification type is not RELATION_BASIC_CREATION,
                      RELATION_MBEAN_CREATION, RELATION_BASIC_REMOVAL or
                      RELATION_MBEAN_REMOVAL
                      <P>- no source object
                      <P>- the source object is not a Relation Service
                      <P>- no relation id
                      <P>- no relation type name                    
                </exception>
            </javadoc>
            <method name="RelationNotification" type="constructor" line="151">
                <params>
                    <param name="notifType" type="String"/>
                    <param name="sourceObj" type="Object"/>
                    <param name="sequence" type="long"/>
                    <param name="timeStamp" type="long"/>
                    <param name="message" type="String"/>
                    <param name="id" type="String"/>
                    <param name="typeName" type="String"/>
                    <param name="objectName" type="ObjectName"/>
                    <param name="unregMBeanList" type="List<ObjectName>"/>
                </params>
            </method>
            <javadoc line="156">
                Creates a notification for a role update in a relation.                
                <param>
                    notifType  type of the notification; either:
                      <P>- RELATION_BASIC_UPDATE
                      <P>- RELATION_MBEAN_UPDATE                    
                </param>
                <param>
                    sourceObj  source object, sending the notification. This is either
                      an ObjectName or a RelationService object.  In the latter case it must be
                      the MBean emitting the notification; the MBean Server will rewrite the
                      source to be the ObjectName under which that MBean is registered.                    
                </param>
                <param>
                    sequence  sequence number to identify the notification                    
                </param>
                <param>
                    timeStamp  time stamp                    
                </param>
                <param>
                    message  human-readable message describing the notification                    
                </param>
                <param>
                    id  relation id identifying the relation in the Relation
                      Service                    
                </param>
                <param>
                    typeName  name of the relation type                    
                </param>
                <param>
                    objectName  ObjectName of the relation object if it is an MBean
                      (null for relations internally handled by the Relation Service)                    
                </param>
                <param>
                    name  name of the updated role                    
                </param>
                <param>
                    newValue  new role value (List of ObjectName objects)                    
                </param>
                <param>
                    oldValue  old role value (List of ObjectName objects)                    
                </param>
                <exception>
                    IllegalArgumentException  if null parameter                    
                </exception>
            </javadoc>
            <method name="RelationNotification" type="constructor" line="178">
                <params>
                    <param name="notifType" type="String"/>
                    <param name="sourceObj" type="Object"/>
                    <param name="sequence" type="long"/>
                    <param name="timeStamp" type="long"/>
                    <param name="message" type="String"/>
                    <param name="id" type="String"/>
                    <param name="typeName" type="String"/>
                    <param name="objectName" type="ObjectName"/>
                    <param name="name" type="String"/>
                    <param name="newValue" type="List<ObjectName>"/>
                    <param name="oldValue" type="List<ObjectName>"/>
                </params>
            </method>
            <javadoc line="183">
                Returns the relation identifier of created/removed/updated relation.                
                <return>
                    the relation id.                    
                </return>
            </javadoc>
            <method name="getRelationId" type="String" line="187"/>
            <javadoc line="190">
                Returns the relation type name of created/removed/updated relation.                
                <return>
                    the relation type name.                    
                </return>
            </javadoc>
            <method name="getRelationTypeName" type="String" line="194"/>
            <javadoc line="197">
                Returns the ObjectName of the
                  created/removed/updated relation.                
                <return>
                    the ObjectName if the relation is an MBean, otherwise null.                    
                </return>
            </javadoc>
            <method name="getObjectName" type="ObjectName" line="202"/>
            <javadoc line="205">
                Returns the list of ObjectNames of MBeans expected to be unregistered
                  due to a relation removal (only for relation removal).                
                <return>
                    a {@link List} of {@link ObjectName}.                    
                </return>
            </javadoc>
            <method name="getMBeansToUnregister" type="List<ObjectName>" line="210">
                <declaration name="result" type="List&lt;ObjectName&gt;" line="211"/>
                <scope line="212"/>
                <scope line="215"/>
            </method>
            <javadoc line="220">
                Returns name of updated role of updated relation (only for role update).                
                <return>
                    the name of the updated role.                    
                </return>
            </javadoc>
            <method name="getRoleName" type="String" line="224">
                <declaration name="result" type="String" line="225"/>
                <scope line="226"/>
            </method>
            <javadoc line="231">
                Returns old value of updated role (only for role update).                
                <return>
                    the old value of the updated role.                    
                </return>
            </javadoc>
            <method name="getOldRoleValue" type="List<ObjectName>" line="235">
                <declaration name="result" type="List&lt;ObjectName&gt;" line="236"/>
                <scope line="237"/>
                <scope line="240"/>
            </method>
            <javadoc line="245">
                Returns new value of updated role (only for role update).                
                <return>
                    the new value of the updated role.                    
                </return>
            </javadoc>
            <method name="getNewRoleValue" type="List<ObjectName>" line="249">
                <declaration name="result" type="List&lt;ObjectName&gt;" line="250"/>
                <scope line="251"/>
                <scope line="254"/>
            </method>
            <method name="initMembers" type="void" line="259">
                <params>
                    <param name="notifKind" type="int"/>
                    <param name="notifType" type="String"/>
                    <param name="sourceObj" type="Object"/>
                    <param name="sequence" type="long"/>
                    <param name="timeStamp" type="long"/>
                    <param name="message" type="String"/>
                    <param name="id" type="String"/>
                    <param name="typeName" type="String"/>
                    <param name="objectName" type="ObjectName"/>
                    <param name="unregMBeanList" type="List<ObjectName>"/>
                    <param name="name" type="String"/>
                    <param name="newValue" type="List<ObjectName>"/>
                    <param name="oldValue" type="List<ObjectName>"/>
                </params>
                <declaration name="badInitFlg" type="boolean" line="260"/>
                <scope line="261"/>
                <scope line="264">
                    <scope line="265"/>
                </scope>
                <scope line="269">
                    <scope line="270"/>
                </scope>
                <scope line="274">
                    <declaration name="excMsg" type="String" line="275"/>
                </scope>
                <scope line="281"/>
                <scope line="284"/>
                <scope line="287"/>
                <scope line="290"/>
            </method>
            <javadoc line="295">
                Deserializes a {@link RelationNotification} from an {@link ObjectInputStream}.                
            </javadoc>
            <method name="readObject" type="void" line="298">
                <params>
                    <param name="in" type="ObjectInputStream"/>
                </params>
                <scope line="299">
                    <declaration name="fields" type="ObjectInputStream.GetField" line="300"/>
                    <scope line="302"/>
                    <scope line="306"/>
                    <scope line="310"/>
                    <scope line="314"/>
                    <scope line="318"/>
                    <scope line="322"/>
                    <scope line="326"/>
                </scope>
                <scope line="330"/>
            </method>
            <javadoc line="334">
                Serializes a {@link RelationNotification} to an {@link ObjectOutputStream}.                
            </javadoc>
            <method name="writeObject" type="void" line="337">
                <params>
                    <param name="out" type="ObjectOutputStream"/>
                </params>
                <scope line="338">
                    <declaration name="fields" type="ObjectOutputStream.PutField" line="339"/>
                </scope>
                <scope line="349"/>
            </method>
        </class>
    </source>