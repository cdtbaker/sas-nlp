<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.relation">
        <import package="javax.management.Notification"/>
        <import package="javax.management.ObjectName"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.ObjectStreamField"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Collections"/>
        <import package="java.util.List"/>
        <import package="com.sun.jmx.mbeanserver.GetPropertyAction"/>
        <import package="com.sun.jmx.mbeanserver.Util.cast"/>
        <class name="RelationNotification" line="46">
            <extends class="Notification"/>
            <comment line="58">
                serialVersionUID not constant                
            </comment>
            <comment line="61">
                Serialization compatibility stuff:
                 Two serial forms are supported in this class. The selected form depends
                 on system property &quot;jmx.serial.form&quot;:
                  - &quot;1.0&quot; for JMX 1.0
                  - any other value for JMX 1.1 and higher
                
                 Serial version for old serial form                
            </comment>
            <comment line="69">
                Serial version for new serial form                
            </comment>
            <comment line="72">
                Serializable fields in old serial form                
            </comment>
            <comment line="84">
                Serializable fields in new serial form                
            </comment>
            <comment line="96">
                Actual serial version and serial form                
            </comment>
            <comment line="134">
                END Serialization compatibility stuff                
            </comment>
            <comment line="137">
                Notification types                
            </comment>
            <comment line="166">
                Private members                
            </comment>
            <comment line="207">
                Constructors                
            </comment>
            <comment line="334">
                Accessors                
            </comment>
            <comment line="425">
                Misc                
            </comment>
            <comment line="429">
                Initializes members
                
                 -param notifKind  1 for creation/removal, 2 for update
                 -param notifType  type of the notification; either:
                  - RELATION_BASIC_UPDATE
                  - RELATION_MBEAN_UPDATE
                  for an update, or:
                  - RELATION_BASIC_CREATION
                  - RELATION_MBEAN_CREATION
                  - RELATION_BASIC_REMOVAL
                  - RELATION_MBEAN_REMOVAL
                  for a creation or removal
                 -param sourceObj  source object, sending the notification. Will always
                  be a RelationService object.
                 -param sequence  sequence number to identify the notification
                 -param timeStamp  time stamp
                 -param message  human-readable message describing the notification
                 -param id  relation id identifying the relation in the Relation
                  Service
                 -param typeName  name of the relation type
                 -param objectName  ObjectName of the relation object if it is an MBean
                  (null for relations internally handled by the Relation Service)
                 -param unregMBeanList  list of ObjectNames of MBeans expected to be
                  removed due to relation removal
                 -param name  name of the updated role
                 -param newValue  new value (List of ObjectName objects)
                 -param oldValue  old value (List of ObjectName objects)
                
                 -exception IllegalArgumentException  if:
                  - no value for the notification type
                  - incorrect notification type
                  - no source object
                  - the source object is not a Relation Service
                  - no relation id
                  - no relation type name
                  - no role name (for role update)
                  - no role old value (for role update)
                  - no role new value (for role update)                
            </comment>
            <javadoc line="46">
                A notification of a change in the Relation Service.
                  A RelationNotification notification is sent when a relation is created via
                  the Relation Service, or an MBean is added as a relation in the Relation
                  Service, or a role is updated in a relation, or a relation is removed from
                  the Relation Service.
                  &lt;p&gt;The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-6871117877523310399L&lt;/code&gt;.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="oldSerialVersionUID" type="long" line="67"/>
            <declaration name="newSerialVersionUID" type="long" line="70"/>
            <declaration name="oldSerialPersistentFields" type="ObjectStreamField[]" line="73"/>
            <declaration name="newSerialPersistentFields" type="ObjectStreamField[]" line="85"/>
            <declaration name="serialVersionUID" type="long" line="97"/>
            <declaration name="serialPersistentFields" type="ObjectStreamField[]" line="98"/>
            <javadoc line="98">
                @serialField relationId String Relation identifier of
                  created/removed/updated relation                
                <serialField>
                    relationTypeName String Relation type name of
                      created/removed/updated relation                    
                </serialField>
                <serialField>
                    relationObjName ObjectName {@link ObjectName} of
                      the relation MBean of created/removed/updated relation (only if
                      the relation is represented by an MBean)                    
                </serialField>
                <serialField>
                    unregisterMBeanList List List of {@link ObjectName}s of referenced MBeans to be unregistered due to
                      relation removal                    
                </serialField>
                <serialField>
                    roleName String Name of updated role (only for role update)                    
                </serialField>
                <serialField>
                    oldRoleValue List Old role value ({@link ArrayList} of {@link ObjectName}s) (only for role update)                    
                </serialField>
                <serialField>
                    newRoleValue List New role value ({@link ArrayList} of {@link ObjectName}s) (only for role update)                    
                </serialField>
            </javadoc>
            <declaration name="compat" type="boolean" line="116"/>
            <scope line="117">
                <scope line="118">
                    <declaration name="act" type="GetPropertyAction" line="119"/>
                    <declaration name="form" type="String" line="120"/>
                </scope>
                <scope line="122"/>
                <scope line="125"/>
                <scope line="128"/>
            </scope>
            <declaration name="RELATION_BASIC_CREATION" type="String" line="140"/>
            <javadoc line="140">
                Type for the creation of an internal relation.                
            </javadoc>
            <declaration name="RELATION_MBEAN_CREATION" type="String" line="144"/>
            <javadoc line="144">
                Type for the relation MBean added into the Relation Service.                
            </javadoc>
            <declaration name="RELATION_BASIC_UPDATE" type="String" line="148"/>
            <javadoc line="148">
                Type for an update of an internal relation.                
            </javadoc>
            <declaration name="RELATION_MBEAN_UPDATE" type="String" line="152"/>
            <javadoc line="152">
                Type for the update of a relation MBean.                
            </javadoc>
            <declaration name="RELATION_BASIC_REMOVAL" type="String" line="156"/>
            <javadoc line="156">
                Type for the removal from the Relation Service of an internal relation.                
            </javadoc>
            <declaration name="RELATION_MBEAN_REMOVAL" type="String" line="160"/>
            <javadoc line="160">
                Type for the removal from the Relation Service of a relation MBean.                
            </javadoc>
            <declaration name="relationId" type="String" line="169"/>
            <javadoc line="169">
                @serial Relation identifier of created/removed/updated relation                
            </javadoc>
            <declaration name="relationTypeName" type="String" line="174"/>
            <javadoc line="174">
                @serial Relation type name of created/removed/updated relation                
            </javadoc>
            <declaration name="relationObjName" type="ObjectName" line="179"/>
            <javadoc line="179">
                @serial {@link ObjectName} of the relation MBean of created/removed/updated relation
                  (only if the relation is represented by an MBean)                
            </javadoc>
            <declaration name="unregisterMBeanList" type="List&lt;ObjectName&gt;" line="185"/>
            <javadoc line="185">
                @serial List of {@link ObjectName}s of referenced MBeans to be unregistered due to
                  relation removal                
            </javadoc>
            <declaration name="roleName" type="String" line="191"/>
            <javadoc line="191">
                @serial Name of updated role (only for role update)                
            </javadoc>
            <declaration name="oldRoleValue" type="List&lt;ObjectName&gt;" line="196"/>
            <javadoc line="196">
                @serial Old role value ({@link ArrayList} of {@link ObjectName}s) (only for role update)                
            </javadoc>
            <declaration name="newRoleValue" type="List&lt;ObjectName&gt;" line="201"/>
            <javadoc line="201">
                @serial New role value ({@link ArrayList} of {@link ObjectName}s) (only for role update)                
            </javadoc>
            <javadoc line="210">
                Creates a notification for either a relation creation (RelationSupport
                  object created internally in the Relation Service, or an MBean added as a
                  relation) or for a relation removal from the Relation Service.                
                <param>
                    notifType  type of the notification; either:
                      &lt;P&gt;- RELATION_BASIC_CREATION
                      &lt;P&gt;- RELATION_MBEAN_CREATION
                      &lt;P&gt;- RELATION_BASIC_REMOVAL
                      &lt;P&gt;- RELATION_MBEAN_REMOVAL                    
                </param>
                <param>
                    sourceObj  source object, sending the notification.  This is either
                      an ObjectName or a RelationService object.  In the latter case it must be
                      the MBean emitting the notification; the MBean Server will rewrite the
                      source to be the ObjectName under which that MBean is registered.                    
                </param>
                <param>
                    sequence  sequence number to identify the notification                    
                </param>
                <param>
                    timeStamp  time stamp                    
                </param>
                <param>
                    message  human-readable message describing the notification                    
                </param>
                <param>
                    id  relation id identifying the relation in the Relation
                      Service                    
                </param>
                <param>
                    typeName  name of the relation type                    
                </param>
                <param>
                    objectName  ObjectName of the relation object if it is an MBean
                      (null for relations internally handled by the Relation Service)                    
                </param>
                <param>
                    unregMBeanList  list of ObjectNames of referenced MBeans
                      expected to be unregistered due to relation removal (only for removal,
                      due to CIM qualifiers, can be null)                    
                </param>
                <exception>
                    IllegalArgumentException  if:
                      &lt;P&gt;- no value for the notification type
                      &lt;P&gt;- the notification type is not RELATION_BASIC_CREATION,
                      RELATION_MBEAN_CREATION, RELATION_BASIC_REMOVAL or
                      RELATION_MBEAN_REMOVAL
                      &lt;P&gt;- no source object
                      &lt;P&gt;- the source object is not a Relation Service
                      &lt;P&gt;- no relation id
                      &lt;P&gt;- no relation type name                    
                </exception>
            </javadoc>
            <method name="RelationNotification" type="constructor" line="255">
                <params>
                    <param name="notifType" type="String"/>
                    <param name="sourceObj" type="Object"/>
                    <param name="sequence" type="long"/>
                    <param name="timeStamp" type="long"/>
                    <param name="message" type="String"/>
                    <param name="id" type="String"/>
                    <param name="typeName" type="String"/>
                    <param name="objectName" type="ObjectName"/>
                    <param name="unregMBeanList" type="List<ObjectName>"/>
                </params>
                <comment line="260">
                    Can throw IllegalArgumentException                    
                </comment>
            </method>
            <javadoc line="276">
                Creates a notification for a role update in a relation.                
                <param>
                    notifType  type of the notification; either:
                      &lt;P&gt;- RELATION_BASIC_UPDATE
                      &lt;P&gt;- RELATION_MBEAN_UPDATE                    
                </param>
                <param>
                    sourceObj  source object, sending the notification. This is either
                      an ObjectName or a RelationService object.  In the latter case it must be
                      the MBean emitting the notification; the MBean Server will rewrite the
                      source to be the ObjectName under which that MBean is registered.                    
                </param>
                <param>
                    sequence  sequence number to identify the notification                    
                </param>
                <param>
                    timeStamp  time stamp                    
                </param>
                <param>
                    message  human-readable message describing the notification                    
                </param>
                <param>
                    id  relation id identifying the relation in the Relation
                      Service                    
                </param>
                <param>
                    typeName  name of the relation type                    
                </param>
                <param>
                    objectName  ObjectName of the relation object if it is an MBean
                      (null for relations internally handled by the Relation Service)                    
                </param>
                <param>
                    name  name of the updated role                    
                </param>
                <param>
                    newValue  new role value (List of ObjectName objects)                    
                </param>
                <param>
                    oldValue  old role value (List of ObjectName objects)                    
                </param>
                <exception>
                    IllegalArgumentException  if null parameter                    
                </exception>
            </javadoc>
            <method name="RelationNotification" type="constructor" line="312">
                <params>
                    <param name="notifType" type="String"/>
                    <param name="sourceObj" type="Object"/>
                    <param name="sequence" type="long"/>
                    <param name="timeStamp" type="long"/>
                    <param name="message" type="String"/>
                    <param name="id" type="String"/>
                    <param name="typeName" type="String"/>
                    <param name="objectName" type="ObjectName"/>
                    <param name="name" type="String"/>
                    <param name="newValue" type="List<ObjectName>"/>
                    <param name="oldValue" type="List<ObjectName>"/>
                </params>
                <comment line="317">
                    Can throw IllegalArgumentException                    
                </comment>
            </method>
            <javadoc line="337">
                Returns the relation identifier of created/removed/updated relation.                
                <return>
                    the relation id.                    
                </return>
            </javadoc>
            <method name="getRelationId" type="String" line="342"/>
            <javadoc line="346">
                Returns the relation type name of created/removed/updated relation.                
                <return>
                    the relation type name.                    
                </return>
            </javadoc>
            <method name="getRelationTypeName" type="String" line="351"/>
            <javadoc line="355">
                Returns the ObjectName of the
                  created/removed/updated relation.                
                <return>
                    the ObjectName if the relation is an MBean, otherwise null.                    
                </return>
            </javadoc>
            <method name="getObjectName" type="ObjectName" line="361"/>
            <javadoc line="365">
                Returns the list of ObjectNames of MBeans expected to be unregistered
                  due to a relation removal (only for relation removal).                
                <return>
                    a {@link List} of {@link ObjectName}.                    
                </return>
            </javadoc>
            <method name="getMBeansToUnregister" type="List<ObjectName>" line="371">
                <declaration name="result" type="List&lt;ObjectName&gt;" line="372"/>
                <scope line="373"/>
                <scope line="375"/>
            </method>
            <javadoc line="381">
                Returns name of updated role of updated relation (only for role update).                
                <return>
                    the name of the updated role.                    
                </return>
            </javadoc>
            <method name="getRoleName" type="String" line="386">
                <declaration name="result" type="String" line="387"/>
                <scope line="388"/>
            </method>
            <javadoc line="394">
                Returns old value of updated role (only for role update).                
                <return>
                    the old value of the updated role.                    
                </return>
            </javadoc>
            <method name="getOldRoleValue" type="List<ObjectName>" line="399">
                <declaration name="result" type="List&lt;ObjectName&gt;" line="400"/>
                <scope line="401"/>
                <scope line="403"/>
            </method>
            <javadoc line="409">
                Returns new value of updated role (only for role update).                
                <return>
                    the new value of the updated role.                    
                </return>
            </javadoc>
            <method name="getNewRoleValue" type="List<ObjectName>" line="414">
                <declaration name="result" type="List&lt;ObjectName&gt;" line="415"/>
                <scope line="416"/>
                <scope line="418"/>
            </method>
            <method name="initMembers" type="void" line="479">
                <params>
                    <param name="notifKind" type="int"/>
                    <param name="notifType" type="String"/>
                    <param name="sourceObj" type="Object"/>
                    <param name="sequence" type="long"/>
                    <param name="timeStamp" type="long"/>
                    <param name="message" type="String"/>
                    <param name="id" type="String"/>
                    <param name="typeName" type="String"/>
                    <param name="objectName" type="ObjectName"/>
                    <param name="unregMBeanList" type="List<ObjectName>"/>
                    <param name="name" type="String"/>
                    <param name="newValue" type="List<ObjectName>"/>
                    <param name="oldValue" type="List<ObjectName>"/>
                </params>
                <comment line="505">
                    Creation/removal                    
                </comment>
                <comment line="518">
                    Role update                    
                </comment>
                <declaration name="badInitFlg" type="boolean" line="481"/>
                <scope line="488"/>
                <scope line="493">
                    <scope line="502"/>
                </scope>
                <scope line="508">
                    <scope line="515"/>
                </scope>
                <scope line="522">
                    <declaration name="excMsg" type="String" line="523"/>
                </scope>
                <scope line="530"/>
                <scope line="533"/>
                <scope line="536"/>
                <scope line="539"/>
            </method>
            <javadoc line="545">
                Deserializes a {@link RelationNotification} from an {@link ObjectInputStream}.                
            </javadoc>
            <method name="readObject" type="void" line="549">
                <params>
                    <param name="in" type="ObjectInputStream"/>
                </params>
                <comment line="553">
                    Read an object serialized in the old serial form                    
                </comment>
                <comment line="594">
                    Read an object serialized in the new serial form                    
                </comment>
                <scope line="551">
                    <declaration name="fields" type="ObjectInputStream.GetField" line="554"/>
                    <scope line="557"/>
                    <scope line="562"/>
                    <scope line="567"/>
                    <scope line="572"/>
                    <scope line="577"/>
                    <scope line="582"/>
                    <scope line="587"/>
                </scope>
                <scope line="592"/>
            </method>
            <javadoc line="600">
                Serializes a {@link RelationNotification} to an {@link ObjectOutputStream}.                
            </javadoc>
            <method name="writeObject" type="void" line="604">
                <params>
                    <param name="out" type="ObjectOutputStream"/>
                </params>
                <comment line="608">
                    Serializes this instance in the old serial form                    
                </comment>
                <comment line="622">
                    Serializes this instance in the new serial form                    
                </comment>
                <scope line="606">
                    <declaration name="fields" type="ObjectOutputStream.PutField" line="609"/>
                </scope>
                <scope line="620"/>
            </method>
        </class>
    </source>