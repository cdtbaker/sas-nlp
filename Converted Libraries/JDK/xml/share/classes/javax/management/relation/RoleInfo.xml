<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.relation">
        <import package="com.sun.jmx.mbeanserver.GetPropertyAction"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.ObjectStreamField"/>
        <import package="java.io.Serializable"/>
        <import package="java.security.AccessController"/>
        <import package="javax.management.MBeanServer"/>
        <import package="javax.management.NotCompliantMBeanException"/>
        <class name="RoleInfo" line="42">
            <comment line="50">
                serialVersionUID not constant                
            </comment>
            <comment line="53">
                Serialization compatibility stuff:                
            </comment>
            <comment line="54">
                Two serial forms are supported in this class. The selected form depends                
            </comment>
            <comment line="55">
                on system property &quot;jmx.serial.form&quot;:                
            </comment>
            <comment line="56">
                - &quot;1.0&quot; for JMX 1.0                
            </comment>
            <comment line="57">
                - any other value for JMX 1.1 and higher                
            </comment>
            <comment line="58">
                                
            </comment>
            <comment line="59">
                Serial version for old serial form                
            </comment>
            <comment line="61">
                                
            </comment>
            <comment line="62">
                Serial version for new serial form                
            </comment>
            <comment line="64">
                                
            </comment>
            <comment line="65">
                Serializable fields in old serial form                
            </comment>
            <comment line="76">
                                
            </comment>
            <comment line="77">
                Serializable fields in new serial form                
            </comment>
            <comment line="88">
                                
            </comment>
            <comment line="89">
                Actual serial version and serial form                
            </comment>
            <comment line="118">
                                
            </comment>
            <comment line="119">
                END Serialization compatibility stuff                
            </comment>
            <comment line="121">
                                
            </comment>
            <comment line="122">
                Public constants                
            </comment>
            <comment line="123">
                                
            </comment>
            <comment line="130">
                                
            </comment>
            <comment line="131">
                Private members                
            </comment>
            <comment line="132">
                                
            </comment>
            <comment line="169">
                                
            </comment>
            <comment line="170">
                Constructors                
            </comment>
            <comment line="171">
                                
            </comment>
            <comment line="348">
                                
            </comment>
            <comment line="349">
                Accessors                
            </comment>
            <comment line="350">
                                
            </comment>
            <comment line="470">
                                
            </comment>
            <comment line="471">
                Misc                
            </comment>
            <comment line="472">
                                
            </comment>
            <comment line="474">
                Initialization                
            </comment>
            <implements interface="Serializable"/>
            <javadoc line="42">
                A RoleInfo object summarises a role in a relation type.
                  &lt;p&gt;The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;2504952983494636987L&lt;/code&gt;.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="oldSerialVersionUID" type="long" line="59"/>
            <declaration name="newSerialVersionUID" type="long" line="62"/>
            <declaration name="oldSerialPersistentFields" type="ObjectStreamField[]" line="65"/>
            <declaration name="newSerialPersistentFields" type="ObjectStreamField[]" line="77"/>
            <declaration name="serialVersionUID" type="long" line="89"/>
            <declaration name="serialPersistentFields" type="ObjectStreamField[]" line="90"/>
            <javadoc line="90">
                @serialField name String Role name                
                <serialField>
                    isReadable boolean Read access mode: <code>true</code> if role is readable                    
                </serialField>
                <serialField>
                    isWritable boolean Write access mode: <code>true</code> if role is writable                    
                </serialField>
                <serialField>
                    description String Role description                    
                </serialField>
                <serialField>
                    minDegree int Minimum degree (i.e. minimum number of referenced MBeans in corresponding role)                    
                </serialField>
                <serialField>
                    maxDegree int Maximum degree (i.e. maximum number of referenced MBeans in corresponding role)                    
                </serialField>
                <serialField>
                    referencedMBeanClassName String Name of class of MBean(s) expected to be referenced in corresponding role                    
                </serialField>
            </javadoc>
            <declaration name="compat" type="boolean" line="100"/>
            <scope line="101">
                <scope line="102">
                    <declaration name="act" type="GetPropertyAction" line="103"/>
                    <declaration name="form" type="String" line="104"/>
                </scope>
                <scope line="106"/>
                <scope line="109"/>
                <scope line="112"/>
            </scope>
            <declaration name="ROLE_CARDINALITY_INFINITY" type="int" line="124"/>
            <javadoc line="124">
                To specify an unlimited cardinality.                
            </javadoc>
            <declaration name="name" type="String" line="133"/>
            <javadoc line="133">
                @serial Role name                
            </javadoc>
            <declaration name="isReadable" type="boolean" line="138"/>
            <javadoc line="138">
                @serial Read access mode: &lt;code&gt;true&lt;/code&gt; if role is readable                
            </javadoc>
            <declaration name="isWritable" type="boolean" line="143"/>
            <javadoc line="143">
                @serial Write access mode: &lt;code&gt;true&lt;/code&gt; if role is writable                
            </javadoc>
            <declaration name="description" type="String" line="148"/>
            <javadoc line="148">
                @serial Role description                
            </javadoc>
            <declaration name="minDegree" type="int" line="153"/>
            <javadoc line="153">
                @serial Minimum degree (i.e. minimum number of referenced MBeans in corresponding role)                
            </javadoc>
            <declaration name="maxDegree" type="int" line="158"/>
            <javadoc line="158">
                @serial Maximum degree (i.e. maximum number of referenced MBeans in corresponding role)                
            </javadoc>
            <declaration name="referencedMBeanClassName" type="String" line="163"/>
            <javadoc line="163">
                @serial Name of class of MBean(s) expected to be referenced in corresponding role                
            </javadoc>
            <javadoc line="172">
                Constructor.                
                <param>
                    roleName  name of the role.                    
                </param>
                <param>
                    mbeanClassName  name of the class of MBean(s) expected to
                      be referenced in corresponding role.  If an MBean <em>M</em> is in
                      this role, then the MBean server must return true for{@link MBeanServer#isInstanceOf isInstanceOf(M, mbeanClassName)}.                    
                </param>
                <param>
                    read  flag to indicate if the corresponding role
                      can be read                    
                </param>
                <param>
                    write  flag to indicate if the corresponding role
                      can be set                    
                </param>
                <param>
                    min  minimum degree for role, i.e. minimum number of
                      MBeans to provide in corresponding role
                      Must be less than or equal to <tt>max</tt>.
                      (ROLE_CARDINALITY_INFINITY for unlimited)                    
                </param>
                <param>
                    max  maximum degree for role, i.e. maximum number of
                      MBeans to provide in corresponding role
                      Must be greater than or equal to <tt>min</tt>
                      (ROLE_CARDINALITY_INFINITY for unlimited)                    
                </param>
                <param>
                    descr  description of the role (can be null)                    
                </param>
                <exception>
                    IllegalArgumentException  if null parameter                    
                </exception>
                <exception>
                    InvalidRoleInfoException  if the minimum degree is
                      greater than the maximum degree.                    
                </exception>
                <exception>
                    ClassNotFoundException As of JMX 1.2, this exception
                      can no longer be thrown.  It is retained in the declaration of
                      this class for compatibility with existing code.                    
                </exception>
                <exception>
                    NotCompliantMBeanException  if the class mbeanClassName
                      is not a MBean class.                    
                </exception>
            </javadoc>
            <method name="RoleInfo" type="constructor" line="213">
                <params>
                    <param name="roleName" type="String"/>
                    <param name="mbeanClassName" type="String"/>
                    <param name="read" type="boolean"/>
                    <param name="write" type="boolean"/>
                    <param name="min" type="int"/>
                    <param name="max" type="int"/>
                    <param name="descr" type="String"/>
                </params>
            </method>
            <javadoc line="225">
                Constructor.                
                <param>
                    roleName  name of the role                    
                </param>
                <param>
                    mbeanClassName  name of the class of MBean(s) expected to
                      be referenced in corresponding role.  If an MBean <em>M</em> is in
                      this role, then the MBean server must return true for{@link MBeanServer#isInstanceOf isInstanceOf(M, mbeanClassName)}.                    
                </param>
                <param>
                    read  flag to indicate if the corresponding role
                      can be read                    
                </param>
                <param>
                    write  flag to indicate if the corresponding role
                      can be set
                      <P>Minimum and maximum degrees defaulted to 1.
                      <P>Description of role defaulted to null.                    
                </param>
                <exception>
                    IllegalArgumentException  if null parameter                    
                </exception>
                <exception>
                    ClassNotFoundException As of JMX 1.2, this exception
                      can no longer be thrown.  It is retained in the declaration of
                      this class for compatibility with existing code.                    
                </exception>
                <exception>
                    NotCompliantMBeanException As of JMX 1.2, this
                      exception can no longer be thrown.  It is retained in the
                      declaration of this class for compatibility with existing code.                    
                </exception>
            </javadoc>
            <method name="RoleInfo" type="constructor" line="255">
                <params>
                    <param name="roleName" type="String"/>
                    <param name="mbeanClassName" type="String"/>
                    <param name="read" type="boolean"/>
                    <param name="write" type="boolean"/>
                </params>
                <comment line="266">
                    OK : Can never happen as the minimum                    
                </comment>
                <comment line="267">
                    degree equals the maximum degree.                    
                </comment>
                <scope line="257"/>
                <scope line="265"/>
            </method>
            <javadoc line="273">
                Constructor.                
                <param>
                    roleName  name of the role                    
                </param>
                <param>
                    mbeanClassName  name of the class of MBean(s) expected to
                      be referenced in corresponding role.  If an MBean <em>M</em> is in
                      this role, then the MBean server must return true for{@link MBeanServer#isInstanceOf isInstanceOf(M, mbeanClassName)}.
                      <P>IsReadable and IsWritable defaulted to true.
                      <P>Minimum and maximum degrees defaulted to 1.
                      <P>Description of role defaulted to null.                    
                </param>
                <exception>
                    IllegalArgumentException  if null parameter                    
                </exception>
                <exception>
                    ClassNotFoundException As of JMX 1.2, this exception
                      can no longer be thrown.  It is retained in the declaration of
                      this class for compatibility with existing code.                    
                </exception>
                <exception>
                    NotCompliantMBeanException As of JMX 1.2, this
                      exception can no longer be thrown.  It is retained in the
                      declaration of this class for compatibility with existing code.                    
                </exception>
            </javadoc>
            <method name="RoleInfo" type="constructor" line="298">
                <params>
                    <param name="roleName" type="String"/>
                    <param name="mbeanClassName" type="String"/>
                </params>
                <comment line="309">
                    OK : Can never happen as the minimum                    
                </comment>
                <comment line="310">
                    degree equals the maximum degree.                    
                </comment>
                <scope line="300"/>
                <scope line="308"/>
            </method>
            <javadoc line="316">
                Copy constructor.                
                <param>
                    roleInfo the <tt>RoleInfo</tt> instance to be copied.                    
                </param>
                <exception>
                    IllegalArgumentException  if null parameter                    
                </exception>
            </javadoc>
            <method name="RoleInfo" type="constructor" line="324">
                <params>
                    <param name="roleInfo" type="RoleInfo"/>
                </params>
                <comment line="327">
                    Revisit [cebro] Localize message                    
                </comment>
                <comment line="341">
                    OK : Can never happen as the minimum degree and the maximum                    
                </comment>
                <comment line="342">
                    degree were already checked at the time the roleInfo                    
                </comment>
                <comment line="343">
                    instance was created.                    
                </comment>
                <scope line="326">
                    <declaration name="excMsg" type="String" line="328"/>
                </scope>
                <scope line="332"/>
                <scope line="340"/>
            </method>
            <javadoc line="351">
                Returns the name of the role.                
                <return>
                    the name of the role.                    
                </return>
            </javadoc>
            <method name="getName" type="String" line="356"/>
            <javadoc line="360">
                Returns read access mode for the role (true if it is readable).                
                <return>
                    true if the role is readable.                    
                </return>
            </javadoc>
            <method name="isReadable" type="boolean" line="365"/>
            <javadoc line="369">
                Returns write access mode for the role (true if it is writable).                
                <return>
                    true if the role is writable.                    
                </return>
            </javadoc>
            <method name="isWritable" type="boolean" line="374"/>
            <javadoc line="378">
                Returns description text for the role.                
                <return>
                    the description of the role.                    
                </return>
            </javadoc>
            <method name="getDescription" type="String" line="383"/>
            <javadoc line="387">
                Returns minimum degree for corresponding role reference.                
                <return>
                    the minimum degree.                    
                </return>
            </javadoc>
            <method name="getMinDegree" type="int" line="392"/>
            <javadoc line="396">
                Returns maximum degree for corresponding role reference.                
                <return>
                    the maximum degree.                    
                </return>
            </javadoc>
            <method name="getMaxDegree" type="int" line="401"/>
            <javadoc line="405">
                &lt;p&gt;Returns name of type of MBean expected to be referenced in
                  corresponding role.&lt;/p&gt;                
                <return>
                    the name of the referenced type.                    
                </return>
            </javadoc>
            <method name="getRefMBeanClassName" type="String" line="411"/>
            <javadoc line="415">
                Returns true if the &lt;tt&gt;value&lt;/tt&gt; parameter is greater than or equal to
                  the expected minimum degree, false otherwise.                
                <param>
                    value  the value to be checked                    
                </param>
                <return>
                    true if greater than or equal to minimum degree, false otherwise.                    
                </return>
            </javadoc>
            <method name="checkMinDegree" type="boolean" line="423">
                <params>
                    <param name="value" type="int"/>
                </params>
                <scope line="426"/>
                <scope line="428"/>
            </method>
            <javadoc line="433">
                Returns true if the &lt;tt&gt;value&lt;/tt&gt; parameter is lower than or equal to
                  the expected maximum degree, false otherwise.                
                <param>
                    value  the value to be checked                    
                </param>
                <return>
                    true if lower than or equal to maximum degree, false otherwise.                    
                </return>
            </javadoc>
            <method name="checkMaxDegree" type="boolean" line="441">
                <params>
                    <param name="value" type="int"/>
                </params>
                <scope line="445"/>
                <scope line="447"/>
            </method>
            <javadoc line="452">
                Returns a string describing the role info.                
                <return>
                    a description of the role info.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="457">
                <declaration name="result" type="StringBuilder" line="458"/>
            </method>
            <method name="init" type="void" line="482">
                <params>
                    <param name="roleName" type="String"/>
                    <param name="mbeanClassName" type="String"/>
                    <param name="read" type="boolean"/>
                    <param name="write" type="boolean"/>
                    <param name="min" type="int"/>
                    <param name="max" type="int"/>
                    <param name="descr" type="String"/>
                </params>
                <comment line="486">
                    Revisit [cebro] Localize message                    
                </comment>
                <comment line="503">
                    Revisit [cebro] Localize message                    
                </comment>
                <comment line="512">
                    Revisit [cebro] Localize message                    
                </comment>
                <scope line="485">
                    <declaration name="excMsg" type="String" line="487"/>
                </scope>
                <scope line="494"/>
                <declaration name="invalidRoleInfoFlg" type="boolean" line="498"/>
                <declaration name="excMsgStrB" type="StringBuilder" line="499"/>
                <scope line="502"/>
                <scope line="511"/>
                <scope line="516"/>
            </method>
            <javadoc line="527">
                Deserializes a {@link RoleInfo} from an {@link ObjectInputStream}.                
            </javadoc>
            <method name="readObject" type="void" line="531">
                <params>
                    <param name="in" type="ObjectInputStream"/>
                </params>
                <comment line="534">
                    Read an object serialized in the old serial form                    
                </comment>
                <comment line="535">
                                        
                </comment>
                <comment line="575">
                    Read an object serialized in the new serial form                    
                </comment>
                <comment line="576">
                                        
                </comment>
                <scope line="533">
                    <declaration name="fields" type="ObjectInputStream.GetField" line="536"/>
                    <scope line="539"/>
                    <scope line="544"/>
                    <scope line="549"/>
                    <scope line="554"/>
                    <scope line="559"/>
                    <scope line="564"/>
                    <scope line="569"/>
                </scope>
                <scope line="574"/>
            </method>
            <javadoc line="582">
                Serializes a {@link RoleInfo} to an {@link ObjectOutputStream}.                
            </javadoc>
            <method name="writeObject" type="void" line="586">
                <params>
                    <param name="out" type="ObjectOutputStream"/>
                </params>
                <comment line="589">
                    Serializes this instance in the old serial form                    
                </comment>
                <comment line="590">
                                        
                </comment>
                <comment line="603">
                    Serializes this instance in the new serial form                    
                </comment>
                <comment line="604">
                                        
                </comment>
                <scope line="588">
                    <declaration name="fields" type="ObjectOutputStream.PutField" line="591"/>
                </scope>
                <scope line="602"/>
            </method>
        </class>
    </source>