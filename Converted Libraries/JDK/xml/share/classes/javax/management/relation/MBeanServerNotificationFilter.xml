<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.relation">
        <import package="com.sun.jmx.mbeanserver.Util.cast"/>
        <import package="com.sun.jmx.defaults.JmxProperties.RELATION_LOGGER"/>
        <import package="com.sun.jmx.mbeanserver.GetPropertyAction"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.ObjectStreamField"/>
        <import package="java.security.AccessController"/>
        <import package="java.util.List"/>
        <import package="java.util.Vector"/>
        <import package="javax.management.MBeanServerNotification"/>
        <import package="javax.management.Notification"/>
        <import package="javax.management.NotificationFilterSupport"/>
        <import package="javax.management.ObjectName"/>
        <import package="java.util.List"/>
        <import package="java.util.logging.Level"/>
        <import package="java.util.Vector"/>
        <class name="MBeanServerNotificationFilter" line="19">
            <extends class="NotificationFilterSupport"/>
            <javadoc line="19">
                Filter for {@link MBeanServerNotification}.
                  This filter filters MBeanServerNotification notifications by
                  selecting the ObjectNames of interest and the operations (registration,
                  unregistration, both) of interest (corresponding to notification
                  types).
                  &lt;p&gt;The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;2605900539589789736L&lt;/code&gt;.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="oldSerialVersionUID" type="long" line="29"/>
            <declaration name="newSerialVersionUID" type="long" line="30"/>
            <declaration name="oldSerialPersistentFields" type="ObjectStreamField[]" line="31"/>
            <declaration name="newSerialPersistentFields" type="ObjectStreamField[]" line="32"/>
            <declaration name="serialVersionUID" type="long" line="33"/>
            <declaration name="serialPersistentFields" type="ObjectStreamField[]" line="34"/>
            <javadoc line="34">
                @serialField selectedNames List List of {@link ObjectName}s of interest
                  &lt;ul&gt;
                  &lt;li&gt;&lt;code&gt;null&lt;/code&gt; means that all {@link ObjectName}s are implicitly selected
                  (check for explicit deselections)&lt;/li&gt;
                  &lt;li&gt;Empty vector means that no {@link ObjectName} is explicitly selected&lt;/li&gt;
                  &lt;/ul&gt;                
                <serialField>
                    deselectedNames List List of {@link ObjectName}s with no interest
                      &lt;ul&gt;
                      &lt;li&gt;&lt;code&gt;null&lt;/code&gt; means that all {@link ObjectName}s are implicitly deselected
                      (check for explicit selections))&lt;/li&gt;
                      &lt;li&gt;Empty vector means that no {@link ObjectName} is explicitly deselected&lt;/li&gt;
                      &lt;/ul&gt;                    
                </serialField>
            </javadoc>
            <declaration name="compat" type="boolean" line="49"/>
            <scope line="50">
                <scope line="51">
                    <declaration name="act" type="GetPropertyAction" line="52"/>
                    <declaration name="form" type="String" line="53"/>
                </scope>
                <scope line="56"/>
                <scope line="58"/>
                <scope line="62"/>
            </scope>
            <declaration name="selectedNames" type="List&amp;lt;ObjectName&amp;gt;" line="67"/>
            <javadoc line="67">
                @serial List of {@link ObjectName}s of interest
                  &lt;ul&gt;
                  &lt;li&gt;&lt;code&gt;null&lt;/code&gt; means that all {@link ObjectName}s are implicitly selected
                  (check for explicit deselections)&lt;/li&gt;
                  &lt;li&gt;Empty vector means that no {@link ObjectName} is explicitly selected&lt;/li&gt;
                  &lt;/ul&gt;                
            </javadoc>
            <declaration name="deselectedNames" type="List&amp;lt;ObjectName&amp;gt;" line="76"/>
            <javadoc line="76">
                @serial List of {@link ObjectName}s with no interest
                  &lt;ul&gt;
                  &lt;li&gt;&lt;code&gt;null&lt;/code&gt; means that all {@link ObjectName}s are implicitly deselected
                  (check for explicit selections))&lt;/li&gt;
                  &lt;li&gt;Empty vector means that no {@link ObjectName} is explicitly deselected&lt;/li&gt;
                  &lt;/ul&gt;                
            </javadoc>
            <javadoc line="85">
                Creates a filter selecting all MBeanServerNotification notifications for
                  all ObjectNames.                
            </javadoc>
            <method name="MBeanServerNotificationFilter" type="constructor" line="89"/>
            <javadoc line="97">
                Disables any MBeanServerNotification (all ObjectNames are
                  deselected).                
            </javadoc>
            <method name="disableAllObjectNames" type="void" line="101"/>
            <javadoc line="108">
                Disables MBeanServerNotifications concerning given ObjectName.                
                <param>
                    objectName  ObjectName no longer of interest                    
                </param>
                <exception>
                    IllegalArgumentException  if the given ObjectName is null                    
                </exception>
            </javadoc>
            <method name="disableObjectName" type="void" line="113">
                <params>
                    <param name="objectName" type="ObjectName"/>
                </params>
                <scope line="114">
                    <declaration name="excMsg" type="String" line="115"/>
                </scope>
                <scope line="119">
                    <scope line="120"/>
                </scope>
                <scope line="124">
                    <scope line="125"/>
                </scope>
            </method>
            <javadoc line="132">
                Enables all MBeanServerNotifications (all ObjectNames are selected).                
            </javadoc>
            <method name="enableAllObjectNames" type="void" line="135"/>
            <javadoc line="142">
                Enables MBeanServerNotifications concerning given ObjectName.                
                <param>
                    objectName  ObjectName of interest                    
                </param>
                <exception>
                    IllegalArgumentException  if the given ObjectName is null                    
                </exception>
            </javadoc>
            <method name="enableObjectName" type="void" line="147">
                <params>
                    <param name="objectName" type="ObjectName"/>
                </params>
                <scope line="148">
                    <declaration name="excMsg" type="String" line="149"/>
                </scope>
                <scope line="153">
                    <scope line="154"/>
                </scope>
                <scope line="158">
                    <scope line="159"/>
                </scope>
            </method>
            <javadoc line="166">
                Gets all the ObjectNames enabled.                
                <return>
                    Vector of ObjectNames:
                      &lt;P&gt;- null means all ObjectNames are implicitly selected, except the
                      ObjectNames explicitly deselected
                      &lt;P&gt;- empty means all ObjectNames are deselected, i.e. no ObjectName
                      selected.                    
                </return>
            </javadoc>
            <method name="getEnabledObjectNames" type="Vector&lt;ObjectName&gt;" line="174">
                <scope line="175"/>
                <scope line="178"/>
            </method>
            <javadoc line="182">
                Gets all the ObjectNames disabled.                
                <return>
                    Vector of ObjectNames:
                      &lt;P&gt;- null means all ObjectNames are implicitly deselected, except the
                      ObjectNames explicitly selected
                      &lt;P&gt;- empty means all ObjectNames are selected, i.e. no ObjectName
                      deselected.                    
                </return>
            </javadoc>
            <method name="getDisabledObjectNames" type="Vector&lt;ObjectName&gt;" line="190">
                <scope line="191"/>
                <scope line="194"/>
            </method>
            <javadoc line="198">
                Invoked before sending the specified notification to the listener.
                  &lt;P&gt;If:
                  &lt;P&gt;- the ObjectName of the concerned MBean is selected (explicitly OR
                  (implicitly and not explicitly deselected))
                  &lt;P&gt;AND
                  &lt;P&gt;- the type of the operation (registration or unregistration) is
                  selected
                  &lt;P&gt;then the notification is sent to the listener.                
                <param>
                    notif  The notification to be sent.                    
                </param>
                <return>
                    true if the notification has to be sent to the listener, false
                      otherwise.                    
                </return>
                <exception>
                    IllegalArgumentException  if null parameter                    
                </exception>
            </javadoc>
            <method name="isNotificationEnabled" type="boolean" line="212">
                <params>
                    <param name="notif" type="Notification"/>
                </params>
                <scope line="213">
                    <declaration name="excMsg" type="String" line="214"/>
                </scope>
                <declaration name="ntfType" type="String" line="218"/>
                <declaration name="enabledTypes" type="Vector&amp;lt;String&amp;gt;" line="219"/>
                <scope line="220"/>
                <declaration name="mbsNtf" type="MBeanServerNotification" line="224"/>
                <declaration name="objName" type="ObjectName" line="225"/>
                <declaration name="isSelectedFlg" type="boolean" line="226"/>
                <scope line="227">
                    <scope line="228"/>
                    <scope line="233"/>
                </scope>
                <scope line="238">
                    <scope line="239"/>
                    <scope line="243"/>
                </scope>
            </method>
            <javadoc line="251">
                Deserializes an {@link MBeanServerNotificationFilter} from an {@link ObjectInputStream}.                
            </javadoc>
            <method name="readObject" type="void" line="254">
                <params>
                    <param name="in" type="ObjectInputStream"/>
                </params>
                <scope line="255">
                    <declaration name="fields" type="ObjectInputStream.GetField" line="256"/>
                    <scope line="258"/>
                    <scope line="262"/>
                </scope>
                <scope line="266"/>
            </method>
            <javadoc line="270">
                Serializes an {@link MBeanServerNotificationFilter} to an {@link ObjectOutputStream}.                
            </javadoc>
            <method name="writeObject" type="void" line="273">
                <params>
                    <param name="out" type="ObjectOutputStream"/>
                </params>
                <scope line="274">
                    <declaration name="fields" type="ObjectOutputStream.PutField" line="275"/>
                </scope>
                <scope line="280"/>
            </method>
        </class>
    </source>