<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.relation">
        <import package="com.sun.jmx.mbeanserver.Util.cast"/>
        <import package="com.sun.jmx.defaults.JmxProperties.RELATION_LOGGER"/>
        <import package="com.sun.jmx.mbeanserver.GetPropertyAction"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.ObjectStreamField"/>
        <import package="java.security.AccessController"/>
        <import package="java.util.List"/>
        <import package="java.util.Vector"/>
        <import package="javax.management.MBeanServerNotification"/>
        <import package="javax.management.Notification"/>
        <import package="javax.management.NotificationFilterSupport"/>
        <import package="javax.management.ObjectName"/>
        <import package="java.util.List"/>
        <import package="java.util.logging.Level"/>
        <import package="java.util.Vector"/>
        <class name="MBeanServerNotificationFilter" line="51">
            <extends class="NotificationFilterSupport"/>
            <comment line="63">
                serialVersionUID must be constant                
            </comment>
            <comment line="66">
                Serialization compatibility stuff:
                 Two serial forms are supported in this class. The selected form depends
                 on system property &quot;jmx.serial.form&quot;:
                  - &quot;1.0&quot; for JMX 1.0
                  - any other value for JMX 1.1 and higher
                
                 Serial version for old serial form                
            </comment>
            <comment line="74">
                Serial version for new serial form                
            </comment>
            <comment line="77">
                Serializable fields in old serial form                
            </comment>
            <comment line="84">
                Serializable fields in new serial form                
            </comment>
            <comment line="91">
                Actual serial version and serial form                
            </comment>
            <comment line="126">
                END Serialization compatibility stuff                
            </comment>
            <comment line="129">
                Private members                
            </comment>
            <comment line="153">
                Constructor                
            </comment>
            <comment line="175">
                Accessors                
            </comment>
            <comment line="324">
                NotificationFilter interface                
            </comment>
            <javadoc line="51">
                Filter for {@link MBeanServerNotification}.
                  This filter filters MBeanServerNotification notifications by
                  selecting the ObjectNames of interest and the operations (registration,
                  unregistration, both) of interest (corresponding to notification
                  types).
                  &lt;p&gt;The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;2605900539589789736L&lt;/code&gt;.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="oldSerialVersionUID" type="long" line="72"/>
            <declaration name="newSerialVersionUID" type="long" line="75"/>
            <declaration name="oldSerialPersistentFields" type="ObjectStreamField[]" line="78"/>
            <declaration name="newSerialPersistentFields" type="ObjectStreamField[]" line="85"/>
            <declaration name="serialVersionUID" type="long" line="92"/>
            <declaration name="serialPersistentFields" type="ObjectStreamField[]" line="93"/>
            <javadoc line="93">
                @serialField selectedNames List List of {@link ObjectName}s of interest
                  &lt;ul&gt;
                  &lt;li&gt;&lt;code&gt;null&lt;/code&gt; means that all {@link ObjectName}s are implicitly selected
                  (check for explicit deselections)&lt;/li&gt;
                  &lt;li&gt;Empty vector means that no {@link ObjectName} is explicitly selected&lt;/li&gt;
                  &lt;/ul&gt;                
                <serialField>
                    deselectedNames List List of {@link ObjectName}s with no interest
                      <ul>
                      <li><code>null</code> means that all {@link ObjectName}s are implicitly deselected
                      (check for explicit selections))</li>
                      <li>Empty vector means that no {@link ObjectName} is explicitly deselected</li>
                      </ul>                    
                </serialField>
            </javadoc>
            <declaration name="compat" type="boolean" line="108"/>
            <scope line="109">
                <scope line="110">
                    <declaration name="act" type="GetPropertyAction" line="111"/>
                    <declaration name="form" type="String" line="112"/>
                </scope>
                <scope line="114"/>
                <scope line="117"/>
                <scope line="120"/>
            </scope>
            <declaration name="selectedNames" type="List&lt;ObjectName&gt;" line="132"/>
            <javadoc line="132">
                @serial List of {@link ObjectName}s of interest
                  &lt;ul&gt;
                  &lt;li&gt;&lt;code&gt;null&lt;/code&gt; means that all {@link ObjectName}s are implicitly selected
                  (check for explicit deselections)&lt;/li&gt;
                  &lt;li&gt;Empty vector means that no {@link ObjectName} is explicitly selected&lt;/li&gt;
                  &lt;/ul&gt;                
            </javadoc>
            <declaration name="deselectedNames" type="List&lt;ObjectName&gt;" line="142"/>
            <javadoc line="142">
                @serial List of {@link ObjectName}s with no interest
                  &lt;ul&gt;
                  &lt;li&gt;&lt;code&gt;null&lt;/code&gt; means that all {@link ObjectName}s are implicitly deselected
                  (check for explicit selections))&lt;/li&gt;
                  &lt;li&gt;Empty vector means that no {@link ObjectName} is explicitly deselected&lt;/li&gt;
                  &lt;/ul&gt;                
            </javadoc>
            <javadoc line="156">
                Creates a filter selecting all MBeanServerNotification notifications for
                  all ObjectNames.                
            </javadoc>
            <method name="MBeanServerNotificationFilter" type="constructor" line="160"/>
            <javadoc line="178">
                Disables any MBeanServerNotification (all ObjectNames are
                  deselected).                
            </javadoc>
            <method name="disableAllObjectNames" type="void" line="182"/>
            <javadoc line="195">
                Disables MBeanServerNotifications concerning given ObjectName.                
                <param>
                    objectName  ObjectName no longer of interest                    
                </param>
                <exception>
                    IllegalArgumentException  if the given ObjectName is null                    
                </exception>
            </javadoc>
            <method name="disableObjectName" type="void" line="203">
                <params>
                    <param name="objectName" type="ObjectName"/>
                </params>
                <comment line="214">
                    Removes from selected ObjectNames, if present                    
                </comment>
                <comment line="221">
                    Adds it in deselected ObjectNames                    
                </comment>
                <comment line="223">
                    If all are deselected, no need to do anything :)                    
                </comment>
                <comment line="225">
                    ObjectName was not already deselected                    
                </comment>
                <scope line="205">
                    <declaration name="excMsg" type="String" line="206"/>
                </scope>
                <scope line="214">
                    <scope line="215"/>
                </scope>
                <scope line="221">
                    <scope line="223"/>
                </scope>
            </method>
            <javadoc line="234">
                Enables all MBeanServerNotifications (all ObjectNames are selected).                
            </javadoc>
            <method name="enableAllObjectNames" type="void" line="237"/>
            <javadoc line="250">
                Enables MBeanServerNotifications concerning given ObjectName.                
                <param>
                    objectName  ObjectName of interest                    
                </param>
                <exception>
                    IllegalArgumentException  if the given ObjectName is null                    
                </exception>
            </javadoc>
            <method name="enableObjectName" type="void" line="258">
                <params>
                    <param name="objectName" type="ObjectName"/>
                </params>
                <comment line="269">
                    Removes from deselected ObjectNames, if present                    
                </comment>
                <comment line="276">
                    Adds it in selected ObjectNames                    
                </comment>
                <comment line="278">
                    If all are selected, no need to do anything :)                    
                </comment>
                <comment line="280">
                    ObjectName was not already selected                    
                </comment>
                <scope line="260">
                    <declaration name="excMsg" type="String" line="261"/>
                </scope>
                <scope line="269">
                    <scope line="270"/>
                </scope>
                <scope line="276">
                    <scope line="278"/>
                </scope>
            </method>
            <javadoc line="289">
                Gets all the ObjectNames enabled.                
                <return>
                    Vector of ObjectNames:
                      <P>- null means all ObjectNames are implicitly selected, except the
                      ObjectNames explicitly deselected
                      <P>- empty means all ObjectNames are deselected, i.e. no ObjectName
                      selected.                    
                </return>
            </javadoc>
            <method name="getEnabledObjectNames" type="Vector<ObjectName>" line="298">
                <scope line="299"/>
                <scope line="301"/>
            </method>
            <javadoc line="306">
                Gets all the ObjectNames disabled.                
                <return>
                    Vector of ObjectNames:
                      <P>- null means all ObjectNames are implicitly deselected, except the
                      ObjectNames explicitly selected
                      <P>- empty means all ObjectNames are selected, i.e. no ObjectName
                      deselected.                    
                </return>
            </javadoc>
            <method name="getDisabledObjectNames" type="Vector<ObjectName>" line="315">
                <scope line="316"/>
                <scope line="318"/>
            </method>
            <javadoc line="327">
                Invoked before sending the specified notification to the listener.
                  &lt;P&gt;If:
                  &lt;P&gt;- the ObjectName of the concerned MBean is selected (explicitly OR
                  (implicitly and not explicitly deselected))
                  &lt;P&gt;AND
                  &lt;P&gt;- the type of the operation (registration or unregistration) is
                  selected
                  &lt;P&gt;then the notification is sent to the listener.                
                <param>
                    notif  The notification to be sent.                    
                </param>
                <return>
                    true if the notification has to be sent to the listener, false
                      otherwise.                    
                </return>
                <exception>
                    IllegalArgumentException  if null parameter                    
                </exception>
            </javadoc>
            <method name="isNotificationEnabled" type="boolean" line="345">
                <params>
                    <param name="notif" type="Notification"/>
                </params>
                <comment line="356">
                    Checks the type first                    
                </comment>
                <comment line="367">
                    We have a MBeanServerNotification: downcasts it                    
                </comment>
                <comment line="370">
                    Checks the ObjectName                    
                </comment>
                <comment line="372">
                    Is it selected?                    
                </comment>
                <comment line="375">
                    Not all are implicitly selected:
                     checks for explicit selection                    
                </comment>
                <comment line="378">
                    All are explicitly not selected                    
                </comment>
                <comment line="388">
                    Not in the explicit selected list                    
                </comment>
                <comment line="398">
                    Not explicitly selected: is it deselected?                    
                </comment>
                <comment line="401">
                    All are implicitly deselected and it is not explicitly
                     selected                    
                </comment>
                <comment line="411">
                    Explicitly deselected                    
                </comment>
                <scope line="347">
                    <declaration name="excMsg" type="String" line="348"/>
                </scope>
                <declaration name="ntfType" type="String" line="356"/>
                <declaration name="enabledTypes" type="Vector&lt;String&gt;" line="357"/>
                <scope line="358"/>
                <declaration name="mbsNtf" type="MBeanServerNotification" line="367"/>
                <declaration name="objName" type="ObjectName" line="370"/>
                <declaration name="isSelectedFlg" type="boolean" line="372"/>
                <scope line="373">
                    <scope line="376"/>
                    <scope line="386"/>
                </scope>
                <scope line="396">
                    <scope line="399"/>
                    <scope line="409"/>
                </scope>
            </method>
            <javadoc line="427">
                Deserializes an {@link MBeanServerNotificationFilter} from an {@link ObjectInputStream}.                
            </javadoc>
            <method name="readObject" type="void" line="431">
                <params>
                    <param name="in" type="ObjectInputStream"/>
                </params>
                <comment line="435">
                    Read an object serialized in the old serial form                    
                </comment>
                <comment line="451">
                    Read an object serialized in the new serial form                    
                </comment>
                <scope line="433">
                    <declaration name="fields" type="ObjectInputStream.GetField" line="436"/>
                    <scope line="439"/>
                    <scope line="444"/>
                </scope>
                <scope line="449"/>
            </method>
            <javadoc line="457">
                Serializes an {@link MBeanServerNotificationFilter} to an {@link ObjectOutputStream}.                
            </javadoc>
            <method name="writeObject" type="void" line="461">
                <params>
                    <param name="out" type="ObjectOutputStream"/>
                </params>
                <comment line="465">
                    Serializes this instance in the old serial form                    
                </comment>
                <comment line="474">
                    Serializes this instance in the new serial form                    
                </comment>
                <scope line="463">
                    <declaration name="fields" type="ObjectOutputStream.PutField" line="466"/>
                </scope>
                <scope line="472"/>
            </method>
        </class>
    </source>