<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.relation">
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="javax.management.ObjectName"/>
        <interface name="Relation">
            <javadoc line="33">
                This interface has to be implemented by any MBean class expected to
                  represent a relation managed using the Relation Service.
                  &lt;P&gt;Simple relations, i.e. having only roles, no properties or methods, can
                  be created directly by the Relation Service (represented as RelationSupport
                  objects, internally handled by the Relation Service).
                  &lt;P&gt;If the user wants to represent more complex relations, involving
                  properties and/or methods, he has to provide his own class implementing the
                  Relation interface. This can be achieved either by inheriting from
                  RelationSupport class, or by implementing the interface (fully or delegation to
                  a RelationSupport object member).
                  &lt;P&gt;Specifying such user relation class is to introduce properties and/or
                  methods. Those have to be exposed for remote management. So this means that
                  any user relation class must be a MBean class.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="getRole" type="List<ObjectName>" line="52"/>
            <javadoc line="52">
                Retrieves role value for given role name.
                  &lt;P&gt;Checks if the role exists and is readable according to the relation
                  type.                
                <param>
                    roleName  name of role                    
                </param>
                <return>
                    the ArrayList of ObjectName objects being the role value                    
                </return>
                <exception>
                    IllegalArgumentException  if null role name                    
                </exception>
                <exception>
                    RoleNotFoundException  if:
                      &lt;P&gt;- there is no role with given name
                      &lt;P&gt;- the role is not readable.                    
                </exception>
                <exception>
                    RelationServiceNotRegisteredException  if the Relation
                      Service is not registered in the MBean Server                    
                </exception>
                <see>
                    #setRole                    
                </see>
            </javadoc>
            <method name="getRoles" type="RoleResult" line="75"/>
            <javadoc line="75">
                Retrieves values of roles with given names.
                  &lt;P&gt;Checks for each role if it exists and is readable according to the
                  relation type.                
                <param>
                    roleNameArray  array of names of roles to be retrieved                    
                </param>
                <return>
                    a RoleResult object, including a RoleList (for roles
                      successfully retrieved) and a RoleUnresolvedList (for roles not
                      retrieved).                    
                </return>
                <exception>
                    IllegalArgumentException  if null role name                    
                </exception>
                <exception>
                    RelationServiceNotRegisteredException  if the Relation
                      Service is not registered in the MBean Server                    
                </exception>
                <see>
                    #setRoles                    
                </see>
            </javadoc>
            <method name="getRoleCardinality" type="Integer" line="96"/>
            <javadoc line="96">
                Returns the number of MBeans currently referenced in the given role.                
                <param>
                    roleName  name of role                    
                </param>
                <return>
                    the number of currently referenced MBeans in that role                    
                </return>
                <exception>
                    IllegalArgumentException  if null role name                    
                </exception>
                <exception>
                    RoleNotFoundException  if there is no role with given name                    
                </exception>
            </javadoc>
            <method name="getAllRoles" type="RoleResult" line="110"/>
            <javadoc line="110">
                Returns all roles present in the relation.                
                <return>
                    a RoleResult object, including a RoleList (for roles
                      successfully retrieved) and a RoleUnresolvedList (for roles not
                      readable).                    
                </return>
                <exception>
                    RelationServiceNotRegisteredException  if the Relation
                      Service is not registered in the MBean Server                    
                </exception>
            </javadoc>
            <method name="retrieveAllRoles" type="RoleList" line="123"/>
            <javadoc line="123">
                Returns all roles in the relation without checking read mode.                
                <return>
                    a RoleList.                    
                </return>
            </javadoc>
            <method name="setRole" type="void" line="130"/>
            <javadoc line="130">
                Sets the given role.
                  &lt;P&gt;Will check the role according to its corresponding role definition
                  provided in relation&apos;s relation type
                  &lt;P&gt;Will send a notification (RelationNotification with type
                  RELATION_BASIC_UPDATE or RELATION_MBEAN_UPDATE, depending if the
                  relation is a MBean or not).                
                <param>
                    role  role to be set (name and new value)                    
                </param>
                <exception>
                    IllegalArgumentException  if null role                    
                </exception>
                <exception>
                    RoleNotFoundException  if there is no role with the supplied
                      role&apos;s name or if the role is not writable (no test on the write access
                      mode performed when initializing the role)                    
                </exception>
                <exception>
                    InvalidRoleValueException  if value provided for
                      role is not valid, i.e.:
                      &lt;P&gt;- the number of referenced MBeans in given value is less than
                      expected minimum degree
                      &lt;P&gt;- the number of referenced MBeans in provided value exceeds expected
                      maximum degree
                      &lt;P&gt;- one referenced MBean in the value is not an Object of the MBean
                      class expected for that role
                      &lt;P&gt;- a MBean provided for that role does not exist.                    
                </exception>
                <exception>
                    RelationServiceNotRegisteredException  if the Relation
                      Service is not registered in the MBean Server                    
                </exception>
                <exception>
                    RelationTypeNotFoundException  if the relation type has not
                      been declared in the Relation Service.                    
                </exception>
                <exception>
                    RelationNotFoundException  if the relation has not been
                      added in the Relation Service.                    
                </exception>
                <see>
                    #getRole                    
                </see>
            </javadoc>
            <method name="setRoles" type="RoleResult" line="170"/>
            <javadoc line="170">
                Sets the given roles.
                  &lt;P&gt;Will check the role according to its corresponding role definition
                  provided in relation&apos;s relation type
                  &lt;P&gt;Will send one notification (RelationNotification with type
                  RELATION_BASIC_UPDATE or RELATION_MBEAN_UPDATE, depending if the
                  relation is a MBean or not) per updated role.                
                <param>
                    roleList  list of roles to be set                    
                </param>
                <return>
                    a RoleResult object, including a RoleList (for roles
                      successfully set) and a RoleUnresolvedList (for roles not
                      set).                    
                </return>
                <exception>
                    IllegalArgumentException  if null role list                    
                </exception>
                <exception>
                    RelationServiceNotRegisteredException  if the Relation
                      Service is not registered in the MBean Server                    
                </exception>
                <exception>
                    RelationTypeNotFoundException  if the relation type has not
                      been declared in the Relation Service.                    
                </exception>
                <exception>
                    RelationNotFoundException  if the relation MBean has not been
                      added in the Relation Service.                    
                </exception>
                <see>
                    #getRoles                    
                </see>
            </javadoc>
            <method name="handleMBeanUnregistration" type="void" line="200"/>
            <javadoc line="200">
                Callback used by the Relation Service when a MBean referenced in a role
                  is unregistered.
                  &lt;P&gt;The Relation Service will call this method to let the relation
                  take action to reflect the impact of such unregistration.
                  &lt;P&gt;BEWARE. the user is not expected to call this method.
                  &lt;P&gt;Current implementation is to set the role with its current value
                  (list of ObjectNames of referenced MBeans) without the unregistered
                  one.                
                <param>
                    objectName  ObjectName of unregistered MBean                    
                </param>
                <param>
                    roleName  name of role where the MBean is referenced                    
                </param>
                <exception>
                    IllegalArgumentException  if null parameter                    
                </exception>
                <exception>
                    RoleNotFoundException  if role does not exist in the
                      relation or is not writable                    
                </exception>
                <exception>
                    InvalidRoleValueException  if role value does not conform to
                      the associated role info (this will never happen when called from the
                      Relation Service)                    
                </exception>
                <exception>
                    RelationServiceNotRegisteredException  if the Relation
                      Service is not registered in the MBean Server                    
                </exception>
                <exception>
                    RelationTypeNotFoundException  if the relation type has not
                      been declared in the Relation Service.                    
                </exception>
                <exception>
                    RelationNotFoundException  if this method is called for a
                      relation MBean not added in the Relation Service.                    
                </exception>
            </javadoc>
            <method name="getReferencedMBeans" type="Map<ObjectName,List<String>>" line="235"/>
            <javadoc line="235">
                Retrieves MBeans referenced in the various roles of the relation.                
                <return>
                    a HashMap mapping:
                      &lt;P&gt; ObjectName -&gt; ArrayList of String (role names)                    
                </return>
            </javadoc>
            <method name="getRelationTypeName" type="String" line="243"/>
            <javadoc line="243">
                Returns name of associated relation type.                
                <return>
                    the name of the relation type.                    
                </return>
            </javadoc>
            <method name="getRelationServiceName" type="ObjectName" line="250"/>
            <javadoc line="250">
                Returns ObjectName of the Relation Service handling the relation.                
                <return>
                    the ObjectName of the Relation Service.                    
                </return>
            </javadoc>
            <method name="getRelationId" type="String" line="257"/>
            <javadoc line="257">
                Returns relation identifier (used to uniquely identify the relation
                  inside the Relation Service).                
                <return>
                    the relation id.                    
                </return>
            </javadoc>
        </interface>
    </source>