<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management">
        <class name="Query" line="2">
            <extends class="Object"/>
            <javadoc line="2">
                &lt;p&gt;Constructs query object constraints.&lt;/p&gt;
                  &lt;p&gt;The MBean Server can be queried for MBeans that meet a particular
                  condition, using its {@link MBeanServer#queryNames queryNames} or{@link MBeanServer#queryMBeans queryMBeans} method.  The {@link QueryExp}parameter to the method can be any implementation of the interface{@code QueryExp}, but it is usually best to obtain the {@code QueryExp}value by calling the static methods in this class.  This is particularly
                  true when querying a remote MBean Server: a custom implementation of the{@code QueryExp} interface might not be present in the remote MBean Server,
                  but the methods in this class return only standard classes that are
                  part of the JMX implementation.&lt;/p&gt;
                  &lt;p&gt;As an example, suppose you wanted to find all MBeans where the {@codeEnabled} attribute is {@code true} and the {@code Owner} attribute is {@code&quot;Duke&quot;}. Here is how you could construct the appropriate {@code QueryExp} by
                  chaining together method calls:&lt;/p&gt;
                  &lt;pre&gt;
                  QueryExp query =
                  Query.and(Query.eq(Query.attr(&quot;Enabled&quot;), Query.value(true)),
                  Query.eq(Query.attr(&quot;Owner&quot;), Query.value(&quot;Duke&quot;)));
                  &lt;/pre&gt;                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="GT" type="int" line="19"/>
            <javadoc line="19">
                A code representing the {@link Query#gt} query.  This is chiefly
                  of interest for the serialized form of queries.                
            </javadoc>
            <declaration name="LT" type="int" line="24"/>
            <javadoc line="24">
                A code representing the {@link Query#lt} query.  This is chiefly
                  of interest for the serialized form of queries.                
            </javadoc>
            <declaration name="GE" type="int" line="29"/>
            <javadoc line="29">
                A code representing the {@link Query#geq} query.  This is chiefly
                  of interest for the serialized form of queries.                
            </javadoc>
            <declaration name="LE" type="int" line="34"/>
            <javadoc line="34">
                A code representing the {@link Query#leq} query.  This is chiefly
                  of interest for the serialized form of queries.                
            </javadoc>
            <declaration name="EQ" type="int" line="39"/>
            <javadoc line="39">
                A code representing the {@link Query#eq} query.  This is chiefly
                  of interest for the serialized form of queries.                
            </javadoc>
            <declaration name="PLUS" type="int" line="44"/>
            <javadoc line="44">
                A code representing the {@link Query#plus} expression.  This
                  is chiefly of interest for the serialized form of queries.                
            </javadoc>
            <declaration name="MINUS" type="int" line="49"/>
            <javadoc line="49">
                A code representing the {@link Query#minus} expression.  This
                  is chiefly of interest for the serialized form of queries.                
            </javadoc>
            <declaration name="TIMES" type="int" line="54"/>
            <javadoc line="54">
                A code representing the {@link Query#times} expression.  This
                  is chiefly of interest for the serialized form of queries.                
            </javadoc>
            <declaration name="DIV" type="int" line="59"/>
            <javadoc line="59">
                A code representing the {@link Query#div} expression.  This is
                  chiefly of interest for the serialized form of queries.                
            </javadoc>
            <javadoc line="64">
                Basic constructor.                
            </javadoc>
            <method name="Query" type="constructor" line="67"/>
            <javadoc line="69">
                                
            </javadoc>
            <method name="and" type="QueryExp" line="71">
                <params>
                    <param name="q1" type="QueryExp"/>
                    <param name="q2" type="QueryExp"/>
                </params>
            </method>
            <javadoc line="74">
                                
            </javadoc>
            <method name="or" type="QueryExp" line="76">
                <params>
                    <param name="q1" type="QueryExp"/>
                    <param name="q2" type="QueryExp"/>
                </params>
            </method>
            <javadoc line="79">
                                
            </javadoc>
            <method name="gt" type="QueryExp" line="81">
                <params>
                    <param name="v1" type="ValueExp"/>
                    <param name="v2" type="ValueExp"/>
                </params>
            </method>
            <javadoc line="84">
                                
            </javadoc>
            <method name="geq" type="QueryExp" line="86">
                <params>
                    <param name="v1" type="ValueExp"/>
                    <param name="v2" type="ValueExp"/>
                </params>
            </method>
            <javadoc line="89">
                                
            </javadoc>
            <method name="leq" type="QueryExp" line="91">
                <params>
                    <param name="v1" type="ValueExp"/>
                    <param name="v2" type="ValueExp"/>
                </params>
            </method>
            <javadoc line="94">
                                
            </javadoc>
            <method name="lt" type="QueryExp" line="96">
                <params>
                    <param name="v1" type="ValueExp"/>
                    <param name="v2" type="ValueExp"/>
                </params>
            </method>
            <javadoc line="99">
                                
            </javadoc>
            <method name="eq" type="QueryExp" line="101">
                <params>
                    <param name="v1" type="ValueExp"/>
                    <param name="v2" type="ValueExp"/>
                </params>
            </method>
            <javadoc line="104">
                                
            </javadoc>
            <method name="between" type="QueryExp" line="106">
                <params>
                    <param name="v1" type="ValueExp"/>
                    <param name="v2" type="ValueExp"/>
                    <param name="v3" type="ValueExp"/>
                </params>
            </method>
            <javadoc line="109">
                                
            </javadoc>
            <method name="match" type="QueryExp" line="111">
                <params>
                    <param name="a" type="AttributeValueExp"/>
                    <param name="s" type="StringValueExp"/>
                </params>
            </method>
            <javadoc line="114">
                &lt;p&gt;Returns a new attribute expression.  See {@link AttributeValueExp}for a detailed description of the semantics of the expression.&lt;/p&gt;
                  &lt;p&gt;Evaluating this expression for a given
                  &lt;code&gt;objectName&lt;/code&gt; includes performing {@link MBeanServer#getAttribute MBeanServer.getAttribute(objectName,
                  name)}.&lt;/p&gt;                
                <param>
                    name The name of the attribute.                    
                </param>
                <return>
                    An attribute expression for the attribute named {@code name}.                    
                </return>
            </javadoc>
            <method name="attr" type="AttributeValueExp" line="122">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="125">
                                
            </javadoc>
            <method name="attr" type="AttributeValueExp" line="127">
                <params>
                    <param name="className" type="String"/>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="130">
                                
            </javadoc>
            <method name="classattr" type="AttributeValueExp" line="132"/>
            <javadoc line="135">
                                
            </javadoc>
            <method name="not" type="QueryExp" line="137">
                <params>
                    <param name="queryExp" type="QueryExp"/>
                </params>
            </method>
            <javadoc line="140">
                                
            </javadoc>
            <method name="in" type="QueryExp" line="142">
                <params>
                    <param name="val" type="ValueExp"/>
                    <param name="valueList" type="ValueExp"/>
                </params>
            </method>
            <javadoc line="145">
                Returns a new string expression.                
                <param>
                    val The string value.                    
                </param>
                <return>
                    A ValueExp object containing the string argument.                    
                </return>
            </javadoc>
            <method name="value" type="StringValueExp" line="150">
                <params>
                    <param name="val" type="String"/>
                </params>
            </method>
            <javadoc line="153">
                                
            </javadoc>
            <method name="value" type="ValueExp" line="155">
                <params>
                    <param name="val" type="Number"/>
                </params>
            </method>
            <javadoc line="158">
                                
            </javadoc>
            <method name="value" type="ValueExp" line="160">
                <params>
                    <param name="val" type="int"/>
                </params>
            </method>
            <javadoc line="163">
                                
            </javadoc>
            <method name="value" type="ValueExp" line="165">
                <params>
                    <param name="val" type="long"/>
                </params>
            </method>
            <javadoc line="168">
                                
            </javadoc>
            <method name="value" type="ValueExp" line="170">
                <params>
                    <param name="val" type="float"/>
                </params>
            </method>
            <javadoc line="173">
                                
            </javadoc>
            <method name="value" type="ValueExp" line="175">
                <params>
                    <param name="val" type="double"/>
                </params>
            </method>
            <javadoc line="178">
                                
            </javadoc>
            <method name="value" type="ValueExp" line="180">
                <params>
                    <param name="val" type="boolean"/>
                </params>
            </method>
            <javadoc line="183">
                                
            </javadoc>
            <method name="plus" type="ValueExp" line="185">
                <params>
                    <param name="value1" type="ValueExp"/>
                    <param name="value2" type="ValueExp"/>
                </params>
            </method>
            <javadoc line="188">
                                
            </javadoc>
            <method name="times" type="ValueExp" line="190">
                <params>
                    <param name="value1" type="ValueExp"/>
                    <param name="value2" type="ValueExp"/>
                </params>
            </method>
            <javadoc line="193">
                                
            </javadoc>
            <method name="minus" type="ValueExp" line="195">
                <params>
                    <param name="value1" type="ValueExp"/>
                    <param name="value2" type="ValueExp"/>
                </params>
            </method>
            <javadoc line="198">
                                
            </javadoc>
            <method name="div" type="ValueExp" line="200">
                <params>
                    <param name="value1" type="ValueExp"/>
                    <param name="value2" type="ValueExp"/>
                </params>
            </method>
            <javadoc line="203">
                                
            </javadoc>
            <method name="initialSubString" type="QueryExp" line="205">
                <params>
                    <param name="a" type="AttributeValueExp"/>
                    <param name="s" type="StringValueExp"/>
                </params>
            </method>
            <javadoc line="208">
                                
            </javadoc>
            <method name="anySubString" type="QueryExp" line="210">
                <params>
                    <param name="a" type="AttributeValueExp"/>
                    <param name="s" type="StringValueExp"/>
                </params>
            </method>
            <javadoc line="213">
                                
            </javadoc>
            <method name="finalSubString" type="QueryExp" line="215">
                <params>
                    <param name="a" type="AttributeValueExp"/>
                    <param name="s" type="StringValueExp"/>
                </params>
            </method>
            <javadoc line="218">
                                
            </javadoc>
            <method name="isInstanceOf" type="QueryExp" line="220">
                <params>
                    <param name="classNameValue" type="StringValueExp"/>
                </params>
            </method>
            <javadoc line="223">
                Utility method to escape strings used with
                  Query.{initial|any|final}SubString() methods.                
            </javadoc>
            <method name="escapeString" type="String" line="227">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
        </class>
    </source>