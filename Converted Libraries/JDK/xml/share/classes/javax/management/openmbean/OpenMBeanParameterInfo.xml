<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.openmbean">
        <import package="java.util.Set"/>
        <import package="java.lang.Comparable"/>
        <interface name="OpenMBeanParameterInfo">
            <comment line="56">
                Re-declares methods that are in class MBeanParameterInfo of JMX 1.0
                 (these will be removed when MBeanParameterInfo is made a parent interface of this interface)                
            </comment>
            <comment line="76">
                Now declares methods that are specific to open MBeans                
            </comment>
            <javadoc line="40">
                &lt;p&gt;Describes a parameter used in one or more operations or
                  constructors of an open MBean.&lt;/p&gt;
                  &lt;p&gt;This interface declares the same methods as the class {@link javax.management.MBeanParameterInfo}.  A class implementing this
                  interface (typically {@link OpenMBeanParameterInfoSupport}) should
                  extend {@link javax.management.MBeanParameterInfo}.&lt;/p&gt;                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="getDescription" type="String" line="58"/>
            <javadoc line="58">
                Returns a human readable description of the parameter
                  described by this &lt;tt&gt;OpenMBeanParameterInfo&lt;/tt&gt; instance.                
                <return>
                    the description.                    
                </return>
            </javadoc>
            <method name="getName" type="String" line="66"/>
            <javadoc line="66">
                Returns the name of the parameter
                  described by this &lt;tt&gt;OpenMBeanParameterInfo&lt;/tt&gt; instance.                
                <return>
                    the name.                    
                </return>
            </javadoc>
            <method name="getOpenType" type="OpenType<?>" line="78"/>
            <javadoc line="78">
                Returns the &lt;i&gt;open type&lt;/i&gt; of the values of the parameter
                  described by this &lt;tt&gt;OpenMBeanParameterInfo&lt;/tt&gt; instance.                
                <return>
                    the open type.                    
                </return>
            </javadoc>
            <method name="getDefaultValue" type="Object" line="86"/>
            <javadoc line="86">
                Returns the default value for this parameter, if it has one, or
                  &lt;tt&gt;null&lt;/tt&gt; otherwise.                
                <return>
                    the default value.                    
                </return>
            </javadoc>
            <method name="getLegalValues" type="Set<?>" line="94"/>
            <javadoc line="94">
                Returns the set of legal values for this parameter, if it has
                  one, or &lt;tt&gt;null&lt;/tt&gt; otherwise.                
                <return>
                    the set of legal values.                    
                </return>
            </javadoc>
            <method name="getMinValue" type="Comparable<?>" line="102"/>
            <javadoc line="102">
                Returns the minimal value for this parameter, if it has one, or
                  &lt;tt&gt;null&lt;/tt&gt; otherwise.                
                <return>
                    the minimum value.                    
                </return>
            </javadoc>
            <method name="getMaxValue" type="Comparable<?>" line="110"/>
            <javadoc line="110">
                Returns the maximal value for this parameter, if it has one, or
                  &lt;tt&gt;null&lt;/tt&gt; otherwise.                
                <return>
                    the maximum value.                    
                </return>
            </javadoc>
            <method name="hasDefaultValue" type="boolean" line="118"/>
            <javadoc line="118">
                Returns &lt;tt&gt;true&lt;/tt&gt; if this parameter has a specified default
                  value, or &lt;tt&gt;false&lt;/tt&gt; otherwise.                
                <return>
                    true if there is a default value.                    
                </return>
            </javadoc>
            <method name="hasLegalValues" type="boolean" line="126"/>
            <javadoc line="126">
                Returns &lt;tt&gt;true&lt;/tt&gt; if this parameter has a specified set of
                  legal values, or &lt;tt&gt;false&lt;/tt&gt; otherwise.                
                <return>
                    true if there is a set of legal values.                    
                </return>
            </javadoc>
            <method name="hasMinValue" type="boolean" line="134"/>
            <javadoc line="134">
                Returns &lt;tt&gt;true&lt;/tt&gt; if this parameter has a specified minimal
                  value, or &lt;tt&gt;false&lt;/tt&gt; otherwise.                
                <return>
                    true if there is a minimum value.                    
                </return>
            </javadoc>
            <method name="hasMaxValue" type="boolean" line="142"/>
            <javadoc line="142">
                Returns &lt;tt&gt;true&lt;/tt&gt; if this parameter has a specified maximal
                  value, or &lt;tt&gt;false&lt;/tt&gt; otherwise.                
                <return>
                    true if there is a maximum value.                    
                </return>
            </javadoc>
            <method name="isValue" type="boolean" line="150"/>
            <javadoc line="150">
                Tests whether &lt;var&gt;obj&lt;/var&gt; is a valid value for the parameter
                  described by this &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; instance.                
                <param>
                    obj the object to be tested.                    
                </param>
                <return>
                    <code>true</code> if <var>obj</var> is a valid value
                      for the parameter described by this
                      <code>OpenMBeanParameterInfo</code> instance,
                      <code>false</code> otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="164"/>
            <javadoc line="164">
                Compares the specified &lt;var&gt;obj&lt;/var&gt; parameter with this &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; instance for equality.
                  &lt;p&gt;
                  Returns &lt;tt&gt;true&lt;/tt&gt; if and only if all of the following statements are true:
                  &lt;ul&gt;
                  &lt;li&gt;&lt;var&gt;obj&lt;/var&gt; is non null,&lt;/li&gt;
                  &lt;li&gt;&lt;var&gt;obj&lt;/var&gt; also implements the &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; interface,&lt;/li&gt;
                  &lt;li&gt;their names are equal&lt;/li&gt;
                  &lt;li&gt;their open types are equal&lt;/li&gt;
                  &lt;li&gt;their default, min, max and legal values are equal.&lt;/li&gt;
                  &lt;/ul&gt;
                  This ensures that this &lt;tt&gt;equals&lt;/tt&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are
                  different implementations of the &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; interface.
                  &lt;br&gt;&amp;nbsp;                
                <param>
                    obj  the object to be compared for equality with this <code>OpenMBeanParameterInfo</code> instance;                    
                </param>
                <return>
                    <code>true</code> if the specified object is equal to this <code>OpenMBeanParameterInfo</code> instance.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="184"/>
            <javadoc line="184">
                Returns the hash code value for this &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; instance.
                  &lt;p&gt;
                  The hash code of an &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; instance is the sum of the hash codes
                  of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons
                  (ie: its name, its &lt;i&gt;open type&lt;/i&gt;, and its default, min, max and legal values).
                  &lt;p&gt;
                  This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt;
                  for any two &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;,
                  as required by the general contract of the method{@link Object#hashCode() Object.hashCode()}.
                  &lt;p&gt;                
                <return>
                    the hash code value for this <code>OpenMBeanParameterInfo</code> instance                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="201"/>
            <javadoc line="201">
                Returns a string representation of this &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; instance.
                  &lt;p&gt;
                  The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.OpenMBeanParameterInfo&lt;/code&gt;),
                  the string representation of the name and open type of the described parameter,
                  and the string representation of its default, min, max and legal values.                
                <return>
                    a string representation of this <code>OpenMBeanParameterInfo</code> instance                    
                </return>
            </javadoc>
        </interface>
    </source>