<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.openmbean">
        <interface name="OpenMBeanAttributeInfo">
            <implements interface="OpenMBeanParameterInfo"/>
            <javadoc line="2">
                &lt;p&gt;Describes an attribute of an open MBean.&lt;/p&gt;
                  &lt;p&gt;This interface declares the same methods as the class {@link javax.management.MBeanAttributeInfo}.  A class implementing this
                  interface (typically {@link OpenMBeanAttributeInfoSupport}) should
                  extend {@link javax.management.MBeanAttributeInfo}.&lt;/p&gt;                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="isReadable" type="boolean" line="10"/>
            <javadoc line="10">
                Returns &lt;tt&gt;true&lt;/tt&gt; if the attribute described by this &lt;tt&gt;OpenMBeanAttributeInfo&lt;/tt&gt; instance is readable,
                  &lt;tt&gt;false&lt;/tt&gt; otherwise.                
                <return>
                    true if the attribute is readable.                    
                </return>
            </javadoc>
            <method name="isWritable" type="boolean" line="16"/>
            <javadoc line="16">
                Returns &lt;tt&gt;true&lt;/tt&gt; if the attribute described by this &lt;tt&gt;OpenMBeanAttributeInfo&lt;/tt&gt; instance is writable,
                  &lt;tt&gt;false&lt;/tt&gt; otherwise.                
                <return>
                    true if the attribute is writable.                    
                </return>
            </javadoc>
            <method name="isIs" type="boolean" line="22"/>
            <javadoc line="22">
                Returns &lt;tt&gt;true&lt;/tt&gt; if the attribute described by this &lt;tt&gt;OpenMBeanAttributeInfo&lt;/tt&gt; instance
                  is accessed through a &lt;tt&gt;is&lt;i&gt;XXX&lt;/i&gt;&lt;/tt&gt; getter (applies only to &lt;tt&gt;boolean&lt;/tt&gt; and &lt;tt&gt;Boolean&lt;/tt&gt; values),
                  &lt;tt&gt;false&lt;/tt&gt; otherwise.                
                <return>
                    true if the attribute is accessed through &lt;tt&gt;is&lt;i&gt;XXX&lt;/i&gt;&lt;/tt&gt;.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="29"/>
            <javadoc line="29">
                Compares the specified &lt;var&gt;obj&lt;/var&gt; parameter with this &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; instance for equality.
                  &lt;p&gt;
                  Returns &lt;tt&gt;true&lt;/tt&gt; if and only if all of the following statements are true:
                  &lt;ul&gt;
                  &lt;li&gt;&lt;var&gt;obj&lt;/var&gt; is non null,&lt;/li&gt;
                  &lt;li&gt;&lt;var&gt;obj&lt;/var&gt; also implements the &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; interface,&lt;/li&gt;
                  &lt;li&gt;their names are equal&lt;/li&gt;
                  &lt;li&gt;their open types are equal&lt;/li&gt;
                  &lt;li&gt;their access properties (isReadable, isWritable and isIs) are equal&lt;/li&gt;
                  &lt;li&gt;their default, min, max and legal values are equal.&lt;/li&gt;
                  &lt;/ul&gt;
                  This ensures that this &lt;tt&gt;equals&lt;/tt&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are
                  different implementations of the &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; interface.
                  &lt;br&gt;&amp;nbsp;                
                <param>
                    obj  the object to be compared for equality with this &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; instance;                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if the specified object is equal to this &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; instance.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="48"/>
            <javadoc line="48">
                Returns the hash code value for this &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; instance.
                  &lt;p&gt;
                  The hash code of an &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; instance is the sum of the hash codes
                  of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons
                  (ie: its name, its &lt;i&gt;open type&lt;/i&gt;, and its default, min, max and legal values).
                  &lt;p&gt;
                  This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt;
                  for any two &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;,
                  as required by the general contract of the method{@link Object#hashCode() Object.hashCode()}.
                  &lt;p&gt;                
                <return>
                    the hash code value for this &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; instance                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="62"/>
            <javadoc line="62">
                Returns a string representation of this &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; instance.
                  &lt;p&gt;
                  The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.OpenMBeanAttributeInfo&lt;/code&gt;),
                  the string representation of the name and open type of the described attribute,
                  and the string representation of its default, min, max and legal values.                
                <return>
                    a string representation of this &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; instance                    
                </return>
            </javadoc>
        </interface>
    </source>