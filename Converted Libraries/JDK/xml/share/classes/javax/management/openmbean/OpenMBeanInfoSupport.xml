<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.openmbean">
        <import package="java.util.Arrays"/>
        <import package="java.util.HashSet"/>
        <import package="javax.management.Descriptor"/>
        <import package="javax.management.MBeanAttributeInfo"/>
        <import package="javax.management.MBeanConstructorInfo"/>
        <import package="javax.management.MBeanInfo"/>
        <import package="javax.management.MBeanNotificationInfo"/>
        <import package="javax.management.MBeanOperationInfo"/>
        <class name="OpenMBeanInfoSupport" line="42">
            <extends class="MBeanInfo"/>
            <comment line="59">
                                
            </comment>
            <comment line="62">
                As this instance is immutable, these two values
                 need only be calculated once.                
            </comment>
            <comment line="222">
                                
            </comment>
            <implements interface="OpenMBeanInfo"/>
            <javadoc line="42">
                The {@code OpenMBeanInfoSupport} class describes the management
                  information of an &lt;i&gt;open MBean&lt;/i&gt;: it is a subclass of {@link javax.management.MBeanInfo}, and it implements the {@link OpenMBeanInfo} interface.  Note that an &lt;i&gt;open MBean&lt;/i&gt; is
                  recognized as such if its {@code getMBeanInfo()} method returns an
                  instance of a class which implements the OpenMBeanInfo interface,
                  typically {@code OpenMBeanInfoSupport}.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="59"/>
            <declaration name="myHashCode" type="Integer" line="63"/>
            <declaration name="myToString" type="String" line="64"/>
            <javadoc line="67">
                &lt;p&gt;Constructs an {@code OpenMBeanInfoSupport} instance, which
                  describes a class of open MBeans with the specified {@codeclassName}, {@code description}, {@code openAttributes}, {@codeopenConstructors} , {@code openOperations} and {@codenotifications}.&lt;/p&gt;
                  &lt;p&gt;The {@code openAttributes}, {@code openConstructors},{@code openOperations} and {@code notifications}array parameters are internally copied, so that subsequent changes
                  to the arrays referenced by these parameters have no effect on this
                  instance.&lt;/p&gt;                
                <param>
                    className The fully qualified Java class name of the
                      open MBean described by this &lt;CODE&gt;OpenMBeanInfoSupport&lt;/CODE&gt;
                      instance.                    
                </param>
                <param>
                    description A human readable description of the open
                      MBean described by this &lt;CODE&gt;OpenMBeanInfoSupport&lt;/CODE&gt;
                      instance.                    
                </param>
                <param>
                    openAttributes The list of exposed attributes of the
                      described open MBean; Must be an array of instances of a
                      subclass of {@code MBeanAttributeInfo}, typically {@codeOpenMBeanAttributeInfoSupport}.                    
                </param>
                <param>
                    openConstructors The list of exposed public constructors
                      of the described open MBean; Must be an array of instances of a
                      subclass of {@code MBeanConstructorInfo}, typically {@codeOpenMBeanConstructorInfoSupport}.                    
                </param>
                <param>
                    openOperations The list of exposed operations of the
                      described open MBean.  Must be an array of instances of a
                      subclass of {@code MBeanOperationInfo}, typically {@codeOpenMBeanOperationInfoSupport}.                    
                </param>
                <param>
                    notifications The list of notifications emitted by the
                      described open MBean.                    
                </param>
                <throws>
                    ArrayStoreException If {@code openAttributes}, {@codeopenConstructors} or {@code openOperations} is not an array of
                      instances of a subclass of {@code MBeanAttributeInfo}, {@codeMBeanConstructorInfo} or {@code MBeanOperationInfo}respectively.                    
                </throws>
            </javadoc>
            <method name="OpenMBeanInfoSupport" type="constructor" line="117">
                <params>
                    <param name="className" type="String"/>
                    <param name="description" type="String"/>
                    <param name="openAttributes" type="OpenMBeanAttributeInfo[]"/>
                    <param name="openConstructors" type="OpenMBeanConstructorInfo[]"/>
                    <param name="openOperations" type="OpenMBeanOperationInfo[]"/>
                    <param name="notifications" type="MBeanNotificationInfo[]"/>
                </params>
            </method>
            <javadoc line="123">
                &lt;p&gt;Constructs an {@code OpenMBeanInfoSupport} instance, which
                  describes a class of open MBeans with the specified {@codeclassName}, {@code description}, {@code openAttributes}, {@codeopenConstructors} , {@code openOperations}, {@codenotifications}, and {@code descriptor}.&lt;/p&gt;
                  &lt;p&gt;The {@code openAttributes}, {@code openConstructors}, {@codeopenOperations} and {@code notifications} array parameters are
                  internally copied, so that subsequent changes to the arrays
                  referenced by these parameters have no effect on this
                  instance.&lt;/p&gt;                
                <param>
                    className The fully qualified Java class name of the
                      open MBean described by this &lt;CODE&gt;OpenMBeanInfoSupport&lt;/CODE&gt;
                      instance.                    
                </param>
                <param>
                    description A human readable description of the open
                      MBean described by this &lt;CODE&gt;OpenMBeanInfoSupport&lt;/CODE&gt;
                      instance.                    
                </param>
                <param>
                    openAttributes The list of exposed attributes of the
                      described open MBean; Must be an array of instances of a
                      subclass of {@code MBeanAttributeInfo}, typically {@codeOpenMBeanAttributeInfoSupport}.                    
                </param>
                <param>
                    openConstructors The list of exposed public constructors
                      of the described open MBean; Must be an array of instances of a
                      subclass of {@code MBeanConstructorInfo}, typically {@codeOpenMBeanConstructorInfoSupport}.                    
                </param>
                <param>
                    openOperations The list of exposed operations of the
                      described open MBean.  Must be an array of instances of a
                      subclass of {@code MBeanOperationInfo}, typically {@codeOpenMBeanOperationInfoSupport}.                    
                </param>
                <param>
                    notifications The list of notifications emitted by the
                      described open MBean.                    
                </param>
                <param>
                    descriptor The descriptor for the MBean.  This may be null
                      which is equivalent to an empty descriptor.                    
                </param>
                <throws>
                    ArrayStoreException If {@code openAttributes}, {@codeopenConstructors} or {@code openOperations} is not an array of
                      instances of a subclass of {@code MBeanAttributeInfo}, {@codeMBeanConstructorInfo} or {@code MBeanOperationInfo}respectively.                    
                </throws>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="OpenMBeanInfoSupport" type="constructor" line="179">
                <params>
                    <param name="className" type="String"/>
                    <param name="description" type="String"/>
                    <param name="openAttributes" type="OpenMBeanAttributeInfo[]"/>
                    <param name="openConstructors" type="OpenMBeanConstructorInfo[]"/>
                    <param name="openOperations" type="OpenMBeanOperationInfo[]"/>
                    <param name="notifications" type="MBeanNotificationInfo[]"/>
                    <param name="descriptor" type="Descriptor"/>
                </params>
            </method>
            <method name="attributeArray" type="MBeanAttributeInfo[]" line="191">
                <params>
                    <param name="src" type="OpenMBeanAttributeInfo[]"/>
                </params>
                <comment line="197">
                    may throw an ArrayStoreException                    
                </comment>
                <declaration name="dst" type="MBeanAttributeInfo[]" line="194"/>
            </method>
            <method name="constructorArray" type="MBeanConstructorInfo[]" line="201">
                <params>
                    <param name="src" type="OpenMBeanConstructorInfo[]"/>
                </params>
                <comment line="207">
                    may throw an ArrayStoreException                    
                </comment>
                <declaration name="dst" type="MBeanConstructorInfo[]" line="204"/>
            </method>
            <method name="operationArray" type="MBeanOperationInfo[]" line="211">
                <params>
                    <param name="src" type="OpenMBeanOperationInfo[]"/>
                </params>
                <declaration name="dst" type="MBeanOperationInfo[]" line="214"/>
            </method>
            <javadoc line="224">
                &lt;p&gt;Compares the specified {@code obj} parameter with this{@code OpenMBeanInfoSupport} instance for equality.&lt;/p&gt;
                  &lt;p&gt;Returns {@code true} if and only if all of the following
                  statements are true:
                  &lt;ul&gt;
                  &lt;li&gt;{@code obj} is non null,&lt;/li&gt;
                  &lt;li&gt;{@code obj} also implements the {@code OpenMBeanInfo}interface,&lt;/li&gt;
                  &lt;li&gt;their class names are equal&lt;/li&gt;
                  &lt;li&gt;their infos on attributes, constructors, operations and
                  notifications are equal&lt;/li&gt;
                  &lt;/ul&gt;
                  This ensures that this {@code equals} method works properly for{@code obj} parameters which are different implementations of
                  the {@code OpenMBeanInfo} interface.                
                <param>
                    obj the object to be compared for equality with this{@code OpenMBeanInfoSupport} instance;                    
                </param>
                <return>
                    {@code true} if the specified object is equal to this{@code OpenMBeanInfoSupport} instance.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="250">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <comment line="253">
                    if obj is null, return false                    
                </comment>
                <comment line="259">
                    if obj is not a OpenMBeanInfo, return false                    
                </comment>
                <comment line="268">
                    Now, really test for equality between this OpenMBeanInfo
                     implementation and the other:                    
                </comment>
                <comment line="272">
                    their MBean className should be equal                    
                </comment>
                <comment line="276">
                    their infos on attributes should be equal (order not
                     significant =&gt; equality between sets, not arrays or lists)                    
                </comment>
                <comment line="281">
                    their infos on constructors should be equal (order not
                     significant =&gt; equality between sets, not arrays or lists)                    
                </comment>
                <comment line="286">
                    their infos on operations should be equal (order not
                     significant =&gt; equality between sets, not arrays or lists)                    
                </comment>
                <comment line="292">
                    their infos on notifications should be equal (order not
                     significant =&gt; equality between sets, not arrays or lists)                    
                </comment>
                <comment line="297">
                    All tests for equality were successful                    
                </comment>
                <scope line="254"/>
                <declaration name="other" type="OpenMBeanInfo" line="260"/>
                <scope line="261"/>
                <scope line="263"/>
            </method>
            <method name="sameArrayContents" type="boolean" line="301">
                <params>
                    <param name="a1" type="T[]"/>
                    <param name="a2" type="T[]"/>
                </params>
            </method>
            <javadoc line="306">
                &lt;p&gt;Returns the hash code value for this {@codeOpenMBeanInfoSupport} instance.&lt;/p&gt;
                  &lt;p&gt;The hash code of an {@code OpenMBeanInfoSupport} instance is
                  the sum of the hash codes of all elements of information used
                  in {@code equals} comparisons (ie: its class name, and its
                  infos on attributes, constructors, operations and
                  notifications, where the hashCode of each of these arrays is
                  calculated by a call to {@code new
                  java.util.HashSet(java.util.Arrays.asList(this.getSignature)).hashCode()}).&lt;/p&gt;
                  &lt;p&gt;This ensures that {@code t1.equals(t2)} implies that {@codet1.hashCode()==t2.hashCode()} for any two {@codeOpenMBeanInfoSupport} instances {@code t1} and {@code t2}, as
                  required by the general contract of the method {@link Object#hashCode() Object.hashCode()}.&lt;/p&gt;
                  &lt;p&gt;However, note that another instance of a class implementing
                  the {@code OpenMBeanInfo} interface may be equal to this {@codeOpenMBeanInfoSupport} instance as defined by {@link #equals(java.lang.Object)}, but may have a different hash code
                  if it is calculated differently.&lt;/p&gt;
                  &lt;p&gt;As {@code OpenMBeanInfoSupport} instances are immutable, the
                  hash code for this instance is calculated once, on the first
                  call to {@code hashCode}, and then the same value is returned
                  for subsequent calls.&lt;/p&gt;                
                <return>
                    the hash code value for this {@codeOpenMBeanInfoSupport} instance                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="338">
                <comment line="341">
                    Calculate the hash code value if it has not yet been done
                     (ie 1st call to hashCode())                    
                </comment>
                <comment line="354">
                    return always the same hash code for this instance (immutable)                    
                </comment>
                <scope line="343">
                    <declaration name="value" type="int" line="344"/>
                </scope>
            </method>
            <method name="arraySetHash" type="int" line="358">
                <params>
                    <param name="a" type="T[]"/>
                </params>
            </method>
            <javadoc line="364">
                &lt;p&gt;Returns a string representation of this {@codeOpenMBeanInfoSupport} instance.&lt;/p&gt;
                  &lt;p&gt;The string representation consists of the name of this class
                  (ie {@code javax.management.openmbean.OpenMBeanInfoSupport}),
                  the MBean class name, the string representation of infos on
                  attributes, constructors, operations and notifications of the
                  described MBean and the string representation of the descriptor.&lt;/p&gt;
                  &lt;p&gt;As {@code OpenMBeanInfoSupport} instances are immutable, the
                  string representation for this instance is calculated once, on
                  the first call to {@code toString}, and then the same value is
                  returned for subsequent calls.&lt;/p&gt;                
                <return>
                    a string representation of this {@codeOpenMBeanInfoSupport} instance                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="382">
                <comment line="385">
                    Calculate the string value if it has not yet been done (ie
                     1st call to toString())                    
                </comment>
                <comment line="407">
                    return always the same string representation for this
                     instance (immutable)                    
                </comment>
                <scope line="387"/>
            </method>
        </class>
    </source>