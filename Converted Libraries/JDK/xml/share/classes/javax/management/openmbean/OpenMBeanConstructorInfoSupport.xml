<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.openmbean">
        <import package="java.util.Arrays"/>
        <import package="javax.management.Descriptor"/>
        <import package="javax.management.MBeanConstructorInfo"/>
        <import package="javax.management.MBeanParameterInfo"/>
        <class name="OpenMBeanConstructorInfoSupport" line="6">
            <extends class="MBeanConstructorInfo"/>
            <implements interface="OpenMBeanConstructorInfo"/>
            <javadoc line="6">
                Describes a constructor of an Open MBean.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="11"/>
            <declaration name="myHashCode" type="Integer" line="12"/>
            <declaration name="myToString" type="String" line="13"/>
            <javadoc line="14">
                &lt;p&gt;Constructs an {@code OpenMBeanConstructorInfoSupport}instance, which describes the constructor of a class of open
                  MBeans with the specified {@code name}, {@code description} and{@code signature}.&lt;/p&gt;
                  &lt;p&gt;The {@code signature} array parameter is internally copied,
                  so that subsequent changes to the array referenced by {@codesignature} have no effect on this instance.&lt;/p&gt;                
                <param>
                    name cannot be a null or empty string.                    
                </param>
                <param>
                    description cannot be a null or empty string.                    
                </param>
                <param>
                    signature can be null or empty if there are no
                      parameters to describe.                    
                </param>
                <throws>
                    IllegalArgumentException if {@code name} or {@codedescription} are null or empty string.                    
                </throws>
                <throws>
                    ArrayStoreException If {@code signature} is not an
                      array of instances of a subclass of {@code MBeanParameterInfo}.                    
                </throws>
            </javadoc>
            <method name="OpenMBeanConstructorInfoSupport" type="constructor" line="27">
                <params>
                    <param name="name" type="String"/>
                    <param name="description" type="String"/>
                    <param name="signature" type="OpenMBeanParameterInfo[]"/>
                </params>
            </method>
            <javadoc line="30">
                &lt;p&gt;Constructs an {@code OpenMBeanConstructorInfoSupport}instance, which describes the constructor of a class of open
                  MBeans with the specified {@code name}, {@code description},{@code signature}, and {@code descriptor}.&lt;/p&gt;
                  &lt;p&gt;The {@code signature} array parameter is internally copied,
                  so that subsequent changes to the array referenced by {@codesignature} have no effect on this instance.&lt;/p&gt;                
                <param>
                    name cannot be a null or empty string.                    
                </param>
                <param>
                    description cannot be a null or empty string.                    
                </param>
                <param>
                    signature can be null or empty if there are no
                      parameters to describe.                    
                </param>
                <param>
                    descriptor The descriptor for the constructor.  This may
                      be null which is equivalent to an empty descriptor.                    
                </param>
                <throws>
                    IllegalArgumentException if {@code name} or {@codedescription} are null or empty string.                    
                </throws>
                <throws>
                    ArrayStoreException If {@code signature} is not an
                      array of instances of a subclass of {@code MBeanParameterInfo}.                    
                </throws>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="OpenMBeanConstructorInfoSupport" type="constructor" line="46">
                <params>
                    <param name="name" type="String"/>
                    <param name="description" type="String"/>
                    <param name="signature" type="OpenMBeanParameterInfo[]"/>
                    <param name="descriptor" type="Descriptor"/>
                </params>
                <scope line="48"/>
                <scope line="51"/>
            </method>
            <method name="arrayCopyCast" type="MBeanParameterInfo[]" line="55">
                <params>
                    <param name="src" type="OpenMBeanParameterInfo[]"/>
                </params>
                <declaration name="dst" type="MBeanParameterInfo[]" line="57"/>
            </method>
            <javadoc line="61">
                &lt;p&gt;Compares the specified {@code obj} parameter with this{@code OpenMBeanConstructorInfoSupport} instance for
                  equality.&lt;/p&gt;
                  &lt;p&gt;Returns {@code true} if and only if all of the following
                  statements are true:
                  &lt;ul&gt;
                  &lt;li&gt;{@code obj} is non null,&lt;/li&gt;
                  &lt;li&gt;{@code obj} also implements the {@codeOpenMBeanConstructorInfo} interface,&lt;/li&gt;
                  &lt;li&gt;their names are equal&lt;/li&gt;
                  &lt;li&gt;their signatures are equal.&lt;/li&gt;
                  &lt;/ul&gt;
                  This ensures that this {@code equals} method works properly for{@code obj} parameters which are different implementations of
                  the {@code OpenMBeanConstructorInfo} interface.                
                <param>
                    obj the object to be compared for equality with this{@code OpenMBeanConstructorInfoSupport} instance;                    
                </param>
                <return>
                    {@code true} if the specified object is equal to this{@code OpenMBeanConstructorInfoSupport} instance.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="77">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="78"/>
                <declaration name="other" type="OpenMBeanConstructorInfo" line="81"/>
                <scope line="82"/>
                <scope line="85"/>
                <scope line="88"/>
                <scope line="91"/>
            </method>
            <javadoc line="96">
                &lt;p&gt;Returns the hash code value for this {@codeOpenMBeanConstructorInfoSupport} instance.&lt;/p&gt;
                  &lt;p&gt;The hash code of an {@code OpenMBeanConstructorInfoSupport}instance is the sum of the hash codes of all elements of
                  information used in {@code equals} comparisons (ie: its name
                  and signature, where the signature hashCode is calculated by a
                  call to 
                  ).&lt;/p&gt;
                  &lt;p&gt;This ensures that {@code t1.equals(t2)} implies that 
                   for any two {@codeOpenMBeanConstructorInfoSupport} instances {@code t1} and{@code t2}, as required by the general contract of the method{@link Object#hashCode() Object.hashCode()}.&lt;/p&gt;
                  &lt;p&gt;However, note that another instance of a class implementing
                  the {@code OpenMBeanConstructorInfo} interface may be equal to
                  this {@code OpenMBeanConstructorInfoSupport} instance as
                  defined by {@link #equals(java.lang.Object)}, but may have a
                  different hash code if it is calculated differently.&lt;/p&gt;
                  &lt;p&gt;As {@code OpenMBeanConstructorInfoSupport} instances are
                  immutable, the hash code for this instance is calculated once,
                  on the first call to {@code hashCode}, and then the same value
                  is returned for subsequent calls.&lt;/p&gt;                
                <return>
                    the hash code value for this {@codeOpenMBeanConstructorInfoSupport} instance                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="114">
                <scope line="115">
                    <declaration name="value" type="int" line="116"/>
                </scope>
            </method>
            <javadoc line="123">
                &lt;p&gt;Returns a string representation of this {@codeOpenMBeanConstructorInfoSupport} instance.&lt;/p&gt;
                  &lt;p&gt;The string representation consists of the name of this class
                  (ie {@codejavax.management.openmbean.OpenMBeanConstructorInfoSupport}),
                  the name and signature of the described constructor and the
                  string representation of its descriptor.&lt;/p&gt;
                  &lt;p&gt;As {@code OpenMBeanConstructorInfoSupport} instances are
                  immutable, the string representation for this instance is
                  calculated once, on the first call to {@code toString}, and
                  then the same value is returned for subsequent calls.&lt;/p&gt;                
                <return>
                    a string representation of this {@codeOpenMBeanConstructorInfoSupport} instance                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="135">
                <scope line="136"/>
            </method>
        </class>
    </source>