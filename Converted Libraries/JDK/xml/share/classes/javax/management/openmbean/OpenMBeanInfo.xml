<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management.openmbean">
        <import package="javax.management.MBeanAttributeInfo"/>
        <import package="javax.management.MBeanOperationInfo"/>
        <import package="javax.management.MBeanConstructorInfo"/>
        <import package="javax.management.MBeanNotificationInfo"/>
        <interface name="OpenMBeanInfo">
            <comment line="69">
                Re-declares the methods that are in class MBeanInfo of JMX 1.0                
            </comment>
            <comment line="70">
                (methods will be removed when MBeanInfo is made a parent interface of this interface)                
            </comment>
            <comment line="137">
                commodity methods                
            </comment>
            <comment line="138">
                                
            </comment>
            <javadoc line="43">
                &lt;p&gt;Describes an Open MBean: an Open MBean is recognized as such if
                  its {@link javax.management.DynamicMBean#getMBeanInfo()getMBeanInfo()} method returns an instance of a class which
                  implements the {@link OpenMBeanInfo} interface, typically {@link OpenMBeanInfoSupport}.&lt;/p&gt;
                  &lt;p&gt;This interface declares the same methods as the class {@link javax.management.MBeanInfo}.  A class implementing this interface
                  (typically {@link OpenMBeanInfoSupport}) should extend {@link javax.management.MBeanInfo}.&lt;/p&gt;
                  &lt;p&gt;The {@link #getAttributes()}, {@link #getOperations()} and{@link #getConstructors()} methods of the implementing class should
                  return at runtime an array of instances of a subclass of {@link MBeanAttributeInfo}, {@link MBeanOperationInfo} or {@link MBeanConstructorInfo} respectively which implement the {@link OpenMBeanAttributeInfo}, {@link OpenMBeanOperationInfo} or {@link OpenMBeanConstructorInfo} interface respectively.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="getClassName" type="String" line="71"/>
            <javadoc line="71">
                Returns the fully qualified Java class name of the open MBean
                  instances this &lt;tt&gt;OpenMBeanInfo&lt;/tt&gt; describes.                
                <return>
                    the class name.                    
                </return>
            </javadoc>
            <method name="getDescription" type="String" line="79"/>
            <javadoc line="79">
                Returns a human readable description of the type of open MBean
                  instances this &lt;tt&gt;OpenMBeanInfo&lt;/tt&gt; describes.                
                <return>
                    the description.                    
                </return>
            </javadoc>
            <method name="getAttributes" type="MBeanAttributeInfo[]" line="87"/>
            <javadoc line="87">
                Returns an array of &lt;tt&gt;OpenMBeanAttributeInfo&lt;/tt&gt; instances
                  describing each attribute in the open MBean described by this
                  &lt;tt&gt;OpenMBeanInfo&lt;/tt&gt; instance.  Each instance in the returned
                  array should actually be a subclass of
                  &lt;tt&gt;MBeanAttributeInfo&lt;/tt&gt; which implements the
                  &lt;tt&gt;OpenMBeanAttributeInfo&lt;/tt&gt; interface (typically {@link OpenMBeanAttributeInfoSupport}).                
                <return>
                    the attribute array.                    
                </return>
            </javadoc>
            <method name="getOperations" type="MBeanOperationInfo[]" line="100"/>
            <javadoc line="100">
                Returns an array of &lt;tt&gt;OpenMBeanOperationInfo&lt;/tt&gt; instances
                  describing each operation in the open MBean described by this
                  &lt;tt&gt;OpenMBeanInfo&lt;/tt&gt; instance.  Each instance in the returned
                  array should actually be a subclass of
                  &lt;tt&gt;MBeanOperationInfo&lt;/tt&gt; which implements the
                  &lt;tt&gt;OpenMBeanOperationInfo&lt;/tt&gt; interface (typically {@link OpenMBeanOperationInfoSupport}).                
                <return>
                    the operation array.                    
                </return>
            </javadoc>
            <method name="getConstructors" type="MBeanConstructorInfo[]" line="113"/>
            <javadoc line="113">
                Returns an array of &lt;tt&gt;OpenMBeanConstructorInfo&lt;/tt&gt; instances
                  describing each constructor in the open MBean described by this
                  &lt;tt&gt;OpenMBeanInfo&lt;/tt&gt; instance.  Each instance in the returned
                  array should actually be a subclass of
                  &lt;tt&gt;MBeanConstructorInfo&lt;/tt&gt; which implements the
                  &lt;tt&gt;OpenMBeanConstructorInfo&lt;/tt&gt; interface (typically {@link OpenMBeanConstructorInfoSupport}).                
                <return>
                    the constructor array.                    
                </return>
            </javadoc>
            <method name="getNotifications" type="MBeanNotificationInfo[]" line="126"/>
            <javadoc line="126">
                Returns an array of &lt;tt&gt;MBeanNotificationInfo&lt;/tt&gt; instances
                  describing each notification emitted by the open MBean
                  described by this &lt;tt&gt;OpenMBeanInfo&lt;/tt&gt; instance.                
                <return>
                    the notification array.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="139"/>
            <javadoc line="139">
                Compares the specified &lt;var&gt;obj&lt;/var&gt; parameter with this &lt;code&gt;OpenMBeanInfo&lt;/code&gt; instance for equality.
                  &lt;p&gt;
                  Returns &lt;tt&gt;true&lt;/tt&gt; if and only if all of the following statements are true:
                  &lt;ul&gt;
                  &lt;li&gt;&lt;var&gt;obj&lt;/var&gt; is non null,&lt;/li&gt;
                  &lt;li&gt;&lt;var&gt;obj&lt;/var&gt; also implements the &lt;code&gt;OpenMBeanInfo&lt;/code&gt; interface,&lt;/li&gt;
                  &lt;li&gt;their class names are equal&lt;/li&gt;
                  &lt;li&gt;their infos on attributes, constructors, operations and notifications are equal&lt;/li&gt;
                  &lt;/ul&gt;
                  This ensures that this &lt;tt&gt;equals&lt;/tt&gt; method works properly for &lt;var&gt;obj&lt;/var&gt; parameters which are
                  different implementations of the &lt;code&gt;OpenMBeanInfo&lt;/code&gt; interface.
                  &lt;br&gt;&amp;nbsp;                
                <param>
                    obj  the object to be compared for equality with this <code>OpenMBeanInfo</code> instance;                    
                </param>
                <return>
                    <code>true</code> if the specified object is equal to this <code>OpenMBeanInfo</code> instance.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="158"/>
            <javadoc line="158">
                Returns the hash code value for this &lt;code&gt;OpenMBeanInfo&lt;/code&gt; instance.
                  &lt;p&gt;
                  The hash code of an &lt;code&gt;OpenMBeanInfo&lt;/code&gt; instance is the sum of the hash codes
                  of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons
                  (ie: its class name, and its infos on attributes, constructors, operations and notifications,
                  where the hashCode of each of these arrays is calculated by a call to
                  &lt;tt&gt;new java.util.HashSet(java.util.Arrays.asList(this.getSignature)).hashCode()&lt;/tt&gt;).
                  &lt;p&gt;
                  This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt;
                  for any two &lt;code&gt;OpenMBeanInfo&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;,
                  as required by the general contract of the method{@link Object#hashCode() Object.hashCode()}.
                  &lt;p&gt;                
                <return>
                    the hash code value for this <code>OpenMBeanInfo</code> instance                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="177"/>
            <javadoc line="177">
                Returns a string representation of this &lt;code&gt;OpenMBeanInfo&lt;/code&gt; instance.
                  &lt;p&gt;
                  The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.OpenMBeanInfo&lt;/code&gt;),
                  the MBean class name,
                  and the string representation of infos on attributes, constructors, operations and notifications of the described MBean.                
                <return>
                    a string representation of this <code>OpenMBeanInfo</code> instance                    
                </return>
            </javadoc>
        </interface>
    </source>