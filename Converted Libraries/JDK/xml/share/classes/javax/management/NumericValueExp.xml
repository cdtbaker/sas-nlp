<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management">
        <import package="com.sun.jmx.mbeanserver.GetPropertyAction"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.ObjectStreamField"/>
        <import package="java.security.AccessController"/>
        <class name="NumericValueExp" line="38">
            <extends class="QueryEval"/>
            <comment line="49">
                serialVersionUID not constant                
            </comment>
            <comment line="52">
                Serialization compatibility stuff:
                 Two serial forms are supported in this class. The selected form depends
                 on system property &quot;jmx.serial.form&quot;:
                  - &quot;1.0&quot; for JMX 1.0
                  - any other value for JMX 1.1 and higher
                
                 Serial version for old serial form                
            </comment>
            <comment line="60">
                Serial version for new serial form                
            </comment>
            <comment line="63">
                Serializable fields in old serial form                
            </comment>
            <comment line="71">
                Serializable fields in new serial form                
            </comment>
            <comment line="77">
                Actual serial version and serial form                
            </comment>
            <comment line="106">
                END Serialization compatibility stuff                
            </comment>
            <implements interface="ValueExp"/>
            <javadoc line="38">
                This class represents numbers that are arguments to relational constraints.
                  A NumericValueExp may be used anywhere a ValueExp is required.
                  &lt;p&gt;The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-4679739485102359104L&lt;/code&gt;.                
                <serial>
                    include                    
                </serial>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="oldSerialVersionUID" type="long" line="58"/>
            <declaration name="newSerialVersionUID" type="long" line="61"/>
            <declaration name="oldSerialPersistentFields" type="ObjectStreamField[]" line="64"/>
            <declaration name="newSerialPersistentFields" type="ObjectStreamField[]" line="72"/>
            <declaration name="serialVersionUID" type="long" line="78"/>
            <declaration name="serialPersistentFields" type="ObjectStreamField[]" line="80"/>
            <javadoc line="80">
                @serialField val Number The numeric value
                  &lt;p&gt;The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-4679739485102359104L&lt;/code&gt;.                
            </javadoc>
            <declaration name="val" type="Number" line="86"/>
            <declaration name="compat" type="boolean" line="88"/>
            <scope line="89">
                <scope line="90">
                    <declaration name="act" type="GetPropertyAction" line="91"/>
                    <declaration name="form" type="String" line="92"/>
                </scope>
                <scope line="94"/>
                <scope line="97"/>
                <scope line="100"/>
            </scope>
            <javadoc line="109">
                Basic constructor.                
            </javadoc>
            <method name="NumericValueExp" type="constructor" line="112"/>
            <javadoc line="115">
                Creates a new NumericValue representing the numeric literal &lt;val&gt;.                
            </javadoc>
            <method name="NumericValueExp" type="constructor" line="117">
                <params>
                    <param name="val" type="Number"/>
                </params>
            </method>
            <javadoc line="121">
                Returns a double numeric value                
            </javadoc>
            <method name="doubleValue" type="double" line="124">
                <scope line="126"/>
            </method>
            <javadoc line="132">
                Returns a long numeric value                
            </javadoc>
            <method name="longValue" type="long" line="135">
                <scope line="137"/>
            </method>
            <javadoc line="143">
                Returns true is if the numeric value is a long, false otherwise.                
            </javadoc>
            <method name="isLong" type="boolean" line="146"/>
            <javadoc line="150">
                Returns the string representing the object                
            </javadoc>
            <method name="toString" type="String" line="153">
                <scope line="157"/>
                <declaration name="d" type="double" line="160"/>
            </method>
            <javadoc line="168">
                Applies the ValueExp on a MBean.                
                <param>
                    name The name of the MBean on which the ValueExp will be applied.                    
                </param>
                <return>
                    The <CODE>ValueExp</CODE>.                    
                </return>
                <exception>
                    BadStringOperationException                    
                </exception>
                <exception>
                    BadBinaryOpValueExpException                    
                </exception>
                <exception>
                    BadAttributeValueExpException                    
                </exception>
                <exception>
                    InvalidApplicationException                    
                </exception>
            </javadoc>
            <method name="apply" type="ValueExp" line="182">
                <params>
                    <param name="name" type="ObjectName"/>
                </params>
            </method>
            <javadoc line="186">
                Deserializes a {@link NumericValueExp} from an {@link ObjectInputStream}.                
            </javadoc>
            <method name="readObject" type="void" line="190">
                <params>
                    <param name="in" type="ObjectInputStream"/>
                </params>
                <comment line="194">
                    Read an object serialized in the old serial form                    
                </comment>
                <comment line="226">
                    Read an object serialized in the new serial form                    
                </comment>
                <scope line="192">
                    <declaration name="doubleVal" type="double" line="195"/>
                    <declaration name="longVal" type="long" line="196"/>
                    <declaration name="isLong" type="boolean" line="197"/>
                    <declaration name="fields" type="ObjectInputStream.GetField" line="198"/>
                    <scope line="201"/>
                    <scope line="206"/>
                    <scope line="211"/>
                    <scope line="215"/>
                    <scope line="219"/>
                </scope>
                <scope line="224"/>
            </method>
            <javadoc line="232">
                Serializes a {@link NumericValueExp} to an {@link ObjectOutputStream}.                
            </javadoc>
            <method name="writeObject" type="void" line="236">
                <params>
                    <param name="out" type="ObjectOutputStream"/>
                </params>
                <comment line="240">
                    Serializes this instance in the old serial form                    
                </comment>
                <comment line="250">
                    Serializes this instance in the new serial form                    
                </comment>
                <scope line="238">
                    <declaration name="fields" type="ObjectOutputStream.PutField" line="241"/>
                </scope>
                <scope line="248"/>
            </method>
            <method name="setMBeanServer" type="void" line="256">
                <params>
                    <param name="s" type="MBeanServer"/>
                </params>
            </method>
        </class>
    </source>