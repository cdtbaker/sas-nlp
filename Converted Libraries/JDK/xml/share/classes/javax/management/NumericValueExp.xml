<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management">
        <import package="com.sun.jmx.mbeanserver.GetPropertyAction"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.ObjectStreamField"/>
        <import package="java.security.AccessController"/>
        <class name="NumericValueExp" line="8">
            <extends class="QueryEval"/>
            <implements interface="ValueExp"/>
            <javadoc line="8">
                This class represents numbers that are arguments to relational constraints.
                  A NumericValueExp may be used anywhere a ValueExp is required.
                  &lt;p&gt;The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-4679739485102359104L&lt;/code&gt;.                
                <serial>
                    include                    
                </serial>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="oldSerialVersionUID" type="long" line="16"/>
            <declaration name="newSerialVersionUID" type="long" line="17"/>
            <declaration name="oldSerialPersistentFields" type="ObjectStreamField[]" line="18"/>
            <declaration name="newSerialPersistentFields" type="ObjectStreamField[]" line="19"/>
            <declaration name="serialVersionUID" type="long" line="20"/>
            <declaration name="serialPersistentFields" type="ObjectStreamField[]" line="21"/>
            <javadoc line="21">
                @serialField val Number The numeric value
                  &lt;p&gt;The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-4679739485102359104L&lt;/code&gt;.                
            </javadoc>
            <declaration name="val" type="Number" line="26"/>
            <declaration name="compat" type="boolean" line="27"/>
            <scope line="28">
                <scope line="29">
                    <declaration name="act" type="GetPropertyAction" line="30"/>
                    <declaration name="form" type="String" line="31"/>
                </scope>
                <scope line="34"/>
                <scope line="36"/>
                <scope line="40"/>
            </scope>
            <javadoc line="45">
                Basic constructor.                
            </javadoc>
            <method name="NumericValueExp" type="constructor" line="48"/>
            <javadoc line="50">
                Creates a new NumericValue representing the numeric literal &lt;val&gt;.                
            </javadoc>
            <method name="NumericValueExp" type="constructor" line="53">
                <params>
                    <param name="val" type="Number"/>
                </params>
            </method>
            <javadoc line="56">
                Returns a double numeric value                
            </javadoc>
            <method name="doubleValue" type="double" line="59">
                <scope line="60"/>
            </method>
            <javadoc line="65">
                Returns a long numeric value                
            </javadoc>
            <method name="longValue" type="long" line="68">
                <scope line="69"/>
            </method>
            <javadoc line="74">
                Returns true is if the numeric value is a long, false otherwise.                
            </javadoc>
            <method name="isLong" type="boolean" line="77"/>
            <javadoc line="80">
                Returns the string representing the object                
            </javadoc>
            <method name="toString" type="String" line="83">
                <scope line="85"/>
                <declaration name="d" type="double" line="88"/>
            </method>
            <javadoc line="93">
                Applies the ValueExp on a MBean.                
                <param>
                    name The name of the MBean on which the ValueExp will be applied.                    
                </param>
                <return>
                    The <CODE>ValueExp</CODE>.                    
                </return>
                <exception>
                    BadStringOperationException                    
                </exception>
                <exception>
                    BadBinaryOpValueExpException                    
                </exception>
                <exception>
                    BadAttributeValueExpException                    
                </exception>
                <exception>
                    InvalidApplicationException                    
                </exception>
            </javadoc>
            <method name="apply" type="ValueExp" line="102">
                <params>
                    <param name="name" type="ObjectName"/>
                </params>
            </method>
            <javadoc line="105">
                Deserializes a {@link NumericValueExp} from an {@link ObjectInputStream}.                
            </javadoc>
            <method name="readObject" type="void" line="108">
                <params>
                    <param name="in" type="ObjectInputStream"/>
                </params>
                <scope line="109">
                    <declaration name="doubleVal" type="double" line="110"/>
                    <declaration name="longVal" type="long" line="111"/>
                    <declaration name="isLong" type="boolean" line="112"/>
                    <declaration name="fields" type="ObjectInputStream.GetField" line="113"/>
                    <scope line="115"/>
                    <scope line="119"/>
                    <scope line="123"/>
                    <scope line="126"/>
                    <scope line="129"/>
                </scope>
                <scope line="133"/>
            </method>
            <javadoc line="137">
                Serializes a {@link NumericValueExp} to an {@link ObjectOutputStream}.                
            </javadoc>
            <method name="writeObject" type="void" line="140">
                <params>
                    <param name="out" type="ObjectOutputStream"/>
                </params>
                <scope line="141">
                    <declaration name="fields" type="ObjectOutputStream.PutField" line="142"/>
                </scope>
                <scope line="148"/>
            </method>
            <method name="setMBeanServer" type="void" line="152">
                <params>
                    <param name="s" type="MBeanServer"/>
                </params>
            </method>
        </class>
    </source>