<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management">
        <interface name="MBeanRegistration">
            <javadoc line="2">
                &lt;p&gt;Can be implemented by an MBean in order to
                  carry out operations before and after being registered or unregistered from
                  the MBean Server.  An MBean can also implement this interface in order
                  to get a reference to the MBean Server and/or its name within that
                  MBean Server.&lt;/p&gt;                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="preRegister" type="ObjectName" line="11"/>
            <javadoc line="11">
                Allows the MBean to perform any operations it needs before
                  being registered in the MBean Server.  If the name of the MBean
                  is not specified, the MBean can provide a name for its
                  registration.  If any exception is raised, the MBean will not be
                  registered in the MBean Server.                
                <param>
                    server The MBean Server in which the MBean will be registered.                    
                </param>
                <param>
                    name The object name of the MBean.  This name is null if
                      the name parameter to one of the <code>createMBean</code> or
                      <code>registerMBean</code> methods in the {@link MBeanServer}interface is null.  In that case, this method must return a
                      non-null ObjectName for the new MBean.                    
                </param>
                <return>
                    The name under which the MBean is to be registered.
                      This value must not be null.  If the <code>name</code>
                      parameter is not null, it will usually but not necessarily be
                      the returned value.                    
                </return>
                <exception>
                    java.lang.Exception This exception will be caught by
                      the MBean Server and re-thrown as an {@link MBeanRegistrationException}.                    
                </exception>
            </javadoc>
            <method name="postRegister" type="void" line="30"/>
            <javadoc line="30">
                Allows the MBean to perform any operations needed after having been
                  registered in the MBean server or after the registration has failed.
                  &lt;p&gt;If the implementation of this method throws a {@link RuntimeException}or an {@link Error}, the MBean Server will rethrow those inside
                  a {@link RuntimeMBeanException} or {@link RuntimeErrorException},
                  respectively. However, throwing an exception in {@code postRegister}will not change the state of the MBean:
                  if the MBean was already registered ({@code registrationDone} is{@code true}), the MBean will remain registered. &lt;/p&gt;
                  &lt;p&gt;This might be confusing for the code calling {@code createMBean()}or {@code registerMBean()}, as such code might assume that MBean
                  registration has failed when such an exception is raised.
                  Therefore it is recommended that implementations of{@code postRegister} do not throw Runtime Exceptions or Errors if it
                  can be avoided.&lt;/p&gt;                
                <param>
                    registrationDone Indicates whether or not the MBean has
                      been successfully registered in the MBean server. The value
                      false means that the registration phase has failed.                    
                </param>
            </javadoc>
            <method name="preDeregister" type="void" line="46"/>
            <javadoc line="46">
                Allows the MBean to perform any operations it needs before
                  being unregistered by the MBean server.                
                <exception>
                    java.lang.Exception This exception will be caught by
                      the MBean server and re-thrown as an {@link MBeanRegistrationException}.                    
                </exception>
            </javadoc>
            <method name="postDeregister" type="void" line="53"/>
            <javadoc line="53">
                Allows the MBean to perform any operations needed after having been
                  unregistered in the MBean server.
                  &lt;p&gt;If the implementation of this method throws a {@link RuntimeException}or an {@link Error}, the MBean Server will rethrow those inside
                  a {@link RuntimeMBeanException} or {@link RuntimeErrorException},
                  respectively. However, throwing an exception in {@code postDeregister}will not change the state of the MBean:
                  the MBean was already successfully deregistered and will remain so. &lt;/p&gt;
                  &lt;p&gt;This might be confusing for the code calling{@code unregisterMBean()}, as it might assume that MBean deregistration
                  has failed. Therefore it is recommended that implementations of{@code postDeregister} do not throw Runtime Exceptions or Errors if it
                  can be avoided.&lt;/p&gt;                
            </javadoc>
        </interface>
    </source>