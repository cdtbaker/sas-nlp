<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management">
        <class name="MatchQueryExp" line="2">
            <extends class="QueryEval"/>
            <implements interface="QueryExp"/>
            <javadoc line="2">
                This class is used by the query-building mechanism to represent binary
                  relations.                
                <serial>
                    include                    
                </serial>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="9"/>
            <declaration name="exp" type="AttributeValueExp" line="10"/>
            <javadoc line="10">
                @serial The attribute value to be matched                
            </javadoc>
            <declaration name="pattern" type="String" line="14"/>
            <javadoc line="14">
                @serial The pattern to be matched                
            </javadoc>
            <javadoc line="18">
                Basic Constructor.                
            </javadoc>
            <method name="MatchQueryExp" type="constructor" line="21"/>
            <javadoc line="23">
                Creates a new MatchQueryExp where the specified AttributeValueExp matches
                  the specified pattern StringValueExp.                
            </javadoc>
            <method name="MatchQueryExp" type="constructor" line="27">
                <params>
                    <param name="a" type="AttributeValueExp"/>
                    <param name="s" type="StringValueExp"/>
                </params>
            </method>
            <javadoc line="31">
                Returns the attribute of the query.                
            </javadoc>
            <method name="getAttribute" type="AttributeValueExp" line="34"/>
            <javadoc line="37">
                Returns the pattern of the query.                
            </javadoc>
            <method name="getPattern" type="String" line="40"/>
            <javadoc line="43">
                Applies the MatchQueryExp on a MBean.                
                <param>
                    name The name of the MBean on which the MatchQueryExp will be applied.                    
                </param>
                <return>
                    True if the query was successfully applied to the MBean, false otherwise.                    
                </return>
                <exception>
                    BadStringOperationException                    
                </exception>
                <exception>
                    BadBinaryOpValueExpException                    
                </exception>
                <exception>
                    BadAttributeValueExpException                    
                </exception>
                <exception>
                    InvalidApplicationException                    
                </exception>
            </javadoc>
            <method name="apply" type="boolean" line="52">
                <params>
                    <param name="name" type="ObjectName"/>
                </params>
                <declaration name="val" type="ValueExp" line="53"/>
                <scope line="54"/>
            </method>
            <javadoc line="59">
                Returns the string representing the object                
            </javadoc>
            <method name="toString" type="String" line="62"/>
            <method name="wildmatch" type="boolean" line="65">
                <params>
                    <param name="s" type="String"/>
                    <param name="p" type="String"/>
                </params>
                <declaration name="c" type="char" line="66"/>
                <declaration name="si" type="int" line="67"/>
                <declaration name="slen" type="int" line="68"/>
                <declaration name="plen" type="int" line="69"/>
                <scope line="70">
                    <scope line="72"/>
                    <scope line="75">
                        <declaration name="wantit" type="boolean" line="77"/>
                        <declaration name="seenit" type="boolean" line="78"/>
                        <scope line="79"/>
                        <scope line="83">
                            <scope line="84">
                                <scope line="85"/>
                            </scope>
                            <scope line="90">
                                <scope line="91"/>
                            </scope>
                        </scope>
                        <scope line="96"/>
                    </scope>
                    <scope line="102">
                        <scope line="104"/>
                    </scope>
                    <scope line="110"/>
                    <scope line="113">
                        <scope line="114"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>