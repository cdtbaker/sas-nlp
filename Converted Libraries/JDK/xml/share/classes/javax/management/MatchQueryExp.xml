<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management">
        <class name="MatchQueryExp" line="30">
            <extends class="QueryEval"/>
            <comment line="40">
                                
            </comment>
            <comment line="116">
                Tests whether string s is matched by pattern p.
                 Supports &quot;?&quot;, &quot;&quot;, &quot;[&quot;, each of which may be escaped with &quot;\&quot;;
                 character classes may use &quot;!&quot; for negation and &quot;-&quot; for range.
                 Not yet supported: internationalization; &quot;\&quot; inside brackets.&lt;P&gt;
                 Wildcard matching routine by Karl Heuer.  Public Domain.&lt;P&gt;                
            </comment>
            <implements interface="QueryExp"/>
            <javadoc line="30">
                This class is used by the query-building mechanism to represent binary
                  relations.                
                <serial>
                    include                    
                </serial>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="40"/>
            <declaration name="exp" type="AttributeValueExp" line="42"/>
            <javadoc line="42">
                @serial The attribute value to be matched                
            </javadoc>
            <declaration name="pattern" type="String" line="47"/>
            <javadoc line="47">
                @serial The pattern to be matched                
            </javadoc>
            <javadoc line="53">
                Basic Constructor.                
            </javadoc>
            <method name="MatchQueryExp" type="constructor" line="56"/>
            <javadoc line="59">
                Creates a new MatchQueryExp where the specified AttributeValueExp matches
                  the specified pattern StringValueExp.                
            </javadoc>
            <method name="MatchQueryExp" type="constructor" line="63">
                <params>
                    <param name="a" type="AttributeValueExp"/>
                    <param name="s" type="StringValueExp"/>
                </params>
            </method>
            <javadoc line="69">
                Returns the attribute of the query.                
            </javadoc>
            <method name="getAttribute" type="AttributeValueExp" line="72"/>
            <javadoc line="76">
                Returns the pattern of the query.                
            </javadoc>
            <method name="getPattern" type="String" line="79"/>
            <javadoc line="83">
                Applies the MatchQueryExp on a MBean.                
                <param>
                    name The name of the MBean on which the MatchQueryExp will be applied.                    
                </param>
                <return>
                    True if the query was successfully applied to the MBean, false otherwise.                    
                </return>
                <exception>
                    BadStringOperationException                    
                </exception>
                <exception>
                    BadBinaryOpValueExpException                    
                </exception>
                <exception>
                    BadAttributeValueExpException                    
                </exception>
                <exception>
                    InvalidApplicationException                    
                </exception>
            </javadoc>
            <method name="apply" type="boolean" line="99">
                <params>
                    <param name="name" type="ObjectName"/>
                </params>
                <declaration name="val" type="ValueExp" line="101"/>
                <scope line="102"/>
            </method>
            <javadoc line="108">
                Returns the string representing the object                
            </javadoc>
            <method name="toString" type="String" line="111"/>
            <method name="wildmatch" type="boolean" line="122">
                <params>
                    <param name="s" type="String"/>
                    <param name="p" type="String"/>
                </params>
                <comment line="129">
                    While still string                    
                </comment>
                <comment line="134">
                    Start of choice                    
                </comment>
                <comment line="163">
                    Wildcard                    
                </comment>
                <declaration name="c" type="char" line="123"/>
                <declaration name="si" type="int" line="124"/>
                <declaration name="slen" type="int" line="125"/>
                <declaration name="plen" type="int" line="126"/>
                <scope line="128">
                    <scope line="130"/>
                    <scope line="133">
                        <declaration name="wantit" type="boolean" line="136"/>
                        <declaration name="seenit" type="boolean" line="137"/>
                        <scope line="138"/>
                        <scope line="142">
                            <scope line="145">
                                <scope line="147"/>
                            </scope>
                            <scope line="151">
                                <scope line="152"/>
                            </scope>
                        </scope>
                        <scope line="157"/>
                    </scope>
                    <scope line="162">
                        <scope line="165"/>
                    </scope>
                    <scope line="170"/>
                    <scope line="174">
                        <scope line="175"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>