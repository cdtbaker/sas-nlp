<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.management">
        <import package="java.util.List"/>
        <import package="java.util.Vector"/>
        <class name="NotificationFilterSupport" line="32">
            <comment line="61">
                                
            </comment>
            <implements interface="NotificationFilter"/>
            <javadoc line="32">
                Provides an implementation of the {@link javax.management.NotificationFilter} interface.
                  The filtering is performed on the notification type attribute.
                  &lt;P&gt;
                  Manages a list of enabled notification types.
                  A method allows users to enable/disable as many notification types as required.
                  &lt;P&gt;
                  Then, before sending a notification to a listener registered with a filter,
                  the notification broadcaster compares this notification type with all notification types
                  enabled by the filter. The notification will be sent to the listener
                  only if its filter enables this notification type.
                  &lt;P&gt;
                  Example:
                  &lt;BLOCKQUOTE&gt;
                  &lt;PRE&gt;
                  NotificationFilterSupport myFilter = new NotificationFilterSupport();
                  myFilter.enableType(&quot;my_example.my_type&quot;);
                  myBroadcaster.addListener(myListener, myFilter, null);
                  &lt;/PRE&gt;
                  &lt;/BLOCKQUOTE&gt;
                  The listener &lt;CODE&gt;myListener&lt;/CODE&gt; will only receive notifications the type of which equals/starts with &quot;my_example.my_type&quot;.                
                <see>
                    javax.management.NotificationBroadcaster#addNotificationListener                    
                </see>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="61"/>
            <declaration name="enabledTypes" type="List&lt;String&gt;" line="63"/>
            <javadoc line="63">
                @serial {@link Vector} that contains the enabled notification types.
                  The default value is an empty vector.                
            </javadoc>
            <javadoc line="70">
                Invoked before sending the specified notification to the listener.
                  &lt;BR&gt;This filter compares the type of the specified notification with each enabled type.
                  If the notification type matches one of the enabled types,
                  the notification should be sent to the listener and this method returns &lt;CODE&gt;true&lt;/CODE&gt;.                
                <param>
                    notification The notification to be sent.                    
                </param>
                <return>
                    <CODE>true</CODE> if the notification should be sent to the listener, <CODE>false</CODE> otherwise.                    
                </return>
            </javadoc>
            <method name="isNotificationEnabled" type="boolean" line="79">
                <params>
                    <param name="notification" type="Notification"/>
                </params>
                <comment line="94">
                    Should never occurs...                    
                </comment>
                <declaration name="type" type="String" line="81"/>
                <scope line="83"/>
                <scope line="86">
                    <scope line="87">
                        <scope line="88"/>
                    </scope>
                </scope>
                <scope line="92"/>
            </method>
            <javadoc line="99">
                Enables all the notifications the type of which starts with the specified prefix
                  to be sent to the listener.
                  &lt;BR&gt;If the specified prefix is already in the list of enabled notification types,
                  this method has no effect.
                  &lt;P&gt;
                  Example:
                  &lt;BLOCKQUOTE&gt;
                  &lt;PRE&gt;
                  // Enables all notifications the type of which starts with &quot;my_example&quot; to be sent.
                  myFilter.enableType(&quot;my_example&quot;);
                  // Enables all notifications the type of which is &quot;my_example.my_type&quot; to be sent.
                  myFilter.enableType(&quot;my_example.my_type&quot;);
                  &lt;/PRE&gt;
                  &lt;/BLOCKQUOTE&gt;
                  Note that:
                  &lt;BLOCKQUOTE&gt;&lt;CODE&gt;
                  myFilter.enableType(&quot;my_example.&quot;);
                  &lt;/CODE&gt;&lt;/BLOCKQUOTE&gt;
                  will no match any notification type.                
                <param>
                    prefix The prefix.                    
                </param>
                <exception>
                    java.lang.IllegalArgumentException The prefix parameter is null.                    
                </exception>
            </javadoc>
            <method name="enableType" type="void" line="125">
                <params>
                    <param name="prefix" type="String"/>
                </params>
                <scope line="127"/>
                <scope line="130"/>
            </method>
            <javadoc line="135">
                Removes the given prefix from the prefix list.
                  &lt;BR&gt;If the specified prefix is not in the list of enabled notification types,
                  this method has no effect.                
                <param>
                    prefix The prefix.                    
                </param>
            </javadoc>
            <method name="disableType" type="void" line="142">
                <params>
                    <param name="prefix" type="String"/>
                </params>
            </method>
            <javadoc line="146">
                Disables all notification types.                
            </javadoc>
            <method name="disableAllTypes" type="void" line="149"/>
            <javadoc line="154">
                Gets all the enabled notification types for this filter.                
                <return>
                    The list containing all the enabled notification types.                    
                </return>
            </javadoc>
            <method name="getEnabledTypes" type="Vector<String>" line="159"/>
        </class>
    </source>