<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.net.ssl">
        <import package="java.security.Principal"/>
        <class name="X509ExtendedKeyManager" line="30">
            <implements interface="X509KeyManager"/>
            <javadoc line="30">
                Abstract class that provides for extension of the X509KeyManager
                  interface.
                  &lt;P&gt;
                  Methods in this class should be overriden to provide actual
                  implementations.                
                <since>
                    1.5                    
                </since>
                <author>
                    Brad R. Wetmore                    
                </author>
            </javadoc>
            <javadoc line="42">
                Constructor used by subclasses only.                
            </javadoc>
            <method name="X509ExtendedKeyManager" type="constructor" line="45"/>
            <javadoc line="48">
                Choose an alias to authenticate the client side of an
                  &lt;code&gt;SSLEngine&lt;/code&gt; connection given the public key type
                  and the list of certificate issuer authorities recognized by
                  the peer (if any).
                  &lt;P&gt;
                  The default implementation returns null.                
                <param>
                    keyType the key algorithm type name(s), ordered
                      with the most-preferred key type first.                    
                </param>
                <param>
                    issuers the list of acceptable CA issuer subject names
                      or null if it does not matter which issuers are used.                    
                </param>
                <param>
                    engine the &lt;code&gt;SSLEngine&lt;/code&gt; to be used for this
                      connection.  This parameter can be null, which indicates
                      that implementations of this interface are free to
                      select an alias applicable to any engine.                    
                </param>
                <return>
                    the alias name for the desired key, or null if there
                      are no matches.                    
                </return>
            </javadoc>
            <method name="chooseEngineClientAlias" type="String" line="68">
                <params>
                    <param name="keyType" type="String[]"/>
                    <param name="issuers" type="Principal[]"/>
                    <param name="engine" type="SSLEngine"/>
                </params>
            </method>
            <javadoc line="72">
                Choose an alias to authenticate the server side of an
                  &lt;code&gt;SSLEngine&lt;/code&gt; connection given the public key type
                  and the list of certificate issuer authorities recognized by
                  the peer (if any).
                  &lt;P&gt;
                  The default implementation returns null.                
                <param>
                    keyType the key algorithm type name.                    
                </param>
                <param>
                    issuers the list of acceptable CA issuer subject names
                      or null if it does not matter which issuers are used.                    
                </param>
                <param>
                    engine the &lt;code&gt;SSLEngine&lt;/code&gt; to be used for this
                      connection.  This parameter can be null, which indicates
                      that implementations of this interface are free to
                      select an alias applicable to any engine.                    
                </param>
                <return>
                    the alias name for the desired key, or null if there
                      are no matches.                    
                </return>
            </javadoc>
            <method name="chooseEngineServerAlias" type="String" line="91">
                <params>
                    <param name="keyType" type="String"/>
                    <param name="issuers" type="Principal[]"/>
                    <param name="engine" type="SSLEngine"/>
                </params>
            </method>
        </class>
    </source>