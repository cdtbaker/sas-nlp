<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.net.ssl">
        <class name="ExtendedSSLSession" line="28">
            <implements interface="SSLSession"/>
            <javadoc line="28">
                Extends the &lt;code&gt;SSLSession&lt;/code&gt; interface to support additional
                  session attributes.                
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="getLocalSupportedSignatureAlgorithms" type="String[]" line="35"/>
            <javadoc line="35">
                Obtains an array of supported signature algorithms that the local side
                  is willing to use.
                  &lt;p&gt;
                  Note: this method is used to indicate to the peer which signature
                  algorithms may be used for digital signatures in TLS 1.2. It is
                  not meaningful for TLS versions prior to 1.2.
                  &lt;p&gt;
                  The signature algorithm name must be a standard Java Security
                  name (such as &quot;SHA1withRSA&quot;, &quot;SHA256withECDSA&quot;, and so on).
                  See Appendix A in the &lt;a href=
                  &quot;../../../technotes/guides/security/crypto/CryptoSpec.html#AppA&quot;&gt;
                  Java Cryptography Architecture API Specification &amp;amp; Reference &lt;/a&gt;
                  for information about standard algorithm names.
                  &lt;p&gt;
                  Note: the local supported signature algorithms should conform to
                  the algorithm constraints specified by{@link SSLParameters#getAlgorithmConstraints getAlgorithmConstraints()}method in &lt;code&gt;SSLParameters&lt;/code&gt;.                
                <return>
                    An array of supported signature algorithms, in descending
                      order of preference.  The return value is an empty array if
                      no signature algorithm is supported.                    
                </return>
                <see>
                    SSLParameters#getAlgorithmConstraints                    
                </see>
            </javadoc>
            <method name="getPeerSupportedSignatureAlgorithms" type="String[]" line="63"/>
            <javadoc line="63">
                Obtains an array of supported signature algorithms that the peer is
                  able to use.
                  &lt;p&gt;
                  Note: this method is used to indicate to the local side which signature
                  algorithms may be used for digital signatures in TLS 1.2. It is
                  not meaningful for TLS versions prior to 1.2.
                  &lt;p&gt;
                  The signature algorithm name must be a standard Java Security
                  name (such as &quot;SHA1withRSA&quot;, &quot;SHA256withECDSA&quot;, and so on).
                  See Appendix A in the &lt;a href=
                  &quot;../../../technotes/guides/security/crypto/CryptoSpec.html#AppA&quot;&gt;
                  Java Cryptography Architecture API Specification &amp;amp; Reference &lt;/a&gt;
                  for information about standard algorithm names.                
                <return>
                    An array of supported signature algorithms, in descending
                      order of preference.  The return value is an empty array if
                      the peer has not sent the supported signature algorithms.                    
                </return>
                <see>
                    X509KeyManager                    
                </see>
                <see>
                    X509ExtendedKeyManager                    
                </see>
            </javadoc>
        </class>
    </source>