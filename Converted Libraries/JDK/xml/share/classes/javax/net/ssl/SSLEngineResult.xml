<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.net.ssl">
        <class name="SSLEngineResult" line="28">
            <javadoc line="28">
                An encapsulation of the result state produced by
                  &lt;code&gt;SSLEngine&lt;/code&gt; I/O calls.
                  &lt;p&gt; A &lt;code&gt;SSLEngine&lt;/code&gt; provides a means for establishing
                  secure communication sessions between two peers.  &lt;code&gt;SSLEngine&lt;/code&gt;
                  operations typically consume bytes from an input buffer and produce
                  bytes in an output buffer.  This class provides operational result
                  values describing the state of the &lt;code&gt;SSLEngine&lt;/code&gt;, including
                  indications of what operations are needed to finish an
                  ongoing handshake.  Lastly, it reports the number of bytes consumed
                  and produced as a result of this operation.                
                <see>
                    SSLEngine                    
                </see>
                <see>
                    SSLEngine#wrap(ByteBuffer,ByteBuffer)                    
                </see>
                <see>
                    SSLEngine#unwrap(ByteBuffer,ByteBuffer)                    
                </see>
                <author>
                    Brad R. Wetmore                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <javadoc line="51">
                An &lt;code&gt;SSLEngineResult&lt;/code&gt; enum describing the overall result
                  of the &lt;code&gt;SSLEngine&lt;/code&gt; operation.
                  The &lt;code&gt;Status&lt;/code&gt; value does not reflect the
                  state of a &lt;code&gt;SSLEngine&lt;/code&gt; handshake currently
                  in progress.  The &lt;code&gt;SSLEngineResult&apos;s HandshakeStatus&lt;/code&gt;
                  should be consulted for that information.                
                <author>
                    Brad R. Wetmore                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <javadoc line="65">
                The &lt;code&gt;SSLEngine&lt;/code&gt; was not able to unwrap the
                  incoming data because there were not enough source bytes
                  available to make a complete packet.
                  &lt;P&gt;
                  Repeat the call once more bytes are available.                
            </javadoc>
            <javadoc line="75">
                The &lt;code&gt;SSLEngine&lt;/code&gt; was not able to process the
                  operation because there are not enough bytes available in the
                  destination buffer to hold the result.
                  &lt;P&gt;
                  Repeat the call once more bytes are available.                
                <see>
                    SSLSession#getPacketBufferSize()                    
                </see>
                <see>
                    SSLSession#getApplicationBufferSize()                    
                </see>
            </javadoc>
            <javadoc line="87">
                The &lt;code&gt;SSLEngine&lt;/code&gt; completed the operation, and
                  is available to process similar calls.                
            </javadoc>
            <javadoc line="93">
                The operation just closed this side of the
                  &lt;code&gt;SSLEngine&lt;/code&gt;, or the operation
                  could not be completed because it was already closed.                
            </javadoc>
            <javadoc line="101">
                An &lt;code&gt;SSLEngineResult&lt;/code&gt; enum describing the current
                  handshaking state of this &lt;code&gt;SSLEngine&lt;/code&gt;.                
                <author>
                    Brad R. Wetmore                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <javadoc line="110">
                The &lt;code&gt;SSLEngine&lt;/code&gt; is not currently handshaking.                
            </javadoc>
            <javadoc line="115">
                The &lt;code&gt;SSLEngine&lt;/code&gt; has just finished handshaking.
                  &lt;P&gt;
                  This value is only generated by a call to
                  &lt;code&gt;SSLEngine.wrap()/unwrap()&lt;/code&gt; when that call
                  finishes a handshake.  It is never generated by
                  &lt;code&gt;SSLEngine.getHandshakeStatus()&lt;/code&gt;.                
                <see>
                    SSLEngine#wrap(ByteBuffer,ByteBuffer)                    
                </see>
                <see>
                    SSLEngine#unwrap(ByteBuffer,ByteBuffer)                    
                </see>
                <see>
                    SSLEngine#getHandshakeStatus()                    
                </see>
            </javadoc>
            <javadoc line="129">
                The &lt;code&gt;SSLEngine&lt;/code&gt; needs the results of one (or more)
                  delegated tasks before handshaking can continue.                
                <see>
                    SSLEngine#getDelegatedTask()                    
                </see>
            </javadoc>
            <javadoc line="137">
                The &lt;code&gt;SSLEngine&lt;/code&gt; must send data to the remote side
                  before handshaking can continue, so &lt;code&gt;SSLEngine.wrap()&lt;/code&gt;
                  should be called.                
                <see>
                    SSLEngine#wrap(ByteBuffer,ByteBuffer)                    
                </see>
            </javadoc>
            <javadoc line="146">
                The &lt;code&gt;SSLEngine&lt;/code&gt; needs to receive data from the
                  remote side before handshaking can continue.                
            </javadoc>
            <declaration name="status" type="Status" line="154"/>
            <declaration name="handshakeStatus" type="HandshakeStatus" line="155"/>
            <declaration name="bytesConsumed" type="int" line="156"/>
            <declaration name="bytesProduced" type="int" line="157"/>
            <javadoc line="159">
                Initializes a new instance of this class.                
                <param>
                    statusthe return value of the operation.                    
                </param>
                <param>
                    handshakeStatusthe current handshaking status.                    
                </param>
                <param>
                    bytesConsumedthe number of bytes consumed from the source ByteBuffer                    
                </param>
                <param>
                    bytesProducedthe number of bytes placed into the destination ByteBuffer                    
                </param>
                <throws>
                    IllegalArgumentExceptionif the &lt;code&gt;status&lt;/code&gt; or &lt;code&gt;handshakeStatus&lt;/code&gt;
                      arguments are null, or if &lt;&lt;code&gt;bytesConsumed&lt;/code&gt; or
                      &lt;code&gt;bytesProduced&lt;/code&gt; is negative.                    
                </throws>
            </javadoc>
            <method name="SSLEngineResult" type="constructor" line="180">
                <params>
                    <param name="status" type="Status"/>
                    <param name="handshakeStatus" type="HandshakeStatus"/>
                    <param name="bytesConsumed" type="int"/>
                    <param name="bytesProduced" type="int"/>
                </params>
                <scope line="183"/>
            </method>
            <javadoc line="193">
                Gets the return value of this &lt;code&gt;SSLEngine&lt;/code&gt; operation.                
                <return>
                    the return value                    
                </return>
            </javadoc>
            <method name="getStatus" type="Status" line="198"/>
            <javadoc line="202">
                Gets the handshake status of this &lt;code&gt;SSLEngine&lt;/code&gt;
                  operation.                
                <return>
                    the handshake status                    
                </return>
            </javadoc>
            <method name="getHandshakeStatus" type="HandshakeStatus" line="208"/>
            <javadoc line="212">
                Returns the number of bytes consumed from the input buffer.                
                <return>
                    the number of bytes consumed.                    
                </return>
            </javadoc>
            <method name="bytesConsumed" type="int" line="217"/>
            <javadoc line="221">
                Returns the number of bytes written to the output buffer.                
                <return>
                    the number of bytes produced                    
                </return>
            </javadoc>
            <method name="bytesProduced" type="int" line="226"/>
            <javadoc line="230">
                Returns a String representation of this object.                
            </javadoc>
            <method name="toString" type="String" line="233"/>
        </class>
    </source>