<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.net.ssl">
        <class name="SSLEngineResult" line="2">
            <javadoc line="2">
                An encapsulation of the result state produced by
                  &lt;code&gt;SSLEngine&lt;/code&gt; I/O calls.
                  &lt;p&gt; A &lt;code&gt;SSLEngine&lt;/code&gt; provides a means for establishing
                  secure communication sessions between two peers.  &lt;code&gt;SSLEngine&lt;/code&gt;
                  operations typically consume bytes from an input buffer and produce
                  bytes in an output buffer.  This class provides operational result
                  values describing the state of the &lt;code&gt;SSLEngine&lt;/code&gt;, including
                  indications of what operations are needed to finish an
                  ongoing handshake.  Lastly, it reports the number of bytes consumed
                  and produced as a result of this operation.                
                <see>
                    SSLEngine                    
                </see>
                <see>
                    SSLEngine#wrap(ByteBuffer,ByteBuffer)                    
                </see>
                <see>
                    SSLEngine#unwrap(ByteBuffer,ByteBuffer)                    
                </see>
                <author>
                    Brad R. Wetmore                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="Status" type="enum" line="20"/>
            <javadoc line="20">
                An &lt;code&gt;SSLEngineResult&lt;/code&gt; enum describing the overall result
                  of the &lt;code&gt;SSLEngine&lt;/code&gt; operation.
                  The &lt;code&gt;Status&lt;/code&gt; value does not reflect the
                  state of a &lt;code&gt;SSLEngine&lt;/code&gt; handshake currently
                  in progress.  The &lt;code&gt;SSLEngineResult&apos;s HandshakeStatus&lt;/code&gt;
                  should be consulted for that information.                
                <author>
                    Brad R. Wetmore                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <scope line="30"/>
            <declaration name="HandshakeStatus" type="enum" line="56"/>
            <javadoc line="56">
                An &lt;code&gt;SSLEngineResult&lt;/code&gt; enum describing the current
                  handshaking state of this &lt;code&gt;SSLEngine&lt;/code&gt;.                
                <author>
                    Brad R. Wetmore                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <scope line="62"/>
            <declaration name="status" type="Status" line="92"/>
            <javadoc line="87">
                The &lt;code&gt;SSLEngine&lt;/code&gt; needs to receive data from the
                  remote side before handshaking can continue.                
            </javadoc>
            <declaration name="handshakeStatus" type="HandshakeStatus" line="93"/>
            <declaration name="bytesConsumed" type="int" line="94"/>
            <declaration name="bytesProduced" type="int" line="95"/>
            <javadoc line="96">
                Initializes a new instance of this class.                
                <param>
                    statusthe return value of the operation.                    
                </param>
                <param>
                    handshakeStatusthe current handshaking status.                    
                </param>
                <param>
                    bytesConsumedthe number of bytes consumed from the source ByteBuffer                    
                </param>
                <param>
                    bytesProducedthe number of bytes placed into the destination ByteBuffer                    
                </param>
                <throws>
                    IllegalArgumentExceptionif the <code>status</code> or <code>handshakeStatus</code>
                      arguments are null, or if <<code>bytesConsumed</code> or
                      <code>bytesProduced</code> is negative.                    
                </throws>
            </javadoc>
            <method name="SSLEngineResult" type="constructor" line="106">
                <params>
                    <param name="status" type="Status"/>
                    <param name="handshakeStatus" type="HandshakeStatus"/>
                    <param name="bytesConsumed" type="int"/>
                    <param name="bytesProduced" type="int"/>
                </params>
                <scope line="107"/>
            </method>
            <javadoc line="115">
                Gets the return value of this &lt;code&gt;SSLEngine&lt;/code&gt; operation.                
                <return>
                    the return value                    
                </return>
            </javadoc>
            <method name="getStatus" type="Status" line="119"/>
            <javadoc line="122">
                Gets the handshake status of this &lt;code&gt;SSLEngine&lt;/code&gt;
                  operation.                
                <return>
                    the handshake status                    
                </return>
            </javadoc>
            <method name="getHandshakeStatus" type="HandshakeStatus" line="127"/>
            <javadoc line="130">
                Returns the number of bytes consumed from the input buffer.                
                <return>
                    the number of bytes consumed.                    
                </return>
            </javadoc>
            <method name="bytesConsumed" type="int" line="134"/>
            <javadoc line="137">
                Returns the number of bytes written to the output buffer.                
                <return>
                    the number of bytes produced                    
                </return>
            </javadoc>
            <method name="bytesProduced" type="int" line="141"/>
            <javadoc line="144">
                Returns a String representation of this object.                
            </javadoc>
            <method name="toString" type="String" line="147"/>
        </class>
    </source>