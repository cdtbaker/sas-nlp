<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.net.ssl">
        <import package="java.util.Enumeration"/>
        <interface name="SSLSessionContext">
            <javadoc line="32">
                A &lt;code&gt;SSLSessionContext&lt;/code&gt; represents a set of
                  &lt;code&gt;SSLSession&lt;/code&gt;s associated with a single entity. For example,
                  it could be associated with a server or client who participates in many
                  sessions concurrently.
                  &lt;p&gt;
                  Not all environments will contain session contexts.
                  &lt;p&gt;
                  There are &lt;code&gt;SSLSessionContext&lt;/code&gt; parameters that affect how
                  sessions are stored:
                  &lt;UL&gt;
                  &lt;LI&gt;Sessions can be set to expire after a specified
                  time limit.
                  &lt;LI&gt;The number of sessions that can be stored in context
                  can be limited.
                  &lt;/UL&gt;
                  A session can be retrieved based on its session id, and all session id&apos;s
                  in a &lt;code&gt;SSLSessionContext&lt;/code&gt; can be listed.                
                <see>
                    SSLSession                    
                </see>
                <since>
                    1.4                    
                </since>
                <author>
                    Nathan Abramson                    
                </author>
                <author>
                    David Brownell                    
                </author>
            </javadoc>
            <method name="getSession" type="SSLSession" line="59"/>
            <javadoc line="59">
                Returns the &lt;code&gt;SSLSession&lt;/code&gt; bound to the specified session id.                
                <param>
                    sessionId the Session identifier                    
                </param>
                <return>
                    the &lt;code&gt;SSLSession&lt;/code&gt; or null if
                      the specified session id does not refer to a valid SSLSession.                    
                </return>
                <throws>
                    NullPointerException if &lt;code&gt;sessionId&lt;/code&gt; is null.                    
                </throws>
            </javadoc>
            <method name="getIds" type="Enumeration<byte[]>" line="70"/>
            <javadoc line="70">
                Returns an Enumeration of all session id&apos;s grouped under this
                  &lt;code&gt;SSLSessionContext&lt;/code&gt;.                
                <return>
                    an enumeration of all the Session id&apos;s                    
                </return>
            </javadoc>
            <method name="setSessionTimeout" type="void" line="78"/>
            <javadoc line="78">
                Sets the timeout limit for &lt;code&gt;SSLSession&lt;/code&gt; objects grouped
                  under this &lt;code&gt;SSLSessionContext&lt;/code&gt;.
                  &lt;p&gt;
                  If the timeout limit is set to &apos;t&apos; seconds, a session exceeds the
                  timeout limit &apos;t&apos; seconds after its creation time.
                  When the timeout limit is exceeded for a session, the
                  &lt;code&gt;SSLSession&lt;/code&gt; object is invalidated and future connections
                  cannot resume or rejoin the session.
                  A check for sessions exceeding the timeout is made immediately whenever
                  the timeout limit is changed for this &lt;code&gt;SSLSessionContext&lt;/code&gt;.                
                <param>
                    seconds the new session timeout limit in seconds; zero means
                      there is no limit.                    
                </param>
                <exception>
                    IllegalArgumentException if the timeout specified is &lt; 0.                    
                </exception>
                <see>
                    #getSessionTimeout                    
                </see>
            </javadoc>
            <method name="getSessionTimeout" type="int" line="99"/>
            <javadoc line="99">
                Returns the timeout limit of &lt;code&gt;SSLSession&lt;/code&gt; objects grouped
                  under this &lt;code&gt;SSLSessionContext&lt;/code&gt;.
                  &lt;p&gt;
                  If the timeout limit is set to &apos;t&apos; seconds, a session exceeds the
                  timeout limit &apos;t&apos; seconds after its creation time.
                  When the timeout limit is exceeded for a session, the
                  &lt;code&gt;SSLSession&lt;/code&gt; object is invalidated and future connections
                  cannot resume or rejoin the session.
                  A check for sessions exceeding the timeout limit is made immediately
                  whenever the timeout limit is changed for this
                  &lt;code&gt;SSLSessionContext&lt;/code&gt;.                
                <return>
                    the session timeout limit in seconds; zero means there is no
                      limit.                    
                </return>
                <see>
                    #setSessionTimeout                    
                </see>
            </javadoc>
            <method name="setSessionCacheSize" type="void" line="118"/>
            <javadoc line="118">
                Sets the size of the cache used for storing
                  &lt;code&gt;SSLSession&lt;/code&gt; objects grouped under this
                  &lt;code&gt;SSLSessionContext&lt;/code&gt;.                
                <param>
                    size the new session cache size limit; zero means there is no
                      limit.                    
                </param>
                <exception>
                    IllegalArgumentException if the specified size is &lt; 0.                    
                </exception>
                <see>
                    #getSessionCacheSize                    
                </see>
            </javadoc>
            <method name="getSessionCacheSize" type="int" line="131"/>
            <javadoc line="131">
                Returns the size of the cache used for storing
                  &lt;code&gt;SSLSession&lt;/code&gt; objects grouped under this
                  &lt;code&gt;SSLSessionContext&lt;/code&gt;.                
                <return>
                    size of the session cache; zero means there is no size limit.                    
                </return>
                <see>
                    #setSessionCacheSize                    
                </see>
            </javadoc>
        </interface>
    </source>