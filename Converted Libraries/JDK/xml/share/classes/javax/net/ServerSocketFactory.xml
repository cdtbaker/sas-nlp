<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.net">
        <import package="java.io.IOException"/>
        <import package="java.net.InetAddress"/>
        <import package="java.net.ServerSocket"/>
        <import package="java.net.SocketException"/>
        <class name="ServerSocketFactory" line="6">
            <javadoc line="6">
                This class creates server sockets.  It may be subclassed by other
                  factories, which create particular types of server sockets.  This
                  provides a general framework for the addition of public socket-level
                  functionality.  It is the server side analogue of a socket factory,
                  and similarly provides a way to capture a variety of policies related
                  to the sockets being constructed.
                  &lt;P&gt; Like socket factories, server Socket factory instances have
                  methods used to create sockets. There is also an environment
                  specific default server socket factory; frameworks will often use
                  their own customized factory.                
                <since>
                    1.4                    
                </since>
                <see>
                    SocketFactory                    
                </see>
                <author>
                    David Brownell                    
                </author>
            </javadoc>
            <declaration name="theFactory" type="ServerSocketFactory" line="22"/>
            <javadoc line="23">
                Creates a server socket factory.                
            </javadoc>
            <method name="ServerSocketFactory" type="constructor" line="26"/>
            <javadoc line="28">
                Returns a copy of the environment&apos;s default socket factory.                
                <return>
                    the &lt;code&gt;ServerSocketFactory&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getDefault" type="ServerSocketFactory" line="32">
                <scope line="33">
                    <scope line="34"/>
                </scope>
            </method>
            <javadoc line="40">
                Returns an unbound server socket.  The socket is configured with
                  the socket options (such as accept timeout) given to this factory.                
                <return>
                    the unbound socket                    
                </return>
                <throws>
                    IOException if the socket cannot be created                    
                </throws>
                <see>
                    java.net.ServerSocket#bind(java.net.SocketAddress)                    
                </see>
                <see>
                    java.net.ServerSocket#bind(java.net.SocketAddress,int)                    
                </see>
                <see>
                    java.net.ServerSocket#ServerSocket()                    
                </see>
            </javadoc>
            <method name="createServerSocket" type="ServerSocket" line="49"/>
            <method name="createServerSocket" type="ServerSocket" line="52"/>
            <javadoc line="52">
                Returns a server socket bound to the specified port.
                  The socket is configured with the socket options
                  (such as accept timeout) given to this factory.
                  &lt;P&gt;
                  If there is a security manager, its &lt;code&gt;checkListen&lt;/code&gt;
                  method is called with the &lt;code&gt;port&lt;/code&gt; argument as its
                  argument to ensure the operation is allowed. This could result
                  in a SecurityException.                
                <param>
                    port the port to listen to                    
                </param>
                <return>
                    the &lt;code&gt;ServerSocket&lt;/code&gt;                    
                </return>
                <throws>
                    IOException for networking errors                    
                </throws>
                <throws>
                    SecurityException if a security manager exists and its
                      &lt;code&gt;checkListen&lt;/code&gt; method doesn&apos;t allow the operation.                    
                </throws>
                <throws>
                    IllegalArgumentException if the port parameter is outside the
                      specified range of valid port values, which is between 0 and
                      65535, inclusive.                    
                </throws>
                <see>
                    SecurityManager#checkListen                    
                </see>
                <see>
                    java.net.ServerSocket#ServerSocket(int)                    
                </see>
            </javadoc>
            <method name="createServerSocket" type="ServerSocket" line="73"/>
            <javadoc line="73">
                Returns a server socket bound to the specified port, and uses the
                  specified connection backlog.  The socket is configured with
                  the socket options (such as accept timeout) given to this factory.
                  &lt;P&gt;
                  The &lt;code&gt;backlog&lt;/code&gt; argument must be a positive
                  value greater than 0. If the value passed if equal or less
                  than 0, then the default value will be assumed.
                  &lt;P&gt;
                  If there is a security manager, its &lt;code&gt;checkListen&lt;/code&gt;
                  method is called with the &lt;code&gt;port&lt;/code&gt; argument as its
                  argument to ensure the operation is allowed. This could result
                  in a SecurityException.                
                <param>
                    port the port to listen to                    
                </param>
                <param>
                    backlog how many connections are queued                    
                </param>
                <return>
                    the &lt;code&gt;ServerSocket&lt;/code&gt;                    
                </return>
                <throws>
                    IOException for networking errors                    
                </throws>
                <throws>
                    SecurityException if a security manager exists and its
                      &lt;code&gt;checkListen&lt;/code&gt; method doesn&apos;t allow the operation.                    
                </throws>
                <throws>
                    IllegalArgumentException if the port parameter is outside the
                      specified range of valid port values, which is between 0 and
                      65535, inclusive.                    
                </throws>
                <see>
                    SecurityManager#checkListen                    
                </see>
                <see>
                    java.net.ServerSocket#ServerSocket(int,int)                    
                </see>
            </javadoc>
            <method name="createServerSocket" type="ServerSocket" line="99"/>
            <javadoc line="99">
                Returns a server socket bound to the specified port,
                  with a specified listen backlog and local IP.
                  &lt;P&gt;
                  The &lt;code&gt;ifAddress&lt;/code&gt; argument can be used on a multi-homed
                  host for a &lt;code&gt;ServerSocket&lt;/code&gt; that will only accept connect
                  requests to one of its addresses. If &lt;code&gt;ifAddress&lt;/code&gt; is null,
                  it will accept connections on all local addresses. The socket is
                  configured with the socket options (such as accept timeout) given
                  to this factory.
                  &lt;P&gt;
                  The &lt;code&gt;backlog&lt;/code&gt; argument must be a positive
                  value greater than 0. If the value passed if equal or less
                  than 0, then the default value will be assumed.
                  &lt;P&gt;
                  If there is a security manager, its &lt;code&gt;checkListen&lt;/code&gt;
                  method is called with the &lt;code&gt;port&lt;/code&gt; argument as its
                  argument to ensure the operation is allowed. This could result
                  in a SecurityException.                
                <param>
                    port the port to listen to                    
                </param>
                <param>
                    backlog how many connections are queued                    
                </param>
                <param>
                    ifAddress the network interface address to use                    
                </param>
                <return>
                    the &lt;code&gt;ServerSocket&lt;/code&gt;                    
                </return>
                <throws>
                    IOException for networking errors                    
                </throws>
                <throws>
                    SecurityException if a security manager exists and its
                      &lt;code&gt;checkListen&lt;/code&gt; method doesn&apos;t allow the operation.                    
                </throws>
                <throws>
                    IllegalArgumentException if the port parameter is outside the
                      specified range of valid port values, which is between 0 and
                      65535, inclusive.                    
                </throws>
                <see>
                    SecurityManager#checkListen                    
                </see>
                <see>
                    java.net.ServerSocket#ServerSocket(int,int,java.net.InetAddress)                    
                </see>
            </javadoc>
        </class>
        <class name="DefaultServerSocketFactory" line="133">
            <extends class="ServerSocketFactory"/>
            <method name="DefaultServerSocketFactory" type="constructor" line="134"/>
            <method name="createServerSocket" type="ServerSocket" line="136"/>
            <method name="createServerSocket" type="ServerSocket" line="139">
                <params>
                    <param name="port" type="int"/>
                </params>
            </method>
            <method name="createServerSocket" type="ServerSocket" line="142">
                <params>
                    <param name="port" type="int"/>
                    <param name="backlog" type="int"/>
                </params>
            </method>
            <method name="createServerSocket" type="ServerSocket" line="145">
                <params>
                    <param name="port" type="int"/>
                    <param name="backlog" type="int"/>
                    <param name="ifAddress" type="InetAddress"/>
                </params>
            </method>
        </class>
    </source>