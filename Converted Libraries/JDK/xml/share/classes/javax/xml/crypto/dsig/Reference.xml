<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.xml.crypto.dsig">
        <import package="javax.xml.crypto.Data"/>
        <import package="javax.xml.crypto.URIReference"/>
        <import package="javax.xml.crypto.XMLStructure"/>
        <import package="java.io.InputStream"/>
        <import package="java.util.List"/>
        <interface name="Reference">
            <implements interface="URIReference"/>
            <implements interface="XMLStructure"/>
            <javadoc line="7">
                A representation of the &lt;code&gt;Reference&lt;/code&gt; element as defined in the
                  &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;
                  W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.
                  The XML schema is defined as:
                  &lt;code&gt;&lt;pre&gt;
                  &amp;lt;element name=&quot;Reference&quot; type=&quot;ds:ReferenceType&quot;/&amp;gt;
                  &amp;lt;complexType name=&quot;ReferenceType&quot;&amp;gt;
                  &amp;lt;sequence&amp;gt;
                  &amp;lt;element ref=&quot;ds:Transforms&quot; minOccurs=&quot;0&quot;/&amp;gt;
                  &amp;lt;element ref=&quot;ds:DigestMethod&quot;/&amp;gt;
                  &amp;lt;element ref=&quot;ds:DigestValue&quot;/&amp;gt;
                  &amp;lt;/sequence&amp;gt;
                  &amp;lt;attribute name=&quot;Id&quot; type=&quot;ID&quot; use=&quot;optional&quot;/&amp;gt;
                  &amp;lt;attribute name=&quot;URI&quot; type=&quot;anyURI&quot; use=&quot;optional&quot;/&amp;gt;
                  &amp;lt;attribute name=&quot;Type&quot; type=&quot;anyURI&quot; use=&quot;optional&quot;/&amp;gt;
                  &amp;lt;/complexType&amp;gt;
                  &amp;lt;element name=&quot;DigestValue&quot; type=&quot;ds:DigestValueType&quot;/&amp;gt;
                  &amp;lt;simpleType name=&quot;DigestValueType&quot;&amp;gt;
                  &amp;lt;restriction base=&quot;base64Binary&quot;/&amp;gt;
                  &amp;lt;/simpleType&amp;gt;
                  &lt;/pre&gt;&lt;/code&gt;
                  &lt;p&gt;A &lt;code&gt;Reference&lt;/code&gt; instance may be created by invoking one of the{@link XMLSignatureFactory#newReference newReference} methods of the{@link XMLSignatureFactory} class; for example:
                  &lt;pre&gt;
                  XMLSignatureFactory factory = XMLSignatureFactory.getInstance(&quot;DOM&quot;);
                  Reference ref = factory.newReference
                  (&quot;http://www.ietf.org/rfc/rfc3275.txt&quot;,
                  factory.newDigestMethod(DigestMethod.SHA1, null));
                  &lt;/pre&gt;                
                <author>
                    Sean Mullan                    
                </author>
                <author>
                    Erwin van der Koogh                    
                </author>
                <author>
                    JSR 105 Expert Group                    
                </author>
                <since>
                    1.6                    
                </since>
                <see>
                    XMLSignatureFactory#newReference(String,DigestMethod)                    
                </see>
                <see>
                    XMLSignatureFactory#newReference(String,DigestMethod,List,String,String)                    
                </see>
            </javadoc>
            <method name="getTransforms" type="List" line="44"/>
            <javadoc line="44">
                Returns an {@link java.util.Collections#unmodifiableList unmodifiable
                  list} of {@link Transform}s that are contained in this
                  &lt;code&gt;Reference&lt;/code&gt;.                
                <return>
                    an unmodifiable list of &lt;code&gt;Transform&lt;/code&gt;s
                      (may be empty but never &lt;code&gt;null&lt;/code&gt;)                    
                </return>
            </javadoc>
            <method name="getDigestMethod" type="DigestMethod" line="52"/>
            <javadoc line="52">
                Returns the digest method of this &lt;code&gt;Reference&lt;/code&gt;.                
                <return>
                    the digest method                    
                </return>
            </javadoc>
            <method name="getId" type="String" line="57"/>
            <javadoc line="57">
                Returns the optional &lt;code&gt;Id&lt;/code&gt; attribute of this
                  &lt;code&gt;Reference&lt;/code&gt;, which permits this reference to be
                  referenced from elsewhere.                
                <return>
                    the &lt;code&gt;Id&lt;/code&gt; attribute (may be &lt;code&gt;null&lt;/code&gt; if not
                      specified)                    
                </return>
            </javadoc>
            <method name="getDigestValue" type="byte[]" line="65"/>
            <javadoc line="65">
                Returns the digest value of this &lt;code&gt;Reference&lt;/code&gt;.                
                <return>
                    the raw digest value, or &lt;code&gt;null&lt;/code&gt; if this reference has
                      not been digested yet. Each invocation of this method returns a new
                      clone to protect against subsequent modification.                    
                </return>
            </javadoc>
            <method name="getCalculatedDigestValue" type="byte[]" line="72"/>
            <javadoc line="72">
                Returns the calculated digest value of this &lt;code&gt;Reference&lt;/code&gt;
                  after a validation operation. This method is useful for debugging if
                  the reference fails to validate.                
                <return>
                    the calculated digest value, or &lt;code&gt;null&lt;/code&gt; if this
                      reference has not been validated yet. Each invocation of this method
                      returns a new clone to protect against subsequent modification.                    
                </return>
            </javadoc>
            <method name="validate" type="boolean" line="81"/>
            <javadoc line="81">
                Validates this reference. This method verifies the digest of this
                  reference.
                  &lt;p&gt;This method only validates the reference the first time it is
                  invoked. On subsequent invocations, it returns a cached result.                
                <return>
                    &lt;code&gt;true&lt;/code&gt; if this reference was validated successfully;
                      &lt;code&gt;false&lt;/code&gt; otherwise                    
                </return>
                <param>
                    validateContext the validating context                    
                </param>
                <throws>
                    NullPointerException if &lt;code&gt;validateContext&lt;/code&gt; is
                      &lt;code&gt;null&lt;/code&gt;                    
                </throws>
                <throws>
                    XMLSignatureException if an unexpected exception occurs while
                      validating the reference                    
                </throws>
            </javadoc>
            <method name="getDereferencedData" type="Data" line="95"/>
            <javadoc line="95">
                Returns the dereferenced data, if
                  &lt;a href=&quot;XMLSignContext.html#Supported Properties&quot;&gt;reference caching&lt;/a&gt;
                  is enabled. This is the result of dereferencing the URI of this
                  reference during a validation or generation operation.                
                <return>
                    the dereferenced data, or &lt;code&gt;null&lt;/code&gt; if reference
                      caching is not enabled or this reference has not been generated or
                      validated                    
                </return>
            </javadoc>
            <method name="getDigestInputStream" type="InputStream" line="105"/>
            <javadoc line="105">
                Returns the pre-digested input stream, if
                  &lt;a href=&quot;XMLSignContext.html#Supported Properties&quot;&gt;reference caching&lt;/a&gt;
                  is enabled. This is the input to the digest operation during a
                  validation or signing operation.                
                <return>
                    an input stream containing the pre-digested input, or
                      &lt;code&gt;null&lt;/code&gt; if reference caching is not enabled or this
                      reference has not been generated or validated                    
                </return>
            </javadoc>
        </interface>
    </source>