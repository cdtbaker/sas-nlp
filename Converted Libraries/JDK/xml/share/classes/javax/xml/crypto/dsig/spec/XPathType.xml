<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.xml.crypto.dsig.spec">
        <import package="java.util.Collections"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Map"/>
        <class name="XPathType" line="35">
            <javadoc line="35">
                The XML Schema Definition of the &lt;code&gt;XPath&lt;/code&gt; element as defined in the
                  &lt;a href=&quot;http://www.w3.org/TR/xmldsig-filter2&quot;&gt;
                  W3C Recommendation for XML-Signature XPath Filter 2.0&lt;/a&gt;:
                  &lt;pre&gt;&lt;code&gt;
                  &amp;lt;schema xmlns=&quot;http://www.w3.org/2001/XMLSchema&quot;
                  xmlns:xf=&quot;http://www.w3.org/2002/06/xmldsig-filter2&quot;
                  targetNamespace=&quot;http://www.w3.org/2002/06/xmldsig-filter2&quot;
                  version=&quot;0.1&quot; elementFormDefault=&quot;qualified&quot;&amp;gt;
                  &amp;lt;element name=&quot;XPath&quot;
                  type=&quot;xf:XPathType&quot;/&amp;gt;
                  &amp;lt;complexType name=&quot;XPathType&quot;&amp;gt;
                  &amp;lt;simpleContent&amp;gt;
                  &amp;lt;extension base=&quot;string&quot;&amp;gt;
                  &amp;lt;attribute name=&quot;Filter&quot;&amp;gt;
                  &amp;lt;simpleType&amp;gt;
                  &amp;lt;restriction base=&quot;string&quot;&amp;gt;
                  &amp;lt;enumeration value=&quot;intersect&quot;/&amp;gt;
                  &amp;lt;enumeration value=&quot;subtract&quot;/&amp;gt;
                  &amp;lt;enumeration value=&quot;union&quot;/&amp;gt;
                  &amp;lt;/restriction&amp;gt;
                  &amp;lt;/simpleType&amp;gt;
                  &amp;lt;/attribute&amp;gt;
                  &amp;lt;/extension&amp;gt;
                  &amp;lt;/simpleContent&amp;gt;
                  &amp;lt;/complexType&amp;gt;
                  &lt;/code&gt;&lt;/pre&gt;                
                <author>
                    Sean Mullan                    
                </author>
                <author>
                    JSR 105 Expert Group                    
                </author>
                <since>
                    1.6                    
                </since>
                <see>
                    XPathFilter2ParameterSpec                    
                </see>
            </javadoc>
            <class name="Filter" line="72">
                <javadoc line="72">
                    Represents the filter set operation.                    
                </javadoc>
                <declaration name="operation" type="String" line="76"/>
                <method name="Filter" type="constructor" line="78">
                    <params>
                        <param name="operation" type="String"/>
                    </params>
                </method>
                <javadoc line="82">
                    Returns the string form of the operation.                    
                    <return>
                        the string form of the operation                        
                    </return>
                </javadoc>
                <method name="toString" type="String" line="87"/>
                <declaration name="INTERSECT" type="Filter" line="91"/>
                <javadoc line="91">
                    The intersect filter operation.                    
                </javadoc>
                <declaration name="SUBTRACT" type="Filter" line="96"/>
                <javadoc line="96">
                    The subtract filter operation.                    
                </javadoc>
                <declaration name="UNION" type="Filter" line="101"/>
                <javadoc line="101">
                    The union filter operation.                    
                </javadoc>
            </class>
            <declaration name="expression" type="String" line="107"/>
            <declaration name="filter" type="Filter" line="108"/>
            <declaration name="nsMap" type="Map" line="109"/>
            <javadoc line="111">
                Creates an &lt;code&gt;XPathType&lt;/code&gt; instance with the specified XPath
                  expression and filter.                
                <param>
                    expression the XPath expression to be evaluated                    
                </param>
                <param>
                    filter the filter operation ({@link Filter#INTERSECT},{@link Filter#SUBTRACT}, or {@link Filter#UNION})                    
                </param>
                <throws>
                    NullPointerException if &lt;code&gt;expression&lt;/code&gt; or
                      &lt;code&gt;filter&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;                    
                </throws>
            </javadoc>
            <method name="XPathType" type="constructor" line="121">
                <params>
                    <param name="expression" type="String"/>
                    <param name="filter" type="Filter"/>
                </params>
                <scope line="122"/>
                <scope line="125"/>
            </method>
            <javadoc line="133">
                Creates an &lt;code&gt;XPathType&lt;/code&gt; instance with the specified XPath
                  expression, filter, and namespace map. The map is copied to protect
                  against subsequent modification.                
                <param>
                    expression the XPath expression to be evaluated                    
                </param>
                <param>
                    filter the filter operation ({@link Filter#INTERSECT},{@link Filter#SUBTRACT}, or {@link Filter#UNION})                    
                </param>
                <param>
                    namespaceMap the map of namespace prefixes. Each key is a
                      namespace prefix &lt;code&gt;String&lt;/code&gt; that maps to a corresponding
                      namespace URI &lt;code&gt;String&lt;/code&gt;.                    
                </param>
                <throws>
                    NullPointerException if &lt;code&gt;expression&lt;/code&gt;,
                      &lt;code&gt;filter&lt;/code&gt; or &lt;code&gt;namespaceMap&lt;/code&gt; are
                      &lt;code&gt;null&lt;/code&gt;                    
                </throws>
                <throws>
                    ClassCastException if any of the map&apos;s keys or entries are
                      not of type &lt;code&gt;String&lt;/code&gt;                    
                </throws>
            </javadoc>
            <method name="XPathType" type="constructor" line="150">
                <params>
                    <param name="expression" type="String"/>
                    <param name="filter" type="Filter"/>
                    <param name="namespaceMap" type="Map"/>
                </params>
                <scope line="152"/>
                <declaration name="entries" type="Iterator" line="156"/>
                <scope line="157">
                    <declaration name="me" type="Map.Entry" line="158"/>
                    <scope line="160"/>
                </scope>
            </method>
            <javadoc line="167">
                Returns the XPath expression to be evaluated.                
                <return>
                    the XPath expression to be evaluated                    
                </return>
            </javadoc>
            <method name="getExpression" type="String" line="172"/>
            <javadoc line="176">
                Returns the filter operation.                
                <return>
                    the filter operation                    
                </return>
            </javadoc>
            <method name="getFilter" type="Filter" line="181"/>
            <javadoc line="185">
                Returns a map of namespace prefixes. Each key is a namespace prefix
                  &lt;code&gt;String&lt;/code&gt; that maps to a corresponding namespace URI
                  &lt;code&gt;String&lt;/code&gt;.
                  &lt;p&gt;
                  This implementation returns an {@link Collections#unmodifiableMapunmodifiable map}.                
                <return>
                    a &lt;code&gt;Map&lt;/code&gt; of namespace prefixes to namespace URIs
                      (may be empty, but never &lt;code&gt;null&lt;/code&gt;)                    
                </return>
            </javadoc>
            <method name="getNamespaceMap" type="Map" line="196"/>
        </class>
    </source>