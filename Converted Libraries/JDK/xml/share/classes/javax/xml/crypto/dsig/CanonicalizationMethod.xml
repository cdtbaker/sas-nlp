<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.xml.crypto.dsig">
        <import package="java.security.spec.AlgorithmParameterSpec"/>
        <import package="javax.xml.crypto.dsig.spec.C14NMethodParameterSpec"/>
        <interface name="CanonicalizationMethod">
            <implements interface="Transform"/>
            <javadoc line="33">
                A representation of the XML &lt;code&gt;CanonicalizationMethod&lt;/code&gt;
                  element as defined in the
                  &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;
                  W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML
                  Schema Definition is defined as:
                  &lt;p&gt;
                  &lt;pre&gt;
                  &amp;lt;element name=&quot;CanonicalizationMethod&quot; type=&quot;ds:CanonicalizationMethodType&quot;/&amp;gt;
                  &amp;lt;complexType name=&quot;CanonicalizationMethodType&quot; mixed=&quot;true&quot;&amp;gt;
                  &amp;lt;sequence&amp;gt;
                  &amp;lt;any namespace=&quot;##any&quot; minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;/&amp;gt;
                  &amp;lt;!-- (0,unbounded) elements from (1,1) namespace --&amp;gt;
                  &amp;lt;/sequence&amp;gt;
                  &amp;lt;attribute name=&quot;Algorithm&quot; type=&quot;anyURI&quot; use=&quot;required&quot;/&amp;gt;
                  &amp;lt;/complexType&amp;gt;
                  &lt;/pre&gt;
                  A &lt;code&gt;CanonicalizationMethod&lt;/code&gt; instance may be created by invoking
                  the {@link XMLSignatureFactory#newCanonicalizationMethodnewCanonicalizationMethod} method of the {@link XMLSignatureFactory} class.                
                <author>
                    Sean Mullan                    
                </author>
                <author>
                    JSR 105 Expert Group                    
                </author>
                <since>
                    1.6                    
                </since>
                <see>
                    XMLSignatureFactory#newCanonicalizationMethod(String,C14NMethodParameterSpec)                    
                </see>
            </javadoc>
            <declaration name="INCLUSIVE" type="String" line="62"/>
            <javadoc line="62">
                The &lt;a href=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;&gt;Canonical
                  XML (without comments)&lt;/a&gt; canonicalization method algorithm URI.                
            </javadoc>
            <declaration name="INCLUSIVE_WITH_COMMENTS" type="String" line="69"/>
            <javadoc line="69">
                The
                  &lt;a href=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments&quot;&gt;
                  Canonical XML with comments&lt;/a&gt; canonicalization method algorithm URI.                
            </javadoc>
            <declaration name="EXCLUSIVE" type="String" line="77"/>
            <javadoc line="77">
                The &lt;a href=&quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;&gt;Exclusive
                  Canonical XML (without comments)&lt;/a&gt; canonicalization method algorithm
                  URI.                
            </javadoc>
            <declaration name="EXCLUSIVE_WITH_COMMENTS" type="String" line="85"/>
            <javadoc line="85">
                The &lt;a href=&quot;http://www.w3.org/2001/10/xml-exc-c14n#WithComments&quot;&gt;
                  Exclusive Canonical XML with comments&lt;/a&gt; canonicalization method
                  algorithm URI.                
            </javadoc>
            <method name="getParameterSpec" type="AlgorithmParameterSpec" line="93"/>
            <javadoc line="93">
                Returns the algorithm-specific input parameters associated with this
                  &lt;code&gt;CanonicalizationMethod&lt;/code&gt;.
                  &lt;p&gt;The returned parameters can be typecast to a{@link C14NMethodParameterSpec} object.                
                <return>
                    the algorithm-specific input parameters (may be
                      &lt;code&gt;null&lt;/code&gt; if not specified)                    
                </return>
            </javadoc>
        </interface>
    </source>