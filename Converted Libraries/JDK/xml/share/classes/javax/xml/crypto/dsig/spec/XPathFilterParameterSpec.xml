<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.xml.crypto.dsig.spec">
        <import package="javax.xml.crypto.dsig.Transform"/>
        <import package="java.util.Collections"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.Map"/>
        <import package="java.util.Map.Entry"/>
        <class name="XPathFilterParameterSpec" line="8">
            <implements interface="TransformParameterSpec"/>
            <javadoc line="8">
                Parameters for the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/#sec-XPath&quot;&gt;
                  XPath Filtering Transform Algorithm&lt;/a&gt;.
                  The parameters include the XPath expression and an optional &lt;code&gt;Map&lt;/code&gt;
                  of additional namespace prefix mappings. The XML Schema Definition of
                  the XPath Filtering transform parameters is defined as:
                  &lt;pre&gt;&lt;code&gt;
                  &amp;lt;element name=&quot;XPath&quot; type=&quot;string&quot;/&amp;gt;
                  &lt;/code&gt;&lt;/pre&gt;                
                <author>
                    Sean Mullan                    
                </author>
                <author>
                    JSR 105 Expert Group                    
                </author>
                <since>
                    1.6                    
                </since>
                <see>
                    Transform                    
                </see>
            </javadoc>
            <declaration name="xPath" type="String" line="23"/>
            <declaration name="nsMap" type="Map" line="24"/>
            <javadoc line="25">
                Creates an &lt;code&gt;XPathFilterParameterSpec&lt;/code&gt; with the specified
                  XPath expression.                
                <param>
                    xPath the XPath expression to be evaluated                    
                </param>
                <throws>
                    NullPointerException if &lt;code&gt;xPath&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;                    
                </throws>
            </javadoc>
            <method name="XPathFilterParameterSpec" type="constructor" line="31">
                <params>
                    <param name="xPath" type="String"/>
                </params>
                <scope line="32"/>
            </method>
            <javadoc line="38">
                Creates an &lt;code&gt;XPathFilterParameterSpec&lt;/code&gt; with the specified
                  XPath expression and namespace map. The map is copied to protect against
                  subsequent modification.                
                <param>
                    xPath the XPath expression to be evaluated                    
                </param>
                <param>
                    namespaceMap the map of namespace prefixes. Each key is a
                      namespace prefix &lt;code&gt;String&lt;/code&gt; that maps to a corresponding
                      namespace URI &lt;code&gt;String&lt;/code&gt;.                    
                </param>
                <throws>
                    NullPointerException if &lt;code&gt;xPath&lt;/code&gt; or
                      &lt;code&gt;namespaceMap&lt;/code&gt; are &lt;code&gt;null&lt;/code&gt;                    
                </throws>
                <throws>
                    ClassCastException if any of the map&apos;s keys or entries are not
                      of type &lt;code&gt;String&lt;/code&gt;                    
                </throws>
            </javadoc>
            <method name="XPathFilterParameterSpec" type="constructor" line="51">
                <params>
                    <param name="xPath" type="String"/>
                    <param name="namespaceMap" type="Map"/>
                </params>
                <scope line="52"/>
                <declaration name="entries" type="Iterator" line="57"/>
                <scope line="58">
                    <declaration name="me" type="Map.Entry" line="59"/>
                    <scope line="60"/>
                </scope>
            </method>
            <javadoc line="66">
                Returns the XPath expression to be evaluated.                
                <return>
                    the XPath expression to be evaluated                    
                </return>
            </javadoc>
            <method name="getXPath" type="String" line="70"/>
            <javadoc line="73">
                Returns a map of namespace prefixes. Each key is a namespace prefix
                  &lt;code&gt;String&lt;/code&gt; that maps to a corresponding namespace URI
                  &lt;code&gt;String&lt;/code&gt;.
                  &lt;p&gt;
                  This implementation returns an {@link Collections#unmodifiableMapunmodifiable map}.                
                <return>
                    a &lt;code&gt;Map&lt;/code&gt; of namespace prefixes to namespace URIs (may
                      be empty, but never &lt;code&gt;null&lt;/code&gt;)                    
                </return>
            </javadoc>
            <method name="getNamespaceMap" type="Map" line="82"/>
        </class>
    </source>