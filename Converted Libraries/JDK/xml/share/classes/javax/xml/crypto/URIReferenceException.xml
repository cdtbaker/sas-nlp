<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.xml.crypto">
        <import package="java.io.PrintStream"/>
        <import package="java.io.PrintWriter"/>
        <import package="javax.xml.crypto.dsig.keyinfo.RetrievalMethod"/>
        <class name="URIReferenceException" line="34">
            <extends class="Exception"/>
            <javadoc line="34">
                Indicates an exceptional condition thrown while dereferencing a{@link URIReference}.
                  &lt;p&gt;A &lt;code&gt;URIReferenceException&lt;/code&gt; can contain a cause: another
                  throwable that caused this &lt;code&gt;URIReferenceException&lt;/code&gt; to get thrown.                
                <author>
                    Sean Mullan                    
                </author>
                <author>
                    JSR 105 Expert Group                    
                </author>
                <since>
                    1.6                    
                </since>
                <see>
                    URIDereferencer#dereference(URIReference,XMLCryptoContext)                    
                </see>
                <see>
                    RetrievalMethod#dereference(XMLCryptoContext)                    
                </see>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="49"/>
            <declaration name="cause" type="Throwable" line="51"/>
            <javadoc line="51">
                The throwable that caused this exception to get thrown, or null if this
                  exception was not caused by another throwable or if the causative
                  throwable is unknown.                
                <serial>
                                        
                </serial>
            </javadoc>
            <declaration name="uriReference" type="URIReference" line="60"/>
            <javadoc line="62">
                Constructs a new &lt;code&gt;URIReferenceException&lt;/code&gt; with
                  &lt;code&gt;null&lt;/code&gt; as its detail message.                
            </javadoc>
            <method name="URIReferenceException" type="constructor" line="66"/>
            <javadoc line="70">
                Constructs a new &lt;code&gt;URIReferenceException&lt;/code&gt; with the specified
                  detail message.                
                <param>
                    message the detail message                    
                </param>
            </javadoc>
            <method name="URIReferenceException" type="constructor" line="76">
                <params>
                    <param name="message" type="String"/>
                </params>
            </method>
            <javadoc line="80">
                Constructs a new &lt;code&gt;URIReferenceException&lt;/code&gt; with the
                  specified detail message and cause.
                  &lt;p&gt;Note that the detail message associated with
                  &lt;code&gt;cause&lt;/code&gt; is &lt;i&gt;not&lt;/i&gt; automatically incorporated in
                  this exception&apos;s detail message.                
                <param>
                    message the detail message                    
                </param>
                <param>
                    cause the cause (A <tt>null</tt> value is permitted, and
                      indicates that the cause is nonexistent or unknown.)                    
                </param>
            </javadoc>
            <method name="URIReferenceException" type="constructor" line="91">
                <params>
                    <param name="message" type="String"/>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
            <javadoc line="96">
                Constructs a new &lt;code&gt;URIReferenceException&lt;/code&gt; with the
                  specified detail message, cause and &lt;code&gt;URIReference&lt;/code&gt;.
                  &lt;p&gt;Note that the detail message associated with
                  &lt;code&gt;cause&lt;/code&gt; is &lt;i&gt;not&lt;/i&gt; automatically incorporated in
                  this exception&apos;s detail message.                
                <param>
                    message the detail message                    
                </param>
                <param>
                    cause the cause (A <tt>null</tt> value is permitted, and
                      indicates that the cause is nonexistent or unknown.)                    
                </param>
                <param>
                    uriReference the <code>URIReference</code> that was being
                      dereferenced when the error was encountered                    
                </param>
                <throws>
                    NullPointerException if <code>uriReference</code> is
                      <code>null</code>                    
                </throws>
            </javadoc>
            <method name="URIReferenceException" type="constructor" line="112">
                <params>
                    <param name="message" type="String"/>
                    <param name="cause" type="Throwable"/>
                    <param name="uriReference" type="URIReference"/>
                </params>
                <scope line="114"/>
            </method>
            <javadoc line="120">
                Constructs a new &lt;code&gt;URIReferenceException&lt;/code&gt; with the specified
                  cause and a detail message of &lt;code&gt;(cause==null ? null :
                  cause.toString())&lt;/code&gt; (which typically contains the class and detail
                  message of &lt;code&gt;cause&lt;/code&gt;).                
                <param>
                    cause the cause (A <tt>null</tt> value is permitted, and
                      indicates that the cause is nonexistent or unknown.)                    
                </param>
            </javadoc>
            <method name="URIReferenceException" type="constructor" line="129">
                <params>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
            <javadoc line="134">
                Returns the &lt;code&gt;URIReference&lt;/code&gt; that was being dereferenced
                  when the exception was thrown.                
                <return>
                    the <code>URIReference</code> that was being dereferenced
                      when the exception was thrown, or <code>null</code> if not specified                    
                </return>
            </javadoc>
            <method name="getURIReference" type="URIReference" line="141"/>
            <javadoc line="145">
                Returns the cause of this &lt;code&gt;URIReferenceException&lt;/code&gt; or
                  &lt;code&gt;null&lt;/code&gt; if the cause is nonexistent or unknown.  (The
                  cause is the throwable that caused this
                  &lt;code&gt;URIReferenceException&lt;/code&gt; to get thrown.)                
                <return>
                    the cause of this <code>URIReferenceException</code> or
                      <code>null</code> if the cause is nonexistent or unknown.                    
                </return>
            </javadoc>
            <method name="getCause" type="Throwable" line="154"/>
            <javadoc line="158">
                Prints this &lt;code&gt;URIReferenceException&lt;/code&gt;, its backtrace and
                  the cause&apos;s backtrace to the standard error stream.                
            </javadoc>
            <method name="printStackTrace" type="void" line="162">
                <comment line="164">
                    XXX print backtrace of cause                    
                </comment>
            </method>
            <javadoc line="167">
                Prints this &lt;code&gt;URIReferenceException&lt;/code&gt;, its backtrace and
                  the cause&apos;s backtrace to the specified print stream.                
                <param>
                    s <code>PrintStream</code> to use for output                    
                </param>
            </javadoc>
            <method name="printStackTrace" type="void" line="173">
                <params>
                    <param name="s" type="PrintStream"/>
                </params>
                <comment line="175">
                    XXX print backtrace of cause                    
                </comment>
            </method>
            <javadoc line="178">
                Prints this &lt;code&gt;URIReferenceException&lt;/code&gt;, its backtrace and
                  the cause&apos;s backtrace to the specified print writer.                
                <param>
                    s <code>PrintWriter</code> to use for output                    
                </param>
            </javadoc>
            <method name="printStackTrace" type="void" line="184">
                <params>
                    <param name="s" type="PrintWriter"/>
                </params>
                <comment line="186">
                    XXX print backtrace of cause                    
                </comment>
            </method>
        </class>
    </source>