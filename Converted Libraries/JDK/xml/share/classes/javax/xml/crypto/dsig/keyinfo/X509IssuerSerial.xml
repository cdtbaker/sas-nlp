<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.xml.crypto.dsig.keyinfo">
        <import package="java.math.BigInteger"/>
        <import package="java.security.cert.X509Certificate"/>
        <import package="javax.xml.crypto.XMLStructure"/>
        <interface name="X509IssuerSerial">
            <implements interface="XMLStructure"/>
            <javadoc line="5">
                A representation of the XML &lt;code&gt;X509IssuerSerial&lt;/code&gt; element as
                  defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;
                  W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.
                  An &lt;code&gt;X509IssuerSerial&lt;/code&gt; object contains an X.509 issuer
                  distinguished name (DN) and serial number pair. The XML schema definition is
                  defined as:
                  &lt;pre&gt;
                  &amp;lt;element name=&quot;X509IssuerSerial&quot; type=&quot;ds:X509IssuerSerialType&quot;/&amp;gt;
                  &amp;lt;complexType name=&quot;X509IssuerSerialType&quot;&amp;gt;
                  &amp;lt;sequence&amp;gt;
                  &amp;lt;element name=&quot;X509IssuerName&quot; type=&quot;string&quot;/&amp;gt;
                  &amp;lt;element name=&quot;X509SerialNumber&quot; type=&quot;integer&quot;/&amp;gt;
                  &amp;lt;/sequence&amp;gt;
                  &amp;lt;/complexType&amp;gt;
                  &lt;/pre&gt;
                  An &lt;code&gt;X509IssuerSerial&lt;/code&gt; instance may be created by invoking the{@link KeyInfoFactory#newX509IssuerSerial newX509IssuerSerial} method
                  of the {@link KeyInfoFactory} class, and passing it a
                  &lt;code&gt;String&lt;/code&gt; and &lt;code&gt;BigInteger&lt;/code&gt; representing the X.500
                  DN and serial number. Here is an example of creating an
                  &lt;code&gt;X509IssuerSerial&lt;/code&gt; from the issuer DN and serial number of an
                  existing {@link X509Certificate}:
                  &lt;pre&gt;
                  KeyInfoFactory factory = KeyInfoFactory.getInstance(&quot;DOM&quot;);
                  X509IssuerSerial issuer = factory.newX509IssuerSerial
                  (cert.getIssuerX500Principal().getName(), cert.getSerialNumber());
                  &lt;/pre&gt;                
                <author>
                    Sean Mullan                    
                </author>
                <author>
                    JSR 105 Expert Group                    
                </author>
                <since>
                    1.6                    
                </since>
                <see>
                    X509Data#getContent                    
                </see>
                <see>
                    KeyInfoFactory#newX509IssuerSerial(String,BigInteger)                    
                </see>
            </javadoc>
            <method name="getIssuerName" type="String" line="39"/>
            <javadoc line="39">
                Returns the X.500 distinguished name of this
                  &lt;code&gt;X509IssuerSerial&lt;/code&gt; in
                  &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt; String format.                
                <return>
                    the X.500 distinguished name in RFC 2253 String format (never
                      &lt;code&gt;null&lt;/code&gt;)                    
                </return>
            </javadoc>
            <method name="getSerialNumber" type="BigInteger" line="47"/>
            <javadoc line="47">
                Returns the serial number of this &lt;code&gt;X509IssuerSerial&lt;/code&gt;.                
                <return>
                    the serial number (never &lt;code&gt;null&lt;/code&gt;)                    
                </return>
            </javadoc>
        </interface>
    </source>