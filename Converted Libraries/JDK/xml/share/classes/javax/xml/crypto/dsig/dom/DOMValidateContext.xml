<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.xml.crypto.dsig.dom">
        <import package="javax.xml.crypto.KeySelector"/>
        <import package="javax.xml.crypto.dom.DOMCryptoContext"/>
        <import package="javax.xml.crypto.dsig.XMLSignature"/>
        <import package="javax.xml.crypto.dsig.XMLSignatureFactory"/>
        <import package="javax.xml.crypto.dsig.XMLValidateContext"/>
        <import package="java.security.Key"/>
        <import package="org.w3c.dom.Node"/>
        <class name="DOMValidateContext" line="38">
            <extends class="DOMCryptoContext"/>
            <implements interface="XMLValidateContext"/>
            <javadoc line="38">
                A DOM-specific {@link XMLValidateContext}. This class contains additional
                  methods to specify the location in a DOM tree where an {@link XMLSignature}is to be unmarshalled and validated from.
                  &lt;p&gt;Note that the behavior of an unmarshalled &lt;code&gt;XMLSignature&lt;/code&gt;
                  is undefined if the contents of the underlying DOM tree are modified by the
                  caller after the &lt;code&gt;XMLSignature&lt;/code&gt; is created.
                  &lt;p&gt;Also, note that &lt;code&gt;DOMValidateContext&lt;/code&gt; instances can contain
                  information and state specific to the XML signature structure it is
                  used with. The results are unpredictable if a
                  &lt;code&gt;DOMValidateContext&lt;/code&gt; is used with different signature structures
                  (for example, you should not use the same &lt;code&gt;DOMValidateContext&lt;/code&gt;
                  instance to validate two different {@link XMLSignature} objects).                
                <author>
                    Sean Mullan                    
                </author>
                <author>
                    JSR 105 Expert Group                    
                </author>
                <since>
                    1.6                    
                </since>
                <see>
                    XMLSignatureFactory#unmarshalXMLSignature(XMLValidateContext)                    
                </see>
            </javadoc>
            <declaration name="node" type="Node" line="62"/>
            <javadoc line="64">
                Creates a &lt;code&gt;DOMValidateContext&lt;/code&gt; containing the specified key
                  selector and node.                
                <param>
                    ks a key selector for finding a validation key                    
                </param>
                <param>
                    node the node                    
                </param>
                <throws>
                    NullPointerException if &lt;code&gt;ks&lt;/code&gt; or &lt;code&gt;node&lt;/code&gt; is
                      &lt;code&gt;null&lt;/code&gt;                    
                </throws>
            </javadoc>
            <method name="DOMValidateContext" type="constructor" line="73">
                <params>
                    <param name="ks" type="KeySelector"/>
                    <param name="node" type="Node"/>
                </params>
                <scope line="74"/>
                <scope line="77"/>
            </method>
            <javadoc line="84">
                Creates a &lt;code&gt;DOMValidateContext&lt;/code&gt; containing the specified key
                  and node. The validating key will be stored in a{@link KeySelector#singletonKeySelector singleton KeySelector} that
                  is returned when the {@link #getKeySelector getKeySelector}method is called.                
                <param>
                    validatingKey the validating key                    
                </param>
                <param>
                    node the node                    
                </param>
                <throws>
                    NullPointerException if &lt;code&gt;validatingKey&lt;/code&gt; or
                      &lt;code&gt;node&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;                    
                </throws>
            </javadoc>
            <method name="DOMValidateContext" type="constructor" line="96">
                <params>
                    <param name="validatingKey" type="Key"/>
                    <param name="node" type="Node"/>
                </params>
                <scope line="97"/>
                <scope line="100"/>
            </method>
            <javadoc line="107">
                Sets the node.                
                <param>
                    node the node                    
                </param>
                <throws>
                    NullPointerException if &lt;code&gt;node&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;                    
                </throws>
                <see>
                    #getNode                    
                </see>
            </javadoc>
            <method name="setNode" type="void" line="114">
                <params>
                    <param name="node" type="Node"/>
                </params>
                <scope line="115"/>
            </method>
            <javadoc line="121">
                Returns the node.                
                <return>
                    the node (never &lt;code&gt;null&lt;/code&gt;)                    
                </return>
                <see>
                    #setNode(Node)                    
                </see>
            </javadoc>
            <method name="getNode" type="Node" line="127"/>
        </class>
    </source>