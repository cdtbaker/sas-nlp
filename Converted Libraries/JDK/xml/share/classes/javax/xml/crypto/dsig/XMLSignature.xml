<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.xml.crypto.dsig">
        <import package="javax.xml.crypto.KeySelector"/>
        <import package="javax.xml.crypto.KeySelectorResult"/>
        <import package="javax.xml.crypto.MarshalException"/>
        <import package="javax.xml.crypto.XMLStructure"/>
        <import package="javax.xml.crypto.dsig.keyinfo.KeyInfo"/>
        <import package="java.security.Signature"/>
        <import package="java.util.List"/>
        <interface name="XMLSignature">
            <implements interface="XMLStructure"/>
            <javadoc line="9">
                A representation of the XML &lt;code&gt;Signature&lt;/code&gt; element as
                  defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;
                  W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.
                  This class contains methods for signing and validating XML signatures
                  with behavior as defined by the W3C specification. The XML Schema Definition
                  is defined as:
                  &lt;pre&gt;&lt;code&gt;
                  &amp;lt;element name=&quot;Signature&quot; type=&quot;ds:SignatureType&quot;/&amp;gt;
                  &amp;lt;complexType name=&quot;SignatureType&quot;&amp;gt;
                  &amp;lt;sequence&amp;gt;
                  &amp;lt;element ref=&quot;ds:SignedInfo&quot;/&amp;gt;
                  &amp;lt;element ref=&quot;ds:SignatureValue&quot;/&amp;gt;
                  &amp;lt;element ref=&quot;ds:KeyInfo&quot; minOccurs=&quot;0&quot;/&amp;gt;
                  &amp;lt;element ref=&quot;ds:Object&quot; minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;/&amp;gt;
                  &amp;lt;/sequence&amp;gt;
                  &amp;lt;attribute name=&quot;Id&quot; type=&quot;ID&quot; use=&quot;optional&quot;/&amp;gt;
                  &amp;lt;/complexType&amp;gt;
                  &lt;/code&gt;&lt;/pre&gt;
                  &lt;p&gt;
                  An &lt;code&gt;XMLSignature&lt;/code&gt; instance may be created by invoking one of the{@link XMLSignatureFactory#newXMLSignature newXMLSignature} methods of the{@link XMLSignatureFactory} class.
                  &lt;p&gt;If the contents of the underlying document containing the
                  &lt;code&gt;XMLSignature&lt;/code&gt; are subsequently modified, the behavior is
                  undefined.
                  &lt;p&gt;Note that this class is named &lt;code&gt;XMLSignature&lt;/code&gt; rather than
                  &lt;code&gt;Signature&lt;/code&gt; to avoid naming clashes with the existing{@link Signature java.security.Signature} class.                
                <see>
                    XMLSignatureFactory#newXMLSignature(SignedInfo,KeyInfo)                    
                </see>
                <see>
                    XMLSignatureFactory#newXMLSignature(SignedInfo,KeyInfo,List,String,String)                    
                </see>
                <author>
                    Joyce L. Leung                    
                </author>
                <author>
                    Sean Mullan                    
                </author>
                <author>
                    Erwin van der Koogh                    
                </author>
                <author>
                    JSR 105 Expert Group                    
                </author>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="XMLNS" type="String" line="44"/>
            <javadoc line="44">
                The XML Namespace URI of the W3C Recommendation for XML-Signature
                  Syntax and Processing.                
            </javadoc>
            <method name="validate" type="boolean" line="49"/>
            <javadoc line="49">
                Validates the signature according to the
                  &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/#sec-CoreValidation&quot;&gt;
                  core validation processing rules&lt;/a&gt;. This method validates the
                  signature using the existing state, it does not unmarshal and
                  reinitialize the contents of the &lt;code&gt;XMLSignature&lt;/code&gt; using the
                  location information specified in the context.
                  &lt;p&gt;This method only validates the signature the first time it is
                  invoked. On subsequent invocations, it returns a cached result.                
                <param>
                    validateContext the validating context                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if the signature passed core validation,
                      otherwise &lt;code&gt;false&lt;/code&gt;                    
                </return>
                <throws>
                    ClassCastException if the type of &lt;code&gt;validateContext&lt;/code&gt;
                      is not compatible with this &lt;code&gt;XMLSignature&lt;/code&gt;                    
                </throws>
                <throws>
                    NullPointerException if &lt;code&gt;validateContext&lt;/code&gt; is
                      &lt;code&gt;null&lt;/code&gt;                    
                </throws>
                <throws>
                    XMLSignatureException if an unexpected error occurs during
                      validation that prevented the validation operation from completing                    
                </throws>
            </javadoc>
            <method name="getKeyInfo" type="KeyInfo" line="69"/>
            <javadoc line="69">
                Returns the key info of this &lt;code&gt;XMLSignature&lt;/code&gt;.                
                <return>
                    the key info (may be &lt;code&gt;null&lt;/code&gt; if not specified)                    
                </return>
            </javadoc>
            <method name="getSignedInfo" type="SignedInfo" line="74"/>
            <javadoc line="74">
                Returns the signed info of this &lt;code&gt;XMLSignature&lt;/code&gt;.                
                <return>
                    the signed info (never &lt;code&gt;null&lt;/code&gt;)                    
                </return>
            </javadoc>
            <method name="getObjects" type="List" line="79"/>
            <javadoc line="79">
                Returns an {@link java.util.Collections#unmodifiableList unmodifiable
                  list} of {@link XMLObject}s contained in this &lt;code&gt;XMLSignature&lt;/code&gt;.                
                <return>
                    an unmodifiable list of &lt;code&gt;XMLObject&lt;/code&gt;s (may be empty
                      but never &lt;code&gt;null&lt;/code&gt;)                    
                </return>
            </javadoc>
            <method name="getId" type="String" line="86"/>
            <javadoc line="86">
                Returns the optional Id of this &lt;code&gt;XMLSignature&lt;/code&gt;.                
                <return>
                    the Id (may be &lt;code&gt;null&lt;/code&gt; if not specified)                    
                </return>
            </javadoc>
            <method name="getSignatureValue" type="SignatureValue" line="91"/>
            <javadoc line="91">
                Returns the signature value of this &lt;code&gt;XMLSignature&lt;/code&gt;.                
                <return>
                    the signature value                    
                </return>
            </javadoc>
            <method name="sign" type="void" line="96"/>
            <javadoc line="96">
                Signs this &lt;code&gt;XMLSignature&lt;/code&gt;.
                  &lt;p&gt;If this method throws an exception, this &lt;code&gt;XMLSignature&lt;/code&gt; and
                  the &lt;code&gt;signContext&lt;/code&gt; parameter will be left in the state that
                  it was in prior to the invocation.                
                <param>
                    signContext the signing context                    
                </param>
                <throws>
                    ClassCastException if the type of &lt;code&gt;signContext&lt;/code&gt; is
                      not compatible with this &lt;code&gt;XMLSignature&lt;/code&gt;                    
                </throws>
                <throws>
                    NullPointerException if &lt;code&gt;signContext&lt;/code&gt; is
                      &lt;code&gt;null&lt;/code&gt;                    
                </throws>
                <throws>
                    MarshalException if an exception occurs while marshalling                    
                </throws>
                <throws>
                    XMLSignatureException if an unexpected exception occurs while
                      generating the signature                    
                </throws>
            </javadoc>
            <method name="getKeySelectorResult" type="KeySelectorResult" line="111"/>
            <javadoc line="111">
                Returns the result of the {@link KeySelector}, if specified, after
                  this &lt;code&gt;XMLSignature&lt;/code&gt; has been signed or validated.                
                <return>
                    the key selector result, or &lt;code&gt;null&lt;/code&gt; if a key
                      selector has not been specified or this &lt;code&gt;XMLSignature&lt;/code&gt;
                      has not been signed or validated                    
                </return>
            </javadoc>
            <interface name="SignatureValue">
                <implements interface="XMLStructure"/>
                <javadoc line="119">
                    A representation of the XML &lt;code&gt;SignatureValue&lt;/code&gt; element as
                      defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;
                      W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.
                      The XML Schema Definition is defined as:
                      &lt;p&gt;
                      &lt;pre&gt;
                      &amp;lt;element name=&quot;SignatureValue&quot; type=&quot;ds:SignatureValueType&quot;/&amp;gt;
                      &amp;lt;complexType name=&quot;SignatureValueType&quot;&amp;gt;
                      &amp;lt;simpleContent&amp;gt;
                      &amp;lt;extension base=&quot;base64Binary&quot;&amp;gt;
                      &amp;lt;attribute name=&quot;Id&quot; type=&quot;ID&quot; use=&quot;optional&quot;/&amp;gt;
                      &amp;lt;/extension&amp;gt;
                      &amp;lt;/simpleContent&amp;gt;
                      &amp;lt;/complexType&amp;gt;
                      &lt;/pre&gt;                    
                    <author>
                        Sean Mullan                        
                    </author>
                    <author>
                        JSR 105 Expert Group                        
                    </author>
                </javadoc>
                <method name="getId" type="String" line="139"/>
                <javadoc line="139">
                    Returns the optional &lt;code&gt;Id&lt;/code&gt; attribute of this
                      &lt;code&gt;SignatureValue&lt;/code&gt;, which permits this element to be
                      referenced from elsewhere.                    
                    <return>
                        the &lt;code&gt;Id&lt;/code&gt; attribute (may be &lt;code&gt;null&lt;/code&gt; if
                          not specified)                        
                    </return>
                </javadoc>
                <method name="getValue" type="byte[]" line="147"/>
                <javadoc line="147">
                    Returns the signature value of this &lt;code&gt;SignatureValue&lt;/code&gt;.                    
                    <return>
                        the signature value (may be &lt;code&gt;null&lt;/code&gt; if the
                          &lt;code&gt;XMLSignature&lt;/code&gt; has not been signed yet). Each
                          invocation of this method returns a new clone of the array to
                          prevent subsequent modification.                        
                    </return>
                </javadoc>
                <method name="validate" type="boolean" line="155"/>
                <javadoc line="155">
                    Validates the signature value. This method performs a
                      cryptographic validation of the signature calculated over the
                      &lt;code&gt;SignedInfo&lt;/code&gt; of the &lt;code&gt;XMLSignature&lt;/code&gt;.
                      &lt;p&gt;This method only validates the signature the first
                      time it is invoked. On subsequent invocations, it returns a cached
                      result.                    
                    <return>
                        &lt;code&gt;true&lt;/code&gt; if the signature was
                          validated successfully; &lt;code&gt;false&lt;/code&gt; otherwise                        
                    </return>
                    <param>
                        validateContext the validating context                        
                    </param>
                    <throws>
                        NullPointerException if &lt;code&gt;validateContext&lt;/code&gt; is
                          &lt;code&gt;null&lt;/code&gt;                        
                    </throws>
                    <throws>
                        XMLSignatureException if an unexpected exception occurs while
                          validating the signature                        
                    </throws>
                </javadoc>
            </interface>
        </interface>
    </source>