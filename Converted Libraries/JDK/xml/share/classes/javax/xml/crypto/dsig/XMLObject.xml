<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.xml.crypto.dsig">
        <import package="java.util.List"/>
        <import package="javax.xml.crypto.XMLStructure"/>
        <interface name="XMLObject">
            <implements interface="XMLStructure"/>
            <javadoc line="4">
                A representation of the XML &lt;code&gt;Object&lt;/code&gt; element as defined in
                  the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;
                  W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.
                  An &lt;code&gt;XMLObject&lt;/code&gt; may contain any data and may include optional
                  MIME type, ID, and encoding attributes. The XML Schema Definition is
                  defined as:
                  &lt;pre&gt;&lt;code&gt;
                  &amp;lt;element name=&quot;Object&quot; type=&quot;ds:ObjectType&quot;/&amp;gt;
                  &amp;lt;complexType name=&quot;ObjectType&quot; mixed=&quot;true&quot;&amp;gt;
                  &amp;lt;sequence minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&amp;gt;
                  &amp;lt;any namespace=&quot;##any&quot; processContents=&quot;lax&quot;/&amp;gt;
                  &amp;lt;/sequence&amp;gt;
                  &amp;lt;attribute name=&quot;Id&quot; type=&quot;ID&quot; use=&quot;optional&quot;/&amp;gt;
                  &amp;lt;attribute name=&quot;MimeType&quot; type=&quot;string&quot; use=&quot;optional&quot;/&amp;gt;
                  &amp;lt;attribute name=&quot;Encoding&quot; type=&quot;anyURI&quot; use=&quot;optional&quot;/&amp;gt;
                  &amp;lt;/complexType&amp;gt;
                  &lt;/code&gt;&lt;/pre&gt;
                  A &lt;code&gt;XMLObject&lt;/code&gt; instance may be created by invoking the{@link XMLSignatureFactory#newXMLObject newXMLObject} method of the{@link XMLSignatureFactory} class; for example:
                  &lt;pre&gt;
                  XMLSignatureFactory fac = XMLSignatureFactory.getInstance(&quot;DOM&quot;);
                  List content = Collections.singletonList(fac.newManifest(references)));
                  XMLObject object = factory.newXMLObject(content, &quot;object-1&quot;, null, null);
                  &lt;/pre&gt;
                  &lt;p&gt;Note that this class is named &lt;code&gt;XMLObject&lt;/code&gt; rather than
                  &lt;code&gt;Object&lt;/code&gt; to avoid naming clashes with the existing{@link java.lang.Object java.lang.Object} class.                
                <author>
                    Sean Mullan                    
                </author>
                <author>
                    JSR 105 Expert Group                    
                </author>
                <author>
                    Joyce L. Leung                    
                </author>
                <since>
                    1.6                    
                </since>
                <see>
                    XMLSignatureFactory#newXMLObject(List,String,String,String)                    
                </see>
            </javadoc>
            <declaration name="TYPE" type="String" line="37"/>
            <javadoc line="37">
                URI that identifies the &lt;code&gt;Object&lt;/code&gt; element (this can be
                  specified as the value of the &lt;code&gt;type&lt;/code&gt; parameter of the{@link Reference} class to identify the referent&apos;s type).                
            </javadoc>
            <method name="getContent" type="List" line="42"/>
            <javadoc line="42">
                Returns an {@link java.util.Collections#unmodifiableList unmodifiable
                  list} of {@link XMLStructure}s contained in this &lt;code&gt;XMLObject&lt;/code&gt;,
                  which represent elements from any namespace.
                  &lt;p&gt;If there is a public subclass representing the type of
                  &lt;code&gt;XMLStructure&lt;/code&gt;, it is returned as an instance of that class
                  (ex: a &lt;code&gt;SignatureProperties&lt;/code&gt; element would be returned
                  as an instance of {@link javax.xml.crypto.dsig.SignatureProperties}).                
                <return>
                    an unmodifiable list of &lt;code&gt;XMLStructure&lt;/code&gt;s (may be empty
                      but never &lt;code&gt;null&lt;/code&gt;)                    
                </return>
            </javadoc>
            <method name="getId" type="String" line="54"/>
            <javadoc line="54">
                Returns the Id of this &lt;code&gt;XMLObject&lt;/code&gt;.                
                <return>
                    the Id (or &lt;code&gt;null&lt;/code&gt; if not specified)                    
                </return>
            </javadoc>
            <method name="getMimeType" type="String" line="59"/>
            <javadoc line="59">
                Returns the mime type of this &lt;code&gt;XMLObject&lt;/code&gt;. The
                  mime type is an optional attribute which describes the data within this
                  &lt;code&gt;XMLObject&lt;/code&gt; (independent of its encoding).                
                <return>
                    the mime type (or &lt;code&gt;null&lt;/code&gt; if not specified)                    
                </return>
            </javadoc>
            <method name="getEncoding" type="String" line="66"/>
            <javadoc line="66">
                Returns the encoding URI of this &lt;code&gt;XMLObject&lt;/code&gt;. The encoding
                  URI identifies the method by which the object is encoded.                
                <return>
                    the encoding URI (or &lt;code&gt;null&lt;/code&gt; if not specified)                    
                </return>
            </javadoc>
        </interface>
    </source>