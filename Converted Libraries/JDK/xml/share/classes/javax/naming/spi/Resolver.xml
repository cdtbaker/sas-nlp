<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.naming.spi">
        <import package="javax.naming.Context"/>
        <import package="javax.naming.Name"/>
        <import package="javax.naming.NamingException"/>
        <interface name="Resolver">
            <javadoc line="5">
                This interface represents an &quot;intermediate context&quot; for name resolution.
                  &lt;p&gt;
                  The Resolver interface contains methods that are implemented by contexts
                  that do not support subtypes of Context, but which can act as
                  intermediate contexts for resolution purposes.
                  &lt;p&gt;
                  A &lt;tt&gt;Name&lt;/tt&gt; parameter passed to any method is owned
                  by the caller.  The service provider will not modify the object
                  or keep a reference to it.
                  A &lt;tt&gt;ResolveResult&lt;/tt&gt; object returned by any
                  method is owned by the caller.  The caller may subsequently modify it;
                  the service provider may not.                
                <author>
                    Rosanna Lee                    
                </author>
                <author>
                    Scott Seligman                    
                </author>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="resolveToClass" type="ResolveResult" line="23"/>
            <javadoc line="23">
                Partially resolves a name.  Stops at the first
                  context that is an instance of a given subtype of
                  &lt;code&gt;Context&lt;/code&gt;.                
                <param>
                    namethe name to resolve                    
                </param>
                <param>
                    contextTypethe type of object to resolve.  This should
                      be a subtype of <code>Context</code>.                    
                </param>
                <return>
                    the object that was found, along with the unresolved
                      suffix of <code>name</code>.  Cannot be null.                    
                </return>
                <throws>
                    javax.naming.NotContextExceptionif no context of the appropriate type is found                    
                </throws>
                <throws>
                    NamingException if a naming exception was encountered                    
                </throws>
                <see>
                    #resolveToClass(String,Class)                    
                </see>
            </javadoc>
            <method name="resolveToClass" type="ResolveResult" line="37"/>
            <javadoc line="37">
                Partially resolves a name.
                  See {@link #resolveToClass(Name,Class)} for details.                
                <param>
                    namethe name to resolve                    
                </param>
                <param>
                    contextTypethe type of object to resolve.  This should
                      be a subtype of <code>Context</code>.                    
                </param>
                <return>
                    the object that was found, along with the unresolved
                      suffix of <code>name</code>.  Cannot be null.                    
                </return>
                <throws>
                    javax.naming.NotContextExceptionif no context of the appropriate type is found                    
                </throws>
                <throws>
                    NamingException if a naming exception was encountered                    
                </throws>
            </javadoc>
        </interface>
    </source>