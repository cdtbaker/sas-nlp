<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.naming.spi">
        <import package="java.util.Hashtable"/>
        <import package="javax.naming"/>
        <interface name="InitialContextFactory">
            <javadoc line="4">
                This interface represents a factory that creates an initial context.
                  &lt;p&gt;
                  The JNDI framework allows for different initial context implementations
                  to be specified at runtime.  The initial context is created using
                  an &lt;em&gt;initial context factory&lt;/em&gt;.
                  An initial context factory must implement the InitialContextFactory
                  interface, which provides a method for creating instances of initial
                  context that implement the Context interface.
                  In addition, the factory class must be public and must have a public
                  constructor that accepts no arguments.                
                <author>
                    Rosanna Lee                    
                </author>
                <author>
                    Scott Seligman                    
                </author>
                <see>
                    InitialContextFactoryBuilder                    
                </see>
                <see>
                    NamingManager#getInitialContext                    
                </see>
                <see>
                    javax.naming.InitialContext                    
                </see>
                <see>
                    javax.naming.directory.InitialDirContext                    
                </see>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="getInitialContext" type="Context" line="24"/>
            <javadoc line="24">
                Creates an Initial Context for beginning name resolution.
                  Special requirements of this context are supplied
                  using &lt;code&gt;environment&lt;/code&gt;.
                  &lt;p&gt;
                  The environment parameter is owned by the caller.
                  The implementation will not modify the object or keep a reference
                  to it, although it may keep a reference to a clone or copy.                
                <param>
                    environment The possibly null environment
                      specifying information to be used in the creation
                      of the initial context.                    
                </param>
                <return>
                    A non-null initial context object that implements the Context
                      interface.                    
                </return>
                <exception>
                    NamingException If cannot create an initial context.                    
                </exception>
            </javadoc>
        </interface>
    </source>