<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.naming">
        <class name="Binding" line="2">
            <extends class="NameClassPair"/>
            <javadoc line="2">
                This class represents a name-to-object binding found in a context.
                  &lt;p&gt;
                  A context consists of name-to-object bindings.
                  The Binding class represents such a binding.  It consists
                  of a name and an object. The &lt;code&gt;Context.listBindings()&lt;/code&gt;
                  method returns an enumeration of Binding.
                  &lt;p&gt;
                  Use subclassing for naming systems that generate contents of
                  a binding dynamically.
                  &lt;p&gt;
                  A Binding instance is not synchronized against concurrent access by multiple
                  threads. Threads that need to access a Binding concurrently should
                  synchronize amongst themselves and provide the necessary locking.                
                <author>
                    Rosanna Lee                    
                </author>
                <author>
                    Scott Seligman                    
                </author>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <declaration name="boundObj" type="Object" line="21"/>
            <javadoc line="21">
                Contains this binding&apos;s object.
                  It is initialized by the constuctor and can be updated using
                  &lt;tt&gt;setObject&lt;/tt&gt;.                
                <serial>
                                        
                </serial>
                <see>
                    #getObject                    
                </see>
                <see>
                    #setObject                    
                </see>
            </javadoc>
            <javadoc line="30">
                Constructs an instance of a Binding given its name and object.
                  &lt;p&gt;
                  &lt;tt&gt;getClassName()&lt;/tt&gt; will return
                  the class name of &lt;tt&gt;obj&lt;/tt&gt; (or null if &lt;tt&gt;obj&lt;/tt&gt; is null)
                  unless the class name has been explicitly set using &lt;tt&gt;setClassName()&lt;/tt&gt;                
                <param>
                    name    The non-null name of the object. It is relative
                      to the &lt;em&gt;target context&lt;/em&gt; (which is
                      named by the first parameter of the &lt;code&gt;listBindings()&lt;/code&gt; method)                    
                </param>
                <param>
                    obj     The possibly null object bound to name.                    
                </param>
                <see>
                    NameClassPair#setClassName                    
                </see>
            </javadoc>
            <method name="Binding" type="constructor" line="42">
                <params>
                    <param name="name" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <javadoc line="46">
                Constructs an instance of a Binding given its name, object, and whether
                  the name is relative.
                  &lt;p&gt;
                  &lt;tt&gt;getClassName()&lt;/tt&gt; will return the class name of &lt;tt&gt;obj&lt;/tt&gt;
                  (or null if &lt;tt&gt;obj&lt;/tt&gt; is null) unless the class name has been
                  explicitly set using &lt;tt&gt;setClassName()&lt;/tt&gt;                
                <param>
                    name    The non-null string name of the object.                    
                </param>
                <param>
                    obj     The possibly null object bound to name.                    
                </param>
                <param>
                    isRelative true if &lt;code&gt;name&lt;/code&gt; is a name relative
                      to the target context (which is named by
                      the first parameter of the &lt;code&gt;listBindings()&lt;/code&gt; method);
                      false if &lt;code&gt;name&lt;/code&gt; is a URL string.                    
                </param>
                <see>
                    NameClassPair#isRelative                    
                </see>
                <see>
                    NameClassPair#setRelative                    
                </see>
                <see>
                    NameClassPair#setClassName                    
                </see>
            </javadoc>
            <method name="Binding" type="constructor" line="63">
                <params>
                    <param name="name" type="String"/>
                    <param name="obj" type="Object"/>
                    <param name="isRelative" type="boolean"/>
                </params>
            </method>
            <javadoc line="67">
                Constructs an instance of a Binding given its name, class name, and object.                
                <param>
                    name    The non-null name of the object. It is relative
                      to the &lt;em&gt;target context&lt;/em&gt; (which is
                      named by the first parameter of the &lt;code&gt;listBindings()&lt;/code&gt; method)                    
                </param>
                <param>
                    className       The possibly null class name of the object
                      bound to &lt;tt&gt;name&lt;/tt&gt;. If null, the class name of &lt;tt&gt;obj&lt;/tt&gt; is
                      returned by &lt;tt&gt;getClassName()&lt;/tt&gt;. If &lt;tt&gt;obj&lt;/tt&gt; is also
                      null, &lt;tt&gt;getClassName()&lt;/tt&gt; will return null.                    
                </param>
                <param>
                    obj     The possibly null object bound to name.                    
                </param>
                <see>
                    NameClassPair#setClassName                    
                </see>
            </javadoc>
            <method name="Binding" type="constructor" line="79">
                <params>
                    <param name="name" type="String"/>
                    <param name="className" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <javadoc line="83">
                Constructs an instance of a Binding given its
                  name, class name, object, and whether the name is relative.                
                <param>
                    name    The non-null string name of the object.                    
                </param>
                <param>
                    className       The possibly null class name of the object
                      bound to &lt;tt&gt;name&lt;/tt&gt;. If null, the class name of &lt;tt&gt;obj&lt;/tt&gt; is
                      returned by &lt;tt&gt;getClassName()&lt;/tt&gt;. If &lt;tt&gt;obj&lt;/tt&gt; is also
                      null, &lt;tt&gt;getClassName()&lt;/tt&gt; will return null.                    
                </param>
                <param>
                    obj     The possibly null object bound to name.                    
                </param>
                <param>
                    isRelative true if &lt;code&gt;name&lt;/code&gt; is a name relative
                      to the target context (which is named by
                      the first parameter of the &lt;code&gt;listBindings()&lt;/code&gt; method);
                      false if &lt;code&gt;name&lt;/code&gt; is a URL string.                    
                </param>
                <see>
                    NameClassPair#isRelative                    
                </see>
                <see>
                    NameClassPair#setRelative                    
                </see>
                <see>
                    NameClassPair#setClassName                    
                </see>
            </javadoc>
            <method name="Binding" type="constructor" line="100">
                <params>
                    <param name="name" type="String"/>
                    <param name="className" type="String"/>
                    <param name="obj" type="Object"/>
                    <param name="isRelative" type="boolean"/>
                </params>
            </method>
            <javadoc line="104">
                Retrieves the class name of the object bound to the name of this binding.
                  If the class name has been set explicitly, return it.
                  Otherwise, if this binding contains a non-null object,
                  that object&apos;s class name is used. Otherwise, null is returned.                
                <return>
                    A possibly null string containing class name of object bound.                    
                </return>
            </javadoc>
            <method name="getClassName" type="String" line="111">
                <declaration name="cname" type="String" line="112"/>
                <scope line="113"/>
            </method>
            <javadoc line="119">
                Retrieves the object bound to the name of this binding.                
                <return>
                    The object bound; null if this binding does not contain an object.                    
                </return>
                <see>
                    #setObject                    
                </see>
            </javadoc>
            <method name="getObject" type="Object" line="124"/>
            <javadoc line="127">
                Sets the object associated with this binding.                
                <param>
                    obj The possibly null object to use.                    
                </param>
                <see>
                    #getObject                    
                </see>
            </javadoc>
            <method name="setObject" type="void" line="132">
                <params>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <javadoc line="135">
                Generates the string representation of this binding.
                  The string representation consists of the string representation
                  of the name/class pair and the string representation of
                  this binding&apos;s object, separated by &apos;:&apos;.
                  The contents of this string is useful
                  for debugging and is not meant to be interpreted programmatically.                
                <return>
                    The non-null string representation of this binding.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="144"/>
            <declaration name="serialVersionUID" type="long" line="147"/>
            <javadoc line="147">
                Use serialVersionUID from JNDI 1.1.1 for interoperability                
            </javadoc>
        </class>
    </source>