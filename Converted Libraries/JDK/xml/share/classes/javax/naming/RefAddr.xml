<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.naming">
        <class name="RefAddr" line="2">
            <implements interface="java.io.Serializable"/>
            <javadoc line="2">
                This class represents the address of a communications end-point.
                  It consists of a type that describes the communication mechanism
                  and an address contents determined by an RefAddr subclass.
                  &lt;p&gt;
                  For example, an address type could be &quot;BSD Printer Address&quot;,
                  which specifies that it is an address to be used with the BSD printing
                  protocol. Its contents could be the machine name identifying the
                  location of the printer server that understands this protocol.
                  &lt;p&gt;
                  A RefAddr is contained within a Reference.
                  &lt;p&gt;
                  RefAddr is an abstract class. Concrete implementations of it
                  determine its synchronization properties.                
                <author>
                    Rosanna Lee                    
                </author>
                <author>
                    Scott Seligman                    
                </author>
                <see>
                    Reference                    
                </see>
                <see>
                    LinkRef                    
                </see>
                <see>
                    StringRefAddr                    
                </see>
                <see>
                    BinaryRefAddr                    
                </see>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <declaration name="addrType" type="String" line="25"/>
            <javadoc line="25">
                Contains the type of this address.                
                <serial>
                                        
                </serial>
            </javadoc>
            <javadoc line="30">
                Constructs a new instance of RefAddr using its address type.                
                <param>
                    addrType A non-null string describing the type of the address.                    
                </param>
            </javadoc>
            <method name="RefAddr" type="constructor" line="34">
                <params>
                    <param name="addrType" type="String"/>
                </params>
            </method>
            <javadoc line="37">
                Retrieves the address type of this address.                
                <return>
                    The non-null address type of this address.                    
                </return>
            </javadoc>
            <method name="getType" type="String" line="41"/>
            <method name="getContent" type="Object" line="44"/>
            <javadoc line="44">
                Retrieves the contents of this address.                
                <return>
                    The possibly null address contents.                    
                </return>
            </javadoc>
            <javadoc line="49">
                Determines whether obj is equal to this RefAddr.
                  &lt;p&gt;
                  obj is equal to this RefAddr all of these conditions are true
                  &lt;ul&gt; non-null
                  &lt;li&gt; instance of RefAddr
                  &lt;li&gt; obj has the same address type as this RefAddr (using String.compareTo())
                  &lt;li&gt; both obj and this RefAddr&apos;s contents are null or they are equal
                  (using the equals() test).
                  &lt;/ul&gt;                
                <param>
                    obj possibly null obj to check.                    
                </param>
                <return>
                    true if obj is equal to this refaddr; false otherwise.                    
                </return>
                <see>
                    #getContent                    
                </see>
                <see>
                    #getType                    
                </see>
            </javadoc>
            <method name="equals" type="boolean" line="64">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="65">
                    <declaration name="target" type="RefAddr" line="66"/>
                    <scope line="67">
                        <declaration name="thisobj" type="Object" line="68"/>
                        <declaration name="thatobj" type="Object" line="69"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="76">
                Computes the hash code of this address using its address type and contents.
                  The hash code is the sum of the hash code of the address type and
                  the hash code of the address contents.                
                <return>
                    The hash code of this address as an int.                    
                </return>
                <see>
                    java.lang.Object#hashCode                    
                </see>
            </javadoc>
            <method name="hashCode" type="int" line="83"/>
            <javadoc line="86">
                Generates the string representation of this address.
                  The string consists of the address&apos;s type and contents with labels.
                  This representation is intended for display only and not to be parsed.                
                <return>
                    The non-null string representation of this address.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="92">
                <declaration name="str" type="StringBuffer" line="93"/>
            </method>
            <declaration name="serialVersionUID" type="long" line="97"/>
            <javadoc line="97">
                Use serialVersionUID from JNDI 1.1.1 for interoperability                
            </javadoc>
        </class>
    </source>