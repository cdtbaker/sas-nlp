<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.naming.ldap">
        <import package="java.io.IOException"/>
        <import package="com.sun.jndi.ldap.Ber"/>
        <import package="com.sun.jndi.ldap.BerEncoder"/>
        <class name="PagedResultsControl" line="5">
            <extends class="BasicControl"/>
            <javadoc line="5">
                Requests that the results of a search operation be returned by the LDAP
                  server in batches of a specified size.
                  The requestor controls the rate at which batches are returned by the rate
                  at which it invokes search operations.
                  &lt;p&gt;
                  The following code sample shows how the class may be used:
                  &lt;pre&gt;
                  // Open an LDAP association
                  LdapContext ctx = new InitialLdapContext();
                  // Activate paged results
                  int pageSize = 20; // 20 entries per page
                  byte[] cookie = null;
                  int total;
                  ctx.setRequestControls(new Control[]{
                  new PagedResultsControl(pageSize, Control.CRITICAL) });
                  do {
                  // Perform the search
                  NamingEnumeration results =
                  ctx.search(&quot;&quot;, &quot;(objectclass=)&quot;, new SearchControls());
                  // Iterate over a batch of search results
                  while (results != null &amp;&amp; results.hasMore()) {
                  // Display an entry
                  SearchResult entry = (SearchResult)results.next();
                  System.out.println(entry.getName());
                  System.out.println(entry.getAttributes());
                  // Handle the entry&apos;s response controls (if any)
                  if (entry instanceof HasControls) {
                  // ((HasControls)entry).getControls();
                  }
                  }
                  // Examine the paged results control response
                  Control[] controls = ctx.getResponseControls();
                  if (controls != null) {
                  for (int i = 0; i &lt; controls.length; i++) {
                  if (controls[i] instanceof PagedResultsResponseControl) {
                  PagedResultsResponseControl prrc =
                  (PagedResultsResponseControl)controls[i];
                  total = prrc.getResultSize();
                  cookie = prrc.getCookie();
                  } else {
                  // Handle other response controls (if any)
                  }
                  }
                  }
                  // Re-activate paged results
                  ctx.setRequestControls(new Control[]{
                  new PagedResultsControl(pageSize, cookie, Control.CRITICAL) });
                  } while (cookie != null);
                  // Close the LDAP association
                  ctx.close();
                  ...
                  &lt;/pre&gt;
                  &lt;p&gt;
                  This class implements the LDAPv3 Control for paged-results as defined in
                  &lt;a href=&quot;http://www.ietf.org/rfc/rfc2696.txt&quot;&gt;RFC 2696&lt;/a&gt;.
                  The control&apos;s value has the following ASN.1 definition:
                  &lt;pre&gt;
                  realSearchControlValue ::= SEQUENCE {
                  size      INTEGER (0..maxInt),
                  -- requested page size from client
                  -- result set size estimate from server
                  cookie    OCTET STRING
                  }
                  &lt;/pre&gt;                
                <since>
                    1.5                    
                </since>
                <see>
                    PagedResultsResponseControl                    
                </see>
                <author>
                    Vincent Ryan                    
                </author>
            </javadoc>
            <declaration name="OID" type="String" line="75"/>
            <javadoc line="75">
                The paged-results control&apos;s assigned object identifier
                  is 1.2.840.113556.1.4.319.                
            </javadoc>
            <declaration name="EMPTY_COOKIE" type="byte[]" line="80"/>
            <declaration name="serialVersionUID" type="long" line="81"/>
            <javadoc line="82">
                Constructs a control to set the number of entries to be returned per
                  page of results.                
                <param>
                    pageSize        The number of entries to return in a page.                    
                </param>
                <param>
                    criticality     If true then the server must honor the control
                      and return search results as indicated by
                      pageSize or refuse to perform the search.
                      If false, then the server need not honor the
                      control.                    
                </param>
                <exception>
                    IOException   If an error was encountered while encoding the
                      supplied arguments into a control.                    
                </exception>
            </javadoc>
            <method name="PagedResultsControl" type="constructor" line="94">
                <params>
                    <param name="pageSize" type="int"/>
                    <param name="criticality" type="boolean"/>
                </params>
            </method>
            <javadoc line="98">
                Constructs a control to set the number of entries to be returned per
                  page of results. The cookie is provided by the server and may be
                  obtained from the paged-results response control.
                  &lt;p&gt;
                  A sequence of paged-results can be abandoned by setting the pageSize
                  to zero and setting the cookie to the last cookie received from the
                  server.                
                <param>
                    pageSize        The number of entries to return in a page.                    
                </param>
                <param>
                    cookie          A possibly null server-generated cookie.                    
                </param>
                <param>
                    criticality     If true then the server must honor the control
                      and return search results as indicated by
                      pageSize or refuse to perform the search.
                      If false, then the server need not honor the
                      control.                    
                </param>
                <exception>
                    IOException   If an error was encountered while encoding the
                      supplied arguments into a control.                    
                </exception>
            </javadoc>
            <method name="PagedResultsControl" type="constructor" line="116">
                <params>
                    <param name="pageSize" type="int"/>
                    <param name="cookie" type="byte[]"/>
                    <param name="criticality" type="boolean"/>
                </params>
                <scope line="118"/>
            </method>
            <method name="setEncodedValue" type="byte[]" line="123">
                <params>
                    <param name="pageSize" type="int"/>
                    <param name="cookie" type="byte[]"/>
                </params>
                <declaration name="ber" type="BerEncoder" line="124"/>
            </method>
        </class>
    </source>