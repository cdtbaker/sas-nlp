<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.naming">
        <class name="LinkRef" line="2">
            <extends class="Reference"/>
            <javadoc line="2">
                This class represents a Reference whose contents is a name, called the link name,
                  that is bound to an atomic name in a context.
                  &lt;p&gt;
                  The name is a URL, or a name to be resolved relative to the initial
                  context, or if the first character of the name is &quot;.&quot;, the name
                  is relative to the context in which the link is bound.
                  &lt;p&gt;
                  Normal resolution of names in context operations always follow links.
                  Resolution of the link name itself may cause resolution to pass through
                  other  links. This gives rise to the possibility of a cycle of links whose
                  resolution could not terminate normally. As a simple means to avoid such
                  non-terminating resolutions, service providers may define limits on the
                  number of links that may be involved in any single operation invoked
                  by the caller.
                  &lt;p&gt;
                  A LinkRef contains a single StringRefAddr, whose type is &quot;LinkAddress&quot;,
                  and whose contents is the link name. The class name field of the
                  Reference is that of this (LinkRef) class.
                  &lt;p&gt;
                  LinkRef is bound to a name using the normal Context.bind()/rebind(), and
                  DirContext.bind()/rebind(). Context.lookupLink() is used to retrieve the link
                  itself if the terminal atomic name is bound to a link.
                  &lt;p&gt;
                  Many naming systems support a native notion of link that may be used
                  within the naming system itself. JNDI does not specify whether
                  there is any relationship between such native links and JNDI links.
                  &lt;p&gt;
                  A LinkRef instance is not synchronized against concurrent access by multiple
                  threads. Threads that need to access a LinkRef instance concurrently should
                  synchronize amongst themselves and provide the necessary locking.                
                <author>
                    Rosanna Lee                    
                </author>
                <author>
                    Scott Seligman                    
                </author>
                <see>
                    LinkException                    
                </see>
                <see>
                    LinkLoopException                    
                </see>
                <see>
                    MalformedLinkException                    
                </see>
                <see>
                    Context#lookupLink                    
                </see>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <declaration name="linkClassName" type="String" line="42"/>
            <declaration name="linkAddrType" type="String" line="43"/>
            <javadoc line="44">
                Constructs a LinkRef for a name.                
                <param>
                    linkName The non-null name for which to create this link.                    
                </param>
            </javadoc>
            <method name="LinkRef" type="constructor" line="48">
                <params>
                    <param name="linkName" type="Name"/>
                </params>
            </method>
            <javadoc line="51">
                Constructs a LinkRef for a string name.                
                <param>
                    linkName The non-null name for which to create this link.                    
                </param>
            </javadoc>
            <method name="LinkRef" type="constructor" line="55">
                <params>
                    <param name="linkName" type="String"/>
                </params>
            </method>
            <javadoc line="58">
                Retrieves the name of this link.                
                <return>
                    The non-null name of this link.                    
                </return>
                <exception>
                    MalformedLinkException If a link name could not be extracted                    
                </exception>
                <exception>
                    NamingException If a naming exception was encountered.                    
                </exception>
            </javadoc>
            <method name="getLinkName" type="String" line="64">
                <scope line="65">
                    <declaration name="addr" type="RefAddr" line="66"/>
                    <scope line="67"/>
                </scope>
            </method>
            <declaration name="serialVersionUID" type="long" line="73"/>
            <javadoc line="73">
                Use serialVersionUID from JNDI 1.1.1 for interoperability                
            </javadoc>
        </class>
    </source>