<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.naming">
        <class name="BinaryRefAddr" line="28">
            <extends class="RefAddr"/>
            <comment line="59">
                The serialized form of a BinaryRefAddr object consists of its type
                 name String and a byte array containing its &quot;contents&quot;.                
            </comment>
            <javadoc line="28">
                This class represents the binary form of the address of
                  a communications end-point.
                  &lt;p&gt;
                  A BinaryRefAddr consists of a type that describes the communication mechanism
                  and an opaque buffer containing the address description
                  specific to that communication mechanism. The format and interpretation of
                  the address type and the contents of the opaque buffer are based on
                  the agreement of three parties: the client that uses the address,
                  the object/server that can be reached using the address,
                  and the administrator or program that creates the address.
                  &lt;p&gt;
                  An example of a binary reference address is an BER X.500 presentation address.
                  Another example of a binary reference address is a serialized form of
                  a service&apos;s object handle.
                  &lt;p&gt;
                  A binary reference address is immutable in the sense that its fields
                  once created, cannot be replaced. However, it is possible to access
                  the byte array used to hold the opaque buffer. Programs are strongly
                  recommended against changing this byte array. Changes to this
                  byte array need to be explicitly synchronized.                
                <author>
                    Rosanna Lee                    
                </author>
                <author>
                    Scott Seligman                    
                </author>
                <see>
                    RefAddr                    
                </see>
                <see>
                    StringRefAddr                    
                </see>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <declaration name="buf" type="byte[]" line="64"/>
            <javadoc line="64">
                Contains the bytes of the address.
                  This field is initialized by the constructor and returned
                  using getAddressBytes() and getAddressContents().                
                <serial>
                                        
                </serial>
            </javadoc>
            <javadoc line="72">
                Constructs a new instance of BinaryRefAddr using its address type and a byte
                  array for contents.                
                <param>
                    addrType A non-null string describing the type of the address.                    
                </param>
                <param>
                    src      The non-null contents of the address as a byte array.
                      The contents of src is copied into the new BinaryRefAddr.                    
                </param>
            </javadoc>
            <method name="BinaryRefAddr" type="constructor" line="80">
                <params>
                    <param name="addrType" type="String"/>
                    <param name="src" type="byte[]"/>
                </params>
            </method>
            <javadoc line="84">
                Constructs a new instance of BinaryRefAddr using its address type and
                  a region of a byte array for contents.                
                <param>
                    addrType A non-null string describing the type of the address.                    
                </param>
                <param>
                    src      The non-null contents of the address as a byte array.
                      The contents of src is copied into the new BinaryRefAddr.                    
                </param>
                <param>
                    offset   The starting index in src to get the bytes.
                      0 <= offset <= src.length.                    
                </param>
                <param>
                    count    The number of bytes to extract from src.
                      0 <= count <= src.length-offset.                    
                </param>
            </javadoc>
            <method name="BinaryRefAddr" type="constructor" line="96">
                <params>
                    <param name="addrType" type="String"/>
                    <param name="src" type="byte[]"/>
                    <param name="offset" type="int"/>
                    <param name="count" type="int"/>
                </params>
            </method>
            <javadoc line="102">
                Retrieves the contents of this address as an Object.
                  The result is a byte array.
                  Changes to this array will affect this BinaryRefAddr&apos;s contents.
                  Programs are recommended against changing this array&apos;s contents
                  and to lock the buffer if they need to change it.                
                <return>
                    The non-null buffer containing this address's contents.                    
                </return>
            </javadoc>
            <method name="getContent" type="Object" line="111"/>
            <javadoc line="116">
                Determines whether obj is equal to this address.  It is equal if
                  it contains the same address type and their contents are byte-wise
                  equivalent.                
                <param>
                    obj      The possibly null object to check.                    
                </param>
                <return>
                    true if the object is equal; false otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="123">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="124">
                    <declaration name="target" type="BinaryRefAddr" line="125"/>
                    <scope line="126"/>
                </scope>
            </method>
            <javadoc line="141">
                Computes the hash code of this address using its address type and contents.
                  Two BinaryRefAddrs have the same hash code if they have
                  the same address type and the same contents.
                  It is also possible for different BinaryRefAddrs to have
                  the same hash code.                
                <return>
                    The hash code of this address as an int.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="150">
                <comment line="154">
                    %%% improve later                    
                </comment>
                <declaration name="hash" type="int" line="151"/>
                <scope line="152"/>
            </method>
            <javadoc line="158">
                Generates the string representation of this address.
                  The string consists of the address&apos;s type and contents with labels.
                  The first 32 bytes of contents are displayed (in hexadecimal).
                  If there are more than 32 bytes, &quot;...&quot; is used to indicate more.
                  This string is meant to used for debugging purposes and not
                  meant to be interpreted programmatically.                
                <return>
                    The non-null string representation of this address.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="167">
                <declaration name="str" type="StringBuffer" line="168"/>
                <scope line="171"/>
            </method>
            <declaration name="serialVersionUID" type="long" line="179"/>
            <javadoc line="179">
                Use serialVersionUID from JNDI 1.1.1 for interoperability                
            </javadoc>
        </class>
    </source>