<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.naming.event">
        <import package="javax.naming.Name"/>
        <import package="javax.naming.NamingException"/>
        <import package="javax.naming.directory.DirContext"/>
        <import package="javax.naming.directory.SearchControls"/>
        <interface name="EventDirContext">
            <implements interface="EventContext"/>
            <implements interface="DirContext"/>
            <javadoc line="6">
                Contains methods for registering listeners to be notified
                  of events fired when objects named in a directory context changes.
                  &lt;p&gt;
                  The methods in this interface support identification of objects by
                  &lt;A HREF=&quot;http://www.ietf.org/rfc/rfc2254.txt&quot;&gt;RFC 2254&lt;/a&gt;
                  search filters.
                  &lt;P&gt;Using the search filter, it is possible to register interest in objects
                  that do not exist at the time of registration but later come into existence and
                  satisfy the filter.  However, there might be limitations in the extent
                  to which this can be supported by the service provider and underlying
                  protocol/service.  If the caller submits a filter that cannot be
                  supported in this way, &lt;tt&gt;addNamingListener()&lt;/tt&gt; throws an
                  &lt;tt&gt;InvalidSearchFilterException&lt;/tt&gt;.
                  &lt;p&gt;
                  See &lt;tt&gt;EventContext&lt;/tt&gt; for a description of event source
                  and target, and information about listener registration/deregistration
                  that are also applicable to methods in this interface.
                  See the
                  &lt;a href=package-summary.html#THREADING&gt;package description&lt;/a&gt;
                  for information on threading issues.
                  &lt;p&gt;
                  A &lt;tt&gt;SearchControls&lt;/tt&gt; or array object
                  passed as a parameter to any method is owned by the caller.
                  The service provider will not modify the object or keep a reference to it.                
                <author>
                    Rosanna Lee                    
                </author>
                <author>
                    Scott Seligman                    
                </author>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="addNamingListener" type="void" line="36"/>
            <javadoc line="36">
                Adds a listener for receiving naming events fired
                  when objects identified by the search filter &lt;tt&gt;filter&lt;/tt&gt; at
                  the object named by target are modified.
                  &lt;p&gt;
                  The scope, returningObj flag, and returningAttributes flag from
                  the search controls &lt;tt&gt;ctls&lt;/tt&gt; are used to control the selection
                  of objects that the listener is interested in,
                  and determines what information is returned in the eventual
                  &lt;tt&gt;NamingEvent&lt;/tt&gt; object. Note that the requested
                  information to be returned might not be present in the &lt;tt&gt;NamingEvent&lt;/tt&gt;
                  object if they are unavailable or could not be obtained by the
                  service provider or service.                
                <param>
                    target The nonnull name of the object resolved relative to this context.                    
                </param>
                <param>
                    filter The nonnull string filter (see RFC2254).                    
                </param>
                <param>
                    ctls   The possibly null search controls. If null, the default
                      search controls are used.                    
                </param>
                <param>
                    l  The nonnull listener.                    
                </param>
                <exception>
                    NamingException If a problem was encountered while
                      adding the listener.                    
                </exception>
                <see>
                    EventContext#removeNamingListener                    
                </see>
                <see>
                    javax.naming.directory.DirContext#search(javax.naming.Name,java.lang.String,javax.naming.directory.SearchControls)                    
                </see>
            </javadoc>
            <method name="addNamingListener" type="void" line="60"/>
            <javadoc line="60">
                Adds a listener for receiving naming events fired when
                  objects identified by the search filter &lt;tt&gt;filter&lt;/tt&gt; at the
                  object named by the string target name are modified.
                  See the overload that accepts a &lt;tt&gt;Name&lt;/tt&gt; for details of
                  how this method behaves.                
                <param>
                    target The nonnull string name of the object resolved relative to this context.                    
                </param>
                <param>
                    filter The nonnull string filter (see RFC2254).                    
                </param>
                <param>
                    ctls   The possibly null search controls. If null, the default
                      search controls is used.                    
                </param>
                <param>
                    l  The nonnull listener.                    
                </param>
                <exception>
                    NamingException If a problem was encountered while
                      adding the listener.                    
                </exception>
                <see>
                    EventContext#removeNamingListener                    
                </see>
                <see>
                    javax.naming.directory.DirContext#search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls)                    
                </see>
            </javadoc>
            <method name="addNamingListener" type="void" line="77"/>
            <javadoc line="77">
                Adds a listener for receiving naming events fired
                  when objects identified by the search filter &lt;tt&gt;filter&lt;/tt&gt; and
                  filter arguments at the object named by the target are modified.
                  The scope, returningObj flag, and returningAttributes flag from
                  the search controls &lt;tt&gt;ctls&lt;/tt&gt; are used to control the selection
                  of objects that the listener is interested in,
                  and determines what information is returned in the eventual
                  &lt;tt&gt;NamingEvent&lt;/tt&gt; object.  Note that the requested
                  information to be returned might not be present in the &lt;tt&gt;NamingEvent&lt;/tt&gt;
                  object if they are unavailable or could not be obtained by the
                  service provider or service.                
                <param>
                    target The nonnull name of the object resolved relative to this context.                    
                </param>
                <param>
                    filter The nonnull string filter (see RFC2254).                    
                </param>
                <param>
                    filterArgs The possibly null array of arguments for the filter.                    
                </param>
                <param>
                    ctls   The possibly null search controls. If null, the default
                      search controls are used.                    
                </param>
                <param>
                    l  The nonnull listener.                    
                </param>
                <exception>
                    NamingException If a problem was encountered while
                      adding the listener.                    
                </exception>
                <see>
                    EventContext#removeNamingListener                    
                </see>
                <see>
                    javax.naming.directory.DirContext#search(javax.naming.Name,java.lang.String,java.lang.Object[],javax.naming.directory.SearchControls)                    
                </see>
            </javadoc>
            <method name="addNamingListener" type="void" line="101"/>
            <javadoc line="101">
                Adds a listener for receiving naming events fired when
                  objects identified by the search filter &lt;tt&gt;filter&lt;/tt&gt;
                  and filter arguments at the
                  object named by the string target name are modified.
                  See the overload that accepts a &lt;tt&gt;Name&lt;/tt&gt; for details of
                  how this method behaves.                
                <param>
                    target The nonnull string name of the object resolved relative to this context.                    
                </param>
                <param>
                    filter The nonnull string filter (see RFC2254).                    
                </param>
                <param>
                    filterArgs The possibly null array of arguments for the filter.                    
                </param>
                <param>
                    ctls   The possibly null search controls. If null, the default
                      search controls is used.                    
                </param>
                <param>
                    l  The nonnull listener.                    
                </param>
                <exception>
                    NamingException If a problem was encountered while
                      adding the listener.                    
                </exception>
                <see>
                    EventContext#removeNamingListener                    
                </see>
                <see>
                    javax.naming.directory.DirContext#search(java.lang.String,java.lang.String,java.lang.Object[],javax.naming.directory.SearchControls)                    
                </see>
            </javadoc>
        </interface>
    </source>