<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.naming">
        <class name="LinkException" line="28">
            <extends class="NamingException"/>
            <comment line="59">
                &lt;p&gt;
                 The serialized form of a LinkException object consists of the
                 serialized fields of its NamingException superclass, the link resolved
                 name (a Name object), the link resolved object, link remaining name
                 (a Name object), and the link explanation String.                
            </comment>
            <javadoc line="28">
                This exception is used to describe problems encounter while resolving links.
                  Addition information is added to the base NamingException for pinpointing
                  the problem with the link.
                  &lt;p&gt;
                  Analogous to how NamingException captures name resolution information,
                  LinkException captures &quot;link&quot;-name resolution information pinpointing
                  the problem encountered while resolving a link. All these fields may
                  be null.
                  &lt;ul&gt;
                  &lt;li&gt; Link Resolved Name. Portion of link name that has been resolved.
                  &lt;li&gt; Link Resolved Object. Object to which resolution of link name proceeded.
                  &lt;li&gt; Link Remaining Name. Portion of link name that has not been resolved.
                  &lt;li&gt; Link Explanation. Detail explaining why link resolution failed.
                  &lt;/ul&gt;
                  &lt;p&gt;
                  A LinkException instance is not synchronized against concurrent
                  multithreaded access. Multiple threads trying to access and modify
                  a single LinkException instance should lock the object.                
                <author>
                    Rosanna Lee                    
                </author>
                <author>
                    Scott Seligman                    
                </author>
                <see>
                    Context#lookupLink                    
                </see>
                <see>
                    LinkRef                    
                </see>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <declaration name="linkResolvedName" type="Name" line="67"/>
            <javadoc line="67">
                Contains the part of the link that has been successfully resolved.
                  It is a composite name and can be null.
                  This field is initialized by the constructors.
                  You should access and manipulate this field
                  through its get and set methods.                
                <serial>
                                        
                </serial>
                <see>
                    #getLinkResolvedName                    
                </see>
                <see>
                    #setLinkResolvedName                    
                </see>
            </javadoc>
            <declaration name="linkResolvedObj" type="Object" line="79"/>
            <javadoc line="79">
                Contains the object to which resolution of the part of the link was successful.
                  Can be null. This field is initialized by the constructors.
                  You should access and manipulate this field
                  through its get and set methods.                
                <serial>
                                        
                </serial>
                <see>
                    #getLinkResolvedObj                    
                </see>
                <see>
                    #setLinkResolvedObj                    
                </see>
            </javadoc>
            <declaration name="linkRemainingName" type="Name" line="90"/>
            <javadoc line="90">
                Contains the remaining link name that has not been resolved yet.
                  It is a composite name and can be null.
                  This field is initialized by the constructors.
                  You should access and manipulate this field
                  through its get and set methods.                
                <serial>
                                        
                </serial>
                <see>
                    #getLinkRemainingName                    
                </see>
                <see>
                    #setLinkRemainingName                    
                </see>
            </javadoc>
            <declaration name="linkExplanation" type="String" line="102"/>
            <javadoc line="102">
                Contains the exception of why resolution of the link failed.
                  Can be null. This field is initialized by the constructors.
                  You should access and manipulate this field
                  through its get and set methods.                
                <serial>
                                        
                </serial>
                <see>
                    #getLinkExplanation                    
                </see>
                <see>
                    #setLinkExplanation                    
                </see>
            </javadoc>
            <javadoc line="113">
                Constructs a new instance of LinkException with an explanation
                  All the other fields are initialized to null.                
                <param>
                    explanation     A possibly null string containing additional
                      detail about this exception.                    
                </param>
                <see>
                    java.lang.Throwable#getMessage                    
                </see>
            </javadoc>
            <method name="LinkException" type="constructor" line="120">
                <params>
                    <param name="explanation" type="String"/>
                </params>
            </method>
            <javadoc line="128">
                Constructs a new instance of LinkException.
                  All the non-link-related and link-related fields are initialized to null.                
            </javadoc>
            <method name="LinkException" type="constructor" line="132"/>
            <javadoc line="140">
                Retrieves the leading portion of the link name that was resolved
                  successfully.                
                <return>
                    The part of the link name that was resolved successfully.
                      It is a composite name. It can be null, which means
                      the link resolved name field has not been set.                    
                </return>
                <see>
                    #getLinkResolvedObj                    
                </see>
                <see>
                    #setLinkResolvedName                    
                </see>
            </javadoc>
            <method name="getLinkResolvedName" type="Name" line="150"/>
            <javadoc line="154">
                Retrieves the remaining unresolved portion of the link name.                
                <return>
                    The part of the link name that has not been resolved.
                      It is a composite name. It can be null, which means
                      the link remaining name field has not been set.                    
                </return>
                <see>
                    #setLinkRemainingName                    
                </see>
            </javadoc>
            <method name="getLinkRemainingName" type="Name" line="161"/>
            <javadoc line="165">
                Retrieves the object to which resolution was successful.
                  This is the object to which the resolved link name is bound.                
                <return>
                    The possibly null object that was resolved so far.
                      If null, it means the link resolved object field has not been set.                    
                </return>
                <see>
                    #getLinkResolvedName                    
                </see>
                <see>
                    #setLinkResolvedObj                    
                </see>
            </javadoc>
            <method name="getLinkResolvedObj" type="Object" line="174"/>
            <javadoc line="178">
                Retrieves the explanation associated with the problem encounter
                  when resolving a link.                
                <return>
                    The possibly null detail string explaining more about the problem
                      with resolving a link.
                      If null, it means there is no
                      link detail message for this exception.                    
                </return>
                <see>
                    #setLinkExplanation                    
                </see>
            </javadoc>
            <method name="getLinkExplanation" type="String" line="188"/>
            <javadoc line="192">
                Sets the explanation associated with the problem encounter
                  when resolving a link.                
                <param>
                    msg The possibly null detail string explaining more about the problem
                      with resolving a link. If null, it means no detail will be recorded.                    
                </param>
                <see>
                    #getLinkExplanation                    
                </see>
            </javadoc>
            <method name="setLinkExplanation" type="void" line="200">
                <params>
                    <param name="msg" type="String"/>
                </params>
            </method>
            <javadoc line="204">
                Sets the resolved link name field of this exception.
                  &lt;p&gt;
                  &lt;tt&gt;name&lt;/tt&gt; is a composite name. If the intent is to set
                  this field using a compound name or string, you must
                  &quot;stringify&quot; the compound name, and create a composite
                  name with a single component using the string. You can then
                  invoke this method using the resulting composite name.
                  &lt;p&gt;
                  A copy of &lt;code&gt;name&lt;/code&gt; is made and stored.
                  Subsequent changes to &lt;code&gt;name&lt;/code&gt; does not
                  affect the copy in this NamingException and vice versa.                
                <param>
                    name The name to set resolved link name to. This can be null.
                      If null, it sets the link resolved name field to null.                    
                </param>
                <see>
                    #getLinkResolvedName                    
                </see>
            </javadoc>
            <method name="setLinkResolvedName" type="void" line="222">
                <params>
                    <param name="name" type="Name"/>
                </params>
                <scope line="223"/>
                <scope line="225"/>
            </method>
            <javadoc line="230">
                Sets the remaining link name field of this exception.
                  &lt;p&gt;
                  &lt;tt&gt;name&lt;/tt&gt; is a composite name. If the intent is to set
                  this field using a compound name or string, you must
                  &quot;stringify&quot; the compound name, and create a composite
                  name with a single component using the string. You can then
                  invoke this method using the resulting composite name.
                  &lt;p&gt;
                  A copy of &lt;code&gt;name&lt;/code&gt; is made and stored.
                  Subsequent changes to &lt;code&gt;name&lt;/code&gt; does not
                  affect the copy in this NamingException and vice versa.                
                <param>
                    name The name to set remaining link name to. This can be null.
                      If null, it sets the remaining name field to null.                    
                </param>
                <see>
                    #getLinkRemainingName                    
                </see>
            </javadoc>
            <method name="setLinkRemainingName" type="void" line="247">
                <params>
                    <param name="name" type="Name"/>
                </params>
            </method>
            <javadoc line="254">
                Sets the link resolved object field of this exception.
                  This indicates the last successfully resolved object of link name.                
                <param>
                    obj The object to set link resolved object to. This can be null.
                      If null, the link resolved object field is set to null.                    
                </param>
                <see>
                    #getLinkResolvedObj                    
                </see>
            </javadoc>
            <method name="setLinkResolvedObj" type="void" line="261">
                <params>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <javadoc line="265">
                Generates the string representation of this exception.
                  This string consists of the NamingException information plus
                  the link&apos;s remaining name.
                  This string is used for debugging and not meant to be interpreted
                  programmatically.                
                <return>
                    The non-null string representation of this link exception.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="273"/>
            <javadoc line="278">
                Generates the string representation of this exception.
                  This string consists of the NamingException information plus
                  the additional information of resolving the link.
                  If &apos;detail&apos; is true, the string also contains information on
                  the link resolved object. If false, this method is the same
                  as the form of toString() that accepts no parameters.
                  This string is used for debugging and not meant to be interpreted
                  programmatically.                
                <param>
                    detail  If true, add information about the link resolved
                      object.                    
                </param>
                <return>
                    The non-null string representation of this link exception.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="292">
                <params>
                    <param name="detail" type="boolean"/>
                </params>
            </method>
            <declaration name="serialVersionUID" type="long" line="300"/>
            <javadoc line="300">
                Use serialVersionUID from JNDI 1.1.1 for interoperability                
            </javadoc>
        </class>
    </source>