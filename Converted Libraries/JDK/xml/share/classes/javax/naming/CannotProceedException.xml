<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.naming">
        <import package="java.util.Hashtable"/>
        <class name="CannotProceedException" line="30">
            <extends class="NamingException"/>
            <comment line="56">
                The serialized form of a CannotProceedException object consists of
                 the serialized fields of its NamingException superclass, the remaining new
                 name (a Name object), the environment (a Hashtable), the altName field
                 (a Name object), and the serialized form of the altNameCtx field.                
            </comment>
            <javadoc line="30">
                This exception is thrown to indicate that the operation reached
                  a point in the name where the operation cannot proceed any further.
                  When performing an operation on a composite name, a naming service
                  provider may reach a part of the name that does not belong to its
                  namespace.  At that point, it can construct a
                  CannotProceedException and then invoke methods provided by
                  javax.naming.spi.NamingManager (such as getContinuationContext())
                  to locate another provider to continue the operation.  If this is
                  not possible, this exception is raised to the caller of the
                  context operation.
                  &lt;p&gt;
                  If the program wants to handle this exception in particular, it
                  should catch CannotProceedException explicitly before attempting to
                  catch NamingException.
                  &lt;p&gt;
                  A CannotProceedException instance is not synchronized against concurrent
                  multithreaded access. Multiple threads trying to access and modify
                  CannotProceedException should lock the object.                
                <author>
                    Rosanna Lee                    
                </author>
                <author>
                    Scott Seligman                    
                </author>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <declaration name="remainingNewName" type="Name" line="64"/>
            <javadoc line="64">
                Contains the remaining unresolved part of the second
                  &quot;name&quot; argument to Context.rename().
                  This information necessary for
                  continuing the Context.rename() operation.
                  &lt;p&gt;
                  This field is initialized to null.
                  It should not be manipulated directly:  it should
                  be accessed and updated using getRemainingName() and setRemainingName().                
                <serial>
                                        
                </serial>
                <see>
                    #getRemainingNewName                    
                </see>
                <see>
                    #setRemainingNewName                    
                </see>
            </javadoc>
            <declaration name="environment" type="Hashtable&lt;?,?&gt;" line="80"/>
            <javadoc line="80">
                Contains the environment
                  relevant for the Context or DirContext method that cannot proceed.
                  &lt;p&gt;
                  This field is initialized to null.
                  It should not be manipulated directly:  it should be accessed
                  and updated using getEnvironment() and setEnvironment().                
                <serial>
                                        
                </serial>
                <see>
                    #getEnvironment                    
                </see>
                <see>
                    #setEnvironment                    
                </see>
            </javadoc>
            <declaration name="altName" type="Name" line="94"/>
            <javadoc line="94">
                Contains the name of the resolved object, relative
                  to the context &lt;code&gt;altNameCtx&lt;/code&gt;.  It is a composite name.
                  If null, then no name is specified.
                  See the &lt;code&gt;javax.naming.spi.ObjectFactory.getObjectInstance&lt;/code&gt;
                  method for details on how this is used.
                  &lt;p&gt;
                  This field is initialized to null.
                  It should not be manipulated directly:  it should
                  be accessed and updated using getAltName() and setAltName().                
                <serial>
                                        
                </serial>
                <see>
                    #getAltName                    
                </see>
                <see>
                    #setAltName                    
                </see>
                <see>
                    #altNameCtx                    
                </see>
                <see>
                    javax.naming.spi.ObjectFactory#getObjectInstance                    
                </see>
            </javadoc>
            <declaration name="altNameCtx" type="Context" line="113"/>
            <javadoc line="113">
                Contains the context relative to which
                  &lt;code&gt;altName&lt;/code&gt; is specified.  If null, then the default initial
                  context is implied.
                  See the &lt;code&gt;javax.naming.spi.ObjectFactory.getObjectInstance&lt;/code&gt;
                  method for details on how this is used.
                  &lt;p&gt;
                  This field is initialized to null.
                  It should not be manipulated directly:  it should
                  be accessed and updated using getAltNameCtx() and setAltNameCtx().                
                <serial>
                                        
                </serial>
                <see>
                    #getAltNameCtx                    
                </see>
                <see>
                    #setAltNameCtx                    
                </see>
                <see>
                    #altName                    
                </see>
                <see>
                    javax.naming.spi.ObjectFactory#getObjectInstance                    
                </see>
            </javadoc>
            <javadoc line="132">
                Constructs a new instance of CannotProceedException using an
                  explanation. All unspecified fields default to null.                
                <param>
                    explanation     A possibly null string containing additional
                      detail about this exception.
                      If null, this exception has no detail message.                    
                </param>
                <see>
                    java.lang.Throwable#getMessage                    
                </see>
            </javadoc>
            <method name="CannotProceedException" type="constructor" line="141">
                <params>
                    <param name="explanation" type="String"/>
                </params>
            </method>
            <javadoc line="145">
                Constructs a new instance of CannotProceedException.
                  All fields default to null.                
            </javadoc>
            <method name="CannotProceedException" type="constructor" line="149"/>
            <javadoc line="153">
                Retrieves the environment that was in effect when this exception
                  was created.                
                <return>
                    Possibly null environment property set.
                      null means no environment was recorded for this exception.                    
                </return>
                <see>
                    #setEnvironment                    
                </see>
            </javadoc>
            <method name="getEnvironment" type="Hashtable<?,?>" line="160"/>
            <javadoc line="164">
                Sets the environment that will be returned when getEnvironment()
                  is called.                
                <param>
                    environment A possibly null environment property set.
                      null means no environment is being recorded for
                      this exception.                    
                </param>
                <see>
                    #getEnvironment                    
                </see>
            </javadoc>
            <method name="setEnvironment" type="void" line="172">
                <params>
                    <param name="environment" type="Hashtable<?,?>"/>
                </params>
                <comment line="174">
                    %%% clone it??                    
                </comment>
            </method>
            <javadoc line="176">
                Retrieves the &quot;remaining new name&quot; field of this exception, which is
                  used when this exception is thrown during a rename() operation.                
                <return>
                    The possibly null part of the new name that has not been resolved.
                      It is a composite name. It can be null, which means
                      the remaining new name field has not been set.                    
                </return>
                <see>
                    #setRemainingNewName                    
                </see>
            </javadoc>
            <method name="getRemainingNewName" type="Name" line="186"/>
            <javadoc line="190">
                Sets the &quot;remaining new name&quot; field of this exception.
                  This is the value returned by &lt;code&gt;getRemainingNewName()&lt;/code&gt;.
                  &lt;p&gt;
                  &lt;tt&gt;newName&lt;/tt&gt; is a composite name. If the intent is to set
                  this field using a compound name or string, you must
                  &quot;stringify&quot; the compound name, and create a composite
                  name with a single component using the string. You can then
                  invoke this method using the resulting composite name.
                  &lt;p&gt;
                  A copy of &lt;code&gt;newName&lt;/code&gt; is made and stored.
                  Subsequent changes to &lt;code&gt;name&lt;/code&gt; does not
                  affect the copy in this NamingException and vice versa.                
                <param>
                    newName The possibly null name to set the "remaining new name" to.
                      If null, it sets the remaining name field to null.                    
                </param>
                <see>
                    #getRemainingNewName                    
                </see>
            </javadoc>
            <method name="setRemainingNewName" type="void" line="209">
                <params>
                    <param name="newName" type="Name"/>
                </params>
            </method>
            <javadoc line="216">
                Retrieves the &lt;code&gt;altName&lt;/code&gt; field of this exception.
                  This is the name of the resolved object, relative to the context
                  &lt;code&gt;altNameCtx&lt;/code&gt;. It will be used during a subsequent call to the
                  &lt;code&gt;javax.naming.spi.ObjectFactory.getObjectInstance&lt;/code&gt; method.                
                <return>
                    The name of the resolved object, relative to
                      <code>altNameCtx</code>.
                      It is a composite name.  If null, then no name is specified.                    
                </return>
                <see>
                    #setAltName                    
                </see>
                <see>
                    #getAltNameCtx                    
                </see>
                <see>
                    javax.naming.spi.ObjectFactory#getObjectInstance                    
                </see>
            </javadoc>
            <method name="getAltName" type="Name" line="230"/>
            <javadoc line="234">
                Sets the &lt;code&gt;altName&lt;/code&gt; field of this exception.                
                <param>
                    altName   The name of the resolved object, relative to
                      <code>altNameCtx</code>.
                      It is a composite name.
                      If null, then no name is specified.                    
                </param>
                <see>
                    #getAltName                    
                </see>
                <see>
                    #setAltNameCtx                    
                </see>
            </javadoc>
            <method name="setAltName" type="void" line="245">
                <params>
                    <param name="altName" type="Name"/>
                </params>
            </method>
            <javadoc line="249">
                Retrieves the &lt;code&gt;altNameCtx&lt;/code&gt; field of this exception.
                  This is the context relative to which &lt;code&gt;altName&lt;/code&gt; is named.
                  It will be used during a subsequent call to the
                  &lt;code&gt;javax.naming.spi.ObjectFactory.getObjectInstance&lt;/code&gt; method.                
                <return>
                    The context relative to which <code>altName</code> is named.
                      If null, then the default initial context is implied.                    
                </return>
                <see>
                    #setAltNameCtx                    
                </see>
                <see>
                    #getAltName                    
                </see>
                <see>
                    javax.naming.spi.ObjectFactory#getObjectInstance                    
                </see>
            </javadoc>
            <method name="getAltNameCtx" type="Context" line="262"/>
            <javadoc line="266">
                Sets the &lt;code&gt;altNameCtx&lt;/code&gt; field of this exception.                
                <param>
                    altNameCtxThe context relative to which <code>altName</code>
                      is named.  If null, then the default initial context
                      is implied.                    
                </param>
                <see>
                    #getAltNameCtx                    
                </see>
                <see>
                    #setAltName                    
                </see>
            </javadoc>
            <method name="setAltNameCtx" type="void" line="277">
                <params>
                    <param name="altNameCtx" type="Context"/>
                </params>
            </method>
            <declaration name="serialVersionUID" type="long" line="282"/>
            <javadoc line="282">
                Use serialVersionUID from JNDI 1.1.1 for interoperability                
            </javadoc>
        </class>
    </source>