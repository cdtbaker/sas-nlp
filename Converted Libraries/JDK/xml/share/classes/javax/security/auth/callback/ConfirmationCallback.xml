<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.security.auth.callback">
        <class name="ConfirmationCallback" line="2">
            <implements interface="Callback"/>
            <implements interface="java.io.Serializable"/>
            <javadoc line="2">
                &lt;p&gt; Underlying security services instantiate and pass a
                  &lt;code&gt;ConfirmationCallback&lt;/code&gt; to the &lt;code&gt;handle&lt;/code&gt;
                  method of a &lt;code&gt;CallbackHandler&lt;/code&gt; to ask for YES/NO,
                  OK/CANCEL, YES/NO/CANCEL or other similar confirmations.                
                <see>
                    javax.security.auth.callback.CallbackHandler                    
                </see>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="10"/>
            <declaration name="UNSPECIFIED_OPTION" type="int" line="11"/>
            <javadoc line="11">
                Unspecified option type.
                  &lt;p&gt; The &lt;code&gt;getOptionType&lt;/code&gt; method returns this
                  value if this &lt;code&gt;ConfirmationCallback&lt;/code&gt; was instantiated
                  with &lt;code&gt;options&lt;/code&gt; instead of an &lt;code&gt;optionType&lt;/code&gt;.                
            </javadoc>
            <declaration name="YES_NO_OPTION" type="int" line="18"/>
            <javadoc line="18">
                YES/NO confirmation option.
                  &lt;p&gt; An underlying security service specifies this as the
                  &lt;code&gt;optionType&lt;/code&gt; to a &lt;code&gt;ConfirmationCallback&lt;/code&gt;
                  constructor if it requires a confirmation which can be answered
                  with either &lt;code&gt;YES&lt;/code&gt; or &lt;code&gt;NO&lt;/code&gt;.                
            </javadoc>
            <declaration name="YES_NO_CANCEL_OPTION" type="int" line="26"/>
            <javadoc line="26">
                YES/NO/CANCEL confirmation confirmation option.
                  &lt;p&gt; An underlying security service specifies this as the
                  &lt;code&gt;optionType&lt;/code&gt; to a &lt;code&gt;ConfirmationCallback&lt;/code&gt;
                  constructor if it requires a confirmation which can be answered
                  with either &lt;code&gt;YES&lt;/code&gt;, &lt;code&gt;NO&lt;/code&gt; or &lt;code&gt;CANCEL&lt;/code&gt;.                
            </javadoc>
            <declaration name="OK_CANCEL_OPTION" type="int" line="34"/>
            <javadoc line="34">
                OK/CANCEL confirmation confirmation option.
                  &lt;p&gt; An underlying security service specifies this as the
                  &lt;code&gt;optionType&lt;/code&gt; to a &lt;code&gt;ConfirmationCallback&lt;/code&gt;
                  constructor if it requires a confirmation which can be answered
                  with either &lt;code&gt;OK&lt;/code&gt; or &lt;code&gt;CANCEL&lt;/code&gt;.                
            </javadoc>
            <declaration name="YES" type="int" line="42"/>
            <javadoc line="42">
                YES option.
                  &lt;p&gt; If an &lt;code&gt;optionType&lt;/code&gt; was specified to this
                  &lt;code&gt;ConfirmationCallback&lt;/code&gt;, this option may be specified as a
                  &lt;code&gt;defaultOption&lt;/code&gt; or returned as the selected index.                
            </javadoc>
            <declaration name="NO" type="int" line="49"/>
            <javadoc line="49">
                NO option.
                  &lt;p&gt; If an &lt;code&gt;optionType&lt;/code&gt; was specified to this
                  &lt;code&gt;ConfirmationCallback&lt;/code&gt;, this option may be specified as a
                  &lt;code&gt;defaultOption&lt;/code&gt; or returned as the selected index.                
            </javadoc>
            <declaration name="CANCEL" type="int" line="56"/>
            <javadoc line="56">
                CANCEL option.
                  &lt;p&gt; If an &lt;code&gt;optionType&lt;/code&gt; was specified to this
                  &lt;code&gt;ConfirmationCallback&lt;/code&gt;, this option may be specified as a
                  &lt;code&gt;defaultOption&lt;/code&gt; or returned as the selected index.                
            </javadoc>
            <declaration name="OK" type="int" line="63"/>
            <javadoc line="63">
                OK option.
                  &lt;p&gt; If an &lt;code&gt;optionType&lt;/code&gt; was specified to this
                  &lt;code&gt;ConfirmationCallback&lt;/code&gt;, this option may be specified as a
                  &lt;code&gt;defaultOption&lt;/code&gt; or returned as the selected index.                
            </javadoc>
            <declaration name="INFORMATION" type="int" line="70"/>
            <javadoc line="70">
                INFORMATION message type.                
            </javadoc>
            <declaration name="WARNING" type="int" line="74"/>
            <javadoc line="74">
                WARNING message type.                
            </javadoc>
            <declaration name="ERROR" type="int" line="78"/>
            <javadoc line="78">
                ERROR message type.                
            </javadoc>
            <declaration name="prompt" type="String" line="82"/>
            <javadoc line="82">
                @serial                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="messageType" type="int" line="87"/>
            <javadoc line="87">
                @serial                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="optionType" type="int" line="92"/>
            <javadoc line="92">
                @serial                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="defaultOption" type="int" line="97"/>
            <javadoc line="97">
                @serial                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="options" type="String[]" line="102"/>
            <javadoc line="102">
                @serial                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="selection" type="int" line="107"/>
            <javadoc line="107">
                @serial                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <javadoc line="112">
                Construct a &lt;code&gt;ConfirmationCallback&lt;/code&gt; with a
                  message type, an option type and a default option.
                  &lt;p&gt; Underlying security services use this constructor if
                  they require either a YES/NO, YES/NO/CANCEL or OK/CANCEL
                  confirmation.
                  &lt;p&gt;                
                <param>
                    messageType the message type (<code>INFORMATION</code>,
                      <code>WARNING</code> or <code>ERROR</code>). <p>                    
                </param>
                <param>
                    optionType the option type (<code>YES_NO_OPTION</code>,
                      <code>YES_NO_CANCEL_OPTION</code> or
                      <code>OK_CANCEL_OPTION</code>). <p>                    
                </param>
                <param>
                    defaultOption the default option
                      from the provided optionType (<code>YES</code>,
                      <code>NO</code>, <code>CANCEL</code> or
                      <code>OK</code>).                    
                </param>
                <exception>
                    IllegalArgumentException if messageType is not either
                      <code>INFORMATION</code>, <code>WARNING</code>,
                      or <code>ERROR</code>, if optionType is not either
                      <code>YES_NO_OPTION</code>,
                      <code>YES_NO_CANCEL_OPTION</code>, or
                      <code>OK_CANCEL_OPTION</code>,
                      or if <code>defaultOption</code>
                      does not correspond to one of the options in
                      <code>optionType</code>.                    
                </exception>
            </javadoc>
            <method name="ConfirmationCallback" type="constructor" line="138">
                <params>
                    <param name="messageType" type="int"/>
                    <param name="optionType" type="int"/>
                    <param name="defaultOption" type="int"/>
                </params>
            </method>
            <javadoc line="155">
                Construct a &lt;code&gt;ConfirmationCallback&lt;/code&gt; with a
                  message type, a list of options and a default option.
                  &lt;p&gt; Underlying security services use this constructor if
                  they require a confirmation different from the available preset
                  confirmations provided (for example, CONTINUE/ABORT or STOP/GO).
                  The confirmation options are listed in the &lt;code&gt;options&lt;/code&gt; array,
                  and are displayed by the &lt;code&gt;CallbackHandler&lt;/code&gt; implementation
                  in a manner consistent with the way preset options are displayed.
                  &lt;p&gt;                
                <param>
                    messageType the message type (<code>INFORMATION</code>,
                      <code>WARNING</code> or <code>ERROR</code>). <p>                    
                </param>
                <param>
                    options the list of confirmation options. <p>                    
                </param>
                <param>
                    defaultOption the default option, represented as an index
                      into the <code>options</code> array.                    
                </param>
                <exception>
                    IllegalArgumentException if messageType is not either
                      <code>INFORMATION</code>, <code>WARNING</code>,
                      or <code>ERROR</code>, if <code>options</code> is null,
                      if <code>options</code> has a length of 0,
                      if any element from <code>options</code> is null,
                      if any element from <code>options</code>
                      has a length of 0, or if <code>defaultOption</code>
                      does not lie within the array boundaries of
                      <code>options</code>.                    
                </exception>
            </javadoc>
            <method name="ConfirmationCallback" type="constructor" line="180">
                <params>
                    <param name="messageType" type="int"/>
                    <param name="options" type="String[]"/>
                    <param name="defaultOption" type="int"/>
                </params>
                <scope line="182"/>
            </method>
            <javadoc line="189">
                Construct a &lt;code&gt;ConfirmationCallback&lt;/code&gt; with a prompt,
                  message type, an option type and a default option.
                  &lt;p&gt; Underlying security services use this constructor if
                  they require either a YES/NO, YES/NO/CANCEL or OK/CANCEL
                  confirmation.
                  &lt;p&gt;                
                <param>
                    prompt the prompt used to describe the list of options. <p>                    
                </param>
                <param>
                    messageType the message type (<code>INFORMATION</code>,
                      <code>WARNING</code> or <code>ERROR</code>). <p>                    
                </param>
                <param>
                    optionType the option type (<code>YES_NO_OPTION</code>,
                      <code>YES_NO_CANCEL_OPTION</code> or
                      <code>OK_CANCEL_OPTION</code>). <p>                    
                </param>
                <param>
                    defaultOption the default option
                      from the provided optionType (<code>YES</code>,
                      <code>NO</code>, <code>CANCEL</code> or
                      <code>OK</code>).                    
                </param>
                <exception>
                    IllegalArgumentException if <code>prompt</code> is null,
                      if <code>prompt</code> has a length of 0,
                      if messageType is not either
                      <code>INFORMATION</code>, <code>WARNING</code>,
                      or <code>ERROR</code>, if optionType is not either
                      <code>YES_NO_OPTION</code>,
                      <code>YES_NO_CANCEL_OPTION</code>, or
                      <code>OK_CANCEL_OPTION</code>,
                      or if <code>defaultOption</code>
                      does not correspond to one of the options in
                      <code>optionType</code>.                    
                </exception>
            </javadoc>
            <method name="ConfirmationCallback" type="constructor" line="218">
                <params>
                    <param name="prompt" type="String"/>
                    <param name="messageType" type="int"/>
                    <param name="optionType" type="int"/>
                    <param name="defaultOption" type="int"/>
                </params>
            </method>
            <javadoc line="236">
                Construct a &lt;code&gt;ConfirmationCallback&lt;/code&gt; with a prompt,
                  message type, a list of options and a default option.
                  &lt;p&gt; Underlying security services use this constructor if
                  they require a confirmation different from the available preset
                  confirmations provided (for example, CONTINUE/ABORT or STOP/GO).
                  The confirmation options are listed in the &lt;code&gt;options&lt;/code&gt; array,
                  and are displayed by the &lt;code&gt;CallbackHandler&lt;/code&gt; implementation
                  in a manner consistent with the way preset options are displayed.
                  &lt;p&gt;                
                <param>
                    prompt the prompt used to describe the list of options. <p>                    
                </param>
                <param>
                    messageType the message type (<code>INFORMATION</code>,
                      <code>WARNING</code> or <code>ERROR</code>). <p>                    
                </param>
                <param>
                    options the list of confirmation options. <p>                    
                </param>
                <param>
                    defaultOption the default option, represented as an index
                      into the <code>options</code> array.                    
                </param>
                <exception>
                    IllegalArgumentException if <code>prompt</code> is null,
                      if <code>prompt</code> has a length of 0,
                      if messageType is not either
                      <code>INFORMATION</code>, <code>WARNING</code>,
                      or <code>ERROR</code>, if <code>options</code> is null,
                      if <code>options</code> has a length of 0,
                      if any element from <code>options</code> is null,
                      if any element from <code>options</code>
                      has a length of 0, or if <code>defaultOption</code>
                      does not lie within the array boundaries of
                      <code>options</code>.                    
                </exception>
            </javadoc>
            <method name="ConfirmationCallback" type="constructor" line="264">
                <params>
                    <param name="prompt" type="String"/>
                    <param name="messageType" type="int"/>
                    <param name="options" type="String[]"/>
                    <param name="defaultOption" type="int"/>
                </params>
                <scope line="266"/>
            </method>
            <javadoc line="274">
                Get the prompt.
                  &lt;p&gt;                
                <return>
                    the prompt, or null if this <code>ConfirmationCallback</code>
                      was instantiated without a <code>prompt</code>.                    
                </return>
            </javadoc>
            <method name="getPrompt" type="String" line="280"/>
            <javadoc line="283">
                Get the message type.
                  &lt;p&gt;                
                <return>
                    the message type (<code>INFORMATION</code>,
                      <code>WARNING</code> or <code>ERROR</code>).                    
                </return>
            </javadoc>
            <method name="getMessageType" type="int" line="289"/>
            <javadoc line="292">
                Get the option type.
                  &lt;p&gt; If this method returns &lt;code&gt;UNSPECIFIED_OPTION&lt;/code&gt;, then this
                  &lt;code&gt;ConfirmationCallback&lt;/code&gt; was instantiated with
                  &lt;code&gt;options&lt;/code&gt; instead of an &lt;code&gt;optionType&lt;/code&gt;.
                  In this case, invoke the &lt;code&gt;getOptions&lt;/code&gt; method
                  to determine which confirmation options to display.
                  &lt;p&gt;                
                <return>
                    the option type (<code>YES_NO_OPTION</code>,
                      <code>YES_NO_CANCEL_OPTION</code> or
                      <code>OK_CANCEL_OPTION</code>), or
                      <code>UNSPECIFIED_OPTION</code> if this
                      <code>ConfirmationCallback</code> was instantiated with
                      <code>options</code> instead of an <code>optionType</code>.                    
                </return>
            </javadoc>
            <method name="getOptionType" type="int" line="307"/>
            <javadoc line="310">
                Get the confirmation options.
                  &lt;p&gt;                
                <return>
                    the list of confirmation options, or null if this
                      <code>ConfirmationCallback</code> was instantiated with
                      an <code>optionType</code> instead of <code>options</code>.                    
                </return>
            </javadoc>
            <method name="getOptions" type="String[]" line="317"/>
            <javadoc line="320">
                Get the default option.
                  &lt;p&gt;                
                <return>
                    the default option, represented as
                      <code>YES</code>, <code>NO</code>, <code>OK</code> or
                      <code>CANCEL</code> if an <code>optionType</code>
                      was specified to the constructor of this
                      <code>ConfirmationCallback</code>.
                      Otherwise, this method returns the default option as
                      an index into the
                      <code>options</code> array specified to the constructor
                      of this <code>ConfirmationCallback</code>.                    
                </return>
            </javadoc>
            <method name="getDefaultOption" type="int" line="333"/>
            <javadoc line="336">
                Set the selected confirmation option.
                  &lt;p&gt;                
                <param>
                    selection the selection represented as <code>YES</code>,
                      <code>NO</code>, <code>OK</code> or <code>CANCEL</code>
                      if an <code>optionType</code> was specified to the constructor
                      of this <code>ConfirmationCallback</code>.
                      Otherwise, the selection represents the index into the
                      <code>options</code> array specified to the constructor
                      of this <code>ConfirmationCallback</code>.                    
                </param>
                <see>
                    #getSelectedIndex                    
                </see>
            </javadoc>
            <method name="setSelectedIndex" type="void" line="348">
                <params>
                    <param name="selection" type="int"/>
                </params>
            </method>
            <javadoc line="351">
                Get the selected confirmation option.
                  &lt;p&gt;                
                <return>
                    the selected confirmation option represented as
                      <code>YES</code>, <code>NO</code>, <code>OK</code> or
                      <code>CANCEL</code> if an <code>optionType</code>
                      was specified to the constructor of this
                      <code>ConfirmationCallback</code>.
                      Otherwise, this method returns the selected confirmation
                      option as an index into the
                      <code>options</code> array specified to the constructor
                      of this <code>ConfirmationCallback</code>.                    
                </return>
                <see>
                    #setSelectedIndex                    
                </see>
            </javadoc>
            <method name="getSelectedIndex" type="int" line="365"/>
        </class>
    </source>