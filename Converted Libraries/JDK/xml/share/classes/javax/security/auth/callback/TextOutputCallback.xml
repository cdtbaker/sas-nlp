<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.security.auth.callback">
        <class name="TextOutputCallback" line="28">
            <implements interface="Callback"/>
            <implements interface="java.io.Serializable"/>
            <javadoc line="28">
                &lt;p&gt; Underlying security services instantiate and pass a
                  &lt;code&gt;TextOutputCallback&lt;/code&gt; to the &lt;code&gt;handle&lt;/code&gt;
                  method of a &lt;code&gt;CallbackHandler&lt;/code&gt; to display information messages,
                  warning messages and error messages.                
                <see>
                    javax.security.auth.callback.CallbackHandler                    
                </see>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="38"/>
            <declaration name="INFORMATION" type="int" line="40"/>
            <javadoc line="40">
                Information message.                
            </javadoc>
            <declaration name="WARNING" type="int" line="42"/>
            <javadoc line="42">
                Warning message.                
            </javadoc>
            <declaration name="ERROR" type="int" line="44"/>
            <javadoc line="44">
                Error message.                
            </javadoc>
            <declaration name="messageType" type="int" line="47"/>
            <javadoc line="47">
                @serial                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="message" type="String" line="52"/>
            <javadoc line="52">
                @serial                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <javadoc line="58">
                Construct a TextOutputCallback with a message type and message
                  to be displayed.
                  &lt;p&gt;                
                <param>
                    messageType the message type (&lt;code&gt;INFORMATION&lt;/code&gt;,
                      &lt;code&gt;WARNING&lt;/code&gt; or &lt;code&gt;ERROR&lt;/code&gt;). &lt;p&gt;                    
                </param>
                <param>
                    message the message to be displayed. &lt;p&gt;                    
                </param>
                <exception>
                    IllegalArgumentException if &lt;code&gt;messageType&lt;/code&gt;
                      is not either &lt;code&gt;INFORMATION&lt;/code&gt;,
                      &lt;code&gt;WARNING&lt;/code&gt; or &lt;code&gt;ERROR&lt;/code&gt;,
                      if &lt;code&gt;message&lt;/code&gt; is null,
                      or if &lt;code&gt;message&lt;/code&gt; has a length of 0.                    
                </exception>
            </javadoc>
            <method name="TextOutputCallback" type="constructor" line="75">
                <params>
                    <param name="messageType" type="int"/>
                    <param name="message" type="String"/>
                </params>
            </method>
            <javadoc line="85">
                Get the message type.
                  &lt;p&gt;                
                <return>
                    the message type (&lt;code&gt;INFORMATION&lt;/code&gt;,
                      &lt;code&gt;WARNING&lt;/code&gt; or &lt;code&gt;ERROR&lt;/code&gt;).                    
                </return>
            </javadoc>
            <method name="getMessageType" type="int" line="93"/>
            <javadoc line="97">
                Get the message to be displayed.
                  &lt;p&gt;                
                <return>
                    the message to be displayed.                    
                </return>
            </javadoc>
            <method name="getMessage" type="String" line="104"/>
        </class>
    </source>