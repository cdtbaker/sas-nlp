<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.security.auth">
        <interface name="Destroyable">
            <javadoc line="2">
                Objects such as credentials may optionally implement this interface
                  to provide the capability to destroy its contents.                
                <see>
                    javax.security.auth.Subject                    
                </see>
            </javadoc>
            <method name="destroy" type="void" line="8"/>
            <javadoc line="8">
                Destroy this &lt;code&gt;Object&lt;/code&gt;.
                  &lt;p&gt; Sensitive information associated with this &lt;code&gt;Object&lt;/code&gt;
                  is destroyed or cleared.  Subsequent calls to certain methods
                  on this &lt;code&gt;Object&lt;/code&gt; will result in an
                  &lt;code&gt;IllegalStateException&lt;/code&gt; being thrown.
                  &lt;p&gt;                
                <exception>
                    DestroyFailedException if the destroy operation fails. <p>                    
                </exception>
                <exception>
                    SecurityException if the caller does not have permission
                      to destroy this <code>Object</code>.                    
                </exception>
            </javadoc>
            <method name="isDestroyed" type="boolean" line="20"/>
            <javadoc line="20">
                Determine if this &lt;code&gt;Object&lt;/code&gt; has been destroyed.
                  &lt;p&gt;                
                <return>
                    true if this <code>Object</code> has been destroyed,
                      false otherwise.                    
                </return>
            </javadoc>
        </interface>
    </source>