<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.security.auth.login">
        <class name="ConfigurationSpi" line="29">
            <javadoc line="29">
                This class defines the &lt;i&gt;Service Provider Interface&lt;/i&gt; (&lt;b&gt;SPI&lt;/b&gt;)
                  for the &lt;code&gt;Configuration&lt;/code&gt; class.
                  All the abstract methods in this class must be implemented by each
                  service provider who wishes to supply a Configuration implementation.
                  &lt;p&gt; Subclass implementations of this abstract class must provide
                  a public constructor that takes a &lt;code&gt;Configuration.Parameters&lt;/code&gt;
                  object as an input parameter.  This constructor also must throw
                  an IllegalArgumentException if it does not understand the
                  &lt;code&gt;Configuration.Parameters&lt;/code&gt; input.                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="engineGetAppConfigurationEntry" type="AppConfigurationEntry[]" line="46"/>
            <javadoc line="46">
                Retrieve the AppConfigurationEntries for the specified &lt;i&gt;name&lt;/i&gt;.
                  &lt;p&gt;                
                <param>
                    name the name used to index the Configuration.                    
                </param>
                <return>
                    an array of AppConfigurationEntries for the specified
                      <i>name</i>, or null if there are no entries.                    
                </return>
            </javadoc>
            <javadoc line="59">
                Refresh and reload the Configuration.
                  &lt;p&gt; This method causes this Configuration object to refresh/reload its
                  contents in an implementation-dependent manner.
                  For example, if this Configuration object stores its entries in a file,
                  calling &lt;code&gt;refresh&lt;/code&gt; may cause the file to be re-read.
                  &lt;p&gt; The default implementation of this method does nothing.
                  This method should be overridden if a refresh operation is supported
                  by the implementation.                
                <exception>
                    SecurityException if the caller does not have permission
                      to refresh its Configuration.                    
                </exception>
            </javadoc>
            <method name="engineRefresh" type="void" line="74"/>
        </class>
    </source>