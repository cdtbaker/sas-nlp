<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.security.sasl">
        <import package="java.io.IOException"/>
        <class name="SaslException" line="3">
            <extends class="IOException"/>
            <javadoc line="3">
                This class represents an error that has occurred when using SASL.                
                <since>
                    1.5                    
                </since>
                <author>
                    Rosanna Lee                    
                </author>
                <author>
                    Rob Weltman                    
                </author>
            </javadoc>
            <declaration name="_exception" type="Throwable" line="10"/>
            <javadoc line="10">
                The possibly null root cause exception.                
                <serial>
                                        
                </serial>
            </javadoc>
            <javadoc line="15">
                Constructs a new instance of &lt;tt&gt;SaslException&lt;/tt&gt;.
                  The root exception and the detailed message are null.                
            </javadoc>
            <method name="SaslException" type="constructor" line="19"/>
            <javadoc line="22">
                Constructs a new instance of &lt;tt&gt;SaslException&lt;/tt&gt; with a detailed message.
                  The root exception is null.                
                <param>
                    detail A possibly null string containing details of the exception.                    
                </param>
                <see>
                    java.lang.Throwable#getMessage                    
                </see>
            </javadoc>
            <method name="SaslException" type="constructor" line="28">
                <params>
                    <param name="detail" type="String"/>
                </params>
            </method>
            <javadoc line="31">
                Constructs a new instance of &lt;tt&gt;SaslException&lt;/tt&gt; with a detailed message
                  and a root exception.
                  For example, a SaslException might result from a problem with
                  the callback handler, which might throw a NoSuchCallbackException if
                  it does not support the requested callback, or throw an IOException
                  if it had problems obtaining data for the callback. The
                  SaslException&apos;s root exception would be then be the exception thrown
                  by the callback handler.                
                <param>
                    detail A possibly null string containing details of the exception.                    
                </param>
                <param>
                    ex A possibly null root exception that caused this exception.                    
                </param>
                <see>
                    java.lang.Throwable#getMessage                    
                </see>
                <see>
                    #getCause                    
                </see>
            </javadoc>
            <method name="SaslException" type="constructor" line="45">
                <params>
                    <param name="detail" type="String"/>
                    <param name="ex" type="Throwable"/>
                </params>
                <scope line="47"/>
            </method>
            <method name="getCause" type="Throwable" line="51"/>
            <method name="initCause" type="Throwable" line="54">
                <params>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
            <javadoc line="59">
                Returns the string representation of this exception.
                  The string representation contains
                  this exception&apos;s class name, its detailed messsage, and if
                  it has a root exception, the string representation of the root
                  exception. This string representation
                  is meant for debugging and not meant to be interpreted
                  programmatically.                
                <return>
                    The non-null string representation of this exception.                    
                </return>
                <see>
                    java.lang.Throwable#getMessage                    
                </see>
            </javadoc>
            <method name="toString" type="String" line="70">
                <declaration name="answer" type="String" line="71"/>
                <scope line="72"/>
            </method>
            <declaration name="serialVersionUID" type="long" line="77"/>
            <javadoc line="77">
                Use serialVersionUID from JSR 28 RI for interoperability                
            </javadoc>
        </class>
    </source>