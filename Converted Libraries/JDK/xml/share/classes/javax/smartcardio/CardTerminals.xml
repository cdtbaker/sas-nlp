<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.smartcardio">
        <import package="java.util"/>
        <class name="CardTerminals" line="30">
            <javadoc line="30">
                The set of terminals supported by a TerminalFactory.
                  This class allows applications to enumerate the available CardTerminals,
                  obtain a specific CardTerminal, or wait for the insertion or removal of
                  cards.
                  &lt;p&gt;This class is multi-threading safe and can be used by multiple
                  threads concurrently. However, this object keeps track of the card
                  presence state of each of its terminals. Multiple objects should be used
                  if independent calls to {@linkplain #waitForChange} are required.
                  &lt;p&gt;Applications can obtain instances of this class by calling{@linkplain TerminalFactory#terminals}.                
                <see>
                    TerminalFactory                    
                </see>
                <see>
                    CardTerminal                    
                </see>
                <since>
                    1.6                    
                </since>
                <author>
                    Andreas Sterbenz                    
                </author>
                <author>
                    JSR 268 Expert Group                    
                </author>
            </javadoc>
            <javadoc line="53">
                Constructs a new CardTerminals object.
                  &lt;p&gt;This constructor is called by subclasses only. Application should
                  call {@linkplain TerminalFactory#terminals}to obtain a CardTerminals object.                
            </javadoc>
            <method name="CardTerminals" type="constructor" line="60">
                <comment line="62">
                    empty                    
                </comment>
            </method>
            <javadoc line="64">
                Returns an unmodifiable list of all available terminals.                
                <return>
                    an unmodifiable list of all available terminals.                    
                </return>
                <throws>
                    CardException if the card operation failed                    
                </throws>
            </javadoc>
            <method name="list" type="List<CardTerminal>" line="71"/>
            <method name="list" type="List<CardTerminal>" line="75"/>
            <javadoc line="75">
                Returns an unmodifiable list of all terminals matching the specified
                  state.
                  &lt;p&gt;If state is {@link State#ALL State.ALL}, this method returns
                  all CardTerminals encapsulated by this object.
                  If state is {@link State#CARD_PRESENT State.CARD_PRESENT} or{@link State#CARD_ABSENT State.CARD_ABSENT}, it returns all
                  CardTerminals where a card is currently present or absent, respectively.
                  &lt;p&gt;If state is {@link State#CARD_INSERTION State.CARD_INSERTION} or{@link State#CARD_REMOVAL State.CARD_REMOVAL}, it returns all
                  CardTerminals for which an insertion (or removal, respectively)
                  was detected during the last call to {@linkplain #waitForChange}.
                  If &lt;code&gt;waitForChange()&lt;/code&gt; has not been called on this object,
                  &lt;code&gt;CARD_INSERTION&lt;/code&gt; is equivalent to &lt;code&gt;CARD_PRESENT&lt;/code&gt;
                  and &lt;code&gt;CARD_REMOVAL&lt;/code&gt; is equivalent to &lt;code&gt;CARD_ABSENT&lt;/code&gt;.
                  For an example of the use of &lt;code&gt;CARD_INSERTION&lt;/code&gt;,
                  see {@link #waitForChange}.                
                <param>
                    state the State                    
                </param>
                <return>
                    an unmodifiable list of all terminals matching the specified
                      attribute.                    
                </return>
                <throws>
                    NullPointerException if attr is null                    
                </throws>
                <throws>
                    CardException if the card operation failed                    
                </throws>
            </javadoc>
            <javadoc line="104">
                Returns the terminal with the specified name or null if no such
                  terminal exists.                
                <return>
                    the terminal with the specified name or null if no such
                      terminal exists.                    
                </return>
                <throws>
                    NullPointerException if name is null                    
                </throws>
            </javadoc>
            <method name="getTerminal" type="CardTerminal" line="113">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="114"/>
                <scope line="117">
                    <scope line="118">
                        <scope line="119"/>
                    </scope>
                </scope>
                <scope line="124"/>
            </method>
            <javadoc line="129">
                Waits for card insertion or removal in any of the terminals of this
                  object.
                  &lt;p&gt;This call is equivalent to calling{@linkplain #waitForChange(long) waitForChange(0)}.                
                <throws>
                    IllegalStateException if this &lt;code&gt;CardTerminals&lt;/code&gt;
                      object does not contain any terminals                    
                </throws>
                <throws>
                    CardException if the card operation failed                    
                </throws>
            </javadoc>
            <method name="waitForChange" type="void" line="140"/>
            <method name="waitForChange" type="boolean" line="144"/>
            <javadoc line="144">
                Waits for card insertion or removal in any of the terminals of this
                  object or until the timeout expires.
                  &lt;p&gt;This method examines each CardTerminal of this object.
                  If a card was inserted into or removed from a CardTerminal since the
                  previous call to &lt;code&gt;waitForChange()&lt;/code&gt;, it returns
                  immediately.
                  Otherwise, or if this is the first call to &lt;code&gt;waitForChange()&lt;/code&gt;
                  on this object, it blocks until a card is inserted into or removed from
                  a CardTerminal.
                  &lt;p&gt;If &lt;code&gt;timeout&lt;/code&gt; is greater than 0, the method returns after
                  &lt;code&gt;timeout&lt;/code&gt; milliseconds even if there is no change in state.
                  In that case, this method returns &lt;code&gt;false&lt;/code&gt;; otherwise it
                  returns &lt;code&gt;true&lt;/code&gt;.
                  &lt;p&gt;This method is often used in a loop in combination with{@link #list(CardTerminals.State) list(State.CARD_INSERTION)},
                  for example:
                  &lt;pre&gt;
                  TerminalFactory factory = ...;
                  CardTerminals terminals = factory.terminals();
                  while (true) {
                  for (CardTerminal terminal : terminals.list(CARD_INSERTION)) {
                  // examine Card in terminal, return if it matches
                  }
                  terminals.waitForChange();
                  }&lt;/pre&gt;                
                <param>
                    timeout if positive, block for up to &lt;code&gt;timeout&lt;/code&gt;
                      milliseconds; if zero, block indefinitely; must not be negative                    
                </param>
                <return>
                    false if the method returns due to an expired timeout,
                      true otherwise.                    
                </return>
                <throws>
                    IllegalStateException if this &lt;code&gt;CardTerminals&lt;/code&gt;
                      object does not contain any terminals                    
                </throws>
                <throws>
                    IllegalArgumentException if timeout is negative                    
                </throws>
                <throws>
                    CardException if the card operation failed                    
                </throws>
            </javadoc>
            <javadoc line="186">
                Enumeration of attributes of a CardTerminal.
                  It is used as a parameter to the {@linkplain CardTerminals#list} method.                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <javadoc line="193">
                All CardTerminals.                
            </javadoc>
            <javadoc line="197">
                CardTerminals in which a card is present.                
            </javadoc>
            <javadoc line="201">
                CardTerminals in which a card is not present.                
            </javadoc>
            <javadoc line="205">
                CardTerminals for which a card insertion was detected during the
                  latest call to {@linkplain State#waitForChange waitForChange()}call.                
            </javadoc>
            <javadoc line="211">
                CardTerminals for which a card removal was detected during the
                  latest call to {@linkplain State#waitForChange waitForChange()}call.                
            </javadoc>
        </class>
    </source>