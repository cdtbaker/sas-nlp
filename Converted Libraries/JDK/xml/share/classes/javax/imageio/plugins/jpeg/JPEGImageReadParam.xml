<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.imageio.plugins.jpeg">
        <import package="javax.imageio.ImageReadParam"/>
        <class name="JPEGImageReadParam" line="3">
            <extends class="ImageReadParam"/>
            <javadoc line="3">
                This class adds the ability to set JPEG quantization and Huffman
                  tables when using the built-in JPEG reader plug-in.  An instance of
                  this class will be returned from the
                  &lt;code&gt;getDefaultImageReadParam&lt;/code&gt; methods of the built-in JPEG
                  &lt;code&gt;ImageReader&lt;/code&gt;.
                  &lt;p&gt; The sole purpose of these additions is to allow the
                  specification of tables for use in decoding abbreviated streams.
                  The built-in JPEG reader will also accept an ordinary
                  &lt;code&gt;ImageReadParam&lt;/code&gt;, which is sufficient for decoding
                  non-abbreviated streams.
                  &lt;p&gt; While tables for abbreviated streams are often obtained by
                  first reading another abbreviated stream containing only the
                  tables, in some applications the tables are fixed ahead of time.
                  This class allows the tables to be specified directly from client
                  code.  If no tables are specified either in the stream or in a
                  &lt;code&gt;JPEGImageReadParam&lt;/code&gt;, then the stream is presumed to use
                  the &quot;standard&quot; visually lossless tables.  See {@link JPEGQTable&lt;code&gt;JPEGQTable&lt;/code&gt;} and {@link JPEGHuffmanTable&lt;code&gt;JPEGHuffmanTable&lt;/code&gt;} for more information on the default
                  tables.
                  &lt;p&gt; The default &lt;code&gt;JPEGImageReadParam&lt;/code&gt; returned by the
                  &lt;code&gt;getDefaultReadParam&lt;/code&gt; method of the builtin JPEG reader
                  contains no tables.  Default tables may be obtained from the table
                  classes {@link JPEGQTable &lt;code&gt;JPEGQTable&lt;/code&gt;} and {@link JPEGHuffmanTable &lt;code&gt;JPEGHuffmanTable&lt;/code&gt;}.
                  &lt;p&gt; If a stream does contain tables, the tables given in a
                  &lt;code&gt;JPEGImageReadParam&lt;/code&gt; are ignored.  Furthermore, if the
                  first image in a stream does contain tables and subsequent ones do
                  not, then the tables given in the first image are used for all the
                  abbreviated images.  Once tables have been read from a stream, they
                  can be overridden only by tables subsequently read from the same
                  stream.  In order to specify new tables, the {@link javax.imageio.ImageReader#setInput &lt;code&gt;setInput&lt;/code&gt;} method of
                  the reader must be called to change the stream.
                  &lt;p&gt; Note that this class does not provide a means for obtaining the
                  tables found in a stream.  These may be extracted from a stream by
                  consulting the &lt;code&gt;IIOMetadata&lt;/code&gt; object returned by the
                  reader.
                  &lt;p&gt;
                  For more information about the operation of the built-in JPEG plug-ins,
                  see the &lt;A HREF=&quot;../../metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG
                  metadata format specification and usage notes&lt;/A&gt;.                
            </javadoc>
            <declaration name="qTables" type="JPEGQTable[]" line="44"/>
            <declaration name="DCHuffmanTables" type="JPEGHuffmanTable[]" line="45"/>
            <declaration name="ACHuffmanTables" type="JPEGHuffmanTable[]" line="46"/>
            <javadoc line="47">
                Constructs a &lt;code&gt;JPEGImageReadParam&lt;/code&gt;.                
            </javadoc>
            <method name="JPEGImageReadParam" type="constructor" line="50"/>
            <javadoc line="53">
                Returns &lt;code&gt;true&lt;/code&gt; if tables are currently set.                
                <return>
                    <code>true</code> if tables are present.                    
                </return>
            </javadoc>
            <method name="areTablesSet" type="boolean" line="57"/>
            <javadoc line="60">
                Sets the quantization and Huffman tables to use in decoding
                  abbreviated streams.  There may be a maximum of 4 tables of
                  each type.  These tables are ignored once tables are
                  encountered in the stream.  All arguments must be
                  non-&lt;code&gt;null&lt;/code&gt;.  The two arrays of Huffman tables must
                  have the same number of elements.  The table specifiers in the
                  frame and scan headers in the stream are assumed to be
                  equivalent to indices into these arrays.  The argument arrays
                  are copied by this method.                
                <param>
                    qTables an array of quantization table objects.                    
                </param>
                <param>
                    DCHuffmanTables an array of Huffman table objects.                    
                </param>
                <param>
                    ACHuffmanTables an array of Huffman table objects.                    
                </param>
                <exception>
                    IllegalArgumentException if any of the arguments
                      is <code>null</code>, has more than 4 elements, or if the
                      numbers of DC and AC tables differ.                    
                </exception>
                <see>
                    #unsetDecodeTables                    
                </see>
            </javadoc>
            <method name="setDecodeTables" type="void" line="78">
                <params>
                    <param name="qTables" type="JPEGQTable[]"/>
                    <param name="DCHuffmanTables" type="JPEGHuffmanTable[]"/>
                    <param name="ACHuffmanTables" type="JPEGHuffmanTable[]"/>
                </params>
                <scope line="79"/>
            </method>
            <javadoc line="86">
                Removes any quantization and Huffman tables that are currently
                  set.                
                <see>
                    #setDecodeTables                    
                </see>
            </javadoc>
            <method name="unsetDecodeTables" type="void" line="91"/>
            <javadoc line="96">
                Returns a copy of the array of quantization tables set on the
                  most recent call to &lt;code&gt;setDecodeTables&lt;/code&gt;, or
                  &lt;code&gt;null&lt;/code&gt; if tables are not currently set.                
                <return>
                    an array of <code>JPEGQTable</code> objects, or
                      <code>null</code>.                    
                </return>
                <see>
                    #setDecodeTables                    
                </see>
            </javadoc>
            <method name="getQTables" type="JPEGQTable[]" line="104"/>
            <javadoc line="107">
                Returns a copy of the array of DC Huffman tables set on the
                  most recent call to &lt;code&gt;setDecodeTables&lt;/code&gt;, or
                  &lt;code&gt;null&lt;/code&gt; if tables are not currently set.                
                <return>
                    an array of <code>JPEGHuffmanTable</code> objects, or
                      <code>null</code>.                    
                </return>
                <see>
                    #setDecodeTables                    
                </see>
            </javadoc>
            <method name="getDCHuffmanTables" type="JPEGHuffmanTable[]" line="115"/>
            <javadoc line="118">
                Returns a copy of the array of AC Huffman tables set on the
                  most recent call to &lt;code&gt;setDecodeTables&lt;/code&gt;, or
                  &lt;code&gt;null&lt;/code&gt; if tables are not currently set.                
                <return>
                    an array of <code>JPEGHuffmanTable</code> objects, or
                      <code>null</code>.                    
                </return>
                <see>
                    #setDecodeTables                    
                </see>
            </javadoc>
            <method name="getACHuffmanTables" type="JPEGHuffmanTable[]" line="126"/>
        </class>
    </source>