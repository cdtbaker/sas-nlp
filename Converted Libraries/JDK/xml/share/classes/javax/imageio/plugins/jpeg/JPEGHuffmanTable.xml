<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.imageio.plugins.jpeg">
        <import package="java.util.Arrays"/>
        <class name="JPEGHuffmanTable" line="3">
            <javadoc line="3">
                A class encapsulating a single JPEG Huffman table.
                  Fields are provided for the &quot;standard&quot; tables taken
                  from Annex K of the JPEG specification.
                  These are the tables used as defaults.
                  &lt;p&gt;
                  For more information about the operation of the standard JPEG plug-in,
                  see the &lt;A HREF=&quot;../../metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG
                  metadata format specification and usage notes&lt;/A&gt;                
            </javadoc>
            <declaration name="StdDCLuminanceLengths" type="short[]" line="14"/>
            <declaration name="StdDCLuminanceValues" type="short[]" line="15"/>
            <declaration name="StdDCChrominanceLengths" type="short[]" line="16"/>
            <declaration name="StdDCChrominanceValues" type="short[]" line="17"/>
            <declaration name="StdACLuminanceLengths" type="short[]" line="18"/>
            <declaration name="StdACLuminanceValues" type="short[]" line="19"/>
            <declaration name="StdACChrominanceLengths" type="short[]" line="20"/>
            <declaration name="StdACChrominanceValues" type="short[]" line="21"/>
            <declaration name="StdDCLuminance" type="JPEGHuffmanTable" line="22"/>
            <javadoc line="22">
                The standard DC luminance Huffman table.                
            </javadoc>
            <declaration name="StdDCChrominance" type="JPEGHuffmanTable" line="26"/>
            <javadoc line="26">
                The standard DC chrominance Huffman table.                
            </javadoc>
            <declaration name="StdACLuminance" type="JPEGHuffmanTable" line="30"/>
            <javadoc line="30">
                The standard AC luminance Huffman table.                
            </javadoc>
            <declaration name="StdACChrominance" type="JPEGHuffmanTable" line="34"/>
            <javadoc line="34">
                The standard AC chrominance Huffman table.                
            </javadoc>
            <declaration name="lengths" type="short[]" line="38"/>
            <declaration name="values" type="short[]" line="39"/>
            <javadoc line="40">
                Creates a Huffman table and initializes it. The input arrays are copied.
                  The arrays must describe a possible Huffman table.
                  For example, 3 codes cannot be expressed with a single bit.                
                <param>
                    lengths an array of {@code short}s where <code>lengths[k]</code>
                      is equal to the number of values with corresponding codes of
                      length <code>k + 1</code> bits.                    
                </param>
                <param>
                    values an array of shorts containing the values in
                      order of increasing code length.                    
                </param>
                <throws>
                    IllegalArgumentException if <code>lengths</code> or
                      <code>values</code> are null, the length of <code>lengths</code> is
                      greater than 16, the length of <code>values</code> is greater than 256,
                      if any value in <code>lengths</code> or <code>values</code> is less
                      than zero, or if the arrays do not describe a valid Huffman table.                    
                </throws>
            </javadoc>
            <method name="JPEGHuffmanTable" type="constructor" line="55">
                <params>
                    <param name="lengths" type="short[]"/>
                    <param name="values" type="short[]"/>
                </params>
                <scope line="56"/>
                <scope line="59">
                    <scope line="60"/>
                </scope>
                <scope line="64">
                    <scope line="65"/>
                </scope>
            </method>
            <method name="validate" type="void" line="73">
                <declaration name="sumOfLengths" type="int" line="74"/>
                <scope line="75"/>
                <scope line="78"/>
            </method>
            <method name="JPEGHuffmanTable" type="constructor" line="82">
                <params>
                    <param name="lengths" type="short[]"/>
                    <param name="values" type="short[]"/>
                    <param name="copy" type="boolean"/>
                </params>
                <scope line="83"/>
                <scope line="87"/>
            </method>
            <javadoc line="92">
                Returns an array of &lt;code&gt;short&lt;/code&gt;s containing the number of values
                  for each length in the Huffman table. The returned array is a copy.                
                <return>
                    a <code>short</code> array where <code>array[k-1]</code>
                      is equal to the number of values in the table of length <code>k</code>.                    
                </return>
                <see>
                    #getValues                    
                </see>
            </javadoc>
            <method name="getLengths" type="short[]" line="99"/>
            <javadoc line="102">
                Returns an array of &lt;code&gt;short&lt;/code&gt;s containing the values arranged
                  by increasing length of their corresponding codes.
                  The interpretation of the array is dependent on the values returned
                  from &lt;code&gt;getLengths&lt;/code&gt;. The returned array is a copy.                
                <return>
                    a <code>short</code> array of values.                    
                </return>
                <see>
                    #getLengths                    
                </see>
            </javadoc>
            <method name="getValues" type="short[]" line="110"/>
            <javadoc line="113">
                Returns a {@code String} representing this Huffman table.                
                <return>
                    a {@code String} representing this Huffman table.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="117">
                <declaration name="ls" type="String" line="118"/>
                <declaration name="sb" type="StringBuilder" line="119"/>
                <scope line="121"/>
                <scope line="125"/>
            </method>
        </class>
    </source>