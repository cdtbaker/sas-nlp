<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.imageio.plugins.jpeg">
        <import package="java.util.Arrays"/>
        <class name="JPEGHuffmanTable" line="30">
            <comment line="44">
                The data for the publically defined tables, as specified in ITU T.81
                 JPEG specification section K3.3 and used in the IJG library.                
            </comment>
            <comment line="204">
                                
            </comment>
            <javadoc line="30">
                A class encapsulating a single JPEG Huffman table.
                  Fields are provided for the &quot;standard&quot; tables taken
                  from Annex K of the JPEG specification.
                  These are the tables used as defaults.
                  &lt;p&gt;
                  For more information about the operation of the standard JPEG plug-in,
                  see the &lt;A HREF=&quot;../../metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG
                  metadata format specification and usage notes&lt;/A&gt;                
            </javadoc>
            <declaration name="StdDCLuminanceLengths" type="short[]" line="46"/>
            <declaration name="StdDCLuminanceValues" type="short[]" line="51"/>
            <declaration name="StdDCChrominanceLengths" type="short[]" line="56"/>
            <declaration name="StdDCChrominanceValues" type="short[]" line="61"/>
            <declaration name="StdACLuminanceLengths" type="short[]" line="66"/>
            <declaration name="StdACLuminanceValues" type="short[]" line="71"/>
            <declaration name="StdACChrominanceLengths" type="short[]" line="95"/>
            <declaration name="StdACChrominanceValues" type="short[]" line="100"/>
            <declaration name="StdDCLuminance" type="JPEGHuffmanTable" line="124"/>
            <javadoc line="124">
                The standard DC luminance Huffman table.                
            </javadoc>
            <declaration name="StdDCChrominance" type="JPEGHuffmanTable" line="131"/>
            <javadoc line="131">
                The standard DC chrominance Huffman table.                
            </javadoc>
            <declaration name="StdACLuminance" type="JPEGHuffmanTable" line="138"/>
            <javadoc line="138">
                The standard AC luminance Huffman table.                
            </javadoc>
            <declaration name="StdACChrominance" type="JPEGHuffmanTable" line="145"/>
            <javadoc line="145">
                The standard AC chrominance Huffman table.                
            </javadoc>
            <declaration name="lengths" type="short[]" line="152"/>
            <declaration name="values" type="short[]" line="153"/>
            <javadoc line="155">
                Creates a Huffman table and initializes it. The input arrays are copied.
                  The arrays must describe a possible Huffman table.
                  For example, 3 codes cannot be expressed with a single bit.                
                <param>
                    lengths an array of {@code short}s where <code>lengths[k]</code>
                      is equal to the number of values with corresponding codes of
                      length <code>k + 1</code> bits.                    
                </param>
                <param>
                    values an array of shorts containing the values in
                      order of increasing code length.                    
                </param>
                <throws>
                    IllegalArgumentException if <code>lengths</code> or
                      <code>values</code> are null, the length of <code>lengths</code> is
                      greater than 16, the length of <code>values</code> is greater than 256,
                      if any value in <code>lengths</code> or <code>values</code> is less
                      than zero, or if the arrays do not describe a valid Huffman table.                    
                </throws>
            </javadoc>
            <method name="JPEGHuffmanTable" type="constructor" line="171">
                <params>
                    <param name="lengths" type="short[]"/>
                    <param name="values" type="short[]"/>
                </params>
                <scope line="174"/>
                <scope line="177">
                    <scope line="178"/>
                </scope>
                <scope line="182">
                    <scope line="183"/>
                </scope>
            </method>
            <method name="validate" type="void" line="192">
                <declaration name="sumOfLengths" type="int" line="193"/>
                <scope line="194"/>
                <scope line="197"/>
            </method>
            <method name="JPEGHuffmanTable" type="constructor" line="204">
                <params>
                    <param name="lengths" type="short[]"/>
                    <param name="values" type="short[]"/>
                    <param name="copy" type="boolean"/>
                </params>
                <scope line="205"/>
                <scope line="208"/>
            </method>
            <javadoc line="214">
                Returns an array of &lt;code&gt;short&lt;/code&gt;s containing the number of values
                  for each length in the Huffman table. The returned array is a copy.                
                <return>
                    a <code>short</code> array where <code>array[k-1]</code>
                      is equal to the number of values in the table of length <code>k</code>.                    
                </return>
                <see>
                    #getValues                    
                </see>
            </javadoc>
            <method name="getLengths" type="short[]" line="222"/>
            <javadoc line="226">
                Returns an array of &lt;code&gt;short&lt;/code&gt;s containing the values arranged
                  by increasing length of their corresponding codes.
                  The interpretation of the array is dependent on the values returned
                  from &lt;code&gt;getLengths&lt;/code&gt;. The returned array is a copy.                
                <return>
                    a <code>short</code> array of values.                    
                </return>
                <see>
                    #getLengths                    
                </see>
            </javadoc>
            <method name="getValues" type="short[]" line="235"/>
            <javadoc line="239">
                Returns a {@code String} representing this Huffman table.                
                <return>
                    a {@code String} representing this Huffman table.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="243">
                <declaration name="ls" type="String" line="244"/>
                <declaration name="sb" type="StringBuilder" line="245"/>
                <scope line="247"/>
                <scope line="251"/>
            </method>
        </class>
    </source>