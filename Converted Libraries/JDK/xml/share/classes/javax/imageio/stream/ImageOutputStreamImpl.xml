<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.imageio.stream">
        <import package="java.io.IOException"/>
        <import package="java.io.UTFDataFormatException"/>
        <import package="java.nio.ByteOrder"/>
        <class name="ImageOutputStreamImpl" line="32">
            <extends class="ImageInputStreamImpl"/>
            <implements interface="ImageOutputStream"/>
            <javadoc line="32">
                An abstract class implementing the &lt;code&gt;ImageOutputStream&lt;/code&gt; interface.
                  This class is designed to reduce the number of methods that must
                  be implemented by subclasses.                
            </javadoc>
            <javadoc line="42">
                Constructs an &lt;code&gt;ImageOutputStreamImpl&lt;/code&gt;.                
            </javadoc>
            <method name="ImageOutputStreamImpl" type="constructor" line="45"/>
            <method name="write" type="void" line="48"/>
            <method name="write" type="void" line="50">
                <params>
                    <param name="b" type="byte"/>
                </params>
            </method>
            <method name="write" type="void" line="54"/>
            <method name="writeBoolean" type="void" line="56">
                <params>
                    <param name="v" type="boolean"/>
                </params>
            </method>
            <method name="writeByte" type="void" line="60">
                <params>
                    <param name="v" type="int"/>
                </params>
            </method>
            <method name="writeShort" type="void" line="64">
                <params>
                    <param name="v" type="int"/>
                </params>
                <scope line="65"/>
                <scope line="68"/>
            </method>
            <method name="writeChar" type="void" line="75">
                <params>
                    <param name="v" type="int"/>
                </params>
            </method>
            <method name="writeInt" type="void" line="79">
                <params>
                    <param name="v" type="int"/>
                </params>
                <scope line="80"/>
                <scope line="85"/>
            </method>
            <method name="writeLong" type="void" line="94">
                <params>
                    <param name="v" type="long"/>
                </params>
                <comment line="115">
                    REMIND: Once 6277756 is fixed, we should do a bulk write of all 8
                     bytes here as we do in writeShort() and writeInt() for even better
                     performance.  For now, two bulk writes of 4 bytes each is still
                     faster than 8 individual write() calls (see 6347575 for details).                    
                </comment>
                <scope line="95"/>
                <scope line="104"/>
            </method>
            <method name="writeFloat" type="void" line="122">
                <params>
                    <param name="v" type="float"/>
                </params>
            </method>
            <method name="writeDouble" type="void" line="126">
                <params>
                    <param name="v" type="double"/>
                </params>
            </method>
            <method name="writeBytes" type="void" line="130">
                <params>
                    <param name="s" type="String"/>
                </params>
                <declaration name="len" type="int" line="131"/>
                <scope line="132"/>
            </method>
            <method name="writeChars" type="void" line="137">
                <params>
                    <param name="s" type="String"/>
                </params>
                <declaration name="len" type="int" line="138"/>
                <declaration name="b" type="byte[]" line="140"/>
                <declaration name="boff" type="int" line="141"/>
                <scope line="142">
                    <scope line="143">
                        <declaration name="v" type="int" line="144"/>
                    </scope>
                </scope>
                <scope line="148">
                    <scope line="149">
                        <declaration name="v" type="int" line="150"/>
                    </scope>
                </scope>
            </method>
            <method name="writeUTF" type="void" line="159">
                <params>
                    <param name="s" type="String"/>
                </params>
                <declaration name="strlen" type="int" line="160"/>
                <declaration name="utflen" type="int" line="161"/>
                <declaration name="charr" type="char[]" line="162"/>
                <declaration name="c" type="int" line="163"/>
                <scope line="167">
                    <scope line="169"/>
                    <scope line="171"/>
                    <scope line="173"/>
                </scope>
                <scope line="178"/>
                <declaration name="b" type="byte[]" line="182"/>
                <scope line="185">
                    <scope line="187"/>
                    <scope line="189"/>
                    <scope line="193"/>
                </scope>
            </method>
            <method name="writeShorts" type="void" line="201">
                <params>
                    <param name="s" type="short[]"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <comment line="203">
                    Fix 4430357 - if off + len &lt; 0, overflow occurred                    
                </comment>
                <scope line="203"/>
                <declaration name="b" type="byte[]" line="208"/>
                <declaration name="boff" type="int" line="209"/>
                <scope line="210">
                    <scope line="211">
                        <declaration name="v" type="short" line="212"/>
                    </scope>
                </scope>
                <scope line="216">
                    <scope line="217">
                        <declaration name="v" type="short" line="218"/>
                    </scope>
                </scope>
            </method>
            <method name="writeChars" type="void" line="227">
                <params>
                    <param name="c" type="char[]"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <comment line="229">
                    Fix 4430357 - if off + len &lt; 0, overflow occurred                    
                </comment>
                <scope line="229"/>
                <declaration name="b" type="byte[]" line="234"/>
                <declaration name="boff" type="int" line="235"/>
                <scope line="236">
                    <scope line="237">
                        <declaration name="v" type="char" line="238"/>
                    </scope>
                </scope>
                <scope line="242">
                    <scope line="243">
                        <declaration name="v" type="char" line="244"/>
                    </scope>
                </scope>
            </method>
            <method name="writeInts" type="void" line="253">
                <params>
                    <param name="i" type="int[]"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <comment line="255">
                    Fix 4430357 - if off + len &lt; 0, overflow occurred                    
                </comment>
                <scope line="255"/>
                <declaration name="b" type="byte[]" line="260"/>
                <declaration name="boff" type="int" line="261"/>
                <scope line="262">
                    <scope line="263">
                        <declaration name="v" type="int" line="264"/>
                    </scope>
                </scope>
                <scope line="270">
                    <scope line="271">
                        <declaration name="v" type="int" line="272"/>
                    </scope>
                </scope>
            </method>
            <method name="writeLongs" type="void" line="283">
                <params>
                    <param name="l" type="long[]"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <comment line="285">
                    Fix 4430357 - if off + len &lt; 0, overflow occurred                    
                </comment>
                <scope line="285"/>
                <declaration name="b" type="byte[]" line="290"/>
                <declaration name="boff" type="int" line="291"/>
                <scope line="292">
                    <scope line="293">
                        <declaration name="v" type="long" line="294"/>
                    </scope>
                </scope>
                <scope line="304">
                    <scope line="305">
                        <declaration name="v" type="long" line="306"/>
                    </scope>
                </scope>
            </method>
            <method name="writeFloats" type="void" line="321">
                <params>
                    <param name="f" type="float[]"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <comment line="323">
                    Fix 4430357 - if off + len &lt; 0, overflow occurred                    
                </comment>
                <scope line="323"/>
                <declaration name="b" type="byte[]" line="328"/>
                <declaration name="boff" type="int" line="329"/>
                <scope line="330">
                    <scope line="331">
                        <declaration name="v" type="int" line="332"/>
                    </scope>
                </scope>
                <scope line="338">
                    <scope line="339">
                        <declaration name="v" type="int" line="340"/>
                    </scope>
                </scope>
            </method>
            <method name="writeDoubles" type="void" line="351">
                <params>
                    <param name="d" type="double[]"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <comment line="353">
                    Fix 4430357 - if off + len &lt; 0, overflow occurred                    
                </comment>
                <scope line="353"/>
                <declaration name="b" type="byte[]" line="358"/>
                <declaration name="boff" type="int" line="359"/>
                <scope line="360">
                    <scope line="361">
                        <declaration name="v" type="long" line="362"/>
                    </scope>
                </scope>
                <scope line="372">
                    <scope line="373">
                        <declaration name="v" type="long" line="374"/>
                    </scope>
                </scope>
            </method>
            <method name="writeBit" type="void" line="389">
                <params>
                    <param name="bit" type="int"/>
                </params>
            </method>
            <method name="writeBits" type="void" line="393">
                <params>
                    <param name="bits" type="long"/>
                    <param name="numBits" type="int"/>
                </params>
                <comment line="404">
                    Prologue: deal with pre-existing bits                    
                </comment>
                <comment line="406">
                    Bug 4499158, 4507868 - if we&apos;re at the beginning of the stream
                     and the bit offset is 0, there can&apos;t be any pre-existing bits                    
                </comment>
                <comment line="409">
                    read() will reset bitOffset                    
                </comment>
                <comment line="418">
                    Notch out the partial byte and drop in the new bits                    
                </comment>
                <comment line="421">
                    Clear out old bits                    
                </comment>
                <comment line="422">
                    Or in new ones                    
                </comment>
                <comment line="426">
                    Signal that we are done                    
                </comment>
                <comment line="428">
                    Fill out the partial byte and reduce numBits                    
                </comment>
                <comment line="431">
                    Clear out bits                    
                </comment>
                <comment line="433">
                    Note that bitOffset is already 0, so there is no risk
                     of this advancing to the next byte                    
                </comment>
                <comment line="440">
                    Now write any whole bytes                    
                </comment>
                <comment line="453">
                    Epilogue: write out remaining partial byte, if any
                     Note that we may be at EOF, in which case we pad with 0,
                     or not, in which case we must preserve the existing bits                    
                </comment>
                <comment line="457">
                    If we are not at the end of the file, read the current byte
                     If we are at the end of the file, initialize our byte to 0.                    
                </comment>
                <comment line="464">
                    Fix 4494976: writeBit(int) does not pad the remainder
                     of the current byte with 0s                    
                </comment>
                <comment line="466">
                    EOF                    
                </comment>
                <comment line="474">
                    bitOffset is always already 0 when we get here.                    
                </comment>
                <scope line="396"/>
                <scope line="399"/>
                <scope line="407">
                    <declaration name="offset" type="int" line="408"/>
                    <declaration name="partialByte" type="int" line="409"/>
                    <scope line="410"/>
                    <scope line="412"/>
                    <scope line="416">
                        <declaration name="shift" type="int" line="418"/>
                        <declaration name="mask" type="int" line="419"/>
                    </scope>
                    <scope line="426">
                        <declaration name="num" type="int" line="428"/>
                        <declaration name="mask" type="int" line="429"/>
                    </scope>
                </scope>
                <scope line="440">
                    <declaration name="extra" type="int" line="441"/>
                    <scope line="442">
                        <declaration name="shift" type="int" line="443"/>
                        <declaration name="value" type="int" line="444"/>
                    </scope>
                </scope>
                <scope line="455">
                    <declaration name="partialByte" type="int" line="458"/>
                    <scope line="460"/>
                    <scope line="465"/>
                    <declaration name="shift" type="int" line="469"/>
                    <declaration name="mask" type="int" line="470"/>
                </scope>
            </method>
            <javadoc line="480">
                If the bit offset is non-zero, forces the remaining bits
                  in the current byte to 0 and advances the stream position
                  by one.  This method should be called by subclasses at the
                  beginning of the &lt;code&gt;write(int)&lt;/code&gt; and
                  &lt;code&gt;write(byte[], int, int)&lt;/code&gt; methods.                
                <exception>
                    IOException if an I/O error occurs.                    
                </exception>
            </javadoc>
            <method name="flushBits" type="void" line="489">
                <comment line="494">
                    Sets bitOffset to 0                    
                </comment>
                <comment line="496">
                    Fix 4465683: When bitOffset is set
                     to something non-zero beyond EOF,
                     we should set that whole byte to
                     zero and write it to stream.                    
                </comment>
                <scope line="491">
                    <declaration name="offset" type="int" line="492"/>
                    <declaration name="partialByte" type="int" line="493"/>
                    <scope line="494"/>
                    <scope line="502"/>
                </scope>
            </method>
        </class>
    </source>