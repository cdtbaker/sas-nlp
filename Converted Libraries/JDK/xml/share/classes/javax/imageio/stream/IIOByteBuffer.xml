<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.imageio.stream">
        <class name="IIOByteBuffer" line="28">
            <javadoc line="28">
                A class representing a mutable reference to an array of bytes and
                  an offset and length within that array.  &lt;code&gt;IIOByteBuffer&lt;/code&gt;
                  is used by &lt;code&gt;ImageInputStream&lt;/code&gt; to supply a sequence of bytes
                  to the caller, possibly with fewer copies than using the conventional
                  &lt;code&gt;read&lt;/code&gt; methods that take a user-supplied byte array.
                  &lt;p&gt; The byte array referenced by an &lt;code&gt;IIOByteBuffer&lt;/code&gt; will
                  generally be part of an internal data structure belonging to an
                  &lt;code&gt;ImageReader&lt;/code&gt; implementation; its contents should be
                  considered read-only and must not be modified.                
            </javadoc>
            <declaration name="data" type="byte[]" line="43"/>
            <declaration name="offset" type="int" line="45"/>
            <declaration name="length" type="int" line="47"/>
            <javadoc line="49">
                Constructs an &lt;code&gt;IIOByteBuffer&lt;/code&gt; that references a
                  given byte array, offset, and length.                
                <param>
                    data a byte array.                    
                </param>
                <param>
                    offset an int offset within the array.                    
                </param>
                <param>
                    length an int specifying the length of the data of
                      interest within byte array, in bytes.                    
                </param>
            </javadoc>
            <method name="IIOByteBuffer" type="constructor" line="58">
                <params>
                    <param name="data" type="byte[]"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                </params>
            </method>
            <javadoc line="64">
                Returns a reference to the byte array.  The returned value should
                  be treated as read-only, and only the portion specified by the
                  values of &lt;code&gt;getOffset&lt;/code&gt; and &lt;code&gt;getLength&lt;/code&gt; should
                  be used.                
                <return>
                    a byte array reference.                    
                </return>
                <see>
                    #getOffset                    
                </see>
                <see>
                    #getLength                    
                </see>
                <see>
                    #setData                    
                </see>
            </javadoc>
            <method name="getData" type="byte[]" line="76"/>
            <javadoc line="80">
                Updates the array reference that will be returned by subsequent calls
                  to the &lt;code&gt;getData&lt;/code&gt; method.                
                <param>
                    data a byte array reference containing the new data value.                    
                </param>
                <see>
                    #getData                    
                </see>
            </javadoc>
            <method name="setData" type="void" line="88">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
            </method>
            <javadoc line="92">
                Returns the offset within the byte array returned by
                  &lt;code&gt;getData&lt;/code&gt; at which the data of interest start.                
                <return>
                    an int offset.                    
                </return>
                <see>
                    #getData                    
                </see>
                <see>
                    #getLength                    
                </see>
                <see>
                    #setOffset                    
                </see>
            </javadoc>
            <method name="getOffset" type="int" line="102"/>
            <javadoc line="106">
                Updates the value that will be returned by subsequent calls
                  to the &lt;code&gt;getOffset&lt;/code&gt; method.                
                <param>
                    offset an int containing the new offset value.                    
                </param>
                <see>
                    #getOffset                    
                </see>
            </javadoc>
            <method name="setOffset" type="void" line="114">
                <params>
                    <param name="offset" type="int"/>
                </params>
            </method>
            <javadoc line="118">
                Returns the length of the data of interest within the byte
                  array returned by &lt;code&gt;getData&lt;/code&gt;.                
                <return>
                    an int length.                    
                </return>
                <see>
                    #getData                    
                </see>
                <see>
                    #getOffset                    
                </see>
                <see>
                    #setLength                    
                </see>
            </javadoc>
            <method name="getLength" type="int" line="128"/>
            <javadoc line="132">
                Updates the value that will be returned by subsequent calls
                  to the &lt;code&gt;getLength&lt;/code&gt; method.                
                <param>
                    length an int containing the new length value.                    
                </param>
                <see>
                    #getLength                    
                </see>
            </javadoc>
            <method name="setLength" type="void" line="140">
                <params>
                    <param name="length" type="int"/>
                </params>
            </method>
        </class>
    </source>