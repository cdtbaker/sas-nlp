<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.imageio">
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.awt.image.Raster"/>
        <import package="java.awt.image.RenderedImage"/>
        <import package="java.util.List"/>
        <import package="javax.imageio.metadata.IIOMetadata"/>
        <class name="IIOImage" line="34">
            <javadoc line="34">
                A simple container class to aggregate an image, a set of
                  thumbnail (preview) images, and an object representing metadata
                  associated with the image.
                  &lt;p&gt; The image data may take the form of either a
                  &lt;code&gt;RenderedImage&lt;/code&gt;, or a &lt;code&gt;Raster&lt;/code&gt;.  Reader
                  methods that return an &lt;code&gt;IIOImage&lt;/code&gt; will always return a
                  &lt;code&gt;BufferedImage&lt;/code&gt; using the &lt;code&gt;RenderedImage&lt;/code&gt;
                  reference.  Writer methods that accept an &lt;code&gt;IIOImage&lt;/code&gt;
                  will always accept a &lt;code&gt;RenderedImage&lt;/code&gt;, and may optionally
                  accept a &lt;code&gt;Raster&lt;/code&gt;.
                  &lt;p&gt; Exactly one of &lt;code&gt;getRenderedImage&lt;/code&gt; and
                  &lt;code&gt;getRaster&lt;/code&gt; will return a non-&lt;code&gt;null&lt;/code&gt; value.
                  Subclasses are responsible for ensuring this behavior.                
                <see>
                    ImageReader#readAll(int,ImageReadParam)                    
                </see>
                <see>
                    ImageReader#readAll(java.util.Iterator)                    
                </see>
                <see>
                    ImageWriter#write(javax.imageio.metadata.IIOMetadata,IIOImage,ImageWriteParam)                    
                </see>
                <see>
                    ImageWriter#write(IIOImage)                    
                </see>
                <see>
                    ImageWriter#writeToSequence(IIOImage,ImageWriteParam)                    
                </see>
                <see>
                    ImageWriter#writeInsert(int,IIOImage,ImageWriteParam)                    
                </see>
            </javadoc>
            <declaration name="image" type="RenderedImage" line="62"/>
            <javadoc line="62">
                The &lt;code&gt;RenderedImage&lt;/code&gt; being referenced.                
            </javadoc>
            <declaration name="raster" type="Raster" line="67"/>
            <javadoc line="67">
                The &lt;code&gt;Raster&lt;/code&gt; being referenced.                
            </javadoc>
            <declaration name="thumbnails" type="List&lt;? extends BufferedImage&gt;" line="72"/>
            <javadoc line="72">
                A &lt;code&gt;List&lt;/code&gt; of &lt;code&gt;BufferedImage&lt;/code&gt; thumbnails,
                  or &lt;code&gt;null&lt;/code&gt;.  Non-&lt;code&gt;BufferedImage&lt;/code&gt; objects
                  must not be stored in this &lt;code&gt;List&lt;/code&gt;.                
            </javadoc>
            <declaration name="metadata" type="IIOMetadata" line="79"/>
            <javadoc line="79">
                An &lt;code&gt;IIOMetadata&lt;/code&gt; object containing metadata
                  associated with the image.                
            </javadoc>
            <javadoc line="85">
                Constructs an &lt;code&gt;IIOImage&lt;/code&gt; containing a
                  &lt;code&gt;RenderedImage&lt;/code&gt;, and thumbnails and metadata
                  associated with it.
                  &lt;p&gt; All parameters are stored by reference.
                  &lt;p&gt; The &lt;code&gt;thumbnails&lt;/code&gt; argument must either be
                  &lt;code&gt;null&lt;/code&gt; or contain only &lt;code&gt;BufferedImage&lt;/code&gt;
                  objects.                
                <param>
                    image a &lt;code&gt;RenderedImage&lt;/code&gt;.                    
                </param>
                <param>
                    thumbnails a &lt;code&gt;List&lt;/code&gt; of &lt;code&gt;BufferedImage&lt;/code&gt;s,
                      or &lt;code&gt;null&lt;/code&gt;.                    
                </param>
                <param>
                    metadata an &lt;code&gt;IIOMetadata&lt;/code&gt; object, or
                      &lt;code&gt;null&lt;/code&gt;.                    
                </param>
                <exception>
                    IllegalArgumentException if &lt;code&gt;image&lt;/code&gt; is
                      &lt;code&gt;null&lt;/code&gt;.                    
                </exception>
            </javadoc>
            <method name="IIOImage" type="constructor" line="107">
                <params>
                    <param name="image" type="RenderedImage"/>
                    <param name="thumbnails" type="List<? extends BufferedImage>"/>
                    <param name="metadata" type="IIOMetadata"/>
                </params>
                <scope line="108"/>
            </method>
            <javadoc line="117">
                Constructs an &lt;code&gt;IIOImage&lt;/code&gt; containing a
                  &lt;code&gt;Raster&lt;/code&gt;, and thumbnails and metadata
                  associated with it.
                  &lt;p&gt; All parameters are stored by reference.                
                <param>
                    raster a &lt;code&gt;Raster&lt;/code&gt;.                    
                </param>
                <param>
                    thumbnails a &lt;code&gt;List&lt;/code&gt; of &lt;code&gt;BufferedImage&lt;/code&gt;s,
                      or &lt;code&gt;null&lt;/code&gt;.                    
                </param>
                <param>
                    metadata an &lt;code&gt;IIOMetadata&lt;/code&gt; object, or
                      &lt;code&gt;null&lt;/code&gt;.                    
                </param>
                <exception>
                    IllegalArgumentException if &lt;code&gt;raster&lt;/code&gt; is
                      &lt;code&gt;null&lt;/code&gt;.                    
                </exception>
            </javadoc>
            <method name="IIOImage" type="constructor" line="135">
                <params>
                    <param name="raster" type="Raster"/>
                    <param name="thumbnails" type="List<? extends BufferedImage>"/>
                    <param name="metadata" type="IIOMetadata"/>
                </params>
                <scope line="136"/>
            </method>
            <javadoc line="145">
                Returns the currently set &lt;code&gt;RenderedImage&lt;/code&gt;, or
                  &lt;code&gt;null&lt;/code&gt; if only a &lt;code&gt;Raster&lt;/code&gt; is available.                
                <return>
                    a &lt;code&gt;RenderedImage&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt;.                    
                </return>
                <see>
                    #setRenderedImage                    
                </see>
            </javadoc>
            <method name="getRenderedImage" type="RenderedImage" line="153">
                <scope line="154"/>
            </method>
            <javadoc line="159">
                Sets the current &lt;code&gt;RenderedImage&lt;/code&gt;.  The value is
                  stored by reference.  Any existing &lt;code&gt;Raster&lt;/code&gt; is
                  discarded.                
                <param>
                    image a &lt;code&gt;RenderedImage&lt;/code&gt;.                    
                </param>
                <exception>
                    IllegalArgumentException if &lt;code&gt;image&lt;/code&gt; is
                      &lt;code&gt;null&lt;/code&gt;.                    
                </exception>
                <see>
                    #getRenderedImage                    
                </see>
            </javadoc>
            <method name="setRenderedImage" type="void" line="171">
                <params>
                    <param name="image" type="RenderedImage"/>
                </params>
                <scope line="172">
                    <scope line="173"/>
                </scope>
            </method>
            <javadoc line="181">
                Returns &lt;code&gt;true&lt;/code&gt; if this &lt;code&gt;IIOImage&lt;/code&gt; stores
                  a &lt;code&gt;Raster&lt;/code&gt; rather than a &lt;code&gt;RenderedImage&lt;/code&gt;.                
                <return>
                    &lt;code&gt;true&lt;/code&gt; if a &lt;code&gt;Raster&lt;/code&gt; is
                      available.                    
                </return>
            </javadoc>
            <method name="hasRaster" type="boolean" line="188">
                <scope line="189"/>
            </method>
            <javadoc line="194">
                Returns the currently set &lt;code&gt;Raster&lt;/code&gt;, or
                  &lt;code&gt;null&lt;/code&gt; if only a &lt;code&gt;RenderedImage&lt;/code&gt; is
                  available.                
                <return>
                    a &lt;code&gt;Raster&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt;.                    
                </return>
                <see>
                    #setRaster                    
                </see>
            </javadoc>
            <method name="getRaster" type="Raster" line="203">
                <scope line="204"/>
            </method>
            <javadoc line="209">
                Sets the current &lt;code&gt;Raster&lt;/code&gt;.  The value is
                  stored by reference.  Any existing &lt;code&gt;RenderedImage&lt;/code&gt; is
                  discarded.                
                <param>
                    raster a &lt;code&gt;Raster&lt;/code&gt;.                    
                </param>
                <exception>
                    IllegalArgumentException if &lt;code&gt;raster&lt;/code&gt; is
                      &lt;code&gt;null&lt;/code&gt;.                    
                </exception>
                <see>
                    #getRaster                    
                </see>
            </javadoc>
            <method name="setRaster" type="void" line="221">
                <params>
                    <param name="raster" type="Raster"/>
                </params>
                <scope line="222">
                    <scope line="223"/>
                </scope>
            </method>
            <javadoc line="231">
                Returns the number of thumbnails stored in this
                  &lt;code&gt;IIOImage&lt;/code&gt;.                
                <return>
                    the number of thumbnails, as an &lt;code&gt;int&lt;/code&gt;.                    
                </return>
            </javadoc>
            <method name="getNumThumbnails" type="int" line="237"/>
            <javadoc line="241">
                Returns a thumbnail associated with the main image.                
                <param>
                    index the index of the desired thumbnail image.                    
                </param>
                <return>
                    a thumbnail image, as a &lt;code&gt;BufferedImage&lt;/code&gt;.                    
                </return>
                <exception>
                    IndexOutOfBoundsException if the supplied index is
                      negative or larger than the largest valid index.                    
                </exception>
                <exception>
                    ClassCastException if a
                      non-&lt;code&gt;BufferedImage&lt;/code&gt; object is encountered in the
                      list of thumbnails at the given index.                    
                </exception>
                <see>
                    #getThumbnails                    
                </see>
                <see>
                    #setThumbnails                    
                </see>
            </javadoc>
            <method name="getThumbnail" type="BufferedImage" line="257">
                <params>
                    <param name="index" type="int"/>
                </params>
                <scope line="258"/>
            </method>
            <javadoc line="264">
                Returns the current &lt;code&gt;List&lt;/code&gt; of thumbnail
                  &lt;code&gt;BufferedImage&lt;/code&gt;s, or &lt;code&gt;null&lt;/code&gt; if none is
                  set.  A live reference is returned.                
                <return>
                    the current &lt;code&gt;List&lt;/code&gt; of
                      &lt;code&gt;BufferedImage&lt;/code&gt; thumbnails, or &lt;code&gt;null&lt;/code&gt;.                    
                </return>
                <see>
                    #getThumbnail(int)                    
                </see>
                <see>
                    #setThumbnails                    
                </see>
            </javadoc>
            <method name="getThumbnails" type="List<? extends BufferedImage>" line="275"/>
            <javadoc line="279">
                Sets the list of thumbnails to a new &lt;code&gt;List&lt;/code&gt; of
                  &lt;code&gt;BufferedImage&lt;/code&gt;s, or to &lt;code&gt;null&lt;/code&gt;.  The
                  reference to the previous &lt;code&gt;List&lt;/code&gt; is discarded.
                  &lt;p&gt; The &lt;code&gt;thumbnails&lt;/code&gt; argument must either be
                  &lt;code&gt;null&lt;/code&gt; or contain only &lt;code&gt;BufferedImage&lt;/code&gt;
                  objects.                
                <param>
                    thumbnails a &lt;code&gt;List&lt;/code&gt; of
                      &lt;code&gt;BufferedImage&lt;/code&gt; thumbnails, or &lt;code&gt;null&lt;/code&gt;.                    
                </param>
                <see>
                    #getThumbnail(int)                    
                </see>
                <see>
                    #getThumbnails                    
                </see>
            </javadoc>
            <method name="setThumbnails" type="void" line="294">
                <params>
                    <param name="thumbnails" type="List<? extends BufferedImage>"/>
                </params>
            </method>
            <javadoc line="298">
                Returns a reference to the current &lt;code&gt;IIOMetadata&lt;/code&gt;
                  object, or &lt;code&gt;null&lt;/code&gt; is none is set.                
                <return>
                    an &lt;code&gt;IIOMetadata&lt;/code&gt; object, or &lt;code&gt;null&lt;/code&gt;.                    
                </return>
                <see>
                    #setMetadata                    
                </see>
            </javadoc>
            <method name="getMetadata" type="IIOMetadata" line="306"/>
            <javadoc line="310">
                Sets the &lt;code&gt;IIOMetadata&lt;/code&gt; to a new object, or
                  &lt;code&gt;null&lt;/code&gt;.                
                <param>
                    metadata an &lt;code&gt;IIOMetadata&lt;/code&gt; object, or
                      &lt;code&gt;null&lt;/code&gt;.                    
                </param>
                <see>
                    #getMetadata                    
                </see>
            </javadoc>
            <method name="setMetadata" type="void" line="319">
                <params>
                    <param name="metadata" type="IIOMetadata"/>
                </params>
            </method>
        </class>
    </source>