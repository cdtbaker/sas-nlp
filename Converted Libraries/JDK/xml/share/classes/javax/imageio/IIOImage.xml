<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.imageio">
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.awt.image.Raster"/>
        <import package="java.awt.image.RenderedImage"/>
        <import package="java.util.List"/>
        <import package="javax.imageio.metadata.IIOMetadata"/>
        <class name="IIOImage" line="7">
            <javadoc line="7">
                A simple container class to aggregate an image, a set of
                  thumbnail (preview) images, and an object representing metadata
                  associated with the image.
                  &lt;p&gt; The image data may take the form of either a
                  &lt;code&gt;RenderedImage&lt;/code&gt;, or a &lt;code&gt;Raster&lt;/code&gt;.  Reader
                  methods that return an &lt;code&gt;IIOImage&lt;/code&gt; will always return a
                  &lt;code&gt;BufferedImage&lt;/code&gt; using the &lt;code&gt;RenderedImage&lt;/code&gt;
                  reference.  Writer methods that accept an &lt;code&gt;IIOImage&lt;/code&gt;
                  will always accept a &lt;code&gt;RenderedImage&lt;/code&gt;, and may optionally
                  accept a &lt;code&gt;Raster&lt;/code&gt;.
                  &lt;p&gt; Exactly one of &lt;code&gt;getRenderedImage&lt;/code&gt; and
                  &lt;code&gt;getRaster&lt;/code&gt; will return a non-&lt;code&gt;null&lt;/code&gt; value.
                  Subclasses are responsible for ensuring this behavior.                
                <see>
                    ImageReader#readAll(int,ImageReadParam)                    
                </see>
                <see>
                    ImageReader#readAll(java.util.Iterator)                    
                </see>
                <see>
                    ImageWriter#write(javax.imageio.metadata.IIOMetadata,IIOImage,ImageWriteParam)                    
                </see>
                <see>
                    ImageWriter#write(IIOImage)                    
                </see>
                <see>
                    ImageWriter#writeToSequence(IIOImage,ImageWriteParam)                    
                </see>
                <see>
                    ImageWriter#writeInsert(int,IIOImage,ImageWriteParam)                    
                </see>
            </javadoc>
            <declaration name="image" type="RenderedImage" line="29"/>
            <javadoc line="29">
                The &lt;code&gt;RenderedImage&lt;/code&gt; being referenced.                
            </javadoc>
            <declaration name="raster" type="Raster" line="33"/>
            <javadoc line="33">
                The &lt;code&gt;Raster&lt;/code&gt; being referenced.                
            </javadoc>
            <declaration name="thumbnails" type="List&lt;? extends BufferedImage&gt;" line="37"/>
            <javadoc line="37">
                A &lt;code&gt;List&lt;/code&gt; of &lt;code&gt;BufferedImage&lt;/code&gt; thumbnails,
                  or &lt;code&gt;null&lt;/code&gt;.  Non-&lt;code&gt;BufferedImage&lt;/code&gt; objects
                  must not be stored in this &lt;code&gt;List&lt;/code&gt;.                
            </javadoc>
            <declaration name="metadata" type="IIOMetadata" line="43"/>
            <javadoc line="43">
                An &lt;code&gt;IIOMetadata&lt;/code&gt; object containing metadata
                  associated with the image.                
            </javadoc>
            <javadoc line="48">
                Constructs an &lt;code&gt;IIOImage&lt;/code&gt; containing a
                  &lt;code&gt;RenderedImage&lt;/code&gt;, and thumbnails and metadata
                  associated with it.
                  &lt;p&gt; All parameters are stored by reference.
                  &lt;p&gt; The &lt;code&gt;thumbnails&lt;/code&gt; argument must either be
                  &lt;code&gt;null&lt;/code&gt; or contain only &lt;code&gt;BufferedImage&lt;/code&gt;
                  objects.                
                <param>
                    image a <code>RenderedImage</code>.                    
                </param>
                <param>
                    thumbnails a <code>List</code> of <code>BufferedImage</code>s,
                      or <code>null</code>.                    
                </param>
                <param>
                    metadata an <code>IIOMetadata</code> object, or
                      <code>null</code>.                    
                </param>
                <exception>
                    IllegalArgumentException if <code>image</code> is
                      <code>null</code>.                    
                </exception>
            </javadoc>
            <method name="IIOImage" type="constructor" line="64">
                <params>
                    <param name="image" type="RenderedImage"/>
                    <param name="thumbnails" type="List<? extends BufferedImage>"/>
                    <param name="metadata" type="IIOMetadata"/>
                </params>
                <scope line="65"/>
            </method>
            <javadoc line="73">
                Constructs an &lt;code&gt;IIOImage&lt;/code&gt; containing a
                  &lt;code&gt;Raster&lt;/code&gt;, and thumbnails and metadata
                  associated with it.
                  &lt;p&gt; All parameters are stored by reference.                
                <param>
                    raster a <code>Raster</code>.                    
                </param>
                <param>
                    thumbnails a <code>List</code> of <code>BufferedImage</code>s,
                      or <code>null</code>.                    
                </param>
                <param>
                    metadata an <code>IIOMetadata</code> object, or
                      <code>null</code>.                    
                </param>
                <exception>
                    IllegalArgumentException if <code>raster</code> is
                      <code>null</code>.                    
                </exception>
            </javadoc>
            <method name="IIOImage" type="constructor" line="86">
                <params>
                    <param name="raster" type="Raster"/>
                    <param name="thumbnails" type="List<? extends BufferedImage>"/>
                    <param name="metadata" type="IIOMetadata"/>
                </params>
                <scope line="87"/>
            </method>
            <javadoc line="95">
                Returns the currently set &lt;code&gt;RenderedImage&lt;/code&gt;, or
                  &lt;code&gt;null&lt;/code&gt; if only a &lt;code&gt;Raster&lt;/code&gt; is available.                
                <return>
                    a <code>RenderedImage</code>, or <code>null</code>.                    
                </return>
                <see>
                    #setRenderedImage                    
                </see>
            </javadoc>
            <method name="getRenderedImage" type="RenderedImage" line="101">
                <scope line="102"/>
            </method>
            <javadoc line="106">
                Sets the current &lt;code&gt;RenderedImage&lt;/code&gt;.  The value is
                  stored by reference.  Any existing &lt;code&gt;Raster&lt;/code&gt; is
                  discarded.                
                <param>
                    image a <code>RenderedImage</code>.                    
                </param>
                <exception>
                    IllegalArgumentException if <code>image</code> is
                      <code>null</code>.                    
                </exception>
                <see>
                    #getRenderedImage                    
                </see>
            </javadoc>
            <method name="setRenderedImage" type="void" line="115">
                <params>
                    <param name="image" type="RenderedImage"/>
                </params>
                <scope line="116">
                    <scope line="117"/>
                </scope>
            </method>
            <javadoc line="124">
                Returns &lt;code&gt;true&lt;/code&gt; if this &lt;code&gt;IIOImage&lt;/code&gt; stores
                  a &lt;code&gt;Raster&lt;/code&gt; rather than a &lt;code&gt;RenderedImage&lt;/code&gt;.                
                <return>
                    <code>true</code> if a <code>Raster</code> is
                      available.                    
                </return>
            </javadoc>
            <method name="hasRaster" type="boolean" line="130">
                <scope line="131"/>
            </method>
            <javadoc line="135">
                Returns the currently set &lt;code&gt;Raster&lt;/code&gt;, or
                  &lt;code&gt;null&lt;/code&gt; if only a &lt;code&gt;RenderedImage&lt;/code&gt; is
                  available.                
                <return>
                    a <code>Raster</code>, or <code>null</code>.                    
                </return>
                <see>
                    #setRaster                    
                </see>
            </javadoc>
            <method name="getRaster" type="Raster" line="142">
                <scope line="143"/>
            </method>
            <javadoc line="147">
                Sets the current &lt;code&gt;Raster&lt;/code&gt;.  The value is
                  stored by reference.  Any existing &lt;code&gt;RenderedImage&lt;/code&gt; is
                  discarded.                
                <param>
                    raster a <code>Raster</code>.                    
                </param>
                <exception>
                    IllegalArgumentException if <code>raster</code> is
                      <code>null</code>.                    
                </exception>
                <see>
                    #getRaster                    
                </see>
            </javadoc>
            <method name="setRaster" type="void" line="156">
                <params>
                    <param name="raster" type="Raster"/>
                </params>
                <scope line="157">
                    <scope line="158"/>
                </scope>
            </method>
            <javadoc line="165">
                Returns the number of thumbnails stored in this
                  &lt;code&gt;IIOImage&lt;/code&gt;.                
                <return>
                    the number of thumbnails, as an <code>int</code>.                    
                </return>
            </javadoc>
            <method name="getNumThumbnails" type="int" line="170"/>
            <javadoc line="173">
                Returns a thumbnail associated with the main image.                
                <param>
                    index the index of the desired thumbnail image.                    
                </param>
                <return>
                    a thumbnail image, as a <code>BufferedImage</code>.                    
                </return>
                <exception>
                    IndexOutOfBoundsException if the supplied index is
                      negative or larger than the largest valid index.                    
                </exception>
                <exception>
                    ClassCastException if a
                      non-<code>BufferedImage</code> object is encountered in the
                      list of thumbnails at the given index.                    
                </exception>
                <see>
                    #getThumbnails                    
                </see>
                <see>
                    #setThumbnails                    
                </see>
            </javadoc>
            <method name="getThumbnail" type="BufferedImage" line="185">
                <params>
                    <param name="index" type="int"/>
                </params>
                <scope line="186"/>
            </method>
            <javadoc line="191">
                Returns the current &lt;code&gt;List&lt;/code&gt; of thumbnail
                  &lt;code&gt;BufferedImage&lt;/code&gt;s, or &lt;code&gt;null&lt;/code&gt; if none is
                  set.  A live reference is returned.                
                <return>
                    the current <code>List</code> of
                      <code>BufferedImage</code> thumbnails, or <code>null</code>.                    
                </return>
                <see>
                    #getThumbnail(int)                    
                </see>
                <see>
                    #setThumbnails                    
                </see>
            </javadoc>
            <method name="getThumbnails" type="List<? extends BufferedImage>" line="200"/>
            <javadoc line="203">
                Sets the list of thumbnails to a new &lt;code&gt;List&lt;/code&gt; of
                  &lt;code&gt;BufferedImage&lt;/code&gt;s, or to &lt;code&gt;null&lt;/code&gt;.  The
                  reference to the previous &lt;code&gt;List&lt;/code&gt; is discarded.
                  &lt;p&gt; The &lt;code&gt;thumbnails&lt;/code&gt; argument must either be
                  &lt;code&gt;null&lt;/code&gt; or contain only &lt;code&gt;BufferedImage&lt;/code&gt;
                  objects.                
                <param>
                    thumbnails a <code>List</code> of
                      <code>BufferedImage</code> thumbnails, or <code>null</code>.                    
                </param>
                <see>
                    #getThumbnail(int)                    
                </see>
                <see>
                    #getThumbnails                    
                </see>
            </javadoc>
            <method name="setThumbnails" type="void" line="215">
                <params>
                    <param name="thumbnails" type="List<? extends BufferedImage>"/>
                </params>
            </method>
            <javadoc line="218">
                Returns a reference to the current &lt;code&gt;IIOMetadata&lt;/code&gt;
                  object, or &lt;code&gt;null&lt;/code&gt; is none is set.                
                <return>
                    an <code>IIOMetadata</code> object, or <code>null</code>.                    
                </return>
                <see>
                    #setMetadata                    
                </see>
            </javadoc>
            <method name="getMetadata" type="IIOMetadata" line="224"/>
            <javadoc line="227">
                Sets the &lt;code&gt;IIOMetadata&lt;/code&gt; to a new object, or
                  &lt;code&gt;null&lt;/code&gt;.                
                <param>
                    metadata an <code>IIOMetadata</code> object, or
                      <code>null</code>.                    
                </param>
                <see>
                    #getMetadata                    
                </see>
            </javadoc>
            <method name="setMetadata" type="void" line="234">
                <params>
                    <param name="metadata" type="IIOMetadata"/>
                </params>
            </method>
        </class>
    </source>