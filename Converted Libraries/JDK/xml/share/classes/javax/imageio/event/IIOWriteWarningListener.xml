<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.imageio.event">
        <import package="java.util.EventListener"/>
        <import package="javax.imageio.ImageWriter"/>
        <interface name="IIOWriteWarningListener">
            <implements interface="EventListener"/>
            <javadoc line="31">
                An interface used by &lt;code&gt;ImageWriter&lt;/code&gt; implementations to
                  notify callers of their image and thumbnail reading methods of
                  warnings (non-fatal errors).  Fatal errors cause the relevant
                  read method to throw an &lt;code&gt;IIOException&lt;/code&gt;.
                  &lt;p&gt; Localization is handled by associating a &lt;code&gt;Locale&lt;/code&gt;
                  with each &lt;code&gt;IIOWriteWarningListener&lt;/code&gt; as it is registered
                  with an &lt;code&gt;ImageWriter&lt;/code&gt;.  It is up to the
                  &lt;code&gt;ImageWriter&lt;/code&gt; to provide localized messages.                
                <see>
                    javax.imageio.ImageWriter#addIIOWriteWarningListener                    
                </see>
                <see>
                    javax.imageio.ImageWriter#removeIIOWriteWarningListener                    
                </see>
            </javadoc>
            <method name="warningOccurred" type="void" line="48"/>
            <javadoc line="48">
                Reports the occurence of a non-fatal error in encoding.  Encoding
                  will continue following the call to this method.  The application
                  may choose to display a dialog, print the warning to the console,
                  ignore the warning, or take any other action it chooses.                
                <param>
                    source the &lt;code&gt;ImageWriter&lt;/code&gt; object calling this method.                    
                </param>
                <param>
                    imageIndex the index, starting with 0, of the image
                      generating the warning.                    
                </param>
                <param>
                    warning a &lt;code&gt;String&lt;/code&gt; containing the warning.                    
                </param>
            </javadoc>
        </interface>
    </source>