<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing">
        <interface name="DesktopManager">
            <javadoc line="28">
                DesktopManager objects are owned by a JDesktopPane object. They are responsible
                  for implementing L&amp;F specific behaviors for the JDesktopPane. JInternalFrame
                  implementations should delegate specific behaviors to the DesktopManager. For
                  instance, if a JInternalFrame was asked to iconify, it should try:
                  &lt;PRE&gt;
                  getDesktopPane().getDesktopManager().iconifyFrame(frame);
                  &lt;/PRE&gt;
                  This delegation allows each L&amp;F to provide custom behaviors for desktop-specific
                  actions. (For example, how and where the internal frame&apos;s icon would appear.)
                  &lt;p&gt;This class provides a policy for the various JInternalFrame methods, it is not
                  meant to be called directly rather the various JInternalFrame methods will call
                  into the DesktopManager.&lt;/p&gt;                
                <see>
                    JDesktopPane                    
                </see>
                <see>
                    JInternalFrame                    
                </see>
                <see>
                    JInternalFrame.JDesktopIcon                    
                </see>
                <author>
                    David Kloba                    
                </author>
            </javadoc>
            <method name="openFrame" type="void" line="49"/>
            <javadoc line="49">
                If possible, display this frame in an appropriate location.
                  Normally, this is not called, as the creator of the JInternalFrame
                  will add the frame to the appropriate parent.                
            </javadoc>
            <method name="closeFrame" type="void" line="55"/>
            <javadoc line="55">
                Generally, this call should remove the frame from it&apos;s parent.                
            </javadoc>
            <method name="maximizeFrame" type="void" line="58"/>
            <javadoc line="58">
                Generally, the frame should be resized to match it&apos;s parents bounds.                
            </javadoc>
            <method name="minimizeFrame" type="void" line="60"/>
            <javadoc line="60">
                Generally, this indicates that the frame should be restored to it&apos;s
                  size and position prior to a maximizeFrame() call.                
            </javadoc>
            <method name="iconifyFrame" type="void" line="64"/>
            <javadoc line="64">
                Generally, remove this frame from it&apos;s parent and add an iconic representation.                
            </javadoc>
            <method name="deiconifyFrame" type="void" line="66"/>
            <javadoc line="66">
                Generally, remove any iconic representation that is present and restore the
                  frame to it&apos;s original size and location.                
            </javadoc>
            <method name="activateFrame" type="void" line="71"/>
            <javadoc line="71">
                Generally, indicate that this frame has focus. This is usually called after
                  the JInternalFrame&apos;s IS_SELECTED_PROPERTY has been set to true.                
            </javadoc>
            <method name="deactivateFrame" type="void" line="77"/>
            <javadoc line="77">
                Generally, indicate that this frame has lost focus. This is usually called
                  after the JInternalFrame&apos;s IS_SELECTED_PROPERTY has been set to false.                
            </javadoc>
            <method name="beginDraggingFrame" type="void" line="83"/>
            <javadoc line="83">
                This method is normally called when the user has indicated that
                  they will begin dragging a component around. This method should be called
                  prior to any dragFrame() calls to allow the DesktopManager to prepare any
                  necessary state. Normally &lt;b&gt;f&lt;/b&gt; will be a JInternalFrame.                
            </javadoc>
            <method name="dragFrame" type="void" line="90"/>
            <javadoc line="90">
                The user has moved the frame. Calls to this method will be preceded by calls
                  to beginDraggingFrame().
                  Normally &lt;b&gt;f&lt;/b&gt; will be a JInternalFrame.                
            </javadoc>
            <method name="endDraggingFrame" type="void" line="95"/>
            <javadoc line="95">
                This method signals the end of the dragging session. Any state maintained by
                  the DesktopManager can be removed here.  Normally &lt;b&gt;f&lt;/b&gt; will be a JInternalFrame.                
            </javadoc>
            <method name="beginResizingFrame" type="void" line="100"/>
            <javadoc line="100">
                This methods is normally called when the user has indicated that
                  they will begin resizing the frame. This method should be called
                  prior to any resizeFrame() calls to allow the DesktopManager to prepare any
                  necessary state.  Normally &lt;b&gt;f&lt;/b&gt; will be a JInternalFrame.                
            </javadoc>
            <method name="resizeFrame" type="void" line="106"/>
            <javadoc line="106">
                The user has resized the component. Calls to this method will be preceded by calls
                  to beginResizingFrame().
                  Normally &lt;b&gt;f&lt;/b&gt; will be a JInternalFrame.                
            </javadoc>
            <method name="endResizingFrame" type="void" line="111"/>
            <javadoc line="111">
                This method signals the end of the resize session. Any state maintained by
                  the DesktopManager can be removed here.  Normally &lt;b&gt;f&lt;/b&gt; will be a JInternalFrame.                
            </javadoc>
            <method name="setBoundsForFrame" type="void" line="116"/>
            <javadoc line="116">
                This is a primitive reshape method.                
            </javadoc>
        </interface>
    </source>