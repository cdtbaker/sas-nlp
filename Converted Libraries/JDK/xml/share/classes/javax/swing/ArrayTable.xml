<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing">
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.Serializable"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.Hashtable"/>
        <class name="ArrayTable" line="45">
            <comment line="47">
                Our field for storage                
            </comment>
            <comment line="106">
                Put the key-value pair into storage                
            </comment>
            <comment line="142">
                Gets the value for key                
            </comment>
            <comment line="163">
                Returns the number of pairs in storage                
            </comment>
            <comment line="178">
                Returns true if we have a value for the key                
            </comment>
            <comment line="199">
                Removes the key and its value
                 Returns the value for the pair removed                
            </comment>
            <comment line="252">
                Returns a clone of the &lt;code&gt;ArrayTable&lt;code&gt;.                
            </comment>
            <comment line="306">
                Returns true if the current storage mechanism is
                 an array of alternating key-value pairs.                
            </comment>
            <comment line="314">
                Grows the storage from an array to a hashtable.                
            </comment>
            <comment line="326">
                Shrinks the storage from a hashtable to an array.                
            </comment>
            <implements interface="Cloneable"/>
            <declaration name="table" type="Object" line="47"/>
            <declaration name="ARRAY_BOUNDARY" type="int" line="48"/>
            <javadoc line="51">
                Writes the passed in ArrayTable to the passed in ObjectOutputStream.
                  The data is saved as an integer indicating how many key/value
                  pairs are being archived, followed by the the key/value pairs. If
                  &lt;code&gt;table&lt;/code&gt; is null, 0 will be written to &lt;code&gt;s&lt;/code&gt;.
                  &lt;p&gt;
                  This is a convenience method that ActionMap/InputMap and
                  AbstractAction use to avoid having the same code in each class.                
            </javadoc>
            <method name="writeArrayTable" type="void" line="60">
                <params>
                    <param name="s" type="ObjectOutputStream"/>
                    <param name="table" type="ArrayTable"/>
                </params>
                <comment line="67">
                    Determine how many keys have Serializable values, when                    
                </comment>
                <comment line="68">
                    done all non-null values in keys identify the Serializable                    
                </comment>
                <comment line="69">
                    values.                    
                </comment>
                <comment line="75">
                                        
                </comment>
                <comment line="79">
                                        
                </comment>
                <comment line="88">
                    Write ou the Serializable key/value pairs.                    
                </comment>
                <declaration name="keys" type="Object" line="61"/>
                <scope line="63"/>
                <scope line="66">
                    <declaration name="validCount" type="int" line="70"/>
                    <scope line="72">
                        <declaration name="key" type="Object" line="73"/>
                        <scope line="81"/>
                        <scope line="84"/>
                    </scope>
                    <scope line="90">
                        <scope line="91">
                            <scope line="92">
                                <scope line="95"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="put" type="void" line="108">
                <params>
                    <param name="key" type="Object"/>
                    <param name="value" type="Object"/>
                </params>
                <comment line="113">
                    We are an array                    
                </comment>
                <comment line="132">
                    We are a hashtable                    
                </comment>
                <scope line="109"/>
                <scope line="111">
                    <declaration name="size" type="int" line="112"/>
                    <scope line="113">
                        <scope line="114">
                            <declaration name="tmp" type="Object[]" line="115"/>
                            <scope line="116">
                                <scope line="117"/>
                            </scope>
                        </scope>
                        <scope line="122">
                            <declaration name="array" type="Object[]" line="123"/>
                            <declaration name="i" type="int" line="124"/>
                            <declaration name="tmp" type="Object[]" line="125"/>
                        </scope>
                    </scope>
                    <scope line="132">
                        <scope line="133"/>
                    </scope>
                </scope>
            </method>
            <method name="get" type="Object" line="144">
                <params>
                    <param name="key" type="Object"/>
                </params>
                <declaration name="value" type="Object" line="145"/>
                <scope line="146">
                    <scope line="147">
                        <declaration name="array" type="Object[]" line="148"/>
                        <scope line="149">
                            <scope line="150"/>
                        </scope>
                    </scope>
                    <scope line="155"/>
                </scope>
            </method>
            <method name="size" type="int" line="165">
                <declaration name="size" type="int" line="166"/>
                <scope line="169"/>
                <scope line="171"/>
            </method>
            <method name="containsKey" type="boolean" line="180">
                <params>
                    <param name="key" type="Object"/>
                </params>
                <declaration name="contains" type="boolean" line="181"/>
                <scope line="182">
                    <scope line="183">
                        <declaration name="array" type="Object[]" line="184"/>
                        <scope line="185">
                            <scope line="186"/>
                        </scope>
                    </scope>
                    <scope line="191"/>
                </scope>
            </method>
            <method name="remove" type="Object" line="202">
                <params>
                    <param name="key" type="Object"/>
                </params>
                <comment line="209">
                    Is key on the list?                    
                </comment>
                <comment line="220">
                    If so,  remove it                    
                </comment>
                <comment line="223">
                    Copy the list up to index                    
                </comment>
                <comment line="225">
                    Copy from two past the index, up to                    
                </comment>
                <comment line="226">
                    the end of tmp (which is two elements                    
                </comment>
                <comment line="227">
                    shorter than the old list)                    
                </comment>
                <comment line="231">
                    set the listener array to the new array or null                    
                </comment>
                <declaration name="value" type="Object" line="203"/>
                <scope line="204"/>
                <scope line="207">
                    <scope line="208">
                        <declaration name="index" type="int" line="210"/>
                        <declaration name="array" type="Object[]" line="211"/>
                        <scope line="212">
                            <scope line="213"/>
                        </scope>
                        <scope line="221">
                            <declaration name="tmp" type="Object[]" line="222"/>
                        </scope>
                    </scope>
                    <scope line="234"/>
                    <scope line="237"/>
                </scope>
            </method>
            <javadoc line="244">
                Removes all the mappings.                
            </javadoc>
            <method name="clear" type="void" line="247"/>
            <method name="clone" type="Object" line="254">
                <declaration name="newArrayTable" type="ArrayTable" line="255"/>
                <scope line="256">
                    <declaration name="array" type="Object[]" line="257"/>
                    <scope line="258"/>
                </scope>
                <scope line="261">
                    <declaration name="tmp" type="Hashtable" line="262"/>
                    <declaration name="keys" type="Enumeration" line="263"/>
                    <scope line="264">
                        <declaration name="o" type="Object" line="265"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="272">
                Returns the keys of the table, or &lt;code&gt;null&lt;/code&gt; if there
                  are currently no bindings.                
                <param>
                    keys  array of keys                    
                </param>
                <return>
                    an array of bindings                    
                </return>
            </javadoc>
            <method name="getKeys" type="Object[]" line="278">
                <params>
                    <param name="keys" type="Object[]"/>
                </params>
                <scope line="279"/>
                <scope line="282">
                    <declaration name="array" type="Object[]" line="283"/>
                    <scope line="284"/>
                    <scope line="288"/>
                </scope>
                <scope line="291">
                    <declaration name="tmp" type="Hashtable" line="292"/>
                    <declaration name="enum_" type="Enumeration" line="293"/>
                    <declaration name="counter" type="int" line="294"/>
                    <scope line="295"/>
                    <scope line="298"/>
                </scope>
            </method>
            <method name="isArray" type="boolean" line="309"/>
            <method name="grow" type="void" line="316">
                <declaration name="array" type="Object[]" line="317"/>
                <declaration name="tmp" type="Hashtable&lt;Object,Object&gt;" line="318"/>
                <scope line="319"/>
            </method>
            <method name="shrink" type="void" line="328">
                <declaration name="tmp" type="Hashtable" line="329"/>
                <declaration name="array" type="Object[]" line="330"/>
                <declaration name="keys" type="Enumeration" line="331"/>
                <declaration name="j" type="int" line="332"/>
                <scope line="334">
                    <declaration name="o" type="Object" line="335"/>
                </scope>
            </method>
        </class>
    </source>