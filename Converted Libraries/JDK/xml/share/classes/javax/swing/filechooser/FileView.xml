<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.filechooser">
        <import package="java.io.File"/>
        <import package="javax.swing"/>
        <class name="FileView" line="31">
            <javadoc line="31">
                &lt;code&gt;FileView&lt;/code&gt; defines an abstract class that can be implemented
                  to provide the filechooser with UI information for a &lt;code&gt;File&lt;/code&gt;.
                  Each L&amp;F &lt;code&gt;JFileChooserUI&lt;/code&gt; object implements this
                  class to pass back the correct icons and type descriptions specific to
                  that L&amp;F. For example, the Microsoft Windows L&amp;F returns the
                  generic Windows icons for directories and generic files.
                  Additionally, you may want to provide your own &lt;code&gt;FileView&lt;/code&gt; to
                  &lt;code&gt;JFileChooser&lt;/code&gt; to return different icons or additional
                  information using {@link javax.swing.JFileChooser#setFileView}.
                  &lt;p&gt;
                  &lt;code&gt;JFileChooser&lt;/code&gt; first looks to see if there is a user defined
                  &lt;code&gt;FileView&lt;/code&gt;, if there is, it gets type information from
                  there first. If &lt;code&gt;FileView&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt; for
                  any method, &lt;code&gt;JFileChooser&lt;/code&gt; then uses the L&amp;F specific
                  view to get the information.
                  So, for example, if you provide a &lt;code&gt;FileView&lt;/code&gt; class that
                  returns an &lt;code&gt;Icon&lt;/code&gt; for JPG files, and returns &lt;code&gt;null&lt;/code&gt;
                  icons for all other files, the UI&apos;s &lt;code&gt;FileView&lt;/code&gt; will provide
                  default icons for all other files.
                  &lt;p&gt;
                  For an example implementation of a simple file view, see
                  &lt;code&gt;&lt;i&gt;yourJDK&lt;/i&gt;/demo/jfc/FileChooserDemo/ExampleFileView.java&lt;/code&gt;.
                  For more information and examples see
                  &lt;a
                  href=&quot;http://java.sun.com/docs/books/tutorial/uiswing/components/filechooser.html&quot;&gt;How to Use File Choosers&lt;/a&gt;,
                  a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.                
                <see>
                    javax.swing.JFileChooser                    
                </see>
                <author>
                    Jeff Dinkins                    
                </author>
            </javadoc>
            <javadoc line="69">
                The name of the file. Normally this would be simply
                  &lt;code&gt;f.getName()&lt;/code&gt;.                
            </javadoc>
            <method name="getName" type="String" line="73">
                <params>
                    <param name="f" type="File"/>
                </params>
            </method>
            <javadoc line="77">
                A human readable description of the file. For example,
                  a file named &lt;i&gt;jag.jpg&lt;/i&gt; might have a description that read:
                  &quot;A JPEG image file of James Gosling&apos;s face&quot;.                
            </javadoc>
            <method name="getDescription" type="String" line="82">
                <params>
                    <param name="f" type="File"/>
                </params>
            </method>
            <javadoc line="86">
                A human readable description of the type of the file. For
                  example, a &lt;code&gt;jpg&lt;/code&gt; file might have a type description of:
                  &quot;A JPEG Compressed Image File&quot;                
            </javadoc>
            <method name="getTypeDescription" type="String" line="91">
                <params>
                    <param name="f" type="File"/>
                </params>
            </method>
            <javadoc line="95">
                The icon that represents this file in the &lt;code&gt;JFileChooser&lt;/code&gt;.                
            </javadoc>
            <method name="getIcon" type="Icon" line="98">
                <params>
                    <param name="f" type="File"/>
                </params>
            </method>
            <javadoc line="102">
                Whether the directory is traversable or not. This might be
                  useful, for example, if you want a directory to represent
                  a compound document and don&apos;t want the user to descend into it.                
            </javadoc>
            <method name="isTraversable" type="Boolean" line="107">
                <params>
                    <param name="f" type="File"/>
                </params>
            </method>
        </class>
    </source>