<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing">
        <import package="java.awt"/>
        <import package="java.awt.image"/>
        <import package="java.text.AttributedCharacterIterator"/>
        <class name="DebugGraphics" line="32">
            <extends class="Graphics"/>
            <comment line="136">
                ------------------------------------------------                
            </comment>
            <comment line="137">
                NEW METHODS                
            </comment>
            <comment line="138">
                ------------------------------------------------                
            </comment>
            <comment line="230">
                -----------------------------------------------                
            </comment>
            <comment line="231">
                OVERRIDDEN METHODS                
            </comment>
            <comment line="232">
                ------------------------------------------------                
            </comment>
            <comment line="1315">
                ALERT!                
            </comment>
            <javadoc line="32">
                Graphics subclass supporting graphics debugging. Overrides most methods
                  from Graphics.  DebugGraphics objects are rarely created by hand.  They
                  are most frequently created automatically when a JComponent&apos;s
                  debugGraphicsOptions are changed using the setDebugGraphicsOptions()
                  method.
                  &lt;p&gt;
                  NOTE: You must turn off double buffering to use DebugGraphics:
                  RepaintManager repaintManager = RepaintManager.currentManager(component);
                  repaintManager.setDoubleBufferingEnabled(false);                
                <see>
                    JComponent#setDebugGraphicsOptions                    
                </see>
                <see>
                    RepaintManager#currentManager                    
                </see>
                <see>
                    RepaintManager#setDoubleBufferingEnabled                    
                </see>
                <author>
                    Dave Karlton                    
                </author>
            </javadoc>
            <declaration name="graphics" type="Graphics" line="50"/>
            <declaration name="buffer" type="Image" line="51"/>
            <declaration name="debugOptions" type="int" line="52"/>
            <declaration name="graphicsID" type="int" line="53"/>
            <declaration name="xOffset" type="int" line="54"/>
            <declaration name="graphicsCount" type="int" line="55"/>
            <declaration name="imageLoadingIcon" type="ImageIcon" line="56"/>
            <declaration name="LOG_OPTION" type="int" line="58"/>
            <javadoc line="58">
                Log graphics operations.                
            </javadoc>
            <declaration name="FLASH_OPTION" type="int" line="60"/>
            <javadoc line="60">
                Flash graphics operations.                
            </javadoc>
            <declaration name="BUFFERED_OPTION" type="int" line="62"/>
            <javadoc line="62">
                Show buffered operations in a separate &lt;code&gt;Frame&lt;/code&gt;.                
            </javadoc>
            <declaration name="NONE_OPTION" type="int" line="64"/>
            <javadoc line="64">
                Don&apos;t debug graphics operations.                
            </javadoc>
            <scope line="67"/>
            <javadoc line="71">
                Constructs a new debug graphics context that supports slowed
                  down drawing.                
            </javadoc>
            <method name="DebugGraphics" type="constructor" line="75"/>
            <javadoc line="81">
                Constructs a debug graphics context from an existing graphics
                  context that slows down drawing for the specified component.                
                <param>
                    graphics  the Graphics context to slow down                    
                </param>
                <param>
                    component the JComponent to draw slowly                    
                </param>
            </javadoc>
            <method name="DebugGraphics" type="constructor" line="88">
                <params>
                    <param name="graphics" type="Graphics"/>
                    <param name="component" type="JComponent"/>
                </params>
            </method>
            <javadoc line="93">
                Constructs a debug graphics context from an existing graphics
                  context that supports slowed down drawing.                
                <param>
                    graphics  the Graphics context to slow down                    
                </param>
            </javadoc>
            <method name="DebugGraphics" type="constructor" line="99">
                <params>
                    <param name="graphics" type="Graphics"/>
                </params>
            </method>
            <javadoc line="104">
                Overrides &lt;code&gt;Graphics.create&lt;/code&gt; to return a DebugGraphics object.                
            </javadoc>
            <method name="create" type="Graphics" line="107">
                <declaration name="debugGraphics" type="DebugGraphics" line="108"/>
            </method>
            <javadoc line="118">
                Overrides &lt;code&gt;Graphics.create&lt;/code&gt; to return a DebugGraphics object.                
            </javadoc>
            <method name="create" type="Graphics" line="121">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="debugGraphics" type="DebugGraphics" line="122"/>
            </method>
            <javadoc line="139">
                Sets the Color used to flash drawing operations.                
            </javadoc>
            <method name="setFlashColor" type="void" line="142">
                <params>
                    <param name="flashColor" type="Color"/>
                </params>
            </method>
            <javadoc line="146">
                Returns the Color used to flash drawing operations.                
                <see>
                    #setFlashColor                    
                </see>
            </javadoc>
            <method name="flashColor" type="Color" line="150"/>
            <javadoc line="154">
                Sets the time delay of drawing operation flashing.                
            </javadoc>
            <method name="setFlashTime" type="void" line="157">
                <params>
                    <param name="flashTime" type="int"/>
                </params>
            </method>
            <javadoc line="161">
                Returns the time delay of drawing operation flashing.                
                <see>
                    #setFlashTime                    
                </see>
            </javadoc>
            <method name="flashTime" type="int" line="165"/>
            <javadoc line="169">
                Sets the number of times that drawing operations will flash.                
            </javadoc>
            <method name="setFlashCount" type="void" line="172">
                <params>
                    <param name="flashCount" type="int"/>
                </params>
            </method>
            <javadoc line="176">
                Returns the number of times that drawing operations will flash.                
                <see>
                    #setFlashCount                    
                </see>
            </javadoc>
            <method name="flashCount" type="int" line="179"/>
            <javadoc line="183">
                Sets the stream to which the DebugGraphics logs drawing operations.                
            </javadoc>
            <method name="setLogStream" type="void" line="185">
                <params>
                    <param name="stream" type="java.io.PrintStream"/>
                </params>
            </method>
            <javadoc line="189">
                Returns the stream to which the DebugGraphics logs drawing operations.                
                <see>
                    #setLogStream                    
                </see>
            </javadoc>
            <method name="logStream" type="java.io.PrintStream" line="192"/>
            <javadoc line="196">
                Sets the Font used for text drawing operations.                
            </javadoc>
            <method name="setFont" type="void" line="198">
                <params>
                    <param name="aFont" type="Font"/>
                </params>
                <scope line="199"/>
            </method>
            <javadoc line="205">
                Returns the Font used for text drawing operations.                
                <see>
                    #setFont                    
                </see>
            </javadoc>
            <method name="getFont" type="Font" line="208"/>
            <javadoc line="212">
                Sets the color to be used for drawing and filling lines and shapes.                
            </javadoc>
            <method name="setColor" type="void" line="214">
                <params>
                    <param name="aColor" type="Color"/>
                </params>
                <scope line="215"/>
            </method>
            <javadoc line="221">
                Returns the Color used for text drawing operations.                
                <see>
                    #setColor                    
                </see>
            </javadoc>
            <method name="getColor" type="Color" line="224"/>
            <javadoc line="233">
                Overrides &lt;code&gt;Graphics.getFontMetrics&lt;/code&gt;.                
            </javadoc>
            <method name="getFontMetrics" type="FontMetrics" line="236"/>
            <javadoc line="240">
                Overrides &lt;code&gt;Graphics.getFontMetrics&lt;/code&gt;.                
            </javadoc>
            <method name="getFontMetrics" type="FontMetrics" line="243">
                <params>
                    <param name="f" type="Font"/>
                </params>
            </method>
            <javadoc line="247">
                Overrides &lt;code&gt;Graphics.translate&lt;/code&gt;.                
            </javadoc>
            <method name="translate" type="void" line="250">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <scope line="251"/>
            </method>
            <javadoc line="260">
                Overrides &lt;code&gt;Graphics.setPaintMode&lt;/code&gt;.                
            </javadoc>
            <method name="setPaintMode" type="void" line="263">
                <scope line="264"/>
            </method>
            <javadoc line="270">
                Overrides &lt;code&gt;Graphics.setXORMode&lt;/code&gt;.                
            </javadoc>
            <method name="setXORMode" type="void" line="273">
                <params>
                    <param name="aColor" type="Color"/>
                </params>
                <scope line="274"/>
            </method>
            <javadoc line="280">
                Overrides &lt;code&gt;Graphics.getClipBounds&lt;/code&gt;.                
            </javadoc>
            <method name="getClipBounds" type="Rectangle" line="283"/>
            <javadoc line="287">
                Overrides &lt;code&gt;Graphics.clipRect&lt;/code&gt;.                
            </javadoc>
            <method name="clipRect" type="void" line="290">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <scope line="292"/>
            </method>
            <javadoc line="299">
                Overrides &lt;code&gt;Graphics.setClip&lt;/code&gt;.                
            </javadoc>
            <method name="setClip" type="void" line="302">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <scope line="304"/>
            </method>
            <javadoc line="310">
                Overrides &lt;code&gt;Graphics.getClip&lt;/code&gt;.                
            </javadoc>
            <method name="getClip" type="Shape" line="313"/>
            <javadoc line="317">
                Overrides &lt;code&gt;Graphics.setClip&lt;/code&gt;.                
            </javadoc>
            <method name="setClip" type="void" line="320">
                <params>
                    <param name="clip" type="Shape"/>
                </params>
                <scope line="322"/>
            </method>
            <javadoc line="328">
                Overrides &lt;code&gt;Graphics.drawRect&lt;/code&gt;.                
            </javadoc>
            <method name="drawRect" type="void" line="331">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="332"/>
                <scope line="334"/>
                <scope line="340">
                    <scope line="341">
                        <declaration name="debugGraphics" type="Graphics" line="342"/>
                    </scope>
                </scope>
                <scope line="347">
                    <declaration name="oldColor" type="Color" line="348"/>
                    <declaration name="i" type="int" line="349"/>
                    <scope line="351"/>
                </scope>
            </method>
            <javadoc line="362">
                Overrides &lt;code&gt;Graphics.fillRect&lt;/code&gt;.                
            </javadoc>
            <method name="fillRect" type="void" line="365">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="366"/>
                <scope line="368"/>
                <scope line="374">
                    <scope line="375">
                        <declaration name="debugGraphics" type="Graphics" line="376"/>
                    </scope>
                </scope>
                <scope line="381">
                    <declaration name="oldColor" type="Color" line="382"/>
                    <declaration name="i" type="int" line="383"/>
                    <scope line="385"/>
                </scope>
            </method>
            <javadoc line="396">
                Overrides &lt;code&gt;Graphics.clearRect&lt;/code&gt;.                
            </javadoc>
            <method name="clearRect" type="void" line="399">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="400"/>
                <scope line="402"/>
                <scope line="408">
                    <scope line="409">
                        <declaration name="debugGraphics" type="Graphics" line="410"/>
                    </scope>
                </scope>
                <scope line="415">
                    <declaration name="oldColor" type="Color" line="416"/>
                    <declaration name="i" type="int" line="417"/>
                    <scope line="419"/>
                </scope>
            </method>
            <javadoc line="430">
                Overrides &lt;code&gt;Graphics.drawRoundRect&lt;/code&gt;.                
            </javadoc>
            <method name="drawRoundRect" type="void" line="434">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="arcWidth" type="int"/>
                    <param name="arcHeight" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="435"/>
                <scope line="437"/>
                <scope line="444">
                    <scope line="445">
                        <declaration name="debugGraphics" type="Graphics" line="446"/>
                    </scope>
                </scope>
                <scope line="452">
                    <declaration name="oldColor" type="Color" line="453"/>
                    <declaration name="i" type="int" line="454"/>
                    <scope line="456"/>
                </scope>
            </method>
            <javadoc line="468">
                Overrides &lt;code&gt;Graphics.fillRoundRect&lt;/code&gt;.                
            </javadoc>
            <method name="fillRoundRect" type="void" line="472">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="arcWidth" type="int"/>
                    <param name="arcHeight" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="473"/>
                <scope line="475"/>
                <scope line="482">
                    <scope line="483">
                        <declaration name="debugGraphics" type="Graphics" line="484"/>
                    </scope>
                </scope>
                <scope line="490">
                    <declaration name="oldColor" type="Color" line="491"/>
                    <declaration name="i" type="int" line="492"/>
                    <scope line="494"/>
                </scope>
            </method>
            <javadoc line="506">
                Overrides &lt;code&gt;Graphics.drawLine&lt;/code&gt;.                
            </javadoc>
            <method name="drawLine" type="void" line="509">
                <params>
                    <param name="x1" type="int"/>
                    <param name="y1" type="int"/>
                    <param name="x2" type="int"/>
                    <param name="y2" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="510"/>
                <scope line="512"/>
                <scope line="518">
                    <scope line="519">
                        <declaration name="debugGraphics" type="Graphics" line="520"/>
                    </scope>
                </scope>
                <scope line="525">
                    <declaration name="oldColor" type="Color" line="526"/>
                    <declaration name="i" type="int" line="527"/>
                    <scope line="529"/>
                </scope>
            </method>
            <javadoc line="540">
                Overrides &lt;code&gt;Graphics.draw3DRect&lt;/code&gt;.                
            </javadoc>
            <method name="draw3DRect" type="void" line="544">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="raised" type="boolean"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="545"/>
                <scope line="547"/>
                <scope line="553">
                    <scope line="554">
                        <declaration name="debugGraphics" type="Graphics" line="555"/>
                    </scope>
                </scope>
                <scope line="560">
                    <declaration name="oldColor" type="Color" line="561"/>
                    <declaration name="i" type="int" line="562"/>
                    <scope line="564"/>
                </scope>
            </method>
            <javadoc line="575">
                Overrides &lt;code&gt;Graphics.fill3DRect&lt;/code&gt;.                
            </javadoc>
            <method name="fill3DRect" type="void" line="579">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="raised" type="boolean"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="580"/>
                <scope line="582"/>
                <scope line="588">
                    <scope line="589">
                        <declaration name="debugGraphics" type="Graphics" line="590"/>
                    </scope>
                </scope>
                <scope line="595">
                    <declaration name="oldColor" type="Color" line="596"/>
                    <declaration name="i" type="int" line="597"/>
                    <scope line="599"/>
                </scope>
            </method>
            <javadoc line="610">
                Overrides &lt;code&gt;Graphics.drawOval&lt;/code&gt;.                
            </javadoc>
            <method name="drawOval" type="void" line="613">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="614"/>
                <scope line="616"/>
                <scope line="621">
                    <scope line="622">
                        <declaration name="debugGraphics" type="Graphics" line="623"/>
                    </scope>
                </scope>
                <scope line="628">
                    <declaration name="oldColor" type="Color" line="629"/>
                    <declaration name="i" type="int" line="630"/>
                    <scope line="632"/>
                </scope>
            </method>
            <javadoc line="643">
                Overrides &lt;code&gt;Graphics.fillOval&lt;/code&gt;.                
            </javadoc>
            <method name="fillOval" type="void" line="646">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="647"/>
                <scope line="649"/>
                <scope line="654">
                    <scope line="655">
                        <declaration name="debugGraphics" type="Graphics" line="656"/>
                    </scope>
                </scope>
                <scope line="661">
                    <declaration name="oldColor" type="Color" line="662"/>
                    <declaration name="i" type="int" line="663"/>
                    <scope line="665"/>
                </scope>
            </method>
            <javadoc line="676">
                Overrides &lt;code&gt;Graphics.drawArc&lt;/code&gt;.                
            </javadoc>
            <method name="drawArc" type="void" line="680">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="startAngle" type="int"/>
                    <param name="arcAngle" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="681"/>
                <scope line="683"/>
                <scope line="690">
                    <scope line="691">
                        <declaration name="debugGraphics" type="Graphics" line="692"/>
                    </scope>
                </scope>
                <scope line="698">
                    <declaration name="oldColor" type="Color" line="699"/>
                    <declaration name="i" type="int" line="700"/>
                    <scope line="702"/>
                </scope>
            </method>
            <javadoc line="713">
                Overrides &lt;code&gt;Graphics.fillArc&lt;/code&gt;.                
            </javadoc>
            <method name="fillArc" type="void" line="717">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="startAngle" type="int"/>
                    <param name="arcAngle" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="718"/>
                <scope line="720"/>
                <scope line="727">
                    <scope line="728">
                        <declaration name="debugGraphics" type="Graphics" line="729"/>
                    </scope>
                </scope>
                <scope line="735">
                    <declaration name="oldColor" type="Color" line="736"/>
                    <declaration name="i" type="int" line="737"/>
                    <scope line="739"/>
                </scope>
            </method>
            <javadoc line="750">
                Overrides &lt;code&gt;Graphics.drawPolyline&lt;/code&gt;.                
            </javadoc>
            <method name="drawPolyline" type="void" line="753">
                <params>
                    <param name="xPoints" type="int"/>
                    <param name="yPoints" type="int"/>
                    <param name="nPoints" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="754"/>
                <scope line="756"/>
                <scope line="763">
                    <scope line="764">
                        <declaration name="debugGraphics" type="Graphics" line="765"/>
                    </scope>
                </scope>
                <scope line="770">
                    <declaration name="oldColor" type="Color" line="771"/>
                    <declaration name="i" type="int" line="772"/>
                    <scope line="774"/>
                </scope>
            </method>
            <javadoc line="785">
                Overrides &lt;code&gt;Graphics.drawPolygon&lt;/code&gt;.                
            </javadoc>
            <method name="drawPolygon" type="void" line="788">
                <params>
                    <param name="xPoints" type="int"/>
                    <param name="yPoints" type="int"/>
                    <param name="nPoints" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="789"/>
                <scope line="791"/>
                <scope line="798">
                    <scope line="799">
                        <declaration name="debugGraphics" type="Graphics" line="800"/>
                    </scope>
                </scope>
                <scope line="805">
                    <declaration name="oldColor" type="Color" line="806"/>
                    <declaration name="i" type="int" line="807"/>
                    <scope line="809"/>
                </scope>
            </method>
            <javadoc line="820">
                Overrides &lt;code&gt;Graphics.fillPolygon&lt;/code&gt;.                
            </javadoc>
            <method name="fillPolygon" type="void" line="823">
                <params>
                    <param name="xPoints" type="int"/>
                    <param name="yPoints" type="int"/>
                    <param name="nPoints" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="824"/>
                <scope line="826"/>
                <scope line="833">
                    <scope line="834">
                        <declaration name="debugGraphics" type="Graphics" line="835"/>
                    </scope>
                </scope>
                <scope line="840">
                    <declaration name="oldColor" type="Color" line="841"/>
                    <declaration name="i" type="int" line="842"/>
                    <scope line="844"/>
                </scope>
            </method>
            <javadoc line="855">
                Overrides &lt;code&gt;Graphics.drawString&lt;/code&gt;.                
            </javadoc>
            <method name="drawString" type="void" line="858">
                <params>
                    <param name="aString" type="String"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="859"/>
                <scope line="861"/>
                <scope line="867">
                    <scope line="868">
                        <declaration name="debugGraphics" type="Graphics" line="869"/>
                    </scope>
                </scope>
                <scope line="874">
                    <declaration name="oldColor" type="Color" line="875"/>
                    <declaration name="i" type="int" line="876"/>
                    <scope line="878"/>
                </scope>
            </method>
            <javadoc line="890">
                Overrides &lt;code&gt;Graphics.drawString&lt;/code&gt;.                
            </javadoc>
            <method name="drawString" type="void" line="893">
                <params>
                    <param name="iterator" type="AttributedCharacterIterator"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="894"/>
                <scope line="896"/>
                <scope line="902">
                    <scope line="903">
                        <declaration name="debugGraphics" type="Graphics" line="904"/>
                    </scope>
                </scope>
                <scope line="909">
                    <declaration name="oldColor" type="Color" line="910"/>
                    <declaration name="i" type="int" line="911"/>
                    <scope line="913"/>
                </scope>
            </method>
            <javadoc line="925">
                Overrides &lt;code&gt;Graphics.drawBytes&lt;/code&gt;.                
            </javadoc>
            <method name="drawBytes" type="void" line="928">
                <params>
                    <param name="data" type="byte"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="929"/>
                <declaration name="font" type="Font" line="931"/>
                <scope line="933"/>
                <scope line="938">
                    <scope line="939">
                        <declaration name="debugGraphics" type="Graphics" line="940"/>
                    </scope>
                </scope>
                <scope line="945">
                    <declaration name="oldColor" type="Color" line="946"/>
                    <declaration name="i" type="int" line="947"/>
                    <scope line="949"/>
                </scope>
            </method>
            <javadoc line="961">
                Overrides &lt;code&gt;Graphics.drawChars&lt;/code&gt;.                
            </javadoc>
            <method name="drawChars" type="void" line="964">
                <params>
                    <param name="data" type="char"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="965"/>
                <declaration name="font" type="Font" line="967"/>
                <scope line="969"/>
                <scope line="974">
                    <scope line="975">
                        <declaration name="debugGraphics" type="Graphics" line="976"/>
                    </scope>
                </scope>
                <scope line="981">
                    <declaration name="oldColor" type="Color" line="982"/>
                    <declaration name="i" type="int" line="983"/>
                    <scope line="985"/>
                </scope>
            </method>
            <javadoc line="997">
                Overrides &lt;code&gt;Graphics.drawImage&lt;/code&gt;.                
            </javadoc>
            <method name="drawImage" type="boolean" line="1001">
                <params>
                    <param name="img" type="Image"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="observer" type="ImageObserver"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="1002"/>
                <scope line="1004"/>
                <scope line="1010">
                    <scope line="1011">
                        <declaration name="debugGraphics" type="Graphics" line="1012"/>
                    </scope>
                </scope>
                <scope line="1017">
                    <declaration name="i" type="int" line="1018"/>
                    <declaration name="oldProducer" type="ImageProducer" line="1019"/>
                    <declaration name="newProducer" type="ImageProducer" line="1020"/>
                    <declaration name="newImage" type="Image" line="1023"/>
                    <declaration name="imageObserver" type="DebugGraphicsObserver" line="1025"/>
                    <declaration name="imageToDraw" type="Image" line="1028"/>
                    <scope line="1029"/>
                </scope>
            </method>
            <javadoc line="1041">
                Overrides &lt;code&gt;Graphics.drawImage&lt;/code&gt;.                
            </javadoc>
            <method name="drawImage" type="boolean" line="1045">
                <params>
                    <param name="img" type="Image"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="observer" type="ImageObserver"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="1046"/>
                <scope line="1048"/>
                <scope line="1054">
                    <scope line="1055">
                        <declaration name="debugGraphics" type="Graphics" line="1056"/>
                    </scope>
                </scope>
                <scope line="1061">
                    <declaration name="i" type="int" line="1062"/>
                    <declaration name="oldProducer" type="ImageProducer" line="1063"/>
                    <declaration name="newProducer" type="ImageProducer" line="1064"/>
                    <declaration name="newImage" type="Image" line="1067"/>
                    <declaration name="imageObserver" type="DebugGraphicsObserver" line="1069"/>
                    <declaration name="imageToDraw" type="Image" line="1072"/>
                    <scope line="1073"/>
                </scope>
            </method>
            <javadoc line="1085">
                Overrides &lt;code&gt;Graphics.drawImage&lt;/code&gt;.                
            </javadoc>
            <method name="drawImage" type="boolean" line="1090">
                <params>
                    <param name="img" type="Image"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="bgcolor" type="Color"/>
                    <param name="observer" type="ImageObserver"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="1091"/>
                <scope line="1093"/>
                <scope line="1100">
                    <scope line="1101">
                        <declaration name="debugGraphics" type="Graphics" line="1102"/>
                    </scope>
                </scope>
                <scope line="1107">
                    <declaration name="i" type="int" line="1108"/>
                    <declaration name="oldProducer" type="ImageProducer" line="1109"/>
                    <declaration name="newProducer" type="ImageProducer" line="1110"/>
                    <declaration name="newImage" type="Image" line="1113"/>
                    <declaration name="imageObserver" type="DebugGraphicsObserver" line="1115"/>
                    <declaration name="imageToDraw" type="Image" line="1118"/>
                    <scope line="1119"/>
                </scope>
            </method>
            <javadoc line="1131">
                Overrides &lt;code&gt;Graphics.drawImage&lt;/code&gt;.                
            </javadoc>
            <method name="drawImage" type="boolean" line="1136">
                <params>
                    <param name="img" type="Image"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="bgcolor" type="Color"/>
                    <param name="observer" type="ImageObserver"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="1137"/>
                <scope line="1139"/>
                <scope line="1146">
                    <scope line="1147">
                        <declaration name="debugGraphics" type="Graphics" line="1148"/>
                    </scope>
                </scope>
                <scope line="1154">
                    <declaration name="i" type="int" line="1155"/>
                    <declaration name="oldProducer" type="ImageProducer" line="1156"/>
                    <declaration name="newProducer" type="ImageProducer" line="1157"/>
                    <declaration name="newImage" type="Image" line="1160"/>
                    <declaration name="imageObserver" type="DebugGraphicsObserver" line="1162"/>
                    <declaration name="imageToDraw" type="Image" line="1165"/>
                    <scope line="1166"/>
                </scope>
            </method>
            <javadoc line="1178">
                Overrides &lt;code&gt;Graphics.drawImage&lt;/code&gt;.                
            </javadoc>
            <method name="drawImage" type="boolean" line="1184">
                <params>
                    <param name="img" type="Image"/>
                    <param name="dx1" type="int"/>
                    <param name="dy1" type="int"/>
                    <param name="dx2" type="int"/>
                    <param name="dy2" type="int"/>
                    <param name="sx1" type="int"/>
                    <param name="sy1" type="int"/>
                    <param name="sx2" type="int"/>
                    <param name="sy2" type="int"/>
                    <param name="observer" type="ImageObserver"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="1185"/>
                <scope line="1187"/>
                <scope line="1194">
                    <scope line="1195">
                        <declaration name="debugGraphics" type="Graphics" line="1196"/>
                    </scope>
                </scope>
                <scope line="1202">
                    <declaration name="i" type="int" line="1203"/>
                    <declaration name="oldProducer" type="ImageProducer" line="1204"/>
                    <declaration name="newProducer" type="ImageProducer" line="1205"/>
                    <declaration name="newImage" type="Image" line="1208"/>
                    <declaration name="imageObserver" type="DebugGraphicsObserver" line="1210"/>
                    <declaration name="imageToDraw" type="Image" line="1213"/>
                    <scope line="1214"/>
                </scope>
            </method>
            <javadoc line="1228">
                Overrides &lt;code&gt;Graphics.drawImage&lt;/code&gt;.                
            </javadoc>
            <method name="drawImage" type="boolean" line="1235">
                <params>
                    <param name="img" type="Image"/>
                    <param name="dx1" type="int"/>
                    <param name="dy1" type="int"/>
                    <param name="dx2" type="int"/>
                    <param name="dy2" type="int"/>
                    <param name="sx1" type="int"/>
                    <param name="sy1" type="int"/>
                    <param name="sx2" type="int"/>
                    <param name="sy2" type="int"/>
                    <param name="bgcolor" type="Color"/>
                    <param name="observer" type="ImageObserver"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="1236"/>
                <scope line="1238"/>
                <scope line="1246">
                    <scope line="1247">
                        <declaration name="debugGraphics" type="Graphics" line="1248"/>
                    </scope>
                </scope>
                <scope line="1254">
                    <declaration name="i" type="int" line="1255"/>
                    <declaration name="oldProducer" type="ImageProducer" line="1256"/>
                    <declaration name="newProducer" type="ImageProducer" line="1257"/>
                    <declaration name="newImage" type="Image" line="1260"/>
                    <declaration name="imageObserver" type="DebugGraphicsObserver" line="1262"/>
                    <declaration name="imageToDraw" type="Image" line="1265"/>
                    <scope line="1266"/>
                </scope>
            </method>
            <method name="loadImage" type="void" line="1280">
                <params>
                    <param name="img" type="Image"/>
                </params>
            </method>
            <javadoc line="1285">
                Overrides &lt;code&gt;Graphics.copyArea&lt;/code&gt;.                
            </javadoc>
            <method name="copyArea" type="void" line="1289">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="destX" type="int"/>
                    <param name="destY" type="int"/>
                </params>
                <scope line="1290"/>
            </method>
            <method name="sleep" type="void" line="1299">
                <params>
                    <param name="mSecs" type="int"/>
                </params>
                <scope line="1300"/>
                <scope line="1302"/>
            </method>
            <javadoc line="1306">
                Overrides &lt;code&gt;Graphics.dispose&lt;/code&gt;.                
            </javadoc>
            <method name="dispose" type="void" line="1309"/>
            <javadoc line="1315">
                Returns the drawingBuffer value.                
                <return>
                    true if this object is drawing from a Buffer                    
                </return>
            </javadoc>
            <method name="isDrawingBuffer" type="boolean" line="1320"/>
            <method name="toShortString" type="String" line="1324"/>
            <method name="pointToString" type="String" line="1328">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
            </method>
            <javadoc line="1332">
                Enables/disables diagnostic information about every graphics
                  operation. The value of &lt;b&gt;options&lt;/b&gt; indicates how this information
                  should be displayed. LOG_OPTION causes a text message to be printed.
                  FLASH_OPTION causes the drawing to flash several times. BUFFERED_OPTION
                  creates a new Frame that shows each operation on an
                  offscreen buffer. The value of &lt;b&gt;options&lt;/b&gt; is bitwise OR&apos;d into
                  the current value. To disable debugging use NONE_OPTION.                
            </javadoc>
            <method name="setDebugOptions" type="void" line="1340">
                <params>
                    <param name="options" type="int"/>
                </params>
                <scope line="1341">
                    <scope line="1342">
                        <scope line="1343"/>
                    </scope>
                    <scope line="1347">
                        <scope line="1348">
                            <scope line="1350"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1358">
                Returns the current debugging options for this DebugGraphics.                
                <see>
                    #setDebugOptions                    
                </see>
            </javadoc>
            <method name="getDebugOptions" type="int" line="1361"/>
            <javadoc line="1365">
                Static wrapper method for DebugGraphicsInfo.setDebugOptions(). Stores
                  options on a per component basis.                
            </javadoc>
            <method name="setDebugOptions" type="void" line="1368">
                <params>
                    <param name="component" type="JComponent"/>
                    <param name="options" type="int"/>
                </params>
            </method>
            <javadoc line="1372">
                Static wrapper method for DebugGraphicsInfo.getDebugOptions().                
            </javadoc>
            <method name="getDebugOptions" type="int" line="1374">
                <params>
                    <param name="component" type="JComponent"/>
                </params>
                <declaration name="debugGraphicsInfo" type="DebugGraphicsInfo" line="1375"/>
                <scope line="1376"/>
                <scope line="1378"/>
            </method>
            <javadoc line="1383">
                Returns non-zero if &lt;b&gt;component&lt;/b&gt; should display with DebugGraphics,
                  zero otherwise. Walks the JComponent&apos;s parent tree to determine if
                  any debugging options have been set.                
            </javadoc>
            <method name="shouldComponentDebug" type="int" line="1387">
                <params>
                    <param name="component" type="JComponent"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="1388"/>
                <scope line="1389"/>
                <scope line="1391">
                    <declaration name="container" type="Container" line="1392"/>
                    <declaration name="debugOptions" type="int" line="1393"/>
                    <scope line="1395"/>
                </scope>
            </method>
            <javadoc line="1404">
                Returns the number of JComponents that have debugging options turned
                  on.                
            </javadoc>
            <method name="debugComponentCount" type="int" line="1407">
                <declaration name="debugGraphicsInfo" type="DebugGraphicsInfo" line="1408"/>
                <scope line="1410"/>
                <scope line="1412"/>
            </method>
            <method name="debugLog" type="boolean" line="1417"/>
            <method name="debugFlash" type="boolean" line="1421"/>
            <method name="debugBuffered" type="boolean" line="1425"/>
            <javadoc line="1429">
                Returns a DebugGraphics for use in buffering window.                
            </javadoc>
            <method name="debugGraphics" type="Graphics" line="1431">
                <declaration name="debugGraphics" type="DebugGraphics" line="1432"/>
                <declaration name="info" type="DebugGraphicsInfo" line="1433"/>
                <declaration name="debugFrame" type="JFrame" line="1434"/>
                <scope line="1436"/>
                <scope line="1447"/>
            </method>
            <javadoc line="1453">
                Returns DebugGraphicsInfo, or creates one if none exists.                
            </javadoc>
            <method name="info" type="DebugGraphicsInfo" line="1455">
                <declaration name="debugGraphicsInfo" type="DebugGraphicsInfo" line="1456"/>
                <scope line="1458"/>
            </method>
            <declaration name="debugGraphicsInfoKey" type="Class" line="1465"/>
        </class>
    </source>