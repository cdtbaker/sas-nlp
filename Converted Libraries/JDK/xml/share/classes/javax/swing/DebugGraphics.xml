<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing">
        <import package="java.awt"/>
        <import package="java.awt.image"/>
        <import package="java.text.AttributedCharacterIterator"/>
        <class name="DebugGraphics" line="5">
            <extends class="Graphics"/>
            <javadoc line="5">
                Graphics subclass supporting graphics debugging. Overrides most methods
                  from Graphics.  DebugGraphics objects are rarely created by hand.  They
                  are most frequently created automatically when a JComponent&apos;s
                  debugGraphicsOptions are changed using the setDebugGraphicsOptions()
                  method.
                  &lt;p&gt;
                  NOTE: You must turn off double buffering to use DebugGraphics:
                  RepaintManager repaintManager = RepaintManager.currentManager(component);
                  repaintManager.setDoubleBufferingEnabled(false);                
                <see>
                    JComponent#setDebugGraphicsOptions                    
                </see>
                <see>
                    RepaintManager#currentManager                    
                </see>
                <see>
                    RepaintManager#setDoubleBufferingEnabled                    
                </see>
                <author>
                    Dave Karlton                    
                </author>
            </javadoc>
            <declaration name="graphics" type="Graphics" line="21"/>
            <declaration name="buffer" type="Image" line="22"/>
            <declaration name="debugOptions" type="int" line="23"/>
            <declaration name="graphicsID" type="int" line="24"/>
            <declaration name="xOffset" type="int" line="25"/>
            <declaration name="graphicsCount" type="int" line="26"/>
            <declaration name="imageLoadingIcon" type="ImageIcon" line="27"/>
            <declaration name="LOG_OPTION" type="int" line="28"/>
            <javadoc line="28">
                Log graphics operations.                
            </javadoc>
            <declaration name="FLASH_OPTION" type="int" line="32"/>
            <javadoc line="32">
                Flash graphics operations.                
            </javadoc>
            <declaration name="BUFFERED_OPTION" type="int" line="36"/>
            <javadoc line="36">
                Show buffered operations in a separate &lt;code&gt;Frame&lt;/code&gt;.                
            </javadoc>
            <declaration name="NONE_OPTION" type="int" line="40"/>
            <javadoc line="40">
                Don&apos;t debug graphics operations.                
            </javadoc>
            <scope line="44"/>
            <javadoc line="47">
                Constructs a new debug graphics context that supports slowed
                  down drawing.                
            </javadoc>
            <method name="DebugGraphics" type="constructor" line="51"/>
            <javadoc line="56">
                Constructs a debug graphics context from an existing graphics
                  context that slows down drawing for the specified component.                
                <param>
                    graphics  the Graphics context to slow down                    
                </param>
                <param>
                    component the JComponent to draw slowly                    
                </param>
            </javadoc>
            <method name="DebugGraphics" type="constructor" line="62">
                <params>
                    <param name="graphics" type="Graphics"/>
                    <param name="component" type="JComponent"/>
                </params>
            </method>
            <javadoc line="66">
                Constructs a debug graphics context from an existing graphics
                  context that supports slowed down drawing.                
                <param>
                    graphics  the Graphics context to slow down                    
                </param>
            </javadoc>
            <method name="DebugGraphics" type="constructor" line="71">
                <params>
                    <param name="graphics" type="Graphics"/>
                </params>
            </method>
            <javadoc line="75">
                Overrides &lt;code&gt;Graphics.create&lt;/code&gt; to return a DebugGraphics object.                
            </javadoc>
            <method name="create" type="Graphics" line="78">
                <declaration name="debugGraphics" type="DebugGraphics" line="79"/>
            </method>
            <javadoc line="86">
                Overrides &lt;code&gt;Graphics.create&lt;/code&gt; to return a DebugGraphics object.                
            </javadoc>
            <method name="create" type="Graphics" line="89">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="debugGraphics" type="DebugGraphics" line="90"/>
            </method>
            <javadoc line="99">
                Sets the Color used to flash drawing operations.                
            </javadoc>
            <method name="setFlashColor" type="void" line="102">
                <params>
                    <param name="flashColor" type="Color"/>
                </params>
            </method>
            <javadoc line="105">
                Returns the Color used to flash drawing operations.                
                <see>
                    #setFlashColor                    
                </see>
            </javadoc>
            <method name="flashColor" type="Color" line="109"/>
            <javadoc line="112">
                Sets the time delay of drawing operation flashing.                
            </javadoc>
            <method name="setFlashTime" type="void" line="115">
                <params>
                    <param name="flashTime" type="int"/>
                </params>
            </method>
            <javadoc line="118">
                Returns the time delay of drawing operation flashing.                
                <see>
                    #setFlashTime                    
                </see>
            </javadoc>
            <method name="flashTime" type="int" line="122"/>
            <javadoc line="125">
                Sets the number of times that drawing operations will flash.                
            </javadoc>
            <method name="setFlashCount" type="void" line="128">
                <params>
                    <param name="flashCount" type="int"/>
                </params>
            </method>
            <javadoc line="131">
                Returns the number of times that drawing operations will flash.                
                <see>
                    #setFlashCount                    
                </see>
            </javadoc>
            <method name="flashCount" type="int" line="135"/>
            <javadoc line="138">
                Sets the stream to which the DebugGraphics logs drawing operations.                
            </javadoc>
            <method name="setLogStream" type="void" line="141">
                <params>
                    <param name="stream" type="java.io.PrintStream"/>
                </params>
            </method>
            <javadoc line="144">
                Returns the stream to which the DebugGraphics logs drawing operations.                
                <see>
                    #setLogStream                    
                </see>
            </javadoc>
            <method name="logStream" type="java.io.PrintStream" line="148"/>
            <javadoc line="151">
                Sets the Font used for text drawing operations.                
            </javadoc>
            <method name="setFont" type="void" line="154">
                <params>
                    <param name="aFont" type="Font"/>
                </params>
                <scope line="155"/>
            </method>
            <javadoc line="160">
                Returns the Font used for text drawing operations.                
                <see>
                    #setFont                    
                </see>
            </javadoc>
            <method name="getFont" type="Font" line="164"/>
            <javadoc line="167">
                Sets the color to be used for drawing and filling lines and shapes.                
            </javadoc>
            <method name="setColor" type="void" line="170">
                <params>
                    <param name="aColor" type="Color"/>
                </params>
                <scope line="171"/>
            </method>
            <javadoc line="176">
                Returns the Color used for text drawing operations.                
                <see>
                    #setColor                    
                </see>
            </javadoc>
            <method name="getColor" type="Color" line="180"/>
            <javadoc line="183">
                Overrides &lt;code&gt;Graphics.getFontMetrics&lt;/code&gt;.                
            </javadoc>
            <method name="getFontMetrics" type="FontMetrics" line="186"/>
            <javadoc line="189">
                Overrides &lt;code&gt;Graphics.getFontMetrics&lt;/code&gt;.                
            </javadoc>
            <method name="getFontMetrics" type="FontMetrics" line="192">
                <params>
                    <param name="f" type="Font"/>
                </params>
            </method>
            <javadoc line="195">
                Overrides &lt;code&gt;Graphics.translate&lt;/code&gt;.                
            </javadoc>
            <method name="translate" type="void" line="198">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <scope line="199"/>
            </method>
            <javadoc line="206">
                Overrides &lt;code&gt;Graphics.setPaintMode&lt;/code&gt;.                
            </javadoc>
            <method name="setPaintMode" type="void" line="209">
                <scope line="210"/>
            </method>
            <javadoc line="215">
                Overrides &lt;code&gt;Graphics.setXORMode&lt;/code&gt;.                
            </javadoc>
            <method name="setXORMode" type="void" line="218">
                <params>
                    <param name="aColor" type="Color"/>
                </params>
                <scope line="219"/>
            </method>
            <javadoc line="224">
                Overrides &lt;code&gt;Graphics.getClipBounds&lt;/code&gt;.                
            </javadoc>
            <method name="getClipBounds" type="Rectangle" line="227"/>
            <javadoc line="230">
                Overrides &lt;code&gt;Graphics.clipRect&lt;/code&gt;.                
            </javadoc>
            <method name="clipRect" type="void" line="233">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <scope line="235"/>
            </method>
            <javadoc line="239">
                Overrides &lt;code&gt;Graphics.setClip&lt;/code&gt;.                
            </javadoc>
            <method name="setClip" type="void" line="242">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <scope line="244"/>
            </method>
            <javadoc line="248">
                Overrides &lt;code&gt;Graphics.getClip&lt;/code&gt;.                
            </javadoc>
            <method name="getClip" type="Shape" line="251"/>
            <javadoc line="254">
                Overrides &lt;code&gt;Graphics.setClip&lt;/code&gt;.                
            </javadoc>
            <method name="setClip" type="void" line="257">
                <params>
                    <param name="clip" type="Shape"/>
                </params>
                <scope line="259"/>
            </method>
            <javadoc line="263">
                Overrides &lt;code&gt;Graphics.drawRect&lt;/code&gt;.                
            </javadoc>
            <method name="drawRect" type="void" line="266">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="267"/>
                <scope line="268"/>
                <scope line="271">
                    <scope line="272">
                        <declaration name="debugGraphics" type="Graphics" line="273"/>
                    </scope>
                </scope>
                <scope line="278">
                    <declaration name="oldColor" type="Color" line="279"/>
                    <declaration name="i" type="int" line="280"/>
                    <scope line="281"/>
                </scope>
            </method>
            <javadoc line="291">
                Overrides &lt;code&gt;Graphics.fillRect&lt;/code&gt;.                
            </javadoc>
            <method name="fillRect" type="void" line="294">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="295"/>
                <scope line="296"/>
                <scope line="299">
                    <scope line="300">
                        <declaration name="debugGraphics" type="Graphics" line="301"/>
                    </scope>
                </scope>
                <scope line="306">
                    <declaration name="oldColor" type="Color" line="307"/>
                    <declaration name="i" type="int" line="308"/>
                    <scope line="309"/>
                </scope>
            </method>
            <javadoc line="319">
                Overrides &lt;code&gt;Graphics.clearRect&lt;/code&gt;.                
            </javadoc>
            <method name="clearRect" type="void" line="322">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="323"/>
                <scope line="324"/>
                <scope line="327">
                    <scope line="328">
                        <declaration name="debugGraphics" type="Graphics" line="329"/>
                    </scope>
                </scope>
                <scope line="334">
                    <declaration name="oldColor" type="Color" line="335"/>
                    <declaration name="i" type="int" line="336"/>
                    <scope line="337"/>
                </scope>
            </method>
            <javadoc line="347">
                Overrides &lt;code&gt;Graphics.drawRoundRect&lt;/code&gt;.                
            </javadoc>
            <method name="drawRoundRect" type="void" line="350">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="arcWidth" type="int"/>
                    <param name="arcHeight" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="351"/>
                <scope line="352"/>
                <scope line="355">
                    <scope line="356">
                        <declaration name="debugGraphics" type="Graphics" line="357"/>
                    </scope>
                </scope>
                <scope line="362">
                    <declaration name="oldColor" type="Color" line="363"/>
                    <declaration name="i" type="int" line="364"/>
                    <scope line="365"/>
                </scope>
            </method>
            <javadoc line="375">
                Overrides &lt;code&gt;Graphics.fillRoundRect&lt;/code&gt;.                
            </javadoc>
            <method name="fillRoundRect" type="void" line="378">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="arcWidth" type="int"/>
                    <param name="arcHeight" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="379"/>
                <scope line="380"/>
                <scope line="383">
                    <scope line="384">
                        <declaration name="debugGraphics" type="Graphics" line="385"/>
                    </scope>
                </scope>
                <scope line="390">
                    <declaration name="oldColor" type="Color" line="391"/>
                    <declaration name="i" type="int" line="392"/>
                    <scope line="393"/>
                </scope>
            </method>
            <javadoc line="403">
                Overrides &lt;code&gt;Graphics.drawLine&lt;/code&gt;.                
            </javadoc>
            <method name="drawLine" type="void" line="406">
                <params>
                    <param name="x1" type="int"/>
                    <param name="y1" type="int"/>
                    <param name="x2" type="int"/>
                    <param name="y2" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="407"/>
                <scope line="408"/>
                <scope line="411">
                    <scope line="412">
                        <declaration name="debugGraphics" type="Graphics" line="413"/>
                    </scope>
                </scope>
                <scope line="418">
                    <declaration name="oldColor" type="Color" line="419"/>
                    <declaration name="i" type="int" line="420"/>
                    <scope line="421"/>
                </scope>
            </method>
            <javadoc line="431">
                Overrides &lt;code&gt;Graphics.draw3DRect&lt;/code&gt;.                
            </javadoc>
            <method name="draw3DRect" type="void" line="434">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="raised" type="boolean"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="435"/>
                <scope line="436"/>
                <scope line="439">
                    <scope line="440">
                        <declaration name="debugGraphics" type="Graphics" line="441"/>
                    </scope>
                </scope>
                <scope line="446">
                    <declaration name="oldColor" type="Color" line="447"/>
                    <declaration name="i" type="int" line="448"/>
                    <scope line="449"/>
                </scope>
            </method>
            <javadoc line="459">
                Overrides &lt;code&gt;Graphics.fill3DRect&lt;/code&gt;.                
            </javadoc>
            <method name="fill3DRect" type="void" line="462">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="raised" type="boolean"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="463"/>
                <scope line="464"/>
                <scope line="467">
                    <scope line="468">
                        <declaration name="debugGraphics" type="Graphics" line="469"/>
                    </scope>
                </scope>
                <scope line="474">
                    <declaration name="oldColor" type="Color" line="475"/>
                    <declaration name="i" type="int" line="476"/>
                    <scope line="477"/>
                </scope>
            </method>
            <javadoc line="487">
                Overrides &lt;code&gt;Graphics.drawOval&lt;/code&gt;.                
            </javadoc>
            <method name="drawOval" type="void" line="490">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="491"/>
                <scope line="492"/>
                <scope line="495">
                    <scope line="496">
                        <declaration name="debugGraphics" type="Graphics" line="497"/>
                    </scope>
                </scope>
                <scope line="502">
                    <declaration name="oldColor" type="Color" line="503"/>
                    <declaration name="i" type="int" line="504"/>
                    <scope line="505"/>
                </scope>
            </method>
            <javadoc line="515">
                Overrides &lt;code&gt;Graphics.fillOval&lt;/code&gt;.                
            </javadoc>
            <method name="fillOval" type="void" line="518">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="519"/>
                <scope line="520"/>
                <scope line="523">
                    <scope line="524">
                        <declaration name="debugGraphics" type="Graphics" line="525"/>
                    </scope>
                </scope>
                <scope line="530">
                    <declaration name="oldColor" type="Color" line="531"/>
                    <declaration name="i" type="int" line="532"/>
                    <scope line="533"/>
                </scope>
            </method>
            <javadoc line="543">
                Overrides &lt;code&gt;Graphics.drawArc&lt;/code&gt;.                
            </javadoc>
            <method name="drawArc" type="void" line="546">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="startAngle" type="int"/>
                    <param name="arcAngle" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="547"/>
                <scope line="548"/>
                <scope line="551">
                    <scope line="552">
                        <declaration name="debugGraphics" type="Graphics" line="553"/>
                    </scope>
                </scope>
                <scope line="558">
                    <declaration name="oldColor" type="Color" line="559"/>
                    <declaration name="i" type="int" line="560"/>
                    <scope line="561"/>
                </scope>
            </method>
            <javadoc line="571">
                Overrides &lt;code&gt;Graphics.fillArc&lt;/code&gt;.                
            </javadoc>
            <method name="fillArc" type="void" line="574">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="startAngle" type="int"/>
                    <param name="arcAngle" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="575"/>
                <scope line="576"/>
                <scope line="579">
                    <scope line="580">
                        <declaration name="debugGraphics" type="Graphics" line="581"/>
                    </scope>
                </scope>
                <scope line="586">
                    <declaration name="oldColor" type="Color" line="587"/>
                    <declaration name="i" type="int" line="588"/>
                    <scope line="589"/>
                </scope>
            </method>
            <javadoc line="599">
                Overrides &lt;code&gt;Graphics.drawPolyline&lt;/code&gt;.                
            </javadoc>
            <method name="drawPolyline" type="void" line="602">
                <params>
                    <param name="xPoints" type="int"/>
                    <param name="yPoints" type="int"/>
                    <param name="nPoints" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="603"/>
                <scope line="604"/>
                <scope line="607">
                    <scope line="608">
                        <declaration name="debugGraphics" type="Graphics" line="609"/>
                    </scope>
                </scope>
                <scope line="614">
                    <declaration name="oldColor" type="Color" line="615"/>
                    <declaration name="i" type="int" line="616"/>
                    <scope line="617"/>
                </scope>
            </method>
            <javadoc line="627">
                Overrides &lt;code&gt;Graphics.drawPolygon&lt;/code&gt;.                
            </javadoc>
            <method name="drawPolygon" type="void" line="630">
                <params>
                    <param name="xPoints" type="int"/>
                    <param name="yPoints" type="int"/>
                    <param name="nPoints" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="631"/>
                <scope line="632"/>
                <scope line="635">
                    <scope line="636">
                        <declaration name="debugGraphics" type="Graphics" line="637"/>
                    </scope>
                </scope>
                <scope line="642">
                    <declaration name="oldColor" type="Color" line="643"/>
                    <declaration name="i" type="int" line="644"/>
                    <scope line="645"/>
                </scope>
            </method>
            <javadoc line="655">
                Overrides &lt;code&gt;Graphics.fillPolygon&lt;/code&gt;.                
            </javadoc>
            <method name="fillPolygon" type="void" line="658">
                <params>
                    <param name="xPoints" type="int"/>
                    <param name="yPoints" type="int"/>
                    <param name="nPoints" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="659"/>
                <scope line="660"/>
                <scope line="663">
                    <scope line="664">
                        <declaration name="debugGraphics" type="Graphics" line="665"/>
                    </scope>
                </scope>
                <scope line="670">
                    <declaration name="oldColor" type="Color" line="671"/>
                    <declaration name="i" type="int" line="672"/>
                    <scope line="673"/>
                </scope>
            </method>
            <javadoc line="683">
                Overrides &lt;code&gt;Graphics.drawString&lt;/code&gt;.                
            </javadoc>
            <method name="drawString" type="void" line="686">
                <params>
                    <param name="aString" type="String"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="687"/>
                <scope line="688"/>
                <scope line="691">
                    <scope line="692">
                        <declaration name="debugGraphics" type="Graphics" line="693"/>
                    </scope>
                </scope>
                <scope line="698">
                    <declaration name="oldColor" type="Color" line="699"/>
                    <declaration name="i" type="int" line="700"/>
                    <scope line="701"/>
                </scope>
            </method>
            <javadoc line="711">
                Overrides &lt;code&gt;Graphics.drawString&lt;/code&gt;.                
            </javadoc>
            <method name="drawString" type="void" line="714">
                <params>
                    <param name="iterator" type="AttributedCharacterIterator"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="715"/>
                <scope line="716"/>
                <scope line="719">
                    <scope line="720">
                        <declaration name="debugGraphics" type="Graphics" line="721"/>
                    </scope>
                </scope>
                <scope line="726">
                    <declaration name="oldColor" type="Color" line="727"/>
                    <declaration name="i" type="int" line="728"/>
                    <scope line="729"/>
                </scope>
            </method>
            <javadoc line="739">
                Overrides &lt;code&gt;Graphics.drawBytes&lt;/code&gt;.                
            </javadoc>
            <method name="drawBytes" type="void" line="742">
                <params>
                    <param name="data" type="byte"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="743"/>
                <declaration name="font" type="Font" line="744"/>
                <scope line="745"/>
                <scope line="748">
                    <scope line="749">
                        <declaration name="debugGraphics" type="Graphics" line="750"/>
                    </scope>
                </scope>
                <scope line="755">
                    <declaration name="oldColor" type="Color" line="756"/>
                    <declaration name="i" type="int" line="757"/>
                    <scope line="758"/>
                </scope>
            </method>
            <javadoc line="768">
                Overrides &lt;code&gt;Graphics.drawChars&lt;/code&gt;.                
            </javadoc>
            <method name="drawChars" type="void" line="771">
                <params>
                    <param name="data" type="char"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="772"/>
                <declaration name="font" type="Font" line="773"/>
                <scope line="774"/>
                <scope line="777">
                    <scope line="778">
                        <declaration name="debugGraphics" type="Graphics" line="779"/>
                    </scope>
                </scope>
                <scope line="784">
                    <declaration name="oldColor" type="Color" line="785"/>
                    <declaration name="i" type="int" line="786"/>
                    <scope line="787"/>
                </scope>
            </method>
            <javadoc line="797">
                Overrides &lt;code&gt;Graphics.drawImage&lt;/code&gt;.                
            </javadoc>
            <method name="drawImage" type="boolean" line="800">
                <params>
                    <param name="img" type="Image"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="observer" type="ImageObserver"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="801"/>
                <scope line="802"/>
                <scope line="805">
                    <scope line="806">
                        <declaration name="debugGraphics" type="Graphics" line="807"/>
                    </scope>
                </scope>
                <scope line="812">
                    <declaration name="i" type="int" line="813"/>
                    <declaration name="oldProducer" type="ImageProducer" line="814"/>
                    <declaration name="newProducer" type="ImageProducer" line="815"/>
                    <declaration name="newImage" type="Image" line="816"/>
                    <declaration name="imageObserver" type="DebugGraphicsObserver" line="817"/>
                    <declaration name="imageToDraw" type="Image" line="818"/>
                    <scope line="819"/>
                </scope>
            </method>
            <javadoc line="829">
                Overrides &lt;code&gt;Graphics.drawImage&lt;/code&gt;.                
            </javadoc>
            <method name="drawImage" type="boolean" line="832">
                <params>
                    <param name="img" type="Image"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="observer" type="ImageObserver"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="833"/>
                <scope line="834"/>
                <scope line="837">
                    <scope line="838">
                        <declaration name="debugGraphics" type="Graphics" line="839"/>
                    </scope>
                </scope>
                <scope line="844">
                    <declaration name="i" type="int" line="845"/>
                    <declaration name="oldProducer" type="ImageProducer" line="846"/>
                    <declaration name="newProducer" type="ImageProducer" line="847"/>
                    <declaration name="newImage" type="Image" line="848"/>
                    <declaration name="imageObserver" type="DebugGraphicsObserver" line="849"/>
                    <declaration name="imageToDraw" type="Image" line="850"/>
                    <scope line="851"/>
                </scope>
            </method>
            <javadoc line="861">
                Overrides &lt;code&gt;Graphics.drawImage&lt;/code&gt;.                
            </javadoc>
            <method name="drawImage" type="boolean" line="864">
                <params>
                    <param name="img" type="Image"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="bgcolor" type="Color"/>
                    <param name="observer" type="ImageObserver"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="865"/>
                <scope line="866"/>
                <scope line="869">
                    <scope line="870">
                        <declaration name="debugGraphics" type="Graphics" line="871"/>
                    </scope>
                </scope>
                <scope line="876">
                    <declaration name="i" type="int" line="877"/>
                    <declaration name="oldProducer" type="ImageProducer" line="878"/>
                    <declaration name="newProducer" type="ImageProducer" line="879"/>
                    <declaration name="newImage" type="Image" line="880"/>
                    <declaration name="imageObserver" type="DebugGraphicsObserver" line="881"/>
                    <declaration name="imageToDraw" type="Image" line="882"/>
                    <scope line="883"/>
                </scope>
            </method>
            <javadoc line="893">
                Overrides &lt;code&gt;Graphics.drawImage&lt;/code&gt;.                
            </javadoc>
            <method name="drawImage" type="boolean" line="896">
                <params>
                    <param name="img" type="Image"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="bgcolor" type="Color"/>
                    <param name="observer" type="ImageObserver"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="897"/>
                <scope line="898"/>
                <scope line="901">
                    <scope line="902">
                        <declaration name="debugGraphics" type="Graphics" line="903"/>
                    </scope>
                </scope>
                <scope line="908">
                    <declaration name="i" type="int" line="909"/>
                    <declaration name="oldProducer" type="ImageProducer" line="910"/>
                    <declaration name="newProducer" type="ImageProducer" line="911"/>
                    <declaration name="newImage" type="Image" line="912"/>
                    <declaration name="imageObserver" type="DebugGraphicsObserver" line="913"/>
                    <declaration name="imageToDraw" type="Image" line="914"/>
                    <scope line="915"/>
                </scope>
            </method>
            <javadoc line="925">
                Overrides &lt;code&gt;Graphics.drawImage&lt;/code&gt;.                
            </javadoc>
            <method name="drawImage" type="boolean" line="928">
                <params>
                    <param name="img" type="Image"/>
                    <param name="dx1" type="int"/>
                    <param name="dy1" type="int"/>
                    <param name="dx2" type="int"/>
                    <param name="dy2" type="int"/>
                    <param name="sx1" type="int"/>
                    <param name="sy1" type="int"/>
                    <param name="sx2" type="int"/>
                    <param name="sy2" type="int"/>
                    <param name="observer" type="ImageObserver"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="929"/>
                <scope line="930"/>
                <scope line="933">
                    <scope line="934">
                        <declaration name="debugGraphics" type="Graphics" line="935"/>
                    </scope>
                </scope>
                <scope line="940">
                    <declaration name="i" type="int" line="941"/>
                    <declaration name="oldProducer" type="ImageProducer" line="942"/>
                    <declaration name="newProducer" type="ImageProducer" line="943"/>
                    <declaration name="newImage" type="Image" line="944"/>
                    <declaration name="imageObserver" type="DebugGraphicsObserver" line="945"/>
                    <declaration name="imageToDraw" type="Image" line="946"/>
                    <scope line="947"/>
                </scope>
            </method>
            <javadoc line="957">
                Overrides &lt;code&gt;Graphics.drawImage&lt;/code&gt;.                
            </javadoc>
            <method name="drawImage" type="boolean" line="960">
                <params>
                    <param name="img" type="Image"/>
                    <param name="dx1" type="int"/>
                    <param name="dy1" type="int"/>
                    <param name="dx2" type="int"/>
                    <param name="dy2" type="int"/>
                    <param name="sx1" type="int"/>
                    <param name="sy1" type="int"/>
                    <param name="sx2" type="int"/>
                    <param name="sy2" type="int"/>
                    <param name="bgcolor" type="Color"/>
                    <param name="observer" type="ImageObserver"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="961"/>
                <scope line="962"/>
                <scope line="965">
                    <scope line="966">
                        <declaration name="debugGraphics" type="Graphics" line="967"/>
                    </scope>
                </scope>
                <scope line="972">
                    <declaration name="i" type="int" line="973"/>
                    <declaration name="oldProducer" type="ImageProducer" line="974"/>
                    <declaration name="newProducer" type="ImageProducer" line="975"/>
                    <declaration name="newImage" type="Image" line="976"/>
                    <declaration name="imageObserver" type="DebugGraphicsObserver" line="977"/>
                    <declaration name="imageToDraw" type="Image" line="978"/>
                    <scope line="979"/>
                </scope>
            </method>
            <method name="loadImage" type="void" line="989">
                <params>
                    <param name="img" type="Image"/>
                </params>
            </method>
            <javadoc line="992">
                Overrides &lt;code&gt;Graphics.copyArea&lt;/code&gt;.                
            </javadoc>
            <method name="copyArea" type="void" line="995">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="destX" type="int"/>
                    <param name="destY" type="int"/>
                </params>
                <scope line="996"/>
            </method>
            <method name="sleep" type="void" line="1001">
                <params>
                    <param name="mSecs" type="int"/>
                </params>
                <scope line="1002"/>
                <scope line="1005"/>
            </method>
            <javadoc line="1008">
                Overrides &lt;code&gt;Graphics.dispose&lt;/code&gt;.                
            </javadoc>
            <method name="dispose" type="void" line="1011"/>
            <javadoc line="1015">
                Returns the drawingBuffer value.                
                <return>
                    true if this object is drawing from a Buffer                    
                </return>
            </javadoc>
            <method name="isDrawingBuffer" type="boolean" line="1019"/>
            <method name="toShortString" type="String" line="1022"/>
            <method name="pointToString" type="String" line="1025">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
            </method>
            <javadoc line="1028">
                Enables/disables diagnostic information about every graphics
                  operation. The value of &lt;b&gt;options&lt;/b&gt; indicates how this information
                  should be displayed. LOG_OPTION causes a text message to be printed.
                  FLASH_OPTION causes the drawing to flash several times. BUFFERED_OPTION
                  creates a new Frame that shows each operation on an
                  offscreen buffer. The value of &lt;b&gt;options&lt;/b&gt; is bitwise OR&apos;d into
                  the current value. To disable debugging use NONE_OPTION.                
            </javadoc>
            <method name="setDebugOptions" type="void" line="1037">
                <params>
                    <param name="options" type="int"/>
                </params>
                <scope line="1038">
                    <scope line="1039">
                        <scope line="1040"/>
                    </scope>
                    <scope line="1045">
                        <scope line="1046">
                            <scope line="1048"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1055">
                Returns the current debugging options for this DebugGraphics.                
                <see>
                    #setDebugOptions                    
                </see>
            </javadoc>
            <method name="getDebugOptions" type="int" line="1059"/>
            <javadoc line="1062">
                Static wrapper method for DebugGraphicsInfo.setDebugOptions(). Stores
                  options on a per component basis.                
            </javadoc>
            <method name="setDebugOptions" type="void" line="1066">
                <params>
                    <param name="component" type="JComponent"/>
                    <param name="options" type="int"/>
                </params>
            </method>
            <javadoc line="1069">
                Static wrapper method for DebugGraphicsInfo.getDebugOptions().                
            </javadoc>
            <method name="getDebugOptions" type="int" line="1072">
                <params>
                    <param name="component" type="JComponent"/>
                </params>
                <declaration name="debugGraphicsInfo" type="DebugGraphicsInfo" line="1073"/>
                <scope line="1074"/>
                <scope line="1077"/>
            </method>
            <javadoc line="1081">
                Returns non-zero if &lt;b&gt;component&lt;/b&gt; should display with DebugGraphics,
                  zero otherwise. Walks the JComponent&apos;s parent tree to determine if
                  any debugging options have been set.                
            </javadoc>
            <method name="shouldComponentDebug" type="int" line="1086">
                <params>
                    <param name="component" type="JComponent"/>
                </params>
                <declaration name="info" type="DebugGraphicsInfo" line="1087"/>
                <scope line="1088"/>
                <scope line="1091">
                    <declaration name="container" type="Container" line="1092"/>
                    <declaration name="debugOptions" type="int" line="1093"/>
                    <scope line="1094"/>
                </scope>
            </method>
            <javadoc line="1101">
                Returns the number of JComponents that have debugging options turned
                  on.                
            </javadoc>
            <method name="debugComponentCount" type="int" line="1105">
                <declaration name="debugGraphicsInfo" type="DebugGraphicsInfo" line="1106"/>
                <scope line="1107"/>
                <scope line="1110"/>
            </method>
            <method name="debugLog" type="boolean" line="1114"/>
            <method name="debugFlash" type="boolean" line="1117"/>
            <method name="debugBuffered" type="boolean" line="1120"/>
            <javadoc line="1123">
                Returns a DebugGraphics for use in buffering window.                
            </javadoc>
            <method name="debugGraphics" type="Graphics" line="1126">
                <declaration name="debugGraphics" type="DebugGraphics" line="1127"/>
                <declaration name="info" type="DebugGraphicsInfo" line="1128"/>
                <declaration name="debugFrame" type="JFrame" line="1129"/>
                <scope line="1130"/>
                <scope line="1141"/>
            </method>
            <javadoc line="1146">
                Returns DebugGraphicsInfo, or creates one if none exists.                
            </javadoc>
            <method name="info" type="DebugGraphicsInfo" line="1149">
                <declaration name="debugGraphicsInfo" type="DebugGraphicsInfo" line="1150"/>
                <scope line="1151"/>
            </method>
            <declaration name="debugGraphicsInfoKey" type="Class" line="1157"/>
        </class>
    </source>