<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing">
        <import package="java.awt.FocusTraversalPolicy"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Container"/>
        <import package="java.awt.Window"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.HashSet"/>
        <import package="java.io"/>
        <class name="LegacyGlueFocusTraversalPolicy" line="9">
            <extends class="FocusTraversalPolicy"/>
            <implements interface="Serializable"/>
            <javadoc line="9">
                A FocusTraversalPolicy which provides support for legacy applications which
                  handle focus traversal via JComponent.setNextFocusableComponent or by
                  installing a custom DefaultFocusManager. If a specific traversal has not
                  been hard coded, then that traversal is provided either by the custom
                  DefaultFocusManager, or by a wrapped FocusTraversalPolicy instance.                
                <author>
                    David Mendenhall                    
                </author>
            </javadoc>
            <declaration name="delegatePolicy" type="FocusTraversalPolicy" line="18"/>
            <declaration name="delegateManager" type="DefaultFocusManager" line="19"/>
            <declaration name="forwardMap" type="HashMap&amp;lt;Component,Component&amp;gt;" line="20"/>
            <method name="LegacyGlueFocusTraversalPolicy" type="constructor" line="21">
                <params>
                    <param name="delegatePolicy" type="FocusTraversalPolicy"/>
                </params>
            </method>
            <method name="LegacyGlueFocusTraversalPolicy" type="constructor" line="24">
                <params>
                    <param name="delegateManager" type="DefaultFocusManager"/>
                </params>
            </method>
            <method name="setNextFocusableComponent" type="void" line="27">
                <params>
                    <param name="left" type="Component"/>
                    <param name="right" type="Component"/>
                </params>
            </method>
            <method name="unsetNextFocusableComponent" type="void" line="31">
                <params>
                    <param name="left" type="Component"/>
                    <param name="right" type="Component"/>
                </params>
            </method>
            <method name="getComponentAfter" type="Component" line="35">
                <params>
                    <param name="focusCycleRoot" type="Container"/>
                    <param name="aComponent" type="Component"/>
                </params>
                <declaration name="hardCoded" type="Component" line="36"/>
                <declaration name="sanity" type="HashSet&amp;lt;Component&amp;gt;" line="37"/>
                <scope line="38">
                    <scope line="41">
                        <scope line="42"/>
                        <scope line="45"/>
                        <scope line="48"/>
                    </scope>
                    <scope line="52"/>
                </scope>
            </method>
            <method name="getComponentBefore" type="Component" line="60">
                <params>
                    <param name="focusCycleRoot" type="Container"/>
                    <param name="aComponent" type="Component"/>
                </params>
                <declaration name="hardCoded" type="Component" line="61"/>
                <declaration name="sanity" type="HashSet&amp;lt;Component&amp;gt;" line="62"/>
                <scope line="63">
                    <scope line="66">
                        <scope line="67"/>
                        <scope line="70"/>
                        <scope line="73"/>
                    </scope>
                    <scope line="77"/>
                </scope>
            </method>
            <method name="getFirstComponent" type="Component" line="85">
                <params>
                    <param name="focusCycleRoot" type="Container"/>
                </params>
                <scope line="86"/>
                <scope line="89"/>
                <scope line="92"/>
            </method>
            <method name="getLastComponent" type="Component" line="96">
                <params>
                    <param name="focusCycleRoot" type="Container"/>
                </params>
                <scope line="97"/>
                <scope line="100"/>
                <scope line="103"/>
            </method>
            <method name="getDefaultComponent" type="Component" line="107">
                <params>
                    <param name="focusCycleRoot" type="Container"/>
                </params>
                <scope line="108"/>
                <scope line="111"/>
            </method>
            <method name="accept" type="boolean" line="115">
                <params>
                    <param name="aComponent" type="Component"/>
                </params>
                <scope line="116"/>
                <scope line="119">
                    <scope line="120">
                        <scope line="121"/>
                        <scope line="124"/>
                    </scope>
                </scope>
            </method>
            <method name="writeObject" type="void" line="131">
                <params>
                    <param name="out" type="ObjectOutputStream"/>
                </params>
                <scope line="133"/>
                <scope line="136"/>
                <scope line="139"/>
                <scope line="142"/>
            </method>
            <method name="readObject" type="void" line="146">
                <params>
                    <param name="in" type="ObjectInputStream"/>
                </params>
            </method>
        </class>
    </source>