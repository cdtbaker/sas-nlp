<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.beans"/>
        <import package="java.util.Set"/>
        <class name="DelegatingDefaultFocusManager" line="33">
            <extends class="DefaultFocusManager"/>
            <comment line="54">
                Legacy methods which first appeared in javax.swing.FocusManager.                
            </comment>
            <comment line="55">
                Client code is most likely to invoke these methods.                
            </comment>
            <comment line="67">
                Make sure that we delegate all new methods in KeyboardFocusManager                
            </comment>
            <comment line="68">
                as well as the legacy methods from Swing. It is theoretically possible,                
            </comment>
            <comment line="69">
                although unlikely, that a client app will treat this instance as a                
            </comment>
            <comment line="70">
                new-style KeyboardFocusManager. We might as well be safe.                
            </comment>
            <comment line="71">
                                
            </comment>
            <comment line="72">
                The JLS won&apos;t let us override the protected methods in                
            </comment>
            <comment line="73">
                KeyboardFocusManager such that they invoke the corresponding methods on                
            </comment>
            <comment line="74">
                the delegate. However, since client code would never be able to call                
            </comment>
            <comment line="75">
                those methods anyways, we don&apos;t have to worry about that problem.                
            </comment>
            <javadoc line="33">
                Provides a javax.swing.DefaultFocusManager view onto an arbitrary
                  java.awt.KeyboardFocusManager. We subclass DefaultFocusManager instead of
                  FocusManager because it seems more backward-compatible. It is likely that
                  some pre-1.4 code assumes that the object returned by
                  FocusManager.getCurrentManager is an instance of DefaultFocusManager unless
                  set explicitly.                
            </javadoc>
            <declaration name="delegate" type="KeyboardFocusManager" line="42"/>
            <method name="DelegatingDefaultFocusManager" type="constructor" line="44">
                <params>
                    <param name="delegate" type="KeyboardFocusManager"/>
                </params>
            </method>
            <method name="getDelegate" type="KeyboardFocusManager" line="49"/>
            <method name="processKeyEvent" type="void" line="56">
                <params>
                    <param name="focusedComponent" type="Component"/>
                    <param name="e" type="KeyEvent"/>
                </params>
            </method>
            <method name="focusNextComponent" type="void" line="59">
                <params>
                    <param name="aComponent" type="Component"/>
                </params>
            </method>
            <method name="focusPreviousComponent" type="void" line="62">
                <params>
                    <param name="aComponent" type="Component"/>
                </params>
            </method>
            <method name="getFocusOwner" type="Component" line="76"/>
            <method name="clearGlobalFocusOwner" type="void" line="79"/>
            <method name="getPermanentFocusOwner" type="Component" line="82"/>
            <method name="getFocusedWindow" type="Window" line="85"/>
            <method name="getActiveWindow" type="Window" line="88"/>
            <method name="getDefaultFocusTraversalPolicy" type="FocusTraversalPolicy" line="91"/>
            <method name="setDefaultFocusTraversalPolicy" type="void" line="95">
                <params>
                    <param name="defaultPolicy" type="FocusTraversalPolicy"/>
                </params>
                <comment line="97">
                    Will be null when invoked from supers constructor.                    
                </comment>
                <scope line="96"/>
            </method>
            <method name="setDefaultFocusTraversalKeys" type="void" line="104">
                <params>
                    <param name="id" type="int"/>
                    <param name="keystrokes" type="Set<? extends AWTKeyStroke>"/>
                </params>
            </method>
            <method name="getDefaultFocusTraversalKeys" type="Set<AWTKeyStroke>" line="107">
                <params>
                    <param name="id" type="int"/>
                </params>
            </method>
            <method name="getCurrentFocusCycleRoot" type="Container" line="110"/>
            <method name="setGlobalCurrentFocusCycleRoot" type="void" line="113">
                <params>
                    <param name="newFocusCycleRoot" type="Container"/>
                </params>
            </method>
            <method name="addPropertyChangeListener" type="void" line="116">
                <params>
                    <param name="listener" type="PropertyChangeListener"/>
                </params>
            </method>
            <method name="removePropertyChangeListener" type="void" line="119">
                <params>
                    <param name="listener" type="PropertyChangeListener"/>
                </params>
            </method>
            <method name="addPropertyChangeListener" type="void" line="123">
                <params>
                    <param name="propertyName" type="String"/>
                    <param name="listener" type="PropertyChangeListener"/>
                </params>
            </method>
            <method name="removePropertyChangeListener" type="void" line="127">
                <params>
                    <param name="propertyName" type="String"/>
                    <param name="listener" type="PropertyChangeListener"/>
                </params>
            </method>
            <method name="addVetoableChangeListener" type="void" line="130">
                <params>
                    <param name="listener" type="VetoableChangeListener"/>
                </params>
            </method>
            <method name="removeVetoableChangeListener" type="void" line="133">
                <params>
                    <param name="listener" type="VetoableChangeListener"/>
                </params>
            </method>
            <method name="addVetoableChangeListener" type="void" line="137">
                <params>
                    <param name="propertyName" type="String"/>
                    <param name="listener" type="VetoableChangeListener"/>
                </params>
            </method>
            <method name="removeVetoableChangeListener" type="void" line="141">
                <params>
                    <param name="propertyName" type="String"/>
                    <param name="listener" type="VetoableChangeListener"/>
                </params>
            </method>
            <method name="addKeyEventDispatcher" type="void" line="144">
                <params>
                    <param name="dispatcher" type="KeyEventDispatcher"/>
                </params>
            </method>
            <method name="removeKeyEventDispatcher" type="void" line="147">
                <params>
                    <param name="dispatcher" type="KeyEventDispatcher"/>
                </params>
            </method>
            <method name="dispatchEvent" type="boolean" line="150">
                <params>
                    <param name="e" type="AWTEvent"/>
                </params>
            </method>
            <method name="dispatchKeyEvent" type="boolean" line="153">
                <params>
                    <param name="e" type="KeyEvent"/>
                </params>
            </method>
            <method name="upFocusCycle" type="void" line="156">
                <params>
                    <param name="aComponent" type="Component"/>
                </params>
            </method>
            <method name="downFocusCycle" type="void" line="159">
                <params>
                    <param name="aContainer" type="Container"/>
                </params>
            </method>
        </class>
    </source>