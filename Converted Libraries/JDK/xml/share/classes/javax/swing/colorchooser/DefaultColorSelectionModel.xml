<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.colorchooser">
        <import package="javax.swing"/>
        <import package="javax.swing.event"/>
        <import package="java.awt.Color"/>
        <import package="java.io.Serializable"/>
        <class name="DefaultColorSelectionModel" line="33">
            <implements interface="ColorSelectionModel"/>
            <implements interface="Serializable"/>
            <javadoc line="33">
                A generic implementation of &lt;code&gt;ColorSelectionModel&lt;/code&gt;.                
                <author>
                    Steve Wilson                    
                </author>
                <see>
                    java.awt.Color                    
                </see>
            </javadoc>
            <declaration name="changeEvent" type="ChangeEvent" line="42"/>
            <javadoc line="42">
                Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per model instance
                  since the event&apos;s only (read-only) state is the source property.
                  The source of events generated here is always &quot;this&quot;.                
            </javadoc>
            <declaration name="listenerList" type="EventListenerList" line="49"/>
            <declaration name="selectedColor" type="Color" line="51"/>
            <javadoc line="53">
                Creates a &lt;code&gt;DefaultColorSelectionModel&lt;/code&gt; with the
                  current color set to &lt;code&gt;Color.white&lt;/code&gt;.  This is
                  the default constructor.                
            </javadoc>
            <method name="DefaultColorSelectionModel" type="constructor" line="58"/>
            <javadoc line="62">
                Creates a &lt;code&gt;DefaultColorSelectionModel&lt;/code&gt; with the
                  current color set to &lt;code&gt;color&lt;/code&gt;, which should be
                  non-&lt;code&gt;null&lt;/code&gt;.  Note that setting the color to
                  &lt;code&gt;null&lt;/code&gt; is undefined and may have unpredictable
                  results.                
                <param>
                    color the new &lt;code&gt;Color&lt;/code&gt;                    
                </param>
            </javadoc>
            <method name="DefaultColorSelectionModel" type="constructor" line="71">
                <params>
                    <param name="color" type="Color"/>
                </params>
            </method>
            <javadoc line="75">
                Returns the selected &lt;code&gt;Color&lt;/code&gt; which should be
                  non-&lt;code&gt;null&lt;/code&gt;.                
                <return>
                    the selected &lt;code&gt;Color&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getSelectedColor" type="Color" line="81"/>
            <javadoc line="85">
                Sets the selected color to &lt;code&gt;color&lt;/code&gt;.
                  Note that setting the color to &lt;code&gt;null&lt;/code&gt;
                  is undefined and may have unpredictable results.
                  This method fires a state changed event if it sets the
                  current color to a new non-&lt;code&gt;null&lt;/code&gt; color;
                  if the new color is the same as the current color,
                  no event is fired.                
                <param>
                    color the new &lt;code&gt;Color&lt;/code&gt;                    
                </param>
            </javadoc>
            <method name="setSelectedColor" type="void" line="96">
                <params>
                    <param name="color" type="Color"/>
                </params>
                <scope line="97"/>
            </method>
            <javadoc line="104">
                Adds a &lt;code&gt;ChangeListener&lt;/code&gt; to the model.                
                <param>
                    l the &lt;code&gt;ChangeListener&lt;/code&gt; to be added                    
                </param>
            </javadoc>
            <method name="addChangeListener" type="void" line="109">
                <params>
                    <param name="l" type="ChangeListener"/>
                </params>
            </method>
            <javadoc line="113">
                Removes a &lt;code&gt;ChangeListener&lt;/code&gt; from the model.                
                <param>
                    l the &lt;code&gt;ChangeListener&lt;/code&gt; to be removed                    
                </param>
            </javadoc>
            <method name="removeChangeListener" type="void" line="117">
                <params>
                    <param name="l" type="ChangeListener"/>
                </params>
            </method>
            <javadoc line="121">
                Returns an array of all the &lt;code&gt;ChangeListener&lt;/code&gt;s added
                  to this &lt;code&gt;DefaultColorSelectionModel&lt;/code&gt; with
                  &lt;code&gt;addChangeListener&lt;/code&gt;.                
                <return>
                    all of the &lt;code&gt;ChangeListener&lt;/code&gt;s added, or an empty
                      array if no listeners have been added                    
                </return>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="getChangeListeners" type="ChangeListener[]" line="130"/>
            <javadoc line="134">
                Runs each &lt;code&gt;ChangeListener&lt;/code&gt;&apos;s
                  &lt;code&gt;stateChanged&lt;/code&gt; method.
                  &lt;!-- @see #setRangeProperties    //bad link--&gt;                
                <see>
                    EventListenerList                    
                </see>
            </javadoc>
            <method name="fireStateChanged" type="void" line="142">
                <declaration name="listeners" type="Object[]" line="143"/>
                <scope line="144">
                    <scope line="145">
                        <scope line="146"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>