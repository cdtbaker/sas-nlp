<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.event">
        <import package="java.awt.event.InputEvent"/>
        <import package="java.util.EventObject"/>
        <import package="java.net.URL"/>
        <import package="javax.swing.text.Element"/>
        <class name="HyperlinkEvent" line="33">
            <extends class="EventObject"/>
            <javadoc line="33">
                HyperlinkEvent is used to notify interested parties that
                  something has happened with respect to a hypertext link.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases. The current serialization support is
                  appropriate for short term storage or RMI between applications running
                  the same version of Swing.  As of 1.4, support for long term storage
                  of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                  has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                  Please see {@link java.beans.XMLEncoder}.                
                <author>
                    Timothy Prinzing                    
                </author>
            </javadoc>
            <javadoc line="50">
                Creates a new object representing a hypertext link event.
                  The other constructor is preferred, as it provides more
                  information if a URL could not be formed.  This constructor
                  is primarily for backward compatibility.                
                <param>
                    source the object responsible for the event                    
                </param>
                <param>
                    type the event type                    
                </param>
                <param>
                    u the affected URL                    
                </param>
            </javadoc>
            <method name="HyperlinkEvent" type="constructor" line="60">
                <params>
                    <param name="source" type="Object"/>
                    <param name="type" type="EventType"/>
                    <param name="u" type="URL"/>
                </params>
            </method>
            <javadoc line="64">
                Creates a new object representing a hypertext link event.                
                <param>
                    source the object responsible for the event                    
                </param>
                <param>
                    type the event type                    
                </param>
                <param>
                    u the affected URL.  This may be null if a valid URL
                      could not be created.                    
                </param>
                <param>
                    desc the description of the link.  This may be useful
                      when attempting to form a URL resulted in a MalformedURLException.
                      The description provides the text used when attempting to form the
                      URL.                    
                </param>
            </javadoc>
            <method name="HyperlinkEvent" type="constructor" line="76">
                <params>
                    <param name="source" type="Object"/>
                    <param name="type" type="EventType"/>
                    <param name="u" type="URL"/>
                    <param name="desc" type="String"/>
                </params>
            </method>
            <javadoc line="80">
                Creates a new object representing a hypertext link event.                
                <param>
                    source the object responsible for the event                    
                </param>
                <param>
                    type the event type                    
                </param>
                <param>
                    u the affected URL.  This may be null if a valid URL
                      could not be created.                    
                </param>
                <param>
                    desc the description of the link.  This may be useful
                      when attempting to form a URL resulted in a MalformedURLException.
                      The description provides the text used when attempting to form the
                      URL.                    
                </param>
                <param>
                    sourceElement Element in the Document representing the
                      anchor                    
                </param>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="HyperlinkEvent" type="constructor" line="96">
                <params>
                    <param name="source" type="Object"/>
                    <param name="type" type="EventType"/>
                    <param name="u" type="URL"/>
                    <param name="desc" type="String"/>
                    <param name="sourceElement" type="Element"/>
                </params>
            </method>
            <javadoc line="104">
                Creates a new object representing a hypertext link event.                
                <param>
                    source the object responsible for the event                    
                </param>
                <param>
                    type the event type                    
                </param>
                <param>
                    u the affected URL.  This may be null if a valid URL
                      could not be created.                    
                </param>
                <param>
                    desc the description of the link.  This may be useful
                      when attempting to form a URL resulted in a MalformedURLException.
                      The description provides the text used when attempting to form the
                      URL.                    
                </param>
                <param>
                    sourceElement Element in the Document representing the
                      anchor                    
                </param>
                <param>
                    inputEvent  InputEvent that triggered the hyperlink event                    
                </param>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="HyperlinkEvent" type="constructor" line="121">
                <params>
                    <param name="source" type="Object"/>
                    <param name="type" type="EventType"/>
                    <param name="u" type="URL"/>
                    <param name="desc" type="String"/>
                    <param name="sourceElement" type="Element"/>
                    <param name="inputEvent" type="InputEvent"/>
                </params>
            </method>
            <javadoc line="130">
                Gets the type of event.                
                <return>
                    the type                    
                </return>
            </javadoc>
            <method name="getEventType" type="EventType" line="135"/>
            <javadoc line="139">
                Get the description of the link as a string.
                  This may be useful if a URL can&apos;t be formed
                  from the description, in which case the associated
                  URL would be null.                
            </javadoc>
            <method name="getDescription" type="String" line="145"/>
            <javadoc line="149">
                Gets the URL that the link refers to.                
                <return>
                    the URL                    
                </return>
            </javadoc>
            <method name="getURL" type="URL" line="154"/>
            <javadoc line="158">
                Returns the &lt;code&gt;Element&lt;/code&gt; that corresponds to the source of the
                  event. This will typically be an &lt;code&gt;Element&lt;/code&gt; representing
                  an anchor. If a constructur that is used that does not specify a source
                  &lt;code&gt;Element&lt;/code&gt;, or null was specified as the source
                  &lt;code&gt;Element&lt;/code&gt;, this will return null.                
                <return>
                    Element indicating source of event, or null                    
                </return>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="getSourceElement" type="Element" line="168"/>
            <javadoc line="172">
                Returns the {@code InputEvent} that triggered the hyperlink event.
                  This will typically be a {@code MouseEvent}.  If a constructor is used
                  that does not specify an {@code InputEvent}, or @{code null}
                  was specified as the {@code InputEvent}, this returns {@code null}.                
                <return>
                    InputEvent that triggered the hyperlink event, or null                    
                </return>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="getInputEvent" type="InputEvent" line="181"/>
            <declaration name="type" type="EventType" line="185"/>
            <declaration name="u" type="URL" line="186"/>
            <declaration name="desc" type="String" line="187"/>
            <declaration name="sourceElement" type="Element" line="188"/>
            <declaration name="inputEvent" type="InputEvent" line="189"/>
            <class name="EventType" line="192">
                <javadoc line="192">
                    Defines the ENTERED, EXITED, and ACTIVATED event types, along
                      with their string representations, returned by toString().                    
                </javadoc>
                <method name="EventType" type="constructor" line="198">
                    <params>
                        <param name="s" type="String"/>
                    </params>
                </method>
                <declaration name="ENTERED" type="EventType" line="202"/>
                <javadoc line="202">
                    Entered type.                    
                </javadoc>
                <declaration name="EXITED" type="EventType" line="207"/>
                <javadoc line="207">
                    Exited type.                    
                </javadoc>
                <declaration name="ACTIVATED" type="EventType" line="212"/>
                <javadoc line="212">
                    Activated type.                    
                </javadoc>
                <javadoc line="217">
                    Converts the type to a string.                    
                    <return>
                        the string                        
                    </return>
                </javadoc>
                <method name="toString" type="String" line="222"/>
                <declaration name="typeString" type="String" line="226"/>
            </class>
        </class>
    </source>