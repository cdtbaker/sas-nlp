<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.event">
        <import package="javax.swing.RowSorter"/>
        <class name="RowSorterEvent" line="3">
            <extends class="java.util.EventObject"/>
            <javadoc line="3">
                &lt;code&gt;RowSorterEvent&lt;/code&gt; provides notification of changes to
                  a &lt;code&gt;RowSorter&lt;/code&gt;.  Two types of notification are possible:
                  &lt;ul&gt;
                  &lt;li&gt;&lt;code&gt;Type.SORT_ORDER_CHANGED&lt;/code&gt;: indicates the sort order has
                  changed.  This is typically followed by a notification of:
                  &lt;li&gt;&lt;code&gt;Type.SORTED&lt;/code&gt;: indicates the contents of the model have
                  been transformed in some way.  For example, the contents may have
                  been sorted or filtered.
                  &lt;/ul&gt;                
                <see>
                    javax.swing.RowSorter                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="type" type="Type" line="17"/>
            <declaration name="oldViewToModel" type="int[]" line="18"/>
            <declaration name="Type" type="enum" line="19"/>
            <javadoc line="19">
                Enumeration of the types of &lt;code&gt;RowSorterEvent&lt;/code&gt;s.                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <scope line="23"/>
            <javadoc line="31">
                Creates a &lt;code&gt;RowSorterEvent&lt;/code&gt; of type
                  &lt;code&gt;SORT_ORDER_CHANGED&lt;/code&gt;.                
                <param>
                    source the source of the change                    
                </param>
                <throws>
                    IllegalArgumentException if &lt;code&gt;source&lt;/code&gt; is
                      &lt;code&gt;null&lt;/code&gt;                    
                </throws>
            </javadoc>
            <method name="RowSorterEvent" type="constructor" line="38">
                <params>
                    <param name="source" type="RowSorter"/>
                </params>
            </method>
            <javadoc line="41">
                Creates a &lt;code&gt;RowSorterEvent&lt;/code&gt;.                
                <param>
                    source the source of the change                    
                </param>
                <param>
                    type the type of event                    
                </param>
                <param>
                    previousRowIndexToModel the mapping from model indices to
                      view indices prior to the sort, may be &lt;code&gt;null&lt;/code&gt;                    
                </param>
                <throws>
                    IllegalArgumentException if source or &lt;code&gt;type&lt;/code&gt; is
                      &lt;code&gt;null&lt;/code&gt;                    
                </throws>
            </javadoc>
            <method name="RowSorterEvent" type="constructor" line="50">
                <params>
                    <param name="source" type="RowSorter"/>
                    <param name="type" type="Type"/>
                    <param name="previousRowIndexToModel" type="int[]"/>
                </params>
                <scope line="52"/>
            </method>
            <javadoc line="58">
                Returns the source of the event as a &lt;code&gt;RowSorter&lt;/code&gt;.                
                <return>
                    the source of the event as a &lt;code&gt;RowSorter&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getSource" type="RowSorter" line="62"/>
            <javadoc line="65">
                Returns the type of event.                
                <return>
                    the type of event                    
                </return>
            </javadoc>
            <method name="getType" type="Type" line="69"/>
            <javadoc line="72">
                Returns the location of &lt;code&gt;index&lt;/code&gt; in terms of the
                  model prior to the sort.  This method is only useful for events
                  of type &lt;code&gt;SORTED&lt;/code&gt;.  This method will return -1 if the
                  index is not valid, or the locations prior to the sort have not
                  been provided.                
                <param>
                    index the index in terms of the view                    
                </param>
                <return>
                    the index in terms of the model prior to the sort, or -1 if
                      the location is not valid or the mapping was not provided.                    
                </return>
            </javadoc>
            <method name="convertPreviousRowIndexToModel" type="int" line="82">
                <params>
                    <param name="index" type="int"/>
                </params>
                <scope line="83"/>
            </method>
            <javadoc line="88">
                Returns the number of rows before the sort.  This method is only
                  useful for events of type &lt;code&gt;SORTED&lt;/code&gt; and if the
                  last locations have not been provided will return 0.                
                <return>
                    the number of rows in terms of the view prior to the sort                    
                </return>
            </javadoc>
            <method name="getPreviousRowCount" type="int" line="94"/>
        </class>
    </source>