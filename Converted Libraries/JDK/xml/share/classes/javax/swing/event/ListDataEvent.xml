<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.event">
        <import package="java.util.EventObject"/>
        <class name="ListDataEvent" line="31">
            <extends class="EventObject"/>
            <javadoc line="31">
                Defines an event that encapsulates changes to a list.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases. The current serialization support is
                  appropriate for short term storage or RMI between applications running
                  the same version of Swing.  As of 1.4, support for long term storage
                  of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                  has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                  Please see {@link java.beans.XMLEncoder}.                
                <author>
                    Hans Muller                    
                </author>
            </javadoc>
            <declaration name="CONTENTS_CHANGED" type="int" line="47"/>
            <javadoc line="47">
                Identifies one or more changes in the lists contents.                
            </javadoc>
            <declaration name="INTERVAL_ADDED" type="int" line="49"/>
            <javadoc line="49">
                Identifies the addition of one or more contiguous items to the list                
            </javadoc>
            <declaration name="INTERVAL_REMOVED" type="int" line="51"/>
            <javadoc line="51">
                Identifies the removal of one or more contiguous items from the list                
            </javadoc>
            <declaration name="type" type="int" line="54"/>
            <declaration name="index0" type="int" line="55"/>
            <declaration name="index1" type="int" line="56"/>
            <javadoc line="58">
                Returns the event type. The possible values are:
                  &lt;ul&gt;
                  &lt;li&gt; {@link #CONTENTS_CHANGED}&lt;li&gt; {@link #INTERVAL_ADDED}&lt;li&gt; {@link #INTERVAL_REMOVED}&lt;/ul&gt;                
                <return>
                    an int representing the type value                    
                </return>
            </javadoc>
            <method name="getType" type="int" line="68"/>
            <javadoc line="70">
                Returns the lower index of the range. For a single
                  element, this value is the same as that returned by {@link #getIndex1}.                
                <return>
                    an int representing the lower index value                    
                </return>
            </javadoc>
            <method name="getIndex0" type="int" line="77"/>
            <javadoc line="78">
                Returns the upper index of the range. For a single
                  element, this value is the same as that returned by {@link #getIndex0}.                
                <return>
                    an int representing the upper index value                    
                </return>
            </javadoc>
            <method name="getIndex1" type="int" line="84"/>
            <javadoc line="86">
                Constructs a ListDataEvent object. If index0 is &gt;
                  index1, index0 and index1 will be swapped such that
                  index0 will always be &lt;= index1.                
                <param>
                    source  the source Object (typically &lt;code&gt;this&lt;/code&gt;)                    
                </param>
                <param>
                    type    an int specifying {@link #CONTENTS_CHANGED},{@link #INTERVAL_ADDED}, or {@link #INTERVAL_REMOVED}                    
                </param>
                <param>
                    index0  one end of the new interval                    
                </param>
                <param>
                    index1  the other end of the new interval                    
                </param>
            </javadoc>
            <method name="ListDataEvent" type="constructor" line="97">
                <params>
                    <param name="source" type="Object"/>
                    <param name="type" type="int"/>
                    <param name="index0" type="int"/>
                    <param name="index1" type="int"/>
                </params>
            </method>
            <javadoc line="104">
                Returns a string representation of this ListDataEvent. This method
                  is intended to be used only for debugging purposes, and the
                  content and format of the returned string may vary between
                  implementations. The returned string may be empty but may not
                  be &lt;code&gt;null&lt;/code&gt;.                
                <since>
                    1.4                    
                </since>
                <return>
                    a string representation of this ListDataEvent.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="114"/>
        </class>
    </source>