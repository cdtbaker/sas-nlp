<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.event">
        <import package="java.awt.AWTEvent"/>
        <import package="javax.swing.JInternalFrame"/>
        <class name="InternalFrameEvent" line="4">
            <extends class="AWTEvent"/>
            <javadoc line="4">
                An &lt;code&gt;AWTEvent&lt;/code&gt; that adds support for
                  &lt;code&gt;JInternalFrame&lt;/code&gt; objects as the event source.  This class has the
                  same event types as &lt;code&gt;WindowEvent&lt;/code&gt;,
                  although different IDs are used.
                  Help on handling internal frame events
                  is in
                  &lt;a href=&quot;http://java.sun.com/docs/books/tutorial/uiswing/events/internalframelistener.html&quot; target=&quot;_top&quot;&gt;How to Write an Internal Frame Listener&lt;/a&gt;,
                  a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases. The current serialization support is
                  appropriate for short term storage or RMI between applications running
                  the same version of Swing.  As of 1.4, support for long term storage
                  of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                  has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                  Please see {@link java.beans.XMLEncoder}.                
                <see>
                    java.awt.event.WindowEvent                    
                </see>
                <see>
                    java.awt.event.WindowListener                    
                </see>
                <see>
                    JInternalFrame                    
                </see>
                <see>
                    InternalFrameListener                    
                </see>
                <author>
                    Thomas Ball                    
                </author>
            </javadoc>
            <declaration name="INTERNAL_FRAME_FIRST" type="int" line="29"/>
            <javadoc line="29">
                The first number in the range of IDs used for internal frame events.                
            </javadoc>
            <declaration name="INTERNAL_FRAME_LAST" type="int" line="33"/>
            <javadoc line="33">
                The last number in the range of IDs used for internal frame events.                
            </javadoc>
            <declaration name="INTERNAL_FRAME_OPENED" type="int" line="37"/>
            <javadoc line="37">
                The &quot;window opened&quot; event.  This event is delivered only
                  the first time the internal frame is made visible.                
                <see>
                    JInternalFrame#show                    
                </see>
            </javadoc>
            <declaration name="INTERNAL_FRAME_CLOSING" type="int" line="43"/>
            <javadoc line="43">
                The &quot;window is closing&quot; event. This event is delivered when
                  the user attempts to close the internal frame, such as by
                  clicking the internal frame&apos;s close button,
                  or when a program attempts to close the internal frame
                  by invoking the &lt;code&gt;setClosed&lt;/code&gt; method.                
                <see>
                    JInternalFrame#setDefaultCloseOperation                    
                </see>
                <see>
                    JInternalFrame#doDefaultCloseAction                    
                </see>
                <see>
                    JInternalFrame#setClosed                    
                </see>
            </javadoc>
            <declaration name="INTERNAL_FRAME_CLOSED" type="int" line="54"/>
            <javadoc line="54">
                The &quot;window closed&quot; event. This event is delivered after
                  the internal frame has been closed as the result of a call to
                  the &lt;code&gt;setClosed&lt;/code&gt; or
                  &lt;code&gt;dispose&lt;/code&gt; method.                
                <see>
                    JInternalFrame#setClosed                    
                </see>
                <see>
                    JInternalFrame#dispose                    
                </see>
            </javadoc>
            <declaration name="INTERNAL_FRAME_ICONIFIED" type="int" line="63"/>
            <javadoc line="63">
                The &quot;window iconified&quot; event.
                  This event indicates that the internal frame
                  was shrunk down to a small icon.                
                <see>
                    JInternalFrame#setIcon                    
                </see>
            </javadoc>
            <declaration name="INTERNAL_FRAME_DEICONIFIED" type="int" line="70"/>
            <javadoc line="70">
                The &quot;window deiconified&quot; event type. This event indicates that the
                  internal frame has been restored to its normal size.                
                <see>
                    JInternalFrame#setIcon                    
                </see>
            </javadoc>
            <declaration name="INTERNAL_FRAME_ACTIVATED" type="int" line="76"/>
            <javadoc line="76">
                The &quot;window activated&quot; event type. This event indicates that keystrokes
                  and mouse clicks are directed towards this internal frame.                
                <see>
                    JInternalFrame#show                    
                </see>
                <see>
                    JInternalFrame#setSelected                    
                </see>
            </javadoc>
            <declaration name="INTERNAL_FRAME_DEACTIVATED" type="int" line="83"/>
            <javadoc line="83">
                The &quot;window deactivated&quot; event type. This event indicates that keystrokes
                  and mouse clicks are no longer directed to the internal frame.                
                <see>
                    JInternalFrame#setSelected                    
                </see>
            </javadoc>
            <javadoc line="89">
                Constructs an &lt;code&gt;InternalFrameEvent&lt;/code&gt; object.                
                <param>
                    source the <code>JInternalFrame</code> object that originated the event                    
                </param>
                <param>
                    id     an integer indicating the type of event                    
                </param>
            </javadoc>
            <method name="InternalFrameEvent" type="constructor" line="94">
                <params>
                    <param name="source" type="JInternalFrame"/>
                    <param name="id" type="int"/>
                </params>
            </method>
            <javadoc line="97">
                Returns a parameter string identifying this event.
                  This method is useful for event logging and for debugging.                
                <return>
                    a string identifying the event and its attributes                    
                </return>
            </javadoc>
            <method name="paramString" type="String" line="102">
                <declaration name="typeStr" type="String" line="103"/>
            </method>
            <javadoc line="131">
                Returns the originator of the event.                
                <return>
                    the <code>JInternalFrame</code> object that originated the event                    
                </return>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="getInternalFrame" type="JInternalFrame" line="136"/>
        </class>
    </source>