<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.event">
        <class name="InternalFrameAdapter" line="28">
            <implements interface="InternalFrameListener"/>
            <javadoc line="28">
                An abstract adapter class for receiving internal frame events.
                  The methods in this class are empty. This class exists as
                  convenience for creating listener objects, and is functionally
                  equivalent to the WindowAdapter class in the AWT.
                  &lt;p&gt;
                  See &lt;a href=&quot;http://java.sun.com/docs/books/tutorial/uiswing/events/internalframelistener.html&quot;&gt;How to Write an Internal Frame Listener&lt;/a&gt;
                  in &lt;em&gt;The Java Tutorial&lt;/em&gt;                
                <see>
                    InternalFrameEvent                    
                </see>
                <see>
                    InternalFrameListener                    
                </see>
                <see>
                    java.awt.event.WindowListener                    
                </see>
                <author>
                    Thomas Ball                    
                </author>
            </javadoc>
            <javadoc line="44">
                Invoked when an internal frame has been opened.                
            </javadoc>
            <method name="internalFrameOpened" type="void" line="47">
                <params>
                    <param name="e" type="InternalFrameEvent"/>
                </params>
            </method>
            <javadoc line="49">
                Invoked when an internal frame is in the process of being closed.
                  The close operation can be overridden at this point.                
            </javadoc>
            <method name="internalFrameClosing" type="void" line="53">
                <params>
                    <param name="e" type="InternalFrameEvent"/>
                </params>
            </method>
            <javadoc line="55">
                Invoked when an internal frame has been closed.                
            </javadoc>
            <method name="internalFrameClosed" type="void" line="58">
                <params>
                    <param name="e" type="InternalFrameEvent"/>
                </params>
            </method>
            <javadoc line="60">
                Invoked when an internal frame is iconified.                
            </javadoc>
            <method name="internalFrameIconified" type="void" line="63">
                <params>
                    <param name="e" type="InternalFrameEvent"/>
                </params>
            </method>
            <javadoc line="65">
                Invoked when an internal frame is de-iconified.                
            </javadoc>
            <method name="internalFrameDeiconified" type="void" line="68">
                <params>
                    <param name="e" type="InternalFrameEvent"/>
                </params>
            </method>
            <javadoc line="70">
                Invoked when an internal frame is activated.                
            </javadoc>
            <method name="internalFrameActivated" type="void" line="73">
                <params>
                    <param name="e" type="InternalFrameEvent"/>
                </params>
            </method>
            <javadoc line="75">
                Invoked when an internal frame is de-activated.                
            </javadoc>
            <method name="internalFrameDeactivated" type="void" line="78">
                <params>
                    <param name="e" type="InternalFrameEvent"/>
                </params>
            </method>
        </class>
    </source>