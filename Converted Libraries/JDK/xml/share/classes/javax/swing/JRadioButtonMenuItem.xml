<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing">
        <import package="java.util.EventListener"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.awt.image"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.IOException"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.accessibility"/>
        <class name="JRadioButtonMenuItem" line="40">
            <extends class="JMenuItem"/>
            <comment line="235">
                ///////////////                
            </comment>
            <comment line="236">
                Accessibility support                
            </comment>
            <comment line="237">
                //////////////                
            </comment>
            <comment line="280">
                inner class AccessibleJRadioButtonMenuItem                
            </comment>
            <implements interface="Accessible"/>
            <javadoc line="40">
                An implementation of a radio button menu item.
                  A &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt; is
                  a menu item that is part of a group of menu items in which only one
                  item in the group can be selected. The selected item displays its
                  selected state. Selecting it causes any other selected item to
                  switch to the unselected state.
                  To control the selected state of a group of radio button menu items,
                  use a &lt;code&gt;ButtonGroup&lt;/code&gt; object.
                  &lt;p&gt;
                  Menu items can be configured, and to some degree controlled, by
                  &lt;code&gt;&lt;a href=&quot;Action.html&quot;&gt;Action&lt;/a&gt;&lt;/code&gt;s.  Using an
                  &lt;code&gt;Action&lt;/code&gt; with a menu item has many benefits beyond directly
                  configuring a menu item.  Refer to &lt;a href=&quot;Action.html#buttonActions&quot;&gt;
                  Swing Components Supporting &lt;code&gt;Action&lt;/code&gt;&lt;/a&gt; for more
                  details, and you can find more information in &lt;a
                  href=&quot;http://java.sun.com/docs/books/tutorial/uiswing/misc/action.html&quot;&gt;How
                  to Use Actions&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.
                  &lt;p&gt;
                  For further documentation and examples see
                  &lt;a
                  href=&quot;http://java.sun.com/docs/books/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;,
                  a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt; Swing is not thread safe. For more
                  information see &lt;a
                  href=&quot;package-summary.html#threading&quot;&gt;Swing&apos;s Threading
                  Policy&lt;/a&gt;.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases. The current serialization support is
                  appropriate for short term storage or RMI between applications running
                  the same version of Swing.  As of 1.4, support for long term storage
                  of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                  has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                  Please see {@link java.beans.XMLEncoder}.                
                <beaninfo>
                    attribute: isContainer false
                      description: A component within a group of menu items which can be selected.                    
                </beaninfo>
                <author>
                    Georges Saab                    
                </author>
                <author>
                    David Karlton                    
                </author>
                <see>
                    ButtonGroup                    
                </see>
            </javadoc>
            <declaration name="uiClassID" type="String" line="87"/>
            <javadoc line="87">
                @see #getUIClassID                
                <see>
                    #readObject                    
                </see>
            </javadoc>
            <javadoc line="93">
                Creates a &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt; with no set text or icon.                
            </javadoc>
            <method name="JRadioButtonMenuItem" type="constructor" line="96"/>
            <javadoc line="100">
                Creates a &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt; with an icon.                
                <param>
                    icon the <code>Icon</code> to display on the
                      <code>JRadioButtonMenuItem</code>                    
                </param>
            </javadoc>
            <method name="JRadioButtonMenuItem" type="constructor" line="106">
                <params>
                    <param name="icon" type="Icon"/>
                </params>
            </method>
            <javadoc line="110">
                Creates a &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt; with text.                
                <param>
                    text the text of the <code>JRadioButtonMenuItem</code>                    
                </param>
            </javadoc>
            <method name="JRadioButtonMenuItem" type="constructor" line="115">
                <params>
                    <param name="text" type="String"/>
                </params>
            </method>
            <javadoc line="119">
                Creates a radio button menu item whose properties are taken from the
                  &lt;code&gt;Action&lt;/code&gt; supplied.                
                <param>
                    a the <code>Action</code> on which to base the radio
                      button menu item                    
                </param>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="JRadioButtonMenuItem" type="constructor" line="128">
                <params>
                    <param name="a" type="Action"/>
                </params>
            </method>
            <javadoc line="133">
                Creates a radio button menu item with the specified text
                  and &lt;code&gt;Icon&lt;/code&gt;.                
                <param>
                    text the text of the <code>JRadioButtonMenuItem</code>                    
                </param>
                <param>
                    icon the icon to display on the <code>JRadioButtonMenuItem</code>                    
                </param>
            </javadoc>
            <method name="JRadioButtonMenuItem" type="constructor" line="140">
                <params>
                    <param name="text" type="String"/>
                    <param name="icon" type="Icon"/>
                </params>
            </method>
            <javadoc line="144">
                Creates a radio button menu item with the specified text
                  and selection state.                
                <param>
                    text the text of the <code>CheckBoxMenuItem</code>                    
                </param>
                <param>
                    selected the selected state of the <code>CheckBoxMenuItem</code>                    
                </param>
            </javadoc>
            <method name="JRadioButtonMenuItem" type="constructor" line="151">
                <params>
                    <param name="text" type="String"/>
                    <param name="selected" type="boolean"/>
                </params>
            </method>
            <javadoc line="156">
                Creates a radio button menu item with the specified image
                  and selection state, but no text.                
                <param>
                    icon  the image that the button should display                    
                </param>
                <param>
                    selected  if true, the button is initially selected;
                      otherwise, the button is initially unselected                    
                </param>
            </javadoc>
            <method name="JRadioButtonMenuItem" type="constructor" line="164">
                <params>
                    <param name="icon" type="Icon"/>
                    <param name="selected" type="boolean"/>
                </params>
            </method>
            <javadoc line="168">
                Creates a radio button menu item that has the specified
                  text, image, and selection state.  All other constructors
                  defer to this one.                
                <param>
                    text  the string displayed on the radio button                    
                </param>
                <param>
                    icon  the image that the button should display                    
                </param>
            </javadoc>
            <method name="JRadioButtonMenuItem" type="constructor" line="176">
                <params>
                    <param name="text" type="String"/>
                    <param name="icon" type="Icon"/>
                    <param name="selected" type="boolean"/>
                </params>
            </method>
            <javadoc line="183">
                Returns the name of the L&amp;F class that renders this component.                
                <return>
                    the string "RadioButtonMenuItemUI"                    
                </return>
                <see>
                    JComponent#getUIClassID                    
                </see>
                <see>
                    UIDefaults#getUI                    
                </see>
            </javadoc>
            <method name="getUIClassID" type="String" line="190"/>
            <javadoc line="194">
                See &lt;code&gt;readObject&lt;/code&gt; and &lt;code&gt;writeObject&lt;/code&gt; in
                  &lt;code&gt;JComponent&lt;/code&gt; for more
                  information about serialization in Swing.                
            </javadoc>
            <method name="writeObject" type="void" line="199">
                <params>
                    <param name="s" type="ObjectOutputStream"/>
                </params>
                <scope line="201">
                    <declaration name="count" type="byte" line="202"/>
                    <scope line="204"/>
                </scope>
            </method>
            <javadoc line="211">
                Returns a string representation of this
                  &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt;.  This method
                  is intended to be used only for debugging purposes, and the
                  content and format of the returned string may vary between
                  implementations. The returned string may be empty but may not
                  be &lt;code&gt;null&lt;/code&gt;.                
                <return>
                    a string representation of this
                      <code>JRadioButtonMenuItem</code>                    
                </return>
            </javadoc>
            <method name="paramString" type="String" line="222"/>
            <javadoc line="226">
                Overriden to return true, JRadioButtonMenuItem supports
                  the selected state.                
            </javadoc>
            <method name="shouldUpdateSelectedStateFromAction" type="boolean" line="230"/>
            <javadoc line="238">
                Gets the AccessibleContext associated with this JRadioButtonMenuItem.
                  For JRadioButtonMenuItems, the AccessibleContext takes the form of an
                  AccessibleJRadioButtonMenuItem.
                  A new AccessibleJRadioButtonMenuItem instance is created if necessary.                
                <return>
                    an AccessibleJRadioButtonMenuItem that serves as the
                      AccessibleContext of this JRadioButtonMenuItem                    
                </return>
            </javadoc>
            <method name="getAccessibleContext" type="AccessibleContext" line="247">
                <scope line="248"/>
            </method>
            <class name="AccessibleJRadioButtonMenuItem" line="254">
                <extends class="AccessibleJMenuItem"/>
                <javadoc line="254">
                    This class implements accessibility support for the
                      &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt; class.  It provides an
                      implementation of the Java Accessibility API appropriate to
                      &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt; user-interface elements.
                      &lt;p&gt;
                      &lt;strong&gt;Warning:&lt;/strong&gt;
                      Serialized objects of this class will not be compatible with
                      future Swing releases. The current serialization support is
                      appropriate for short term storage or RMI between applications running
                      the same version of Swing.  As of 1.4, support for long term storage
                      of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                      has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                      Please see {@link java.beans.XMLEncoder}.                    
                </javadoc>
                <javadoc line="270">
                    Get the role of this object.                    
                    <return>
                        an instance of AccessibleRole describing the role of the
                          object                        
                    </return>
                </javadoc>
                <method name="getAccessibleRole" type="AccessibleRole" line="276"/>
            </class>
        </class>
    </source>