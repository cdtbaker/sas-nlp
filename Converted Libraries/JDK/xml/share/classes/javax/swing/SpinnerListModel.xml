<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing">
        <import package="java.util"/>
        <import package="java.io.Serializable"/>
        <class name="SpinnerListModel" line="4">
            <extends class="AbstractSpinnerModel"/>
            <implements interface="Serializable"/>
            <javadoc line="4">
                A simple implementation of &lt;code&gt;SpinnerModel&lt;/code&gt; whose
                  values are defined by an array or a &lt;code&gt;List&lt;/code&gt;.
                  For example to create a model defined by
                  an array of the names of the days of the week:
                  &lt;pre&gt;
                  String[] days = new DateFormatSymbols().getWeekdays();
                  SpinnerModel model = new SpinnerListModel(Arrays.asList(days).subList(1, 8));
                  &lt;/pre&gt;
                  This class only stores a reference to the array or &lt;code&gt;List&lt;/code&gt;
                  so if an element of the underlying sequence changes, it&apos;s up
                  to the application to notify the &lt;code&gt;ChangeListeners&lt;/code&gt; by calling
                  &lt;code&gt;fireStateChanged&lt;/code&gt;.
                  &lt;p&gt;
                  This model inherits a &lt;code&gt;ChangeListener&lt;/code&gt;.
                  The &lt;code&gt;ChangeListener&lt;/code&gt;s are notified whenever the
                  model&apos;s &lt;code&gt;value&lt;/code&gt; or &lt;code&gt;list&lt;/code&gt; properties changes.                
                <see>
                    JSpinner                    
                </see>
                <see>
                    SpinnerModel                    
                </see>
                <see>
                    AbstractSpinnerModel                    
                </see>
                <see>
                    SpinnerNumberModel                    
                </see>
                <see>
                    SpinnerDateModel                    
                </see>
                <author>
                    Hans Muller                    
                </author>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="list" type="List" line="30"/>
            <declaration name="index" type="int" line="31"/>
            <javadoc line="32">
                Constructs a &lt;code&gt;SpinnerModel&lt;/code&gt; whose sequence of
                  values is defined by the specified &lt;code&gt;List&lt;/code&gt;.
                  The initial value (&lt;i&gt;current element&lt;/i&gt;)
                  of the model will be &lt;code&gt;values.get(0)&lt;/code&gt;.
                  If &lt;code&gt;values&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or has zero
                  size, an &lt;code&gt;IllegalArugmentException&lt;/code&gt; is thrown.                
                <param>
                    values the sequence this model represents                    
                </param>
                <throws>
                    IllegalArugmentException if &lt;code&gt;values&lt;/code&gt; is
                      &lt;code&gt;null&lt;/code&gt; or zero size                    
                </throws>
            </javadoc>
            <method name="SpinnerListModel" type="constructor" line="43">
                <params>
                    <param name="values" type="List&lt;?&gt;"/>
                </params>
                <scope line="44"/>
            </method>
            <javadoc line="50">
                Constructs a &lt;code&gt;SpinnerModel&lt;/code&gt; whose sequence of values
                  is defined by the specified array.  The initial value of the model
                  will be &lt;code&gt;values[0]&lt;/code&gt;.  If &lt;code&gt;values&lt;/code&gt; is
                  &lt;code&gt;null&lt;/code&gt; or has zero length, an
                  &lt;code&gt;IllegalArugmentException&lt;/code&gt; is thrown.                
                <param>
                    values the sequence this model represents                    
                </param>
                <throws>
                    IllegalArugmentException if &lt;code&gt;values&lt;/code&gt; is
                      &lt;code&gt;null&lt;/code&gt; or zero length                    
                </throws>
            </javadoc>
            <method name="SpinnerListModel" type="constructor" line="60">
                <params>
                    <param name="values" type="Object[]"/>
                </params>
                <scope line="61"/>
            </method>
            <javadoc line="67">
                Constructs an effectively empty &lt;code&gt;SpinnerListModel&lt;/code&gt;.
                  The model&apos;s list will contain a single
                  &lt;code&gt;&quot;empty&quot;&lt;/code&gt; string element.                
            </javadoc>
            <method name="SpinnerListModel" type="constructor" line="72"/>
            <javadoc line="75">
                Returns the &lt;code&gt;List&lt;/code&gt; that defines the sequence for this model.                
                <return>
                    the value of the &lt;code&gt;list&lt;/code&gt; property                    
                </return>
                <see>
                    #setList                    
                </see>
            </javadoc>
            <method name="getList" type="List&lt;?&gt;" line="80"/>
            <javadoc line="83">
                Changes the list that defines this sequence and resets the index
                  of the models &lt;code&gt;value&lt;/code&gt; to zero.  Note that &lt;code&gt;list&lt;/code&gt;
                  is not copied, the model just stores a reference to it.
                  &lt;p&gt;
                  This method fires a &lt;code&gt;ChangeEvent&lt;/code&gt; if &lt;code&gt;list&lt;/code&gt; is
                  not equal to the current list.                
                <param>
                    list the sequence that this model represents                    
                </param>
                <throws>
                    IllegalArgumentException if &lt;code&gt;list&lt;/code&gt; is
                      &lt;code&gt;null&lt;/code&gt; or zero length                    
                </throws>
                <see>
                    #getList                    
                </see>
            </javadoc>
            <method name="setList" type="void" line="95">
                <params>
                    <param name="list" type="List&lt;?&gt;"/>
                </params>
                <scope line="96"/>
                <scope line="99"/>
            </method>
            <javadoc line="105">
                Returns the current element of the sequence.                
                <return>
                    the &lt;code&gt;value&lt;/code&gt; property                    
                </return>
                <see>
                    SpinnerModel#getValue                    
                </see>
                <see>
                    #setValue                    
                </see>
            </javadoc>
            <method name="getValue" type="Object" line="111"/>
            <javadoc line="114">
                Changes the current element of the sequence and notifies
                  &lt;code&gt;ChangeListeners&lt;/code&gt;.  If the specified
                  value is not equal to an element of the underlying sequence
                  then an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.
                  In the following example the &lt;code&gt;setValue&lt;/code&gt; call
                  would cause an exception to be thrown:
                  &lt;pre&gt;
                  String[] values = {&quot;one&quot;, &quot;two&quot;, &quot;free&quot;, &quot;four&quot;};
                  SpinnerModel model = new SpinnerListModel(values);
                  model.setValue(&quot;TWO&quot;);
                  &lt;/pre&gt;                
                <param>
                    elt the sequence element that will be model&apos;s current value                    
                </param>
                <throws>
                    IllegalArgumentException if the specified value isn&apos;t allowed                    
                </throws>
                <see>
                    SpinnerModel#setValue                    
                </see>
                <see>
                    #getValue                    
                </see>
            </javadoc>
            <method name="setValue" type="void" line="131">
                <params>
                    <param name="elt" type="Object"/>
                </params>
                <declaration name="index" type="int" line="132"/>
                <scope line="133"/>
                <scope line="136"/>
            </method>
            <javadoc line="141">
                Returns the next legal value of the underlying sequence or
                  &lt;code&gt;null&lt;/code&gt; if value is already the last element.                
                <return>
                    the next legal value of the underlying sequence or
                      &lt;code&gt;null&lt;/code&gt; if value is already the last element                    
                </return>
                <see>
                    SpinnerModel#getNextValue                    
                </see>
                <see>
                    #getPreviousValue                    
                </see>
            </javadoc>
            <method name="getNextValue" type="Object" line="149"/>
            <javadoc line="152">
                Returns the previous element of the underlying sequence or
                  &lt;code&gt;null&lt;/code&gt; if value is already the first element.                
                <return>
                    the previous element of the underlying sequence or
                      &lt;code&gt;null&lt;/code&gt; if value is already the first element                    
                </return>
                <see>
                    SpinnerModel#getPreviousValue                    
                </see>
                <see>
                    #getNextValue                    
                </see>
            </javadoc>
            <method name="getPreviousValue" type="Object" line="160"/>
            <javadoc line="163">
                Returns the next object that starts with &lt;code&gt;substring&lt;/code&gt;.                
                <param>
                    substring the string to be matched                    
                </param>
                <return>
                    the match                    
                </return>
            </javadoc>
            <method name="findNextMatch" type="Object" line="168">
                <params>
                    <param name="substring" type="String"/>
                </params>
                <declaration name="max" type="int" line="169"/>
                <scope line="170"/>
                <declaration name="counter" type="int" line="173"/>
                <scope line="174">
                    <declaration name="value" type="Object" line="175"/>
                    <declaration name="string" type="String" line="176"/>
                    <scope line="177"/>
                </scope>
            </method>
        </class>
    </source>