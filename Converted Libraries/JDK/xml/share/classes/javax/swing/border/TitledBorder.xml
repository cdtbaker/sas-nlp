<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.border">
        <import package="java.awt.Color"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Font"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.Insets"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.geom.Path2D"/>
        <import package="java.beans.ConstructorProperties"/>
        <import package="javax.swing.JComponent"/>
        <import package="javax.swing.JLabel"/>
        <import package="javax.swing.UIManager"/>
        <import package="javax.swing.plaf.basic.BasicHTML"/>
        <class name="TitledBorder" line="42">
            <extends class="AbstractBorder"/>
            <comment line="120">
                Space between the border and the component&apos;s edge                
            </comment>
            <comment line="123">
                Space between the border and text                
            </comment>
            <comment line="126">
                Horizontal inset of text that is left or right justified                
            </comment>
            <comment line="456">
                REMIND(aim): remove all or some of these set methods?                
            </comment>
            <javadoc line="42">
                A class which implements an arbitrary border
                  with the addition of a String title in a
                  specified position and justification.
                  &lt;p&gt;
                  If the border, font, or color property values are not
                  specified in the constuctor or by invoking the appropriate
                  set methods, the property values will be defined by the current
                  look and feel, using the following property names in the
                  Defaults Table:
                  &lt;ul&gt;
                  &lt;li&gt;&amp;quot;TitledBorder.border&amp;quot;
                  &lt;li&gt;&amp;quot;TitledBorder.font&amp;quot;
                  &lt;li&gt;&amp;quot;TitledBorder.titleColor&amp;quot;
                  &lt;/ul&gt;
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases. The current serialization support is
                  appropriate for short term storage or RMI between applications running
                  the same version of Swing.  As of 1.4, support for long term storage
                  of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                  has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                  Please see {@link java.beans.XMLEncoder}.                
                <author>
                    David Kloba                    
                </author>
                <author>
                    Amy Fowler                    
                </author>
            </javadoc>
            <declaration name="title" type="String" line="72"/>
            <declaration name="border" type="Border" line="73"/>
            <declaration name="titlePosition" type="int" line="74"/>
            <declaration name="titleJustification" type="int" line="75"/>
            <declaration name="titleFont" type="Font" line="76"/>
            <declaration name="titleColor" type="Color" line="77"/>
            <declaration name="label" type="JLabel" line="79"/>
            <declaration name="DEFAULT_POSITION" type="int" line="81"/>
            <javadoc line="81">
                Use the default vertical orientation for the title text.                
            </javadoc>
            <declaration name="ABOVE_TOP" type="int" line="85"/>
            <javadoc line="85">
                Position the title above the border&apos;s top line.                
            </javadoc>
            <declaration name="TOP" type="int" line="87"/>
            <javadoc line="87">
                Position the title in the middle of the border&apos;s top line.                
            </javadoc>
            <declaration name="BELOW_TOP" type="int" line="89"/>
            <javadoc line="89">
                Position the title below the border&apos;s top line.                
            </javadoc>
            <declaration name="ABOVE_BOTTOM" type="int" line="91"/>
            <javadoc line="91">
                Position the title above the border&apos;s bottom line.                
            </javadoc>
            <declaration name="BOTTOM" type="int" line="93"/>
            <javadoc line="93">
                Position the title in the middle of the border&apos;s bottom line.                
            </javadoc>
            <declaration name="BELOW_BOTTOM" type="int" line="95"/>
            <javadoc line="95">
                Position the title below the border&apos;s bottom line.                
            </javadoc>
            <declaration name="DEFAULT_JUSTIFICATION" type="int" line="98"/>
            <javadoc line="98">
                Use the default justification for the title text.                
            </javadoc>
            <declaration name="LEFT" type="int" line="102"/>
            <javadoc line="102">
                Position title text at the left side of the border line.                
            </javadoc>
            <declaration name="CENTER" type="int" line="104"/>
            <javadoc line="104">
                Position title text in the center of the border line.                
            </javadoc>
            <declaration name="RIGHT" type="int" line="106"/>
            <javadoc line="106">
                Position title text at the right side of the border line.                
            </javadoc>
            <declaration name="LEADING" type="int" line="108"/>
            <javadoc line="108">
                Position title text at the left side of the border line
                  for left to right orientation, at the right side of the
                  border line for right to left orientation.                
            </javadoc>
            <declaration name="TRAILING" type="int" line="113"/>
            <javadoc line="113">
                Position title text at the right side of the border line
                  for left to right orientation, at the left side of the
                  border line for right to left orientation.                
            </javadoc>
            <declaration name="EDGE_SPACING" type="int" line="120"/>
            <declaration name="TEXT_SPACING" type="int" line="123"/>
            <declaration name="TEXT_INSET_H" type="int" line="126"/>
            <javadoc line="128">
                Creates a TitledBorder instance.                
                <param>
                    title  the title the border should display                    
                </param>
            </javadoc>
            <method name="TitledBorder" type="constructor" line="133">
                <params>
                    <param name="title" type="String"/>
                </params>
            </method>
            <javadoc line="137">
                Creates a TitledBorder instance with the specified border
                  and an empty title.                
                <param>
                    border  the border                    
                </param>
            </javadoc>
            <method name="TitledBorder" type="constructor" line="143">
                <params>
                    <param name="border" type="Border"/>
                </params>
            </method>
            <javadoc line="147">
                Creates a TitledBorder instance with the specified border
                  and title.                
                <param>
                    border  the border                    
                </param>
                <param>
                    title  the title the border should display                    
                </param>
            </javadoc>
            <method name="TitledBorder" type="constructor" line="154">
                <params>
                    <param name="border" type="Border"/>
                    <param name="title" type="String"/>
                </params>
            </method>
            <javadoc line="158">
                Creates a TitledBorder instance with the specified border,
                  title, title-justification, and title-position.                
                <param>
                    border  the border                    
                </param>
                <param>
                    title  the title the border should display                    
                </param>
                <param>
                    titleJustification the justification for the title                    
                </param>
                <param>
                    titlePosition the position for the title                    
                </param>
            </javadoc>
            <method name="TitledBorder" type="constructor" line="170">
                <params>
                    <param name="border" type="Border"/>
                    <param name="title" type="String"/>
                    <param name="titleJustification" type="int"/>
                    <param name="titlePosition" type="int"/>
                </params>
            </method>
            <javadoc line="175">
                Creates a TitledBorder instance with the specified border,
                  title, title-justification, title-position, and title-font.                
                <param>
                    border  the border                    
                </param>
                <param>
                    title  the title the border should display                    
                </param>
                <param>
                    titleJustification the justification for the title                    
                </param>
                <param>
                    titlePosition the position for the title                    
                </param>
                <param>
                    titleFont the font for rendering the title                    
                </param>
            </javadoc>
            <method name="TitledBorder" type="constructor" line="189">
                <params>
                    <param name="border" type="Border"/>
                    <param name="title" type="String"/>
                    <param name="titleJustification" type="int"/>
                    <param name="titlePosition" type="int"/>
                    <param name="titleFont" type="Font"/>
                </params>
            </method>
            <javadoc line="194">
                Creates a TitledBorder instance with the specified border,
                  title, title-justification, title-position, title-font, and
                  title-color.                
                <param>
                    border  the border                    
                </param>
                <param>
                    title  the title the border should display                    
                </param>
                <param>
                    titleJustification the justification for the title                    
                </param>
                <param>
                    titlePosition the position for the title                    
                </param>
                <param>
                    titleFont the font of the title                    
                </param>
                <param>
                    titleColor the color of the title                    
                </param>
            </javadoc>
            <method name="TitledBorder" type="constructor" line="212">
                <params>
                    <param name="border" type="Border"/>
                    <param name="title" type="String"/>
                    <param name="titleJustification" type="int"/>
                    <param name="titlePosition" type="int"/>
                    <param name="titleFont" type="Font"/>
                    <param name="titleColor" type="Color"/>
                </params>
            </method>
            <javadoc line="226">
                Paints the border for the specified component with the
                  specified position and size.                
                <param>
                    c the component for which this border is being painted                    
                </param>
                <param>
                    g the paint graphics                    
                </param>
                <param>
                    x the x position of the painted border                    
                </param>
                <param>
                    y the y position of the painted border                    
                </param>
                <param>
                    width the width of the painted border                    
                </param>
                <param>
                    height the height of the painted border                    
                </param>
            </javadoc>
            <method name="paintBorder" type="void" line="236">
                <params>
                    <param name="c" type="Component"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="border" type="Border" line="237"/>
                <declaration name="title" type="String" line="238"/>
                <scope line="239">
                    <declaration name="edge" type="int" line="240"/>
                    <declaration name="label" type="JLabel" line="241"/>
                    <declaration name="size" type="Dimension" line="242"/>
                    <declaration name="insets" type="Insets" line="243"/>
                    <declaration name="borderX" type="int" line="245"/>
                    <declaration name="borderY" type="int" line="246"/>
                    <declaration name="borderW" type="int" line="247"/>
                    <declaration name="borderH" type="int" line="248"/>
                    <declaration name="labelY" type="int" line="250"/>
                    <declaration name="labelH" type="int" line="251"/>
                    <declaration name="position" type="int" line="252"/>
                    <scope line="262"/>
                    <scope line="266"/>
                    <scope line="279"/>
                    <scope line="282"/>
                    <declaration name="labelX" type="int" line="296"/>
                    <declaration name="labelW" type="int" line="297"/>
                    <scope line="298"/>
                    <scope line="313">
                        <scope line="314"/>
                        <scope line="317">
                            <declaration name="g2" type="Graphics" line="318"/>
                            <scope line="319">
                                <declaration name="g2d" type="Graphics2D" line="320"/>
                                <declaration name="path" type="Path2D" line="321"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="337"/>
            </method>
            <javadoc line="342">
                Reinitialize the insets parameter with this Border&apos;s current Insets.                
                <param>
                    c the component for which this border insets value applies                    
                </param>
                <param>
                    insets the object to be reinitialized                    
                </param>
            </javadoc>
            <method name="getBorderInsets" type="Insets" line="347">
                <params>
                    <param name="c" type="Component"/>
                    <param name="insets" type="Insets"/>
                </params>
                <declaration name="border" type="Border" line="348"/>
                <declaration name="title" type="String" line="351"/>
                <scope line="352">
                    <declaration name="edge" type="int" line="353"/>
                    <declaration name="label" type="JLabel" line="354"/>
                    <declaration name="size" type="Dimension" line="355"/>
                    <scope line="361">
                        <scope line="362"/>
                    </scope>
                    <scope line="373">
                        <scope line="374"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="391">
                Returns whether or not the border is opaque.                
            </javadoc>
            <method name="isBorderOpaque" type="boolean" line="394"/>
            <javadoc line="398">
                Returns the title of the titled border.                
                <return>
                    the title of the titled border                    
                </return>
            </javadoc>
            <method name="getTitle" type="String" line="403"/>
            <javadoc line="407">
                Returns the border of the titled border.                
                <return>
                    the border of the titled border                    
                </return>
            </javadoc>
            <method name="getBorder" type="Border" line="412"/>
            <javadoc line="418">
                Returns the title-position of the titled border.                
                <return>
                    the title-position of the titled border                    
                </return>
            </javadoc>
            <method name="getTitlePosition" type="int" line="423"/>
            <javadoc line="427">
                Returns the title-justification of the titled border.                
                <return>
                    the title-justification of the titled border                    
                </return>
            </javadoc>
            <method name="getTitleJustification" type="int" line="432"/>
            <javadoc line="436">
                Returns the title-font of the titled border.                
                <return>
                    the title-font of the titled border                    
                </return>
            </javadoc>
            <method name="getTitleFont" type="Font" line="441"/>
            <javadoc line="445">
                Returns the title-color of the titled border.                
                <return>
                    the title-color of the titled border                    
                </return>
            </javadoc>
            <method name="getTitleColor" type="Color" line="450"/>
            <javadoc line="457">
                Sets the title of the titled border.                
                <param>
                    title  the title for the border                    
                </param>
            </javadoc>
            <method name="setTitle" type="void" line="461">
                <params>
                    <param name="title" type="String"/>
                </params>
            </method>
            <javadoc line="465">
                Sets the border of the titled border.                
                <param>
                    border the border                    
                </param>
            </javadoc>
            <method name="setBorder" type="void" line="469">
                <params>
                    <param name="border" type="Border"/>
                </params>
            </method>
            <javadoc line="473">
                Sets the title-position of the titled border.                
                <param>
                    titlePosition the position for the border                    
                </param>
            </javadoc>
            <method name="setTitlePosition" type="void" line="477">
                <params>
                    <param name="titlePosition" type="int"/>
                </params>
            </method>
            <javadoc line="494">
                Sets the title-justification of the titled border.                
                <param>
                    titleJustification the justification for the border                    
                </param>
            </javadoc>
            <method name="setTitleJustification" type="void" line="498">
                <params>
                    <param name="titleJustification" type="int"/>
                </params>
            </method>
            <javadoc line="514">
                Sets the title-font of the titled border.                
                <param>
                    titleFont the font for the border title                    
                </param>
            </javadoc>
            <method name="setTitleFont" type="void" line="518">
                <params>
                    <param name="titleFont" type="Font"/>
                </params>
            </method>
            <javadoc line="522">
                Sets the title-color of the titled border.                
                <param>
                    titleColor the color for the border title                    
                </param>
            </javadoc>
            <method name="setTitleColor" type="void" line="526">
                <params>
                    <param name="titleColor" type="Color"/>
                </params>
            </method>
            <javadoc line="530">
                Returns the minimum dimensions this border requires
                  in order to fully display the border and title.                
                <param>
                    c the component where this border will be drawn                    
                </param>
                <return>
                    the {@code Dimension} object                    
                </return>
            </javadoc>
            <method name="getMinimumSize" type="Dimension" line="536">
                <params>
                    <param name="c" type="Component"/>
                </params>
                <declaration name="insets" type="Insets" line="537"/>
                <declaration name="minSize" type="Dimension" line="538"/>
                <declaration name="title" type="String" line="540"/>
                <scope line="541">
                    <declaration name="label" type="JLabel" line="542"/>
                    <declaration name="size" type="Dimension" line="543"/>
                    <declaration name="position" type="int" line="545"/>
                    <scope line="546"/>
                    <scope line="549"/>
                </scope>
            </method>
            <javadoc line="556">
                Returns the baseline.                
                <throws>
                    NullPointerException {@inheritDoc}                    
                </throws>
                <throws>
                    IllegalArgumentException {@inheritDoc}                    
                </throws>
                <see>
                    javax.swing.JComponent#getBaseline(int,int)                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="getBaseline" type="int" line="564">
                <params>
                    <param name="c" type="Component"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <scope line="565"/>
                <scope line="568"/>
                <scope line="571"/>
                <declaration name="border" type="Border" line="574"/>
                <declaration name="title" type="String" line="575"/>
                <scope line="576">
                    <declaration name="edge" type="int" line="577"/>
                    <declaration name="label" type="JLabel" line="578"/>
                    <declaration name="size" type="Dimension" line="579"/>
                    <declaration name="insets" type="Insets" line="580"/>
                    <declaration name="baseline" type="int" line="582"/>
                </scope>
            </method>
            <javadoc line="607">
                Returns an enum indicating how the baseline of the border
                  changes as the size changes.                
                <throws>
                    NullPointerException {@inheritDoc}                    
                </throws>
                <see>
                    javax.swing.JComponent#getBaseline(int,int)                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="getBaselineResizeBehavior" type="Component.BaselineResizeBehavior" line="616">
                <params>
                    <param name="c" type="Component"/>
                </params>
            </method>
            <method name="getPosition" type="int" line="631">
                <declaration name="position" type="int" line="632"/>
                <scope line="633"/>
                <declaration name="value" type="Object" line="636"/>
                <scope line="637">
                    <declaration name="i" type="int" line="638"/>
                    <scope line="639"/>
                </scope>
                <scope line="643">
                    <declaration name="s" type="String" line="644"/>
                    <scope line="645"/>
                    <scope line="648"/>
                    <scope line="651"/>
                    <scope line="654"/>
                    <scope line="657"/>
                    <scope line="660"/>
                </scope>
            </method>
            <method name="getJustification" type="int" line="667">
                <params>
                    <param name="c" type="Component"/>
                </params>
                <declaration name="justification" type="int" line="668"/>
                <scope line="669"/>
                <scope line="672"/>
            </method>
            <method name="getFont" type="Font" line="678">
                <params>
                    <param name="c" type="Component"/>
                </params>
                <declaration name="font" type="Font" line="679"/>
                <scope line="680"/>
                <scope line="684"/>
                <scope line="687">
                    <scope line="689"/>
                </scope>
            </method>
            <method name="getColor" type="Color" line="696">
                <params>
                    <param name="c" type="Component"/>
                </params>
                <declaration name="color" type="Color" line="697"/>
                <scope line="698"/>
                <scope line="702"/>
            </method>
            <method name="getLabel" type="JLabel" line="710">
                <params>
                    <param name="c" type="Component"/>
                </params>
            </method>
            <method name="getBorderInsets" type="Insets" line="719">
                <params>
                    <param name="border" type="Border"/>
                    <param name="c" type="Component"/>
                    <param name="insets" type="Insets"/>
                </params>
                <scope line="720"/>
                <scope line="723">
                    <declaration name="ab" type="AbstractBorder" line="724"/>
                </scope>
                <scope line="727">
                    <declaration name="i" type="Insets" line="728"/>
                </scope>
            </method>
        </class>
    </source>