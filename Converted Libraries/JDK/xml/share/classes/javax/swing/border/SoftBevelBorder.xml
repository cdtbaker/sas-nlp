<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.border">
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Insets"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Component"/>
        <import package="java.beans.ConstructorProperties"/>
        <class name="SoftBevelBorder" line="34">
            <extends class="BevelBorder"/>
            <javadoc line="34">
                A class which implements a raised or lowered bevel with
                  softened corners.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases. The current serialization support is
                  appropriate for short term storage or RMI between applications running
                  the same version of Swing.  As of 1.4, support for long term storage
                  of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                  has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                  Please see {@link java.beans.XMLEncoder}.                
                <author>
                    Amy Fowler                    
                </author>
                <author>
                    Chester Rose                    
                </author>
            </javadoc>
            <javadoc line="53">
                Creates a bevel border with the specified type and whose
                  colors will be derived from the background color of the
                  component passed into the paintBorder method.                
                <param>
                    bevelType the type of bevel for the border                    
                </param>
            </javadoc>
            <method name="SoftBevelBorder" type="constructor" line="59">
                <params>
                    <param name="bevelType" type="int"/>
                </params>
            </method>
            <javadoc line="63">
                Creates a bevel border with the specified type, highlight and
                  shadow colors.                
                <param>
                    bevelType the type of bevel for the border                    
                </param>
                <param>
                    highlight the color to use for the bevel highlight                    
                </param>
                <param>
                    shadow the color to use for the bevel shadow                    
                </param>
            </javadoc>
            <method name="SoftBevelBorder" type="constructor" line="70">
                <params>
                    <param name="bevelType" type="int"/>
                    <param name="highlight" type="Color"/>
                    <param name="shadow" type="Color"/>
                </params>
            </method>
            <javadoc line="74">
                Creates a bevel border with the specified type, highlight
                  shadow colors.                
                <param>
                    bevelType the type of bevel for the border                    
                </param>
                <param>
                    highlightOuterColor the color to use for the bevel outer highlight                    
                </param>
                <param>
                    highlightInnerColor the color to use for the bevel inner highlight                    
                </param>
                <param>
                    shadowOuterColor the color to use for the bevel outer shadow                    
                </param>
                <param>
                    shadowInnerColor the color to use for the bevel inner shadow                    
                </param>
            </javadoc>
            <method name="SoftBevelBorder" type="constructor" line="86">
                <params>
                    <param name="bevelType" type="int"/>
                    <param name="highlightOuterColor" type="Color"/>
                    <param name="highlightInnerColor" type="Color"/>
                    <param name="shadowOuterColor" type="Color"/>
                    <param name="shadowInnerColor" type="Color"/>
                </params>
            </method>
            <javadoc line="91">
                Paints the border for the specified component with the specified
                  position and size.                
                <param>
                    c the component for which this border is being painted                    
                </param>
                <param>
                    g the paint graphics                    
                </param>
                <param>
                    x the x position of the painted border                    
                </param>
                <param>
                    y the y position of the painted border                    
                </param>
                <param>
                    width the width of the painted border                    
                </param>
                <param>
                    height the height of the painted border                    
                </param>
            </javadoc>
            <method name="paintBorder" type="void" line="101">
                <params>
                    <param name="c" type="Component"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="oldColor" type="Color" line="102"/>
                <scope line="105"/>
                <scope line="126"/>
            </method>
            <javadoc line="150">
                Reinitialize the insets parameter with this Border&apos;s current Insets.                
                <param>
                    c the component for which this border insets value applies                    
                </param>
                <param>
                    insets the object to be reinitialized                    
                </param>
            </javadoc>
            <method name="getBorderInsets" type="Insets" line="155">
                <params>
                    <param name="c" type="Component"/>
                    <param name="insets" type="Insets"/>
                </params>
            </method>
            <javadoc line="160">
                Returns whether or not the border is opaque.                
            </javadoc>
            <method name="isBorderOpaque" type="boolean" line="163"/>
        </class>
    </source>