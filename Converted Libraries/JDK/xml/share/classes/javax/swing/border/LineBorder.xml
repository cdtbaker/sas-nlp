<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.border">
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Insets"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.Shape"/>
        <import package="java.awt.geom.Path2D"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <import package="java.awt.geom.RoundRectangle2D"/>
        <import package="java.beans.ConstructorProperties"/>
        <class name="LineBorder" line="12">
            <extends class="AbstractBorder"/>
            <javadoc line="12">
                A class which implements a line border of arbitrary thickness
                  and of a single color.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases. The current serialization support is
                  appropriate for short term storage or RMI between applications running
                  the same version of Swing.  As of 1.4, support for long term storage
                  of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                  has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                  Please see {@link java.beans.XMLEncoder}.                
                <author>
                    David Kloba                    
                </author>
            </javadoc>
            <declaration name="blackLine" type="Border" line="27"/>
            <declaration name="grayLine" type="Border" line="28"/>
            <declaration name="thickness" type="int" line="29"/>
            <declaration name="lineColor" type="Color" line="30"/>
            <declaration name="roundedCorners" type="boolean" line="31"/>
            <javadoc line="32">
                Convenience method for getting the Color.black LineBorder of thickness 1.                
            </javadoc>
            <method name="createBlackLineBorder" type="Border" line="35">
                <scope line="36"/>
            </method>
            <javadoc line="41">
                Convenience method for getting the Color.gray LineBorder of thickness 1.                
            </javadoc>
            <method name="createGrayLineBorder" type="Border" line="44">
                <scope line="45"/>
            </method>
            <javadoc line="50">
                Creates a line border with the specified color and a
                  thickness = 1.                
                <param>
                    color the color for the border                    
                </param>
            </javadoc>
            <method name="LineBorder" type="constructor" line="55">
                <params>
                    <param name="color" type="Color"/>
                </params>
            </method>
            <javadoc line="58">
                Creates a line border with the specified color and thickness.                
                <param>
                    color the color of the border                    
                </param>
                <param>
                    thickness the thickness of the border                    
                </param>
            </javadoc>
            <method name="LineBorder" type="constructor" line="63">
                <params>
                    <param name="color" type="Color"/>
                    <param name="thickness" type="int"/>
                </params>
            </method>
            <javadoc line="66">
                Creates a line border with the specified color, thickness,
                  and corner shape.                
                <param>
                    color the color of the border                    
                </param>
                <param>
                    thickness the thickness of the border                    
                </param>
                <param>
                    roundedCorners whether or not border corners should be round                    
                </param>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="LineBorder" type="constructor" line="74">
                <params>
                    <param name="color" type="Color"/>
                    <param name="thickness" type="int"/>
                    <param name="roundedCorners" type="boolean"/>
                </params>
            </method>
            <javadoc line="79">
                Paints the border for the specified component with the
                  specified position and size.                
                <param>
                    c the component for which this border is being painted                    
                </param>
                <param>
                    g the paint graphics                    
                </param>
                <param>
                    x the x position of the painted border                    
                </param>
                <param>
                    y the y position of the painted border                    
                </param>
                <param>
                    width the width of the painted border                    
                </param>
                <param>
                    height the height of the painted border                    
                </param>
            </javadoc>
            <method name="paintBorder" type="void" line="89">
                <params>
                    <param name="c" type="Component"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <scope line="90">
                    <declaration name="g2d" type="Graphics2D" line="91"/>
                    <declaration name="oldColor" type="Color" line="92"/>
                    <declaration name="outer" type="Shape" line="94"/>
                    <declaration name="inner" type="Shape" line="95"/>
                    <declaration name="offs" type="int" line="96"/>
                    <declaration name="size" type="int" line="97"/>
                    <scope line="98">
                        <declaration name="arc" type="int" line="99"/>
                    </scope>
                    <scope line="103"/>
                    <declaration name="path" type="Path2D" line="107"/>
                </scope>
            </method>
            <javadoc line="114">
                Reinitialize the insets parameter with this Border&apos;s current Insets.                
                <param>
                    c the component for which this border insets value applies                    
                </param>
                <param>
                    insets the object to be reinitialized                    
                </param>
            </javadoc>
            <method name="getBorderInsets" type="Insets" line="119">
                <params>
                    <param name="c" type="Component"/>
                    <param name="insets" type="Insets"/>
                </params>
            </method>
            <javadoc line="123">
                Returns the color of the border.                
            </javadoc>
            <method name="getLineColor" type="Color" line="126"/>
            <javadoc line="129">
                Returns the thickness of the border.                
            </javadoc>
            <method name="getThickness" type="int" line="132"/>
            <javadoc line="135">
                Returns whether this border will be drawn with rounded corners.                
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="getRoundedCorners" type="boolean" line="139"/>
            <javadoc line="142">
                Returns whether or not the border is opaque.                
            </javadoc>
            <method name="isBorderOpaque" type="boolean" line="145"/>
        </class>
    </source>