<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.border">
        <import package="java.awt.BasicStroke"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.Insets"/>
        <import package="java.awt.Paint"/>
        <import package="java.awt.RenderingHints"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <import package="java.beans.ConstructorProperties"/>
        <class name="StrokeBorder" line="37">
            <extends class="AbstractBorder"/>
            <javadoc line="37">
                A class which implements a border of an arbitrary stroke.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases. The current serialization support is
                  appropriate for short term storage or RMI
                  between applications running the same version of Swing.
                  As of 1.4, support for long term storage of all JavaBeans&amp;trade;
                  has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                  Please see {@link java.beans.XMLEncoder}.                
                <author>
                    Sergey A. Malenkov                    
                </author>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="stroke" type="BasicStroke" line="54"/>
            <declaration name="paint" type="Paint" line="55"/>
            <javadoc line="57">
                Creates a border of the specified {@code stroke}.
                  The component&apos;s foreground color will be used to render the border.                
                <param>
                    stroke  the {@link BasicStroke} object used to stroke a shape                    
                </param>
                <throws>
                    NullPointerException if the specified {@code stroke} is {@code null}                    
                </throws>
            </javadoc>
            <method name="StrokeBorder" type="constructor" line="65">
                <params>
                    <param name="stroke" type="BasicStroke"/>
                </params>
            </method>
            <javadoc line="69">
                Creates a border of the specified {@code stroke} and {@code paint}.
                  If the specified {@code paint} is {@code null},
                  the component&apos;s foreground color will be used to render the border.                
                <param>
                    stroke  the {@link BasicStroke} object used to stroke a shape                    
                </param>
                <param>
                    paint   the {@link Paint} object used to generate a color                    
                </param>
                <throws>
                    NullPointerException if the specified {@code stroke} is {@code null}                    
                </throws>
            </javadoc>
            <method name="StrokeBorder" type="constructor" line="80">
                <params>
                    <param name="stroke" type="BasicStroke"/>
                    <param name="paint" type="Paint"/>
                </params>
                <scope line="81"/>
            </method>
            <javadoc line="88">
                Paints the border for the specified component
                  with the specified position and size.
                  If the border was not specified with a {@link Paint} object,
                  the component&apos;s foreground color will be used to render the border.
                  If the component&apos;s foreground color is not available,
                  the default color of the {@link Graphics} object will be used.                
                <param>
                    c       the component for which this border is being painted                    
                </param>
                <param>
                    g       the paint graphics                    
                </param>
                <param>
                    x       the x position of the painted border                    
                </param>
                <param>
                    y       the y position of the painted border                    
                </param>
                <param>
                    width   the width of the painted border                    
                </param>
                <param>
                    height  the height of the painted border                    
                </param>
                <throws>
                    NullPointerException if the specified {@code g} is {@code null}                    
                </throws>
            </javadoc>
            <method name="paintBorder" type="void" line="106">
                <params>
                    <param name="c" type="Component"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="size" type="float" line="107"/>
                <scope line="108">
                    <scope line="110">
                        <declaration name="g2d" type="Graphics2D" line="111"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="122">
                Reinitializes the {@code insets} parameter
                  with this border&apos;s current insets.
                  Every inset is the smallest (closest to negative infinity) integer value
                  that is greater than or equal to the line width of the stroke
                  that is used to paint the border.                
                <param>
                    c       the component for which this border insets value applies                    
                </param>
                <param>
                    insets  the {@code Insets} object to be reinitialized                    
                </param>
                <return>
                    the reinitialized {@code insets} parameter                    
                </return>
                <throws>
                    NullPointerException if the specified {@code insets} is {@code null}                    
                </throws>
                <see>
                    Math#ceil                    
                </see>
            </javadoc>
            <method name="getBorderInsets" type="Insets" line="138">
                <params>
                    <param name="c" type="Component"/>
                    <param name="insets" type="Insets"/>
                </params>
                <declaration name="size" type="int" line="139"/>
            </method>
            <javadoc line="144">
                Returns the {@link BasicStroke} object used to stroke a shape
                  during the border rendering.                
                <return>
                    the {@link BasicStroke} object                    
                </return>
            </javadoc>
            <method name="getStroke" type="BasicStroke" line="150"/>
            <javadoc line="154">
                Returns the {@link Paint} object used to generate a color
                  during the border rendering.                
                <return>
                    the {@link Paint} object or {@code null}if the {@code paint} parameter is not set                    
                </return>
            </javadoc>
            <method name="getPaint" type="Paint" line="161"/>
        </class>
    </source>