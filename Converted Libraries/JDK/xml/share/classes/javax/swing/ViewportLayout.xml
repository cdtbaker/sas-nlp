<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing">
        <import package="java.awt.LayoutManager"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Container"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.Point"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Insets"/>
        <import package="java.io.Serializable"/>
        <class name="ViewportLayout" line="10">
            <implements interface="LayoutManager"/>
            <implements interface="Serializable"/>
            <javadoc line="10">
                The default layout manager for &lt;code&gt;JViewport&lt;/code&gt;.
                  &lt;code&gt;ViewportLayout&lt;/code&gt; defines
                  a policy for layout that should be useful for most applications.
                  The viewport makes its view the same size as the viewport,
                  however it will not make the view smaller than its minimum size.
                  As the viewport grows the view is kept bottom justified until
                  the entire view is visible, subsequently the view is kept top
                  justified.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases. The current serialization support is
                  appropriate for short term storage or RMI between applications running
                  the same version of Swing.  As of 1.4, support for long term storage
                  of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                  has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                  Please see {@link java.beans.XMLEncoder}.                
                <author>
                    Hans Muller                    
                </author>
            </javadoc>
            <declaration name="SHARED_INSTANCE" type="ViewportLayout" line="31"/>
            <javadoc line="32">
                Adds the specified component to the layout. Not used by this class.                
                <param>
                    name the name of the component                    
                </param>
                <param>
                    c the the component to be added                    
                </param>
            </javadoc>
            <method name="addLayoutComponent" type="void" line="37">
                <params>
                    <param name="name" type="String"/>
                    <param name="c" type="Component"/>
                </params>
            </method>
            <javadoc line="39">
                Removes the specified component from the layout. Not used by
                  this class.                
                <param>
                    c the component to remove                    
                </param>
            </javadoc>
            <method name="removeLayoutComponent" type="void" line="44">
                <params>
                    <param name="c" type="Component"/>
                </params>
            </method>
            <javadoc line="46">
                Returns the preferred dimensions for this layout given the components
                  in the specified target container.                
                <param>
                    parent the component which needs to be laid out                    
                </param>
                <return>
                    a &lt;code&gt;Dimension&lt;/code&gt; object containing the
                      preferred dimensions                    
                </return>
                <see>
                    #minimumLayoutSize                    
                </see>
            </javadoc>
            <method name="preferredLayoutSize" type="Dimension" line="54">
                <params>
                    <param name="parent" type="Container"/>
                </params>
                <declaration name="view" type="Component" line="55"/>
                <scope line="56"/>
                <scope line="59"/>
                <scope line="62"/>
            </method>
            <javadoc line="66">
                Returns the minimum dimensions needed to layout the components
                  contained in the specified target container.                
                <param>
                    parent the component which needs to be laid out                    
                </param>
                <return>
                    a &lt;code&gt;Dimension&lt;/code&gt; object containing the minimum
                      dimensions                    
                </return>
                <see>
                    #preferredLayoutSize                    
                </see>
            </javadoc>
            <method name="minimumLayoutSize" type="Dimension" line="74">
                <params>
                    <param name="parent" type="Container"/>
                </params>
            </method>
            <javadoc line="77">
                Called by the AWT when the specified container needs to be laid out.                
                <param>
                    parent  the container to lay out                    
                </param>
                <exception>
                    AWTError  if the target isn&apos;t the container specified to the
                      &lt;code&gt;BoxLayout&lt;/code&gt; constructor                    
                </exception>
            </javadoc>
            <method name="layoutContainer" type="void" line="83">
                <params>
                    <param name="parent" type="Container"/>
                </params>
                <declaration name="vp" type="JViewport" line="84"/>
                <declaration name="view" type="Component" line="85"/>
                <declaration name="scrollableView" type="Scrollable" line="86"/>
                <scope line="87"/>
                <scope line="90"/>
                <declaration name="insets" type="Insets" line="93"/>
                <declaration name="viewPrefSize" type="Dimension" line="94"/>
                <declaration name="vpSize" type="Dimension" line="95"/>
                <declaration name="extentSize" type="Dimension" line="96"/>
                <declaration name="viewSize" type="Dimension" line="97"/>
                <scope line="98">
                    <scope line="99"/>
                    <scope line="102"/>
                </scope>
                <declaration name="viewPosition" type="Point" line="106"/>
                <scope line="107">
                    <scope line="108"/>
                </scope>
                <scope line="112">
                    <scope line="113"/>
                    <scope line="116"/>
                </scope>
                <scope line="120"/>
                <scope line="123">
                    <scope line="124"/>
                    <scope line="127"/>
                </scope>
            </method>
        </class>
    </source>