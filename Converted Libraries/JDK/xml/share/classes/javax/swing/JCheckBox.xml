<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.beans"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.accessibility"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.IOException"/>
        <class name="JCheckBox" line="39">
            <extends class="JToggleButton"/>
            <comment line="256">
                See readObject and writeObject in JComponent for more
                 information about serialization in Swing.                
            </comment>
            <comment line="300">
                ///////////////
                 Accessibility support                
            </comment>
            <comment line="350">
                inner class AccessibleJCheckBox                
            </comment>
            <implements interface="Accessible"/>
            <javadoc line="39">
                An implementation of a check box -- an item that can be selected or
                  deselected, and which displays its state to the user.
                  By convention, any number of check boxes in a group can be selected.
                  See &lt;a href=&quot;http://java.sun.com/docs/books/tutorial/uiswing/components/button.html&quot;&gt;How to Use Buttons, Check Boxes, and Radio Buttons&lt;/a&gt;
                  in &lt;em&gt;The Java Tutorial&lt;/em&gt;
                  for examples and information on using check boxes.
                  &lt;p&gt;
                  Buttons can be configured, and to some degree controlled, by
                  &lt;code&gt;&lt;a href=&quot;Action.html&quot;&gt;Action&lt;/a&gt;&lt;/code&gt;s.  Using an
                  &lt;code&gt;Action&lt;/code&gt; with a button has many benefits beyond directly
                  configuring a button.  Refer to &lt;a href=&quot;Action.html#buttonActions&quot;&gt;
                  Swing Components Supporting &lt;code&gt;Action&lt;/code&gt;&lt;/a&gt; for more
                  details, and you can find more information in &lt;a
                  href=&quot;http://java.sun.com/docs/books/tutorial/uiswing/misc/action.html&quot;&gt;How
                  to Use Actions&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt; Swing is not thread safe. For more
                  information see &lt;a
                  href=&quot;package-summary.html#threading&quot;&gt;Swing&apos;s Threading
                  Policy&lt;/a&gt;.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases. The current serialization support is
                  appropriate for short term storage or RMI between applications running
                  the same version of Swing.  As of 1.4, support for long term storage
                  of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                  has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                  Please see {@link java.beans.XMLEncoder}.                
                <see>
                    JRadioButton                    
                </see>
                <beaninfo>
                    attribute: isContainer false
                      description: A component which can be selected or deselected.                    
                </beaninfo>
                <author>
                    Jeff Dinkins                    
                </author>
            </javadoc>
            <declaration name="BORDER_PAINTED_FLAT_CHANGED_PROPERTY" type="String" line="80"/>
            <javadoc line="80">
                Identifies a change to the flat property.                
            </javadoc>
            <declaration name="flat" type="boolean" line="83"/>
            <declaration name="uiClassID" type="String" line="85"/>
            <javadoc line="85">
                @see #getUIClassID                
                <see>
                    #readObject                    
                </see>
            </javadoc>
            <javadoc line="92">
                Creates an initially unselected check box button with no text, no icon.                
            </javadoc>
            <method name="JCheckBox" type="constructor" line="95"/>
            <javadoc line="99">
                Creates an initially unselected check box with an icon.                
                <param>
                    icon  the Icon image to display                    
                </param>
            </javadoc>
            <method name="JCheckBox" type="constructor" line="104">
                <params>
                    <param name="icon" type="Icon"/>
                </params>
            </method>
            <javadoc line="108">
                Creates a check box with an icon and specifies whether
                  or not it is initially selected.                
                <param>
                    icon  the Icon image to display                    
                </param>
                <param>
                    selected a boolean value indicating the initial selection
                      state. If &lt;code&gt;true&lt;/code&gt; the check box is selected                    
                </param>
            </javadoc>
            <method name="JCheckBox" type="constructor" line="116">
                <params>
                    <param name="icon" type="Icon"/>
                    <param name="selected" type="boolean"/>
                </params>
            </method>
            <javadoc line="120">
                Creates an initially unselected check box with text.                
                <param>
                    text the text of the check box.                    
                </param>
            </javadoc>
            <method name="JCheckBox" type="constructor" line="125">
                <params>
                    <param name="text" type="String"/>
                </params>
            </method>
            <javadoc line="129">
                Creates a check box where properties are taken from the
                  Action supplied.                
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="JCheckBox" type="constructor" line="135">
                <params>
                    <param name="a" type="Action"/>
                </params>
            </method>
            <javadoc line="141">
                Creates a check box with text and specifies whether
                  or not it is initially selected.                
                <param>
                    text the text of the check box.                    
                </param>
                <param>
                    selected a boolean value indicating the initial selection
                      state. If &lt;code&gt;true&lt;/code&gt; the check box is selected                    
                </param>
            </javadoc>
            <method name="JCheckBox" type="constructor" line="149">
                <params>
                    <param name="text" type="String"/>
                    <param name="selected" type="boolean"/>
                </params>
            </method>
            <javadoc line="153">
                Creates an initially unselected check box with
                  the specified text and icon.                
                <param>
                    text the text of the check box.                    
                </param>
                <param>
                    icon  the Icon image to display                    
                </param>
            </javadoc>
            <method name="JCheckBox" type="constructor" line="160">
                <params>
                    <param name="text" type="String"/>
                    <param name="icon" type="Icon"/>
                </params>
            </method>
            <javadoc line="164">
                Creates a check box with text and icon,
                  and specifies whether or not it is initially selected.                
                <param>
                    text the text of the check box.                    
                </param>
                <param>
                    icon  the Icon image to display                    
                </param>
                <param>
                    selected a boolean value indicating the initial selection
                      state. If &lt;code&gt;true&lt;/code&gt; the check box is selected                    
                </param>
            </javadoc>
            <method name="JCheckBox" type="constructor" line="173">
                <params>
                    <param name="text" type="String"/>
                    <param name="icon" type="Icon"/>
                    <param name="selected" type="boolean"/>
                </params>
            </method>
            <javadoc line="179">
                Sets the &lt;code&gt;borderPaintedFlat&lt;/code&gt; property,
                  which gives a hint to the look and feel as to the
                  appearance of the check box border.
                  This is usually set to &lt;code&gt;true&lt;/code&gt; when a
                  &lt;code&gt;JCheckBox&lt;/code&gt; instance is used as a
                  renderer in a component such as a &lt;code&gt;JTable&lt;/code&gt; or
                  &lt;code&gt;JTree&lt;/code&gt;.  The default value for the
                  &lt;code&gt;borderPaintedFlat&lt;/code&gt; property is &lt;code&gt;false&lt;/code&gt;.
                  This method fires a property changed event.
                  Some look and feels might not implement flat borders;
                  they will ignore this property.                
                <param>
                    b &lt;code&gt;true&lt;/code&gt; requests that the border be painted flat;
                      &lt;code&gt;false&lt;/code&gt; requests normal borders                    
                </param>
                <see>
                    #isBorderPaintedFlat                    
                </see>
                <beaninfo>
                    bound: true
                      attribute: visualUpdate true
                      description: Whether the border is painted flat.                    
                </beaninfo>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="setBorderPaintedFlat" type="void" line="201">
                <params>
                    <param name="b" type="boolean"/>
                </params>
                <declaration name="oldValue" type="boolean" line="202"/>
                <scope line="205"/>
            </method>
            <javadoc line="211">
                Gets the value of the &lt;code&gt;borderPaintedFlat&lt;/code&gt; property.                
                <return>
                    the value of the &lt;code&gt;borderPaintedFlat&lt;/code&gt; property                    
                </return>
                <see>
                    #setBorderPaintedFlat                    
                </see>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="isBorderPaintedFlat" type="boolean" line="218"/>
            <javadoc line="222">
                Resets the UI property to a value from the current look and feel.                
                <see>
                    JComponent#updateUI                    
                </see>
            </javadoc>
            <method name="updateUI" type="void" line="227"/>
            <javadoc line="232">
                Returns a string that specifies the name of the L&amp;F class
                  that renders this component.                
                <return>
                    the string &quot;CheckBoxUI&quot;                    
                </return>
                <see>
                    JComponent#getUIClassID                    
                </see>
                <see>
                    UIDefaults#getUI                    
                </see>
                <beaninfo>
                    expert: true
                      description: A string that specifies the name of the L&amp;F class                    
                </beaninfo>
            </javadoc>
            <method name="getUIClassID" type="String" line="243"/>
            <javadoc line="248">
                The icon for checkboxs comes from the look and feel,
                  not the Action; this is overriden to do nothing.                
            </javadoc>
            <method name="setIconFromAction" type="void" line="252">
                <params>
                    <param name="a" type="Action"/>
                </params>
            </method>
            <method name="writeObject" type="void" line="259">
                <params>
                    <param name="s" type="ObjectOutputStream"/>
                </params>
                <scope line="261">
                    <declaration name="count" type="byte" line="262"/>
                    <scope line="264"/>
                </scope>
            </method>
            <javadoc line="271">
                See JComponent.readObject() for information about serialization
                  in Swing.                
            </javadoc>
            <method name="readObject" type="void" line="277">
                <params>
                    <param name="s" type="ObjectInputStream"/>
                </params>
                <scope line="279"/>
            </method>
            <javadoc line="285">
                Returns a string representation of this JCheckBox. This method
                  is intended to be used only for debugging purposes, and the
                  content and format of the returned string may vary between
                  implementations. The returned string may be empty but may not
                  be &lt;code&gt;null&lt;/code&gt;.
                  specific new aspects of the JFC components.                
                <return>
                    a string representation of this JCheckBox.                    
                </return>
            </javadoc>
            <method name="paramString" type="String" line="295"/>
            <javadoc line="303">
                Gets the AccessibleContext associated with this JCheckBox.
                  For JCheckBoxes, the AccessibleContext takes the form of an
                  AccessibleJCheckBox.
                  A new AccessibleJCheckBox instance is created if necessary.                
                <return>
                    an AccessibleJCheckBox that serves as the
                      AccessibleContext of this JCheckBox                    
                </return>
                <beaninfo>
                    expert: true
                      description: The AccessibleContext associated with this CheckBox.                    
                </beaninfo>
            </javadoc>
            <method name="getAccessibleContext" type="AccessibleContext" line="315">
                <scope line="316"/>
            </method>
            <class name="AccessibleJCheckBox" line="322">
                <extends class="AccessibleJToggleButton"/>
                <javadoc line="322">
                    This class implements accessibility support for the
                      &lt;code&gt;JCheckBox&lt;/code&gt; class.  It provides an implementation of the
                      Java Accessibility API appropriate to check box user-interface
                      elements.
                      &lt;p&gt;
                      &lt;strong&gt;Warning:&lt;/strong&gt;
                      Serialized objects of this class will not be compatible with
                      future Swing releases. The current serialization support is
                      appropriate for short term storage or RMI between applications running
                      the same version of Swing.  As of 1.4, support for long term storage
                      of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                      has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                      Please see {@link java.beans.XMLEncoder}.                    
                </javadoc>
                <javadoc line="339">
                    Get the role of this object.                    
                    <return>
                        an instance of AccessibleRole describing the role of the object                        
                    </return>
                    <see>
                        AccessibleRole                        
                    </see>
                </javadoc>
                <method name="getAccessibleRole" type="AccessibleRole" line="345"/>
            </class>
        </class>
    </source>