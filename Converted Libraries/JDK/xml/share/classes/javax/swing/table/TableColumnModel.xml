<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.table">
        <import package="java.util.Enumeration"/>
        <import package="javax.swing.event.ChangeEvent"/>
        <import package="javax.swing.event"/>
        <import package="javax.swing"/>
        <interface name="TableColumnModel">
            <javadoc line="6">
                Defines the requirements for a table column model object suitable for
                  use with &lt;code&gt;JTable&lt;/code&gt;.                
                <author>
                    Alan Chung                    
                </author>
                <author>
                    Philip Milne                    
                </author>
                <see>
                    DefaultTableColumnModel                    
                </see>
            </javadoc>
            <method name="addColumn" type="void" line="14"/>
            <javadoc line="14">
                Appends &lt;code&gt;aColumn&lt;/code&gt; to the end of the
                  &lt;code&gt;tableColumns&lt;/code&gt; array.
                  This method posts a &lt;code&gt;columnAdded&lt;/code&gt;
                  event to its listeners.                
                <param>
                    aColumn         the &lt;code&gt;TableColumn&lt;/code&gt; to be added                    
                </param>
                <see>
                    #removeColumn                    
                </see>
            </javadoc>
            <method name="removeColumn" type="void" line="23"/>
            <javadoc line="23">
                Deletes the &lt;code&gt;TableColumn&lt;/code&gt; &lt;code&gt;column&lt;/code&gt; from the
                  &lt;code&gt;tableColumns&lt;/code&gt; array.  This method will do nothing if
                  &lt;code&gt;column&lt;/code&gt; is not in the table&apos;s column list.
                  This method posts a &lt;code&gt;columnRemoved&lt;/code&gt;
                  event to its listeners.                
                <param>
                    column          the &lt;code&gt;TableColumn&lt;/code&gt; to be removed                    
                </param>
                <see>
                    #addColumn                    
                </see>
            </javadoc>
            <method name="moveColumn" type="void" line="33"/>
            <javadoc line="33">
                Moves the column and its header at &lt;code&gt;columnIndex&lt;/code&gt; to
                  &lt;code&gt;newIndex&lt;/code&gt;.  The old column at &lt;code&gt;columnIndex&lt;/code&gt;
                  will now be found at &lt;code&gt;newIndex&lt;/code&gt;.  The column that used
                  to be at &lt;code&gt;newIndex&lt;/code&gt; is shifted left or right
                  to make room.  This will not move any columns if
                  &lt;code&gt;columnIndex&lt;/code&gt; equals &lt;code&gt;newIndex&lt;/code&gt;.  This method
                  posts a &lt;code&gt;columnMoved&lt;/code&gt; event to its listeners.                
                <param>
                    columnIndex                     the index of column to be moved                    
                </param>
                <param>
                    newIndex                        index of the column&apos;s new location                    
                </param>
                <exception>
                    IllegalArgumentException      if &lt;code&gt;columnIndex&lt;/code&gt; or
                      &lt;code&gt;newIndex&lt;/code&gt;
                      are not in the valid range                    
                </exception>
            </javadoc>
            <method name="setColumnMargin" type="void" line="48"/>
            <javadoc line="48">
                Sets the &lt;code&gt;TableColumn&lt;/code&gt;&apos;s column margin to
                  &lt;code&gt;newMargin&lt;/code&gt;.  This method posts
                  a &lt;code&gt;columnMarginChanged&lt;/code&gt; event to its listeners.                
                <param>
                    newMargin       the width, in pixels, of the new column margins                    
                </param>
                <see>
                    #getColumnMargin                    
                </see>
            </javadoc>
            <method name="getColumnCount" type="int" line="56"/>
            <javadoc line="56">
                Returns the number of columns in the model.                
                <return>
                    the number of columns in the model                    
                </return>
            </javadoc>
            <method name="getColumns" type="Enumeration&lt;TableColumn&gt;" line="61"/>
            <javadoc line="61">
                Returns an &lt;code&gt;Enumeration&lt;/code&gt; of all the columns in the model.                
                <return>
                    an &lt;code&gt;Enumeration&lt;/code&gt; of all the columns in the model                    
                </return>
            </javadoc>
            <method name="getColumnIndex" type="int" line="66"/>
            <javadoc line="66">
                Returns the index of the first column in the table
                  whose identifier is equal to &lt;code&gt;identifier&lt;/code&gt;,
                  when compared using &lt;code&gt;equals&lt;/code&gt;.                
                <param>
                    columnIdentifier        the identifier object                    
                </param>
                <return>
                    the index of the first table column
                      whose identifier is equal to &lt;code&gt;identifier&lt;/code&gt;                    
                </return>
                <exception>
                    IllegalArgumentException      if &lt;code&gt;identifier&lt;/code&gt;
                      is &lt;code&gt;null&lt;/code&gt;, or no
                      &lt;code&gt;TableColumn&lt;/code&gt; has this
                      &lt;code&gt;identifier&lt;/code&gt;                    
                </exception>
                <see>
                    #getColumn                    
                </see>
            </javadoc>
            <method name="getColumn" type="TableColumn" line="80"/>
            <javadoc line="80">
                Returns the &lt;code&gt;TableColumn&lt;/code&gt; object for the column at
                  &lt;code&gt;columnIndex&lt;/code&gt;.                
                <param>
                    columnIndex     the index of the desired column                    
                </param>
                <return>
                    the &lt;code&gt;TableColumn&lt;/code&gt; object for
                      the column at &lt;code&gt;columnIndex&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getColumnMargin" type="int" line="88"/>
            <javadoc line="88">
                Returns the width between the cells in each column.                
                <return>
                    the margin, in pixels, between the cells                    
                </return>
            </javadoc>
            <method name="getColumnIndexAtX" type="int" line="93"/>
            <javadoc line="93">
                Returns the index of the column that lies on the
                  horizontal point, &lt;code&gt;xPosition&lt;/code&gt;;
                  or -1 if it lies outside the any of the column&apos;s bounds.
                  In keeping with Swing&apos;s separable model architecture, a
                  TableColumnModel does not know how the table columns actually appear on
                  screen.  The visual presentation of the columns is the responsibility
                  of the view/controller object using this model (typically JTable).  The
                  view/controller need not display the columns sequentially from left to
                  right.  For example, columns could be displayed from right to left to
                  accomodate a locale preference or some columns might be hidden at the
                  request of the user.  Because the model does not know how the columns
                  are laid out on screen, the given &lt;code&gt;xPosition&lt;/code&gt; should not be
                  considered to be a coordinate in 2D graphics space.  Instead, it should
                  be considered to be a width from the start of the first column in the
                  model.  If the column index for a given X coordinate in 2D space is
                  required, &lt;code&gt;JTable.columnAtPoint&lt;/code&gt; can be used instead.                
                <return>
                    the index of the column; or -1 if no column is found                    
                </return>
                <see>
                    javax.swing.JTable#columnAtPoint                    
                </see>
            </javadoc>
            <method name="getTotalColumnWidth" type="int" line="114"/>
            <javadoc line="114">
                Returns the total width of all the columns.                
                <return>
                    the total computed width of all columns                    
                </return>
            </javadoc>
            <method name="setColumnSelectionAllowed" type="void" line="119"/>
            <javadoc line="119">
                Sets whether the columns in this model may be selected.                
                <param>
                    flag   true if columns may be selected; otherwise false                    
                </param>
                <see>
                    #getColumnSelectionAllowed                    
                </see>
            </javadoc>
            <method name="getColumnSelectionAllowed" type="boolean" line="125"/>
            <javadoc line="125">
                Returns true if columns may be selected.                
                <return>
                    true if columns may be selected                    
                </return>
                <see>
                    #setColumnSelectionAllowed                    
                </see>
            </javadoc>
            <method name="getSelectedColumns" type="int[]" line="131"/>
            <javadoc line="131">
                Returns an array of indicies of all selected columns.                
                <return>
                    an array of integers containing the indicies of all
                      selected columns; or an empty array if nothing is selected                    
                </return>
            </javadoc>
            <method name="getSelectedColumnCount" type="int" line="137"/>
            <javadoc line="137">
                Returns the number of selected columns.                
                <return>
                    the number of selected columns; or 0 if no columns are selected                    
                </return>
            </javadoc>
            <method name="setSelectionModel" type="void" line="142"/>
            <javadoc line="142">
                Sets the selection model.                
                <param>
                    newModel  a &lt;code&gt;ListSelectionModel&lt;/code&gt; object                    
                </param>
                <see>
                    #getSelectionModel                    
                </see>
            </javadoc>
            <method name="getSelectionModel" type="ListSelectionModel" line="148"/>
            <javadoc line="148">
                Returns the current selection model.                
                <return>
                    a &lt;code&gt;ListSelectionModel&lt;/code&gt; object                    
                </return>
                <see>
                    #setSelectionModel                    
                </see>
            </javadoc>
            <method name="addColumnModelListener" type="void" line="154"/>
            <javadoc line="154">
                Adds a listener for table column model events.                
                <param>
                    x  a &lt;code&gt;TableColumnModelListener&lt;/code&gt; object                    
                </param>
            </javadoc>
            <method name="removeColumnModelListener" type="void" line="159"/>
            <javadoc line="159">
                Removes a listener for table column model events.                
                <param>
                    x  a &lt;code&gt;TableColumnModelListener&lt;/code&gt; object                    
                </param>
            </javadoc>
        </interface>
    </source>