<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.table">
        <import package="java.awt.Component"/>
        <import package="javax.swing.CellEditor"/>
        <import package="javax.swing"/>
        <interface name="TableCellEditor">
            <implements interface="CellEditor"/>
            <javadoc line="32">
                This interface defines the method any object that would like to be
                  an editor of values for components such as &lt;code&gt;JListBox&lt;/code&gt;,
                  &lt;code&gt;JComboBox&lt;/code&gt;, &lt;code&gt;JTree&lt;/code&gt;, or &lt;code&gt;JTable&lt;/code&gt;
                  needs to implement.                
                <author>
                    Alan Chung                    
                </author>
            </javadoc>
            <method name="getTableCellEditorComponent" type="Component" line="44"/>
            <javadoc line="44">
                Sets an initial &lt;code&gt;value&lt;/code&gt; for the editor.  This will cause
                  the editor to &lt;code&gt;stopEditing&lt;/code&gt; and lose any partially
                  edited value if the editor is editing when this method is called. &lt;p&gt;
                  Returns the component that should be added to the client&apos;s
                  &lt;code&gt;Component&lt;/code&gt; hierarchy.  Once installed in the client&apos;s
                  hierarchy this component will then be able to draw and receive
                  user input.                
                <param>
                    table           the &lt;code&gt;JTable&lt;/code&gt; that is asking the
                      editor to edit; can be &lt;code&gt;null&lt;/code&gt;                    
                </param>
                <param>
                    value           the value of the cell to be edited; it is
                      up to the specific editor to interpret
                      and draw the value.  For example, if value is
                      the string &quot;true&quot;, it could be rendered as a
                      string or it could be rendered as a check
                      box that is checked.  &lt;code&gt;null&lt;/code&gt;
                      is a valid value                    
                </param>
                <param>
                    isSelected      true if the cell is to be rendered with
                      highlighting                    
                </param>
                <param>
                    row             the row of the cell being edited                    
                </param>
                <param>
                    column          the column of the cell being edited                    
                </param>
                <return>
                    the component for editing                    
                </return>
            </javadoc>
        </interface>
    </source>