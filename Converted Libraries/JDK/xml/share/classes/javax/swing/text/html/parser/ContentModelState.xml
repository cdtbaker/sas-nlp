<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.text.html.parser">
        <class name="ContentModelState" line="2">
            <javadoc line="2">
                A content model state. This is basically a list of pointers to
                  the BNF expression representing the model (the ContentModel).
                  Each element in a DTD has a content model which describes the
                  elements that may occur inside, and the order in which they can
                  occur.
                  &lt;p&gt;
                  Each time a token is reduced a new state is created.
                  &lt;p&gt;
                  See Annex H on page 556 of the SGML handbook for more information.                
                <see>
                    Parser                    
                </see>
                <see>
                    DTD                    
                </see>
                <see>
                    Element                    
                </see>
                <see>
                    ContentModel                    
                </see>
                <author>
                    Arthur van Hoff                    
                </author>
            </javadoc>
            <declaration name="model" type="ContentModel" line="19"/>
            <declaration name="value" type="long" line="20"/>
            <declaration name="next" type="ContentModelState" line="21"/>
            <javadoc line="22">
                Create a content model state for a content model.                
            </javadoc>
            <method name="ContentModelState" type="constructor" line="25">
                <params>
                    <param name="model" type="ContentModel"/>
                </params>
            </method>
            <javadoc line="28">
                Create a content model state for a content model given the
                  remaining state that needs to be reduce.                
            </javadoc>
            <method name="ContentModelState" type="constructor" line="32">
                <params>
                    <param name="content" type="Object"/>
                    <param name="next" type="ContentModelState"/>
                </params>
            </method>
            <javadoc line="35">
                Create a content model state for a content model given the
                  remaining state that needs to be reduce.                
            </javadoc>
            <method name="ContentModelState" type="constructor" line="39">
                <params>
                    <param name="content" type="Object"/>
                    <param name="next" type="ContentModelState"/>
                    <param name="value" type="long"/>
                </params>
            </method>
            <javadoc line="44">
                Return the content model that is relevant to the current state.                
            </javadoc>
            <method name="getModel" type="ContentModel" line="47">
                <declaration name="m" type="ContentModel" line="48"/>
                <scope line="49">
                    <scope line="50"/>
                    <scope line="53"/>
                </scope>
            </method>
            <javadoc line="59">
                Check if the state can be terminated. That is there are no more
                  tokens required in the input stream.                
                <return>
                    true if the model can terminate without further input                    
                </return>
            </javadoc>
            <method name="terminate" type="boolean" line="64">
                <scope line="67"/>
                <scope line="74">
                    <scope line="75"/>
                </scope>
                <scope line="81">
                    <declaration name="m" type="ContentModel" line="82"/>
                    <scope line="83">
                        <scope line="84">
                            <scope line="85"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="93">
                    <declaration name="m" type="ContentModel" line="94"/>
                    <scope line="97"/>
                </scope>
            </method>
            <javadoc line="106">
                Check if the state can be terminated. That is there are no more
                  tokens required in the input stream.                
                <return>
                    the only possible element that can occur next                    
                </return>
            </javadoc>
            <method name="first" type="Element" line="111">
                <scope line="121">
                    <declaration name="m" type="ContentModel" line="122"/>
                </scope>
            </method>
            <javadoc line="130">
                Advance this state to a new state. An exception is thrown if the
                  token is illegal at this point in the content model.                
                <return>
                    next state after reducing a token                    
                </return>
            </javadoc>
            <method name="advance" type="ContentModelState" line="135">
                <params>
                    <param name="token" type="Object"/>
                </params>
                <scope line="138"/>
                <scope line="141">
                    <scope line="142"/>
                    <scope line="145"/>
                </scope>
                <scope line="151"/>
                <scope line="154"/>
                <scope line="157"/>
                <scope line="161"/>
                <scope line="164"/>
                <scope line="167"/>
                <scope line="171">
                    <scope line="172"/>
                </scope>
                <scope line="178">
                    <declaration name="m" type="ContentModel" line="179"/>
                    <scope line="181">
                        <scope line="182"/>
                        <scope line="185"/>
                    </scope>
                </scope>
                <scope line="192">
                    <declaration name="m" type="ContentModel" line="193"/>
                    <declaration name="complete" type="boolean" line="194"/>
                    <scope line="195">
                        <scope line="196">
                            <scope line="197"/>
                            <scope line="200"/>
                        </scope>
                    </scope>
                    <scope line="205">
                        <scope line="206"/>
                        <scope line="209"/>
                    </scope>
                </scope>
                <scope line="216">
                    <scope line="217"/>
                </scope>
            </method>
        </class>
    </source>