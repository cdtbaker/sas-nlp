<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.text">
        <import package="sun.swing.SwingUtilities2"/>
        <import package="java.awt"/>
        <import package="javax.swing.JPasswordField"/>
        <class name="PasswordView" line="31">
            <extends class="FieldView"/>
            <javadoc line="31">
                Implements a View suitable for use in JPasswordField
                  UI implementations.  This is basically a field ui that
                  renders its contents as the echo character specified
                  in the associated component (if it can narrow the
                  component to a JPasswordField).                
                <author>
                    Timothy Prinzing                    
                </author>
                <see>
                    View                    
                </see>
            </javadoc>
            <javadoc line="43">
                Constructs a new view wrapped on an element.                
                <param>
                    elem the element                    
                </param>
            </javadoc>
            <method name="PasswordView" type="constructor" line="48">
                <params>
                    <param name="elem" type="Element"/>
                </params>
            </method>
            <javadoc line="52">
                Renders the given range in the model as normal unselected
                  text.  This sets the foreground color and echos the characters
                  using the value returned by getEchoChar().                
                <param>
                    g the graphics context                    
                </param>
                <param>
                    x the starting X coordinate >= 0                    
                </param>
                <param>
                    y the starting Y coordinate >= 0                    
                </param>
                <param>
                    p0 the starting offset in the model >= 0                    
                </param>
                <param>
                    p1 the ending offset in the model >= p0                    
                </param>
                <return>
                    the X location of the end of the range >= 0                    
                </return>
                <exception>
                    BadLocationException if p0 or p1 are out of range                    
                </exception>
            </javadoc>
            <method name="drawUnselectedText" type="int" line="66">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="p0" type="int"/>
                    <param name="p1" type="int"/>
                </params>
                <declaration name="c" type="Container" line="68"/>
                <scope line="69">
                    <declaration name="f" type="JPasswordField" line="70"/>
                    <scope line="71"/>
                    <scope line="74"/>
                    <scope line="77"/>
                    <declaration name="echoChar" type="char" line="80"/>
                    <declaration name="n" type="int" line="81"/>
                    <scope line="82"/>
                </scope>
            </method>
            <javadoc line="89">
                Renders the given range in the model as selected text.  This
                  is implemented to render the text in the color specified in
                  the hosting component.  It assumes the highlighter will render
                  the selected background.  Uses the result of getEchoChar() to
                  display the characters.                
                <param>
                    g the graphics context                    
                </param>
                <param>
                    x the starting X coordinate >= 0                    
                </param>
                <param>
                    y the starting Y coordinate >= 0                    
                </param>
                <param>
                    p0 the starting offset in the model >= 0                    
                </param>
                <param>
                    p1 the ending offset in the model >= p0                    
                </param>
                <return>
                    the X location of the end of the range >= 0                    
                </return>
                <exception>
                    BadLocationException if p0 or p1 are out of range                    
                </exception>
            </javadoc>
            <method name="drawSelectedText" type="int" line="105">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="p0" type="int"/>
                    <param name="p1" type="int"/>
                </params>
                <declaration name="c" type="Container" line="107"/>
                <scope line="108">
                    <declaration name="f" type="JPasswordField" line="109"/>
                    <scope line="110"/>
                    <declaration name="echoChar" type="char" line="113"/>
                    <declaration name="n" type="int" line="114"/>
                    <scope line="115"/>
                </scope>
            </method>
            <javadoc line="122">
                Renders the echo character, or whatever graphic should be used
                  to display the password characters.  The color in the Graphics
                  object is set to the appropriate foreground color for selected
                  or unselected text.                
                <param>
                    g the graphics context                    
                </param>
                <param>
                    x the starting X coordinate >= 0                    
                </param>
                <param>
                    y the starting Y coordinate >= 0                    
                </param>
                <param>
                    c the echo character                    
                </param>
                <return>
                    the updated X position >= 0                    
                </return>
            </javadoc>
            <method name="drawEchoCharacter" type="int" line="134">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="c" type="char"/>
                </params>
            </method>
            <javadoc line="141">
                Provides a mapping from the document model coordinate space
                  to the coordinate space of the view mapped to it.                
                <param>
                    pos the position to convert >= 0                    
                </param>
                <param>
                    a the allocated region to render into                    
                </param>
                <return>
                    the bounding box of the given position                    
                </return>
                <exception>
                    BadLocationException  if the given position does not
                      represent a valid location in the associated document                    
                </exception>
                <see>
                    View#modelToView                    
                </see>
            </javadoc>
            <method name="modelToView" type="Shape" line="152">
                <params>
                    <param name="pos" type="int"/>
                    <param name="a" type="Shape"/>
                    <param name="b" type="Position.Bias"/>
                </params>
                <declaration name="c" type="Container" line="153"/>
                <scope line="154">
                    <declaration name="f" type="JPasswordField" line="155"/>
                    <scope line="156"/>
                    <declaration name="echoChar" type="char" line="159"/>
                    <declaration name="m" type="FontMetrics" line="160"/>
                    <declaration name="alloc" type="Rectangle" line="162"/>
                    <declaration name="dx" type="int" line="163"/>
                </scope>
            </method>
            <javadoc line="171">
                Provides a mapping from the view coordinate space to the logical
                  coordinate space of the model.                
                <param>
                    fx the X coordinate >= 0.0f                    
                </param>
                <param>
                    fy the Y coordinate >= 0.0f                    
                </param>
                <param>
                    a the allocated region to render into                    
                </param>
                <return>
                    the location within the model that best represents the
                      given point in the view                    
                </return>
                <see>
                    View#viewToModel                    
                </see>
            </javadoc>
            <method name="viewToModel" type="int" line="182">
                <params>
                    <param name="fx" type="float"/>
                    <param name="fy" type="float"/>
                    <param name="a" type="Shape"/>
                    <param name="bias" type="Position.Bias[]"/>
                </params>
                <declaration name="n" type="int" line="184"/>
                <declaration name="c" type="Container" line="185"/>
                <scope line="186">
                    <declaration name="f" type="JPasswordField" line="187"/>
                    <scope line="188"/>
                    <declaration name="echoChar" type="char" line="191"/>
                    <declaration name="charWidth" type="int" line="192"/>
                    <declaration name="alloc" type="Rectangle" line="194"/>
                    <scope line="198"/>
                    <scope line="201"/>
                </scope>
            </method>
            <javadoc line="208">
                Determines the preferred span for this view along an
                  axis.                
                <param>
                    axis may be either View.X_AXIS or View.Y_AXIS                    
                </param>
                <return>
                    the span the view would like to be rendered into >= 0.
                      Typically the view is told to render into the span
                      that is returned, although there is no guarantee.
                      The parent may choose to resize or break the view.                    
                </return>
            </javadoc>
            <method name="getPreferredSpan" type="float" line="218">
                <params>
                    <param name="axis" type="int"/>
                </params>
                <declaration name="c" type="Container" line="221"/>
                <scope line="222">
                    <declaration name="f" type="JPasswordField" line="223"/>
                    <scope line="224">
                        <declaration name="echoChar" type="char" line="225"/>
                        <declaration name="m" type="FontMetrics" line="226"/>
                        <declaration name="doc" type="Document" line="227"/>
                    </scope>
                </scope>
            </method>
            <declaration name="ONE" type="char[]" line="235"/>
        </class>
    </source>