<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.text.html">
        <import package="java.awt.Polygon"/>
        <import package="java.io.Serializable"/>
        <import package="java.util.StringTokenizer"/>
        <import package="java.util.Vector"/>
        <import package="javax.swing.text.AttributeSet"/>
        <class name="Map" line="33">
            <implements interface="Serializable"/>
            <javadoc line="33">
                Map is used to represent a map element that is part of an HTML document.
                  Once a Map has been created, and any number of areas have been added,
                  you can test if a point falls inside the map via the contains method.                
                <author>
                    Scott Violet                    
                </author>
            </javadoc>
            <declaration name="name" type="String" line="41"/>
            <javadoc line="41">
                Name of the Map.                
            </javadoc>
            <declaration name="areaAttributes" type="Vector&lt;AttributeSet&gt;" line="43"/>
            <javadoc line="43">
                An array of AttributeSets.                
            </javadoc>
            <declaration name="areas" type="Vector&lt;RegionContainment&gt;" line="45"/>
            <javadoc line="45">
                An array of RegionContainments, will slowly grow to match the
                  length of areaAttributes as needed.                
            </javadoc>
            <method name="Map" type="constructor" line="49"/>
            <method name="Map" type="constructor" line="52">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="56">
                Returns the name of the Map.                
            </javadoc>
            <method name="getName" type="String" line="59"/>
            <javadoc line="63">
                Defines a region of the Map, based on the passed in AttributeSet.                
            </javadoc>
            <method name="addArea" type="void" line="66">
                <params>
                    <param name="as" type="AttributeSet"/>
                </params>
                <scope line="67"/>
                <scope line="70"/>
            </method>
            <javadoc line="76">
                Removes the previously created area.                
            </javadoc>
            <method name="removeArea" type="void" line="79">
                <params>
                    <param name="as" type="AttributeSet"/>
                </params>
                <scope line="80">
                    <declaration name="numAreas" type="int" line="81"/>
                    <scope line="83">
                        <scope line="84">
                            <scope line="86"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="94">
                Returns the AttributeSets representing the differet areas of the Map.                
            </javadoc>
            <method name="getAreas" type="AttributeSet[]" line="97">
                <declaration name="numAttributes" type="int" line="98"/>
                <scope line="100">
                    <declaration name="retValue" type="AttributeSet[]" line="101"/>
                </scope>
            </method>
            <javadoc line="109">
                Returns the AttributeSet that contains the passed in location,
                  &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;. &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;
                  gives the size of the region the map is defined over. If a matching
                  area is found, the AttribueSet for it is returned.                
            </javadoc>
            <method name="getArea" type="AttributeSet" line="115">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="numAttributes" type="int" line="116"/>
                <scope line="119">
                    <declaration name="numAreas" type="int" line="120"/>
                    <scope line="122"/>
                    <scope line="125">
                        <scope line="126"/>
                        <declaration name="rc" type="RegionContainment" line="130"/>
                        <scope line="131"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="139">
                Creates and returns an instance of RegionContainment that can be
                  used to test if a particular point lies inside a region.                
            </javadoc>
            <method name="createRegionContainment" type="RegionContainment" line="144">
                <params>
                    <param name="attributes" type="AttributeSet"/>
                </params>
                <comment line="168">
                    Something wrong with attributes.                    
                </comment>
                <declaration name="shape" type="Object" line="145"/>
                <scope line="147"/>
                <scope line="150">
                    <declaration name="shapeString" type="String" line="151"/>
                    <declaration name="rc" type="RegionContainment" line="152"/>
                    <scope line="154">
                        <scope line="155"/>
                        <scope line="158"/>
                        <scope line="161"/>
                        <scope line="164"/>
                    </scope>
                    <scope line="167"/>
                </scope>
            </method>
            <javadoc line="176">
                Creates and returns an array of integers from the String
                  &lt;code&gt;stringCoords&lt;/code&gt;. If one of the values represents a
                  % the returned value with be negative. If a parse error results
                  from trying to parse one of the numbers null is returned.                
            </javadoc>
            <method name="extractCoords" type="int[]" line="182">
                <params>
                    <param name="stringCoords" type="Object"/>
                </params>
                <scope line="183"/>
                <declaration name="st" type="StringTokenizer" line="187"/>
                <declaration name="retValue" type="int[]" line="189"/>
                <declaration name="numCoords" type="int" line="190"/>
                <scope line="192">
                    <declaration name="token" type="String" line="193"/>
                    <declaration name="scale" type="int" line="194"/>
                    <scope line="196"/>
                    <scope line="200"/>
                    <scope line="203">
                        <declaration name="intValue" type="int" line="204"/>
                        <scope line="206"/>
                        <scope line="209">
                            <declaration name="temp" type="int[]" line="210"/>
                        </scope>
                    </scope>
                    <scope line="216"/>
                </scope>
                <scope line="220">
                    <declaration name="temp" type="int[]" line="221"/>
                </scope>
            </method>
            <interface name="RegionContainment">
                <javadoc line="230">
                    Defines the interface used for to check if a point is inside a
                      region.                    
                </javadoc>
                <method name="contains" type="boolean" line="235"/>
                <javadoc line="235">
                    Returns true if the location &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;
                      falls inside the region defined in the receiver.
                      &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt; is the size of
                      the enclosing region.                    
                </javadoc>
            </interface>
            <class name="RectangleRegionContainment" line="245">
                <implements interface="RegionContainment"/>
                <javadoc line="245">
                    Used to test for containment in a rectangular region.                    
                </javadoc>
                <declaration name="percents" type="float[]" line="249"/>
                <javadoc line="249">
                    Will be non-null if one of the values is a percent, and any value
                      that is non null indicates it is a percent
                      (order is x, y, width, height).                    
                </javadoc>
                <declaration name="lastWidth" type="int" line="253"/>
                <javadoc line="253">
                    Last value of width passed in.                    
                </javadoc>
                <declaration name="lastHeight" type="int" line="255"/>
                <javadoc line="255">
                    Last value of height passed in.                    
                </javadoc>
                <declaration name="x0" type="int" line="257"/>
                <javadoc line="257">
                    Top left.                    
                </javadoc>
                <declaration name="y0" type="int" line="259"/>
                <declaration name="x1" type="int" line="260"/>
                <javadoc line="260">
                    Bottom right.                    
                </javadoc>
                <declaration name="y1" type="int" line="262"/>
                <method name="RectangleRegionContainment" type="constructor" line="264">
                    <params>
                        <param name="as" type="AttributeSet"/>
                    </params>
                    <declaration name="coords" type="int[]" line="265"/>
                    <scope line="269"/>
                    <scope line="272">
                        <scope line="277">
                            <scope line="280">
                                <scope line="281"/>
                                <scope line="285"/>
                            </scope>
                        </scope>
                    </scope>
                </method>
                <method name="contains" type="boolean" line="293">
                    <params>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <scope line="294"/>
                    <scope line="297">
                        <scope line="300"/>
                        <scope line="303"/>
                        <scope line="306"/>
                        <scope line="309"/>
                    </scope>
                </method>
                <method name="contains" type="boolean" line="316">
                    <params>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                </method>
            </class>
            <class name="PolygonRegionContainment" line="323">
                <extends class="Polygon"/>
                <implements interface="RegionContainment"/>
                <javadoc line="323">
                    Used to test for containment in a polygon region.                    
                </javadoc>
                <declaration name="percentValues" type="float[]" line="328"/>
                <javadoc line="328">
                    If any value is a percent there will be an entry here for the
                      percent value. Use percentIndex to find out the index for it.                    
                </javadoc>
                <declaration name="percentIndexs" type="int[]" line="331"/>
                <declaration name="lastWidth" type="int" line="332"/>
                <javadoc line="332">
                    Last value of width passed in.                    
                </javadoc>
                <declaration name="lastHeight" type="int" line="334"/>
                <javadoc line="334">
                    Last value of height passed in.                    
                </javadoc>
                <method name="PolygonRegionContainment" type="constructor" line="337">
                    <params>
                        <param name="as" type="AttributeSet"/>
                    </params>
                    <declaration name="coords" type="int[]" line="338"/>
                    <scope line="342"/>
                    <scope line="345">
                        <declaration name="numPercents" type="int" line="346"/>
                        <scope line="350">
                            <scope line="351"/>
                        </scope>
                        <scope line="356">
                            <scope line="360">
                                <scope line="361"/>
                            </scope>
                        </scope>
                        <scope line="369"/>
                        <scope line="377"/>
                    </scope>
                </method>
                <method name="contains" type="boolean" line="384">
                    <params>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <comment line="389">
                        Force the bounding box to be recalced.                        
                    </comment>
                    <comment line="398">
                        x                        
                    </comment>
                    <comment line="403">
                        y                        
                    </comment>
                    <scope line="386"/>
                    <declaration name="fWidth" type="float" line="393"/>
                    <declaration name="fHeight" type="float" line="394"/>
                    <scope line="396">
                        <scope line="397"/>
                        <scope line="402"/>
                    </scope>
                </method>
            </class>
            <class name="CircleRegionContainment" line="413">
                <implements interface="RegionContainment"/>
                <javadoc line="413">
                    Used to test for containment in a circular region.                    
                </javadoc>
                <declaration name="x" type="int" line="417"/>
                <javadoc line="417">
                    X origin of the circle.                    
                </javadoc>
                <declaration name="y" type="int" line="419"/>
                <javadoc line="419">
                    Y origin of the circle.                    
                </javadoc>
                <declaration name="radiusSquared" type="int" line="421"/>
                <javadoc line="421">
                    Radius of the circle.                    
                </javadoc>
                <declaration name="percentValues" type="float[]" line="423"/>
                <javadoc line="423">
                    Non-null indicates one of the values represents a percent.                    
                </javadoc>
                <declaration name="lastWidth" type="int" line="425"/>
                <javadoc line="425">
                    Last value of width passed in.                    
                </javadoc>
                <declaration name="lastHeight" type="int" line="427"/>
                <javadoc line="427">
                    Last value of height passed in.                    
                </javadoc>
                <method name="CircleRegionContainment" type="constructor" line="430">
                    <params>
                        <param name="as" type="AttributeSet"/>
                    </params>
                    <declaration name="coords" type="int[]" line="431"/>
                    <scope line="434"/>
                    <scope line="440">
                        <scope line="443">
                            <scope line="444"/>
                            <scope line="448"/>
                        </scope>
                    </scope>
                    <scope line="453"/>
                </method>
                <method name="contains" type="boolean" line="458">
                    <params>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <scope line="460">
                        <declaration name="newRad" type="int" line="461"/>
                        <scope line="465"/>
                        <scope line="468"/>
                        <scope line="471"/>
                    </scope>
                </method>
            </class>
            <class name="DefaultRegionContainment" line="483">
                <implements interface="RegionContainment"/>
                <javadoc line="483">
                    An implementation that will return true if the x, y location is
                      inside a rectangle defined by origin 0, 0, and width equal to
                      width passed in, and height equal to height passed in.                    
                </javadoc>
                <declaration name="si" type="DefaultRegionContainment" line="489"/>
                <javadoc line="489">
                    A global shared instance.                    
                </javadoc>
                <method name="sharedInstance" type="DefaultRegionContainment" line="492">
                    <scope line="493"/>
                </method>
                <method name="contains" type="boolean" line="499">
                    <params>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                </method>
            </class>
        </class>
    </source>