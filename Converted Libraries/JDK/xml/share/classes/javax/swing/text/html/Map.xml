<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.text.html">
        <import package="java.awt.Polygon"/>
        <import package="java.io.Serializable"/>
        <import package="java.util.StringTokenizer"/>
        <import package="java.util.Vector"/>
        <import package="javax.swing.text.AttributeSet"/>
        <class name="Map" line="7">
            <implements interface="Serializable"/>
            <javadoc line="7">
                Map is used to represent a map element that is part of an HTML document.
                  Once a Map has been created, and any number of areas have been added,
                  you can test if a point falls inside the map via the contains method.                
                <author>
                    Scott Violet                    
                </author>
            </javadoc>
            <declaration name="name" type="String" line="14"/>
            <javadoc line="14">
                Name of the Map.                
            </javadoc>
            <declaration name="areaAttributes" type="Vector&lt;AttributeSet&gt;" line="18"/>
            <javadoc line="18">
                An array of AttributeSets.                
            </javadoc>
            <declaration name="areas" type="Vector&lt;RegionContainment&gt;" line="22"/>
            <javadoc line="22">
                An array of RegionContainments, will slowly grow to match the
                  length of areaAttributes as needed.                
            </javadoc>
            <method name="Map" type="constructor" line="27"/>
            <method name="Map" type="constructor" line="29">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="32">
                Returns the name of the Map.                
            </javadoc>
            <method name="getName" type="String" line="35"/>
            <javadoc line="38">
                Defines a region of the Map, based on the passed in AttributeSet.                
            </javadoc>
            <method name="addArea" type="void" line="41">
                <params>
                    <param name="as" type="AttributeSet"/>
                </params>
                <scope line="42"/>
                <scope line="45"/>
            </method>
            <javadoc line="50">
                Removes the previously created area.                
            </javadoc>
            <method name="removeArea" type="void" line="53">
                <params>
                    <param name="as" type="AttributeSet"/>
                </params>
                <scope line="54">
                    <declaration name="numAreas" type="int" line="55"/>
                    <scope line="56">
                        <scope line="57">
                            <scope line="59"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="66">
                Returns the AttributeSets representing the differet areas of the Map.                
            </javadoc>
            <method name="getAreas" type="AttributeSet[]" line="69">
                <declaration name="numAttributes" type="int" line="70"/>
                <scope line="71">
                    <declaration name="retValue" type="AttributeSet[]" line="72"/>
                </scope>
            </method>
            <javadoc line="78">
                Returns the AttributeSet that contains the passed in location,
                  &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;. &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;
                  gives the size of the region the map is defined over. If a matching
                  area is found, the AttribueSet for it is returned.                
            </javadoc>
            <method name="getArea" type="AttributeSet" line="84">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="numAttributes" type="int" line="85"/>
                <scope line="86">
                    <declaration name="numAreas" type="int" line="87"/>
                    <scope line="88"/>
                    <scope line="91">
                        <scope line="92"/>
                        <declaration name="rc" type="RegionContainment" line="95"/>
                        <scope line="96"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="103">
                Creates and returns an instance of RegionContainment that can be
                  used to test if a particular point lies inside a region.                
            </javadoc>
            <method name="createRegionContainment" type="RegionContainment" line="107">
                <params>
                    <param name="attributes" type="AttributeSet"/>
                </params>
                <declaration name="shape" type="Object" line="108"/>
                <scope line="109"/>
                <scope line="112">
                    <declaration name="shapeString" type="String" line="113"/>
                    <declaration name="rc" type="RegionContainment" line="114"/>
                    <scope line="115">
                        <scope line="116"/>
                        <scope line="119"/>
                        <scope line="122"/>
                        <scope line="125"/>
                    </scope>
                    <scope line="129"/>
                </scope>
            </method>
            <javadoc line="136">
                Creates and returns an array of integers from the String
                  &lt;code&gt;stringCoords&lt;/code&gt;. If one of the values represents a
                  % the returned value with be negative. If a parse error results
                  from trying to parse one of the numbers null is returned.                
            </javadoc>
            <method name="extractCoords" type="int[]" line="142">
                <params>
                    <param name="stringCoords" type="Object"/>
                </params>
                <scope line="143"/>
                <declaration name="st" type="StringTokenizer" line="146"/>
                <declaration name="retValue" type="int[]" line="147"/>
                <declaration name="numCoords" type="int" line="148"/>
                <scope line="149">
                    <declaration name="token" type="String" line="150"/>
                    <declaration name="scale" type="int" line="151"/>
                    <scope line="152"/>
                    <scope line="156"/>
                    <scope line="159">
                        <declaration name="intValue" type="int" line="160"/>
                        <scope line="161"/>
                        <scope line="164">
                            <declaration name="temp" type="int[]" line="165"/>
                        </scope>
                    </scope>
                    <scope line="171"/>
                </scope>
                <scope line="175">
                    <declaration name="temp" type="int[]" line="176"/>
                </scope>
            </method>
            <interface name="RegionContainment">
                <javadoc line="182">
                    Defines the interface used for to check if a point is inside a
                      region.                    
                </javadoc>
                <method name="contains" type="boolean" line="187"/>
                <javadoc line="187">
                    Returns true if the location &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;
                      falls inside the region defined in the receiver.
                      &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt; is the size of
                      the enclosing region.                    
                </javadoc>
            </interface>
            <class name="RectangleRegionContainment" line="195">
                <implements interface="RegionContainment"/>
                <javadoc line="195">
                    Used to test for containment in a rectangular region.                    
                </javadoc>
                <declaration name="percents" type="float[]" line="199"/>
                <javadoc line="199">
                    Will be non-null if one of the values is a percent, and any value
                      that is non null indicates it is a percent
                      (order is x, y, width, height).                    
                </javadoc>
                <declaration name="lastWidth" type="int" line="205"/>
                <javadoc line="205">
                    Last value of width passed in.                    
                </javadoc>
                <declaration name="lastHeight" type="int" line="209"/>
                <javadoc line="209">
                    Last value of height passed in.                    
                </javadoc>
                <declaration name="x0" type="int" line="213"/>
                <javadoc line="213">
                    Top left.                    
                </javadoc>
                <declaration name="y0" type="int" line="217"/>
                <declaration name="x1" type="int" line="218"/>
                <javadoc line="218">
                    Bottom right.                    
                </javadoc>
                <declaration name="y1" type="int" line="222"/>
                <method name="RectangleRegionContainment" type="constructor" line="223">
                    <params>
                        <param name="as" type="AttributeSet"/>
                    </params>
                    <declaration name="coords" type="int[]" line="224"/>
                    <scope line="226"/>
                    <scope line="229">
                        <scope line="234">
                            <scope line="237">
                                <scope line="238"/>
                                <scope line="241"/>
                            </scope>
                        </scope>
                    </scope>
                </method>
                <method name="contains" type="boolean" line="248">
                    <params>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <scope line="249"/>
                    <scope line="252">
                        <scope line="255"/>
                        <scope line="258"/>
                        <scope line="261"/>
                        <scope line="264"/>
                    </scope>
                </method>
                <method name="contains" type="boolean" line="270">
                    <params>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                </method>
            </class>
            <class name="PolygonRegionContainment" line="274">
                <extends class="Polygon"/>
                <implements interface="RegionContainment"/>
                <javadoc line="274">
                    Used to test for containment in a polygon region.                    
                </javadoc>
                <declaration name="percentValues" type="float[]" line="278"/>
                <javadoc line="278">
                    If any value is a percent there will be an entry here for the
                      percent value. Use percentIndex to find out the index for it.                    
                </javadoc>
                <declaration name="percentIndexs" type="int[]" line="283"/>
                <declaration name="lastWidth" type="int" line="284"/>
                <javadoc line="284">
                    Last value of width passed in.                    
                </javadoc>
                <declaration name="lastHeight" type="int" line="288"/>
                <javadoc line="288">
                    Last value of height passed in.                    
                </javadoc>
                <method name="PolygonRegionContainment" type="constructor" line="292">
                    <params>
                        <param name="as" type="AttributeSet"/>
                    </params>
                    <declaration name="coords" type="int[]" line="293"/>
                    <scope line="294"/>
                    <scope line="297">
                        <declaration name="numPercents" type="int" line="298"/>
                        <scope line="300">
                            <scope line="301"/>
                        </scope>
                        <scope line="305">
                            <scope line="308">
                                <scope line="309"/>
                            </scope>
                        </scope>
                        <scope line="316"/>
                        <scope line="323"/>
                    </scope>
                </method>
                <method name="contains" type="boolean" line="329">
                    <params>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <scope line="330"/>
                    <declaration name="fWidth" type="float" line="336"/>
                    <declaration name="fHeight" type="float" line="337"/>
                    <scope line="338">
                        <scope line="339"/>
                        <scope line="342"/>
                    </scope>
                </method>
            </class>
            <class name="CircleRegionContainment" line="349">
                <implements interface="RegionContainment"/>
                <javadoc line="349">
                    Used to test for containment in a circular region.                    
                </javadoc>
                <declaration name="x" type="int" line="353"/>
                <javadoc line="353">
                    X origin of the circle.                    
                </javadoc>
                <declaration name="y" type="int" line="357"/>
                <javadoc line="357">
                    Y origin of the circle.                    
                </javadoc>
                <declaration name="radiusSquared" type="int" line="361"/>
                <javadoc line="361">
                    Radius of the circle.                    
                </javadoc>
                <declaration name="percentValues" type="float[]" line="365"/>
                <javadoc line="365">
                    Non-null indicates one of the values represents a percent.                    
                </javadoc>
                <declaration name="lastWidth" type="int" line="369"/>
                <javadoc line="369">
                    Last value of width passed in.                    
                </javadoc>
                <declaration name="lastHeight" type="int" line="373"/>
                <javadoc line="373">
                    Last value of height passed in.                    
                </javadoc>
                <method name="CircleRegionContainment" type="constructor" line="377">
                    <params>
                        <param name="as" type="AttributeSet"/>
                    </params>
                    <declaration name="coords" type="int[]" line="378"/>
                    <scope line="379"/>
                    <scope line="385">
                        <scope line="388">
                            <scope line="389"/>
                            <scope line="392"/>
                        </scope>
                    </scope>
                    <scope line="397"/>
                </method>
                <method name="contains" type="boolean" line="401">
                    <params>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <scope line="402">
                        <declaration name="newRad" type="int" line="403"/>
                        <scope line="406"/>
                        <scope line="409"/>
                        <scope line="412"/>
                    </scope>
                </method>
            </class>
            <class name="DefaultRegionContainment" line="420">
                <implements interface="RegionContainment"/>
                <javadoc line="420">
                    An implementation that will return true if the x, y location is
                      inside a rectangle defined by origin 0, 0, and width equal to
                      width passed in, and height equal to height passed in.                    
                </javadoc>
                <declaration name="si" type="DefaultRegionContainment" line="426"/>
                <javadoc line="426">
                    A global shared instance.                    
                </javadoc>
                <method name="sharedInstance" type="DefaultRegionContainment" line="430">
                    <scope line="431"/>
                </method>
                <method name="contains" type="boolean" line="436">
                    <params>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                </method>
            </class>
        </class>
    </source>