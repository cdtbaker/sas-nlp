<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.text.html">
        <import package="java.awt"/>
        <import package="java.util"/>
        <import package="java.net"/>
        <import package="java.io"/>
        <import package="javax.swing"/>
        <import package="javax.swing.text"/>
        <import package="javax.swing.event"/>
        <import package="sun.swing.text.html.FrameEditorPaneTag"/>
        <class name="FrameView" line="37">
            <extends class="ComponentView"/>
            <implements interface="HyperlinkListener"/>
            <javadoc line="37">
                Implements a FrameView, intended to support the HTML
                  &amp;lt;FRAME&amp;gt; tag.  Supports the frameborder, scrolling,
                  marginwidth and marginheight attributes.                
                <author>
                    Sunita Mani                    
                </author>
            </javadoc>
            <declaration name="htmlPane" type="JEditorPane" line="48"/>
            <declaration name="scroller" type="JScrollPane" line="49"/>
            <declaration name="editable" type="boolean" line="50"/>
            <declaration name="width" type="float" line="51"/>
            <declaration name="height" type="float" line="52"/>
            <declaration name="src" type="URL" line="53"/>
            <declaration name="createdComponent" type="boolean" line="54"/>
            <javadoc line="54">
                Set to true when the component has been created.                
            </javadoc>
            <javadoc line="57">
                Creates a new Frame.                
                <param>
                    elem the element to represent.                    
                </param>
            </javadoc>
            <method name="FrameView" type="constructor" line="62">
                <params>
                    <param name="elem" type="Element"/>
                </params>
            </method>
            <method name="createComponent" type="Component" line="66">
                <declaration name="elem" type="Element" line="68"/>
                <declaration name="attributes" type="AttributeSet" line="69"/>
                <declaration name="srcAtt" type="String" line="70"/>
                <scope line="72">
                    <scope line="73">
                        <declaration name="base" type="URL" line="74"/>
                        <declaration name="host" type="JEditorPane" line="78"/>
                        <declaration name="isAutoFormSubmission" type="boolean" line="79"/>
                        <scope line="80">
                            <declaration name="charset" type="String" line="82"/>
                            <scope line="83"/>
                            <declaration name="hostKit" type="HTMLEditorKit" line="86"/>
                            <scope line="87"/>
                        </scope>
                        <declaration name="kit" type="HTMLEditorKit" line="92"/>
                        <scope line="93"/>
                        <declaration name="doc" type="Document" line="97"/>
                        <scope line="98"/>
                    </scope>
                    <scope line="104"/>
                    <scope line="106"/>
                </scope>
            </method>
            <method name="getHostPane" type="JEditorPane" line="114">
                <declaration name="c" type="Container" line="115"/>
                <scope line="116"/>
            </method>
            <javadoc line="123">
                Sets the parent view for the FrameView.
                  Also determines if the FrameView should be editable
                  or not based on whether the JTextComponent that
                  contains it is editable.                
                <param>
                    parent View                    
                </param>
            </javadoc>
            <method name="setParent" type="void" line="131">
                <params>
                    <param name="parent" type="View"/>
                </params>
                <scope line="132">
                    <declaration name="t" type="JTextComponent" line="133"/>
                </scope>
            </method>
            <javadoc line="140">
                Also determines if the FrameView should be editable
                  or not based on whether the JTextComponent that
                  contains it is editable. And then proceeds to call
                  the superclass to do the paint().                
                <param>
                    parent View                    
                </param>
                <see>
                    text.ComponentView#paint                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="149">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="allocation" type="Shape"/>
                </params>
                <declaration name="host" type="Container" line="151"/>
                <scope line="153"/>
            </method>
            <javadoc line="161">
                If the marginwidth or marginheight attributes have been specified,
                  then the JEditorPane&apos;s margin&apos;s are set to the new values.                
            </javadoc>
            <method name="setMargin" type="void" line="165">
                <declaration name="margin" type="int" line="166"/>
                <declaration name="in" type="Insets" line="167"/>
                <declaration name="newInsets" type="Insets" line="168"/>
                <declaration name="modified" type="boolean" line="169"/>
                <declaration name="attributes" type="AttributeSet" line="170"/>
                <declaration name="marginStr" type="String" line="171"/>
                <scope line="172"/>
                <scope line="174"/>
                <scope line="177">
                    <scope line="179"/>
                </scope>
                <scope line="186">
                    <scope line="188"/>
                </scope>
                <scope line="194"/>
            </method>
            <javadoc line="199">
                If the frameborder attribute has been specified, either in the frame,
                  or by the frames enclosing frameset, the JScrollPane&apos;s setBorder()
                  method is invoked to achieve the desired look.                
            </javadoc>
            <method name="setBorder" type="void" line="204">
                <comment line="211">
                    make invisible borders.                    
                </comment>
                <declaration name="attributes" type="AttributeSet" line="206"/>
                <declaration name="frameBorder" type="String" line="207"/>
                <scope line="209"/>
            </method>
            <javadoc line="216">
                This method creates the JScrollPane.  The scrollbar policy is determined by
                  the scrolling attribute.  If not defined, the default is &quot;auto&quot; which
                  maps to the scrollbar&apos;s being displayed as needed.                
            </javadoc>
            <method name="createScrollPane" type="void" line="221">
                <comment line="234">
                    scrollbars will be displayed if needed                    
                </comment>
                <declaration name="attributes" type="AttributeSet" line="222"/>
                <declaration name="scrolling" type="String" line="223"/>
                <scope line="224"/>
                <scope line="228">
                    <scope line="229"/>
                    <scope line="232"/>
                </scope>
                <scope line="237"/>
                <declaration name="vp" type="JViewport" line="242"/>
            </method>
            <javadoc line="250">
                Finds the outermost FrameSetView.  It then
                  returns that FrameSetView&apos;s container.                
            </javadoc>
            <method name="getOutermostJEditorPane" type="JEditorPane" line="254">
                <declaration name="parent" type="View" line="256"/>
                <declaration name="frameSetView" type="FrameSetView" line="257"/>
                <scope line="258">
                    <scope line="259"/>
                </scope>
                <scope line="264"/>
            </method>
            <javadoc line="271">
                Returns true if this frame is contained within
                  a nested frameset.                
            </javadoc>
            <method name="inNestedFrameSet" type="boolean" line="275">
                <declaration name="parent" type="FrameSetView" line="276"/>
            </method>
            <javadoc line="281">
                Notification of a change relative to a
                  hyperlink. This method searches for the outermost
                  JEditorPane, and then fires an HTMLFrameHyperlinkEvent
                  to that frame.  In addition, if the target is _parent,
                  and there is not nested framesets then the target is
                  reset to _top.  If the target is _top, in addition to
                  firing the event to the outermost JEditorPane, this
                  method also invokes the setPage() method and explicitly
                  replaces the current document with the destination url.                
                <param>
                    HyperlinkEvent                    
                </param>
            </javadoc>
            <method name="hyperlinkUpdate" type="void" line="294">
                <params>
                    <param name="evt" type="HyperlinkEvent"/>
                </params>
                <comment line="325">
                    Need a way to handle exceptions                    
                </comment>
                <comment line="341">
                    Need a way to handle exceptions
                     ex.printStackTrace();                    
                </comment>
                <declaration name="c" type="JEditorPane" line="296"/>
                <scope line="297"/>
                <scope line="301"/>
                <declaration name="e" type="HTMLFrameHyperlinkEvent" line="306"/>
                <scope line="308">
                    <declaration name="target" type="String" line="309"/>
                    <declaration name="postTarget" type="String" line="310"/>
                    <scope line="312"/>
                    <scope line="316">
                        <declaration name="kit" type="HTMLEditorKit" line="317"/>
                        <scope line="318">
                            <scope line="319">
                                <scope line="320"/>
                                <scope line="323"/>
                            </scope>
                            <scope line="326">
                                <declaration name="doc" type="HTMLDocument" line="327"/>
                            </scope>
                        </scope>
                        <scope line="330"/>
                    </scope>
                    <scope line="336">
                        <scope line="337"/>
                        <scope line="339"/>
                    </scope>
                    <scope line="344"/>
                </scope>
            </method>
            <javadoc line="356">
                Gives notification from the document that attributes were changed
                  in a location that this view is responsible for.  Currently this view
                  handles changes to its SRC attribute.                
                <param>
                    e the change information from the associated document                    
                </param>
                <param>
                    a the current allocation of the view                    
                </param>
                <param>
                    f the factory to use to rebuild if the view has children                    
                </param>
            </javadoc>
            <method name="changedUpdate" type="void" line="366">
                <params>
                    <param name="e" type="DocumentEvent"/>
                    <param name="a" type="Shape"/>
                    <param name="f" type="ViewFactory"/>
                </params>
                <comment line="393">
                    Need a way to handle exceptions
                    e1.printStackTrace();                    
                </comment>
                <comment line="396">
                    Need a way to handle exceptions
                    e2.printStackTrace();                    
                </comment>
                <declaration name="elem" type="Element" line="368"/>
                <declaration name="attributes" type="AttributeSet" line="369"/>
                <declaration name="oldPage" type="URL" line="371"/>
                <declaration name="srcAtt" type="String" line="373"/>
                <declaration name="base" type="URL" line="374"/>
                <scope line="375">
                    <scope line="376"/>
                    <declaration name="postData" type="Object" line="380"/>
                    <scope line="382"/>
                    <declaration name="newDoc" type="Document" line="387"/>
                    <scope line="388"/>
                </scope>
                <scope line="391"/>
                <scope line="394"/>
            </method>
            <javadoc line="400">
                Move POST data from temporary storage into the target document property.                
                <return>
                    the POST data or null if no data found                    
                </return>
            </javadoc>
            <method name="movePostData" type="Object" line="405">
                <params>
                    <param name="targetPane" type="JEditorPane"/>
                    <param name="frameName" type="String"/>
                </params>
                <declaration name="postData" type="Object" line="406"/>
                <declaration name="p" type="JEditorPane" line="407"/>
                <scope line="408">
                    <scope line="409"/>
                    <scope line="413">
                        <declaration name="propName" type="String" line="414"/>
                        <declaration name="d" type="Document" line="415"/>
                        <scope line="417"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="428">
                Determines the minimum span for this view along an
                  axis.                
                <param>
                    axis may be either <code>View.X_AXIS</code> or
                      <code>View.Y_AXIS</code>                    
                </param>
                <return>
                    the preferred span; given that we do not
                      support resizing of frames, the minimum span returned
                      is the same as the preferred span                    
                </return>
            </javadoc>
            <method name="getMinimumSpan" type="float" line="439">
                <params>
                    <param name="axis" type="int"/>
                </params>
            </method>
            <javadoc line="443">
                Determines the maximum span for this view along an
                  axis.                
                <param>
                    axis may be either <code>View.X_AXIS</code> or
                      <code>View.Y_AXIS</code>                    
                </param>
                <return>
                    the preferred span; given that we do not
                      support resizing of frames, the maximum span returned
                      is the same as the preferred span                    
                </return>
            </javadoc>
            <method name="getMaximumSpan" type="float" line="454">
                <params>
                    <param name="axis" type="int"/>
                </params>
            </method>
            <class name="FrameEditorPane" line="458">
                <extends class="JEditorPane"/>
                <implements interface="FrameEditorPaneTag"/>
                <javadoc line="458">
                    Editor pane rendering frame of HTML document
                      It uses the same editor kits classes as outermost JEditorPane                    
                </javadoc>
                <method name="getEditorKitForContentType" type="EditorKit" line="462">
                    <params>
                        <param name="type" type="String"/>
                    </params>
                    <declaration name="editorKit" type="EditorKit" line="463"/>
                    <declaration name="outerMostJEditorPane" type="JEditorPane" line="464"/>
                    <scope line="465">
                        <declaration name="inheritedEditorKit" type="EditorKit" line="466"/>
                        <scope line="467"/>
                    </scope>
                </method>
                <method name="getFrameView" type="FrameView" line="475"/>
            </class>
        </class>
    </source>