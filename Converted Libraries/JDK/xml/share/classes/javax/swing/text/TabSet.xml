<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.text">
        <import package="java.io.Serializable"/>
        <class name="TabSet" line="3">
            <implements interface="Serializable"/>
            <javadoc line="3">
                A TabSet is comprised of many TabStops. It offers methods for locating the
                  closest TabStop to a given position and finding all the potential TabStops.
                  It is also immutable.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases. The current serialization support is
                  appropriate for short term storage or RMI between applications running
                  the same version of Swing.  As of 1.4, support for long term storage
                  of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                  has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                  Please see {@link java.beans.XMLEncoder}.                
                <author>
                    Scott Violet                    
                </author>
            </javadoc>
            <declaration name="tabs" type="TabStop[]" line="19"/>
            <javadoc line="19">
                TabStops this TabSet contains.                
            </javadoc>
            <declaration name="hashCode" type="int" line="23"/>
            <javadoc line="23">
                Since this class is immutable the hash code could be
                  calculated once. MAX_VALUE means that it was not initialized
                  yet. Hash code shouldn&apos;t has MAX_VALUE value.                
            </javadoc>
            <javadoc line="29">
                Creates and returns an instance of TabSet. The array of Tabs
                  passed in must be sorted in ascending order.                
            </javadoc>
            <method name="TabSet" type="constructor" line="33">
                <params>
                    <param name="tabs" type="TabStop[]"/>
                </params>
                <scope line="34">
                    <declaration name="tabCount" type="int" line="35"/>
                </scope>
            </method>
            <javadoc line="41">
                Returns the number of Tab instances the receiver contains.                
            </javadoc>
            <method name="getTabCount" type="int" line="44"/>
            <javadoc line="47">
                Returns the TabStop at index &lt;code&gt;index&lt;/code&gt;. This will throw an
                  IllegalArgumentException if &lt;code&gt;index&lt;/code&gt; is outside the range
                  of tabs.                
            </javadoc>
            <method name="getTab" type="TabStop" line="52">
                <params>
                    <param name="index" type="int"/>
                </params>
                <declaration name="numTabs" type="int" line="53"/>
            </method>
            <javadoc line="57">
                Returns the Tab instance after &lt;code&gt;location&lt;/code&gt;. This will
                  return null if there are no tabs after &lt;code&gt;location&lt;/code&gt;.                
            </javadoc>
            <method name="getTabAfter" type="TabStop" line="61">
                <params>
                    <param name="location" type="float"/>
                </params>
                <declaration name="index" type="int" line="62"/>
            </method>
            <javadoc line="65">
                @return the index of the TabStop &lt;code&gt;tab&lt;/code&gt;, or -1 if
                  &lt;code&gt;tab&lt;/code&gt; is not contained in the receiver.                
            </javadoc>
            <method name="getTabIndex" type="int" line="69">
                <params>
                    <param name="tab" type="TabStop"/>
                </params>
            </method>
            <javadoc line="73">
                Returns the index of the Tab to be used after &lt;code&gt;location&lt;/code&gt;.
                  This will return -1 if there are no tabs after &lt;code&gt;location&lt;/code&gt;.                
            </javadoc>
            <method name="getTabIndexAfter" type="int" line="77">
                <params>
                    <param name="location" type="float"/>
                </params>
                <declaration name="current" type="int" line="78"/>
                <scope line="81">
                    <scope line="83"/>
                    <scope line="87"/>
                </scope>
            </method>
            <javadoc line="94">
                Indicates whether this &lt;code&gt;TabSet&lt;/code&gt; is equal to another one.                
                <param>
                    o the &lt;code&gt;TabSet&lt;/code&gt; instance which this instance
                      should be compared to.                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;o&lt;/code&gt; is the instance of
                      &lt;code&gt;TabSet&lt;/code&gt;, has the same number of &lt;code&gt;TabStop&lt;/code&gt;s
                      and they are all equal, &lt;code&gt;false&lt;/code&gt; otherwise.                    
                </return>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="equals" type="boolean" line="103">
                <params>
                    <param name="o" type="Object"/>
                </params>
                <scope line="104"/>
                <scope line="107">
                    <declaration name="ts" type="TabSet" line="108"/>
                    <declaration name="count" type="int" line="109"/>
                    <scope line="110"/>
                    <scope line="113">
                        <declaration name="ts1" type="TabStop" line="114"/>
                        <declaration name="ts2" type="TabStop" line="115"/>
                        <scope line="116"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="124">
                Returns a hashcode for this set of TabStops.                
                <return>
                    a hashcode value for this set of TabStops.                    
                </return>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="hashCode" type="int" line="129">
                <scope line="130">
                    <declaration name="len" type="int" line="132"/>
                    <scope line="133">
                        <declaration name="ts" type="TabStop" line="134"/>
                    </scope>
                    <scope line="137"/>
                </scope>
            </method>
            <javadoc line="143">
                Returns the string representation of the set of tabs.                
            </javadoc>
            <method name="toString" type="String" line="146">
                <declaration name="tabCount" type="int" line="147"/>
                <declaration name="buffer" type="StringBuilder" line="148"/>
                <scope line="149"/>
            </method>
        </class>
    </source>