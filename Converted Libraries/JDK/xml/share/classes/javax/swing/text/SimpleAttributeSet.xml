<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.text">
        <import package="java.util.Hashtable"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.Collections"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.Serializable"/>
        <class name="SimpleAttributeSet" line="35">
            <comment line="271">
                --- Object methods ---------------------------------                
            </comment>
            <implements interface="MutableAttributeSet"/>
            <implements interface="Serializable"/>
            <implements interface="Cloneable"/>
            <javadoc line="35">
                A straightforward implementation of MutableAttributeSet using a
                  hash table.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases. The current serialization support is
                  appropriate for short term storage or RMI between applications running
                  the same version of Swing.  As of 1.4, support for long term storage
                  of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                  has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                  Please see {@link java.beans.XMLEncoder}.                
                <author>
                    Tim Prinzing                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="52"/>
            <declaration name="EMPTY" type="AttributeSet" line="54"/>
            <javadoc line="54">
                An empty attribute set.                
            </javadoc>
            <declaration name="table" type="Hashtable&lt;Object,Object&gt;" line="59"/>
            <javadoc line="61">
                Creates a new attribute set.                
            </javadoc>
            <method name="SimpleAttributeSet" type="constructor" line="64"/>
            <javadoc line="67">
                Creates a new attribute set based on a supplied set of attributes.                
                <param>
                    source the set of attributes                    
                </param>
            </javadoc>
            <method name="SimpleAttributeSet" type="constructor" line="72">
                <params>
                    <param name="source" type="AttributeSet"/>
                </params>
            </method>
            <method name="SimpleAttributeSet" type="constructor" line="76">
                <params>
                    <param name="table" type="Hashtable<Object,Object>"/>
                </params>
            </method>
            <javadoc line="80">
                Checks whether the set of attributes is empty.                
                <return>
                    true if the set is empty else false                    
                </return>
            </javadoc>
            <method name="isEmpty" type="boolean" line="86"/>
            <javadoc line="90">
                Gets a count of the number of attributes.                
                <return>
                    the count                    
                </return>
            </javadoc>
            <method name="getAttributeCount" type="int" line="95"/>
            <javadoc line="99">
                Tells whether a given attribute is defined.                
                <param>
                    attrName the attribute name                    
                </param>
                <return>
                    true if the attribute is defined                    
                </return>
            </javadoc>
            <method name="isDefined" type="boolean" line="105">
                <params>
                    <param name="attrName" type="Object"/>
                </params>
            </method>
            <javadoc line="109">
                Compares two attribute sets.                
                <param>
                    attr the second attribute set                    
                </param>
                <return>
                    true if the sets are equal, false otherwise                    
                </return>
            </javadoc>
            <method name="isEqual" type="boolean" line="115">
                <params>
                    <param name="attr" type="AttributeSet"/>
                </params>
            </method>
            <javadoc line="120">
                Makes a copy of the attributes.                
                <return>
                    the copy                    
                </return>
            </javadoc>
            <method name="copyAttributes" type="AttributeSet" line="125"/>
            <javadoc line="129">
                Gets the names of the attributes in the set.                
                <return>
                    the names as an <code>Enumeration</code>                    
                </return>
            </javadoc>
            <method name="getAttributeNames" type="Enumeration<?>" line="134"/>
            <javadoc line="138">
                Gets the value of an attribute.                
                <param>
                    name the attribute name                    
                </param>
                <return>
                    the value                    
                </return>
            </javadoc>
            <method name="getAttribute" type="Object" line="144">
                <params>
                    <param name="name" type="Object"/>
                </params>
                <declaration name="value" type="Object" line="145"/>
                <scope line="146">
                    <declaration name="parent" type="AttributeSet" line="147"/>
                    <scope line="148"/>
                </scope>
            </method>
            <javadoc line="155">
                Checks whether the attribute list contains a
                  specified attribute name/value pair.                
                <param>
                    name the name                    
                </param>
                <param>
                    value the value                    
                </param>
                <return>
                    true if the name/value pair is in the list                    
                </return>
            </javadoc>
            <method name="containsAttribute" type="boolean" line="163">
                <params>
                    <param name="name" type="Object"/>
                    <param name="value" type="Object"/>
                </params>
            </method>
            <javadoc line="167">
                Checks whether the attribute list contains all the
                  specified name/value pairs.                
                <param>
                    attributes the attribute list                    
                </param>
                <return>
                    true if the list contains all the name/value pairs                    
                </return>
            </javadoc>
            <method name="containsAttributes" type="boolean" line="174">
                <params>
                    <param name="attributes" type="AttributeSet"/>
                </params>
                <declaration name="result" type="boolean" line="175"/>
                <declaration name="names" type="Enumeration" line="177"/>
                <scope line="178">
                    <declaration name="name" type="Object" line="179"/>
                </scope>
            </method>
            <javadoc line="186">
                Adds an attribute to the list.                
                <param>
                    name the attribute name                    
                </param>
                <param>
                    value the attribute value                    
                </param>
            </javadoc>
            <method name="addAttribute" type="void" line="192">
                <params>
                    <param name="name" type="Object"/>
                    <param name="value" type="Object"/>
                </params>
            </method>
            <javadoc line="196">
                Adds a set of attributes to the list.                
                <param>
                    attributes the set of attributes to add                    
                </param>
            </javadoc>
            <method name="addAttributes" type="void" line="201">
                <params>
                    <param name="attributes" type="AttributeSet"/>
                </params>
                <declaration name="names" type="Enumeration" line="202"/>
                <scope line="203">
                    <declaration name="name" type="Object" line="204"/>
                </scope>
            </method>
            <javadoc line="209">
                Removes an attribute from the list.                
                <param>
                    name the attribute name                    
                </param>
            </javadoc>
            <method name="removeAttribute" type="void" line="214">
                <params>
                    <param name="name" type="Object"/>
                </params>
            </method>
            <javadoc line="218">
                Removes a set of attributes from the list.                
                <param>
                    names the set of names to remove                    
                </param>
            </javadoc>
            <method name="removeAttributes" type="void" line="223">
                <params>
                    <param name="names" type="Enumeration<?>"/>
                </params>
            </method>
            <javadoc line="228">
                Removes a set of attributes from the list.                
                <param>
                    attributes the set of attributes to remove                    
                </param>
            </javadoc>
            <method name="removeAttributes" type="void" line="233">
                <params>
                    <param name="attributes" type="AttributeSet"/>
                </params>
                <scope line="234"/>
                <scope line="237">
                    <declaration name="names" type="Enumeration" line="238"/>
                    <scope line="239">
                        <declaration name="name" type="Object" line="240"/>
                        <declaration name="value" type="Object" line="241"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="248">
                Gets the resolving parent.  This is the set
                  of attributes to resolve through if an attribute
                  isn&apos;t defined locally.  This is null if there
                  are no other sets of attributes to resolve
                  through.                
                <return>
                    the parent                    
                </return>
            </javadoc>
            <method name="getResolveParent" type="AttributeSet" line="257"/>
            <javadoc line="261">
                Sets the resolving parent.                
                <param>
                    parent the parent                    
                </param>
            </javadoc>
            <method name="setResolveParent" type="void" line="266">
                <params>
                    <param name="parent" type="AttributeSet"/>
                </params>
            </method>
            <javadoc line="272">
                Clones a set of attributes.                
                <return>
                    the new set of attributes                    
                </return>
            </javadoc>
            <method name="clone" type="Object" line="277">
                <declaration name="attr" type="SimpleAttributeSet" line="278"/>
                <scope line="279"/>
                <scope line="282"/>
            </method>
            <javadoc line="288">
                Returns a hashcode for this set of attributes.                
                <return>
                    a hashcode value for this set of attributes.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="292"/>
            <javadoc line="296">
                Compares this object to the specified object.
                  The result is &lt;code&gt;true&lt;/code&gt; if the object is an equivalent
                  set of attributes.                
                <param>
                    obj   the object to compare this attribute set with                    
                </param>
                <return>
                    <code>true</code> if the objects are equal;
                      <code>false</code> otherwise                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="304">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="305"/>
                <scope line="308">
                    <declaration name="attrs" type="AttributeSet" line="309"/>
                </scope>
            </method>
            <javadoc line="315">
                Converts the attribute set to a String.                
                <return>
                    the string                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="320">
                <comment line="328">
                    don&apos;t go recursive                    
                </comment>
                <declaration name="s" type="String" line="321"/>
                <declaration name="names" type="Enumeration" line="322"/>
                <scope line="323">
                    <declaration name="key" type="Object" line="324"/>
                    <declaration name="value" type="Object" line="325"/>
                    <scope line="326"/>
                    <scope line="329"/>
                </scope>
            </method>
            <method name="writeObject" type="void" line="336">
                <params>
                    <param name="s" type="java.io.ObjectOutputStream"/>
                </params>
            </method>
            <method name="readObject" type="void" line="342">
                <params>
                    <param name="s" type="ObjectInputStream"/>
                </params>
            </method>
            <class name="EmptyAttributeSet" line="348">
                <implements interface="AttributeSet"/>
                <implements interface="Serializable"/>
                <javadoc line="348">
                    An AttributeSet that is always empty.                    
                </javadoc>
                <declaration name="serialVersionUID" type="long" line="352"/>
                <method name="getAttributeCount" type="int" line="354"/>
                <method name="isDefined" type="boolean" line="357">
                    <params>
                        <param name="attrName" type="Object"/>
                    </params>
                </method>
                <method name="isEqual" type="boolean" line="360">
                    <params>
                        <param name="attr" type="AttributeSet"/>
                    </params>
                </method>
                <method name="copyAttributes" type="AttributeSet" line="363"/>
                <method name="getAttribute" type="Object" line="366">
                    <params>
                        <param name="key" type="Object"/>
                    </params>
                </method>
                <method name="getAttributeNames" type="Enumeration" line="369"/>
                <method name="containsAttribute" type="boolean" line="372">
                    <params>
                        <param name="name" type="Object"/>
                        <param name="value" type="Object"/>
                    </params>
                </method>
                <method name="containsAttributes" type="boolean" line="375">
                    <params>
                        <param name="attributes" type="AttributeSet"/>
                    </params>
                </method>
                <method name="getResolveParent" type="AttributeSet" line="378"/>
                <method name="equals" type="boolean" line="381">
                    <params>
                        <param name="obj" type="Object"/>
                    </params>
                    <scope line="382"/>
                </method>
                <method name="hashCode" type="int" line="388"/>
            </class>
        </class>
    </source>