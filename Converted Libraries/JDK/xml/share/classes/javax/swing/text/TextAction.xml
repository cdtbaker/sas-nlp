<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.text">
        <import package="java.awt.event.ActionEvent"/>
        <import package="java.awt.KeyboardFocusManager"/>
        <import package="java.awt.Component"/>
        <import package="java.util.Hashtable"/>
        <import package="java.util.Enumeration"/>
        <import package="javax.swing.Action"/>
        <import package="javax.swing.AbstractAction"/>
        <import package="javax.swing.KeyStroke"/>
        <class name="TextAction" line="36">
            <extends class="AbstractAction"/>
            <javadoc line="36">
                An Action implementation useful for key bindings that are
                  shared across a number of different text components.  Because
                  the action is shared, it must have a way of getting it&apos;s
                  target to act upon.  This class provides support to try and
                  find a text component to operate on.  The preferred way of
                  getting the component to act upon is through the ActionEvent
                  that is received.  If the Object returned by getSource can
                  be narrowed to a text component, it will be used.  If the
                  action event is null or can&apos;t be narrowed, the last focused
                  text component is tried.  This is determined by being
                  used in conjunction with a JTextController which
                  arranges to share that information with a TextAction.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases. The current serialization support is
                  appropriate for short term storage or RMI between applications running
                  the same version of Swing.  As of 1.4, support for long term storage
                  of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                  has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                  Please see {@link java.beans.XMLEncoder}.                
                <author>
                    Timothy Prinzing                    
                </author>
            </javadoc>
            <javadoc line="63">
                Creates a new JTextAction object.                
                <param>
                    name the name of the action                    
                </param>
            </javadoc>
            <method name="TextAction" type="constructor" line="68">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="72">
                Determines the component to use for the action.
                  This if fetched from the source of the ActionEvent
                  if it&apos;s not null and can be narrowed.  Otherwise,
                  the last focused component is used.                
                <param>
                    e the ActionEvent                    
                </param>
                <return>
                    the component                    
                </return>
            </javadoc>
            <method name="getTextComponent" type="JTextComponent" line="81">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <scope line="82">
                    <declaration name="o" type="Object" line="83"/>
                    <scope line="84"/>
                </scope>
            </method>
            <javadoc line="91">
                Takes one list of
                  commands and augments it with another list
                  of commands.  The second list takes precedence
                  over the first list; that is, when both lists
                  contain a command with the same name, the command
                  from the second list is used.                
                <param>
                    list1 the first list, may be empty but not
                      <code>null</code>                    
                </param>
                <param>
                    list2 the second list, may be empty but not
                      <code>null</code>                    
                </param>
                <return>
                    the augmented list                    
                </return>
            </javadoc>
            <method name="augmentList" type="Action[]" line="105">
                <params>
                    <param name="list1" type="Action[]"/>
                    <param name="list2" type="Action[]"/>
                </params>
                <declaration name="h" type="Hashtable&lt;String,Action&gt;" line="106"/>
                <scope line="107">
                    <declaration name="value" type="String" line="108"/>
                </scope>
                <scope line="111">
                    <declaration name="value" type="String" line="112"/>
                </scope>
                <declaration name="actions" type="Action[]" line="115"/>
                <declaration name="index" type="int" line="116"/>
                <scope line="117"/>
            </method>
            <javadoc line="123">
                Fetches the text component that currently has focus.
                  This allows actions to be shared across text components
                  which is useful for key-bindings where a large set of
                  actions are defined, but generally used the same way
                  across many different components.                
                <return>
                    the component                    
                </return>
            </javadoc>
            <method name="getFocusedComponent" type="JTextComponent" line="132"/>
        </class>
    </source>