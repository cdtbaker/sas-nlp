<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.text">
        <import package="java.io.Serializable"/>
        <class name="TabStop" line="29">
            <comment line="64">
                Bar tabs (whatever they are) are actually a separate kind of tab
                in the RTF spec. However, being a bar tab and having alignment
                properties are mutually exclusive, so the reader treats barness                
            </comment>
            <comment line="152">
                                
            </comment>
            <implements interface="Serializable"/>
            <javadoc line="29">
                This class encapsulates a single tab stop (basically as tab stops
                  are thought of by RTF). A tab stop is at a specified distance from the
                  left margin, aligns text in a specified way, and has a specified leader.
                  TabStops are immutable, and usually contained in TabSets.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases. The current serialization support is
                  appropriate for short term storage or RMI between applications running
                  the same version of Swing.  As of 1.4, support for long term storage
                  of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                  has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                  Please see {@link java.beans.XMLEncoder}.                
            </javadoc>
            <declaration name="ALIGN_LEFT" type="int" line="47"/>
            <javadoc line="47">
                Character following tab is positioned at location.                
            </javadoc>
            <declaration name="ALIGN_RIGHT" type="int" line="49"/>
            <javadoc line="49">
                Characters following tab are positioned such that all following
                  characters up to next tab/newline end at location.                
            </javadoc>
            <declaration name="ALIGN_CENTER" type="int" line="52"/>
            <javadoc line="52">
                Characters following tab are positioned such that all following
                  characters up to next tab/newline are centered around the tabs
                  location.                
            </javadoc>
            <declaration name="ALIGN_DECIMAL" type="int" line="56"/>
            <javadoc line="56">
                Characters following tab are aligned such that next
                  decimal/tab/newline is at the tab location, very similar to
                  RIGHT_TAB, just includes decimal as additional character to look for.                
            </javadoc>
            <declaration name="ALIGN_BAR" type="int" line="61"/>
            <declaration name="LEAD_NONE" type="int" line="68"/>
            <declaration name="LEAD_DOTS" type="int" line="69"/>
            <declaration name="LEAD_HYPHENS" type="int" line="70"/>
            <declaration name="LEAD_UNDERLINE" type="int" line="71"/>
            <declaration name="LEAD_THICKLINE" type="int" line="72"/>
            <declaration name="LEAD_EQUALS" type="int" line="73"/>
            <declaration name="alignment" type="int" line="75"/>
            <javadoc line="75">
                Tab type.                
            </javadoc>
            <declaration name="position" type="float" line="77"/>
            <javadoc line="77">
                Location, from the left margin, that tab is at.                
            </javadoc>
            <declaration name="leader" type="int" line="79"/>
            <javadoc line="81">
                Creates a tab at position &lt;code&gt;pos&lt;/code&gt; with a default alignment
                  and default leader.                
            </javadoc>
            <method name="TabStop" type="constructor" line="85">
                <params>
                    <param name="pos" type="float"/>
                </params>
            </method>
            <javadoc line="89">
                Creates a tab with the specified position &lt;code&gt;pos&lt;/code&gt;,
                  alignment &lt;code&gt;align&lt;/code&gt; and leader &lt;code&gt;leader&lt;/code&gt;.                
            </javadoc>
            <method name="TabStop" type="constructor" line="93">
                <params>
                    <param name="pos" type="float"/>
                    <param name="align" type="int"/>
                    <param name="leader" type="int"/>
                </params>
            </method>
            <javadoc line="99">
                Returns the position, as a float, of the tab.                
                <return>
                    the position of the tab                    
                </return>
            </javadoc>
            <method name="getPosition" type="float" line="103"/>
            <javadoc line="107">
                Returns the alignment, as an integer, of the tab.                
                <return>
                    the alignment of the tab                    
                </return>
            </javadoc>
            <method name="getAlignment" type="int" line="111"/>
            <javadoc line="115">
                Returns the leader of the tab.                
                <return>
                    the leader of the tab                    
                </return>
            </javadoc>
            <method name="getLeader" type="int" line="119"/>
            <javadoc line="123">
                Returns true if the tabs are equal.                
                <return>
                    true if the tabs are equal, otherwise false                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="128">
                <params>
                    <param name="other" type="Object"/>
                </params>
                <comment line="137">
                                        
                </comment>
                <scope line="129"/>
                <scope line="132">
                    <declaration name="o" type="TabStop" line="133"/>
                </scope>
            </method>
            <javadoc line="141">
                Returns the hashCode for the object.  This must be defined
                  here to ensure 100% pure.                
                <return>
                    the hashCode for the object                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="147"/>
            <method name="toString" type="String" line="152">
                <declaration name="buf" type="String" line="153"/>
            </method>
        </class>
    </source>