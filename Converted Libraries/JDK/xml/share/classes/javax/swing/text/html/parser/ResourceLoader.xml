<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.text.html.parser">
        <import package="java.io.InputStream"/>
        <class name="ResourceLoader" line="3">
            <implements interface="java.security.PrivilegedAction"/>
            <javadoc line="3">
                Simple class to load resources using the 1.2
                  security model.  Since the html support is loaded
                  lazily, it&apos;s resources are potentially fetched with
                  applet code in the call stack.  By providing this
                  functionality in a class that is only built on 1.2,
                  reflection can be used from the code that is also
                  built on 1.1 to call this functionality (and avoid
                  the evils of preprocessing).  This functionality
                  is called from ParserDelegator.getResourceAsStream.                
                <author>
                    Timothy Prinzing                    
                </author>
            </javadoc>
            <method name="ResourceLoader" type="constructor" line="16">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="run" type="Object" line="19">
                <declaration name="o" type="Object" line="20"/>
            </method>
            <method name="getResourceAsStream" type="InputStream" line="23">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="a" type="java.security.PrivilegedAction" line="24"/>
            </method>
            <declaration name="name" type="String" line="27"/>
        </class>
    </source>