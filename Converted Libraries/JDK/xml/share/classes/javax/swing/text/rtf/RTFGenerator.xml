<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.text.rtf">
        <import package="java.lang"/>
        <import package="java.util"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Font"/>
        <import package="java.io.OutputStream"/>
        <import package="java.io.IOException"/>
        <import package="javax.swing.text"/>
        <class name="RTFGenerator" line="9">
            <extends class="Object"/>
            <javadoc line="9">
                Generates an RTF output stream (java.io.OutputStream) from rich text
                  (handed off through a series of LTTextAcceptor calls).  Can be used to
                  generate RTF from any object which knows how to write to a text acceptor
                  (e.g., LTAttributedText and LTRTFFilter).
                  &lt;p&gt;Note that this is a lossy conversion since RTF&apos;s model of
                  text does not exactly correspond with LightText&apos;s.                
                <see>
                    LTAttributedText                    
                </see>
                <see>
                    LTRTFFilter                    
                </see>
                <see>
                    LTTextAcceptor                    
                </see>
                <see>
                    java.io.OutputStream                    
                </see>
            </javadoc>
            <declaration name="colorTable" type="Dictionary&lt;Object,Integer&gt;" line="22"/>
            <declaration name="colorCount" type="int" line="23"/>
            <declaration name="fontTable" type="Dictionary&lt;String,Integer&gt;" line="24"/>
            <declaration name="fontCount" type="int" line="25"/>
            <declaration name="styleTable" type="Dictionary&lt;AttributeSet,Integer&gt;" line="26"/>
            <declaration name="styleCount" type="int" line="27"/>
            <declaration name="outputStream" type="OutputStream" line="28"/>
            <declaration name="afterKeyword" type="boolean" line="29"/>
            <declaration name="outputAttributes" type="MutableAttributeSet" line="30"/>
            <declaration name="unicodeCount" type="int" line="31"/>
            <declaration name="workingSegment" type="Segment" line="32"/>
            <declaration name="outputConversion" type="int[]" line="33"/>
            <declaration name="defaultRTFColor" type="Color" line="34"/>
            <javadoc line="34">
                The default color, used for text without an explicit color
                  attribute.                
            </javadoc>
            <declaration name="defaultFontSize" type="float" line="39"/>
            <declaration name="defaultFontFamily" type="String" line="40"/>
            <declaration name="MagicToken" type="Object" line="41"/>
            <class name="CharacterKeywordPair" line="42">
                <declaration name="character" type="char" line="43"/>
                <declaration name="keyword" type="String" line="44"/>
            </class>
            <declaration name="textKeywords" type="CharacterKeywordPair[]" line="46"/>
            <scope line="47">
                <declaration name="textKeywordDictionary" type="Dictionary" line="49"/>
                <declaration name="keys" type="Enumeration" line="50"/>
                <declaration name="tempPairs" type="Vector&lt;CharacterKeywordPair&gt;" line="51"/>
                <scope line="52">
                    <declaration name="pair" type="CharacterKeywordPair" line="53"/>
                </scope>
            </scope>
            <declaration name="hexdigits" type="char[]" line="61"/>
            <method name="writeDocument" type="void" line="62">
                <params>
                    <param name="d" type="Document"/>
                    <param name="to" type="OutputStream"/>
                </params>
                <declaration name="gen" type="RTFGenerator" line="63"/>
                <declaration name="root" type="Element" line="64"/>
                <declaration name="max" type="int" line="68"/>
            </method>
            <method name="RTFGenerator" type="constructor" line="72">
                <params>
                    <param name="to" type="OutputStream"/>
                </params>
            </method>
            <method name="examineElement" type="void" line="84">
                <params>
                    <param name="el" type="Element"/>
                </params>
                <declaration name="a" type="AttributeSet" line="85"/>
                <declaration name="fontName" type="String" line="86"/>
                <declaration name="foregroundColor" type="Object" line="87"/>
                <scope line="89">
                    <scope line="91"/>
                    <scope line="96"/>
                    <scope line="102"/>
                </scope>
                <declaration name="el_count" type="int" line="107"/>
                <scope line="108"/>
            </method>
            <method name="tallyStyles" type="void" line="112">
                <params>
                    <param name="a" type="AttributeSet"/>
                </params>
                <scope line="113">
                    <scope line="114">
                        <declaration name="aNum" type="Integer" line="115"/>
                        <scope line="116"/>
                    </scope>
                </scope>
            </method>
            <method name="findStyle" type="Style" line="125">
                <params>
                    <param name="a" type="AttributeSet"/>
                </params>
                <scope line="126">
                    <scope line="127">
                        <declaration name="aNum" type="Object" line="128"/>
                    </scope>
                </scope>
            </method>
            <method name="findStyleNumber" type="Integer" line="135">
                <params>
                    <param name="a" type="AttributeSet"/>
                    <param name="domain" type="String"/>
                </params>
                <scope line="136">
                    <scope line="137">
                        <declaration name="aNum" type="Integer" line="138"/>
                        <scope line="139"/>
                    </scope>
                </scope>
            </method>
            <method name="attrDiff" type="Object" line="147">
                <params>
                    <param name="oldAttrs" type="MutableAttributeSet"/>
                    <param name="newAttrs" type="AttributeSet"/>
                    <param name="key" type="Object"/>
                    <param name="dfl" type="Object"/>
                </params>
                <declaration name="oldValue" type="Object" line="148"/>
                <scope line="152"/>
                <scope line="157"/>
            </method>
            <method name="equalArraysOK" type="boolean" line="163">
                <params>
                    <param name="a" type="Object"/>
                    <param name="b" type="Object"/>
                </params>
                <declaration name="aa" type="Object[]" line="164"/>
                <declaration name="i" type="int" line="172"/>
                <declaration name="l" type="int" line="173"/>
                <scope line="174"/>
            </method>
            <method name="writeLineBreak" type="void" line="179"/>
            <method name="writeRTFHeader" type="void" line="183">
                <declaration name="index" type="int" line="184"/>
                <declaration name="sortedFontTable" type="String[]" line="190"/>
                <declaration name="fonts" type="Enumeration&lt;String&gt;" line="191"/>
                <declaration name="font" type="String" line="192"/>
                <scope line="193">
                    <declaration name="num" type="Integer" line="195"/>
                </scope>
                <scope line="200"/>
                <scope line="208">
                    <declaration name="sortedColorTable" type="Color[]" line="209"/>
                    <declaration name="colors" type="Enumeration" line="210"/>
                    <declaration name="color" type="Color" line="211"/>
                    <scope line="212">
                        <declaration name="num" type="Integer" line="214"/>
                    </scope>
                    <scope line="219">
                        <scope line="221"/>
                    </scope>
                </scope>
                <scope line="231">
                    <declaration name="styles" type="Enumeration&lt;AttributeSet&gt;" line="234"/>
                    <scope line="235">
                        <declaration name="style" type="Style" line="236"/>
                        <declaration name="styleNumber" type="int" line="237"/>
                        <declaration name="styleType" type="String" line="239"/>
                        <scope line="241"/>
                        <scope line="245"/>
                        <scope line="249"/>
                        <declaration name="basis" type="AttributeSet" line="252"/>
                        <declaration name="goat" type="MutableAttributeSet" line="253"/>
                        <scope line="254"/>
                        <scope line="257"/>
                        <scope line="264">
                            <declaration name="basedOn" type="Integer" line="265"/>
                            <scope line="266"/>
                        </scope>
                        <declaration name="nextStyle" type="Style" line="270"/>
                        <scope line="271">
                            <declaration name="nextNum" type="Integer" line="272"/>
                            <scope line="273"/>
                        </scope>
                        <declaration name="hidden" type="Boolean" line="277"/>
                        <declaration name="additive" type="Boolean" line="279"/>
                    </scope>
                </scope>
            </method>
            <method name="writeDocumentProperties" type="void" line="290">
                <params>
                    <param name="doc" type="Document"/>
                </params>
                <declaration name="i" type="int" line="291"/>
                <declaration name="wroteSomething" type="boolean" line="292"/>
                <scope line="293">
                    <declaration name="attr" type="RTFAttribute" line="294"/>
                    <declaration name="prop" type="Object" line="296"/>
                    <declaration name="ok" type="boolean" line="297"/>
                </scope>
            </method>
            <method name="writeRTFTrailer" type="void" line="302"/>
            <method name="checkNumericControlWord" type="void" line="306">
                <params>
                    <param name="currentAttributes" type="MutableAttributeSet"/>
                    <param name="newAttributes" type="AttributeSet"/>
                    <param name="attrName" type="Object"/>
                    <param name="controlWord" type="String"/>
                    <param name="dflt" type="float"/>
                    <param name="scale" type="float"/>
                </params>
                <declaration name="parm" type="Object" line="307"/>
                <scope line="308">
                    <declaration name="targ" type="float" line="309"/>
                </scope>
            </method>
            <method name="checkControlWord" type="void" line="315">
                <params>
                    <param name="currentAttributes" type="MutableAttributeSet"/>
                    <param name="newAttributes" type="AttributeSet"/>
                    <param name="word" type="RTFAttribute"/>
                </params>
                <declaration name="parm" type="Object" line="316"/>
                <scope line="317"/>
            </method>
            <method name="checkControlWords" type="void" line="322">
                <params>
                    <param name="currentAttributes" type="MutableAttributeSet"/>
                    <param name="newAttributes" type="AttributeSet"/>
                    <param name="words" type="RTFAttribute"/>
                    <param name="domain" type="int"/>
                </params>
                <declaration name="wordIndex" type="int" line="323"/>
                <declaration name="wordCount" type="int" line="324"/>
                <scope line="325">
                    <declaration name="attr" type="RTFAttribute" line="326"/>
                </scope>
            </method>
            <method name="updateSectionAttributes" type="void" line="330">
                <params>
                    <param name="current" type="MutableAttributeSet"/>
                    <param name="newAttributes" type="AttributeSet"/>
                    <param name="emitStyleChanges" type="boolean"/>
                </params>
                <scope line="331">
                    <declaration name="oldStyle" type="Object" line="332"/>
                    <declaration name="newStyle" type="Object" line="333"/>
                    <scope line="334">
                        <scope line="335"/>
                        <scope line="338"/>
                        <scope line="342"/>
                    </scope>
                </scope>
            </method>
            <method name="resetSectionAttributes" type="void" line="349">
                <params>
                    <param name="currentAttributes" type="MutableAttributeSet"/>
                </params>
                <declaration name="wordIndex" type="int" line="351"/>
                <declaration name="wordCount" type="int" line="352"/>
                <scope line="353">
                    <declaration name="attr" type="RTFAttribute" line="354"/>
                </scope>
            </method>
            <method name="updateParagraphAttributes" type="void" line="359">
                <params>
                    <param name="current" type="MutableAttributeSet"/>
                    <param name="newAttributes" type="AttributeSet"/>
                    <param name="emitStyleChanges" type="boolean"/>
                </params>
                <declaration name="parm" type="Object" line="360"/>
                <declaration name="oldStyle" type="Object" line="361"/>
                <scope line="362">
                    <scope line="365">
                        <scope line="366"/>
                    </scope>
                </scope>
                <scope line="372"/>
                <declaration name="oldTabs" type="Object" line="376"/>
                <declaration name="newTabs" type="Object" line="377"/>
                <scope line="378">
                    <scope line="379"/>
                </scope>
                <scope line="385"/>
                <scope line="390">
                    <declaration name="tabs" type="TabStop" line="391"/>
                    <declaration name="index" type="int" line="392"/>
                    <scope line="393">
                        <declaration name="tab" type="TabStop" line="394"/>
                        <declaration name="twips" type="int" line="428"/>
                        <scope line="429"/>
                        <scope line="432"/>
                    </scope>
                </scope>
            </method>
            <method name="writeParagraphElement" type="void" line="439">
                <params>
                    <param name="el" type="Element"/>
                </params>
                <declaration name="sub_count" type="int" line="441"/>
                <scope line="442"/>
            </method>
            <method name="resetParagraphAttributes" type="void" line="448">
                <params>
                    <param name="currentAttributes" type="MutableAttributeSet"/>
                </params>
                <declaration name="wordIndex" type="int" line="451"/>
                <declaration name="wordCount" type="int" line="452"/>
                <scope line="453">
                    <declaration name="attr" type="RTFAttribute" line="454"/>
                </scope>
            </method>
            <method name="updateCharacterAttributes" type="void" line="460">
                <params>
                    <param name="current" type="MutableAttributeSet"/>
                    <param name="newAttributes" type="AttributeSet"/>
                    <param name="updateStyleChanges" type="boolean"/>
                </params>
                <declaration name="parm" type="Object" line="461"/>
                <scope line="462">
                    <declaration name="oldStyle" type="Object" line="463"/>
                    <declaration name="newStyle" type="Object" line="464"/>
                    <scope line="465">
                        <scope line="466"/>
                        <scope line="469"/>
                        <scope line="473"/>
                    </scope>
                </scope>
                <scope line="478">
                    <declaration name="fontNum" type="Integer" line="479"/>
                </scope>
                <scope line="485">
                    <declaration name="colorNum" type="int" line="486"/>
                </scope>
                <scope line="491">
                    <declaration name="colorNum" type="int" line="492"/>
                </scope>
            </method>
            <method name="resetCharacterAttributes" type="void" line="498">
                <params>
                    <param name="currentAttributes" type="MutableAttributeSet"/>
                </params>
                <declaration name="wordIndex" type="int" line="500"/>
                <declaration name="wordCount" type="int" line="501"/>
                <scope line="502">
                    <declaration name="attr" type="RTFAttribute" line="503"/>
                </scope>
            </method>
            <method name="writeTextElement" type="void" line="513">
                <params>
                    <param name="el" type="Element"/>
                </params>
                <scope line="515">
                    <scope line="516"/>
                    <scope line="519"/>
                </scope>
                <scope line="525">
                    <declaration name="sub_count" type="int" line="526"/>
                </scope>
            </method>
            <method name="writeText" type="void" line="530">
                <params>
                    <param name="s" type="Segment"/>
                </params>
                <declaration name="pos" type="int" line="531"/>
                <declaration name="array" type="char[]" line="532"/>
            </method>
            <method name="writeText" type="void" line="538">
                <params>
                    <param name="s" type="String"/>
                </params>
                <declaration name="pos" type="int" line="539"/>
            </method>
            <method name="writeRawString" type="void" line="544">
                <params>
                    <param name="str" type="String"/>
                </params>
                <declaration name="strlen" type="int" line="545"/>
            </method>
            <method name="writeControlWord" type="void" line="548">
                <params>
                    <param name="keyword" type="String"/>
                </params>
            </method>
            <method name="writeControlWord" type="void" line="553">
                <params>
                    <param name="keyword" type="String"/>
                    <param name="arg" type="int"/>
                </params>
            </method>
            <method name="writeBegingroup" type="void" line="559"/>
            <method name="writeEndgroup" type="void" line="563"/>
            <method name="writeCharacter" type="void" line="567">
                <params>
                    <param name="ch" type="char"/>
                </params>
                <scope line="568"/>
                <scope line="574"/>
                <scope line="578"/>
                <declaration name="b" type="int" line="581"/>
                <scope line="582">
                    <declaration name="i" type="int" line="583"/>
                    <scope line="584">
                        <scope line="585"/>
                    </scope>
                    <declaration name="approximation" type="String" line="590"/>
                    <scope line="591"/>
                </scope>
                <scope line="601">
                    <declaration name="nybble" type="int" line="602"/>
                </scope>
                <scope line="619"/>
            </method>
            <method name="approximationForUnicode" type="String" line="627">
                <params>
                    <param name="ch" type="char"/>
                </params>
            </method>
            <javadoc line="630">
                Takes a translation table (a 256-element array of characters)
                  and creates an output conversion table for use by
                  convertCharacter().                
            </javadoc>
            <method name="outputConversionFromTranslationTable" type="int[]" line="635">
                <params>
                    <param name="table" type="char[]"/>
                </params>
                <declaration name="conversion" type="int[]" line="636"/>
                <declaration name="index" type="int" line="637"/>
                <scope line="638"/>
            </method>
            <method name="outputConversionForName" type="int[]" line="644">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="table" type="char[]" line="645"/>
            </method>
            <javadoc line="648">
                Takes a char and a conversion table (an int[] in the current
                  implementation, but conversion tables should be treated as an opaque
                  type) and returns the
                  corresponding byte value (as an int, since bytes are signed).                
            </javadoc>
            <method name="convertCharacter" type="int" line="654">
                <params>
                    <param name="conversion" type="int[]"/>
                    <param name="ch" type="char"/>
                </params>
                <declaration name="index" type="int" line="655"/>
                <scope line="656"/>
            </method>
        </class>
    </source>