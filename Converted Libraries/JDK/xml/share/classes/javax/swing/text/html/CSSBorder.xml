<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.text.html">
        <import package="java.awt.Color"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.Insets"/>
        <import package="java.awt.Polygon"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.Shape"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Map"/>
        <import package="javax.swing.border.AbstractBorder"/>
        <import package="javax.swing.text.AttributeSet"/>
        <import package="javax.swing.text.View"/>
        <import package="javax.swing.text.html.CSS.Attribute"/>
        <import package="javax.swing.text.html.CSS.BorderStyle"/>
        <import package="javax.swing.text.html.CSS.BorderWidthValue"/>
        <import package="javax.swing.text.html.CSS.ColorValue"/>
        <import package="javax.swing.text.html.CSS.CssValue"/>
        <import package="javax.swing.text.html.CSS.LengthValue"/>
        <import package="javax.swing.text.html.CSS.Value"/>
        <class name="CSSBorder" line="48">
            <extends class="AbstractBorder"/>
            <comment line="197">
                                
            </comment>
            <comment line="256">
                                
            </comment>
            <comment line="424">
                                
            </comment>
            <javadoc line="48">
                CSS-style borders for HTML elements.                
                <author>
                    Sergey Groznyh                    
                </author>
            </javadoc>
            <declaration name="COLOR" type="int" line="55"/>
            <javadoc line="55">
                Indices for the attribute groups.                
            </javadoc>
            <declaration name="TOP" type="int" line="58"/>
            <javadoc line="58">
                Indices for the box sides within the attribute group.                
            </javadoc>
            <declaration name="ATTRIBUTES" type="Attribute[][]" line="61"/>
            <javadoc line="61">
                The attribute groups.                
            </javadoc>
            <declaration name="PARSERS" type="CssValue" line="71"/>
            <javadoc line="71">
                Parsers for the border properties.                
            </javadoc>
            <declaration name="DEFAULTS" type="Object[]" line="76"/>
            <javadoc line="76">
                Default values for the border properties.                
            </javadoc>
            <declaration name="attrs" type="AttributeSet" line="83"/>
            <javadoc line="83">
                Attribute set containing border properties.                
            </javadoc>
            <javadoc line="86">
                Initialize the attribute set.                
            </javadoc>
            <method name="CSSBorder" type="constructor" line="89">
                <params>
                    <param name="attrs" type="AttributeSet"/>
                </params>
            </method>
            <javadoc line="93">
                Return the border color for the given side.                
            </javadoc>
            <method name="getBorderColor" type="Color" line="96">
                <params>
                    <param name="side" type="int"/>
                </params>
                <comment line="102">
                    Marker for the default value.  Use &apos;color&apos; property value as the                    
                </comment>
                <comment line="103">
                    computed value of the &apos;border-color&apos; property (CSS2 8.5.2)                    
                </comment>
                <declaration name="o" type="Object" line="97"/>
                <declaration name="cv" type="ColorValue" line="98"/>
                <scope line="99"/>
                <scope line="101">
                    <scope line="105"/>
                </scope>
            </method>
            <javadoc line="113">
                Return the border width for the given side.                
            </javadoc>
            <method name="getBorderWidth" type="int" line="116">
                <params>
                    <param name="side" type="int"/>
                </params>
                <comment line="121">
                    The &apos;border-style&apos; value of &quot;none&quot; forces the computed value                    
                </comment>
                <comment line="122">
                    of &apos;border-width&apos; to be 0 (CSS2 8.5.3)                    
                </comment>
                <declaration name="width" type="int" line="117"/>
                <declaration name="bs" type="BorderStyle" line="118"/>
                <scope line="120">
                    <declaration name="bw" type="LengthValue" line="123"/>
                    <scope line="125"/>
                </scope>
            </method>
            <javadoc line="133">
                Return an array of border widths in the TOP, RIGHT, BOTTOM, LEFT order.                
            </javadoc>
            <method name="getWidths" type="int[]" line="136">
                <declaration name="widths" type="int[]" line="137"/>
                <scope line="138"/>
            </method>
            <javadoc line="144">
                Return the border style for the given side.                
            </javadoc>
            <method name="getBorderStyle" type="Value" line="147">
                <params>
                    <param name="side" type="int"/>
                </params>
                <declaration name="style" type="BorderStyle" line="148"/>
                <scope line="150"/>
            </method>
            <javadoc line="156">
                Return border shape for {@code side} as if the border has zero interior
                  length.  Shape start is at (0,0); points are added clockwise.                
            </javadoc>
            <method name="getBorderShape" type="Polygon" line="160">
                <params>
                    <param name="side" type="int"/>
                </params>
                <declaration name="shape" type="Polygon" line="161"/>
                <declaration name="widths" type="int[]" line="162"/>
                <scope line="163"/>
            </method>
            <javadoc line="173">
                Return the border painter appropriate for the given side.                
            </javadoc>
            <method name="getBorderPainter" type="BorderPainter" line="176">
                <params>
                    <param name="side" type="int"/>
                </params>
                <declaration name="style" type="Value" line="177"/>
            </method>
            <javadoc line="181">
                Return the color with brightness adjusted by the specified factor.
                  The factor values are between 0.0 (no change) and 1.0 (turn into white).
                  Negative factor values decrease brigthness (ie, 1.0 turns into black).                
            </javadoc>
            <method name="getAdjustedColor" type="Color" line="187">
                <params>
                    <param name="c" type="Color"/>
                    <param name="factor" type="double"/>
                </params>
                <declaration name="f" type="double" line="188"/>
                <declaration name="inc" type="double" line="189"/>
            </method>
            <method name="getBorderInsets" type="Insets" line="198">
                <params>
                    <param name="c" type="Component"/>
                    <param name="insets" type="Insets"/>
                </params>
                <declaration name="widths" type="int[]" line="199"/>
            </method>
            <method name="paintBorder" type="void" line="205">
                <params>
                    <param name="c" type="Component"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <comment line="214">
                    Position and size of the border interior.                    
                </comment>
                <comment line="220">
                    Coordinates of the interior corners, from NW clockwise.                    
                </comment>
                <comment line="228">
                    Draw the borders for all sides.                    
                </comment>
                <comment line="235">
                    &quot;stretch&quot; the border shape by the interior area dimension                    
                </comment>
                <comment line="242">
                    Restore initial clip                    
                </comment>
                <scope line="206"/>
                <declaration name="g2" type="Graphics2D" line="210"/>
                <declaration name="widths" type="int[]" line="212"/>
                <declaration name="intX" type="int" line="215"/>
                <declaration name="intY" type="int" line="216"/>
                <declaration name="intWidth" type="int" line="217"/>
                <declaration name="intHeight" type="int" line="218"/>
                <declaration name="intCorners" type="int[][]" line="221"/>
                <scope line="229">
                    <declaration name="style" type="Value" line="230"/>
                    <declaration name="shape" type="Polygon" line="231"/>
                    <scope line="232">
                        <declaration name="sideLength" type="int" line="233"/>
                        <declaration name="color" type="Color" line="238"/>
                        <declaration name="painter" type="BorderPainter" line="239"/>
                        <declaration name="angle" type="double" line="241"/>
                    </scope>
                </scope>
            </method>
            <interface name="BorderPainter">
                <method name="paint" type="void" line="258"/>
                <javadoc line="258">
                    The painter should paint the border as if it were at the top and the
                      coordinates of the NW corner of the interior area is (0, 0).  The
                      caller is responsible for the appropriate affine transformations.
                      Clip is set by the caller to the exact border shape so it&apos;s safe to
                      simply draw into the shape&apos;s bounding rectangle.                    
                </javadoc>
            </interface>
            <class name="NullPainter" line="269">
                <implements interface="BorderPainter"/>
                <javadoc line="269">
                    Painter for the &quot;none&quot; and &quot;hidden&quot; CSS border styles.                    
                </javadoc>
                <method name="paint" type="void" line="273">
                    <params>
                        <param name="shape" type="Polygon"/>
                        <param name="g" type="Graphics"/>
                        <param name="color" type="Color"/>
                        <param name="side" type="int"/>
                    </params>
                    <comment line="274">
                        Do nothing.                        
                    </comment>
                </method>
            </class>
            <class name="SolidPainter" line="278">
                <implements interface="BorderPainter"/>
                <javadoc line="278">
                    Painter for the &quot;solid&quot; CSS border style.                    
                </javadoc>
                <method name="paint" type="void" line="282">
                    <params>
                        <param name="shape" type="Polygon"/>
                        <param name="g" type="Graphics"/>
                        <param name="color" type="Color"/>
                        <param name="side" type="int"/>
                    </params>
                </method>
            </class>
            <class name="StrokePainter" line="288">
                <implements interface="BorderPainter"/>
                <javadoc line="288">
                    Defines a method for painting strokes in the specified direction using
                      the given length and color patterns.                    
                </javadoc>
                <javadoc line="293">
                    Paint strokes repeatedly using the given length and color patterns.                    
                </javadoc>
                <method name="paintStrokes" type="void" line="297">
                    <params>
                        <param name="r" type="Rectangle"/>
                        <param name="g" type="Graphics"/>
                        <param name="axis" type="int"/>
                        <param name="lengthPattern" type="int[]"/>
                        <param name="colorPattern" type="Color[]"/>
                    </params>
                    <declaration name="xAxis" type="boolean" line="298"/>
                    <declaration name="start" type="int" line="299"/>
                    <declaration name="end" type="int" line="300"/>
                    <scope line="301">
                        <scope line="302">
                            <scope line="303"/>
                            <declaration name="length" type="int" line="306"/>
                            <declaration name="c" type="Color" line="307"/>
                            <scope line="308">
                                <declaration name="x" type="int" line="309"/>
                                <declaration name="y" type="int" line="310"/>
                                <declaration name="width" type="int" line="311"/>
                                <declaration name="height" type="int" line="312"/>
                            </scope>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="DoublePainter" line="322">
                <extends class="StrokePainter"/>
                <javadoc line="322">
                    Painter for the &quot;double&quot; CSS border style.                    
                </javadoc>
                <method name="paint" type="void" line="326">
                    <params>
                        <param name="shape" type="Polygon"/>
                        <param name="g" type="Graphics"/>
                        <param name="color" type="Color"/>
                        <param name="side" type="int"/>
                    </params>
                    <declaration name="r" type="Rectangle" line="327"/>
                    <declaration name="length" type="int" line="328"/>
                    <declaration name="lengthPattern" type="int[]" line="329"/>
                    <declaration name="colorPattern" type="Color[]" line="330"/>
                </method>
            </class>
            <class name="DottedDashedPainter" line="335">
                <extends class="StrokePainter"/>
                <javadoc line="335">
                    Painter for the &quot;dotted&quot; and &quot;dashed&quot; CSS border styles.                    
                </javadoc>
                <declaration name="factor" type="int" line="339"/>
                <method name="DottedDashedPainter" type="constructor" line="341">
                    <params>
                        <param name="factor" type="int"/>
                    </params>
                </method>
                <method name="paint" type="void" line="345">
                    <params>
                        <param name="shape" type="Polygon"/>
                        <param name="g" type="Graphics"/>
                        <param name="color" type="Color"/>
                        <param name="side" type="int"/>
                    </params>
                    <declaration name="r" type="Rectangle" line="346"/>
                    <declaration name="length" type="int" line="347"/>
                    <declaration name="lengthPattern" type="int[]" line="348"/>
                    <declaration name="colorPattern" type="Color[]" line="349"/>
                </method>
            </class>
            <class name="ShadowLightPainter" line="354">
                <extends class="StrokePainter"/>
                <javadoc line="354">
                    Painter that defines colors for &quot;shadow&quot; and &quot;light&quot; border sides.                    
                </javadoc>
                <javadoc line="358">
                    Return the &quot;shadow&quot; border side color.                    
                </javadoc>
                <method name="getShadowColor" type="Color" line="361">
                    <params>
                        <param name="c" type="Color"/>
                    </params>
                </method>
                <javadoc line="365">
                    Return the &quot;light&quot; border side color.                    
                </javadoc>
                <method name="getLightColor" type="Color" line="368">
                    <params>
                        <param name="c" type="Color"/>
                    </params>
                </method>
            </class>
            <class name="GrooveRidgePainter" line="373">
                <extends class="ShadowLightPainter"/>
                <javadoc line="373">
                    Painter for the &quot;groove&quot; and &quot;ridge&quot; CSS border styles.                    
                </javadoc>
                <declaration name="type" type="Value" line="377"/>
                <method name="GrooveRidgePainter" type="constructor" line="379">
                    <params>
                        <param name="type" type="Value"/>
                    </params>
                </method>
                <method name="paint" type="void" line="383">
                    <params>
                        <param name="shape" type="Polygon"/>
                        <param name="g" type="Graphics"/>
                        <param name="color" type="Color"/>
                        <param name="side" type="int"/>
                    </params>
                    <declaration name="r" type="Rectangle" line="384"/>
                    <declaration name="length" type="int" line="385"/>
                    <declaration name="lengthPattern" type="int[]" line="386"/>
                    <declaration name="colorPattern" type="Color[]" line="387"/>
                </method>
            </class>
            <class name="InsetOutsetPainter" line="395">
                <extends class="ShadowLightPainter"/>
                <javadoc line="395">
                    Painter for the &quot;inset&quot; and &quot;outset&quot; CSS border styles.                    
                </javadoc>
                <declaration name="type" type="Value" line="399"/>
                <method name="InsetOutsetPainter" type="constructor" line="401">
                    <params>
                        <param name="type" type="Value"/>
                    </params>
                </method>
                <method name="paint" type="void" line="405">
                    <params>
                        <param name="shape" type="Polygon"/>
                        <param name="g" type="Graphics"/>
                        <param name="color" type="Color"/>
                        <param name="side" type="int"/>
                    </params>
                </method>
            </class>
            <javadoc line="412">
                Add the specified painter to the painters map.                
            </javadoc>
            <method name="registerBorderPainter" type="void" line="415">
                <params>
                    <param name="style" type="Value"/>
                    <param name="painter" type="BorderPainter"/>
                </params>
            </method>
            <declaration name="borderPainters" type="Map&lt;Value,BorderPainter&gt;" line="419"/>
            <javadoc line="419">
                Map the border style values to the border painter objects.                
            </javadoc>
            <scope line="424"/>
        </class>
    </source>