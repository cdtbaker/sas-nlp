<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.text">
        <import package="java.text.BreakIterator"/>
        <import package="java.text.CharacterIterator"/>
        <import package="java.text.StringCharacterIterator"/>
        <import package="java.util.Arrays"/>
        <class name="WhitespaceBasedBreakIterator" line="33">
            <extends class="BreakIterator"/>
            <javadoc line="33">
                A simple whitespace-based BreakIterator implementation.                
                <author>
                    Sergey Groznyh                    
                </author>
            </javadoc>
            <declaration name="text" type="char[]" line="39"/>
            <declaration name="breaks" type="int[]" line="40"/>
            <declaration name="pos" type="int" line="41"/>
            <javadoc line="43">
                Calculate break positions eagerly parallel to reading text.                
            </javadoc>
            <method name="setText" type="void" line="46">
                <params>
                    <param name="ci" type="CharacterIterator"/>
                </params>
                <declaration name="begin" type="int" line="47"/>
                <declaration name="breaks0" type="int[]" line="49"/>
                <declaration name="brIx" type="int" line="50"/>
                <declaration name="charIx" type="int" line="53"/>
                <declaration name="inWs" type="boolean" line="54"/>
                <scope line="55">
                    <declaration name="ws" type="boolean" line="57"/>
                    <scope line="58"/>
                </scope>
                <scope line="64"/>
            </method>
            <method name="getText" type="CharacterIterator" line="70"/>
            <method name="first" type="int" line="74"/>
            <method name="last" type="int" line="78"/>
            <method name="current" type="int" line="82"/>
            <method name="next" type="int" line="86"/>
            <method name="previous" type="int" line="90"/>
            <method name="next" type="int" line="94">
                <params>
                    <param name="n" type="int"/>
                </params>
            </method>
            <method name="following" type="int" line="98">
                <params>
                    <param name="n" type="int"/>
                </params>
            </method>
            <method name="preceding" type="int" line="102">
                <params>
                    <param name="n" type="int"/>
                </params>
            </method>
            <method name="checkhit" type="int" line="106">
                <params>
                    <param name="hit" type="int"/>
                </params>
                <scope line="107"/>
                <scope line="109"/>
            </method>
            <method name="adjacent" type="int" line="114">
                <params>
                    <param name="n" type="int"/>
                    <param name="bias" type="int"/>
                </params>
                <declaration name="hit" type="int" line="115"/>
                <declaration name="offset" type="int" line="116"/>
            </method>
        </class>
    </source>