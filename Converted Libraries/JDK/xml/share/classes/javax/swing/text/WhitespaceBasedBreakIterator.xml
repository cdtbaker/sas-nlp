<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.text">
        <import package="java.text.BreakIterator"/>
        <import package="java.text.CharacterIterator"/>
        <import package="java.text.StringCharacterIterator"/>
        <import package="java.util.Arrays"/>
        <class name="WhitespaceBasedBreakIterator" line="6">
            <extends class="BreakIterator"/>
            <javadoc line="6">
                A simple whitespace-based BreakIterator implementation.                
                <author>
                    Sergey Groznyh                    
                </author>
            </javadoc>
            <declaration name="text" type="char[]" line="11"/>
            <declaration name="breaks" type="int[]" line="12"/>
            <declaration name="pos" type="int" line="13"/>
            <javadoc line="14">
                Calculate break positions eagerly parallel to reading text.                
            </javadoc>
            <method name="setText" type="void" line="17">
                <params>
                    <param name="ci" type="CharacterIterator"/>
                </params>
                <declaration name="begin" type="int" line="18"/>
                <declaration name="breaks0" type="int[]" line="20"/>
                <declaration name="brIx" type="int" line="21"/>
                <declaration name="charIx" type="int" line="23"/>
                <declaration name="inWs" type="boolean" line="24"/>
                <scope line="25">
                    <declaration name="ws" type="boolean" line="27"/>
                    <scope line="28"/>
                </scope>
                <scope line="34"/>
            </method>
            <method name="getText" type="CharacterIterator" line="39"/>
            <method name="first" type="int" line="42"/>
            <method name="last" type="int" line="45"/>
            <method name="current" type="int" line="48"/>
            <method name="next" type="int" line="51"/>
            <method name="previous" type="int" line="54"/>
            <method name="next" type="int" line="57">
                <params>
                    <param name="n" type="int"/>
                </params>
            </method>
            <method name="following" type="int" line="60">
                <params>
                    <param name="n" type="int"/>
                </params>
            </method>
            <method name="preceding" type="int" line="63">
                <params>
                    <param name="n" type="int"/>
                </params>
            </method>
            <method name="checkhit" type="int" line="66">
                <params>
                    <param name="hit" type="int"/>
                </params>
                <scope line="67"/>
                <scope line="70"/>
            </method>
            <method name="adjacent" type="int" line="74">
                <params>
                    <param name="n" type="int"/>
                    <param name="bias" type="int"/>
                </params>
                <declaration name="hit" type="int" line="75"/>
                <declaration name="offset" type="int" line="76"/>
            </method>
        </class>
    </source>