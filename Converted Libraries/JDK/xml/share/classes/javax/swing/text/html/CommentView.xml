<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.text.html">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.io"/>
        <import package="java.net.MalformedURLException"/>
        <import package="java.net.URL"/>
        <import package="javax.swing.text"/>
        <import package="javax.swing"/>
        <import package="javax.swing.border"/>
        <import package="javax.swing.event"/>
        <import package="java.util"/>
        <class name="CommentView" line="12">
            <extends class="HiddenTagView"/>
            <javadoc line="12">
                CommentView subclasses HiddenTagView to contain a JTextArea showing
                  a comment. When the textarea is edited the comment is
                  reset. As this inherits from EditableView if the JTextComponent is
                  not editable, the textarea will not be visible.                
                <author>
                    Scott Violet                    
                </author>
            </javadoc>
            <method name="CommentView" type="constructor" line="20">
                <params>
                    <param name="e" type="Element"/>
                </params>
            </method>
            <method name="createComponent" type="Component" line="23">
                <declaration name="host" type="Container" line="24"/>
                <scope line="25"/>
                <declaration name="ta" type="JTextArea" line="28"/>
                <declaration name="doc" type="Document" line="29"/>
                <declaration name="font" type="Font" line="30"/>
                <scope line="31"/>
                <scope line="35"/>
            </method>
            <method name="resetBorder" type="void" line="44"/>
            <javadoc line="46">
                This is subclassed to put the text on the Comment attribute of
                  the Element&apos;s AttributeSet.                
            </javadoc>
            <method name="_updateModelFromText" type="void" line="50">
                <declaration name="textC" type="JTextComponent" line="51"/>
                <declaration name="doc" type="Document" line="52"/>
                <scope line="53">
                    <declaration name="text" type="String" line="54"/>
                    <declaration name="sas" type="SimpleAttributeSet" line="55"/>
                    <scope line="57"/>
                    <scope line="61"/>
                </scope>
            </method>
            <method name="getTextComponent" type="JTextComponent" line="66"/>
            <method name="getRepresentedText" type="String" line="69">
                <declaration name="as" type="AttributeSet" line="70"/>
                <scope line="71">
                    <declaration name="comment" type="Object" line="72"/>
                    <scope line="73"/>
                </scope>
            </method>
            <declaration name="CBorder" type="Border" line="79"/>
            <declaration name="commentPadding" type="int" line="80"/>
            <declaration name="commentPaddingD" type="int" line="81"/>
            <class name="CommentBorder" line="82">
                <extends class="LineBorder"/>
                <method name="CommentBorder" type="constructor" line="83"/>
                <method name="paintBorder" type="void" line="86">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                </method>
                <method name="getBorderInsets" type="Insets" line="89">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="insets" type="Insets"/>
                    </params>
                    <declaration name="retI" type="Insets" line="90"/>
                </method>
                <method name="isBorderOpaque" type="boolean" line="95"/>
            </class>
        </class>
    </source>