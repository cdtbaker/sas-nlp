<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.text">
        <import package="java.awt"/>
        <import package="javax.swing.event"/>
        <class name="LabelView" line="4">
            <extends class="GlyphView"/>
            <implements interface="TabableView"/>
            <javadoc line="4">
                A &lt;code&gt;LabelView&lt;/code&gt; is a styled chunk of text
                  that represents a view mapped over an element in the
                  text model.  It caches the character level attributes
                  used for rendering.                
                <author>
                    Timothy Prinzing                    
                </author>
            </javadoc>
            <javadoc line="12">
                Constructs a new view wrapped on an element.                
                <param>
                    elem the element                    
                </param>
            </javadoc>
            <method name="LabelView" type="constructor" line="16">
                <params>
                    <param name="elem" type="Element"/>
                </params>
            </method>
            <javadoc line="19">
                Synchronize the view&apos;s cached values with the model.
                  This causes the font, metrics, color, etc to be
                  re-cached if the cache has been invalidated.                
            </javadoc>
            <method name="sync" type="void" line="24">
                <scope line="25"/>
            </method>
            <javadoc line="29">
                Sets whether or not the view is underlined.
                  Note that this setter is protected and is really
                  only meant if you need to update some additional
                  state when set.                
                <param>
                    u true if the view is underlined, otherwise
                      false                    
                </param>
                <see>
                    #isUnderline                    
                </see>
            </javadoc>
            <method name="setUnderline" type="void" line="38">
                <params>
                    <param name="u" type="boolean"/>
                </params>
            </method>
            <javadoc line="41">
                Sets whether or not the view has a strike/line
                  through it.
                  Note that this setter is protected and is really
                  only meant if you need to update some additional
                  state when set.                
                <param>
                    s true if the view has a strike/line
                      through it, otherwise false                    
                </param>
                <see>
                    #isStrikeThrough                    
                </see>
            </javadoc>
            <method name="setStrikeThrough" type="void" line="51">
                <params>
                    <param name="s" type="boolean"/>
                </params>
            </method>
            <javadoc line="54">
                Sets whether or not the view represents a
                  superscript.
                  Note that this setter is protected and is really
                  only meant if you need to update some additional
                  state when set.                
                <param>
                    s true if the view represents a
                      superscript, otherwise false                    
                </param>
                <see>
                    #isSuperscript                    
                </see>
            </javadoc>
            <method name="setSuperscript" type="void" line="64">
                <params>
                    <param name="s" type="boolean"/>
                </params>
            </method>
            <javadoc line="67">
                Sets whether or not the view represents a
                  subscript.
                  Note that this setter is protected and is really
                  only meant if you need to update some additional
                  state when set.                
                <param>
                    s true if the view represents a
                      subscript, otherwise false                    
                </param>
                <see>
                    #isSubscript                    
                </see>
            </javadoc>
            <method name="setSubscript" type="void" line="77">
                <params>
                    <param name="s" type="boolean"/>
                </params>
            </method>
            <javadoc line="80">
                Sets the background color for the view. This method is typically
                  invoked as part of configuring this &lt;code&gt;View&lt;/code&gt;. If you need
                  to customize the background color you should override
                  &lt;code&gt;setPropertiesFromAttributes&lt;/code&gt; and invoke this method. A
                  value of null indicates no background should be rendered, so that the
                  background of the parent &lt;code&gt;View&lt;/code&gt; will show through.                
                <param>
                    bg background color, or null                    
                </param>
                <see>
                    #setPropertiesFromAttributes                    
                </see>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="setBackground" type="void" line="91">
                <params>
                    <param name="bg" type="Color"/>
                </params>
            </method>
            <javadoc line="94">
                Sets the cached properties from the attributes.                
            </javadoc>
            <method name="setPropertiesFromAttributes" type="void" line="97">
                <declaration name="attr" type="AttributeSet" line="98"/>
                <scope line="99">
                    <declaration name="d" type="Document" line="100"/>
                    <scope line="101">
                        <declaration name="doc" type="StyledDocument" line="102"/>
                        <scope line="105"/>
                        <scope line="108"/>
                    </scope>
                    <scope line="116"/>
                </scope>
            </method>
            <javadoc line="121">
                Fetches the &lt;code&gt;FontMetrics&lt;/code&gt; used for this view.                
                <deprecated>
                    FontMetrics are not used for glyph rendering
                      when running in the JDK.                    
                </deprecated>
            </javadoc>
            <method name="getFontMetrics" type="FontMetrics" line="126">
                <declaration name="c" type="Container" line="128"/>
            </method>
            <javadoc line="131">
                Fetches the background color to use to render the glyphs.
                  This is implemented to return a cached background color,
                  which defaults to &lt;code&gt;null&lt;/code&gt;.                
                <return>
                    the cached background color                    
                </return>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="getBackground" type="Color" line="138"/>
            <javadoc line="142">
                Fetches the foreground color to use to render the glyphs.
                  This is implemented to return a cached foreground color,
                  which defaults to &lt;code&gt;null&lt;/code&gt;.                
                <return>
                    the cached foreground color                    
                </return>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="getForeground" type="Color" line="149"/>
            <javadoc line="153">
                Fetches the font that the glyphs should be based upon.
                  This is implemented to return a cached font.                
                <return>
                    the cached font                    
                </return>
            </javadoc>
            <method name="getFont" type="Font" line="158"/>
            <javadoc line="162">
                Determines if the glyphs should be underlined.  If true,
                  an underline should be drawn through the baseline.  This
                  is implemented to return the cached underline property.
                  &lt;p&gt;When you request this property, &lt;code&gt;LabelView&lt;/code&gt;
                  re-syncs its state with the properties of the
                  &lt;code&gt;Element&lt;/code&gt;&apos;s &lt;code&gt;AttributeSet&lt;/code&gt;.
                  If &lt;code&gt;Element&lt;/code&gt;&apos;s &lt;code&gt;AttributeSet&lt;/code&gt;
                  does not have this property set, it will revert to false.                
                <return>
                    the value of the cached
                      &lt;code&gt;underline&lt;/code&gt; property                    
                </return>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="isUnderline" type="boolean" line="175"/>
            <javadoc line="179">
                Determines if the glyphs should have a strikethrough
                  line.  If true, a line should be drawn through the center
                  of the glyphs.  This is implemented to return the
                  cached &lt;code&gt;strikeThrough&lt;/code&gt; property.
                  &lt;p&gt;When you request this property, &lt;code&gt;LabelView&lt;/code&gt;
                  re-syncs its state with the properties of the
                  &lt;code&gt;Element&lt;/code&gt;&apos;s &lt;code&gt;AttributeSet&lt;/code&gt;.
                  If &lt;code&gt;Element&lt;/code&gt;&apos;s &lt;code&gt;AttributeSet&lt;/code&gt;
                  does not have this property set, it will revert to false.                
                <return>
                    the value of the cached
                      &lt;code&gt;strikeThrough&lt;/code&gt; property                    
                </return>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="isStrikeThrough" type="boolean" line="193"/>
            <javadoc line="197">
                Determines if the glyphs should be rendered as superscript.                
                <return>
                    the value of the cached subscript property
                      &lt;p&gt;When you request this property, &lt;code&gt;LabelView&lt;/code&gt;
                      re-syncs its state with the properties of the
                      &lt;code&gt;Element&lt;/code&gt;&apos;s &lt;code&gt;AttributeSet&lt;/code&gt;.
                      If &lt;code&gt;Element&lt;/code&gt;&apos;s &lt;code&gt;AttributeSet&lt;/code&gt;
                      does not have this property set, it will revert to false.                    
                </return>
                <return>
                    the value of the cached
                      &lt;code&gt;subscript&lt;/code&gt; property                    
                </return>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="isSubscript" type="boolean" line="209"/>
            <javadoc line="213">
                Determines if the glyphs should be rendered as subscript.
                  &lt;p&gt;When you request this property, &lt;code&gt;LabelView&lt;/code&gt;
                  re-syncs its state with the properties of the
                  &lt;code&gt;Element&lt;/code&gt;&apos;s &lt;code&gt;AttributeSet&lt;/code&gt;.
                  If &lt;code&gt;Element&lt;/code&gt;&apos;s &lt;code&gt;AttributeSet&lt;/code&gt;
                  does not have this property set, it will revert to false.                
                <return>
                    the value of the cached
                      &lt;code&gt;superscript&lt;/code&gt; property                    
                </return>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="isSuperscript" type="boolean" line="224"/>
            <javadoc line="228">
                Gives notification from the document that attributes were changed
                  in a location that this view is responsible for.                
                <param>
                    e the change information from the associated document                    
                </param>
                <param>
                    a the current allocation of the view                    
                </param>
                <param>
                    f the factory to use to rebuild if the view has children                    
                </param>
                <see>
                    View#changedUpdate                    
                </see>
            </javadoc>
            <method name="changedUpdate" type="void" line="236">
                <params>
                    <param name="e" type="DocumentEvent"/>
                    <param name="a" type="Shape"/>
                    <param name="f" type="ViewFactory"/>
                </params>
            </method>
            <declaration name="font" type="Font" line="240"/>
            <declaration name="fg" type="Color" line="241"/>
            <declaration name="bg" type="Color" line="242"/>
            <declaration name="underline" type="boolean" line="243"/>
            <declaration name="strike" type="boolean" line="244"/>
            <declaration name="superscript" type="boolean" line="245"/>
            <declaration name="subscript" type="boolean" line="246"/>
        </class>
    </source>