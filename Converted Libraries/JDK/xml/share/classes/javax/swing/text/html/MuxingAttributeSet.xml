<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.text.html">
        <import package="javax.swing.text"/>
        <import package="java.io.Serializable"/>
        <import package="java.util"/>
        <class name="MuxingAttributeSet" line="31">
            <comment line="124">
                --- AttributeSet methods ----------------------------                
            </comment>
            <implements interface="AttributeSet"/>
            <implements interface="Serializable"/>
            <javadoc line="31">
                An implementation of &lt;code&gt;AttributeSet&lt;/code&gt; that can multiplex
                  across a set of &lt;code&gt;AttributeSet&lt;/code&gt;s.                
            </javadoc>
            <javadoc line="37">
                Creates a &lt;code&gt;MuxingAttributeSet&lt;/code&gt; with the passed in
                  attributes.                
            </javadoc>
            <method name="MuxingAttributeSet" type="constructor" line="41">
                <params>
                    <param name="attrs" type="AttributeSet[]"/>
                </params>
            </method>
            <javadoc line="45">
                Creates an empty &lt;code&gt;MuxingAttributeSet&lt;/code&gt;. This is intended for
                  use by subclasses only, and it is also intended that subclasses will
                  set the constituent &lt;code&gt;AttributeSet&lt;/code&gt;s before invoking any
                  of the &lt;code&gt;AttributeSet&lt;/code&gt; methods.                
            </javadoc>
            <method name="MuxingAttributeSet" type="constructor" line="51"/>
            <javadoc line="54">
                Directly sets the &lt;code&gt;AttributeSet&lt;/code&gt;s that comprise this
                  &lt;code&gt;MuxingAttributeSet&lt;/code&gt;.                
            </javadoc>
            <method name="setAttributes" type="void" line="58">
                <params>
                    <param name="attrs" type="AttributeSet[]"/>
                </params>
            </method>
            <javadoc line="62">
                Returns the &lt;code&gt;AttributeSet&lt;/code&gt;s multiplexing too. When the
                  &lt;code&gt;AttributeSet&lt;/code&gt;s need to be referenced, this should be called.                
            </javadoc>
            <method name="getAttributes" type="AttributeSet[]" line="66"/>
            <javadoc line="70">
                Inserts &lt;code&gt;as&lt;/code&gt; at &lt;code&gt;index&lt;/code&gt;. This assumes
                  the value of &lt;code&gt;index&lt;/code&gt; is between 0 and attrs.length,
                  inclusive.                
            </javadoc>
            <method name="insertAttributeSetAt" type="void" line="76">
                <params>
                    <param name="as" type="AttributeSet"/>
                    <param name="index" type="int"/>
                </params>
                <declaration name="numAttrs" type="int" line="77"/>
                <declaration name="newAttrs" type="AttributeSet" line="78"/>
                <scope line="79">
                    <scope line="80"/>
                    <scope line="85"/>
                </scope>
                <scope line="89"/>
            </method>
            <javadoc line="96">
                Removes the AttributeSet at &lt;code&gt;index&lt;/code&gt;. This assumes
                  the value of &lt;code&gt;index&lt;/code&gt; is greater than or equal to 0,
                  and less than attrs.length.                
            </javadoc>
            <method name="removeAttributeSetAt" type="void" line="101">
                <params>
                    <param name="index" type="int"/>
                </params>
                <comment line="107">
                    FIRST                    
                </comment>
                <comment line="111">
                    MIDDLE                    
                </comment>
                <comment line="117">
                    END                    
                </comment>
                <declaration name="numAttrs" type="int" line="102"/>
                <declaration name="newAttrs" type="AttributeSet[]" line="103"/>
                <scope line="104">
                    <scope line="105"/>
                    <scope line="109"/>
                    <scope line="115"/>
                </scope>
            </method>
            <javadoc line="125">
                Gets the number of attributes that are defined.                
                <return>
                    the number of attributes                    
                </return>
                <see>
                    AttributeSet#getAttributeCount                    
                </see>
            </javadoc>
            <method name="getAttributeCount" type="int" line="131">
                <declaration name="as" type="AttributeSet[]" line="132"/>
                <declaration name="n" type="int" line="133"/>
                <scope line="134"/>
            </method>
            <javadoc line="140">
                Checks whether a given attribute is defined.
                  This will convert the key over to CSS if the
                  key is a StyleConstants key that has a CSS
                  mapping.                
                <param>
                    key the attribute key                    
                </param>
                <return>
                    true if the attribute is defined                    
                </return>
                <see>
                    AttributeSet#isDefined                    
                </see>
            </javadoc>
            <method name="isDefined" type="boolean" line="150">
                <params>
                    <param name="key" type="Object"/>
                </params>
                <declaration name="as" type="AttributeSet[]" line="151"/>
                <scope line="152">
                    <scope line="153"/>
                </scope>
            </method>
            <javadoc line="160">
                Checks whether two attribute sets are equal.                
                <param>
                    attr the attribute set to check against                    
                </param>
                <return>
                    true if the same                    
                </return>
                <see>
                    AttributeSet#isEqual                    
                </see>
            </javadoc>
            <method name="isEqual" type="boolean" line="167">
                <params>
                    <param name="attr" type="AttributeSet"/>
                </params>
            </method>
            <javadoc line="172">
                Copies a set of attributes.                
                <return>
                    the copy                    
                </return>
                <see>
                    AttributeSet#copyAttributes                    
                </see>
            </javadoc>
            <method name="copyAttributes" type="AttributeSet" line="178">
                <declaration name="as" type="AttributeSet[]" line="179"/>
                <declaration name="a" type="MutableAttributeSet" line="180"/>
                <declaration name="n" type="int" line="181"/>
                <scope line="182"/>
            </method>
            <javadoc line="188">
                Gets the value of an attribute.  If the requested
                  attribute is a StyleConstants attribute that has
                  a CSS mapping, the request will be converted.                
                <param>
                    key the attribute name                    
                </param>
                <return>
                    the attribute value                    
                </return>
                <see>
                    AttributeSet#getAttribute                    
                </see>
            </javadoc>
            <method name="getAttribute" type="Object" line="197">
                <params>
                    <param name="key" type="Object"/>
                </params>
                <declaration name="as" type="AttributeSet[]" line="198"/>
                <declaration name="n" type="int" line="199"/>
                <scope line="200">
                    <declaration name="o" type="Object" line="201"/>
                    <scope line="202"/>
                </scope>
            </method>
            <javadoc line="209">
                Gets the names of all attributes.                
                <return>
                    the attribute names                    
                </return>
                <see>
                    AttributeSet#getAttributeNames                    
                </see>
            </javadoc>
            <method name="getAttributeNames" type="Enumeration" line="215"/>
            <javadoc line="219">
                Checks whether a given attribute name/value is defined.                
                <param>
                    name the attribute name                    
                </param>
                <param>
                    value the attribute value                    
                </param>
                <return>
                    true if the name/value is defined                    
                </return>
                <see>
                    AttributeSet#containsAttribute                    
                </see>
            </javadoc>
            <method name="containsAttribute" type="boolean" line="227">
                <params>
                    <param name="name" type="Object"/>
                    <param name="value" type="Object"/>
                </params>
            </method>
            <javadoc line="231">
                Checks whether the attribute set contains all of
                  the given attributes.                
                <param>
                    attrs the attributes to check                    
                </param>
                <return>
                    true if the element contains all the attributes                    
                </return>
                <see>
                    AttributeSet#containsAttributes                    
                </see>
            </javadoc>
            <method name="containsAttributes" type="boolean" line="239">
                <params>
                    <param name="attrs" type="AttributeSet"/>
                </params>
                <declaration name="result" type="boolean" line="240"/>
                <declaration name="names" type="Enumeration" line="242"/>
                <scope line="243">
                    <declaration name="name" type="Object" line="244"/>
                </scope>
            </method>
            <javadoc line="251">
                Returns null, subclasses may wish to do something more
                  intelligent with this.                
            </javadoc>
            <method name="getResolveParent" type="AttributeSet" line="255"/>
            <declaration name="attrs" type="AttributeSet[]" line="259"/>
            <javadoc line="259">
                The &lt;code&gt;AttributeSet&lt;/code&gt;s that make up the resulting
                  &lt;code&gt;AttributeSet&lt;/code&gt;.                
            </javadoc>
            <class name="MuxingAttributeNameEnumeration" line="266">
                <implements interface="Enumeration"/>
                <javadoc line="266">
                    An Enumeration of the Attribute names in a MuxingAttributeSet.
                      This may return the same name more than once.                    
                </javadoc>
                <method name="MuxingAttributeNameEnumeration" type="constructor" line="272"/>
                <method name="hasMoreElements" type="boolean" line="276">
                    <scope line="277"/>
                </method>
                <method name="nextElement" type="Object" line="283">
                    <scope line="284"/>
                    <declaration name="retObject" type="Object" line="287"/>
                    <scope line="288"/>
                </method>
                <method name="updateEnum" type="void" line="294">
                    <declaration name="as" type="AttributeSet[]" line="295"/>
                    <scope line="297">
                        <scope line="299"/>
                    </scope>
                </method>
                <declaration name="attrIndex" type="int" line="306"/>
                <javadoc line="306">
                    Index into attrs the current Enumeration came from.                    
                </javadoc>
                <declaration name="currentEnum" type="Enumeration" line="308"/>
                <javadoc line="308">
                    Enumeration from attrs.                    
                </javadoc>
            </class>
        </class>
    </source>