<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.text.html">
        <import package="javax.swing.text"/>
        <import package="java.io.Serializable"/>
        <import package="java.util"/>
        <class name="MuxingAttributeSet" line="5">
            <implements interface="AttributeSet"/>
            <implements interface="Serializable"/>
            <javadoc line="5">
                An implementation of &lt;code&gt;AttributeSet&lt;/code&gt; that can multiplex
                  across a set of &lt;code&gt;AttributeSet&lt;/code&gt;s.                
            </javadoc>
            <javadoc line="10">
                Creates a &lt;code&gt;MuxingAttributeSet&lt;/code&gt; with the passed in
                  attributes.                
            </javadoc>
            <method name="MuxingAttributeSet" type="constructor" line="14">
                <params>
                    <param name="attrs" type="AttributeSet[]"/>
                </params>
            </method>
            <javadoc line="17">
                Creates an empty &lt;code&gt;MuxingAttributeSet&lt;/code&gt;. This is intended for
                  use by subclasses only, and it is also intended that subclasses will
                  set the constituent &lt;code&gt;AttributeSet&lt;/code&gt;s before invoking any
                  of the &lt;code&gt;AttributeSet&lt;/code&gt; methods.                
            </javadoc>
            <method name="MuxingAttributeSet" type="constructor" line="23"/>
            <javadoc line="25">
                Directly sets the &lt;code&gt;AttributeSet&lt;/code&gt;s that comprise this
                  &lt;code&gt;MuxingAttributeSet&lt;/code&gt;.                
            </javadoc>
            <method name="setAttributes" type="void" line="29">
                <params>
                    <param name="attrs" type="AttributeSet[]"/>
                </params>
            </method>
            <javadoc line="32">
                Returns the &lt;code&gt;AttributeSet&lt;/code&gt;s multiplexing too. When the
                  &lt;code&gt;AttributeSet&lt;/code&gt;s need to be referenced, this should be called.                
            </javadoc>
            <method name="getAttributes" type="AttributeSet[]" line="36"/>
            <javadoc line="39">
                Inserts &lt;code&gt;as&lt;/code&gt; at &lt;code&gt;index&lt;/code&gt;. This assumes
                  the value of &lt;code&gt;index&lt;/code&gt; is between 0 and attrs.length,
                  inclusive.                
            </javadoc>
            <method name="insertAttributeSetAt" type="void" line="44">
                <params>
                    <param name="as" type="AttributeSet"/>
                    <param name="index" type="int"/>
                </params>
                <declaration name="numAttrs" type="int" line="45"/>
                <declaration name="newAttrs" type="AttributeSet" line="46"/>
                <scope line="47">
                    <scope line="48"/>
                    <scope line="52"/>
                </scope>
                <scope line="56"/>
            </method>
            <javadoc line="62">
                Removes the AttributeSet at &lt;code&gt;index&lt;/code&gt;. This assumes
                  the value of &lt;code&gt;index&lt;/code&gt; is greater than or equal to 0,
                  and less than attrs.length.                
            </javadoc>
            <method name="removeAttributeSetAt" type="void" line="67">
                <params>
                    <param name="index" type="int"/>
                </params>
                <declaration name="numAttrs" type="int" line="68"/>
                <declaration name="newAttrs" type="AttributeSet[]" line="69"/>
                <scope line="70">
                    <scope line="71"/>
                    <scope line="74"/>
                    <scope line="78"/>
                </scope>
            </method>
            <javadoc line="84">
                Gets the number of attributes that are defined.                
                <return>
                    the number of attributes                    
                </return>
                <see>
                    AttributeSet#getAttributeCount                    
                </see>
            </javadoc>
            <method name="getAttributeCount" type="int" line="89">
                <declaration name="as" type="AttributeSet[]" line="90"/>
                <declaration name="n" type="int" line="91"/>
                <scope line="92"/>
            </method>
            <javadoc line="97">
                Checks whether a given attribute is defined.
                  This will convert the key over to CSS if the
                  key is a StyleConstants key that has a CSS
                  mapping.                
                <param>
                    key the attribute key                    
                </param>
                <return>
                    true if the attribute is defined                    
                </return>
                <see>
                    AttributeSet#isDefined                    
                </see>
            </javadoc>
            <method name="isDefined" type="boolean" line="106">
                <params>
                    <param name="key" type="Object"/>
                </params>
                <declaration name="as" type="AttributeSet[]" line="107"/>
                <scope line="108">
                    <scope line="109"/>
                </scope>
            </method>
            <javadoc line="115">
                Checks whether two attribute sets are equal.                
                <param>
                    attr the attribute set to check against                    
                </param>
                <return>
                    true if the same                    
                </return>
                <see>
                    AttributeSet#isEqual                    
                </see>
            </javadoc>
            <method name="isEqual" type="boolean" line="121">
                <params>
                    <param name="attr" type="AttributeSet"/>
                </params>
            </method>
            <javadoc line="124">
                Copies a set of attributes.                
                <return>
                    the copy                    
                </return>
                <see>
                    AttributeSet#copyAttributes                    
                </see>
            </javadoc>
            <method name="copyAttributes" type="AttributeSet" line="129">
                <declaration name="as" type="AttributeSet[]" line="130"/>
                <declaration name="a" type="MutableAttributeSet" line="131"/>
                <declaration name="n" type="int" line="132"/>
                <scope line="133"/>
            </method>
            <javadoc line="138">
                Gets the value of an attribute.  If the requested
                  attribute is a StyleConstants attribute that has
                  a CSS mapping, the request will be converted.                
                <param>
                    key the attribute name                    
                </param>
                <return>
                    the attribute value                    
                </return>
                <see>
                    AttributeSet#getAttribute                    
                </see>
            </javadoc>
            <method name="getAttribute" type="Object" line="146">
                <params>
                    <param name="key" type="Object"/>
                </params>
                <declaration name="as" type="AttributeSet[]" line="147"/>
                <declaration name="n" type="int" line="148"/>
                <scope line="149">
                    <declaration name="o" type="Object" line="150"/>
                    <scope line="151"/>
                </scope>
            </method>
            <javadoc line="157">
                Gets the names of all attributes.                
                <return>
                    the attribute names                    
                </return>
                <see>
                    AttributeSet#getAttributeNames                    
                </see>
            </javadoc>
            <method name="getAttributeNames" type="Enumeration" line="162"/>
            <javadoc line="165">
                Checks whether a given attribute name/value is defined.                
                <param>
                    name the attribute name                    
                </param>
                <param>
                    value the attribute value                    
                </param>
                <return>
                    true if the name/value is defined                    
                </return>
                <see>
                    AttributeSet#containsAttribute                    
                </see>
            </javadoc>
            <method name="containsAttribute" type="boolean" line="172">
                <params>
                    <param name="name" type="Object"/>
                    <param name="value" type="Object"/>
                </params>
            </method>
            <javadoc line="175">
                Checks whether the attribute set contains all of
                  the given attributes.                
                <param>
                    attrs the attributes to check                    
                </param>
                <return>
                    true if the element contains all the attributes                    
                </return>
                <see>
                    AttributeSet#containsAttributes                    
                </see>
            </javadoc>
            <method name="containsAttributes" type="boolean" line="182">
                <params>
                    <param name="attrs" type="AttributeSet"/>
                </params>
                <declaration name="result" type="boolean" line="183"/>
                <declaration name="names" type="Enumeration" line="184"/>
                <scope line="185">
                    <declaration name="name" type="Object" line="186"/>
                </scope>
            </method>
            <javadoc line="191">
                Returns null, subclasses may wish to do something more
                  intelligent with this.                
            </javadoc>
            <method name="getResolveParent" type="AttributeSet" line="195"/>
            <declaration name="attrs" type="AttributeSet[]" line="198"/>
            <javadoc line="198">
                The &lt;code&gt;AttributeSet&lt;/code&gt;s that make up the resulting
                  &lt;code&gt;AttributeSet&lt;/code&gt;.                
            </javadoc>
            <class name="MuxingAttributeNameEnumeration" line="203">
                <implements interface="Enumeration"/>
                <javadoc line="203">
                    An Enumeration of the Attribute names in a MuxingAttributeSet.
                      This may return the same name more than once.                    
                </javadoc>
                <method name="MuxingAttributeNameEnumeration" type="constructor" line="208"/>
                <method name="hasMoreElements" type="boolean" line="211">
                    <scope line="212"/>
                </method>
                <method name="nextElement" type="Object" line="217">
                    <scope line="218"/>
                    <declaration name="retObject" type="Object" line="221"/>
                    <scope line="222"/>
                </method>
                <method name="updateEnum" type="void" line="227">
                    <declaration name="as" type="AttributeSet[]" line="228"/>
                    <scope line="230">
                        <scope line="232"/>
                    </scope>
                </method>
                <declaration name="attrIndex" type="int" line="237"/>
                <javadoc line="237">
                    Index into attrs the current Enumeration came from.                    
                </javadoc>
                <declaration name="currentEnum" type="Enumeration" line="241"/>
                <javadoc line="241">
                    Enumeration from attrs.                    
                </javadoc>
            </class>
        </class>
    </source>