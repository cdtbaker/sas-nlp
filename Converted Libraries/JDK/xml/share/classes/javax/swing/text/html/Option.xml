<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.text.html">
        <import package="java.io.Serializable"/>
        <import package="javax.swing.text"/>
        <class name="Option" line="4">
            <implements interface="Serializable"/>
            <javadoc line="4">
                Value for the ListModel used to represent
                  &amp;lt;option&amp;gt; elements.  This is the object
                  installed as items of the DefaultComboBoxModel
                  used to represent the &amp;lt;select&amp;gt; element.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases. The current serialization support is
                  appropriate for short term storage or RMI between applications running
                  the same version of Swing.  As of 1.4, support for long term storage
                  of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                  has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                  Please see {@link java.beans.XMLEncoder}.                
                <author>
                    Timothy Prinzing                    
                </author>
            </javadoc>
            <javadoc line="21">
                Creates a new Option object.                
                <param>
                    attr the attributes associated with the
                      option element.  The attributes are copied to
                      ensure they won't change.                    
                </param>
            </javadoc>
            <method name="Option" type="constructor" line="27">
                <params>
                    <param name="attr" type="AttributeSet"/>
                </params>
            </method>
            <javadoc line="31">
                Sets the label to be used for the option.                
            </javadoc>
            <method name="setLabel" type="void" line="34">
                <params>
                    <param name="label" type="String"/>
                </params>
            </method>
            <javadoc line="37">
                Fetch the label associated with the option.                
            </javadoc>
            <method name="getLabel" type="String" line="40"/>
            <javadoc line="43">
                Fetch the attributes associated with this option.                
            </javadoc>
            <method name="getAttributes" type="AttributeSet" line="46"/>
            <javadoc line="49">
                String representation is the label.                
            </javadoc>
            <method name="toString" type="String" line="52"/>
            <javadoc line="55">
                Sets the selected state.                
            </javadoc>
            <method name="setSelection" type="void" line="58">
                <params>
                    <param name="state" type="boolean"/>
                </params>
            </method>
            <javadoc line="61">
                Fetches the selection state associated with this option.                
            </javadoc>
            <method name="isSelected" type="boolean" line="64"/>
            <javadoc line="67">
                Convenience method to return the string associated
                  with the &lt;code&gt;value&lt;/code&gt; attribute.  If the
                  value has not been specified, the label will be
                  returned.                
            </javadoc>
            <method name="getValue" type="String" line="73">
                <declaration name="value" type="String" line="74"/>
                <scope line="75"/>
            </method>
            <declaration name="selected" type="boolean" line="80"/>
            <declaration name="label" type="String" line="81"/>
            <declaration name="attr" type="AttributeSet" line="82"/>
        </class>
    </source>