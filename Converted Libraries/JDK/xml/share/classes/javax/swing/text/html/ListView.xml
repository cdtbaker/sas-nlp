<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.text.html">
        <import package="java.util.Enumeration"/>
        <import package="java.awt"/>
        <import package="javax.swing.text"/>
        <class name="ListView" line="5">
            <extends class="BlockView"/>
            <javadoc line="5">
                A view implementation to display an html list                
                <author>
                    Timothy Prinzing                    
                </author>
            </javadoc>
            <javadoc line="10">
                Creates a new view that represents a list element.                
                <param>
                    elem the element to create a view for                    
                </param>
            </javadoc>
            <method name="ListView" type="constructor" line="14">
                <params>
                    <param name="elem" type="Element"/>
                </params>
            </method>
            <javadoc line="17">
                Calculates the desired shape of the list.                
                <return>
                    the desired span                    
                </return>
                <see>
                    View#getPreferredSpan                    
                </see>
            </javadoc>
            <method name="getAlignment" type="float" line="22">
                <params>
                    <param name="axis" type="int"/>
                </params>
            </method>
            <javadoc line="32">
                Renders using the given rendering surface and area on that
                  surface.                
                <param>
                    g the rendering surface to use                    
                </param>
                <param>
                    allocation the allocated region to render into                    
                </param>
                <see>
                    View#paint                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="39">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="allocation" type="Shape"/>
                </params>
                <declaration name="alloc" type="Rectangle" line="41"/>
                <declaration name="clip" type="Rectangle" line="42"/>
                <scope line="43">
                    <declaration name="childRect" type="Rectangle" line="44"/>
                    <declaration name="n" type="int" line="46"/>
                    <declaration name="endY" type="int" line="47"/>
                    <scope line="48">
                        <scope line="51">
                            <scope line="52"/>
                        </scope>
                        <scope line="56"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="62">
                Paints one of the children; called by paint().  By default
                  that is all it does, but a subclass can use this to paint
                  things relative to the child.                
                <param>
                    g the graphics context                    
                </param>
                <param>
                    alloc the allocated region to render the child into                    
                </param>
                <param>
                    index the index of the child                    
                </param>
            </javadoc>
            <method name="paintChild" type="void" line="70">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="alloc" type="Rectangle"/>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="setPropertiesFromAttributes" type="void" line="74"/>
            <declaration name="listPainter" type="StyleSheet.ListPainter" line="78"/>
        </class>
    </source>