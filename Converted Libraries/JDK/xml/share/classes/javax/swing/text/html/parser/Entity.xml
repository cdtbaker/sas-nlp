<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.text.html.parser">
        <import package="java.util.Hashtable"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.InputStreamReader"/>
        <import package="java.io.Reader"/>
        <import package="java.io.CharArrayReader"/>
        <import package="java.net.URL"/>
        <class name="Entity" line="9">
            <implements interface="DTDConstants"/>
            <javadoc line="9">
                An entity is described in a DTD using the ENTITY construct.
                  It defines the type and value of the the entity.                
                <see>
                    DTD                    
                </see>
                <author>
                    Arthur van Hoff                    
                </author>
            </javadoc>
            <declaration name="name" type="String" line="16"/>
            <declaration name="type" type="int" line="17"/>
            <declaration name="data" type="char" line="18"/>
            <javadoc line="19">
                Creates an entity.                
                <param>
                    name the name of the entity                    
                </param>
                <param>
                    type the type of the entity                    
                </param>
                <param>
                    data the char array of data                    
                </param>
            </javadoc>
            <method name="Entity" type="constructor" line="25">
                <params>
                    <param name="name" type="String"/>
                    <param name="type" type="int"/>
                    <param name="data" type="char"/>
                </params>
            </method>
            <javadoc line="30">
                Gets the name of the entity.                
                <return>
                    the name of the entity, as a &lt;code&gt;String&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getName" type="String" line="34"/>
            <javadoc line="37">
                Gets the type of the entity.                
                <return>
                    the type of the entity                    
                </return>
            </javadoc>
            <method name="getType" type="int" line="41"/>
            <javadoc line="44">
                Returns &lt;code&gt;true&lt;/code&gt; if it is a parameter entity.                
                <return>
                    &lt;code&gt;true&lt;/code&gt; if it is a parameter entity                    
                </return>
            </javadoc>
            <method name="isParameter" type="boolean" line="48"/>
            <javadoc line="51">
                Returns &lt;code&gt;true&lt;/code&gt; if it is a general entity.                
                <return>
                    &lt;code&gt;true&lt;/code&gt; if it is a general entity                    
                </return>
            </javadoc>
            <method name="isGeneral" type="boolean" line="55"/>
            <javadoc line="58">
                Returns the &lt;code&gt;data&lt;/code&gt;.                
                <return>
                    the &lt;code&gt;data&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getData" type="char" line="62"/>
            <javadoc line="65">
                Returns the data as a &lt;code&gt;String&lt;/code&gt;.                
                <return>
                    the data as a &lt;code&gt;String&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getString" type="String" line="69"/>
            <declaration name="entityTypes" type="Hashtable&amp;lt;String,Integer&amp;gt;" line="72"/>
            <scope line="73"/>
            <javadoc line="84">
                Converts &lt;code&gt;nm&lt;/code&gt; string to the corresponding
                  entity type.  If the string does not have a corresponding
                  entity type, returns the type corresponding to &quot;CDATA&quot;.
                  Valid entity types are: &quot;PUBLIC&quot;, &quot;CDATA&quot;, &quot;SDATA&quot;, &quot;PI&quot;,
                  &quot;STARTTAG&quot;, &quot;ENDTAG&quot;, &quot;MS&quot;, &quot;MD&quot;, &quot;SYSTEM&quot;.                
                <param>
                    nm the string to be converted                    
                </param>
                <return>
                    the corresponding entity type, or the type corresponding
                      to &quot;CDATA&quot;, if none exists                    
                </return>
            </javadoc>
            <method name="name2type" type="int" line="94">
                <params>
                    <param name="nm" type="String"/>
                </params>
                <declaration name="i" type="Integer" line="95"/>
            </method>
        </class>
    </source>