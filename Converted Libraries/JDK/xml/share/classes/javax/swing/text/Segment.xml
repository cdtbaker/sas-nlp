<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.text">
        <import package="java.text.CharacterIterator"/>
        <class name="Segment" line="29">
            <comment line="125">
                --- CharacterIterator methods -------------------------------------                
            </comment>
            <comment line="256">
                --- CharSequence methods -------------------------------------                
            </comment>
            <implements interface="Cloneable"/>
            <implements interface="CharacterIterator"/>
            <implements interface="CharSequence"/>
            <javadoc line="29">
                A segment of a character array representing a fragment
                  of text.  It should be treated as immutable even though
                  the array is directly accessible.  This gives fast access
                  to fragments of text without the overhead of copying
                  around characters.  This is effectively an unprotected
                  String.
                  &lt;p&gt;
                  The Segment implements the java.text.CharacterIterator
                  interface to support use with the i18n support without
                  copying text into a string.                
                <author>
                    Timothy Prinzing                    
                </author>
            </javadoc>
            <declaration name="array" type="char[]" line="45"/>
            <javadoc line="45">
                This is the array containing the text of
                  interest.  This array should never be modified;
                  it is available only for efficiency.                
            </javadoc>
            <declaration name="offset" type="int" line="52"/>
            <javadoc line="52">
                This is the offset into the array that
                  the desired text begins.                
            </javadoc>
            <declaration name="count" type="int" line="58"/>
            <javadoc line="58">
                This is the number of array elements that
                  make up the text of interest.                
            </javadoc>
            <declaration name="partialReturn" type="boolean" line="64"/>
            <javadoc line="66">
                Creates a new segment.                
            </javadoc>
            <method name="Segment" type="constructor" line="69"/>
            <javadoc line="73">
                Creates a new segment referring to an existing array.                
                <param>
                    array the array to refer to                    
                </param>
                <param>
                    offset the offset into the array                    
                </param>
                <param>
                    count the number of characters                    
                </param>
            </javadoc>
            <method name="Segment" type="constructor" line="80">
                <params>
                    <param name="array" type="char[]"/>
                    <param name="offset" type="int"/>
                    <param name="count" type="int"/>
                </params>
            </method>
            <javadoc line="87">
                Flag to indicate that partial returns are valid.  If the flag is true,
                  an implementation of the interface method Document.getText(position,length,Segment)
                  should return as much text as possible without making a copy.  The default
                  state of the flag is false which will cause Document.getText(position,length,Segment)
                  to provide the same return behavior it always had, which may or may not
                  make a copy of the text depending upon the request.                
                <param>
                    p whether or not partial returns are valid.                    
                </param>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="setPartialReturn" type="void" line="98">
                <params>
                    <param name="p" type="boolean"/>
                </params>
            </method>
            <javadoc line="102">
                Flag to indicate that partial returns are valid.                
                <return>
                    whether or not partial returns are valid.                    
                </return>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="isPartialReturn" type="boolean" line="108"/>
            <javadoc line="112">
                Converts a segment into a String.                
                <return>
                    the string                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="117">
                <scope line="118"/>
            </method>
            <javadoc line="126">
                Sets the position to getBeginIndex() and returns the character at that
                  position.                
                <return>
                    the first character in the text, or DONE if the text is empty                    
                </return>
                <see>
                    #getBeginIndex                    
                </see>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="first" type="char" line="133">
                <scope line="135"/>
            </method>
            <javadoc line="141">
                Sets the position to getEndIndex()-1 (getEndIndex() if the text is empty)
                  and returns the character at that position.                
                <return>
                    the last character in the text, or DONE if the text is empty                    
                </return>
                <see>
                    #getEndIndex                    
                </see>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="last" type="char" line="148">
                <scope line="150"/>
            </method>
            <javadoc line="157">
                Gets the character at the current position (as returned by getIndex()).                
                <return>
                    the character at the current position or DONE if the current
                      position is off the end of the text.                    
                </return>
                <see>
                    #getIndex                    
                </see>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="current" type="char" line="164">
                <scope line="165"/>
            </method>
            <javadoc line="171">
                Increments the iterator&apos;s index by one and returns the character
                  at the new index.  If the resulting index is greater or equal
                  to getEndIndex(), the current index is reset to getEndIndex() and
                  a value of DONE is returned.                
                <return>
                    the character at the new position or DONE if the new
                      position is off the end of the text range.                    
                </return>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="next" type="char" line="180">
                <declaration name="end" type="int" line="182"/>
                <scope line="183"/>
            </method>
            <javadoc line="190">
                Decrements the iterator&apos;s index by one and returns the character
                  at the new index. If the current index is getBeginIndex(), the index
                  remains at getBeginIndex() and a value of DONE is returned.                
                <return>
                    the character at the new position or DONE if the current
                      position is equal to getBeginIndex().                    
                </return>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="previous" type="char" line="198">
                <scope line="199"/>
            </method>
            <javadoc line="206">
                Sets the position to the specified position in the text and returns that
                  character.                
                <param>
                    position the position within the text.  Valid values range from
                      getBeginIndex() to getEndIndex().  An IllegalArgumentException is thrown
                      if an invalid value is supplied.                    
                </param>
                <return>
                    the character at the specified position or DONE if the specified position is equal to getEndIndex()                    
                </return>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="setIndex" type="char" line="215">
                <params>
                    <param name="position" type="int"/>
                </params>
                <declaration name="end" type="int" line="216"/>
                <scope line="217"/>
                <scope line="221"/>
            </method>
            <javadoc line="227">
                Returns the start index of the text.                
                <return>
                    the index at which the text begins.                    
                </return>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="getBeginIndex" type="int" line="232"/>
            <javadoc line="236">
                Returns the end index of the text.  This index is the index of the first
                  character following the end of the text.                
                <return>
                    the index after the last character in the text                    
                </return>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="getEndIndex" type="int" line="242"/>
            <javadoc line="246">
                Returns the current index.                
                <return>
                    the current index.                    
                </return>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="getIndex" type="int" line="251"/>
            <javadoc line="257">
                {@inheritDoc}                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="charAt" type="char" line="261">
                <params>
                    <param name="index" type="int"/>
                </params>
                <scope line="263"/>
            </method>
            <javadoc line="269">
                {@inheritDoc}                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="length" type="int" line="273"/>
            <javadoc line="277">
                {@inheritDoc}                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="subSequence" type="CharSequence" line="281">
                <params>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <scope line="282"/>
                <scope line="285"/>
                <scope line="288"/>
                <declaration name="segment" type="Segment" line="291"/>
            </method>
            <javadoc line="298">
                Creates a shallow copy.                
                <return>
                    the copy                    
                </return>
            </javadoc>
            <method name="clone" type="Object" line="303">
                <declaration name="o" type="Object" line="304"/>
                <scope line="305"/>
                <scope line="307"/>
            </method>
            <declaration name="pos" type="int" line="313"/>
        </class>
    </source>