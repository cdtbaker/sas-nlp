<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing">
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.Serializable"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Set"/>
        <class name="ActionMap" line="8">
            <implements interface="Serializable"/>
            <javadoc line="8">
                &lt;code&gt;ActionMap&lt;/code&gt; provides mappings from
                  &lt;code&gt;Object&lt;/code&gt;s
                  (called &lt;em&gt;keys&lt;/em&gt; or &lt;em&gt;&lt;code&gt;Action&lt;/code&gt; names&lt;/em&gt;)
                  to &lt;code&gt;Action&lt;/code&gt;s.
                  An &lt;code&gt;ActionMap&lt;/code&gt; is usually used with an &lt;code&gt;InputMap&lt;/code&gt;
                  to locate a particular action
                  when a key is pressed. As with &lt;code&gt;InputMap&lt;/code&gt;,
                  an &lt;code&gt;ActionMap&lt;/code&gt; can have a parent
                  that is searched for keys not defined in the &lt;code&gt;ActionMap&lt;/code&gt;.
                  &lt;p&gt;As with &lt;code&gt;InputMap&lt;/code&gt; if you create a cycle, eg:
                  &lt;pre&gt;
                  ActionMap am = new ActionMap();
                  ActionMap bm = new ActionMap():
                  am.setParent(bm);
                  bm.setParent(am);
                  &lt;/pre&gt;
                  some of the methods will cause a StackOverflowError to be thrown.                
                <see>
                    InputMap                    
                </see>
                <author>
                    Scott Violet                    
                </author>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <declaration name="arrayTable" type="ArrayTable" line="31"/>
            <javadoc line="31">
                Handles the mapping between Action name and Action.                
            </javadoc>
            <declaration name="parent" type="ActionMap" line="35"/>
            <javadoc line="35">
                Parent that handles any bindings we don&apos;t contain.                
            </javadoc>
            <javadoc line="39">
                Creates an &lt;code&gt;ActionMap&lt;/code&gt; with no parent and no mappings.                
            </javadoc>
            <method name="ActionMap" type="constructor" line="42"/>
            <javadoc line="44">
                Sets this &lt;code&gt;ActionMap&lt;/code&gt;&apos;s parent.                
                <param>
                    map  the <code>ActionMap</code> that is the parent of this one                    
                </param>
            </javadoc>
            <method name="setParent" type="void" line="48">
                <params>
                    <param name="map" type="ActionMap"/>
                </params>
            </method>
            <javadoc line="51">
                Returns this &lt;code&gt;ActionMap&lt;/code&gt;&apos;s parent.                
                <return>
                    the <code>ActionMap</code> that is the parent of this one,
                      or null if this <code>ActionMap</code> has no parent                    
                </return>
            </javadoc>
            <method name="getParent" type="ActionMap" line="56"/>
            <javadoc line="59">
                Adds a binding for &lt;code&gt;key&lt;/code&gt; to &lt;code&gt;action&lt;/code&gt;.
                  If &lt;code&gt;action&lt;/code&gt; is null, this removes the current binding
                  for &lt;code&gt;key&lt;/code&gt;.
                  &lt;p&gt;In most instances, &lt;code&gt;key&lt;/code&gt; will be
                  &lt;code&gt;action.getValue(NAME)&lt;/code&gt;.                
            </javadoc>
            <method name="put" type="void" line="66">
                <params>
                    <param name="key" type="Object"/>
                    <param name="action" type="Action"/>
                </params>
                <scope line="67"/>
                <scope line="70"/>
                <scope line="73">
                    <scope line="74"/>
                </scope>
            </method>
            <javadoc line="80">
                Returns the binding for &lt;code&gt;key&lt;/code&gt;, messaging the
                  parent &lt;code&gt;ActionMap&lt;/code&gt; if the binding is not locally defined.                
            </javadoc>
            <method name="get" type="Action" line="84">
                <params>
                    <param name="key" type="Object"/>
                </params>
                <declaration name="value" type="Action" line="85"/>
                <scope line="86">
                    <declaration name="parent" type="ActionMap" line="87"/>
                    <scope line="88"/>
                </scope>
            </method>
            <javadoc line="94">
                Removes the binding for &lt;code&gt;key&lt;/code&gt; from this &lt;code&gt;ActionMap&lt;/code&gt;.                
            </javadoc>
            <method name="remove" type="void" line="97">
                <params>
                    <param name="key" type="Object"/>
                </params>
                <scope line="98"/>
            </method>
            <javadoc line="102">
                Removes all the mappings from this &lt;code&gt;ActionMap&lt;/code&gt;.                
            </javadoc>
            <method name="clear" type="void" line="105">
                <scope line="106"/>
            </method>
            <javadoc line="110">
                Returns the &lt;code&gt;Action&lt;/code&gt; names that are bound in this &lt;code&gt;ActionMap&lt;/code&gt;.                
            </javadoc>
            <method name="keys" type="Object[]" line="113">
                <scope line="114"/>
            </method>
            <javadoc line="119">
                Returns the number of bindings in this {@code ActionMap}.                
                <return>
                    the number of bindings in this {@code ActionMap}                    
                </return>
            </javadoc>
            <method name="size" type="int" line="123">
                <scope line="124"/>
            </method>
            <javadoc line="129">
                Returns an array of the keys defined in this &lt;code&gt;ActionMap&lt;/code&gt; and
                  its parent. This method differs from &lt;code&gt;keys()&lt;/code&gt; in that
                  this method includes the keys defined in the parent.                
            </javadoc>
            <method name="allKeys" type="Object[]" line="134">
                <declaration name="count" type="int" line="135"/>
                <declaration name="parent" type="ActionMap" line="136"/>
                <scope line="137">
                    <scope line="138"/>
                </scope>
                <scope line="143"/>
                <declaration name="keys" type="Object[]" line="146"/>
                <declaration name="pKeys" type="Object[]" line="147"/>
                <scope line="148"/>
                <scope line="151"/>
                <declaration name="keyMap" type="HashMap&lt;Object,Object&gt;" line="154"/>
                <declaration name="counter" type="int" line="155"/>
                <scope line="156"/>
                <scope line="159"/>
            </method>
            <method name="writeObject" type="void" line="164">
                <params>
                    <param name="s" type="ObjectOutputStream"/>
                </params>
            </method>
            <method name="readObject" type="void" line="168">
                <params>
                    <param name="s" type="ObjectInputStream"/>
                </params>
                <scope line="170"/>
            </method>
        </class>
    </source>