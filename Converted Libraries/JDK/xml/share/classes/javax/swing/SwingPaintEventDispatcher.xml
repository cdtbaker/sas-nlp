<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing">
        <import package="java.awt.Component"/>
        <import package="java.awt.Container"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.event.PaintEvent"/>
        <import package="java.security.AccessController"/>
        <import package="sun.awt.AppContext"/>
        <import package="sun.awt.SunToolkit"/>
        <import package="sun.awt.event.IgnorePaintEvent"/>
        <import package="sun.security.action.GetBooleanAction"/>
        <import package="sun.security.action.GetPropertyAction"/>
        <class name="SwingPaintEventDispatcher" line="38">
            <extends class="sun.awt.PaintEventDispatcher"/>
            <javadoc line="38">
                Swing&apos;s PaintEventDispatcher.  If the component specified by the PaintEvent
                  is a top level Swing component (JFrame, JWindow, JDialog, JApplet), this
                  will forward the request to the RepaintManager for eventual painting.                
            </javadoc>
            <declaration name="SHOW_FROM_DOUBLE_BUFFER" type="boolean" line="45"/>
            <declaration name="ERASE_BACKGROUND" type="boolean" line="46"/>
            <scope line="48"/>
            <method name="createPaintEvent" type="PaintEvent" line="56">
                <params>
                    <param name="component" type="Component"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <comment line="65">
                    For backward compatibility generate an empty paint                    
                </comment>
                <comment line="66">
                    event.  Not doing this broke parts of Netbeans.                    
                </comment>
                <scope line="57">
                    <declaration name="appContext" type="AppContext" line="58"/>
                    <declaration name="rm" type="RepaintManager" line="59"/>
                    <scope line="61"/>
                </scope>
                <scope line="70">
                    <declaration name="appContext" type="AppContext" line="71"/>
                    <declaration name="rm" type="RepaintManager" line="72"/>
                </scope>
            </method>
            <method name="shouldDoNativeBackgroundErase" type="boolean" line="81">
                <params>
                    <param name="c" type="Component"/>
                </params>
            </method>
            <method name="queueSurfaceDataReplacing" type="boolean" line="85">
                <params>
                    <param name="c" type="Component"/>
                    <param name="r" type="Runnable"/>
                </params>
                <scope line="86">
                    <declaration name="appContext" type="AppContext" line="87"/>
                </scope>
            </method>
        </class>
    </source>