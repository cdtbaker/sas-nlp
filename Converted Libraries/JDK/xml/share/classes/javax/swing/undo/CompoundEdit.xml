<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.undo">
        <import package="java.util"/>
        <class name="CompoundEdit" line="29">
            <extends class="AbstractUndoableEdit"/>
            <javadoc line="29">
                A concrete subclass of AbstractUndoableEdit, used to assemble little
                  UndoableEdits into great big ones.                
                <author>
                    Ray Ryan                    
                </author>
            </javadoc>
            <declaration name="inProgress" type="boolean" line="36"/>
            <javadoc line="36">
                True if this edit has never received &lt;code&gt;end&lt;/code&gt;.                
            </javadoc>
            <declaration name="edits" type="Vector&lt;UndoableEdit&gt;" line="41"/>
            <javadoc line="41">
                The collection of &lt;code&gt;UndoableEdit&lt;/code&gt;s
                  undone/redone en masse by this &lt;code&gt;CompoundEdit&lt;/code&gt;.                
            </javadoc>
            <method name="CompoundEdit" type="constructor" line="47"/>
            <javadoc line="53">
                Sends &lt;code&gt;undo&lt;/code&gt; to all contained
                  &lt;code&gt;UndoableEdits&lt;/code&gt; in the reverse of
                  the order in which they were added.                
            </javadoc>
            <method name="undo" type="void" line="58">
                <declaration name="i" type="int" line="60"/>
                <scope line="61">
                    <declaration name="e" type="UndoableEdit" line="62"/>
                </scope>
            </method>
            <javadoc line="67">
                Sends &lt;code&gt;redo&lt;/code&gt; to all contained
                  &lt;code&gt;UndoableEdit&lt;/code&gt;s in the order in
                  which they were added.                
            </javadoc>
            <method name="redo" type="void" line="72">
                <declaration name="cursor" type="Enumeration" line="74"/>
                <scope line="75"/>
            </method>
            <javadoc line="80">
                Returns the last &lt;code&gt;UndoableEdit&lt;/code&gt; in
                  &lt;code&gt;edits&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt;
                  if &lt;code&gt;edits&lt;/code&gt; is empty.                
            </javadoc>
            <method name="lastEdit" type="UndoableEdit" line="85">
                <declaration name="count" type="int" line="86"/>
            </method>
            <javadoc line="93">
                Sends &lt;code&gt;die&lt;/code&gt; to each subedit,
                  in the reverse of the order that they were added.                
            </javadoc>
            <method name="die" type="void" line="97">
                <comment line="102">
                    System.out.println(&quot;CompoundEdit(&quot; + i + &quot;): Discarding &quot; +                    
                </comment>
                <comment line="103">
                    e.getUndoPresentationName());                    
                </comment>
                <declaration name="size" type="int" line="98"/>
                <scope line="100">
                    <declaration name="e" type="UndoableEdit" line="101"/>
                </scope>
            </method>
            <javadoc line="109">
                If this edit is &lt;code&gt;inProgress&lt;/code&gt;,
                  accepts &lt;code&gt;anEdit&lt;/code&gt; and returns true.
                  &lt;p&gt;The last edit added to this &lt;code&gt;CompoundEdit&lt;/code&gt;
                  is given a chance to &lt;code&gt;addEdit(anEdit)&lt;/code&gt;.
                  If it refuses (returns false), &lt;code&gt;anEdit&lt;/code&gt; is
                  given a chance to &lt;code&gt;replaceEdit&lt;/code&gt; the last edit.
                  If &lt;code&gt;anEdit&lt;/code&gt; returns false here,
                  it is added to &lt;code&gt;edits&lt;/code&gt;.                
                <param>
                    anEdit the edit to be added                    
                </param>
                <return>
                    true if the edit is <code>inProgress</code>;
                      otherwise returns false                    
                </return>
            </javadoc>
            <method name="addEdit" type="boolean" line="124">
                <params>
                    <param name="anEdit" type="UndoableEdit"/>
                </params>
                <comment line="130">
                    If this is the first subedit received, just add it.                    
                </comment>
                <comment line="131">
                    Otherwise, give the last one a chance to absorb the new                    
                </comment>
                <comment line="132">
                    one.  If it won&apos;t, give the new one a chance to absorb                    
                </comment>
                <comment line="133">
                    the last one.                    
                </comment>
                <scope line="125"/>
                <scope line="127">
                    <declaration name="last" type="UndoableEdit" line="128"/>
                    <scope line="135"/>
                    <scope line="138">
                        <scope line="139"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="149">
                Sets &lt;code&gt;inProgress&lt;/code&gt; to false.                
                <see>
                    #canUndo                    
                </see>
                <see>
                    #canRedo                    
                </see>
            </javadoc>
            <method name="end" type="void" line="155"/>
            <javadoc line="159">
                Returns false if &lt;code&gt;isInProgress&lt;/code&gt; or if super
                  returns false.                
                <see>
                    #isInProgress                    
                </see>
            </javadoc>
            <method name="canUndo" type="boolean" line="165"/>
            <javadoc line="169">
                Returns false if &lt;code&gt;isInProgress&lt;/code&gt; or if super
                  returns false.                
                <see>
                    #isInProgress                    
                </see>
            </javadoc>
            <method name="canRedo" type="boolean" line="175"/>
            <javadoc line="179">
                Returns true if this edit is in progress--that is, it has not
                  received end. This generally means that edits are still being
                  added to it.                
                <see>
                    #end                    
                </see>
            </javadoc>
            <method name="isInProgress" type="boolean" line="186"/>
            <javadoc line="190">
                Returns true if any of the &lt;code&gt;UndoableEdit&lt;/code&gt;s
                  in &lt;code&gt;edits&lt;/code&gt; do.
                  Returns false if they all return false.                
            </javadoc>
            <method name="isSignificant" type="boolean" line="195">
                <declaration name="cursor" type="Enumeration" line="196"/>
                <scope line="197">
                    <scope line="198"/>
                </scope>
            </method>
            <javadoc line="205">
                Returns &lt;code&gt;getPresentationName&lt;/code&gt; from the
                  last &lt;code&gt;UndoableEdit&lt;/code&gt; added to
                  &lt;code&gt;edits&lt;/code&gt;. If &lt;code&gt;edits&lt;/code&gt; is empty,
                  calls super.                
            </javadoc>
            <method name="getPresentationName" type="String" line="211">
                <declaration name="last" type="UndoableEdit" line="212"/>
                <scope line="213"/>
                <scope line="215"/>
            </method>
            <javadoc line="220">
                Returns &lt;code&gt;getUndoPresentationName&lt;/code&gt;
                  from the last &lt;code&gt;UndoableEdit&lt;/code&gt;
                  added to &lt;code&gt;edits&lt;/code&gt;.
                  If &lt;code&gt;edits&lt;/code&gt; is empty, calls super.                
            </javadoc>
            <method name="getUndoPresentationName" type="String" line="226">
                <declaration name="last" type="UndoableEdit" line="227"/>
                <scope line="228"/>
                <scope line="230"/>
            </method>
            <javadoc line="235">
                Returns &lt;code&gt;getRedoPresentationName&lt;/code&gt;
                  from the last &lt;code&gt;UndoableEdit&lt;/code&gt;
                  added to &lt;code&gt;edits&lt;/code&gt;.
                  If &lt;code&gt;edits&lt;/code&gt; is empty, calls super.                
            </javadoc>
            <method name="getRedoPresentationName" type="String" line="241">
                <declaration name="last" type="UndoableEdit" line="242"/>
                <scope line="243"/>
                <scope line="245"/>
            </method>
            <javadoc line="250">
                Returns a string that displays and identifies this
                  object&apos;s properties.                
                <return>
                    a String representation of this object                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="257"/>
        </class>
    </source>