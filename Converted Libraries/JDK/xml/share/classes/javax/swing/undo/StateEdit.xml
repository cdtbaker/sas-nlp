<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.undo">
        <import package="java.util.Enumeration"/>
        <import package="java.util.Hashtable"/>
        <import package="java.util.Vector"/>
        <class name="StateEdit" line="5">
            <extends class="AbstractUndoableEdit"/>
            <javadoc line="5">
                &lt;P&gt;StateEdit is a general edit for objects that change state.
                  Objects being edited must conform to the StateEditable interface.&lt;/P&gt;
                  &lt;P&gt;This edit class works by asking an object to store it&apos;s state in
                  Hashtables before and after editing occurs.  Upon undo or redo the
                  object is told to restore it&apos;s state from these Hashtables.&lt;/P&gt;
                  A state edit is used as follows:
                  &lt;PRE&gt;
                  // Create the edit during the &quot;before&quot; state of the object
                  StateEdit newEdit = new StateEdit(myObject);
                  // Modify the object
                  myObject.someStateModifyingMethod();
                  // &quot;end&quot; the edit when you are done modifying the object
                  newEdit.end();
                  &lt;/PRE&gt;
                  &lt;P&gt;&lt;EM&gt;Note that when a StateEdit ends, it removes redundant state from
                  the Hashtables - A state Hashtable is not guaranteed to contain all
                  keys/values placed into it when the state is stored!&lt;/EM&gt;&lt;/P&gt;                
                <see>
                    StateEditable                    
                </see>
                <author>
                    Ray Ryan                    
                </author>
            </javadoc>
            <declaration name="RCSID" type="String" line="27"/>
            <declaration name="object" type="StateEditable" line="28"/>
            <javadoc line="28">
                The object being edited                
            </javadoc>
            <declaration name="preState" type="Hashtable&lt;Object,Object&gt;" line="32"/>
            <javadoc line="32">
                The state information prior to the edit                
            </javadoc>
            <declaration name="postState" type="Hashtable&lt;Object,Object&gt;" line="36"/>
            <javadoc line="36">
                The state information after the edit                
            </javadoc>
            <declaration name="undoRedoName" type="String" line="40"/>
            <javadoc line="40">
                The undo/redo presentation name                
            </javadoc>
            <javadoc line="44">
                Create and return a new StateEdit.                
                <param>
                    anObject The object to watch for changing state                    
                </param>
                <see>
                    StateEdit                    
                </see>
            </javadoc>
            <method name="StateEdit" type="constructor" line="49">
                <params>
                    <param name="anObject" type="StateEditable"/>
                </params>
            </method>
            <javadoc line="53">
                Create and return a new StateEdit with a presentation name.                
                <param>
                    anObject The object to watch for changing state                    
                </param>
                <param>
                    name The presentation name to be used for this edit                    
                </param>
                <see>
                    StateEdit                    
                </see>
            </javadoc>
            <method name="StateEdit" type="constructor" line="59">
                <params>
                    <param name="anObject" type="StateEditable"/>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="init" type="void" line="63">
                <params>
                    <param name="anObject" type="StateEditable"/>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="70">
                Gets the post-edit state of the StateEditable object and
                  ends the edit.                
            </javadoc>
            <method name="end" type="void" line="74"/>
            <javadoc line="79">
                Tells the edited object to apply the state prior to the edit                
            </javadoc>
            <method name="undo" type="void" line="82"/>
            <javadoc line="86">
                Tells the edited object to apply the state after the edit                
            </javadoc>
            <method name="redo" type="void" line="89"/>
            <javadoc line="93">
                Gets the presentation name for this edit                
            </javadoc>
            <method name="getPresentationName" type="String" line="96"/>
            <javadoc line="99">
                Remove redundant key/values in state hashtables.                
            </javadoc>
            <method name="removeRedundantState" type="void" line="102">
                <declaration name="uselessKeys" type="Vector&lt;Object&gt;" line="103"/>
                <declaration name="myKeys" type="Enumeration" line="104"/>
                <scope line="105">
                    <declaration name="myKey" type="Object" line="106"/>
                    <scope line="107"/>
                </scope>
                <scope line="111">
                    <declaration name="myKey" type="Object" line="112"/>
                </scope>
            </method>
        </class>
    </source>