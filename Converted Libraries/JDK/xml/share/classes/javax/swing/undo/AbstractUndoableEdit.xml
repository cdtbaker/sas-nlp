<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.undo">
        <import package="java.io.Serializable"/>
        <import package="javax.swing.UIManager"/>
        <class name="AbstractUndoableEdit" line="4">
            <implements interface="UndoableEdit"/>
            <implements interface="Serializable"/>
            <javadoc line="4">
                An abstract implementation of &lt;code&gt;UndoableEdit&lt;/code&gt;,
                  implementing simple responses to all boolean methods in
                  that interface.                
                <author>
                    Ray Ryan                    
                </author>
            </javadoc>
            <declaration name="UndoName" type="String" line="11"/>
            <javadoc line="11">
                String returned by &lt;code&gt;getUndoPresentationName&lt;/code&gt;;
                  as of Java 2 platform v1.3.1 this field is no longer used. This value
                  is now localized and comes from the defaults table with key
                  &lt;code&gt;AbstractUndoableEdit.undoText&lt;/code&gt;.                
                <see>
                    javax.swing.UIDefaults                    
                </see>
            </javadoc>
            <declaration name="RedoName" type="String" line="19"/>
            <javadoc line="19">
                String returned by &lt;code&gt;getRedoPresentationName&lt;/code&gt;;
                  as of Java 2 platform v1.3.1 this field is no longer used. This value
                  is now localized and comes from the defaults table with key
                  &lt;code&gt;AbstractUndoableEdit.redoText&lt;/code&gt;.                
                <see>
                    javax.swing.UIDefaults                    
                </see>
            </javadoc>
            <declaration name="hasBeenDone" type="boolean" line="27"/>
            <javadoc line="27">
                Defaults to true; becomes false if this edit is undone, true
                  again if it is redone.                
            </javadoc>
            <declaration name="alive" type="boolean" line="32"/>
            <javadoc line="32">
                True if this edit has not received &lt;code&gt;die&lt;/code&gt;; defaults
                  to &lt;code&gt;true&lt;/code&gt;.                
            </javadoc>
            <javadoc line="37">
                Creates an &lt;code&gt;AbstractUndoableEdit&lt;/code&gt; which defaults
                  &lt;code&gt;hasBeenDone&lt;/code&gt; and &lt;code&gt;alive&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.                
            </javadoc>
            <method name="AbstractUndoableEdit" type="constructor" line="41"/>
            <javadoc line="46">
                Sets &lt;code&gt;alive&lt;/code&gt; to false. Note that this
                  is a one way operation; dead edits cannot be resurrected.
                  Sending &lt;code&gt;undo&lt;/code&gt; or &lt;code&gt;redo&lt;/code&gt; to
                  a dead edit results in an exception being thrown.
                  &lt;p&gt;Typically an edit is killed when it is consolidated by
                  another edit&apos;s &lt;code&gt;addEdit&lt;/code&gt; or &lt;code&gt;replaceEdit&lt;/code&gt;
                  method, or when it is dequeued from an &lt;code&gt;UndoManager&lt;/code&gt;.                
            </javadoc>
            <method name="die" type="void" line="55"/>
            <javadoc line="58">
                Throws &lt;code&gt;CannotUndoException&lt;/code&gt; if &lt;code&gt;canUndo&lt;/code&gt;
                  returns &lt;code&gt;false&lt;/code&gt;. Sets &lt;code&gt;hasBeenDone&lt;/code&gt;
                  to &lt;code&gt;false&lt;/code&gt;. Subclasses should override to undo the
                  operation represented by this edit. Override should begin with
                  a call to super.                
                <exception>
                    CannotUndoException if <code>canUndo</code>
                      returns <code>false</code>                    
                </exception>
                <see>
                    #canUndo                    
                </see>
            </javadoc>
            <method name="undo" type="void" line="68">
                <scope line="69"/>
            </method>
            <javadoc line="74">
                Returns true if this edit is &lt;code&gt;alive&lt;/code&gt;
                  and &lt;code&gt;hasBeenDone&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.                
                <return>
                    true if this edit is <code>alive</code>
                      and <code>hasBeenDone</code> is <code>true</code>                    
                </return>
                <see>
                    #die                    
                </see>
                <see>
                    #undo                    
                </see>
                <see>
                    #redo                    
                </see>
            </javadoc>
            <method name="canUndo" type="boolean" line="83"/>
            <javadoc line="86">
                Throws &lt;code&gt;CannotRedoException&lt;/code&gt; if &lt;code&gt;canRedo&lt;/code&gt;
                  returns false. Sets &lt;code&gt;hasBeenDone&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.
                  Subclasses should override to redo the operation represented by
                  this edit. Override should begin with a call to super.                
                <exception>
                    CannotRedoException if <code>canRedo</code>
                      returns <code>false</code>                    
                </exception>
                <see>
                    #canRedo                    
                </see>
            </javadoc>
            <method name="redo" type="void" line="95">
                <scope line="96"/>
            </method>
            <javadoc line="101">
                Returns &lt;code&gt;true&lt;/code&gt; if this edit is &lt;code&gt;alive&lt;/code&gt;
                  and &lt;code&gt;hasBeenDone&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.                
                <return>
                    <code>true</code> if this edit is <code>alive</code>
                      and <code>hasBeenDone</code> is <code>false</code>                    
                </return>
                <see>
                    #die                    
                </see>
                <see>
                    #undo                    
                </see>
                <see>
                    #redo                    
                </see>
            </javadoc>
            <method name="canRedo" type="boolean" line="110"/>
            <javadoc line="113">
                This default implementation returns false.                
                <param>
                    anEdit the edit to be added                    
                </param>
                <return>
                    false                    
                </return>
                <see>
                    UndoableEdit#addEdit                    
                </see>
            </javadoc>
            <method name="addEdit" type="boolean" line="119">
                <params>
                    <param name="anEdit" type="UndoableEdit"/>
                </params>
            </method>
            <javadoc line="122">
                This default implementation returns false.                
                <param>
                    anEdit the edit to replace                    
                </param>
                <return>
                    false                    
                </return>
                <see>
                    UndoableEdit#replaceEdit                    
                </see>
            </javadoc>
            <method name="replaceEdit" type="boolean" line="128">
                <params>
                    <param name="anEdit" type="UndoableEdit"/>
                </params>
            </method>
            <javadoc line="131">
                This default implementation returns true.                
                <return>
                    true                    
                </return>
                <see>
                    UndoableEdit#isSignificant                    
                </see>
            </javadoc>
            <method name="isSignificant" type="boolean" line="136"/>
            <javadoc line="139">
                This default implementation returns &quot;&quot;. Used by
                  &lt;code&gt;getUndoPresentationName&lt;/code&gt; and
                  &lt;code&gt;getRedoPresentationName&lt;/code&gt; to
                  construct the strings they return. Subclasses should override to
                  return an appropriate description of the operation this edit
                  represents.                
                <return>
                    the empty string ""                    
                </return>
                <see>
                    #getUndoPresentationName                    
                </see>
                <see>
                    #getRedoPresentationName                    
                </see>
            </javadoc>
            <method name="getPresentationName" type="String" line="150"/>
            <javadoc line="153">
                Retreives the value from the defaults table with key
                  &lt;code&gt;AbstractUndoableEdit.undoText&lt;/code&gt; and returns
                  that value followed by a space, followed by
                  &lt;code&gt;getPresentationName&lt;/code&gt;.
                  If &lt;code&gt;getPresentationName&lt;/code&gt; returns &quot;&quot;,
                  then the defaults value is returned alone.                
                <return>
                    the value from the defaults table with key
                      <code>AbstractUndoableEdit.undoText</code>, followed
                      by a space, followed by <code>getPresentationName</code>
                      unless <code>getPresentationName</code> is "" in which
                      case, the defaults value is returned alone.                    
                </return>
                <see>
                    #getPresentationName                    
                </see>
            </javadoc>
            <method name="getUndoPresentationName" type="String" line="167">
                <declaration name="name" type="String" line="168"/>
                <scope line="169"/>
                <scope line="172"/>
            </method>
            <javadoc line="177">
                Retreives the value from the defaults table with key
                  &lt;code&gt;AbstractUndoableEdit.redoText&lt;/code&gt; and returns
                  that value followed by a space, followed by
                  &lt;code&gt;getPresentationName&lt;/code&gt;.
                  If &lt;code&gt;getPresentationName&lt;/code&gt; returns &quot;&quot;,
                  then the defaults value is returned alone.                
                <return>
                    the value from the defaults table with key
                      <code>AbstractUndoableEdit.redoText</code>, followed
                      by a space, followed by <code>getPresentationName</code>
                      unless <code>getPresentationName</code> is "" in which
                      case, the defaults value is returned alone.                    
                </return>
                <see>
                    #getPresentationName                    
                </see>
            </javadoc>
            <method name="getRedoPresentationName" type="String" line="191">
                <declaration name="name" type="String" line="192"/>
                <scope line="193"/>
                <scope line="196"/>
            </method>
            <javadoc line="201">
                Returns a string that displays and identifies this
                  object&apos;s properties.                
                <return>
                    a String representation of this object                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="206"/>
        </class>
    </source>