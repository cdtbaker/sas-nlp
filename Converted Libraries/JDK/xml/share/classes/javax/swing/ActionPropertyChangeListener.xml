<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing">
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="java.io"/>
        <import package="java.lang.ref.WeakReference"/>
        <import package="java.lang.ref.ReferenceQueue"/>
        <class name="ActionPropertyChangeListener" line="7">
            <type_params>
                <type_param name="T"/>
            </type_params>
            <implements interface="PropertyChangeListener"/>
            <implements interface="Serializable"/>
            <javadoc line="7">
                A package-private PropertyChangeListener which listens for
                  property changes on an Action and updates the properties
                  of an ActionEvent source.
                  &lt;p&gt;
                  Subclasses must override the actionPropertyChanged method,
                  which is invoked from the propertyChange method as long as
                  the target is still valid.
                  &lt;/p&gt;
                  &lt;p&gt;
                  WARNING WARNING WARNING WARNING WARNING WARNING:&lt;br&gt;
                  Do NOT create an annonymous inner class that extends this!  If you do
                  a strong reference will be held to the containing class, which in most
                  cases defeats the purpose of this class.                
                <param>
                    T the type of JComponent the underlying Action is attached to                    
                </param>
                <author>
                    Georges Saab                    
                </author>
                <see>
                    AbstractButton                    
                </see>
            </javadoc>
            <declaration name="queue" type="ReferenceQueue&amp;lt;JComponent&amp;gt;" line="26"/>
            <declaration name="target" type="OwnedWeakReference&amp;lt;T&amp;gt;" line="27"/>
            <declaration name="action" type="Action" line="28"/>
            <method name="getQueue" type="ReferenceQueue&lt;JComponent&gt;" line="29">
                <scope line="30">
                    <scope line="31"/>
                </scope>
            </method>
            <method name="ActionPropertyChangeListener" type="constructor" line="37">
                <params>
                    <param name="c" type="T"/>
                    <param name="a" type="Action"/>
                </params>
            </method>
            <javadoc line="42">
                PropertyChangeListener method.  If the target has been gc&apos;ed this
                  will remove the &lt;code&gt;PropertyChangeListener&lt;/code&gt; from the Action,
                  otherwise this will invoke actionPropertyChanged.                
            </javadoc>
            <method name="propertyChange" type="void" line="47">
                <params>
                    <param name="e" type="PropertyChangeEvent"/>
                </params>
                <declaration name="target" type="T" line="48"/>
                <scope line="49"/>
                <scope line="52"/>
            </method>
            <method name="actionPropertyChanged" type="void" line="56"/>
            <javadoc line="56">
                Invoked when a property changes on the Action and the target
                  still exists.                
            </javadoc>
            <method name="setTarget" type="void" line="61">
                <params>
                    <param name="c" type="T"/>
                </params>
                <declaration name="queue" type="ReferenceQueue&amp;lt;JComponent&amp;gt;" line="62"/>
                <declaration name="r" type="OwnedWeakReference" line="63"/>
                <scope line="64">
                    <declaration name="oldPCL" type="ActionPropertyChangeListener" line="65"/>
                    <declaration name="oldAction" type="Action" line="66"/>
                    <scope line="67"/>
                </scope>
            </method>
            <method name="getTarget" type="T" line="73">
                <scope line="74"/>
            </method>
            <method name="getAction" type="Action" line="79"/>
            <method name="writeObject" type="void" line="82">
                <params>
                    <param name="s" type="ObjectOutputStream"/>
                </params>
            </method>
            <method name="readObject" type="void" line="86">
                <params>
                    <param name="s" type="ObjectInputStream"/>
                </params>
                <declaration name="target" type="T" line="88"/>
                <scope line="89"/>
            </method>
            <class name="OwnedWeakReference" line="93">
                <type_params>
                    <type_param name="U"/>
                </type_params>
                <extends class="WeakReference">
                    <type_params>
                        <type_param name="U"/>
                    </type_params>
                </extends>
                <declaration name="owner" type="ActionPropertyChangeListener" line="94"/>
                <method name="OwnedWeakReference" type="constructor" line="95">
                    <params>
                        <param name="target" type="U"/>
                        <param name="queue" type="ReferenceQueue&lt;? super U&gt;"/>
                        <param name="owner" type="ActionPropertyChangeListener"/>
                    </params>
                </method>
                <method name="getOwner" type="ActionPropertyChangeListener" line="99"/>
            </class>
        </class>
    </source>