<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing">
        <import package="javax.swing.event"/>
        <import package="java.awt.event"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Container"/>
        <import package="java.awt.Window"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="java.io.Serializable"/>
        <class name="AncestorNotifier" line="10">
            <implements interface="ComponentListener"/>
            <implements interface="PropertyChangeListener"/>
            <implements interface="Serializable"/>
            <javadoc line="10">
                @author Dave Moore                
            </javadoc>
            <declaration name="firstInvisibleAncestor" type="Component" line="14"/>
            <declaration name="listenerList" type="EventListenerList" line="15"/>
            <declaration name="root" type="JComponent" line="16"/>
            <method name="AncestorNotifier" type="constructor" line="17">
                <params>
                    <param name="root" type="JComponent"/>
                </params>
            </method>
            <method name="addAncestorListener" type="void" line="21">
                <params>
                    <param name="l" type="AncestorListener"/>
                </params>
            </method>
            <method name="removeAncestorListener" type="void" line="24">
                <params>
                    <param name="l" type="AncestorListener"/>
                </params>
            </method>
            <method name="getAncestorListeners" type="AncestorListener[]" line="27"/>
            <javadoc line="30">
                Notify all listeners that have registered interest for
                  notification on this event type.  The event instance
                  is lazily created using the parameters passed into
                  the fire method.                
                <see>
                    EventListenerList                    
                </see>
            </javadoc>
            <method name="fireAncestorAdded" type="void" line="37">
                <params>
                    <param name="source" type="JComponent"/>
                    <param name="id" type="int"/>
                    <param name="ancestor" type="Container"/>
                    <param name="ancestorParent" type="Container"/>
                </params>
                <declaration name="listeners" type="Object[]" line="38"/>
                <scope line="39">
                    <scope line="40">
                        <declaration name="ancestorEvent" type="AncestorEvent" line="41"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="46">
                Notify all listeners that have registered interest for
                  notification on this event type.  The event instance
                  is lazily created using the parameters passed into
                  the fire method.                
                <see>
                    EventListenerList                    
                </see>
            </javadoc>
            <method name="fireAncestorRemoved" type="void" line="53">
                <params>
                    <param name="source" type="JComponent"/>
                    <param name="id" type="int"/>
                    <param name="ancestor" type="Container"/>
                    <param name="ancestorParent" type="Container"/>
                </params>
                <declaration name="listeners" type="Object[]" line="54"/>
                <scope line="55">
                    <scope line="56">
                        <declaration name="ancestorEvent" type="AncestorEvent" line="57"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="62">
                Notify all listeners that have registered interest for
                  notification on this event type.  The event instance
                  is lazily created using the parameters passed into
                  the fire method.                
                <see>
                    EventListenerList                    
                </see>
            </javadoc>
            <method name="fireAncestorMoved" type="void" line="69">
                <params>
                    <param name="source" type="JComponent"/>
                    <param name="id" type="int"/>
                    <param name="ancestor" type="Container"/>
                    <param name="ancestorParent" type="Container"/>
                </params>
                <declaration name="listeners" type="Object[]" line="70"/>
                <scope line="71">
                    <scope line="72">
                        <declaration name="ancestorEvent" type="AncestorEvent" line="73"/>
                    </scope>
                </scope>
            </method>
            <method name="removeAllListeners" type="void" line="78"/>
            <method name="addListeners" type="void" line="81">
                <params>
                    <param name="ancestor" type="Component"/>
                    <param name="addToFirst" type="boolean"/>
                </params>
                <declaration name="a" type="Component" line="82"/>
                <scope line="84">
                    <scope line="85">
                        <scope line="87">
                            <declaration name="jAncestor" type="JComponent" line="88"/>
                        </scope>
                    </scope>
                    <scope line="92"/>
                </scope>
                <scope line="96"/>
            </method>
            <method name="removeListeners" type="void" line="100">
                <params>
                    <param name="ancestor" type="Component"/>
                </params>
                <declaration name="a" type="Component" line="101"/>
                <scope line="102">
                    <scope line="104">
                        <declaration name="jAncestor" type="JComponent" line="105"/>
                    </scope>
                    <scope line="108"/>
                </scope>
            </method>
            <method name="componentResized" type="void" line="113">
                <params>
                    <param name="e" type="ComponentEvent"/>
                </params>
            </method>
            <method name="componentMoved" type="void" line="115">
                <params>
                    <param name="e" type="ComponentEvent"/>
                </params>
                <declaration name="source" type="Component" line="116"/>
            </method>
            <method name="componentShown" type="void" line="119">
                <params>
                    <param name="e" type="ComponentEvent"/>
                </params>
                <declaration name="ancestor" type="Component" line="120"/>
                <scope line="121">
                    <scope line="123"/>
                </scope>
            </method>
            <method name="componentHidden" type="void" line="128">
                <params>
                    <param name="e" type="ComponentEvent"/>
                </params>
                <declaration name="ancestor" type="Component" line="129"/>
                <declaration name="needsNotify" type="boolean" line="130"/>
                <scope line="131"/>
                <scope line="135"/>
            </method>
            <method name="propertyChange" type="void" line="139">
                <params>
                    <param name="evt" type="PropertyChangeEvent"/>
                </params>
                <declaration name="s" type="String" line="140"/>
                <scope line="141">
                    <declaration name="component" type="JComponent" line="142"/>
                    <scope line="143">
                        <scope line="144">
                            <scope line="146"/>
                        </scope>
                    </scope>
                    <scope line="151">
                        <declaration name="needsNotify" type="boolean" line="152"/>
                        <declaration name="oldParent" type="Container" line="153"/>
                        <scope line="156"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>