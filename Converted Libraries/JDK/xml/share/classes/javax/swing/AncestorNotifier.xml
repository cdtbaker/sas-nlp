<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing">
        <import package="javax.swing.event"/>
        <import package="java.awt.event"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Container"/>
        <import package="java.awt.Window"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="java.io.Serializable"/>
        <class name="AncestorNotifier" line="41">
            <implements interface="ComponentListener"/>
            <implements interface="PropertyChangeListener"/>
            <implements interface="Serializable"/>
            <javadoc line="41">
                @author Dave Moore                
            </javadoc>
            <declaration name="firstInvisibleAncestor" type="Component" line="47"/>
            <declaration name="listenerList" type="EventListenerList" line="48"/>
            <declaration name="root" type="JComponent" line="49"/>
            <method name="AncestorNotifier" type="constructor" line="51">
                <params>
                    <param name="root" type="JComponent"/>
                </params>
            </method>
            <method name="addAncestorListener" type="void" line="56">
                <params>
                    <param name="l" type="AncestorListener"/>
                </params>
            </method>
            <method name="removeAncestorListener" type="void" line="60">
                <params>
                    <param name="l" type="AncestorListener"/>
                </params>
            </method>
            <method name="getAncestorListeners" type="AncestorListener[]" line="64"/>
            <javadoc line="68">
                Notify all listeners that have registered interest for
                  notification on this event type.  The event instance
                  is lazily created using the parameters passed into
                  the fire method.                
                <see>
                    EventListenerList                    
                </see>
            </javadoc>
            <method name="fireAncestorAdded" type="void" line="75">
                <params>
                    <param name="source" type="JComponent"/>
                    <param name="id" type="int"/>
                    <param name="ancestor" type="Container"/>
                    <param name="ancestorParent" type="Container"/>
                </params>
                <comment line="77">
                    Guaranteed to return a non-null array                    
                </comment>
                <comment line="79">
                    Process the listeners last to first, notifying
                     those that are interested in this event                    
                </comment>
                <comment line="83">
                    Lazily create the event:                    
                </comment>
                <declaration name="listeners" type="Object[]" line="77"/>
                <scope line="80">
                    <scope line="81">
                        <declaration name="ancestorEvent" type="AncestorEvent" line="83"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="90">
                Notify all listeners that have registered interest for
                  notification on this event type.  The event instance
                  is lazily created using the parameters passed into
                  the fire method.                
                <see>
                    EventListenerList                    
                </see>
            </javadoc>
            <method name="fireAncestorRemoved" type="void" line="97">
                <params>
                    <param name="source" type="JComponent"/>
                    <param name="id" type="int"/>
                    <param name="ancestor" type="Container"/>
                    <param name="ancestorParent" type="Container"/>
                </params>
                <comment line="99">
                    Guaranteed to return a non-null array                    
                </comment>
                <comment line="101">
                    Process the listeners last to first, notifying
                     those that are interested in this event                    
                </comment>
                <comment line="105">
                    Lazily create the event:                    
                </comment>
                <declaration name="listeners" type="Object[]" line="99"/>
                <scope line="102">
                    <scope line="103">
                        <declaration name="ancestorEvent" type="AncestorEvent" line="105"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="111">
                Notify all listeners that have registered interest for
                  notification on this event type.  The event instance
                  is lazily created using the parameters passed into
                  the fire method.                
                <see>
                    EventListenerList                    
                </see>
            </javadoc>
            <method name="fireAncestorMoved" type="void" line="118">
                <params>
                    <param name="source" type="JComponent"/>
                    <param name="id" type="int"/>
                    <param name="ancestor" type="Container"/>
                    <param name="ancestorParent" type="Container"/>
                </params>
                <comment line="120">
                    Guaranteed to return a non-null array                    
                </comment>
                <comment line="122">
                    Process the listeners last to first, notifying
                     those that are interested in this event                    
                </comment>
                <comment line="126">
                    Lazily create the event:                    
                </comment>
                <declaration name="listeners" type="Object[]" line="120"/>
                <scope line="123">
                    <scope line="124">
                        <declaration name="ancestorEvent" type="AncestorEvent" line="126"/>
                    </scope>
                </scope>
            </method>
            <method name="removeAllListeners" type="void" line="133"/>
            <method name="addListeners" type="void" line="137">
                <params>
                    <param name="ancestor" type="Component"/>
                    <param name="addToFirst" type="boolean"/>
                </params>
                <declaration name="a" type="Component" line="138"/>
                <scope line="143">
                    <scope line="144">
                        <scope line="147">
                            <declaration name="jAncestor" type="JComponent" line="148"/>
                        </scope>
                    </scope>
                    <scope line="153"/>
                </scope>
                <scope line="158"/>
            </method>
            <method name="removeListeners" type="void" line="163">
                <params>
                    <param name="ancestor" type="Component"/>
                </params>
                <declaration name="a" type="Component" line="164"/>
                <scope line="165">
                    <scope line="167">
                        <declaration name="jAncestor" type="JComponent" line="168"/>
                    </scope>
                    <scope line="171"/>
                </scope>
            </method>
            <method name="componentResized" type="void" line="177">
                <params>
                    <param name="e" type="ComponentEvent"/>
                </params>
            </method>
            <method name="componentMoved" type="void" line="179">
                <params>
                    <param name="e" type="ComponentEvent"/>
                </params>
                <declaration name="source" type="Component" line="180"/>
            </method>
            <method name="componentShown" type="void" line="186">
                <params>
                    <param name="e" type="ComponentEvent"/>
                </params>
                <declaration name="ancestor" type="Component" line="187"/>
                <scope line="189">
                    <scope line="191"/>
                </scope>
            </method>
            <method name="componentHidden" type="void" line="198">
                <params>
                    <param name="e" type="ComponentEvent"/>
                </params>
                <declaration name="ancestor" type="Component" line="199"/>
                <declaration name="needsNotify" type="boolean" line="200"/>
                <scope line="202"/>
                <scope line="206"/>
            </method>
            <method name="propertyChange" type="void" line="212">
                <params>
                    <param name="evt" type="PropertyChangeEvent"/>
                </params>
                <declaration name="s" type="String" line="213"/>
                <scope line="215">
                    <declaration name="component" type="JComponent" line="216"/>
                    <scope line="218">
                        <scope line="219">
                            <scope line="221"/>
                        </scope>
                    </scope>
                    <scope line="226">
                        <declaration name="needsNotify" type="boolean" line="227"/>
                        <declaration name="oldParent" type="Container" line="228"/>
                        <scope line="232"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>