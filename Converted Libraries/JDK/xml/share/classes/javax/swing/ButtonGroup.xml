<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing">
        <import package="java.awt.event"/>
        <import package="java.util.Vector"/>
        <import package="java.util.Enumeration"/>
        <import package="java.io.Serializable"/>
        <class name="ButtonGroup" line="6">
            <implements interface="Serializable"/>
            <javadoc line="6">
                This class is used to create a multiple-exclusion scope for
                  a set of buttons. Creating a set of buttons with the
                  same &lt;code&gt;ButtonGroup&lt;/code&gt; object means that
                  turning &quot;on&quot; one of those buttons
                  turns off all other buttons in the group.
                  &lt;p&gt;
                  A &lt;code&gt;ButtonGroup&lt;/code&gt; can be used with
                  any set of objects that inherit from &lt;code&gt;AbstractButton&lt;/code&gt;.
                  Typically a button group contains instances of
                  &lt;code&gt;JRadioButton&lt;/code&gt;,
                  &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt;,
                  or &lt;code&gt;JToggleButton&lt;/code&gt;.
                  It wouldn&apos;t make sense to put an instance of
                  &lt;code&gt;JButton&lt;/code&gt; or &lt;code&gt;JMenuItem&lt;/code&gt;
                  in a button group
                  because &lt;code&gt;JButton&lt;/code&gt; and &lt;code&gt;JMenuItem&lt;/code&gt;
                  don&apos;t implement the selected state.
                  &lt;p&gt;
                  Initially, all buttons in the group are unselected.
                  &lt;p&gt;
                  For examples and further information on using button groups see
                  &lt;a href=&quot;http://java.sun.com/docs/books/tutorial/uiswing/components/button.html#radiobutton&quot;&gt;How to Use Radio Buttons&lt;/a&gt;,
                  a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases. The current serialization support is
                  appropriate for short term storage or RMI between applications running
                  the same version of Swing.  As of 1.4, support for long term storage
                  of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                  has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                  Please see {@link java.beans.XMLEncoder}.                
                <author>
                    Jeff Dinkins                    
                </author>
            </javadoc>
            <declaration name="buttons" type="Vector&amp;lt;AbstractButton&amp;gt;" line="42"/>
            <declaration name="selection" type="ButtonModel" line="43"/>
            <javadoc line="43">
                The current selection.                
            </javadoc>
            <javadoc line="47">
                Creates a new &lt;code&gt;ButtonGroup&lt;/code&gt;.                
            </javadoc>
            <method name="ButtonGroup" type="constructor" line="50"/>
            <javadoc line="52">
                Adds the button to the group.                
                <param>
                    b the button to be added                    
                </param>
            </javadoc>
            <method name="add" type="void" line="56">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
                <scope line="57"/>
                <scope line="61">
                    <scope line="62"/>
                    <scope line="65"/>
                </scope>
            </method>
            <javadoc line="71">
                Removes the button from the group.                
                <param>
                    b the button to be removed                    
                </param>
            </javadoc>
            <method name="remove" type="void" line="75">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
                <scope line="76"/>
                <scope line="80"/>
            </method>
            <javadoc line="85">
                Clears the selection such that none of the buttons
                  in the &lt;code&gt;ButtonGroup&lt;/code&gt; are selected.                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="clearSelection" type="void" line="90">
                <scope line="91">
                    <declaration name="oldSelection" type="ButtonModel" line="92"/>
                </scope>
            </method>
            <javadoc line="97">
                Returns all the buttons that are participating in
                  this group.                
                <return>
                    an &lt;code&gt;Enumeration&lt;/code&gt; of the buttons in this group                    
                </return>
            </javadoc>
            <method name="getElements" type="Enumeration&lt;AbstractButton&gt;" line="102"/>
            <javadoc line="105">
                Returns the model of the selected button.                
                <return>
                    the selected button model                    
                </return>
            </javadoc>
            <method name="getSelection" type="ButtonModel" line="109"/>
            <javadoc line="112">
                Sets the selected value for the &lt;code&gt;ButtonModel&lt;/code&gt;.
                  Only one button in the group may be selected at a time.                
                <param>
                    m the &lt;code&gt;ButtonModel&lt;/code&gt;                    
                </param>
                <param>
                    b &lt;code&gt;true&lt;/code&gt; if this button is to be
                      selected, otherwise &lt;code&gt;false&lt;/code&gt;                    
                </param>
            </javadoc>
            <method name="setSelected" type="void" line="119">
                <params>
                    <param name="m" type="ButtonModel"/>
                    <param name="b" type="boolean"/>
                </params>
                <scope line="120">
                    <declaration name="oldSelection" type="ButtonModel" line="121"/>
                    <scope line="123"/>
                </scope>
            </method>
            <javadoc line="129">
                Returns whether a &lt;code&gt;ButtonModel&lt;/code&gt; is selected.                
                <return>
                    &lt;code&gt;true&lt;/code&gt; if the button is selected,
                      otherwise returns &lt;code&gt;false&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="isSelected" type="boolean" line="134">
                <params>
                    <param name="m" type="ButtonModel"/>
                </params>
            </method>
            <javadoc line="137">
                Returns the number of buttons in the group.                
                <return>
                    the button count                    
                </return>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="getButtonCount" type="int" line="142">
                <scope line="143"/>
                <scope line="146"/>
            </method>
        </class>
    </source>