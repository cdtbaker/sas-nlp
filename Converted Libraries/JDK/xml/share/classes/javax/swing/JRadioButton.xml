<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.beans"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.accessibility"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.IOException"/>
        <class name="JRadioButton" line="39">
            <extends class="JToggleButton"/>
            <comment line="249">
                ///////////////
                 Accessibility support                
            </comment>
            <comment line="300">
                inner class AccessibleJRadioButton                
            </comment>
            <implements interface="Accessible"/>
            <javadoc line="39">
                An implementation of a radio button -- an item that can be selected or
                  deselected, and which displays its state to the user.
                  Used with a {@link ButtonGroup} object to create a group of buttons
                  in which only one button at a time can be selected. (Create a ButtonGroup
                  object and use its &lt;code&gt;add&lt;/code&gt; method to include the JRadioButton objects
                  in the group.)
                  &lt;blockquote&gt;
                  &lt;strong&gt;Note:&lt;/strong&gt;
                  The ButtonGroup object is a logical grouping -- not a physical grouping.
                  To create a button panel, you should still create a {@link JPanel} or similar
                  container-object and add a {@link javax.swing.border.Border} to it to set it off from surrounding
                  components.
                  &lt;/blockquote&gt;
                  &lt;p&gt;
                  Buttons can be configured, and to some degree controlled, by
                  &lt;code&gt;&lt;a href=&quot;Action.html&quot;&gt;Action&lt;/a&gt;&lt;/code&gt;s.  Using an
                  &lt;code&gt;Action&lt;/code&gt; with a button has many benefits beyond directly
                  configuring a button.  Refer to &lt;a href=&quot;Action.html#buttonActions&quot;&gt;
                  Swing Components Supporting &lt;code&gt;Action&lt;/code&gt;&lt;/a&gt; for more
                  details, and you can find more information in &lt;a
                  href=&quot;http://java.sun.com/docs/books/tutorial/uiswing/misc/action.html&quot;&gt;How
                  to Use Actions&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.
                  &lt;p&gt;
                  See &lt;a href=&quot;http://java.sun.com/docs/books/tutorial/uiswing/components/button.html&quot;&gt;How to Use Buttons, Check Boxes, and Radio Buttons&lt;/a&gt;
                  in &lt;em&gt;The Java Tutorial&lt;/em&gt;
                  for further documentation.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt; Swing is not thread safe. For more
                  information see &lt;a
                  href=&quot;package-summary.html#threading&quot;&gt;Swing&apos;s Threading
                  Policy&lt;/a&gt;.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases. The current serialization support is
                  appropriate for short term storage or RMI between applications running
                  the same version of Swing.  As of 1.4, support for long term storage
                  of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                  has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                  Please see {@link java.beans.XMLEncoder}.                
                <beaninfo>
                    attribute: isContainer false
                      description: A component which can display it's state as selected or deselected.                    
                </beaninfo>
                <see>
                    ButtonGroup                    
                </see>
                <see>
                    JCheckBox                    
                </see>
                <author>
                    Jeff Dinkins                    
                </author>
            </javadoc>
            <declaration name="uiClassID" type="String" line="91"/>
            <javadoc line="91">
                @see #getUIClassID                
                <see>
                    #readObject                    
                </see>
            </javadoc>
            <javadoc line="98">
                Creates an initially unselected radio button
                  with no set text.                
            </javadoc>
            <method name="JRadioButton" type="constructor" line="102"/>
            <javadoc line="106">
                Creates an initially unselected radio button
                  with the specified image but no text.                
                <param>
                    icon  the image that the button should display                    
                </param>
            </javadoc>
            <method name="JRadioButton" type="constructor" line="112">
                <params>
                    <param name="icon" type="Icon"/>
                </params>
            </method>
            <javadoc line="116">
                Creates a radiobutton where properties are taken from the
                  Action supplied.                
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="JRadioButton" type="constructor" line="122">
                <params>
                    <param name="a" type="Action"/>
                </params>
            </method>
            <javadoc line="127">
                Creates a radio button with the specified image
                  and selection state, but no text.                
                <param>
                    icon  the image that the button should display                    
                </param>
                <param>
                    selected  if true, the button is initially selected;
                      otherwise, the button is initially unselected                    
                </param>
            </javadoc>
            <method name="JRadioButton" type="constructor" line="135">
                <params>
                    <param name="icon" type="Icon"/>
                    <param name="selected" type="boolean"/>
                </params>
            </method>
            <javadoc line="139">
                Creates an unselected radio button with the specified text.                
                <param>
                    text  the string displayed on the radio button                    
                </param>
            </javadoc>
            <method name="JRadioButton" type="constructor" line="144">
                <params>
                    <param name="text" type="String"/>
                </params>
            </method>
            <javadoc line="148">
                Creates a radio button with the specified text
                  and selection state.                
                <param>
                    text  the string displayed on the radio button                    
                </param>
                <param>
                    selected  if true, the button is initially selected;
                      otherwise, the button is initially unselected                    
                </param>
            </javadoc>
            <method name="JRadioButton" type="constructor" line="156">
                <params>
                    <param name="text" type="String"/>
                    <param name="selected" type="boolean"/>
                </params>
            </method>
            <javadoc line="160">
                Creates a radio button that has the specified text and image,
                  and that is initially unselected.                
                <param>
                    text  the string displayed on the radio button                    
                </param>
                <param>
                    icon  the image that the button should display                    
                </param>
            </javadoc>
            <method name="JRadioButton" type="constructor" line="167">
                <params>
                    <param name="text" type="String"/>
                    <param name="icon" type="Icon"/>
                </params>
            </method>
            <javadoc line="171">
                Creates a radio button that has the specified text, image,
                  and selection state.                
                <param>
                    text  the string displayed on the radio button                    
                </param>
                <param>
                    icon  the image that the button should display                    
                </param>
            </javadoc>
            <method name="JRadioButton" type="constructor" line="178">
                <params>
                    <param name="text" type="String"/>
                    <param name="icon" type="Icon"/>
                    <param name="selected" type="boolean"/>
                </params>
            </method>
            <javadoc line="185">
                Resets the UI property to a value from the current look and feel.                
                <see>
                    JComponent#updateUI                    
                </see>
            </javadoc>
            <method name="updateUI" type="void" line="190"/>
            <javadoc line="195">
                Returns the name of the L&amp;F class
                  that renders this component.                
                <return>
                    String "RadioButtonUI"                    
                </return>
                <see>
                    JComponent#getUIClassID                    
                </see>
                <see>
                    UIDefaults#getUI                    
                </see>
                <beaninfo>
                    expert: true
                      description: A string that specifies the name of the L&F class.                    
                </beaninfo>
            </javadoc>
            <method name="getUIClassID" type="String" line="206"/>
            <javadoc line="211">
                The icon for radio buttons comes from the look and feel,
                  not the Action.                
            </javadoc>
            <method name="setIconFromAction" type="void" line="215">
                <params>
                    <param name="a" type="Action"/>
                </params>
            </method>
            <javadoc line="218">
                See readObject() and writeObject() in JComponent for more
                  information about serialization in Swing.                
            </javadoc>
            <method name="writeObject" type="void" line="222">
                <params>
                    <param name="s" type="ObjectOutputStream"/>
                </params>
                <scope line="224">
                    <declaration name="count" type="byte" line="225"/>
                    <scope line="227"/>
                </scope>
            </method>
            <javadoc line="234">
                Returns a string representation of this JRadioButton. This method
                  is intended to be used only for debugging purposes, and the
                  content and format of the returned string may vary between
                  implementations. The returned string may be empty but may not
                  be &lt;code&gt;null&lt;/code&gt;.                
                <return>
                    a string representation of this JRadioButton.                    
                </return>
            </javadoc>
            <method name="paramString" type="String" line="243"/>
            <javadoc line="253">
                Gets the AccessibleContext associated with this JRadioButton.
                  For JRadioButtons, the AccessibleContext takes the form of an
                  AccessibleJRadioButton.
                  A new AccessibleJRadioButton instance is created if necessary.                
                <return>
                    an AccessibleJRadioButton that serves as the
                      AccessibleContext of this JRadioButton                    
                </return>
                <beaninfo>
                    expert: true
                      description: The AccessibleContext associated with this Button                    
                </beaninfo>
            </javadoc>
            <method name="getAccessibleContext" type="AccessibleContext" line="265">
                <scope line="266"/>
            </method>
            <class name="AccessibleJRadioButton" line="272">
                <extends class="AccessibleJToggleButton"/>
                <javadoc line="272">
                    This class implements accessibility support for the
                      &lt;code&gt;JRadioButton&lt;/code&gt; class.  It provides an implementation of the
                      Java Accessibility API appropriate to radio button
                      user-interface elements.
                      &lt;p&gt;
                      &lt;strong&gt;Warning:&lt;/strong&gt;
                      Serialized objects of this class will not be compatible with
                      future Swing releases. The current serialization support is
                      appropriate for short term storage or RMI between applications running
                      the same version of Swing.  As of 1.4, support for long term storage
                      of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                      has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                      Please see {@link java.beans.XMLEncoder}.                    
                </javadoc>
                <javadoc line="289">
                    Get the role of this object.                    
                    <return>
                        an instance of AccessibleRole describing the role of the object                        
                    </return>
                    <see>
                        AccessibleRole                        
                    </see>
                </javadoc>
                <method name="getAccessibleRole" type="AccessibleRole" line="295"/>
            </class>
        </class>
    </source>