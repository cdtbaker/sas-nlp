<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing">
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Rectangle"/>
        <interface name="Scrollable">
            <javadoc line="4">
                An interface that provides information to a scrolling container
                  like JScrollPane.  A complex component that&apos;s likely to be used
                  as a viewing a JScrollPane viewport (or other scrolling container)
                  should implement this interface.                
                <see>
                    JViewport                    
                </see>
                <see>
                    JScrollPane                    
                </see>
                <see>
                    JScrollBar                    
                </see>
                <author>
                    Hans Muller                    
                </author>
            </javadoc>
            <method name="getPreferredScrollableViewportSize" type="Dimension" line="15"/>
            <javadoc line="15">
                Returns the preferred size of the viewport for a view component.
                  For example, the preferred size of a &lt;code&gt;JList&lt;/code&gt; component
                  is the size required to accommodate all of the cells in its list.
                  However, the value of &lt;code&gt;preferredScrollableViewportSize&lt;/code&gt;
                  is the size required for &lt;code&gt;JList.getVisibleRowCount&lt;/code&gt; rows.
                  A component without any properties that would affect the viewport
                  size should just return &lt;code&gt;getPreferredSize&lt;/code&gt; here.                
                <return>
                    the preferredSize of a &lt;code&gt;JViewport&lt;/code&gt; whose view
                      is this &lt;code&gt;Scrollable&lt;/code&gt;                    
                </return>
                <see>
                    JViewport#getPreferredSize                    
                </see>
            </javadoc>
            <method name="getScrollableUnitIncrement" type="int" line="28"/>
            <javadoc line="28">
                Components that display logical rows or columns should compute
                  the scroll increment that will completely expose one new row
                  or column, depending on the value of orientation.  Ideally,
                  components should handle a partially exposed row or column by
                  returning the distance required to completely expose the item.
                  &lt;p&gt;
                  Scrolling containers, like JScrollPane, will use this method
                  each time the user requests a unit scroll.                
                <param>
                    visibleRect The view area visible within the viewport                    
                </param>
                <param>
                    orientation Either SwingConstants.VERTICAL or SwingConstants.HORIZONTAL.                    
                </param>
                <param>
                    direction Less than zero to scroll up/left, greater than zero for down/right.                    
                </param>
                <return>
                    The &quot;unit&quot; increment for scrolling in the specified direction.
                      This value should always be positive.                    
                </return>
                <see>
                    JScrollBar#setUnitIncrement                    
                </see>
            </javadoc>
            <method name="getScrollableBlockIncrement" type="int" line="45"/>
            <javadoc line="45">
                Components that display logical rows or columns should compute
                  the scroll increment that will completely expose one block
                  of rows or columns, depending on the value of orientation.
                  &lt;p&gt;
                  Scrolling containers, like JScrollPane, will use this method
                  each time the user requests a block scroll.                
                <param>
                    visibleRect The view area visible within the viewport                    
                </param>
                <param>
                    orientation Either SwingConstants.VERTICAL or SwingConstants.HORIZONTAL.                    
                </param>
                <param>
                    direction Less than zero to scroll up/left, greater than zero for down/right.                    
                </param>
                <return>
                    The &quot;block&quot; increment for scrolling in the specified direction.
                      This value should always be positive.                    
                </return>
                <see>
                    JScrollBar#setBlockIncrement                    
                </see>
            </javadoc>
            <method name="getScrollableTracksViewportWidth" type="boolean" line="60"/>
            <javadoc line="60">
                Return true if a viewport should always force the width of this
                  &lt;code&gt;Scrollable&lt;/code&gt; to match the width of the viewport.
                  For example a normal
                  text view that supported line wrapping would return true here, since it
                  would be undesirable for wrapped lines to disappear beyond the right
                  edge of the viewport.  Note that returning true for a Scrollable
                  whose ancestor is a JScrollPane effectively disables horizontal
                  scrolling.
                  &lt;p&gt;
                  Scrolling containers, like JViewport, will use this method each
                  time they are validated.                
                <return>
                    True if a viewport should force the Scrollables width to match its own.                    
                </return>
            </javadoc>
            <method name="getScrollableTracksViewportHeight" type="boolean" line="75"/>
            <javadoc line="75">
                Return true if a viewport should always force the height of this
                  Scrollable to match the height of the viewport.  For example a
                  columnar text view that flowed text in left to right columns
                  could effectively disable vertical scrolling by returning
                  true here.
                  &lt;p&gt;
                  Scrolling containers, like JViewport, will use this method each
                  time they are validated.                
                <return>
                    True if a viewport should force the Scrollables height to match its own.                    
                </return>
            </javadoc>
        </interface>
    </source>