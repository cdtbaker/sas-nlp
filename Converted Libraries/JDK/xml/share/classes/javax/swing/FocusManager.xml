<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing">
        <import package="java.awt"/>
        <class name="FocusManager" line="3">
            <extends class="DefaultKeyboardFocusManager"/>
            <javadoc line="3">
                This class has been obsoleted by the 1.4 focus APIs. While client code may
                  still use this class, developers are strongly encouraged to use
                  &lt;code&gt;java.awt.KeyboardFocusManager&lt;/code&gt; and
                  &lt;code&gt;java.awt.DefaultKeyboardFocusManager&lt;/code&gt; instead.
                  &lt;p&gt;
                  Please see
                  &lt;a href=&quot;http://java.sun.com/docs/books/tutorial/uiswing/misc/focus.html&quot;&gt;
                  How to Use the Focus Subsystem&lt;/a&gt;,
                  a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;, and the
                  &lt;a href=&quot;../../java/awt/doc-files/FocusSpec.html&quot;&gt;Focus Specification&lt;/a&gt;
                  for more information.                
                <see>
                    &lt;a href=&quot;../../java/awt/doc-files/FocusSpec.html&quot;&gt;Focus Specification&lt;/a&gt;                    
                </see>
                <author>
                    Arnaud Weber                    
                </author>
                <author>
                    David Mendenhall                    
                </author>
            </javadoc>
            <declaration name="FOCUS_MANAGER_CLASS_PROPERTY" type="String" line="20"/>
            <javadoc line="20">
                This field is obsolete, and its use is discouraged since its
                  specification is incompatible with the 1.4 focus APIs.
                  The current FocusManager is no longer a property of the UI.
                  Client code must query for the current FocusManager using
                  &lt;code&gt;KeyboardFocusManager.getCurrentKeyboardFocusManager()&lt;/code&gt;.
                  See the Focus Specification for more information.                
                <see>
                    java.awt.KeyboardFocusManager#getCurrentKeyboardFocusManager                    
                </see>
                <see>
                    &lt;a href=&quot;../../java/awt/doc-files/FocusSpec.html&quot;&gt;Focus Specification&lt;/a&gt;                    
                </see>
            </javadoc>
            <declaration name="enabled" type="boolean" line="31"/>
            <javadoc line="32">
                Returns the current &lt;code&gt;KeyboardFocusManager&lt;/code&gt; instance
                  for the calling thread&apos;s context.                
                <return>
                    this thread&apos;s context&apos;s &lt;code&gt;KeyboardFocusManager&lt;/code&gt;                    
                </return>
                <see>
                    #setCurrentManager                    
                </see>
            </javadoc>
            <method name="getCurrentManager" type="FocusManager" line="38">
                <declaration name="manager" type="KeyboardFocusManager" line="39"/>
                <scope line="40"/>
                <scope line="43"/>
            </method>
            <javadoc line="47">
                Sets the current &lt;code&gt;KeyboardFocusManager&lt;/code&gt; instance
                  for the calling thread&apos;s context. If &lt;code&gt;null&lt;/code&gt; is
                  specified, then the current &lt;code&gt;KeyboardFocusManager&lt;/code&gt;
                  is replaced with a new instance of
                  &lt;code&gt;DefaultKeyboardFocusManager&lt;/code&gt;.
                  &lt;p&gt;
                  If a &lt;code&gt;SecurityManager&lt;/code&gt; is installed,
                  the calling thread must be granted the &lt;code&gt;AWTPermission&lt;/code&gt;
                  &quot;replaceKeyboardFocusManager&quot; in order to replace the
                  the current &lt;code&gt;KeyboardFocusManager&lt;/code&gt;.
                  If this permission is not granted,
                  this method will throw a &lt;code&gt;SecurityException&lt;/code&gt;,
                  and the current &lt;code&gt;KeyboardFocusManager&lt;/code&gt; will be unchanged.                
                <param>
                    aFocusManager the new &lt;code&gt;KeyboardFocusManager&lt;/code&gt;
                      for this thread&apos;s context                    
                </param>
                <see>
                    #getCurrentManager                    
                </see>
                <see>
                    java.awt.DefaultKeyboardFocusManager                    
                </see>
                <throws>
                    SecurityException if the calling thread does not have permission
                      to replace the current &lt;code&gt;KeyboardFocusManager&lt;/code&gt;                    
                </throws>
            </javadoc>
            <method name="setCurrentManager" type="void" line="68">
                <params>
                    <param name="aFocusManager" type="FocusManager"/>
                </params>
                <declaration name="toSet" type="KeyboardFocusManager" line="69"/>
            </method>
            <javadoc line="72">
                Changes the current &lt;code&gt;KeyboardFocusManager&lt;/code&gt;&apos;s default
                  &lt;code&gt;FocusTraversalPolicy&lt;/code&gt; to
                  &lt;code&gt;DefaultFocusTraversalPolicy&lt;/code&gt;.                
                <see>
                    java.awt.DefaultFocusTraversalPolicy                    
                </see>
                <see>
                    java.awt.KeyboardFocusManager#setDefaultFocusTraversalPolicy                    
                </see>
                <deprecated>
                    as of 1.4, replaced by
                      &lt;code&gt;KeyboardFocusManager.setDefaultFocusTraversalPolicy(FocusTraversalPolicy)&lt;/code&gt;                    
                </deprecated>
            </javadoc>
            <method name="disableSwingFocusManager" type="void" line="81">
                <scope line="82"/>
            </method>
            <javadoc line="87">
                Returns whether the application has invoked
                  &lt;code&gt;disableSwingFocusManager()&lt;/code&gt;.                
                <see>
                    #disableSwingFocusManager                    
                </see>
                <deprecated>
                    As of 1.4, replaced by
                      &lt;code&gt;KeyboardFocusManager.getDefaultFocusTraversalPolicy()&lt;/code&gt;                    
                </deprecated>
            </javadoc>
            <method name="isFocusManagerEnabled" type="boolean" line="94"/>
        </class>
    </source>