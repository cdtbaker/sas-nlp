<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.basic">
        <import package="sun.swing.SwingUtilities2"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="javax.accessibility.AccessibleContext"/>
        <import package="javax.swing"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.border"/>
        <import package="javax.swing.event.InternalFrameEvent"/>
        <import package="java.util.EventListener"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="java.beans.VetoableChangeListener"/>
        <import package="java.beans.PropertyVetoException"/>
        <import package="sun.swing.DefaultLookup"/>
        <import package="sun.swing.UIAction"/>
        <class name="BasicInternalFrameTitlePane" line="17">
            <extends class="JComponent"/>
            <javadoc line="17">
                The class that manages a basic title bar
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases. The current serialization support is
                  appropriate for short term storage or RMI between applications running
                  the same version of Swing.  As of 1.4, support for long term storage
                  of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                  has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                  Please see {@link java.beans.XMLEncoder}.                
                <author>
                    David Kloba                    
                </author>
                <author>
                    Steve Wilson                    
                </author>
            </javadoc>
            <declaration name="menuBar" type="JMenuBar" line="32"/>
            <declaration name="iconButton" type="JButton" line="33"/>
            <declaration name="maxButton" type="JButton" line="34"/>
            <declaration name="closeButton" type="JButton" line="35"/>
            <declaration name="windowMenu" type="JMenu" line="36"/>
            <declaration name="frame" type="JInternalFrame" line="37"/>
            <declaration name="selectedTitleColor" type="Color" line="38"/>
            <declaration name="selectedTextColor" type="Color" line="39"/>
            <declaration name="notSelectedTitleColor" type="Color" line="40"/>
            <declaration name="notSelectedTextColor" type="Color" line="41"/>
            <declaration name="maxIcon" type="Icon" line="42"/>
            <declaration name="minIcon" type="Icon" line="43"/>
            <declaration name="iconIcon" type="Icon" line="44"/>
            <declaration name="closeIcon" type="Icon" line="45"/>
            <declaration name="propertyChangeListener" type="PropertyChangeListener" line="46"/>
            <declaration name="closeAction" type="Action" line="47"/>
            <declaration name="maximizeAction" type="Action" line="48"/>
            <declaration name="iconifyAction" type="Action" line="49"/>
            <declaration name="restoreAction" type="Action" line="50"/>
            <declaration name="moveAction" type="Action" line="51"/>
            <declaration name="sizeAction" type="Action" line="52"/>
            <declaration name="CLOSE_CMD" type="String" line="53"/>
            <declaration name="ICONIFY_CMD" type="String" line="54"/>
            <declaration name="RESTORE_CMD" type="String" line="55"/>
            <declaration name="MAXIMIZE_CMD" type="String" line="56"/>
            <declaration name="MOVE_CMD" type="String" line="57"/>
            <declaration name="SIZE_CMD" type="String" line="58"/>
            <declaration name="closeButtonToolTip" type="String" line="59"/>
            <declaration name="iconButtonToolTip" type="String" line="60"/>
            <declaration name="restoreButtonToolTip" type="String" line="61"/>
            <declaration name="maxButtonToolTip" type="String" line="62"/>
            <declaration name="handler" type="Handler" line="63"/>
            <method name="BasicInternalFrameTitlePane" type="constructor" line="64">
                <params>
                    <param name="f" type="JInternalFrame"/>
                </params>
            </method>
            <method name="installTitlePane" type="void" line="68"/>
            <method name="addSubComponents" type="void" line="79"/>
            <method name="createActions" type="void" line="85"/>
            <method name="createActionMap" type="ActionMap" line="93">
                <declaration name="map" type="ActionMap" line="94"/>
            </method>
            <method name="installListeners" type="void" line="99">
                <scope line="100"/>
            </method>
            <method name="uninstallListeners" type="void" line="105"/>
            <method name="installDefaults" type="void" line="109"/>
            <method name="uninstallDefaults" type="void" line="124"/>
            <method name="createButtons" type="void" line="126">
                <scope line="129"/>
                <scope line="136"/>
            </method>
            <method name="setButtonIcons" type="void" line="141">
                <scope line="142">
                    <scope line="143"/>
                    <scope line="146"/>
                    <scope line="149"/>
                    <scope line="152"/>
                </scope>
                <scope line="156">
                    <scope line="157"/>
                    <scope line="160"/>
                    <scope line="163"/>
                    <scope line="166"/>
                </scope>
                <scope line="170">
                    <scope line="171"/>
                    <scope line="174"/>
                    <scope line="177"/>
                    <scope line="180"/>
                </scope>
                <scope line="184"/>
            </method>
            <method name="assembleSystemMenu" type="void" line="188"/>
            <method name="addSystemMenuItems" type="void" line="195">
                <params>
                    <param name="systemMenu" type="JMenu"/>
                </params>
                <declaration name="mi" type="JMenuItem" line="196"/>
            </method>
            <method name="createSystemMenu" type="JMenu" line="210"/>
            <method name="createSystemMenuBar" type="JMenuBar" line="213"/>
            <method name="showSystemMenu" type="void" line="218"/>
            <method name="paintComponent" type="void" line="221">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <scope line="223">
                    <declaration name="isSelected" type="boolean" line="224"/>
                    <declaration name="f" type="Font" line="225"/>
                    <declaration name="fm" type="FontMetrics" line="229"/>
                    <declaration name="baseline" type="int" line="230"/>
                    <declaration name="titleX" type="int" line="231"/>
                    <declaration name="r" type="Rectangle" line="232"/>
                    <declaration name="titleW" type="int" line="236"/>
                    <declaration name="title" type="String" line="237"/>
                    <scope line="238"/>
                    <scope line="244"/>
                </scope>
            </method>
            <javadoc line="251">
                Invoked from paintComponent.
                  Paints the background of the titlepane.  All text and icons will
                  then be rendered on top of this background.                
                <param>
                    g the graphics to use to render the background                    
                </param>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="paintTitleBackground" type="void" line="258">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="isSelected" type="boolean" line="259"/>
            </method>
            <method name="getTitle" type="String" line="264">
                <params>
                    <param name="text" type="String"/>
                    <param name="fm" type="FontMetrics"/>
                    <param name="availTextWidth" type="int"/>
                </params>
            </method>
            <javadoc line="267">
                Post a WINDOW_CLOSING-like event to the frame, so that it can
                  be treated like a regular Frame.                
            </javadoc>
            <method name="postClosingEvent" type="void" line="271">
                <params>
                    <param name="frame" type="JInternalFrame"/>
                </params>
                <declaration name="e" type="InternalFrameEvent" line="272"/>
                <scope line="273">
                    <scope line="274"/>
                    <scope line="278"/>
                </scope>
            </method>
            <method name="enableActions" type="void" line="283"/>
            <method name="getHandler" type="Handler" line="291">
                <scope line="292"/>
            </method>
            <method name="createPropertyChangeListener" type="PropertyChangeListener" line="297"/>
            <method name="createLayout" type="LayoutManager" line="300"/>
            <class name="Handler" line="303">
                <implements interface="LayoutManager"/>
                <implements interface="PropertyChangeListener"/>
                <method name="propertyChange" type="void" line="304">
                    <params>
                        <param name="evt" type="PropertyChangeEvent"/>
                    </params>
                    <declaration name="prop" type="String" line="305"/>
                    <scope line="306"/>
                    <scope line="310"/>
                    <scope line="315">
                        <scope line="316"/>
                        <scope line="319"/>
                    </scope>
                    <scope line="323">
                        <scope line="324"/>
                        <scope line="327"/>
                    </scope>
                    <scope line="331">
                        <scope line="332"/>
                        <scope line="335"/>
                    </scope>
                </method>
                <method name="addLayoutComponent" type="void" line="343">
                    <params>
                        <param name="name" type="String"/>
                        <param name="c" type="Component"/>
                    </params>
                </method>
                <method name="removeLayoutComponent" type="void" line="345">
                    <params>
                        <param name="c" type="Component"/>
                    </params>
                </method>
                <method name="preferredLayoutSize" type="Dimension" line="347">
                    <params>
                        <param name="c" type="Container"/>
                    </params>
                </method>
                <method name="minimumLayoutSize" type="Dimension" line="350">
                    <params>
                        <param name="c" type="Container"/>
                    </params>
                    <declaration name="width" type="int" line="351"/>
                    <scope line="352"/>
                    <scope line="355"/>
                    <scope line="358"/>
                    <declaration name="fm" type="FontMetrics" line="361"/>
                    <declaration name="frameTitle" type="String" line="362"/>
                    <declaration name="title_w" type="int" line="363"/>
                    <declaration name="title_length" type="int" line="364"/>
                    <scope line="365">
                        <declaration name="subtitle_w" type="int" line="366"/>
                    </scope>
                    <scope line="369"/>
                    <declaration name="icon" type="Icon" line="372"/>
                    <declaration name="fontHeight" type="int" line="373"/>
                    <declaration name="iconHeight" type="int" line="375"/>
                    <scope line="376"/>
                    <declaration name="height" type="int" line="380"/>
                    <declaration name="dim" type="Dimension" line="381"/>
                    <scope line="382">
                        <declaration name="insets" type="Insets" line="383"/>
                    </scope>
                </method>
                <method name="layoutContainer" type="void" line="389">
                    <params>
                        <param name="c" type="Container"/>
                    </params>
                    <declaration name="leftToRight" type="boolean" line="390"/>
                    <declaration name="w" type="int" line="391"/>
                    <declaration name="h" type="int" line="392"/>
                    <declaration name="x" type="int" line="393"/>
                    <declaration name="buttonHeight" type="int" line="394"/>
                    <declaration name="icon" type="Icon" line="395"/>
                    <declaration name="iconHeight" type="int" line="396"/>
                    <scope line="397"/>
                    <scope line="403"/>
                    <scope line="407"/>
                    <scope line="411"/>
                </method>
            </class>
            <class name="PropertyChangeHandler" line="416">
                <implements interface="PropertyChangeListener"/>
                <javadoc line="416">
                    This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of &lt;Foo&gt;.                    
                </javadoc>
                <method name="propertyChange" type="void" line="421">
                    <params>
                        <param name="evt" type="PropertyChangeEvent"/>
                    </params>
                </method>
            </class>
            <class name="TitlePaneLayout" line="425">
                <implements interface="LayoutManager"/>
                <javadoc line="425">
                    This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of &lt;Foo&gt;.                    
                </javadoc>
                <method name="addLayoutComponent" type="void" line="430">
                    <params>
                        <param name="name" type="String"/>
                        <param name="c" type="Component"/>
                    </params>
                </method>
                <method name="removeLayoutComponent" type="void" line="433">
                    <params>
                        <param name="c" type="Component"/>
                    </params>
                </method>
                <method name="preferredLayoutSize" type="Dimension" line="436">
                    <params>
                        <param name="c" type="Container"/>
                    </params>
                </method>
                <method name="minimumLayoutSize" type="Dimension" line="439">
                    <params>
                        <param name="c" type="Container"/>
                    </params>
                </method>
                <method name="layoutContainer" type="void" line="442">
                    <params>
                        <param name="c" type="Container"/>
                    </params>
                </method>
            </class>
            <class name="CloseAction" line="446">
                <extends class="AbstractAction"/>
                <javadoc line="446">
                    This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of &lt;Foo&gt;.                    
                </javadoc>
                <method name="CloseAction" type="constructor" line="451"/>
                <method name="actionPerformed" type="void" line="454">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                    <scope line="455"/>
                </method>
            </class>
            <class name="MaximizeAction" line="460">
                <extends class="AbstractAction"/>
                <javadoc line="460">
                    This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of &lt;Foo&gt;.                    
                </javadoc>
                <method name="MaximizeAction" type="constructor" line="465"/>
                <method name="actionPerformed" type="void" line="468">
                    <params>
                        <param name="evt" type="ActionEvent"/>
                    </params>
                    <scope line="469">
                        <scope line="470">
                            <scope line="471"/>
                            <scope line="474"/>
                        </scope>
                        <scope line="477">
                            <scope line="478"/>
                            <scope line="481"/>
                        </scope>
                        <scope line="484">
                            <scope line="485"/>
                            <scope line="488"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="IconifyAction" line="494">
                <extends class="AbstractAction"/>
                <javadoc line="494">
                    This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of &lt;Foo&gt;.                    
                </javadoc>
                <method name="IconifyAction" type="constructor" line="499"/>
                <method name="actionPerformed" type="void" line="502">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                    <scope line="503">
                        <scope line="504">
                            <scope line="505"/>
                            <scope line="508"/>
                        </scope>
                        <scope line="511">
                            <scope line="512"/>
                            <scope line="515"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="RestoreAction" line="521">
                <extends class="AbstractAction"/>
                <javadoc line="521">
                    This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of &lt;Foo&gt;.                    
                </javadoc>
                <method name="RestoreAction" type="constructor" line="526"/>
                <method name="actionPerformed" type="void" line="529">
                    <params>
                        <param name="evt" type="ActionEvent"/>
                    </params>
                    <scope line="530">
                        <scope line="531"/>
                        <scope line="534"/>
                    </scope>
                    <scope line="537">
                        <scope line="538"/>
                        <scope line="541"/>
                    </scope>
                    <scope line="544">
                        <scope line="545"/>
                        <scope line="548"/>
                    </scope>
                </method>
            </class>
            <class name="MoveAction" line="553">
                <extends class="AbstractAction"/>
                <javadoc line="553">
                    This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of &lt;Foo&gt;.                    
                </javadoc>
                <method name="MoveAction" type="constructor" line="558"/>
                <method name="actionPerformed" type="void" line="561">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                </method>
            </class>
            <class name="ShowSystemMenuAction" line="564">
                <extends class="AbstractAction"/>
                <declaration name="show" type="boolean" line="565"/>
                <method name="ShowSystemMenuAction" type="constructor" line="566">
                    <params>
                        <param name="show" type="boolean"/>
                    </params>
                </method>
                <method name="actionPerformed" type="void" line="569">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                    <scope line="570"/>
                    <scope line="573"/>
                </method>
            </class>
            <class name="SizeAction" line="578">
                <extends class="AbstractAction"/>
                <javadoc line="578">
                    This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of &lt;Foo&gt;.                    
                </javadoc>
                <method name="SizeAction" type="constructor" line="583"/>
                <method name="actionPerformed" type="void" line="586">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                </method>
            </class>
            <class name="SystemMenuBar" line="589">
                <extends class="JMenuBar"/>
                <javadoc line="589">
                    This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of &lt;Foo&gt;.                    
                </javadoc>
                <method name="isFocusTraversable" type="boolean" line="594"/>
                <method name="requestFocus" type="void" line="597"/>
                <method name="paint" type="void" line="599">
                    <params>
                        <param name="g" type="Graphics"/>
                    </params>
                    <declaration name="icon" type="Icon" line="600"/>
                    <scope line="601"/>
                    <scope line="604">
                        <scope line="605">
                            <declaration name="img" type="Image" line="606"/>
                        </scope>
                    </scope>
                </method>
                <method name="isOpaque" type="boolean" line="612"/>
            </class>
            <class name="NoFocusButton" line="616">
                <extends class="JButton"/>
                <declaration name="uiKey" type="String" line="617"/>
                <method name="NoFocusButton" type="constructor" line="618">
                    <params>
                        <param name="uiKey" type="String"/>
                        <param name="opacityKey" type="String"/>
                    </params>
                    <declaration name="opacity" type="Object" line="622"/>
                    <scope line="623"/>
                </method>
                <method name="isFocusTraversable" type="boolean" line="627"/>
                <method name="requestFocus" type="void" line="630"/>
                <method name="getAccessibleContext" type="AccessibleContext" line="632">
                    <declaration name="ac" type="AccessibleContext" line="633"/>
                    <scope line="634"/>
                </method>
            </class>
        </class>
    </source>