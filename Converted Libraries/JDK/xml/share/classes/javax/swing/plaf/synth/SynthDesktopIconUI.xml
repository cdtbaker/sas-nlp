<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.synth">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="javax.swing"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.plaf.basic.BasicDesktopIconUI"/>
        <import package="java.beans"/>
        <class name="SynthDesktopIconUI" line="36">
            <extends class="BasicDesktopIconUI"/>
            <implements interface="SynthUI"/>
            <implements interface="PropertyChangeListener"/>
            <javadoc line="36">
                Provides the Synth L&amp;F UI delegate for a minimized internal frame on a desktop.                
                <author>
                    Joshua Outwater                    
                </author>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="style" type="SynthStyle" line="44"/>
            <declaration name="handler" type="Handler" line="45"/>
            <javadoc line="47">
                Creates a new UI object for the given component.                
                <param>
                    c component to create UI object for                    
                </param>
                <return>
                    the UI object                    
                </return>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="53">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="57">
                @inheritDoc                
            </javadoc>
            <method name="installComponents" type="void" line="61">
                <scope line="62">
                    <anonymous_class line="63">
                        <method name="getToolTipText" type="String" line="64"/>
                        <method name="getComponentPopupMenu" type="JPopupMenu" line="68"/>
                    </anonymous_class>
                </scope>
                <scope line="76"/>
            </method>
            <javadoc line="84">
                @inheritDoc                
            </javadoc>
            <method name="installListeners" type="void" line="88">
                <scope line="92"/>
            </method>
            <javadoc line="98">
                @inheritDoc                
            </javadoc>
            <method name="uninstallListeners" type="void" line="102">
                <scope line="103"/>
            </method>
            <javadoc line="111">
                @inheritDoc                
            </javadoc>
            <method name="installDefaults" type="void" line="115"/>
            <method name="updateStyle" type="void" line="119">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="120"/>
            </method>
            <javadoc line="125">
                @inheritDoc                
            </javadoc>
            <method name="uninstallDefaults" type="void" line="129">
                <declaration name="context" type="SynthContext" line="130"/>
            </method>
            <javadoc line="136">
                @inheritDoc                
            </javadoc>
            <method name="getContext" type="SynthContext" line="140">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="144">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="state" type="int"/>
                </params>
                <declaration name="region" type="Region" line="145"/>
            </method>
            <method name="getComponentState" type="int" line="150">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="154">
                Notifies this UI delegate to repaint the specified component.
                  This method paints the component background, then calls
                  the {@link #paint(SynthContext,Graphics)} method.
                  &lt;p&gt;In general, this method does not need to be overridden by subclasses.
                  All Look and Feel rendering code should reside in the {@code paint} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="update" type="void" line="167">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="168"/>
            </method>
            <javadoc line="177">
                Paints the specified component according to the Look and Feel.
                  &lt;p&gt;This method is not used by Synth Look and Feel.
                  Painting is handled by the {@link #paint(SynthContext,Graphics)} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="187">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="188"/>
            </method>
            <javadoc line="194">
                Paints the specified component. This implementation does nothing.                
                <param>
                    context context for the component being painted                    
                </param>
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <see>
                    #update(Graphics,JComponent)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="201">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                </params>
            </method>
            <javadoc line="204">
                @inheritDoc                
            </javadoc>
            <method name="paintBorder" type="void" line="209">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <method name="propertyChange" type="void" line="213">
                <params>
                    <param name="evt" type="PropertyChangeEvent"/>
                </params>
                <scope line="214">
                    <scope line="215"/>
                </scope>
                <scope line="218">
                    <declaration name="frame" type="JInternalFrame" line="219"/>
                    <scope line="220">
                        <declaration name="button" type="JToggleButton" line="221"/>
                        <declaration name="prop" type="String" line="222"/>
                        <scope line="223"/>
                        <scope line="225"/>
                        <scope line="228"/>
                    </scope>
                </scope>
            </method>
            <class name="Handler" line="235">
                <implements interface="ActionListener"/>
                <method name="actionPerformed" type="void" line="236">
                    <params>
                        <param name="evt" type="ActionEvent"/>
                    </params>
                    <comment line="239">
                        Either iconify the frame or deiconify and activate it.                        
                    </comment>
                    <scope line="237">
                        <declaration name="button" type="JToggleButton" line="239"/>
                        <scope line="240">
                            <declaration name="selected" type="boolean" line="241"/>
                            <scope line="242"/>
                            <scope line="244">
                                <scope line="246"/>
                            </scope>
                        </scope>
                        <scope line="250"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>