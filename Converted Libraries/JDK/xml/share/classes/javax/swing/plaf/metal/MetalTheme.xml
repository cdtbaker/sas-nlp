<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.metal">
        <import package="javax.swing.plaf"/>
        <import package="javax.swing"/>
        <class name="MetalTheme" line="4">
            <javadoc line="4">
                {@code MetalTheme} provides the color palette and fonts used by
                  the Java Look and Feel.
                  &lt;p&gt;{@code MetalTheme} is abstract, see {@code DefaultMetalTheme} and{@code OceanTheme} for concrete implementations.
                  &lt;p&gt;{@code MetalLookAndFeel} maintains the current theme that the
                  the {@code ComponentUI} implementations for metal use. Refer to{@link MetalLookAndFeel#setCurrentTheme(MetalTheme)} for details on changing
                  the current theme.
                  &lt;p&gt;{@code MetalTheme} provides a number of public methods for getting
                  colors. These methods are implemented in terms of a
                  handful of protected abstract methods. A subclass need only override
                  the protected abstract methods ({@code getPrimary1},{@code getPrimary2}, {@code getPrimary3}, {@code getSecondary1},{@code getSecondary2}, and {@code getSecondary3}); although a subclass
                  may override the other public methods for more control over the set of
                  colors that are used.
                  &lt;p&gt;
                  Concrete implementations of {@code MetalTheme} must return {@code non-null}values from all methods. While the behavior of returning {@code null} is
                  not specified, returning {@code null} will result in incorrect behavior.
                  &lt;p&gt;
                  It is strongly recommended that subclasses return completely opaque colors.
                  To do otherwise may result in rendering problems, such as visual garbage.                
                <see>
                    DefaultMetalTheme                    
                </see>
                <see>
                    OceanTheme                    
                </see>
                <see>
                    MetalLookAndFeel#setCurrentTheme                    
                </see>
                <author>
                    Steve Wilson                    
                </author>
            </javadoc>
            <declaration name="CONTROL_TEXT_FONT" type="int" line="29"/>
            <declaration name="SYSTEM_TEXT_FONT" type="int" line="30"/>
            <declaration name="USER_TEXT_FONT" type="int" line="31"/>
            <declaration name="MENU_TEXT_FONT" type="int" line="32"/>
            <declaration name="WINDOW_TITLE_FONT" type="int" line="33"/>
            <declaration name="SUB_TEXT_FONT" type="int" line="34"/>
            <declaration name="white" type="ColorUIResource" line="35"/>
            <declaration name="black" type="ColorUIResource" line="36"/>
            <method name="getName" type="String" line="37"/>
            <javadoc line="37">
                Returns the name of this theme.                
                <return>
                    the name of this theme                    
                </return>
            </javadoc>
            <method name="getPrimary1" type="ColorUIResource" line="42"/>
            <javadoc line="42">
                Returns the primary 1 color.                
                <return>
                    the primary 1 color                    
                </return>
            </javadoc>
            <method name="getPrimary2" type="ColorUIResource" line="47"/>
            <javadoc line="47">
                Returns the primary 2 color.                
                <return>
                    the primary 2 color                    
                </return>
            </javadoc>
            <method name="getPrimary3" type="ColorUIResource" line="52"/>
            <javadoc line="52">
                Returns the primary 3 color.                
                <return>
                    the primary 3 color                    
                </return>
            </javadoc>
            <method name="getSecondary1" type="ColorUIResource" line="57"/>
            <javadoc line="57">
                Returns the secondary 1 color.                
                <return>
                    the secondary 1 color                    
                </return>
            </javadoc>
            <method name="getSecondary2" type="ColorUIResource" line="62"/>
            <javadoc line="62">
                Returns the secondary 2 color.                
                <return>
                    the secondary 2 color                    
                </return>
            </javadoc>
            <method name="getSecondary3" type="ColorUIResource" line="67"/>
            <javadoc line="67">
                Returns the secondary 3 color.                
                <return>
                    the secondary 3 color                    
                </return>
            </javadoc>
            <method name="getControlTextFont" type="FontUIResource" line="72"/>
            <javadoc line="72">
                Returns the control text font.                
                <return>
                    the control text font                    
                </return>
            </javadoc>
            <method name="getSystemTextFont" type="FontUIResource" line="77"/>
            <javadoc line="77">
                Returns the system text font.                
                <return>
                    the system text font                    
                </return>
            </javadoc>
            <method name="getUserTextFont" type="FontUIResource" line="82"/>
            <javadoc line="82">
                Returns the user text font.                
                <return>
                    the user text font                    
                </return>
            </javadoc>
            <method name="getMenuTextFont" type="FontUIResource" line="87"/>
            <javadoc line="87">
                Returns the menu text font.                
                <return>
                    the menu text font                    
                </return>
            </javadoc>
            <method name="getWindowTitleFont" type="FontUIResource" line="92"/>
            <javadoc line="92">
                Returns the window title font.                
                <return>
                    the window title font                    
                </return>
            </javadoc>
            <method name="getSubTextFont" type="FontUIResource" line="97"/>
            <javadoc line="97">
                Returns the sub-text font.                
                <return>
                    the sub-text font                    
                </return>
            </javadoc>
            <javadoc line="102">
                Returns the white color. This returns opaque white
                  ({@code 0xFFFFFFFF}).                
                <return>
                    the white color                    
                </return>
            </javadoc>
            <method name="getWhite" type="ColorUIResource" line="107"/>
            <javadoc line="110">
                Returns the black color. This returns opaque black
                  ({@code 0xFF000000}).                
                <return>
                    the black color                    
                </return>
            </javadoc>
            <method name="getBlack" type="ColorUIResource" line="115"/>
            <javadoc line="118">
                Returns the focus color. This returns the value of{@code getPrimary2()}.                
                <return>
                    the focus color                    
                </return>
            </javadoc>
            <method name="getFocusColor" type="ColorUIResource" line="122"/>
            <javadoc line="125">
                Returns the desktop color. This returns the value of{@code getPrimary2()}.                
                <return>
                    the desktop color                    
                </return>
            </javadoc>
            <method name="getDesktopColor" type="ColorUIResource" line="129"/>
            <javadoc line="132">
                Returns the control color. This returns the value of{@code getSecondary3()}.                
                <return>
                    the control color                    
                </return>
            </javadoc>
            <method name="getControl" type="ColorUIResource" line="136"/>
            <javadoc line="139">
                Returns the control shadow color. This returns
                  the value of {@code getSecondary2()}.                
                <return>
                    the control shadow color                    
                </return>
            </javadoc>
            <method name="getControlShadow" type="ColorUIResource" line="144"/>
            <javadoc line="147">
                Returns the control dark shadow color. This returns
                  the value of {@code getSecondary1()}.                
                <return>
                    the control dark shadow color                    
                </return>
            </javadoc>
            <method name="getControlDarkShadow" type="ColorUIResource" line="152"/>
            <javadoc line="155">
                Returns the control info color. This returns
                  the value of {@code getBlack()}.                
                <return>
                    the control info color                    
                </return>
            </javadoc>
            <method name="getControlInfo" type="ColorUIResource" line="160"/>
            <javadoc line="163">
                Returns the control highlight color. This returns
                  the value of {@code getWhite()}.                
                <return>
                    the control highlight color                    
                </return>
            </javadoc>
            <method name="getControlHighlight" type="ColorUIResource" line="168"/>
            <javadoc line="171">
                Returns the control disabled color. This returns
                  the value of {@code getSecondary2()}.                
                <return>
                    the control disabled color                    
                </return>
            </javadoc>
            <method name="getControlDisabled" type="ColorUIResource" line="176"/>
            <javadoc line="179">
                Returns the primary control color. This returns
                  the value of {@code getPrimary3()}.                
                <return>
                    the primary control color                    
                </return>
            </javadoc>
            <method name="getPrimaryControl" type="ColorUIResource" line="184"/>
            <javadoc line="187">
                Returns the primary control shadow color. This returns
                  the value of {@code getPrimary2()}.                
                <return>
                    the primary control shadow color                    
                </return>
            </javadoc>
            <method name="getPrimaryControlShadow" type="ColorUIResource" line="192"/>
            <javadoc line="195">
                Returns the primary control dark shadow color. This
                  returns the value of {@code getPrimary1()}.                
                <return>
                    the primary control dark shadow color                    
                </return>
            </javadoc>
            <method name="getPrimaryControlDarkShadow" type="ColorUIResource" line="200"/>
            <javadoc line="203">
                Returns the primary control info color. This
                  returns the value of {@code getBlack()}.                
                <return>
                    the primary control info color                    
                </return>
            </javadoc>
            <method name="getPrimaryControlInfo" type="ColorUIResource" line="208"/>
            <javadoc line="211">
                Returns the primary control highlight color. This
                  returns the value of {@code getWhite()}.                
                <return>
                    the primary control highlight color                    
                </return>
            </javadoc>
            <method name="getPrimaryControlHighlight" type="ColorUIResource" line="216"/>
            <javadoc line="219">
                Returns the system text color. This returns the value of{@code getBlack()}.                
                <return>
                    the system text color                    
                </return>
            </javadoc>
            <method name="getSystemTextColor" type="ColorUIResource" line="223"/>
            <javadoc line="226">
                Returns the control text color. This returns the value of{@code getControlInfo()}.                
                <return>
                    the control text color                    
                </return>
            </javadoc>
            <method name="getControlTextColor" type="ColorUIResource" line="230"/>
            <javadoc line="233">
                Returns the inactive control text color. This returns the value of{@code getControlDisabled()}.                
                <return>
                    the inactive control text color                    
                </return>
            </javadoc>
            <method name="getInactiveControlTextColor" type="ColorUIResource" line="237"/>
            <javadoc line="240">
                Returns the inactive system text color. This returns the value of{@code getSecondary2()}.                
                <return>
                    the inactive system text color                    
                </return>
            </javadoc>
            <method name="getInactiveSystemTextColor" type="ColorUIResource" line="244"/>
            <javadoc line="247">
                Returns the user text color. This returns the value of{@code getBlack()}.                
                <return>
                    the user text color                    
                </return>
            </javadoc>
            <method name="getUserTextColor" type="ColorUIResource" line="251"/>
            <javadoc line="254">
                Returns the text highlight color. This returns the value of{@code getPrimary3()}.                
                <return>
                    the text highlight color                    
                </return>
            </javadoc>
            <method name="getTextHighlightColor" type="ColorUIResource" line="258"/>
            <javadoc line="261">
                Returns the highlighted text color. This returns the value of{@code getControlTextColor()}.                
                <return>
                    the highlighted text color                    
                </return>
            </javadoc>
            <method name="getHighlightedTextColor" type="ColorUIResource" line="265"/>
            <javadoc line="268">
                Returns the window background color. This returns the value of{@code getWhite()}.                
                <return>
                    the window background color                    
                </return>
            </javadoc>
            <method name="getWindowBackground" type="ColorUIResource" line="272"/>
            <javadoc line="275">
                Returns the window title background color. This returns the value of{@code getPrimary3()}.                
                <return>
                    the window title background color                    
                </return>
            </javadoc>
            <method name="getWindowTitleBackground" type="ColorUIResource" line="279"/>
            <javadoc line="282">
                Returns the window title foreground color. This returns the value of{@code getBlack()}.                
                <return>
                    the window title foreground color                    
                </return>
            </javadoc>
            <method name="getWindowTitleForeground" type="ColorUIResource" line="286"/>
            <javadoc line="289">
                Returns the window title inactive background color. This
                  returns the value of {@code getSecondary3()}.                
                <return>
                    the window title inactive background color                    
                </return>
            </javadoc>
            <method name="getWindowTitleInactiveBackground" type="ColorUIResource" line="294"/>
            <javadoc line="297">
                Returns the window title inactive foreground color. This
                  returns the value of {@code getBlack()}.                
                <return>
                    the window title inactive foreground color                    
                </return>
            </javadoc>
            <method name="getWindowTitleInactiveForeground" type="ColorUIResource" line="302"/>
            <javadoc line="305">
                Returns the menu background color. This
                  returns the value of {@code getSecondary3()}.                
                <return>
                    the menu background color                    
                </return>
            </javadoc>
            <method name="getMenuBackground" type="ColorUIResource" line="310"/>
            <javadoc line="313">
                Returns the menu foreground color. This
                  returns the value of {@code getBlack()}.                
                <return>
                    the menu foreground color                    
                </return>
            </javadoc>
            <method name="getMenuForeground" type="ColorUIResource" line="318"/>
            <javadoc line="321">
                Returns the menu selected background color. This
                  returns the value of {@code getPrimary2()}.                
                <return>
                    the menu selected background color                    
                </return>
            </javadoc>
            <method name="getMenuSelectedBackground" type="ColorUIResource" line="326"/>
            <javadoc line="329">
                Returns the menu selected foreground color. This
                  returns the value of {@code getBlack()}.                
                <return>
                    the menu selected foreground color                    
                </return>
            </javadoc>
            <method name="getMenuSelectedForeground" type="ColorUIResource" line="334"/>
            <javadoc line="337">
                Returns the menu disabled foreground color. This
                  returns the value of {@code getSecondary2()}.                
                <return>
                    the menu disabled foreground color                    
                </return>
            </javadoc>
            <method name="getMenuDisabledForeground" type="ColorUIResource" line="342"/>
            <javadoc line="345">
                Returns the separator background color. This
                  returns the value of {@code getWhite()}.                
                <return>
                    the separator background color                    
                </return>
            </javadoc>
            <method name="getSeparatorBackground" type="ColorUIResource" line="350"/>
            <javadoc line="353">
                Returns the separator foreground color. This
                  returns the value of {@code getPrimary1()}.                
                <return>
                    the separator foreground color                    
                </return>
            </javadoc>
            <method name="getSeparatorForeground" type="ColorUIResource" line="358"/>
            <javadoc line="361">
                Returns the accelerator foreground color. This
                  returns the value of {@code getPrimary1()}.                
                <return>
                    the accelerator foreground color                    
                </return>
            </javadoc>
            <method name="getAcceleratorForeground" type="ColorUIResource" line="366"/>
            <javadoc line="369">
                Returns the accelerator selected foreground color. This
                  returns the value of {@code getBlack()}.                
                <return>
                    the accelerator selected foreground color                    
                </return>
            </javadoc>
            <method name="getAcceleratorSelectedForeground" type="ColorUIResource" line="374"/>
            <javadoc line="377">
                Adds values specific to this theme to the defaults table. This method
                  is invoked when the look and feel defaults are obtained from{@code MetalLookAndFeel}.
                  &lt;p&gt;
                  This implementation does nothing; it is provided for subclasses
                  that wish to customize the defaults table.                
                <param>
                    table the {@code UIDefaults} to add the values to                    
                </param>
                <see>
                    MetalLookAndFeel#getDefaults                    
                </see>
            </javadoc>
            <method name="addCustomEntriesToTable" type="void" line="386">
                <params>
                    <param name="table" type="UIDefaults"/>
                </params>
            </method>
            <javadoc line="388">
                This is invoked when a MetalLookAndFeel is installed and about to
                  start using this theme. When we can add API this should be nuked
                  in favor of DefaultMetalTheme overriding addCustomEntriesToTable.                
            </javadoc>
            <method name="install" type="void" line="393"/>
            <javadoc line="395">
                Returns true if this is a theme provided by the core platform.                
            </javadoc>
            <method name="isSystemTheme" type="boolean" line="398"/>
        </class>
    </source>