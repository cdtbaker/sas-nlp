<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.multi">
        <import package="java.util.Vector"/>
        <import package="javax.swing.plaf.TabbedPaneUI"/>
        <import package="javax.swing.JTabbedPane"/>
        <import package="java.awt.Rectangle"/>
        <import package="javax.swing.plaf.ComponentUI"/>
        <import package="javax.swing.JComponent"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Dimension"/>
        <import package="javax.accessibility.Accessible"/>
        <class name="MultiTabbedPaneUI" line="11">
            <extends class="TabbedPaneUI"/>
            <javadoc line="11">
                A multiplexing UI used to combine &lt;code&gt;TabbedPaneUI&lt;/code&gt;s.
                  &lt;p&gt;This file was automatically generated by AutoMulti.                
                <author>
                    Otto Multey                    
                </author>
            </javadoc>
            <declaration name="uis" type="Vector" line="17"/>
            <javadoc line="17">
                The vector containing the real UIs.  This is populated
                  in the call to &lt;code&gt;createUI&lt;/code&gt;, and can be obtained by calling
                  the &lt;code&gt;getUIs&lt;/code&gt; method.  The first element is guaranteed to be the real UI
                  obtained from the default look and feel.                
            </javadoc>
            <javadoc line="24">
                Returns the list of UIs associated with this multiplexing UI.  This
                  allows processing of the UIs by an application aware of multiplexing
                  UIs on components.                
            </javadoc>
            <method name="getUIs" type="ComponentUI[]" line="29"/>
            <javadoc line="32">
                Invokes the &lt;code&gt;tabForCoordinate&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default &lt;code&gt;LookAndFeel&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="tabForCoordinate" type="int" line="37">
                <params>
                    <param name="a" type="JTabbedPane"/>
                    <param name="b" type="int"/>
                    <param name="c" type="int"/>
                </params>
                <declaration name="returnValue" type="int" line="38"/>
                <scope line="39"/>
            </method>
            <javadoc line="44">
                Invokes the &lt;code&gt;getTabBounds&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default &lt;code&gt;LookAndFeel&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getTabBounds" type="Rectangle" line="49">
                <params>
                    <param name="a" type="JTabbedPane"/>
                    <param name="b" type="int"/>
                </params>
                <declaration name="returnValue" type="Rectangle" line="50"/>
                <scope line="51"/>
            </method>
            <javadoc line="56">
                Invokes the &lt;code&gt;getTabRunCount&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default &lt;code&gt;LookAndFeel&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getTabRunCount" type="int" line="61">
                <params>
                    <param name="a" type="JTabbedPane"/>
                </params>
                <declaration name="returnValue" type="int" line="62"/>
                <scope line="63"/>
            </method>
            <javadoc line="68">
                Invokes the &lt;code&gt;contains&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default &lt;code&gt;LookAndFeel&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="contains" type="boolean" line="73">
                <params>
                    <param name="a" type="JComponent"/>
                    <param name="b" type="int"/>
                    <param name="c" type="int"/>
                </params>
                <declaration name="returnValue" type="boolean" line="74"/>
                <scope line="75"/>
            </method>
            <javadoc line="80">
                Invokes the &lt;code&gt;update&lt;/code&gt; method on each UI handled by this object.                
            </javadoc>
            <method name="update" type="void" line="83">
                <params>
                    <param name="a" type="Graphics"/>
                    <param name="b" type="JComponent"/>
                </params>
                <scope line="84"/>
            </method>
            <javadoc line="88">
                Returns a multiplexing UI instance if any of the auxiliary
                  &lt;code&gt;LookAndFeel&lt;/code&gt;s supports this UI.  Otherwise, just returns the
                  UI object obtained from the default &lt;code&gt;LookAndFeel&lt;/code&gt;.                
            </javadoc>
            <method name="createUI" type="ComponentUI" line="93">
                <params>
                    <param name="a" type="JComponent"/>
                </params>
                <declaration name="mui" type="ComponentUI" line="94"/>
            </method>
            <javadoc line="97">
                Invokes the &lt;code&gt;installUI&lt;/code&gt; method on each UI handled by this object.                
            </javadoc>
            <method name="installUI" type="void" line="100">
                <params>
                    <param name="a" type="JComponent"/>
                </params>
                <scope line="101"/>
            </method>
            <javadoc line="105">
                Invokes the &lt;code&gt;uninstallUI&lt;/code&gt; method on each UI handled by this object.                
            </javadoc>
            <method name="uninstallUI" type="void" line="108">
                <params>
                    <param name="a" type="JComponent"/>
                </params>
                <scope line="109"/>
            </method>
            <javadoc line="113">
                Invokes the &lt;code&gt;paint&lt;/code&gt; method on each UI handled by this object.                
            </javadoc>
            <method name="paint" type="void" line="116">
                <params>
                    <param name="a" type="Graphics"/>
                    <param name="b" type="JComponent"/>
                </params>
                <scope line="117"/>
            </method>
            <javadoc line="121">
                Invokes the &lt;code&gt;getPreferredSize&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default &lt;code&gt;LookAndFeel&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getPreferredSize" type="Dimension" line="126">
                <params>
                    <param name="a" type="JComponent"/>
                </params>
                <declaration name="returnValue" type="Dimension" line="127"/>
                <scope line="128"/>
            </method>
            <javadoc line="133">
                Invokes the &lt;code&gt;getMinimumSize&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default &lt;code&gt;LookAndFeel&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getMinimumSize" type="Dimension" line="138">
                <params>
                    <param name="a" type="JComponent"/>
                </params>
                <declaration name="returnValue" type="Dimension" line="139"/>
                <scope line="140"/>
            </method>
            <javadoc line="145">
                Invokes the &lt;code&gt;getMaximumSize&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default &lt;code&gt;LookAndFeel&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getMaximumSize" type="Dimension" line="150">
                <params>
                    <param name="a" type="JComponent"/>
                </params>
                <declaration name="returnValue" type="Dimension" line="151"/>
                <scope line="152"/>
            </method>
            <javadoc line="157">
                Invokes the &lt;code&gt;getAccessibleChildrenCount&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default &lt;code&gt;LookAndFeel&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getAccessibleChildrenCount" type="int" line="162">
                <params>
                    <param name="a" type="JComponent"/>
                </params>
                <declaration name="returnValue" type="int" line="163"/>
                <scope line="164"/>
            </method>
            <javadoc line="169">
                Invokes the &lt;code&gt;getAccessibleChild&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default &lt;code&gt;LookAndFeel&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getAccessibleChild" type="Accessible" line="174">
                <params>
                    <param name="a" type="JComponent"/>
                    <param name="b" type="int"/>
                </params>
                <declaration name="returnValue" type="Accessible" line="175"/>
                <scope line="176"/>
            </method>
        </class>
    </source>