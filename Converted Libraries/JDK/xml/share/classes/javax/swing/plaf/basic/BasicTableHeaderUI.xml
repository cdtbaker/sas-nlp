<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.basic">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.util"/>
        <import package="javax.swing"/>
        <import package="javax.swing.event"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.table"/>
        <import package="sun.swing"/>
        <class name="BasicTableHeaderUI" line="10">
            <extends class="TableHeaderUI"/>
            <javadoc line="10">
                BasicTableHeaderUI implementation                
                <author>
                    Alan Chung                    
                </author>
                <author>
                    Philip Milne                    
                </author>
            </javadoc>
            <declaration name="resizeCursor" type="Cursor" line="16"/>
            <declaration name="header" type="JTableHeader" line="17"/>
            <javadoc line="17">
                The JTableHeader that is delegating the painting to this UI.                
            </javadoc>
            <declaration name="rendererPane" type="CellRendererPane" line="21"/>
            <declaration name="mouseInputListener" type="MouseInputListener" line="22"/>
            <declaration name="rolloverColumn" type="int" line="23"/>
            <declaration name="selectedColumnIndex" type="int" line="24"/>
            <declaration name="focusListener" type="FocusListener" line="25"/>
            <anonymous_class line="25">
                <method name="focusGained" type="void" line="26">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                </method>
                <method name="focusLost" type="void" line="29">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                </method>
                <method name="repaintHeader" type="void" line="32">
                    <params>
                        <param name="source" type="Object"/>
                    </params>
                    <scope line="33">
                        <declaration name="th" type="JTableHeader" line="34"/>
                        <declaration name="ui" type="BasicTableHeaderUI" line="35"/>
                        <scope line="36"/>
                    </scope>
                </method>
            </anonymous_class>
            <class name="MouseInputHandler" line="44">
                <implements interface="MouseInputListener"/>
                <javadoc line="44">
                    This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of {@code BasicTableHeaderUI}.                    
                </javadoc>
                <declaration name="mouseXOffset" type="int" line="49"/>
                <declaration name="otherCursor" type="Cursor" line="50"/>
                <method name="mouseClicked" type="void" line="51">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <scope line="52"/>
                    <scope line="55">
                        <declaration name="table" type="JTable" line="56"/>
                        <declaration name="sorter" type="RowSorter" line="57"/>
                        <scope line="58">
                            <declaration name="columnIndex" type="int" line="59"/>
                            <scope line="60"/>
                        </scope>
                    </scope>
                </method>
                <method name="getResizingColumn" type="TableColumn" line="67">
                    <params>
                        <param name="p" type="Point"/>
                    </params>
                </method>
                <method name="getResizingColumn" type="TableColumn" line="70">
                    <params>
                        <param name="p" type="Point"/>
                        <param name="column" type="int"/>
                    </params>
                    <scope line="71"/>
                    <declaration name="r" type="Rectangle" line="74"/>
                    <scope line="76"/>
                    <declaration name="midPoint" type="int" line="79"/>
                    <declaration name="columnIndex" type="int" line="80"/>
                    <scope line="81"/>
                    <scope line="84"/>
                    <scope line="87"/>
                </method>
                <method name="mousePressed" type="void" line="92">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <scope line="93"/>
                    <declaration name="p" type="Point" line="99"/>
                    <declaration name="columnModel" type="TableColumnModel" line="100"/>
                    <declaration name="index" type="int" line="101"/>
                    <scope line="102">
                        <declaration name="resizingColumn" type="TableColumn" line="103"/>
                        <scope line="104">
                            <scope line="106"/>
                            <scope line="109"/>
                        </scope>
                        <scope line="113">
                            <declaration name="hitColumn" type="TableColumn" line="114"/>
                        </scope>
                    </scope>
                    <scope line="119">
                        <declaration name="oldRolloverColumn" type="int" line="120"/>
                    </scope>
                </method>
                <method name="swapCursor" type="void" line="125">
                    <declaration name="tmp" type="Cursor" line="126"/>
                </method>
                <method name="mouseMoved" type="void" line="130">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <scope line="131"/>
                    <scope line="134"/>
                </method>
                <method name="mouseDragged" type="void" line="139">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <scope line="140"/>
                    <declaration name="mouseX" type="int" line="143"/>
                    <declaration name="resizingColumn" type="TableColumn" line="144"/>
                    <declaration name="draggedColumn" type="TableColumn" line="145"/>
                    <declaration name="headerLeftToRight" type="boolean" line="146"/>
                    <scope line="147">
                        <declaration name="oldWidth" type="int" line="148"/>
                        <declaration name="newWidth" type="int" line="149"/>
                        <scope line="150"/>
                        <scope line="153"/>
                    </scope>
                    <scope line="158">
                        <declaration name="cm" type="TableColumnModel" line="159"/>
                        <declaration name="draggedDistance" type="int" line="160"/>
                        <declaration name="direction" type="int" line="161"/>
                        <declaration name="columnIndex" type="int" line="162"/>
                        <declaration name="newColumnIndex" type="int" line="163"/>
                        <scope line="164">
                            <declaration name="width" type="int" line="165"/>
                            <scope line="166">
                                <declaration name="selectedIndex" type="int" line="169"/>
                            </scope>
                        </scope>
                    </scope>
                </method>
                <method name="mouseReleased" type="void" line="179">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <scope line="180"/>
                </method>
                <method name="mouseEntered" type="void" line="188">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <scope line="189"/>
                </method>
                <method name="mouseExited" type="void" line="194">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <scope line="195"/>
                    <declaration name="oldRolloverColumn" type="int" line="198"/>
                </method>
                <method name="setDraggedDistance" type="void" line="202">
                    <params>
                        <param name="draggedDistance" type="int"/>
                        <param name="column" type="int"/>
                    </params>
                    <scope line="204"/>
                </method>
            </class>
            <javadoc line="209">
                Creates the mouse listener for the JTableHeader.                
            </javadoc>
            <method name="createMouseInputListener" type="MouseInputListener" line="212"/>
            <method name="createUI" type="ComponentUI" line="215">
                <params>
                    <param name="h" type="JComponent"/>
                </params>
            </method>
            <method name="installUI" type="void" line="218">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="226">
                Initializes JTableHeader properties such as font, foreground, and background.
                  The font, foreground, and background properties are only set if their
                  current value is either null or a UIResource, other properties are set
                  if the current value is null.                
                <see>
                    #installUI                    
                </see>
            </javadoc>
            <method name="installDefaults" type="void" line="233"/>
            <javadoc line="237">
                Attaches listeners to the JTableHeader.                
            </javadoc>
            <method name="installListeners" type="void" line="240"/>
            <javadoc line="246">
                Register all keyboard actions on the JTableHeader.                
            </javadoc>
            <method name="installKeyboardActions" type="void" line="249">
                <declaration name="keyMap" type="InputMap" line="250"/>
            </method>
            <method name="uninstallUI" type="void" line="254">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="uninstallDefaults" type="void" line="262"/>
            <method name="uninstallListeners" type="void" line="264"/>
            <javadoc line="269">
                Unregisters default key actions.                
            </javadoc>
            <method name="uninstallKeyboardActions" type="void" line="272"/>
            <javadoc line="276">
                Populates TableHeader&apos;s actions.                
            </javadoc>
            <method name="loadActionMap" type="void" line="279">
                <params>
                    <param name="map" type="LazyActionMap"/>
                </params>
            </method>
            <javadoc line="289">
                Returns the index of the column header over which the mouse
                  currently is. When the mouse is not over the table header,
                  -1 is returned.                
                <see>
                    #rolloverColumnUpdated(int,int)                    
                </see>
                <return>
                    the index of the current rollover column                    
                </return>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="getRolloverColumn" type="int" line="297"/>
            <javadoc line="300">
                This method gets called every time when a rollover column in the table
                  header is updated. Every look and feel that supports a rollover effect
                  in a table header should override this method and repaint the header.                
                <param>
                    oldColumn the index of the previous rollover column or -1 if the
                      mouse was not over a column                    
                </param>
                <param>
                    newColumn the index of the new rollover column or -1 if the mouse
                      is not over a column                    
                </param>
                <see>
                    #getRolloverColumn()                    
                </see>
                <see>
                    JTableHeader#getHeaderRect(int)                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="rolloverColumnUpdated" type="void" line="312">
                <params>
                    <param name="oldColumn" type="int"/>
                    <param name="newColumn" type="int"/>
                </params>
            </method>
            <method name="updateRolloverColumn" type="void" line="314">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
                <scope line="315">
                    <declaration name="col" type="int" line="316"/>
                    <scope line="317">
                        <declaration name="oldRolloverColumn" type="int" line="318"/>
                    </scope>
                </scope>
            </method>
            <method name="selectNextColumn" type="int" line="324">
                <params>
                    <param name="doIt" type="boolean"/>
                </params>
                <declaration name="newIndex" type="int" line="325"/>
                <scope line="326">
                    <scope line="328"/>
                </scope>
            </method>
            <method name="selectPreviousColumn" type="int" line="334">
                <params>
                    <param name="doIt" type="boolean"/>
                </params>
                <declaration name="newIndex" type="int" line="335"/>
                <scope line="336">
                    <scope line="338"/>
                </scope>
            </method>
            <javadoc line="344">
                Selects the specified column in the table header. Repaints the
                  affected header cells and makes sure the newly selected one is visible.                
            </javadoc>
            <method name="selectColumn" type="void" line="348">
                <params>
                    <param name="newColIndex" type="int"/>
                </params>
            </method>
            <method name="selectColumn" type="void" line="351">
                <params>
                    <param name="newColIndex" type="int"/>
                    <param name="doScroll" type="boolean"/>
                </params>
                <declaration name="repaintRect" type="Rectangle" line="352"/>
                <scope line="357"/>
            </method>
            <javadoc line="362">
                Used by selectColumn to scroll horizontally, if necessary,
                  to ensure that the newly selected column is visible.                
            </javadoc>
            <method name="scrollToColumn" type="void" line="366">
                <params>
                    <param name="col" type="int"/>
                </params>
                <declaration name="container" type="Container" line="367"/>
                <declaration name="table" type="JTable" line="368"/>
                <scope line="369"/>
                <declaration name="vis" type="Rectangle" line="372"/>
                <declaration name="cellBounds" type="Rectangle" line="373"/>
            </method>
            <method name="getSelectedColumnIndex" type="int" line="378">
                <declaration name="numCols" type="int" line="379"/>
                <scope line="380"/>
            </method>
            <method name="canResize" type="boolean" line="385">
                <params>
                    <param name="column" type="TableColumn"/>
                    <param name="header" type="JTableHeader"/>
                </params>
            </method>
            <method name="changeColumnWidth" type="int" line="388">
                <params>
                    <param name="resizingColumn" type="TableColumn"/>
                    <param name="th" type="JTableHeader"/>
                    <param name="oldWidth" type="int"/>
                    <param name="newWidth" type="int"/>
                </params>
                <declaration name="container" type="Container" line="390"/>
                <declaration name="table" type="JTable" line="391"/>
                <scope line="392"/>
                <scope line="395">
                    <declaration name="viewport" type="JViewport" line="396"/>
                    <declaration name="viewportWidth" type="int" line="397"/>
                    <declaration name="diff" type="int" line="398"/>
                    <declaration name="newHeaderWidth" type="int" line="399"/>
                    <declaration name="tableSize" type="Dimension" line="400"/>
                    <scope line="403">
                        <declaration name="p" type="Point" line="404"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="412">
                Returns the baseline.                
                <throws>
                    NullPointerException {@inheritDoc}                    
                </throws>
                <throws>
                    IllegalArgumentException {@inheritDoc}                    
                </throws>
                <see>
                    javax.swing.JComponent#getBaseline(int,int)                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="getBaseline" type="int" line="419">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="baseline" type="int" line="421"/>
                <declaration name="columnModel" type="TableColumnModel" line="422"/>
                <scope line="423">
                    <declaration name="aColumn" type="TableColumn" line="424"/>
                    <declaration name="comp" type="Component" line="425"/>
                    <declaration name="pref" type="Dimension" line="426"/>
                    <declaration name="columnBaseline" type="int" line="427"/>
                    <scope line="428">
                        <scope line="429"/>
                        <scope line="432"/>
                    </scope>
                </scope>
            </method>
            <method name="paint" type="void" line="440">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <scope line="441"/>
                <declaration name="ltr" type="boolean" line="444"/>
                <declaration name="clip" type="Rectangle" line="445"/>
                <declaration name="left" type="Point" line="446"/>
                <declaration name="right" type="Point" line="447"/>
                <declaration name="cm" type="TableColumnModel" line="448"/>
                <declaration name="cMin" type="int" line="449"/>
                <declaration name="cMax" type="int" line="450"/>
                <scope line="451"/>
                <scope line="454"/>
                <declaration name="draggedColumn" type="TableColumn" line="457"/>
                <declaration name="columnWidth" type="int" line="458"/>
                <declaration name="cellRect" type="Rectangle" line="459"/>
                <declaration name="aColumn" type="TableColumn" line="460"/>
                <scope line="461">
                    <scope line="462">
                        <scope line="466"/>
                    </scope>
                </scope>
                <scope line="472">
                    <scope line="473">
                        <scope line="477"/>
                    </scope>
                </scope>
                <scope line="483">
                    <declaration name="draggedColumnIndex" type="int" line="484"/>
                    <declaration name="draggedCellRect" type="Rectangle" line="485"/>
                </scope>
            </method>
            <method name="getHeaderRenderer" type="Component" line="495">
                <params>
                    <param name="columnIndex" type="int"/>
                </params>
                <declaration name="aColumn" type="TableColumn" line="496"/>
                <declaration name="renderer" type="TableCellRenderer" line="497"/>
                <scope line="498"/>
                <declaration name="hasFocus" type="boolean" line="501"/>
            </method>
            <method name="paintCell" type="void" line="504">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="cellRect" type="Rectangle"/>
                    <param name="columnIndex" type="int"/>
                </params>
                <declaration name="component" type="Component" line="505"/>
            </method>
            <method name="viewIndexForColumn" type="int" line="508">
                <params>
                    <param name="aColumn" type="TableColumn"/>
                </params>
                <declaration name="cm" type="TableColumnModel" line="509"/>
                <scope line="510">
                    <scope line="511"/>
                </scope>
            </method>
            <method name="getHeaderHeight" type="int" line="517">
                <declaration name="height" type="int" line="518"/>
                <declaration name="accomodatedDefault" type="boolean" line="519"/>
                <declaration name="columnModel" type="TableColumnModel" line="520"/>
                <scope line="521">
                    <declaration name="aColumn" type="TableColumn" line="522"/>
                    <declaration name="isDefault" type="boolean" line="523"/>
                    <scope line="524">
                        <declaration name="comp" type="Component" line="525"/>
                        <declaration name="rendererHeight" type="int" line="526"/>
                        <scope line="528">
                            <declaration name="headerValue" type="Object" line="529"/>
                            <scope line="530">
                                <scope line="532"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="createHeaderSize" type="Dimension" line="541">
                <params>
                    <param name="width" type="long"/>
                </params>
                <scope line="542"/>
            </method>
            <javadoc line="547">
                Return the minimum size of the header. The minimum width is the sum
                  of the minimum widths of each column (plus inter-cell spacing).                
            </javadoc>
            <method name="getMinimumSize" type="Dimension" line="551">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="width" type="long" line="552"/>
                <declaration name="enumeration" type="Enumeration" line="553"/>
                <scope line="554">
                    <declaration name="aColumn" type="TableColumn" line="555"/>
                </scope>
            </method>
            <javadoc line="560">
                Return the preferred size of the header. The preferred height is the
                  maximum of the preferred heights of all of the components provided
                  by the header renderers. The preferred width is the sum of the
                  preferred widths of each column (plus inter-cell spacing).                
            </javadoc>
            <method name="getPreferredSize" type="Dimension" line="566">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="width" type="long" line="567"/>
                <declaration name="enumeration" type="Enumeration" line="568"/>
                <scope line="569">
                    <declaration name="aColumn" type="TableColumn" line="570"/>
                </scope>
            </method>
            <javadoc line="575">
                Return the maximum size of the header. The maximum width is the sum
                  of the maximum widths of each column (plus inter-cell spacing).                
            </javadoc>
            <method name="getMaximumSize" type="Dimension" line="579">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="width" type="long" line="580"/>
                <declaration name="enumeration" type="Enumeration" line="581"/>
                <scope line="582">
                    <declaration name="aColumn" type="TableColumn" line="583"/>
                </scope>
            </method>
            <class name="Actions" line="588">
                <extends class="UIAction"/>
                <declaration name="TOGGLE_SORT_ORDER" type="String" line="589"/>
                <declaration name="SELECT_COLUMN_TO_LEFT" type="String" line="590"/>
                <declaration name="SELECT_COLUMN_TO_RIGHT" type="String" line="591"/>
                <declaration name="MOVE_COLUMN_LEFT" type="String" line="592"/>
                <declaration name="MOVE_COLUMN_RIGHT" type="String" line="593"/>
                <declaration name="RESIZE_LEFT" type="String" line="594"/>
                <declaration name="RESIZE_RIGHT" type="String" line="595"/>
                <declaration name="FOCUS_TABLE" type="String" line="596"/>
                <method name="Actions" type="constructor" line="597">
                    <params>
                        <param name="name" type="String"/>
                    </params>
                </method>
                <method name="isEnabled" type="boolean" line="600">
                    <params>
                        <param name="sender" type="Object"/>
                    </params>
                    <scope line="601">
                        <declaration name="th" type="JTableHeader" line="602"/>
                        <declaration name="cm" type="TableColumnModel" line="603"/>
                        <scope line="604"/>
                        <declaration name="key" type="String" line="607"/>
                        <declaration name="ui" type="BasicTableHeaderUI" line="608"/>
                        <scope line="609">
                            <scope line="610"/>
                            <scope line="613"/>
                            <scope line="616"/>
                            <scope line="619"/>
                        </scope>
                    </scope>
                </method>
                <method name="actionPerformed" type="void" line="626">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                    <declaration name="th" type="JTableHeader" line="627"/>
                    <declaration name="ui" type="BasicTableHeaderUI" line="628"/>
                    <scope line="629"/>
                    <declaration name="name" type="String" line="632"/>
                    <scope line="633">
                        <declaration name="table" type="JTable" line="634"/>
                        <declaration name="sorter" type="RowSorter" line="635"/>
                        <scope line="636">
                            <declaration name="columnIndex" type="int" line="637"/>
                        </scope>
                    </scope>
                    <scope line="642">
                        <scope line="643"/>
                        <scope line="646"/>
                    </scope>
                    <scope line="650">
                        <scope line="651"/>
                        <scope line="654"/>
                    </scope>
                    <scope line="658"/>
                    <scope line="661"/>
                    <scope line="664"/>
                    <scope line="667"/>
                    <scope line="670">
                        <declaration name="table" type="JTable" line="671"/>
                        <scope line="672"/>
                    </scope>
                </method>
                <method name="moveColumn" type="void" line="677">
                    <params>
                        <param name="leftArrow" type="boolean"/>
                        <param name="th" type="JTableHeader"/>
                        <param name="ui" type="BasicTableHeaderUI"/>
                    </params>
                </method>
                <method name="maybeMoveColumn" type="boolean" line="680">
                    <params>
                        <param name="leftArrow" type="boolean"/>
                        <param name="th" type="JTableHeader"/>
                        <param name="ui" type="BasicTableHeaderUI"/>
                        <param name="doIt" type="boolean"/>
                    </params>
                    <declaration name="oldIndex" type="int" line="681"/>
                    <declaration name="newIndex" type="int" line="682"/>
                    <scope line="683"/>
                    <scope line="686"/>
                    <scope line="689">
                        <scope line="690"/>
                        <scope line="693"/>
                    </scope>
                </method>
                <method name="resize" type="void" line="699">
                    <params>
                        <param name="leftArrow" type="boolean"/>
                        <param name="th" type="JTableHeader"/>
                        <param name="ui" type="BasicTableHeaderUI"/>
                    </params>
                    <declaration name="columnIndex" type="int" line="700"/>
                    <declaration name="resizingColumn" type="TableColumn" line="701"/>
                    <declaration name="oldWidth" type="int" line="703"/>
                    <declaration name="newWidth" type="int" line="704"/>
                    <scope line="705"/>
                    <scope line="708"/>
                </method>
            </class>
        </class>
    </source>