<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.basic">
        <import package="javax.swing"/>
        <import package="javax.swing.event"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.awt.datatransfer"/>
        <import package="java.beans"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.Hashtable"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Collections"/>
        <import package="java.util.Comparator"/>
        <import package="javax.swing.plaf.ComponentUI"/>
        <import package="javax.swing.plaf.UIResource"/>
        <import package="javax.swing.plaf.TreeUI"/>
        <import package="javax.swing.tree"/>
        <import package="javax.swing.text.Position"/>
        <import package="javax.swing.plaf.basic.DragRecognitionSupport.BeforeDrag"/>
        <import package="sun.swing.SwingUtilities2"/>
        <import package="sun.swing.DefaultLookup"/>
        <import package="sun.swing.UIAction"/>
        <class name="BasicTreeUI" line="50">
            <extends class="TreeUI"/>
            <comment line="64">
                Old actions forward to an instance of this.                
            </comment>
            <comment line="151">
                Following 4 ivars are only valid when editing.                
            </comment>
            <comment line="176">
                Cached listeners                
            </comment>
            <comment line="336">
                Methods for configuring the behavior of the tree. None of them
                 push the value to the JTree instance. You should really only
                 call these methods on the JTree.                
            </comment>
            <comment line="511">
                TreeUI methods                
            </comment>
            <comment line="630">
                Install methods                
            </comment>
            <comment line="836">
                Create methods.                
            </comment>
            <comment line="974">
                Uninstall methods                
            </comment>
            <comment line="1134">
                Painting routines.                
            </comment>
            <comment line="1610">
                Generic painting methods                
            </comment>
            <comment line="1614">
                Draws the icon centered at (x,y)                
            </comment>
            <comment line="1622">
                This method is slow -- revisit when Java2D is ready.
                 assumes x1 &lt;= x2                
            </comment>
            <comment line="1635">
                This method is slow -- revisit when Java2D is ready.
                 assumes y1 &lt;= y2                
            </comment>
            <comment line="1648">
                Various local methods                
            </comment>
            <comment line="2083">
                cover method for startEditing that allows us to pass extra
                 information into that method via a class variable                
            </comment>
            <comment line="2198">
                Following are primarily for handling mouse events.                
            </comment>
            <comment line="2391">
                The following selection methods (lead/anchor) are covers for the
                 methods in JTree.                
            </comment>
            <comment line="2525">
                BasicTreeUI.TreeExpansionHandler                
            </comment>
            <comment line="2601">
                End of BasicTreeUI.ComponentHandler                
            </comment>
            <comment line="2629">
                End of BasicTreeUI.TreeModelHandler                
            </comment>
            <comment line="2673">
                BasicTreeUI.CellEditorHandler                
            </comment>
            <comment line="2717">
                End of BasicTreeUI.KeyHandler                
            </comment>
            <comment line="2744">
                End of class BasicTreeUI.FocusHandler                
            </comment>
            <comment line="2817">
                End of class BasicTreeUI.NodeDimensionsHandler                
            </comment>
            <comment line="2854">
                End of BasicTreeUI.MouseHandler                
            </comment>
            <comment line="2872">
                End of BasicTreeUI.PropertyChangeHandler                
            </comment>
            <comment line="2890">
                End of BasicTreeUI.SelectionModelPropertyChangeHandler                
            </comment>
            <comment line="2925">
                BasicTreeUI.TreeTraverseAction                
            </comment>
            <comment line="2959">
                BasicTreeUI.TreePageAction                
            </comment>
            <comment line="2995">
                End of class BasicTreeUI.TreeIncrementAction                
            </comment>
            <comment line="3030">
                End of class BasicTreeUI.TreeHomeAction                
            </comment>
            <comment line="3049">
                End of class BasicTreeUI.TreeToggleAction                
            </comment>
            <comment line="3068">
                End of class BasicTreeUI.TreeCancelEditingAction                
            </comment>
            <comment line="3163">
                End of class BasicTreeUI.MouseInputHandler                
            </comment>
            <javadoc line="50">
                The basic L&amp;F for a hierarchical data structure.
                  &lt;p&gt;                
                <author>
                    Scott Violet                    
                </author>
                <author>
                    Shannon Hickey (drag and drop)                    
                </author>
            </javadoc>
            <declaration name="BASELINE_COMPONENT_KEY" type="StringBuilder" line="60"/>
            <declaration name="SHARED_ACTION" type="Actions" line="64"/>
            <declaration name="collapsedIcon" type="Icon" line="66"/>
            <declaration name="expandedIcon" type="Icon" line="67"/>
            <declaration name="hashColor" type="Color" line="69"/>
            <javadoc line="69">
                Color used to draw hash marks.  If &lt;code&gt;null&lt;/code&gt; no hash marks
                  will be drawn.                
            </javadoc>
            <declaration name="leftChildIndent" type="int" line="75"/>
            <javadoc line="75">
                Distance between left margin and where vertical dashes will be
                  drawn.                
            </javadoc>
            <declaration name="rightChildIndent" type="int" line="78"/>
            <javadoc line="78">
                Distance to add to leftChildIndent to determine where cell
                  contents will be drawn.                
            </javadoc>
            <declaration name="totalChildIndent" type="int" line="81"/>
            <javadoc line="81">
                Total distance that will be indented.  The sum of leftChildIndent
                  and rightChildIndent.                
            </javadoc>
            <declaration name="preferredMinSize" type="Dimension" line="85"/>
            <javadoc line="85">
                Minimum preferred size.                
            </javadoc>
            <declaration name="lastSelectedRow" type="int" line="88"/>
            <javadoc line="88">
                Index of the row that was last selected.                
            </javadoc>
            <declaration name="tree" type="JTree" line="91"/>
            <javadoc line="91">
                Component that we&apos;re going to be drawing into.                
            </javadoc>
            <declaration name="currentCellRenderer" type="TreeCellRenderer" line="94"/>
            <javadoc line="94">
                Renderer that is being used to do the actual cell drawing.                
            </javadoc>
            <declaration name="createdRenderer" type="boolean" line="97"/>
            <javadoc line="97">
                Set to true if the renderer that is currently in the tree was
                  created by this instance.                
            </javadoc>
            <declaration name="cellEditor" type="TreeCellEditor" line="101"/>
            <javadoc line="101">
                Editor for the tree.                
            </javadoc>
            <declaration name="createdCellEditor" type="boolean" line="104"/>
            <javadoc line="104">
                Set to true if editor that is currently in the tree was
                  created by this instance.                
            </javadoc>
            <declaration name="stopEditingInCompleteEditing" type="boolean" line="108"/>
            <javadoc line="108">
                Set to false when editing and shouldSelectCell() returns true meaning
                  the node should be selected before editing, used in completeEditing.                
            </javadoc>
            <declaration name="rendererPane" type="CellRendererPane" line="112"/>
            <javadoc line="112">
                Used to paint the TreeCellRenderer.                
            </javadoc>
            <declaration name="preferredSize" type="Dimension" line="115"/>
            <javadoc line="115">
                Size needed to completely display all the nodes.                
            </javadoc>
            <declaration name="validCachedPreferredSize" type="boolean" line="118"/>
            <javadoc line="118">
                Is the preferredSize valid?                
            </javadoc>
            <declaration name="treeState" type="AbstractLayoutCache" line="121"/>
            <javadoc line="121">
                Object responsible for handling sizing and expanded issues.                
            </javadoc>
            <declaration name="drawingCache" type="Hashtable&lt;TreePath,Boolean&gt;" line="128"/>
            <javadoc line="128">
                Used for minimizing the drawing of vertical lines.                
            </javadoc>
            <declaration name="largeModel" type="boolean" line="131"/>
            <javadoc line="131">
                True if doing optimizations for a largeModel. Subclasses that
                  don&apos;t support this may wish to override createLayoutCache to not
                  return a FixedHeightLayoutCache instance.                
            </javadoc>
            <declaration name="nodeDimensions" type="AbstractLayoutCache.NodeDimensions" line="136"/>
            <javadoc line="136">
                Reponsible for telling the TreeState the size needed for a node.                
            </javadoc>
            <declaration name="treeModel" type="TreeModel" line="139"/>
            <javadoc line="139">
                Used to determine what to display.                
            </javadoc>
            <declaration name="treeSelectionModel" type="TreeSelectionModel" line="142"/>
            <javadoc line="142">
                Model maintaing the selection.                
            </javadoc>
            <declaration name="depthOffset" type="int" line="145"/>
            <javadoc line="145">
                How much the depth should be offset to properly calculate
                  x locations. This is based on whether or not the root is visible,
                  and if the root handles are visible.                
            </javadoc>
            <declaration name="editingComponent" type="Component" line="152"/>
            <javadoc line="152">
                When editing, this will be the Component that is doing the actual
                  editing.                
            </javadoc>
            <declaration name="editingPath" type="TreePath" line="156"/>
            <javadoc line="156">
                Path that is being edited.                
            </javadoc>
            <declaration name="editingRow" type="int" line="159"/>
            <javadoc line="159">
                Row that is being edited. Should only be referenced if
                  editingComponent is not null.                
            </javadoc>
            <declaration name="editorHasDifferentSize" type="boolean" line="163"/>
            <javadoc line="163">
                Set to true if the editor has a different size than the renderer.                
            </javadoc>
            <declaration name="leadRow" type="int" line="166"/>
            <javadoc line="166">
                Row correspondin to lead path.                
            </javadoc>
            <declaration name="ignoreLAChange" type="boolean" line="168"/>
            <javadoc line="168">
                If true, the property change event for LEAD_SELECTION_PATH_PROPERTY,
                  or ANCHOR_SELECTION_PATH_PROPERTY will not generate a repaint.                
            </javadoc>
            <declaration name="leftToRight" type="boolean" line="172"/>
            <javadoc line="172">
                Indicates the orientation.                
            </javadoc>
            <declaration name="propertyChangeListener" type="PropertyChangeListener" line="176"/>
            <declaration name="selectionModelPropertyChangeListener" type="PropertyChangeListener" line="177"/>
            <declaration name="mouseListener" type="MouseListener" line="178"/>
            <declaration name="focusListener" type="FocusListener" line="179"/>
            <declaration name="keyListener" type="KeyListener" line="180"/>
            <declaration name="componentListener" type="ComponentListener" line="181"/>
            <javadoc line="181">
                Used for large models, listens for moved/resized events and
                  updates the validCachedPreferredSize bit accordingly.                
            </javadoc>
            <declaration name="cellEditorListener" type="CellEditorListener" line="184"/>
            <javadoc line="184">
                Listens for CellEditor events.                
            </javadoc>
            <declaration name="treeSelectionListener" type="TreeSelectionListener" line="186"/>
            <javadoc line="186">
                Updates the display when the selection changes.                
            </javadoc>
            <declaration name="treeModelListener" type="TreeModelListener" line="188"/>
            <javadoc line="188">
                Is responsible for updating the display based on model events.                
            </javadoc>
            <declaration name="treeExpansionListener" type="TreeExpansionListener" line="190"/>
            <javadoc line="190">
                Updates the treestate as the nodes expand.                
            </javadoc>
            <declaration name="paintLines" type="boolean" line="193"/>
            <javadoc line="193">
                UI property indicating whether to paint lines                
            </javadoc>
            <declaration name="lineTypeDashed" type="boolean" line="196"/>
            <javadoc line="196">
                UI property for painting dashed lines                
            </javadoc>
            <declaration name="timeFactor" type="long" line="199"/>
            <javadoc line="199">
                The time factor to treate the series of typed alphanumeric key
                  as prefix for first letter navigation.                
            </javadoc>
            <declaration name="handler" type="Handler" line="205"/>
            <declaration name="releaseEvent" type="MouseEvent" line="207"/>
            <javadoc line="207">
                A temporary variable for communication between startEditingOnRelease
                  and startEditing.                
            </javadoc>
            <method name="createUI" type="ComponentUI" line="213">
                <params>
                    <param name="x" type="JComponent"/>
                </params>
            </method>
            <method name="loadActionMap" type="void" line="218">
                <params>
                    <param name="map" type="LazyActionMap"/>
                </params>
            </method>
            <method name="BasicTreeUI" type="constructor" line="283"/>
            <method name="getHashColor" type="Color" line="287"/>
            <method name="setHashColor" type="void" line="291">
                <params>
                    <param name="color" type="Color"/>
                </params>
            </method>
            <method name="setLeftChildIndent" type="void" line="295">
                <params>
                    <param name="newAmount" type="int"/>
                </params>
            </method>
            <method name="getLeftChildIndent" type="int" line="303"/>
            <method name="setRightChildIndent" type="void" line="307">
                <params>
                    <param name="newAmount" type="int"/>
                </params>
            </method>
            <method name="getRightChildIndent" type="int" line="315"/>
            <method name="setExpandedIcon" type="void" line="319">
                <params>
                    <param name="newG" type="Icon"/>
                </params>
            </method>
            <method name="getExpandedIcon" type="Icon" line="323"/>
            <method name="setCollapsedIcon" type="void" line="327">
                <params>
                    <param name="newG" type="Icon"/>
                </params>
            </method>
            <method name="getCollapsedIcon" type="Icon" line="331"/>
            <javadoc line="341">
                Updates the componentListener, if necessary.                
            </javadoc>
            <method name="setLargeModel" type="void" line="344">
                <params>
                    <param name="largeModel" type="boolean"/>
                </params>
                <scope line="347"/>
            </method>
            <method name="isLargeModel" type="boolean" line="357"/>
            <javadoc line="361">
                Sets the row height, this is forwarded to the treeState.                
            </javadoc>
            <method name="setRowHeight" type="void" line="364">
                <params>
                    <param name="rowHeight" type="int"/>
                </params>
                <scope line="366"/>
            </method>
            <method name="getRowHeight" type="int" line="373"/>
            <javadoc line="377">
                Sets the TreeCellRenderer to &lt;code&gt;tcr&lt;/code&gt;. This invokes
                  &lt;code&gt;updateRenderer&lt;/code&gt;.                
            </javadoc>
            <method name="setCellRenderer" type="void" line="381">
                <params>
                    <param name="tcr" type="TreeCellRenderer"/>
                </params>
                <scope line="384"/>
            </method>
            <javadoc line="390">
                Return currentCellRenderer, which will either be the trees
                  renderer, or defaultCellRenderer, which ever wasn&apos;t null.                
            </javadoc>
            <method name="getCellRenderer" type="TreeCellRenderer" line="394"/>
            <javadoc line="398">
                Sets the TreeModel.                
            </javadoc>
            <method name="setModel" type="void" line="401">
                <params>
                    <param name="model" type="TreeModel"/>
                </params>
                <scope line="406"/>
                <scope line="410"/>
            </method>
            <method name="getModel" type="TreeModel" line="417"/>
            <javadoc line="421">
                Sets the root to being visible.                
            </javadoc>
            <method name="setRootVisible" type="void" line="424">
                <params>
                    <param name="newValue" type="boolean"/>
                </params>
                <scope line="427"/>
            </method>
            <method name="isRootVisible" type="boolean" line="434"/>
            <javadoc line="438">
                Determines whether the node handles are to be displayed.                
            </javadoc>
            <method name="setShowsRootHandles" type="void" line="441">
                <params>
                    <param name="newValue" type="boolean"/>
                </params>
                <scope line="444"/>
            </method>
            <method name="getShowsRootHandles" type="boolean" line="450"/>
            <javadoc line="454">
                Sets the cell editor.                
            </javadoc>
            <method name="setCellEditor" type="void" line="457">
                <params>
                    <param name="editor" type="TreeCellEditor"/>
                </params>
            </method>
            <method name="getCellEditor" type="TreeCellEditor" line="461"/>
            <javadoc line="465">
                Configures the receiver to allow, or not allow, editing.                
            </javadoc>
            <method name="setEditable" type="void" line="468">
                <params>
                    <param name="newValue" type="boolean"/>
                </params>
            </method>
            <method name="isEditable" type="boolean" line="472"/>
            <javadoc line="476">
                Resets the selection model. The appropriate listener are installed
                  on the model.                
            </javadoc>
            <method name="setSelectionModel" type="void" line="480">
                <params>
                    <param name="newLSM" type="TreeSelectionModel"/>
                </params>
                <scope line="490"/>
            </method>
            <method name="getSelectionModel" type="TreeSelectionModel" line="506"/>
            <javadoc line="514">
                Returns the Rectangle enclosing the label portion that the
                  last item in path will be drawn into.  Will return null if
                  any component in path is currently valid.                
            </javadoc>
            <method name="getPathBounds" type="Rectangle" line="519">
                <params>
                    <param name="tree" type="JTree"/>
                    <param name="path" type="TreePath"/>
                </params>
                <scope line="520"/>
            </method>
            <method name="getPathBounds" type="Rectangle" line="527">
                <params>
                    <param name="path" type="TreePath"/>
                    <param name="insets" type="Insets"/>
                    <param name="bounds" type="Rectangle"/>
                </params>
                <scope line="529">
                    <scope line="530"/>
                    <scope line="532"/>
                </scope>
            </method>
            <javadoc line="541">
                Returns the path for passed in row.  If row is not visible
                  null is returned.                
            </javadoc>
            <method name="getPathForRow" type="TreePath" line="545">
                <params>
                    <param name="tree" type="JTree"/>
                    <param name="row" type="int"/>
                </params>
            </method>
            <javadoc line="549">
                Returns the row that the last item identified in path is visible
                  at.  Will return -1 if any of the elements in path are not
                  currently visible.                
            </javadoc>
            <method name="getRowForPath" type="int" line="554">
                <params>
                    <param name="tree" type="JTree"/>
                    <param name="path" type="TreePath"/>
                </params>
            </method>
            <javadoc line="558">
                Returns the number of rows that are being displayed.                
            </javadoc>
            <method name="getRowCount" type="int" line="561">
                <params>
                    <param name="tree" type="JTree"/>
                </params>
            </method>
            <javadoc line="565">
                Returns the path to the node that is closest to x,y.  If
                  there is nothing currently visible this will return null, otherwise
                  it&apos;ll always return a valid path.  If you need to test if the
                  returned object is exactly at x, y you should get the bounds for
                  the returned path and test x, y against that.                
            </javadoc>
            <method name="getClosestPathForLocation" type="TreePath" line="572">
                <params>
                    <param name="tree" type="JTree"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <comment line="575">
                    TreeState doesn&apos;t care about the x location, hence it isn&apos;t
                     adjusted                    
                </comment>
                <scope line="573"/>
            </method>
            <javadoc line="582">
                Returns true if the tree is being edited.  The item that is being
                  edited can be returned by getEditingPath().                
            </javadoc>
            <method name="isEditing" type="boolean" line="586">
                <params>
                    <param name="tree" type="JTree"/>
                </params>
            </method>
            <javadoc line="590">
                Stops the current editing session.  This has no effect if the
                  tree isn&apos;t being edited.  Returns true if the editor allows the
                  editing session to stop.                
            </javadoc>
            <method name="stopEditing" type="boolean" line="595">
                <params>
                    <param name="tree" type="JTree"/>
                </params>
                <scope line="596"/>
            </method>
            <javadoc line="603">
                Cancels the current editing session.                
            </javadoc>
            <method name="cancelEditing" type="void" line="606">
                <params>
                    <param name="tree" type="JTree"/>
                </params>
                <scope line="607"/>
            </method>
            <javadoc line="612">
                Selects the last item in path and tries to edit it.  Editing will
                  fail if the CellEditor won&apos;t allow it for the selected item.                
            </javadoc>
            <method name="startEditingAtPath" type="void" line="616">
                <params>
                    <param name="tree" type="JTree"/>
                    <param name="path" type="TreePath"/>
                </params>
            </method>
            <javadoc line="622">
                Returns the path to the element that is being edited.                
            </javadoc>
            <method name="getEditingPath" type="TreePath" line="625">
                <params>
                    <param name="tree" type="JTree"/>
                </params>
            </method>
            <method name="installUI" type="void" line="633">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <comment line="643">
                    Boilerplate install block                    
                </comment>
                <scope line="634"/>
            </method>
            <javadoc line="651">
                Invoked after the &lt;code&gt;tree&lt;/code&gt; instance variable has been
                  set, but before any defaults/listeners have been installed.                
            </javadoc>
            <method name="prepareForUIInstall" type="void" line="655">
                <comment line="659">
                    Data member initializations                    
                </comment>
            </method>
            <javadoc line="671">
                Invoked from installUI after all the defaults/listeners have been
                  installed.                
            </javadoc>
            <method name="completeUIInstall" type="void" line="675">
                <comment line="677">
                    Custom install code                    
                </comment>
                <comment line="687">
                    Create, if necessary, the TreeState instance.                    
                </comment>
            </method>
            <method name="installDefaults" type="void" line="693">
                <comment line="704">
                    JTree&apos;s original row height is 16.  To correctly display the
                     contents on Linux we should have set it to 18, Windows 19 and
                     Solaris 20.  As these values vary so much it&apos;s too hard to
                     be backward compatable and try to update the row height, we&apos;re
                     therefor NOT going to adjust the row height based on font.  If the
                     developer changes the font, it&apos;s there responsibility to update
                     the row height.                    
                </comment>
                <scope line="695"/>
                <scope line="698"/>
                <declaration name="scrollsOnExpand" type="Object" line="724"/>
                <scope line="725"/>
                <declaration name="l" type="Long" line="732"/>
                <declaration name="showsRootHandles" type="Object" line="735"/>
                <scope line="736"/>
            </method>
            <method name="installListeners" type="void" line="742">
                <comment line="781">
                    default TransferHandler doesn&apos;t support drop
                     so we don&apos;t want drop handling                    
                </comment>
                <scope line="744"/>
                <scope line="747">
                    <scope line="749"/>
                </scope>
                <scope line="753"/>
                <scope line="756"/>
                <scope line="759"/>
                <scope line="763"/>
                <scope line="768"/>
                <scope line="773"/>
                <declaration name="th" type="TransferHandler" line="777"/>
                <scope line="778">
                    <scope line="782"/>
                </scope>
            </method>
            <method name="installKeyboardActions" type="void" line="790">
                <declaration name="km" type="InputMap" line="791"/>
            </method>
            <method name="getInputMap" type="InputMap" line="804">
                <params>
                    <param name="condition" type="int"/>
                </params>
                <scope line="805"/>
                <scope line="809">
                    <declaration name="keyMap" type="InputMap" line="810"/>
                    <declaration name="rtlKeyMap" type="InputMap" line="812"/>
                    <scope line="816"/>
                    <scope line="818"/>
                </scope>
            </method>
            <javadoc line="826">
                Intalls the subcomponents of the tree, which is the renderer pane.                
            </javadoc>
            <method name="installComponents" type="void" line="829">
                <scope line="830"/>
            </method>
            <javadoc line="839">
                Creates an instance of NodeDimensions that is able to determine
                  the size of a given node in the tree.                
            </javadoc>
            <method name="createNodeDimensions" type="AbstractLayoutCache.NodeDimensions" line="843"/>
            <javadoc line="847">
                Creates a listener that is responsible that updates the UI based on
                  how the tree changes.                
            </javadoc>
            <method name="createPropertyChangeListener" type="PropertyChangeListener" line="851"/>
            <method name="getHandler" type="Handler" line="855">
                <scope line="856"/>
            </method>
            <javadoc line="862">
                Creates the listener responsible for updating the selection based on
                  mouse events.                
            </javadoc>
            <method name="createMouseListener" type="MouseListener" line="866"/>
            <javadoc line="870">
                Creates a listener that is responsible for updating the display
                  when focus is lost/gained.                
            </javadoc>
            <method name="createFocusListener" type="FocusListener" line="874"/>
            <javadoc line="878">
                Creates the listener reponsible for getting key events from
                  the tree.                
            </javadoc>
            <method name="createKeyListener" type="KeyListener" line="882"/>
            <javadoc line="886">
                Creates the listener responsible for getting property change
                  events from the selection model.                
            </javadoc>
            <method name="createSelectionModelPropertyChangeListener" type="PropertyChangeListener" line="890"/>
            <javadoc line="894">
                Creates the listener that updates the display based on selection change
                  methods.                
            </javadoc>
            <method name="createTreeSelectionListener" type="TreeSelectionListener" line="898"/>
            <javadoc line="902">
                Creates a listener to handle events from the current editor.                
            </javadoc>
            <method name="createCellEditorListener" type="CellEditorListener" line="905"/>
            <javadoc line="909">
                Creates and returns a new ComponentHandler. This is used for
                  the large model to mark the validCachedPreferredSize as invalid
                  when the component moves.                
            </javadoc>
            <method name="createComponentListener" type="ComponentListener" line="914"/>
            <javadoc line="918">
                Creates and returns the object responsible for updating the treestate
                  when nodes expanded state changes.                
            </javadoc>
            <method name="createTreeExpansionListener" type="TreeExpansionListener" line="922"/>
            <javadoc line="926">
                Creates the object responsible for managing what is expanded, as
                  well as the size of nodes.                
            </javadoc>
            <method name="createLayoutCache" type="AbstractLayoutCache" line="930">
                <scope line="931"/>
            </method>
            <javadoc line="937">
                Returns the renderer pane that renderer components are placed in.                
            </javadoc>
            <method name="createCellRendererPane" type="CellRendererPane" line="940"/>
            <javadoc line="944">
                Creates a default cell editor.                
            </javadoc>
            <method name="createDefaultCellEditor" type="TreeCellEditor" line="947">
                <scope line="949">
                    <declaration name="editor" type="DefaultTreeCellEditor" line="950"/>
                </scope>
            </method>
            <javadoc line="958">
                Returns the default cell renderer that is used to do the
                  stamping of each node.                
            </javadoc>
            <method name="createDefaultCellRenderer" type="TreeCellRenderer" line="962"/>
            <javadoc line="966">
                Returns a listener that can update the tree when the model changes.                
            </javadoc>
            <method name="createTreeModelListener" type="TreeModelListener" line="969"/>
            <method name="uninstallUI" type="void" line="977">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="prepareForUIUninstall" type="void" line="990"/>
            <method name="completeUIUninstall" type="void" line="993">
                <scope line="994"/>
                <scope line="997"/>
            </method>
            <method name="uninstallDefaults" type="void" line="1019">
                <scope line="1020"/>
            </method>
            <method name="uninstallListeners" type="void" line="1025">
                <scope line="1026"/>
                <scope line="1029"/>
                <scope line="1032">
                    <scope line="1034"/>
                </scope>
                <scope line="1038"/>
                <scope line="1041"/>
                <scope line="1044"/>
                <scope line="1047"/>
                <scope line="1051"/>
                <scope line="1055"/>
            </method>
            <method name="uninstallKeyboardActions" type="void" line="1062"/>
            <javadoc line="1070">
                Uninstalls the renderer pane.                
            </javadoc>
            <method name="uninstallComponents" type="void" line="1073">
                <scope line="1074"/>
            </method>
            <javadoc line="1079">
                Recomputes the right margin, and invalidates any tree states                
            </javadoc>
            <method name="redoTheLayout" type="void" line="1082">
                <scope line="1083"/>
            </method>
            <javadoc line="1088">
                Returns the baseline.                
                <throws>
                    NullPointerException {@inheritDoc}                    
                </throws>
                <throws>
                    IllegalArgumentException {@inheritDoc}                    
                </throws>
                <see>
                    javax.swing.JComponent#getBaseline(int,int)                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="getBaseline" type="int" line="1096">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="lafDefaults" type="UIDefaults" line="1098"/>
                <declaration name="renderer" type="Component" line="1099"/>
                <scope line="1101">
                    <declaration name="tcr" type="TreeCellRenderer" line="1102"/>
                </scope>
                <declaration name="rowHeight" type="int" line="1107"/>
                <declaration name="baseline" type="int" line="1108"/>
                <scope line="1109"/>
                <scope line="1112">
                    <declaration name="pref" type="Dimension" line="1113"/>
                </scope>
            </method>
            <javadoc line="1119">
                Returns an enum indicating how the baseline of the component
                  changes as the size changes.                
                <throws>
                    NullPointerException {@inheritDoc}                    
                </throws>
                <see>
                    javax.swing.JComponent#getBaseline(int,int)                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="getBaselineResizeBehavior" type="Component.BaselineResizeBehavior" line="1128">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="paint" type="void" line="1137">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <comment line="1143">
                    Should never happen if installed for a UI                    
                </comment>
                <comment line="1162">
                    Draw the lines, knobs, and rows                    
                </comment>
                <comment line="1164">
                    Find each parent and have them draw a line to their last child                    
                </comment>
                <comment line="1173">
                    Information for the node being rendered.                    
                </comment>
                <comment line="1194">
                    This will only happen if the model changes out
                     from under us (usually in another thread).
                     Swing isn&apos;t multithreaded, but I&apos;ll put this
                     check in anyway.                    
                </comment>
                <comment line="1199">
                    See if the vertical line to the parent has been drawn.                    
                </comment>
                <comment line="1238">
                    Empty out the renderer pane, allowing renderers to be gc&apos;ed.                    
                </comment>
                <scope line="1138"/>
                <scope line="1143"/>
                <declaration name="paintBounds" type="Rectangle" line="1147"/>
                <declaration name="insets" type="Insets" line="1148"/>
                <declaration name="initialPath" type="TreePath" line="1149"/>
                <declaration name="paintingEnumerator" type="Enumeration" line="1151"/>
                <declaration name="row" type="int" line="1153"/>
                <declaration name="endY" type="int" line="1154"/>
                <scope line="1158">
                    <declaration name="parentPath" type="TreePath" line="1159"/>
                    <scope line="1165"/>
                    <declaration name="done" type="boolean" line="1171"/>
                    <declaration name="isExpanded" type="boolean" line="1173"/>
                    <declaration name="hasBeenExpanded" type="boolean" line="1174"/>
                    <declaration name="isLeaf" type="boolean" line="1175"/>
                    <declaration name="boundsBuffer" type="Rectangle" line="1176"/>
                    <declaration name="bounds" type="Rectangle" line="1177"/>
                    <declaration name="path" type="TreePath" line="1178"/>
                    <declaration name="rootVisible" type="boolean" line="1179"/>
                    <scope line="1181">
                        <scope line="1183">
                            <scope line="1187"/>
                            <scope line="1200">
                                <scope line="1201"/>
                            </scope>
                            <scope line="1211"/>
                            <scope line="1218"/>
                        </scope>
                        <scope line="1228"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="1243">
                Tells if a {@code DropLocation} should be indicated by a line between
                  nodes. This is meant for {@code javax.swing.DropMode.INSERT} and{@code javax.swing.DropMode.ON_OR_INSERT} drop modes.                
                <param>
                    loc a {@code DropLocation}                    
                </param>
                <return>
                    {@code true} if the drop location should be shown as a line                    
                </return>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="isDropLine" type="boolean" line="1252">
                <params>
                    <param name="loc" type="JTree.DropLocation"/>
                </params>
            </method>
            <javadoc line="1256">
                Paints the drop line.                
                <param>
                    g {@code Graphics} object to draw on                    
                </param>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="paintDropLine" type="void" line="1262">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="loc" type="JTree.DropLocation" line="1263"/>
                <scope line="1264"/>
                <declaration name="c" type="Color" line="1268"/>
                <scope line="1269">
                    <declaration name="rect" type="Rectangle" line="1271"/>
                </scope>
            </method>
            <javadoc line="1276">
                Returns a ubounding box for the drop line.                
                <param>
                    loc a {@code DropLocation}                    
                </param>
                <return>
                    bounding box for the drop line                    
                </return>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="getDropLineRect" type="Rectangle" line="1283">
                <params>
                    <param name="loc" type="JTree.DropLocation"/>
                </params>
                <declaration name="rect" type="Rectangle" line="1284"/>
                <declaration name="path" type="TreePath" line="1285"/>
                <declaration name="index" type="int" line="1286"/>
                <declaration name="ltr" type="boolean" line="1287"/>
                <declaration name="insets" type="Insets" line="1289"/>
                <scope line="1291"/>
                <scope line="1296">
                    <declaration name="model" type="TreeModel" line="1297"/>
                    <declaration name="root" type="Object" line="1298"/>
                    <scope line="1301">
                        <declaration name="xRect" type="Rectangle" line="1305"/>
                        <scope line="1307"/>
                        <scope line="1309"/>
                        <scope line="1313">
                            <declaration name="lastChildPath" type="TreePath" line="1314"/>
                        </scope>
                    </scope>
                    <scope line="1321"/>
                </scope>
                <scope line="1327"/>
                <scope line="1331"/>
            </method>
            <javadoc line="1341">
                Paints the horizontal part of the leg. The receiver should
                  NOT modify &lt;code&gt;clipBounds&lt;/code&gt;, or &lt;code&gt;insets&lt;/code&gt;.&lt;p&gt;
                  NOTE: &lt;code&gt;parentRow&lt;/code&gt; can be -1 if the root is not visible.                
            </javadoc>
            <method name="paintHorizontalPartOfLeg" type="void" line="1351">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="clipBounds" type="Rectangle"/>
                    <param name="insets" type="Insets"/>
                    <param name="bounds" type="Rectangle"/>
                    <param name="path" type="TreePath"/>
                    <param name="row" type="int"/>
                    <param name="isExpanded" type="boolean"/>
                    <param name="hasBeenExpanded" type="boolean"/>
                    <param name="isLeaf" type="boolean"/>
                </params>
                <comment line="1357">
                    Don&apos;t paint the legs for the root&apos;ish node if the                    
                </comment>
                <scope line="1352"/>
                <declaration name="depth" type="int" line="1357"/>
                <scope line="1359"/>
                <declaration name="clipLeft" type="int" line="1363"/>
                <declaration name="clipRight" type="int" line="1364"/>
                <declaration name="clipTop" type="int" line="1365"/>
                <declaration name="clipBottom" type="int" line="1366"/>
                <declaration name="lineY" type="int" line="1367"/>
                <scope line="1369">
                    <declaration name="leftX" type="int" line="1370"/>
                    <declaration name="nodeX" type="int" line="1371"/>
                    <scope line="1377"/>
                </scope>
                <scope line="1382">
                    <declaration name="nodeX" type="int" line="1383"/>
                    <declaration name="rightX" type="int" line="1384"/>
                    <scope line="1390"/>
                </scope>
            </method>
            <javadoc line="1398">
                Paints the vertical part of the leg. The receiver should
                  NOT modify &lt;code&gt;clipBounds&lt;/code&gt;, &lt;code&gt;insets&lt;/code&gt;.&lt;p&gt;                
            </javadoc>
            <method name="paintVerticalPartOfLeg" type="void" line="1403">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="clipBounds" type="Rectangle"/>
                    <param name="insets" type="Insets"/>
                    <param name="path" type="TreePath"/>
                </params>
                <comment line="1432">
                    This shouldn&apos;t happen, but if the model is modified
                     in another thread it is possible for this to happen.
                     Swing isn&apos;t multithreaded, but I&apos;ll add this check in
                     anyway.                    
                </comment>
                <scope line="1404"/>
                <declaration name="depth" type="int" line="1408"/>
                <scope line="1409"/>
                <declaration name="lineX" type="int" line="1412"/>
                <scope line="1413"/>
                <scope line="1416"/>
                <declaration name="clipLeft" type="int" line="1420"/>
                <declaration name="clipRight" type="int" line="1421"/>
                <scope line="1423">
                    <declaration name="clipTop" type="int" line="1424"/>
                    <declaration name="clipBottom" type="int" line="1425"/>
                    <declaration name="parentBounds" type="Rectangle" line="1426"/>
                    <declaration name="lastChildBounds" type="Rectangle" line="1427"/>
                    <declaration name="top" type="int" line="1437"/>
                    <scope line="1439"/>
                    <scope line="1446">
                        <declaration name="model" type="TreeModel" line="1447"/>
                        <scope line="1449">
                            <declaration name="root" type="Object" line="1450"/>
                            <scope line="1452"/>
                        </scope>
                    </scope>
                    <declaration name="bottom" type="int" line="1463"/>
                    <scope line="1466"/>
                </scope>
            </method>
            <javadoc line="1473">
                Paints the expand (toggle) part of a row. The receiver should
                  NOT modify &lt;code&gt;clipBounds&lt;/code&gt;, or &lt;code&gt;insets&lt;/code&gt;.                
            </javadoc>
            <method name="paintExpandControl" type="void" line="1482">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="clipBounds" type="Rectangle"/>
                    <param name="insets" type="Insets"/>
                    <param name="bounds" type="Rectangle"/>
                    <param name="path" type="TreePath"/>
                    <param name="row" type="int"/>
                    <param name="isExpanded" type="boolean"/>
                    <param name="hasBeenExpanded" type="boolean"/>
                    <param name="isLeaf" type="boolean"/>
                </params>
                <comment line="1486">
                    Draw icons if not a leaf and either hasn&apos;t been loaded,
                     or the model child count is &gt; 0.                    
                </comment>
                <declaration name="value" type="Object" line="1483"/>
                <scope line="1488">
                    <declaration name="middleXOfKnob" type="int" line="1489"/>
                    <scope line="1490"/>
                    <scope line="1492"/>
                    <declaration name="middleYOfKnob" type="int" line="1495"/>
                    <scope line="1497">
                        <declaration name="expandedIcon" type="Icon" line="1498"/>
                    </scope>
                    <scope line="1503">
                        <declaration name="collapsedIcon" type="Icon" line="1504"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="1512">
                Paints the renderer part of a row. The receiver should
                  NOT modify &lt;code&gt;clipBounds&lt;/code&gt;, or &lt;code&gt;insets&lt;/code&gt;.                
            </javadoc>
            <method name="paintRow" type="void" line="1519">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="clipBounds" type="Rectangle"/>
                    <param name="insets" type="Insets"/>
                    <param name="bounds" type="Rectangle"/>
                    <param name="path" type="TreePath"/>
                    <param name="row" type="int"/>
                    <param name="isExpanded" type="boolean"/>
                    <param name="hasBeenExpanded" type="boolean"/>
                    <param name="isLeaf" type="boolean"/>
                </params>
                <comment line="1521">
                    Don&apos;t paint the renderer if editing this row.                    
                </comment>
                <declaration name="leadIndex" type="int" line="1524"/>
                <scope line="1526"/>
                <declaration name="component" type="Component" line="1532"/>
            </method>
            <javadoc line="1543">
                Returns true if the expand (toggle) control should be drawn for
                  the specified row.                
            </javadoc>
            <method name="shouldPaintExpandControl" type="boolean" line="1550">
                <params>
                    <param name="path" type="TreePath"/>
                    <param name="row" type="int"/>
                    <param name="isExpanded" type="boolean"/>
                    <param name="hasBeenExpanded" type="boolean"/>
                    <param name="isLeaf" type="boolean"/>
                </params>
                <declaration name="depth" type="int" line="1554"/>
            </method>
            <javadoc line="1562">
                Paints a vertical line.                
            </javadoc>
            <method name="paintVerticalLine" type="void" line="1566">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                    <param name="x" type="int"/>
                    <param name="top" type="int"/>
                    <param name="bottom" type="int"/>
                </params>
                <scope line="1567"/>
                <scope line="1569"/>
            </method>
            <javadoc line="1574">
                Paints a horizontal line.                
            </javadoc>
            <method name="paintHorizontalLine" type="void" line="1578">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                    <param name="y" type="int"/>
                    <param name="left" type="int"/>
                    <param name="right" type="int"/>
                </params>
                <scope line="1579"/>
                <scope line="1581"/>
            </method>
            <javadoc line="1586">
                The vertical element of legs between nodes starts at the bottom of the
                  parent node by default.  This method makes the leg start below that.                
            </javadoc>
            <method name="getVerticalLegBuffer" type="int" line="1590"/>
            <javadoc line="1594">
                The horizontal element of legs between nodes starts at the
                  right of the left-hand side of the child node by default.  This
                  method makes the leg end before that.                
            </javadoc>
            <method name="getHorizontalLegBuffer" type="int" line="1599"/>
            <method name="findCenteredX" type="int" line="1603">
                <params>
                    <param name="x" type="int"/>
                    <param name="iconWidth" type="int"/>
                </params>
            </method>
            <method name="drawCentered" type="void" line="1615">
                <params>
                    <param name="c" type="Component"/>
                    <param name="graphics" type="Graphics"/>
                    <param name="icon" type="Icon"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
            </method>
            <method name="drawDashedHorizontalLine" type="void" line="1623">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="y" type="int"/>
                    <param name="x1" type="int"/>
                    <param name="x2" type="int"/>
                </params>
                <comment line="1625">
                    Drawing only even coordinates helps join line segments so they
                     appear as one line.  This can be defeated by translating the
                     Graphics by an odd amount.                    
                </comment>
                <scope line="1629"/>
            </method>
            <method name="drawDashedVerticalLine" type="void" line="1636">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y1" type="int"/>
                    <param name="y2" type="int"/>
                </params>
                <comment line="1638">
                    Drawing only even coordinates helps join line segments so they
                     appear as one line.  This can be defeated by translating the
                     Graphics by an odd amount.                    
                </comment>
                <scope line="1642"/>
            </method>
            <javadoc line="1651">
                Returns the location, along the x-axis, to render a particular row
                  at. The return value does not include any Insets specified on the JTree.
                  This does not check for the validity of the row or depth, it is assumed
                  to be correct and will not throw an Exception if the row or depth
                  doesn&apos;t match that of the tree.                
                <param>
                    row Row to return x location for                    
                </param>
                <param>
                    depth Depth of the row                    
                </param>
                <return>
                    amount to indent the given row.                    
                </return>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="getRowX" type="int" line="1663">
                <params>
                    <param name="row" type="int"/>
                    <param name="depth" type="int"/>
                </params>
            </method>
            <javadoc line="1667">
                Makes all the nodes that are expanded in JTree expanded in LayoutCache.
                  This invokes updateExpandedDescendants with the root path.                
            </javadoc>
            <method name="updateLayoutCacheExpandedNodes" type="void" line="1671"/>
            <method name="updateLayoutCacheExpandedNodesIfNecessary" type="void" line="1676">
                <scope line="1677">
                    <declaration name="rootPath" type="TreePath" line="1678"/>
                    <scope line="1679"/>
                    <scope line="1681"/>
                </scope>
            </method>
            <javadoc line="1687">
                Updates the expanded state of all the descendants of &lt;code&gt;path&lt;/code&gt;
                  by getting the expanded descendants from the tree and forwarding
                  to the tree state.                
            </javadoc>
            <method name="updateExpandedDescendants" type="void" line="1692">
                <params>
                    <param name="path" type="TreePath"/>
                </params>
                <scope line="1694">
                    <declaration name="descendants" type="Enumeration" line="1697"/>
                    <scope line="1699">
                        <scope line="1700"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="1710">
                Returns a path to the last child of &lt;code&gt;parent&lt;/code&gt;.                
            </javadoc>
            <method name="getLastChildPath" type="TreePath" line="1713">
                <params>
                    <param name="parent" type="TreePath"/>
                </params>
                <scope line="1714">
                    <declaration name="childCount" type="int" line="1715"/>
                </scope>
            </method>
            <javadoc line="1725">
                Updates how much each depth should be offset by.                
            </javadoc>
            <method name="updateDepthOffset" type="void" line="1728">
                <scope line="1729"/>
            </method>
            <javadoc line="1741">
                Updates the cellEditor based on the editability of the JTree that
                  we&apos;re contained in.  If the tree is editable but doesn&apos;t have a
                  cellEditor, a basic one will be used.                
            </javadoc>
            <method name="updateCellEditor" type="void" line="1746">
                <declaration name="newEditor" type="TreeCellEditor" line="1747"/>
                <scope line="1752">
                    <scope line="1753">
                        <scope line="1755">
                            <scope line="1757"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="1766"/>
            </method>
            <javadoc line="1778">
                Messaged from the tree we&apos;re in when the renderer has changed.                
            </javadoc>
            <method name="updateRenderer" type="void" line="1781">
                <scope line="1782">
                    <declaration name="newCellRenderer" type="TreeCellRenderer" line="1783"/>
                    <scope line="1786"/>
                    <scope line="1790">
                        <scope line="1793"/>
                    </scope>
                </scope>
                <scope line="1798"/>
            </method>
            <javadoc line="1805">
                Resets the TreeState instance based on the tree we&apos;re providing the
                  look and feel for.                
            </javadoc>
            <method name="configureLayoutCache" type="void" line="1809">
                <comment line="1818">
                    Only do this if necessary, may loss state if call with
                     same model as it currently has.                    
                </comment>
                <comment line="1823">
                    Create a listener to update preferred size when bounds
                     changes, if necessary.                    
                </comment>
                <scope line="1810">
                    <scope line="1824">
                        <scope line="1825"/>
                    </scope>
                    <scope line="1831"/>
                </scope>
                <scope line="1836"/>
            </method>
            <javadoc line="1842">
                Marks the cached size as being invalid, and messages the
                  tree with &lt;code&gt;treeDidChange&lt;/code&gt;.                
            </javadoc>
            <method name="updateSize" type="void" line="1846"/>
            <method name="updateSize0" type="void" line="1851"/>
            <javadoc line="1856">
                Updates the &lt;code&gt;preferredSize&lt;/code&gt; instance variable,
                  which is returned from &lt;code&gt;getPreferredSize()&lt;/code&gt;.&lt;p&gt;
                  For left to right orientations, the size is determined from the
                  current AbstractLayoutCache. For RTL orientations, the preferred size
                  becomes the width minus the minimum x position.                
            </javadoc>
            <method name="updateCachedPreferredSize" type="void" line="1863">
                <comment line="1874">
                    The tree doesn&apos;t have a valid bounds yet. Calculate
                     based on visible row count.                    
                </comment>
                <scope line="1864">
                    <declaration name="i" type="Insets" line="1865"/>
                    <scope line="1867">
                        <declaration name="visRect" type="Rectangle" line="1868"/>
                        <scope line="1872"/>
                        <scope line="1878"/>
                    </scope>
                    <scope line="1884"/>
                </scope>
            </method>
            <javadoc line="1894">
                Messaged from the VisibleTreeNode after it has been expanded.                
            </javadoc>
            <method name="pathWasExpanded" type="void" line="1897">
                <params>
                    <param name="path" type="TreePath"/>
                </params>
                <scope line="1898"/>
            </method>
            <javadoc line="1903">
                Messaged from the VisibleTreeNode after it has collapsed.                
            </javadoc>
            <method name="pathWasCollapsed" type="void" line="1906">
                <params>
                    <param name="path" type="TreePath"/>
                </params>
                <scope line="1907"/>
            </method>
            <javadoc line="1912">
                Ensures that the rows identified by beginRow through endRow are
                  visible.                
            </javadoc>
            <method name="ensureRowsAreVisible" type="void" line="1916">
                <params>
                    <param name="beginRow" type="int"/>
                    <param name="endRow" type="int"/>
                </params>
                <scope line="1917">
                    <declaration name="scrollVert" type="boolean" line="1918"/>
                    <scope line="1920">
                        <declaration name="scrollBounds" type="Rectangle" line="1921"/>
                        <scope line="1924">
                            <scope line="1925"/>
                        </scope>
                    </scope>
                    <scope line="1932">
                        <declaration name="beginRect" type="Rectangle" line="1933"/>
                        <declaration name="visRect" type="Rectangle" line="1935"/>
                        <declaration name="testRect" type="Rectangle" line="1936"/>
                        <declaration name="beginY" type="int" line="1937"/>
                        <declaration name="maxY" type="int" line="1938"/>
                        <scope line="1940"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="1953">
                Sets the preferred minimum size.                
            </javadoc>
            <method name="setPreferredMinSize" type="void" line="1955">
                <params>
                    <param name="newSize" type="Dimension"/>
                </params>
            </method>
            <javadoc line="1959">
                Returns the minimum preferred size.                
            </javadoc>
            <method name="getPreferredMinSize" type="Dimension" line="1961"/>
            <javadoc line="1967">
                Returns the preferred size to properly display the tree,
                  this is a cover method for getPreferredSize(c, true).                
            </javadoc>
            <method name="getPreferredSize" type="Dimension" line="1970">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="1974">
                Returns the preferred size to represent the tree in
                  &lt;I&gt;c&lt;/I&gt;.  If &lt;I&gt;checkConsistency&lt;/I&gt; is true
                  &lt;b&gt;checkConsistency&lt;/b&gt; is messaged first.                
            </javadoc>
            <method name="getPreferredSize" type="Dimension" line="1979">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="checkConsistency" type="boolean"/>
                </params>
                <declaration name="pSize" type="Dimension" line="1980"/>
                <scope line="1984"/>
            </method>
            <javadoc line="1997">
                Returns the minimum size for this component.  Which will be
                  the min preferred size or 0, 0.                
            </javadoc>
            <method name="getMinimumSize" type="Dimension" line="2001">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="2007">
                Returns the maximum size for this component, which will be the
                  preferred size if the instance is currently in a JTree, or 0, 0.                
            </javadoc>
            <method name="getMaximumSize" type="Dimension" line="2011">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="2020">
                Messages to stop the editing session. If the UI the receiver
                  is providing the look and feel for returns true from
                  &lt;code&gt;getInvokesStopCellEditing&lt;/code&gt;, stopCellEditing will
                  invoked on the current editor. Then completeEditing will
                  be messaged with false, true, false to cancel any lingering
                  editing.                
            </javadoc>
            <method name="completeEditing" type="void" line="2028">
                <comment line="2030">
                                        
                </comment>
                <comment line="2035">
                    Invoke cancelCellEditing, this will do nothing if stopCellEditing                    
                </comment>
                <scope line="2031"/>
            </method>
            <javadoc line="2039">
                Stops the editing session.  If messageStop is true the editor
                  is messaged with stopEditing, if messageCancel is true the
                  editor is messaged with cancelEditing. If messageTree is true
                  the treeModel is messaged with valueForPathChanged.                
            </javadoc>
            <method name="completeEditing" type="void" line="2047">
                <params>
                    <param name="messageStop" type="boolean"/>
                    <param name="messageCancel" type="boolean"/>
                    <param name="messageTree" type="boolean"/>
                </params>
                <scope line="2048">
                    <declaration name="oldComponent" type="Component" line="2049"/>
                    <declaration name="oldPath" type="TreePath" line="2050"/>
                    <declaration name="oldEditor" type="TreeCellEditor" line="2051"/>
                    <declaration name="newValue" type="Object" line="2052"/>
                    <declaration name="editingBounds" type="Rectangle" line="2053"/>
                    <declaration name="requestFocus" type="boolean" line="2055"/>
                    <scope line="2066"/>
                    <scope line="2070"/>
                </scope>
            </method>
            <method name="startEditingOnRelease" type="boolean" line="2086">
                <params>
                    <param name="path" type="TreePath"/>
                    <param name="event" type="MouseEvent"/>
                    <param name="releaseEvent" type="MouseEvent"/>
                </params>
                <scope line="2088"/>
                <scope line="2090"/>
            </method>
            <javadoc line="2095">
                Will start editing for node if there is a cellEditor and
                  shouldSelectCell returns true.&lt;p&gt;
                  This assumes that path is valid and visible.                
            </javadoc>
            <method name="startEditing" type="boolean" line="2100">
                <params>
                    <param name="path" type="TreePath"/>
                    <param name="event" type="MouseEvent"/>
                </params>
                <comment line="2121">
                    Only allow odd heights if explicitly set.                    
                </comment>
                <comment line="2128">
                    Editor wants different width or height, invalidate
                     treeState and relayout.                    
                </comment>
                <comment line="2133">
                    To make sure x/y are updated correctly, fetch
                     the bounds again.                    
                </comment>
                <comment line="2161">
                    Find the component that will get forwarded all the                    
                </comment>
                <comment line="2167">
                    Create an instance of BasicTreeMouseListener to handle
                    passing the mousemotion events to the necessary                    
                </comment>
                <comment line="2170">
                    We really want similar behavior to getMouseEventTarget,
                     but it is package private.                    
                </comment>
                <scope line="2102"/>
                <scope line="2106">
                    <declaration name="row" type="int" line="2107"/>
                    <scope line="2109">
                        <declaration name="nodeBounds" type="Rectangle" line="2114"/>
                        <declaration name="editorSize" type="Dimension" line="2118"/>
                        <scope line="2126"/>
                        <scope line="2143"/>
                        <scope line="2145"/>
                        <scope line="2149"/>
                        <declaration name="focusedComponent" type="Component" line="2155"/>
                        <declaration name="selectAll" type="boolean" line="2157"/>
                        <scope line="2159">
                            <declaration name="componentPoint" type="Point" line="2162"/>
                            <declaration name="activeComponent" type="Component" line="2171"/>
                            <scope line="2174">
                                <declaration name="handler" type="MouseInputHandler" line="2175"/>
                                <scope line="2179"/>
                            </scope>
                        </scope>
                        <scope line="2186"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="2201">
                If the &lt;code&gt;mouseX&lt;/code&gt; and &lt;code&gt;mouseY&lt;/code&gt; are in the
                  expand/collapse region of the &lt;code&gt;row&lt;/code&gt;, this will toggle
                  the row.                
            </javadoc>
            <method name="checkForClickInExpandControl" type="void" line="2207">
                <params>
                    <param name="path" type="TreePath"/>
                    <param name="mouseX" type="int"/>
                    <param name="mouseY" type="int"/>
                </params>
                <scope line="2208"/>
            </method>
            <javadoc line="2213">
                Returns true if &lt;code&gt;mouseX&lt;/code&gt; and &lt;code&gt;mouseY&lt;/code&gt; fall
                  in the area of row that is used to expand/collapse the node and
                  the node at &lt;code&gt;row&lt;/code&gt; does not represent a leaf.                
            </javadoc>
            <method name="isLocationInExpandControl" type="boolean" line="2219">
                <params>
                    <param name="path" type="TreePath"/>
                    <param name="mouseX" type="int"/>
                    <param name="mouseY" type="int"/>
                </params>
                <scope line="2220">
                    <declaration name="boxWidth" type="int" line="2221"/>
                    <declaration name="i" type="Insets" line="2222"/>
                    <declaration name="boxLeftX" type="int" line="2229"/>
                    <scope line="2232"/>
                    <scope line="2234"/>
                </scope>
            </method>
            <javadoc line="2245">
                Messaged when the user clicks the particular row, this invokes
                  toggleExpandState.                
            </javadoc>
            <method name="handleExpandControlClick" type="void" line="2250">
                <params>
                    <param name="path" type="TreePath"/>
                    <param name="mouseX" type="int"/>
                    <param name="mouseY" type="int"/>
                </params>
            </method>
            <javadoc line="2254">
                Expands path if it is not expanded, or collapses row if it is expanded.
                  If expanding a path and JTree scrolls on expand, ensureRowsAreVisible
                  is invoked to scroll as many of the children to visible as possible
                  (tries to scroll to last visible descendant of path).                
            </javadoc>
            <method name="toggleExpandState" type="void" line="2260">
                <params>
                    <param name="path" type="TreePath"/>
                </params>
                <scope line="2261">
                    <declaration name="row" type="int" line="2262"/>
                    <scope line="2266"/>
                </scope>
                <scope line="2274"/>
            </method>
            <javadoc line="2280">
                Returning true signifies a mouse event on the node should toggle
                  the selection of only the row under mouse.                
            </javadoc>
            <method name="isToggleSelectionEvent" type="boolean" line="2284">
                <params>
                    <param name="event" type="MouseEvent"/>
                </params>
            </method>
            <javadoc line="2289">
                Returning true signifies a mouse event on the node should select
                  from the anchor point.                
            </javadoc>
            <method name="isMultiSelectEvent" type="boolean" line="2293">
                <params>
                    <param name="event" type="MouseEvent"/>
                </params>
            </method>
            <javadoc line="2298">
                Returning true indicates the row under the mouse should be toggled
                  based on the event. This is invoked after checkForClickInExpandControl,
                  implying the location is not in the expand (toggle) control                
            </javadoc>
            <method name="isToggleEvent" type="boolean" line="2303">
                <params>
                    <param name="event" type="MouseEvent"/>
                </params>
                <scope line="2304"/>
                <declaration name="clickCount" type="int" line="2307"/>
                <scope line="2309"/>
            </method>
            <javadoc line="2315">
                Messaged to update the selection based on a MouseEvent over a
                  particular row. If the event is a toggle selection event, the
                  row is either selected, or deselected. If the event identifies
                  a multi selection event, the selection is updated from the
                  anchor point. Otherwise the row is selected, and if the event
                  specified a toggle event the row is expanded/collapsed.                
            </javadoc>
            <method name="selectPathForEvent" type="void" line="2323">
                <params>
                    <param name="path" type="TreePath"/>
                    <param name="event" type="MouseEvent"/>
                </params>
                <comment line="2325">
                                        
                </comment>
                <comment line="2358">
                    Should this event toggle the selection of this row?                    
                </comment>
                <comment line="2359">
                                        
                </comment>
                <comment line="2370">
                                        
                </comment>
                <scope line="2325">
                    <declaration name="anchor" type="TreePath" line="2326"/>
                    <declaration name="anchorRow" type="int" line="2327"/>
                    <scope line="2332"/>
                    <scope line="2335">
                        <declaration name="row" type="int" line="2336"/>
                        <declaration name="lastAnchorPath" type="TreePath" line="2337"/>
                        <scope line="2339">
                            <scope line="2340"/>
                            <scope line="2342"/>
                        </scope>
                        <scope line="2346"/>
                        <scope line="2348"/>
                    </scope>
                </scope>
                <scope line="2359"/>
                <scope line="2370">
                    <scope line="2372"/>
                </scope>
            </method>
            <javadoc line="2378">
                @return true if the node at &lt;code&gt;row&lt;/code&gt; is a leaf.                
            </javadoc>
            <method name="isLeaf" type="boolean" line="2381">
                <params>
                    <param name="row" type="int"/>
                </params>
                <comment line="2387">
                    Have to return something here...                    
                </comment>
                <declaration name="path" type="TreePath" line="2382"/>
            </method>
            <method name="setAnchorSelectionPath" type="void" line="2394">
                <params>
                    <param name="newPath" type="TreePath"/>
                </params>
                <scope line="2396"/>
                <scope line="2398"/>
            </method>
            <method name="getAnchorSelectionPath" type="TreePath" line="2403"/>
            <method name="setLeadSelectionPath" type="void" line="2407">
                <params>
                    <param name="newPath" type="TreePath"/>
                </params>
            </method>
            <method name="setLeadSelectionPath" type="void" line="2411">
                <params>
                    <param name="newPath" type="TreePath"/>
                    <param name="repaint" type="boolean"/>
                </params>
                <declaration name="bounds" type="Rectangle" line="2412"/>
                <scope line="2416"/>
                <scope line="2418"/>
                <scope line="2423">
                    <scope line="2424"/>
                    <scope line="2428"/>
                </scope>
            </method>
            <method name="getRepaintPathBounds" type="Rectangle" line="2434">
                <params>
                    <param name="bounds" type="Rectangle"/>
                </params>
                <scope line="2435"/>
            </method>
            <method name="getLeadSelectionPath" type="TreePath" line="2442"/>
            <javadoc line="2446">
                Updates the lead row of the selection.                
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="updateLeadSelectionRow" type="void" line="2450"/>
            <javadoc line="2454">
                Returns the lead row of the selection.                
                <return>
                    selection lead row                    
                </return>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="getLeadSelectionRow" type="int" line="2460"/>
            <javadoc line="2464">
                Extends the selection from the anchor to make &lt;code&gt;newLead&lt;/code&gt;
                  the lead of the selection. This does not scroll.                
            </javadoc>
            <method name="extendSelection" type="void" line="2468">
                <params>
                    <param name="newLead" type="TreePath"/>
                </params>
                <declaration name="aPath" type="TreePath" line="2469"/>
                <declaration name="aRow" type="int" line="2470"/>
                <declaration name="newIndex" type="int" line="2472"/>
                <scope line="2474"/>
                <scope line="2477">
                    <scope line="2478"/>
                    <scope line="2481"/>
                </scope>
            </method>
            <javadoc line="2489">
                Invokes &lt;code&gt;repaint&lt;/code&gt; on the JTree for the passed in TreePath,
                  &lt;code&gt;path&lt;/code&gt;.                
            </javadoc>
            <method name="repaintPath" type="void" line="2493">
                <params>
                    <param name="path" type="TreePath"/>
                </params>
                <scope line="2494">
                    <declaration name="bounds" type="Rectangle" line="2495"/>
                    <scope line="2496"/>
                </scope>
            </method>
            <class name="TreeExpansionHandler" line="2502">
                <comment line="123">
                    WARNING: Be careful with the bounds held by treeState. They are
                     always in terms of left-to-right. They get mapped to right-to-left
                     by the various methods of this class.                    
                </comment>
                <comment line="2507">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2609">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2638">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2650">
                    End of BasicTreeUI.TreeSelectionHandler                    
                </comment>
                <comment line="2659">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2682">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2687">
                    Also note these fields aren&apos;t use anymore, nor does Handler have
                     the old functionality. This behavior worked around an old bug
                     in JComponent that has long since been fixed.                    
                </comment>
                <comment line="2724">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2752">
                    This returns locations that don&apos;t include any Insets.                    
                </comment>
                <comment line="2826">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2864">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2882">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3265">
                    KeyListener                    
                </comment>
                <comment line="3365">
                    PropertyChangeListener                    
                </comment>
                <comment line="3461">
                    MouseListener                    
                </comment>
                <comment line="3465">
                    Whether or not the mouse press (which is being considered as part
                     of a drag sequence) also caused the selection change to be fully
                     processed.                    
                </comment>
                <comment line="3470">
                    Set to true when a drag gesture has been fully recognized and DnD
                     begins. Use this to ignore further mouse events which could be
                     delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="3475">
                    The path over which the press occurred and the press event itself                    
                </comment>
                <comment line="3479">
                    Used to detect whether the press event causes a selection change.
                     If it does, we won&apos;t try to start editing on the release.                    
                </comment>
                <comment line="3665">
                    FocusListener                    
                </comment>
                <comment line="3685">
                    CellEditorListener                    
                </comment>
                <comment line="3698">
                    TreeSelectionListener                    
                </comment>
                <comment line="3777">
                    TreeExpansionListener                    
                </comment>
                <comment line="3801">
                    TreeModelListener                    
                </comment>
                <comment line="3968">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="3971">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="3974">
                    extend the selection to the lead item                    
                </comment>
                <comment line="3977">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <implements interface="TreeExpansionListener"/>
                <javadoc line="2502">
                    Updates the TreeState in response to nodes expanding/collapsing.                    
                </javadoc>
                <javadoc line="2511">
                    Called whenever an item in the tree has been expanded.                    
                </javadoc>
                <method name="treeExpanded" type="void" line="2514">
                    <params>
                        <param name="event" type="TreeExpansionEvent"/>
                    </params>
                </method>
                <javadoc line="2518">
                    Called whenever an item in the tree has been collapsed.                    
                </javadoc>
                <method name="treeCollapsed" type="void" line="2521">
                    <params>
                        <param name="event" type="TreeExpansionEvent"/>
                    </params>
                </method>
            </class>
            <class name="ComponentHandler" line="2527">
                <extends class="ComponentAdapter"/>
                <comment line="123">
                    WARNING: Be careful with the bounds held by treeState. They are
                     always in terms of left-to-right. They get mapped to right-to-left
                     by the various methods of this class.                    
                </comment>
                <comment line="2507">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2609">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2638">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2650">
                    End of BasicTreeUI.TreeSelectionHandler                    
                </comment>
                <comment line="2659">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2682">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2687">
                    Also note these fields aren&apos;t use anymore, nor does Handler have
                     the old functionality. This behavior worked around an old bug
                     in JComponent that has long since been fixed.                    
                </comment>
                <comment line="2724">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2752">
                    This returns locations that don&apos;t include any Insets.                    
                </comment>
                <comment line="2826">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2864">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2882">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3265">
                    KeyListener                    
                </comment>
                <comment line="3365">
                    PropertyChangeListener                    
                </comment>
                <comment line="3461">
                    MouseListener                    
                </comment>
                <comment line="3465">
                    Whether or not the mouse press (which is being considered as part
                     of a drag sequence) also caused the selection change to be fully
                     processed.                    
                </comment>
                <comment line="3470">
                    Set to true when a drag gesture has been fully recognized and DnD
                     begins. Use this to ignore further mouse events which could be
                     delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="3475">
                    The path over which the press occurred and the press event itself                    
                </comment>
                <comment line="3479">
                    Used to detect whether the press event causes a selection change.
                     If it does, we won&apos;t try to start editing on the release.                    
                </comment>
                <comment line="3665">
                    FocusListener                    
                </comment>
                <comment line="3685">
                    CellEditorListener                    
                </comment>
                <comment line="3698">
                    TreeSelectionListener                    
                </comment>
                <comment line="3777">
                    TreeExpansionListener                    
                </comment>
                <comment line="3801">
                    TreeModelListener                    
                </comment>
                <comment line="3968">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="3971">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="3974">
                    extend the selection to the lead item                    
                </comment>
                <comment line="3977">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <implements interface="ActionListener"/>
                <javadoc line="2527">
                    Updates the preferred size when scrolling (if necessary).                    
                </javadoc>
                <declaration name="timer" type="Timer" line="2532"/>
                <javadoc line="2532">
                    Timer used when inside a scrollpane and the scrollbar is
                      adjusting.                    
                </javadoc>
                <declaration name="scrollBar" type="JScrollBar" line="2535"/>
                <javadoc line="2535">
                    ScrollBar that is being adjusted.                    
                </javadoc>
                <method name="componentMoved" type="void" line="2538">
                    <params>
                        <param name="e" type="ComponentEvent"/>
                    </params>
                    <comment line="2549">
                        Try the horizontal scrollbar.                        
                    </comment>
                    <scope line="2539">
                        <declaration name="scrollPane" type="JScrollPane" line="2540"/>
                        <scope line="2544">
                            <scope line="2547"/>
                        </scope>
                    </scope>
                </method>
                <javadoc line="2561">
                    Creates, if necessary, and starts a Timer to check if need to
                      resize the bounds.                    
                </javadoc>
                <method name="startTimer" type="void" line="2565">
                    <scope line="2566"/>
                </method>
                <javadoc line="2573">
                    Returns the JScrollPane housing the JTree, or null if one isn&apos;t
                      found.                    
                </javadoc>
                <method name="getScrollPane" type="JScrollPane" line="2577">
                    <declaration name="c" type="Component" line="2578"/>
                </method>
                <javadoc line="2587">
                    Public as a result of Timer. If the scrollBar is null, or
                      not adjusting, this stops the timer and updates the sizing.                    
                </javadoc>
                <method name="actionPerformed" type="void" line="2591">
                    <params>
                        <param name="ae" type="ActionEvent"/>
                    </params>
                    <scope line="2592"/>
                </method>
            </class>
            <class name="TreeModelHandler" line="2603">
                <comment line="123">
                    WARNING: Be careful with the bounds held by treeState. They are
                     always in terms of left-to-right. They get mapped to right-to-left
                     by the various methods of this class.                    
                </comment>
                <comment line="2507">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2609">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2638">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2650">
                    End of BasicTreeUI.TreeSelectionHandler                    
                </comment>
                <comment line="2659">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2682">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2687">
                    Also note these fields aren&apos;t use anymore, nor does Handler have
                     the old functionality. This behavior worked around an old bug
                     in JComponent that has long since been fixed.                    
                </comment>
                <comment line="2724">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2752">
                    This returns locations that don&apos;t include any Insets.                    
                </comment>
                <comment line="2826">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2864">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2882">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3265">
                    KeyListener                    
                </comment>
                <comment line="3365">
                    PropertyChangeListener                    
                </comment>
                <comment line="3461">
                    MouseListener                    
                </comment>
                <comment line="3465">
                    Whether or not the mouse press (which is being considered as part
                     of a drag sequence) also caused the selection change to be fully
                     processed.                    
                </comment>
                <comment line="3470">
                    Set to true when a drag gesture has been fully recognized and DnD
                     begins. Use this to ignore further mouse events which could be
                     delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="3475">
                    The path over which the press occurred and the press event itself                    
                </comment>
                <comment line="3479">
                    Used to detect whether the press event causes a selection change.
                     If it does, we won&apos;t try to start editing on the release.                    
                </comment>
                <comment line="3665">
                    FocusListener                    
                </comment>
                <comment line="3685">
                    CellEditorListener                    
                </comment>
                <comment line="3698">
                    TreeSelectionListener                    
                </comment>
                <comment line="3777">
                    TreeExpansionListener                    
                </comment>
                <comment line="3801">
                    TreeModelListener                    
                </comment>
                <comment line="3968">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="3971">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="3974">
                    extend the selection to the lead item                    
                </comment>
                <comment line="3977">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <implements interface="TreeModelListener"/>
                <javadoc line="2603">
                    Forwards all TreeModel events to the TreeState.                    
                </javadoc>
                <method name="treeNodesChanged" type="void" line="2613">
                    <params>
                        <param name="e" type="TreeModelEvent"/>
                    </params>
                </method>
                <method name="treeNodesInserted" type="void" line="2617">
                    <params>
                        <param name="e" type="TreeModelEvent"/>
                    </params>
                </method>
                <method name="treeNodesRemoved" type="void" line="2621">
                    <params>
                        <param name="e" type="TreeModelEvent"/>
                    </params>
                </method>
                <method name="treeStructureChanged" type="void" line="2625">
                    <params>
                        <param name="e" type="TreeModelEvent"/>
                    </params>
                </method>
            </class>
            <class name="TreeSelectionHandler" line="2631">
                <comment line="123">
                    WARNING: Be careful with the bounds held by treeState. They are
                     always in terms of left-to-right. They get mapped to right-to-left
                     by the various methods of this class.                    
                </comment>
                <comment line="2507">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2609">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2638">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2650">
                    End of BasicTreeUI.TreeSelectionHandler                    
                </comment>
                <comment line="2659">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2682">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2687">
                    Also note these fields aren&apos;t use anymore, nor does Handler have
                     the old functionality. This behavior worked around an old bug
                     in JComponent that has long since been fixed.                    
                </comment>
                <comment line="2724">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2752">
                    This returns locations that don&apos;t include any Insets.                    
                </comment>
                <comment line="2826">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2864">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2882">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3265">
                    KeyListener                    
                </comment>
                <comment line="3365">
                    PropertyChangeListener                    
                </comment>
                <comment line="3461">
                    MouseListener                    
                </comment>
                <comment line="3465">
                    Whether or not the mouse press (which is being considered as part
                     of a drag sequence) also caused the selection change to be fully
                     processed.                    
                </comment>
                <comment line="3470">
                    Set to true when a drag gesture has been fully recognized and DnD
                     begins. Use this to ignore further mouse events which could be
                     delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="3475">
                    The path over which the press occurred and the press event itself                    
                </comment>
                <comment line="3479">
                    Used to detect whether the press event causes a selection change.
                     If it does, we won&apos;t try to start editing on the release.                    
                </comment>
                <comment line="3665">
                    FocusListener                    
                </comment>
                <comment line="3685">
                    CellEditorListener                    
                </comment>
                <comment line="3698">
                    TreeSelectionListener                    
                </comment>
                <comment line="3777">
                    TreeExpansionListener                    
                </comment>
                <comment line="3801">
                    TreeModelListener                    
                </comment>
                <comment line="3968">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="3971">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="3974">
                    extend the selection to the lead item                    
                </comment>
                <comment line="3977">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <implements interface="TreeSelectionListener"/>
                <javadoc line="2631">
                    Listens for changes in the selection model and updates the display
                      accordingly.                    
                </javadoc>
                <javadoc line="2642">
                    Messaged when the selection changes in the tree we&apos;re displaying
                      for.  Stops editing, messages super and displays the changed paths.                    
                </javadoc>
                <method name="valueChanged" type="void" line="2646">
                    <params>
                        <param name="event" type="TreeSelectionEvent"/>
                    </params>
                </method>
            </class>
            <class name="CellEditorHandler" line="2652">
                <comment line="123">
                    WARNING: Be careful with the bounds held by treeState. They are
                     always in terms of left-to-right. They get mapped to right-to-left
                     by the various methods of this class.                    
                </comment>
                <comment line="2507">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2609">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2638">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2650">
                    End of BasicTreeUI.TreeSelectionHandler                    
                </comment>
                <comment line="2659">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2682">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2687">
                    Also note these fields aren&apos;t use anymore, nor does Handler have
                     the old functionality. This behavior worked around an old bug
                     in JComponent that has long since been fixed.                    
                </comment>
                <comment line="2724">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2752">
                    This returns locations that don&apos;t include any Insets.                    
                </comment>
                <comment line="2826">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2864">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2882">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3265">
                    KeyListener                    
                </comment>
                <comment line="3365">
                    PropertyChangeListener                    
                </comment>
                <comment line="3461">
                    MouseListener                    
                </comment>
                <comment line="3465">
                    Whether or not the mouse press (which is being considered as part
                     of a drag sequence) also caused the selection change to be fully
                     processed.                    
                </comment>
                <comment line="3470">
                    Set to true when a drag gesture has been fully recognized and DnD
                     begins. Use this to ignore further mouse events which could be
                     delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="3475">
                    The path over which the press occurred and the press event itself                    
                </comment>
                <comment line="3479">
                    Used to detect whether the press event causes a selection change.
                     If it does, we won&apos;t try to start editing on the release.                    
                </comment>
                <comment line="3665">
                    FocusListener                    
                </comment>
                <comment line="3685">
                    CellEditorListener                    
                </comment>
                <comment line="3698">
                    TreeSelectionListener                    
                </comment>
                <comment line="3777">
                    TreeExpansionListener                    
                </comment>
                <comment line="3801">
                    TreeModelListener                    
                </comment>
                <comment line="3968">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="3971">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="3974">
                    extend the selection to the lead item                    
                </comment>
                <comment line="3977">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <implements interface="CellEditorListener"/>
                <javadoc line="2652">
                    Listener responsible for getting cell editing events and updating
                      the tree accordingly.                    
                </javadoc>
                <javadoc line="2663">
                    Messaged when editing has stopped in the tree.                    
                </javadoc>
                <method name="editingStopped" type="void" line="2664">
                    <params>
                        <param name="e" type="ChangeEvent"/>
                    </params>
                </method>
                <javadoc line="2668">
                    Messaged when editing has been canceled in the tree.                    
                </javadoc>
                <method name="editingCanceled" type="void" line="2669">
                    <params>
                        <param name="e" type="ChangeEvent"/>
                    </params>
                </method>
            </class>
            <class name="KeyHandler" line="2675">
                <extends class="KeyAdapter"/>
                <comment line="123">
                    WARNING: Be careful with the bounds held by treeState. They are
                     always in terms of left-to-right. They get mapped to right-to-left
                     by the various methods of this class.                    
                </comment>
                <comment line="2507">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2609">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2638">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2650">
                    End of BasicTreeUI.TreeSelectionHandler                    
                </comment>
                <comment line="2659">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2682">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2687">
                    Also note these fields aren&apos;t use anymore, nor does Handler have
                     the old functionality. This behavior worked around an old bug
                     in JComponent that has long since been fixed.                    
                </comment>
                <comment line="2724">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2752">
                    This returns locations that don&apos;t include any Insets.                    
                </comment>
                <comment line="2826">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2864">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2882">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3265">
                    KeyListener                    
                </comment>
                <comment line="3365">
                    PropertyChangeListener                    
                </comment>
                <comment line="3461">
                    MouseListener                    
                </comment>
                <comment line="3465">
                    Whether or not the mouse press (which is being considered as part
                     of a drag sequence) also caused the selection change to be fully
                     processed.                    
                </comment>
                <comment line="3470">
                    Set to true when a drag gesture has been fully recognized and DnD
                     begins. Use this to ignore further mouse events which could be
                     delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="3475">
                    The path over which the press occurred and the press event itself                    
                </comment>
                <comment line="3479">
                    Used to detect whether the press event causes a selection change.
                     If it does, we won&apos;t try to start editing on the release.                    
                </comment>
                <comment line="3665">
                    FocusListener                    
                </comment>
                <comment line="3685">
                    CellEditorListener                    
                </comment>
                <comment line="3698">
                    TreeSelectionListener                    
                </comment>
                <comment line="3777">
                    TreeExpansionListener                    
                </comment>
                <comment line="3801">
                    TreeModelListener                    
                </comment>
                <comment line="3968">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="3971">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="3974">
                    extend the selection to the lead item                    
                </comment>
                <comment line="3977">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <javadoc line="2675">
                    This is used to get mutliple key down events to appropriately generate
                      events.                    
                </javadoc>
                <declaration name="repeatKeyAction" type="Action" line="2690"/>
                <javadoc line="2690">
                    Key code that is being generated for.                    
                </javadoc>
                <declaration name="isKeyDown" type="boolean" line="2693"/>
                <javadoc line="2693">
                    Set to true while keyPressed is active.                    
                </javadoc>
                <javadoc line="2696">
                    Invoked when a key has been typed.
                      Moves the keyboard focus to the first element
                      whose first letter matches the alphanumeric key
                      pressed by the user. Subsequent same key presses
                      move the keyboard focus to the next object that
                      starts with the same letter.                    
                </javadoc>
                <method name="keyTyped" type="void" line="2705">
                    <params>
                        <param name="e" type="KeyEvent"/>
                    </params>
                </method>
                <method name="keyPressed" type="void" line="2709">
                    <params>
                        <param name="e" type="KeyEvent"/>
                    </params>
                </method>
                <method name="keyReleased" type="void" line="2713">
                    <params>
                        <param name="e" type="KeyEvent"/>
                    </params>
                </method>
            </class>
            <class name="FocusHandler" line="2719">
                <comment line="123">
                    WARNING: Be careful with the bounds held by treeState. They are
                     always in terms of left-to-right. They get mapped to right-to-left
                     by the various methods of this class.                    
                </comment>
                <comment line="2507">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2609">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2638">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2650">
                    End of BasicTreeUI.TreeSelectionHandler                    
                </comment>
                <comment line="2659">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2682">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2687">
                    Also note these fields aren&apos;t use anymore, nor does Handler have
                     the old functionality. This behavior worked around an old bug
                     in JComponent that has long since been fixed.                    
                </comment>
                <comment line="2724">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2752">
                    This returns locations that don&apos;t include any Insets.                    
                </comment>
                <comment line="2826">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2864">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2882">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3265">
                    KeyListener                    
                </comment>
                <comment line="3365">
                    PropertyChangeListener                    
                </comment>
                <comment line="3461">
                    MouseListener                    
                </comment>
                <comment line="3465">
                    Whether or not the mouse press (which is being considered as part
                     of a drag sequence) also caused the selection change to be fully
                     processed.                    
                </comment>
                <comment line="3470">
                    Set to true when a drag gesture has been fully recognized and DnD
                     begins. Use this to ignore further mouse events which could be
                     delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="3475">
                    The path over which the press occurred and the press event itself                    
                </comment>
                <comment line="3479">
                    Used to detect whether the press event causes a selection change.
                     If it does, we won&apos;t try to start editing on the release.                    
                </comment>
                <comment line="3665">
                    FocusListener                    
                </comment>
                <comment line="3685">
                    CellEditorListener                    
                </comment>
                <comment line="3698">
                    TreeSelectionListener                    
                </comment>
                <comment line="3777">
                    TreeExpansionListener                    
                </comment>
                <comment line="3801">
                    TreeModelListener                    
                </comment>
                <comment line="3968">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="3971">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="3974">
                    extend the selection to the lead item                    
                </comment>
                <comment line="3977">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <implements interface="FocusListener"/>
                <javadoc line="2719">
                    Repaints the lead selection row when focus is lost/gained.                    
                </javadoc>
                <javadoc line="2728">
                    Invoked when focus is activated on the tree we&apos;re in, redraws the
                      lead row.                    
                </javadoc>
                <method name="focusGained" type="void" line="2732">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                </method>
                <javadoc line="2736">
                    Invoked when focus is activated on the tree we&apos;re in, redraws the
                      lead row.                    
                </javadoc>
                <method name="focusLost" type="void" line="2740">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                </method>
            </class>
            <class name="NodeDimensionsHandler" line="2746">
                <extends class="AbstractLayoutCache.NodeDimensions"/>
                <comment line="123">
                    WARNING: Be careful with the bounds held by treeState. They are
                     always in terms of left-to-right. They get mapped to right-to-left
                     by the various methods of this class.                    
                </comment>
                <comment line="2507">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2609">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2638">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2650">
                    End of BasicTreeUI.TreeSelectionHandler                    
                </comment>
                <comment line="2659">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2682">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2687">
                    Also note these fields aren&apos;t use anymore, nor does Handler have
                     the old functionality. This behavior worked around an old bug
                     in JComponent that has long since been fixed.                    
                </comment>
                <comment line="2724">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2752">
                    This returns locations that don&apos;t include any Insets.                    
                </comment>
                <comment line="2826">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2864">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2882">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3265">
                    KeyListener                    
                </comment>
                <comment line="3365">
                    PropertyChangeListener                    
                </comment>
                <comment line="3461">
                    MouseListener                    
                </comment>
                <comment line="3465">
                    Whether or not the mouse press (which is being considered as part
                     of a drag sequence) also caused the selection change to be fully
                     processed.                    
                </comment>
                <comment line="3470">
                    Set to true when a drag gesture has been fully recognized and DnD
                     begins. Use this to ignore further mouse events which could be
                     delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="3475">
                    The path over which the press occurred and the press event itself                    
                </comment>
                <comment line="3479">
                    Used to detect whether the press event causes a selection change.
                     If it does, we won&apos;t try to start editing on the release.                    
                </comment>
                <comment line="3665">
                    FocusListener                    
                </comment>
                <comment line="3685">
                    CellEditorListener                    
                </comment>
                <comment line="3698">
                    TreeSelectionListener                    
                </comment>
                <comment line="3777">
                    TreeExpansionListener                    
                </comment>
                <comment line="3801">
                    TreeModelListener                    
                </comment>
                <comment line="3968">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="3971">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="3974">
                    extend the selection to the lead item                    
                </comment>
                <comment line="3977">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <javadoc line="2746">
                    Class responsible for getting size of node, method is forwarded
                      to BasicTreeUI method. X location does not include insets, that is
                      handled in getPathBounds.                    
                </javadoc>
                <javadoc line="2754">
                    Responsible for getting the size of a particular node.                    
                </javadoc>
                <method name="getNodeDimensions" type="Rectangle" line="2759">
                    <params>
                        <param name="value" type="Object"/>
                        <param name="row" type="int"/>
                        <param name="depth" type="int"/>
                        <param name="expanded" type="boolean"/>
                        <param name="size" type="Rectangle"/>
                    </params>
                    <comment line="2761">
                        Return size of editing component, if editing and asking
                         for editing row.                        
                    </comment>
                    <comment line="2781">
                        Not editing, use renderer.                        
                    </comment>
                    <comment line="2790">
                        Only ever removed when UI changes, this is OK!                        
                    </comment>
                    <scope line="2762">
                        <declaration name="prefSize" type="Dimension" line="2763"/>
                        <declaration name="rh" type="int" line="2765"/>
                        <scope line="2769"/>
                        <scope line="2774"/>
                    </scope>
                    <scope line="2781">
                        <declaration name="aComponent" type="Component" line="2782"/>
                        <scope line="2788"/>
                        <declaration name="prefSize" type="Dimension" line="2793"/>
                        <scope line="2795"/>
                        <scope line="2800"/>
                    </scope>
                </method>
                <javadoc line="2809">
                    @return amount to indent the given row.                    
                </javadoc>
                <method name="getRowX" type="int" line="2812">
                    <params>
                        <param name="row" type="int"/>
                        <param name="depth" type="int"/>
                    </params>
                </method>
            </class>
            <class name="MouseHandler" line="2819">
                <extends class="MouseAdapter"/>
                <comment line="123">
                    WARNING: Be careful with the bounds held by treeState. They are
                     always in terms of left-to-right. They get mapped to right-to-left
                     by the various methods of this class.                    
                </comment>
                <comment line="2507">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2609">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2638">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2650">
                    End of BasicTreeUI.TreeSelectionHandler                    
                </comment>
                <comment line="2659">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2682">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2687">
                    Also note these fields aren&apos;t use anymore, nor does Handler have
                     the old functionality. This behavior worked around an old bug
                     in JComponent that has long since been fixed.                    
                </comment>
                <comment line="2724">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2752">
                    This returns locations that don&apos;t include any Insets.                    
                </comment>
                <comment line="2826">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2864">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2882">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3265">
                    KeyListener                    
                </comment>
                <comment line="3365">
                    PropertyChangeListener                    
                </comment>
                <comment line="3461">
                    MouseListener                    
                </comment>
                <comment line="3465">
                    Whether or not the mouse press (which is being considered as part
                     of a drag sequence) also caused the selection change to be fully
                     processed.                    
                </comment>
                <comment line="3470">
                    Set to true when a drag gesture has been fully recognized and DnD
                     begins. Use this to ignore further mouse events which could be
                     delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="3475">
                    The path over which the press occurred and the press event itself                    
                </comment>
                <comment line="3479">
                    Used to detect whether the press event causes a selection change.
                     If it does, we won&apos;t try to start editing on the release.                    
                </comment>
                <comment line="3665">
                    FocusListener                    
                </comment>
                <comment line="3685">
                    CellEditorListener                    
                </comment>
                <comment line="3698">
                    TreeSelectionListener                    
                </comment>
                <comment line="3777">
                    TreeExpansionListener                    
                </comment>
                <comment line="3801">
                    TreeModelListener                    
                </comment>
                <comment line="3968">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="3971">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="3974">
                    extend the selection to the lead item                    
                </comment>
                <comment line="3977">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <implements interface="MouseMotionListener"/>
                <javadoc line="2819">
                    TreeMouseListener is responsible for updating the selection
                      based on mouse events.                    
                </javadoc>
                <javadoc line="2830">
                    Invoked when a mouse button has been pressed on a component.                    
                </javadoc>
                <method name="mousePressed" type="void" line="2833">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseDragged" type="void" line="2837">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <javadoc line="2841">
                    Invoked when the mouse button has been moved on a component
                      (with no buttons no down).                    
                    <since>
                        1.4                        
                    </since>
                </javadoc>
                <method name="mouseMoved" type="void" line="2846">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseReleased" type="void" line="2850">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
            </class>
            <class name="PropertyChangeHandler" line="2856">
                <comment line="123">
                    WARNING: Be careful with the bounds held by treeState. They are
                     always in terms of left-to-right. They get mapped to right-to-left
                     by the various methods of this class.                    
                </comment>
                <comment line="2507">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2609">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2638">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2650">
                    End of BasicTreeUI.TreeSelectionHandler                    
                </comment>
                <comment line="2659">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2682">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2687">
                    Also note these fields aren&apos;t use anymore, nor does Handler have
                     the old functionality. This behavior worked around an old bug
                     in JComponent that has long since been fixed.                    
                </comment>
                <comment line="2724">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2752">
                    This returns locations that don&apos;t include any Insets.                    
                </comment>
                <comment line="2826">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2864">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2882">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3265">
                    KeyListener                    
                </comment>
                <comment line="3365">
                    PropertyChangeListener                    
                </comment>
                <comment line="3461">
                    MouseListener                    
                </comment>
                <comment line="3465">
                    Whether or not the mouse press (which is being considered as part
                     of a drag sequence) also caused the selection change to be fully
                     processed.                    
                </comment>
                <comment line="3470">
                    Set to true when a drag gesture has been fully recognized and DnD
                     begins. Use this to ignore further mouse events which could be
                     delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="3475">
                    The path over which the press occurred and the press event itself                    
                </comment>
                <comment line="3479">
                    Used to detect whether the press event causes a selection change.
                     If it does, we won&apos;t try to start editing on the release.                    
                </comment>
                <comment line="3665">
                    FocusListener                    
                </comment>
                <comment line="3685">
                    CellEditorListener                    
                </comment>
                <comment line="3698">
                    TreeSelectionListener                    
                </comment>
                <comment line="3777">
                    TreeExpansionListener                    
                </comment>
                <comment line="3801">
                    TreeModelListener                    
                </comment>
                <comment line="3968">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="3971">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="3974">
                    extend the selection to the lead item                    
                </comment>
                <comment line="3977">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <implements interface="PropertyChangeListener"/>
                <javadoc line="2856">
                    PropertyChangeListener for the tree. Updates the appropriate
                      varaible, or TreeState, based on what changes.                    
                </javadoc>
                <method name="propertyChange" type="void" line="2868">
                    <params>
                        <param name="event" type="PropertyChangeEvent"/>
                    </params>
                </method>
            </class>
            <class name="SelectionModelPropertyChangeHandler" line="2874">
                <comment line="123">
                    WARNING: Be careful with the bounds held by treeState. They are
                     always in terms of left-to-right. They get mapped to right-to-left
                     by the various methods of this class.                    
                </comment>
                <comment line="2507">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2609">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2638">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2650">
                    End of BasicTreeUI.TreeSelectionHandler                    
                </comment>
                <comment line="2659">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2682">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2687">
                    Also note these fields aren&apos;t use anymore, nor does Handler have
                     the old functionality. This behavior worked around an old bug
                     in JComponent that has long since been fixed.                    
                </comment>
                <comment line="2724">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2752">
                    This returns locations that don&apos;t include any Insets.                    
                </comment>
                <comment line="2826">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2864">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2882">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3265">
                    KeyListener                    
                </comment>
                <comment line="3365">
                    PropertyChangeListener                    
                </comment>
                <comment line="3461">
                    MouseListener                    
                </comment>
                <comment line="3465">
                    Whether or not the mouse press (which is being considered as part
                     of a drag sequence) also caused the selection change to be fully
                     processed.                    
                </comment>
                <comment line="3470">
                    Set to true when a drag gesture has been fully recognized and DnD
                     begins. Use this to ignore further mouse events which could be
                     delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="3475">
                    The path over which the press occurred and the press event itself                    
                </comment>
                <comment line="3479">
                    Used to detect whether the press event causes a selection change.
                     If it does, we won&apos;t try to start editing on the release.                    
                </comment>
                <comment line="3665">
                    FocusListener                    
                </comment>
                <comment line="3685">
                    CellEditorListener                    
                </comment>
                <comment line="3698">
                    TreeSelectionListener                    
                </comment>
                <comment line="3777">
                    TreeExpansionListener                    
                </comment>
                <comment line="3801">
                    TreeModelListener                    
                </comment>
                <comment line="3968">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="3971">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="3974">
                    extend the selection to the lead item                    
                </comment>
                <comment line="3977">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <implements interface="PropertyChangeListener"/>
                <javadoc line="2874">
                    Listener on the TreeSelectionModel, resets the row selection if
                      any of the properties of the model change.                    
                </javadoc>
                <method name="propertyChange" type="void" line="2886">
                    <params>
                        <param name="event" type="PropertyChangeEvent"/>
                    </params>
                </method>
            </class>
            <class name="TreeTraverseAction" line="2892">
                <extends class="AbstractAction"/>
                <comment line="123">
                    WARNING: Be careful with the bounds held by treeState. They are
                     always in terms of left-to-right. They get mapped to right-to-left
                     by the various methods of this class.                    
                </comment>
                <comment line="2507">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2609">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2638">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2650">
                    End of BasicTreeUI.TreeSelectionHandler                    
                </comment>
                <comment line="2659">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2682">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2687">
                    Also note these fields aren&apos;t use anymore, nor does Handler have
                     the old functionality. This behavior worked around an old bug
                     in JComponent that has long since been fixed.                    
                </comment>
                <comment line="2724">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2752">
                    This returns locations that don&apos;t include any Insets.                    
                </comment>
                <comment line="2826">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2864">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2882">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3265">
                    KeyListener                    
                </comment>
                <comment line="3365">
                    PropertyChangeListener                    
                </comment>
                <comment line="3461">
                    MouseListener                    
                </comment>
                <comment line="3465">
                    Whether or not the mouse press (which is being considered as part
                     of a drag sequence) also caused the selection change to be fully
                     processed.                    
                </comment>
                <comment line="3470">
                    Set to true when a drag gesture has been fully recognized and DnD
                     begins. Use this to ignore further mouse events which could be
                     delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="3475">
                    The path over which the press occurred and the press event itself                    
                </comment>
                <comment line="3479">
                    Used to detect whether the press event causes a selection change.
                     If it does, we won&apos;t try to start editing on the release.                    
                </comment>
                <comment line="3665">
                    FocusListener                    
                </comment>
                <comment line="3685">
                    CellEditorListener                    
                </comment>
                <comment line="3698">
                    TreeSelectionListener                    
                </comment>
                <comment line="3777">
                    TreeExpansionListener                    
                </comment>
                <comment line="3801">
                    TreeModelListener                    
                </comment>
                <comment line="3968">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="3971">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="3974">
                    extend the selection to the lead item                    
                </comment>
                <comment line="3977">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <javadoc line="2892">
                    &lt;code&gt;TreeTraverseAction&lt;/code&gt; is the action used for left/right keys.
                      Will toggle the expandedness of a node, as well as potentially
                      incrementing the selection.                    
                </javadoc>
                <declaration name="direction" type="int" line="2898"/>
                <javadoc line="2898">
                    Determines direction to traverse, 1 means expand, -1 means
                      collapse.                    
                </javadoc>
                <declaration name="changeSelection" type="boolean" line="2901"/>
                <javadoc line="2901">
                    True if the selection is reset, false means only the lead path
                      changes.                    
                </javadoc>
                <method name="TreeTraverseAction" type="constructor" line="2905">
                    <params>
                        <param name="direction" type="int"/>
                        <param name="name" type="String"/>
                    </params>
                </method>
                <method name="TreeTraverseAction" type="constructor" line="2910">
                    <params>
                        <param name="direction" type="int"/>
                        <param name="name" type="String"/>
                        <param name="changeSelection" type="boolean"/>
                    </params>
                </method>
                <method name="actionPerformed" type="void" line="2915">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                    <scope line="2916"/>
                </method>
                <method name="isEnabled" type="boolean" line="2922"/>
            </class>
            <class name="TreePageAction" line="2927">
                <extends class="AbstractAction"/>
                <comment line="123">
                    WARNING: Be careful with the bounds held by treeState. They are
                     always in terms of left-to-right. They get mapped to right-to-left
                     by the various methods of this class.                    
                </comment>
                <comment line="2507">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2609">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2638">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2650">
                    End of BasicTreeUI.TreeSelectionHandler                    
                </comment>
                <comment line="2659">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2682">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2687">
                    Also note these fields aren&apos;t use anymore, nor does Handler have
                     the old functionality. This behavior worked around an old bug
                     in JComponent that has long since been fixed.                    
                </comment>
                <comment line="2724">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2752">
                    This returns locations that don&apos;t include any Insets.                    
                </comment>
                <comment line="2826">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2864">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2882">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3265">
                    KeyListener                    
                </comment>
                <comment line="3365">
                    PropertyChangeListener                    
                </comment>
                <comment line="3461">
                    MouseListener                    
                </comment>
                <comment line="3465">
                    Whether or not the mouse press (which is being considered as part
                     of a drag sequence) also caused the selection change to be fully
                     processed.                    
                </comment>
                <comment line="3470">
                    Set to true when a drag gesture has been fully recognized and DnD
                     begins. Use this to ignore further mouse events which could be
                     delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="3475">
                    The path over which the press occurred and the press event itself                    
                </comment>
                <comment line="3479">
                    Used to detect whether the press event causes a selection change.
                     If it does, we won&apos;t try to start editing on the release.                    
                </comment>
                <comment line="3665">
                    FocusListener                    
                </comment>
                <comment line="3685">
                    CellEditorListener                    
                </comment>
                <comment line="3698">
                    TreeSelectionListener                    
                </comment>
                <comment line="3777">
                    TreeExpansionListener                    
                </comment>
                <comment line="3801">
                    TreeModelListener                    
                </comment>
                <comment line="3968">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="3971">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="3974">
                    extend the selection to the lead item                    
                </comment>
                <comment line="3977">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <javadoc line="2927">
                    TreePageAction handles page up and page down events.                    
                </javadoc>
                <declaration name="direction" type="int" line="2930"/>
                <javadoc line="2930">
                    Specifies the direction to adjust the selection by.                    
                </javadoc>
                <declaration name="addToSelection" type="boolean" line="2932"/>
                <javadoc line="2932">
                    True indicates should set selection from anchor path.                    
                </javadoc>
                <declaration name="changeSelection" type="boolean" line="2934"/>
                <method name="TreePageAction" type="constructor" line="2936">
                    <params>
                        <param name="direction" type="int"/>
                        <param name="name" type="String"/>
                    </params>
                </method>
                <method name="TreePageAction" type="constructor" line="2942">
                    <params>
                        <param name="direction" type="int"/>
                        <param name="name" type="String"/>
                        <param name="addToSelection" type="boolean"/>
                        <param name="changeSelection" type="boolean"/>
                    </params>
                </method>
                <method name="actionPerformed" type="void" line="2948">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                    <scope line="2949"/>
                </method>
                <method name="isEnabled" type="boolean" line="2955"/>
            </class>
            <class name="TreeIncrementAction" line="2961">
                <extends class="AbstractAction"/>
                <comment line="123">
                    WARNING: Be careful with the bounds held by treeState. They are
                     always in terms of left-to-right. They get mapped to right-to-left
                     by the various methods of this class.                    
                </comment>
                <comment line="2507">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2609">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2638">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2650">
                    End of BasicTreeUI.TreeSelectionHandler                    
                </comment>
                <comment line="2659">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2682">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2687">
                    Also note these fields aren&apos;t use anymore, nor does Handler have
                     the old functionality. This behavior worked around an old bug
                     in JComponent that has long since been fixed.                    
                </comment>
                <comment line="2724">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2752">
                    This returns locations that don&apos;t include any Insets.                    
                </comment>
                <comment line="2826">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2864">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2882">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3265">
                    KeyListener                    
                </comment>
                <comment line="3365">
                    PropertyChangeListener                    
                </comment>
                <comment line="3461">
                    MouseListener                    
                </comment>
                <comment line="3465">
                    Whether or not the mouse press (which is being considered as part
                     of a drag sequence) also caused the selection change to be fully
                     processed.                    
                </comment>
                <comment line="3470">
                    Set to true when a drag gesture has been fully recognized and DnD
                     begins. Use this to ignore further mouse events which could be
                     delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="3475">
                    The path over which the press occurred and the press event itself                    
                </comment>
                <comment line="3479">
                    Used to detect whether the press event causes a selection change.
                     If it does, we won&apos;t try to start editing on the release.                    
                </comment>
                <comment line="3665">
                    FocusListener                    
                </comment>
                <comment line="3685">
                    CellEditorListener                    
                </comment>
                <comment line="3698">
                    TreeSelectionListener                    
                </comment>
                <comment line="3777">
                    TreeExpansionListener                    
                </comment>
                <comment line="3801">
                    TreeModelListener                    
                </comment>
                <comment line="3968">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="3971">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="3974">
                    extend the selection to the lead item                    
                </comment>
                <comment line="3977">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <javadoc line="2961">
                    TreeIncrementAction is used to handle up/down actions.  Selection
                      is moved up or down based on direction.                    
                </javadoc>
                <declaration name="direction" type="int" line="2965"/>
                <javadoc line="2965">
                    Specifies the direction to adjust the selection by.                    
                </javadoc>
                <declaration name="addToSelection" type="boolean" line="2967"/>
                <javadoc line="2967">
                    If true the new item is added to the selection, if false the
                      selection is reset.                    
                </javadoc>
                <declaration name="changeSelection" type="boolean" line="2970"/>
                <method name="TreeIncrementAction" type="constructor" line="2972">
                    <params>
                        <param name="direction" type="int"/>
                        <param name="name" type="String"/>
                    </params>
                </method>
                <method name="TreeIncrementAction" type="constructor" line="2978">
                    <params>
                        <param name="direction" type="int"/>
                        <param name="name" type="String"/>
                        <param name="addToSelection" type="boolean"/>
                        <param name="changeSelection" type="boolean"/>
                    </params>
                </method>
                <method name="actionPerformed" type="void" line="2984">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                    <scope line="2985"/>
                </method>
                <method name="isEnabled" type="boolean" line="2991"/>
            </class>
            <class name="TreeHomeAction" line="2996">
                <extends class="AbstractAction"/>
                <comment line="123">
                    WARNING: Be careful with the bounds held by treeState. They are
                     always in terms of left-to-right. They get mapped to right-to-left
                     by the various methods of this class.                    
                </comment>
                <comment line="2507">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2609">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2638">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2650">
                    End of BasicTreeUI.TreeSelectionHandler                    
                </comment>
                <comment line="2659">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2682">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2687">
                    Also note these fields aren&apos;t use anymore, nor does Handler have
                     the old functionality. This behavior worked around an old bug
                     in JComponent that has long since been fixed.                    
                </comment>
                <comment line="2724">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2752">
                    This returns locations that don&apos;t include any Insets.                    
                </comment>
                <comment line="2826">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2864">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2882">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3265">
                    KeyListener                    
                </comment>
                <comment line="3365">
                    PropertyChangeListener                    
                </comment>
                <comment line="3461">
                    MouseListener                    
                </comment>
                <comment line="3465">
                    Whether or not the mouse press (which is being considered as part
                     of a drag sequence) also caused the selection change to be fully
                     processed.                    
                </comment>
                <comment line="3470">
                    Set to true when a drag gesture has been fully recognized and DnD
                     begins. Use this to ignore further mouse events which could be
                     delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="3475">
                    The path over which the press occurred and the press event itself                    
                </comment>
                <comment line="3479">
                    Used to detect whether the press event causes a selection change.
                     If it does, we won&apos;t try to start editing on the release.                    
                </comment>
                <comment line="3665">
                    FocusListener                    
                </comment>
                <comment line="3685">
                    CellEditorListener                    
                </comment>
                <comment line="3698">
                    TreeSelectionListener                    
                </comment>
                <comment line="3777">
                    TreeExpansionListener                    
                </comment>
                <comment line="3801">
                    TreeModelListener                    
                </comment>
                <comment line="3968">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="3971">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="3974">
                    extend the selection to the lead item                    
                </comment>
                <comment line="3977">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <javadoc line="2996">
                    TreeHomeAction is used to handle end/home actions.
                      Scrolls either the first or last cell to be visible based on
                      direction.                    
                </javadoc>
                <declaration name="direction" type="int" line="3002"/>
                <declaration name="addToSelection" type="boolean" line="3003"/>
                <javadoc line="3003">
                    Set to true if append to selection.                    
                </javadoc>
                <declaration name="changeSelection" type="boolean" line="3005"/>
                <method name="TreeHomeAction" type="constructor" line="3007">
                    <params>
                        <param name="direction" type="int"/>
                        <param name="name" type="String"/>
                    </params>
                </method>
                <method name="TreeHomeAction" type="constructor" line="3013">
                    <params>
                        <param name="direction" type="int"/>
                        <param name="name" type="String"/>
                        <param name="addToSelection" type="boolean"/>
                        <param name="changeSelection" type="boolean"/>
                    </params>
                </method>
                <method name="actionPerformed" type="void" line="3019">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                    <scope line="3020"/>
                </method>
                <method name="isEnabled" type="boolean" line="3026"/>
            </class>
            <class name="TreeToggleAction" line="3032">
                <extends class="AbstractAction"/>
                <comment line="123">
                    WARNING: Be careful with the bounds held by treeState. They are
                     always in terms of left-to-right. They get mapped to right-to-left
                     by the various methods of this class.                    
                </comment>
                <comment line="2507">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2609">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2638">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2650">
                    End of BasicTreeUI.TreeSelectionHandler                    
                </comment>
                <comment line="2659">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2682">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2687">
                    Also note these fields aren&apos;t use anymore, nor does Handler have
                     the old functionality. This behavior worked around an old bug
                     in JComponent that has long since been fixed.                    
                </comment>
                <comment line="2724">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2752">
                    This returns locations that don&apos;t include any Insets.                    
                </comment>
                <comment line="2826">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2864">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2882">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3265">
                    KeyListener                    
                </comment>
                <comment line="3365">
                    PropertyChangeListener                    
                </comment>
                <comment line="3461">
                    MouseListener                    
                </comment>
                <comment line="3465">
                    Whether or not the mouse press (which is being considered as part
                     of a drag sequence) also caused the selection change to be fully
                     processed.                    
                </comment>
                <comment line="3470">
                    Set to true when a drag gesture has been fully recognized and DnD
                     begins. Use this to ignore further mouse events which could be
                     delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="3475">
                    The path over which the press occurred and the press event itself                    
                </comment>
                <comment line="3479">
                    Used to detect whether the press event causes a selection change.
                     If it does, we won&apos;t try to start editing on the release.                    
                </comment>
                <comment line="3665">
                    FocusListener                    
                </comment>
                <comment line="3685">
                    CellEditorListener                    
                </comment>
                <comment line="3698">
                    TreeSelectionListener                    
                </comment>
                <comment line="3777">
                    TreeExpansionListener                    
                </comment>
                <comment line="3801">
                    TreeModelListener                    
                </comment>
                <comment line="3968">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="3971">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="3974">
                    extend the selection to the lead item                    
                </comment>
                <comment line="3977">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <javadoc line="3032">
                    For the first selected row expandedness will be toggled.                    
                </javadoc>
                <method name="TreeToggleAction" type="constructor" line="3036">
                    <params>
                        <param name="name" type="String"/>
                    </params>
                </method>
                <method name="actionPerformed" type="void" line="3039">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                    <scope line="3040"/>
                </method>
                <method name="isEnabled" type="boolean" line="3045"/>
            </class>
            <class name="TreeCancelEditingAction" line="3051">
                <extends class="AbstractAction"/>
                <comment line="123">
                    WARNING: Be careful with the bounds held by treeState. They are
                     always in terms of left-to-right. They get mapped to right-to-left
                     by the various methods of this class.                    
                </comment>
                <comment line="2507">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2609">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2638">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2650">
                    End of BasicTreeUI.TreeSelectionHandler                    
                </comment>
                <comment line="2659">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2682">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2687">
                    Also note these fields aren&apos;t use anymore, nor does Handler have
                     the old functionality. This behavior worked around an old bug
                     in JComponent that has long since been fixed.                    
                </comment>
                <comment line="2724">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2752">
                    This returns locations that don&apos;t include any Insets.                    
                </comment>
                <comment line="2826">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2864">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2882">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3265">
                    KeyListener                    
                </comment>
                <comment line="3365">
                    PropertyChangeListener                    
                </comment>
                <comment line="3461">
                    MouseListener                    
                </comment>
                <comment line="3465">
                    Whether or not the mouse press (which is being considered as part
                     of a drag sequence) also caused the selection change to be fully
                     processed.                    
                </comment>
                <comment line="3470">
                    Set to true when a drag gesture has been fully recognized and DnD
                     begins. Use this to ignore further mouse events which could be
                     delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="3475">
                    The path over which the press occurred and the press event itself                    
                </comment>
                <comment line="3479">
                    Used to detect whether the press event causes a selection change.
                     If it does, we won&apos;t try to start editing on the release.                    
                </comment>
                <comment line="3665">
                    FocusListener                    
                </comment>
                <comment line="3685">
                    CellEditorListener                    
                </comment>
                <comment line="3698">
                    TreeSelectionListener                    
                </comment>
                <comment line="3777">
                    TreeExpansionListener                    
                </comment>
                <comment line="3801">
                    TreeModelListener                    
                </comment>
                <comment line="3968">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="3971">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="3974">
                    extend the selection to the lead item                    
                </comment>
                <comment line="3977">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <javadoc line="3051">
                    ActionListener that invokes cancelEditing when action performed.                    
                </javadoc>
                <method name="TreeCancelEditingAction" type="constructor" line="3055">
                    <params>
                        <param name="name" type="String"/>
                    </params>
                </method>
                <method name="actionPerformed" type="void" line="3058">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                    <scope line="3059"/>
                </method>
                <method name="isEnabled" type="boolean" line="3064"/>
            </class>
            <class name="MouseInputHandler" line="3070">
                <extends class="Object"/>
                <comment line="123">
                    WARNING: Be careful with the bounds held by treeState. They are
                     always in terms of left-to-right. They get mapped to right-to-left
                     by the various methods of this class.                    
                </comment>
                <comment line="2507">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2609">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2638">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2650">
                    End of BasicTreeUI.TreeSelectionHandler                    
                </comment>
                <comment line="2659">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2682">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2687">
                    Also note these fields aren&apos;t use anymore, nor does Handler have
                     the old functionality. This behavior worked around an old bug
                     in JComponent that has long since been fixed.                    
                </comment>
                <comment line="2724">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2752">
                    This returns locations that don&apos;t include any Insets.                    
                </comment>
                <comment line="2826">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2864">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2882">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3265">
                    KeyListener                    
                </comment>
                <comment line="3365">
                    PropertyChangeListener                    
                </comment>
                <comment line="3461">
                    MouseListener                    
                </comment>
                <comment line="3465">
                    Whether or not the mouse press (which is being considered as part
                     of a drag sequence) also caused the selection change to be fully
                     processed.                    
                </comment>
                <comment line="3470">
                    Set to true when a drag gesture has been fully recognized and DnD
                     begins. Use this to ignore further mouse events which could be
                     delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="3475">
                    The path over which the press occurred and the press event itself                    
                </comment>
                <comment line="3479">
                    Used to detect whether the press event causes a selection change.
                     If it does, we won&apos;t try to start editing on the release.                    
                </comment>
                <comment line="3665">
                    FocusListener                    
                </comment>
                <comment line="3685">
                    CellEditorListener                    
                </comment>
                <comment line="3698">
                    TreeSelectionListener                    
                </comment>
                <comment line="3777">
                    TreeExpansionListener                    
                </comment>
                <comment line="3801">
                    TreeModelListener                    
                </comment>
                <comment line="3968">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="3971">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="3974">
                    extend the selection to the lead item                    
                </comment>
                <comment line="3977">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <implements interface="MouseInputListener"/>
                <javadoc line="3070">
                    MouseInputHandler handles passing all mouse events,
                      including mouse motion events, until the mouse is released to
                      the destination it is constructed with. It is assumed all the
                      events are currently target at source.                    
                </javadoc>
                <declaration name="source" type="Component" line="3079"/>
                <javadoc line="3079">
                    Source that events are coming from.                    
                </javadoc>
                <declaration name="destination" type="Component" line="3081"/>
                <javadoc line="3081">
                    Destination that receives all events.                    
                </javadoc>
                <declaration name="focusComponent" type="Component" line="3083"/>
                <declaration name="dispatchedEvent" type="boolean" line="3084"/>
                <method name="MouseInputHandler" type="constructor" line="3087">
                    <params>
                        <param name="source" type="Component"/>
                        <param name="destination" type="Component"/>
                        <param name="event" type="MouseEvent"/>
                    </params>
                </method>
                <method name="MouseInputHandler" type="constructor" line="3092">
                    <params>
                        <param name="source" type="Component"/>
                        <param name="destination" type="Component"/>
                        <param name="event" type="MouseEvent"/>
                        <param name="focusComponent" type="Component"/>
                    </params>
                    <comment line="3102">
                                                
                    </comment>
                </method>
                <method name="mouseClicked" type="void" line="3107">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <scope line="3108"/>
                </method>
                <method name="mousePressed" type="void" line="3115">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseReleased" type="void" line="3118">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseEntered" type="void" line="3125">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <scope line="3126"/>
                </method>
                <method name="mouseExited" type="void" line="3131">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <scope line="3132"/>
                </method>
                <method name="mouseDragged" type="void" line="3137">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <scope line="3138"/>
                </method>
                <method name="mouseMoved" type="void" line="3145">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="removeFromSource" type="void" line="3149">
                    <scope line="3150">
                        <scope line="3155"/>
                    </scope>
                </method>
            </class>
            <declaration name="defaultTransferHandler" type="TransferHandler" line="3164"/>
            <class name="TreeTransferHandler" line="3166">
                <extends class="TransferHandler"/>
                <comment line="123">
                    WARNING: Be careful with the bounds held by treeState. They are
                     always in terms of left-to-right. They get mapped to right-to-left
                     by the various methods of this class.                    
                </comment>
                <comment line="2507">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2609">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2638">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2650">
                    End of BasicTreeUI.TreeSelectionHandler                    
                </comment>
                <comment line="2659">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2682">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2687">
                    Also note these fields aren&apos;t use anymore, nor does Handler have
                     the old functionality. This behavior worked around an old bug
                     in JComponent that has long since been fixed.                    
                </comment>
                <comment line="2724">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2752">
                    This returns locations that don&apos;t include any Insets.                    
                </comment>
                <comment line="2826">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2864">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2882">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3265">
                    KeyListener                    
                </comment>
                <comment line="3365">
                    PropertyChangeListener                    
                </comment>
                <comment line="3461">
                    MouseListener                    
                </comment>
                <comment line="3465">
                    Whether or not the mouse press (which is being considered as part
                     of a drag sequence) also caused the selection change to be fully
                     processed.                    
                </comment>
                <comment line="3470">
                    Set to true when a drag gesture has been fully recognized and DnD
                     begins. Use this to ignore further mouse events which could be
                     delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="3475">
                    The path over which the press occurred and the press event itself                    
                </comment>
                <comment line="3479">
                    Used to detect whether the press event causes a selection change.
                     If it does, we won&apos;t try to start editing on the release.                    
                </comment>
                <comment line="3665">
                    FocusListener                    
                </comment>
                <comment line="3685">
                    CellEditorListener                    
                </comment>
                <comment line="3698">
                    TreeSelectionListener                    
                </comment>
                <comment line="3777">
                    TreeExpansionListener                    
                </comment>
                <comment line="3801">
                    TreeModelListener                    
                </comment>
                <comment line="3968">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="3971">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="3974">
                    extend the selection to the lead item                    
                </comment>
                <comment line="3977">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <implements interface="UIResource"/>
                <implements interface="Comparator">
                    <type_params>
                        <type_param name="TreePath"/>
                    </type_params>
                </implements>
                <declaration name="tree" type="JTree" line="3168"/>
                <javadoc line="3170">
                    Create a Transferable to use as the source for a data transfer.                    
                    <param>
                        c  The component holding the data to be transfered.  This
                          argument is provided to enable sharing of TransferHandlers by
                          multiple components.                        
                    </param>
                    <return>
                        The representation of the data to be transfered.                        
                    </return>
                </javadoc>
                <method name="createTransferable" type="Transferable" line="3179">
                    <params>
                        <param name="c" type="JComponent"/>
                    </params>
                    <comment line="3207">
                        remove the last newline                        
                    </comment>
                    <scope line="3180">
                        <declaration name="paths" type="TreePath[]" line="3182"/>
                        <scope line="3184"/>
                        <declaration name="plainBuf" type="StringBuffer" line="3188"/>
                        <declaration name="htmlBuf" type="StringBuffer" line="3189"/>
                        <declaration name="model" type="TreeModel" line="3193"/>
                        <declaration name="lastPath" type="TreePath" line="3194"/>
                        <declaration name="displayPaths" type="TreePath[]" line="3195"/>
                        <scope line="3197">
                            <declaration name="node" type="Object" line="3198"/>
                            <declaration name="leaf" type="boolean" line="3199"/>
                            <declaration name="label" type="String" line="3200"/>
                        </scope>
                    </scope>
                </method>
                <method name="compare" type="int" line="3218">
                    <params>
                        <param name="o1" type="TreePath"/>
                        <param name="o2" type="TreePath"/>
                    </params>
                    <declaration name="row1" type="int" line="3219"/>
                    <declaration name="row2" type="int" line="3220"/>
                </method>
                <method name="getDisplayString" type="String" line="3224">
                    <params>
                        <param name="path" type="TreePath"/>
                        <param name="selected" type="boolean"/>
                        <param name="leaf" type="boolean"/>
                    </params>
                    <declaration name="row" type="int" line="3225"/>
                    <declaration name="hasFocus" type="boolean" line="3226"/>
                    <declaration name="node" type="Object" line="3227"/>
                </method>
                <javadoc line="3232">
                    Selection paths are in selection order.  The conversion to
                      HTML requires display order.  This method resorts the paths
                      to be in the display order.                    
                </javadoc>
                <method name="getDisplayOrderPaths" type="TreePath[]" line="3237">
                    <params>
                        <param name="paths" type="TreePath[]"/>
                    </params>
                    <comment line="3239">
                        sort the paths to display order rather than selection order                        
                    </comment>
                    <declaration name="selOrder" type="ArrayList&lt;TreePath&gt;" line="3239"/>
                    <scope line="3240"/>
                    <declaration name="n" type="int" line="3244"/>
                    <declaration name="displayPaths" type="TreePath[]" line="3245"/>
                    <scope line="3246"/>
                </method>
                <method name="getSourceActions" type="int" line="3252">
                    <params>
                        <param name="c" type="JComponent"/>
                    </params>
                </method>
            </class>
            <class name="Handler" line="3259">
                <comment line="123">
                    WARNING: Be careful with the bounds held by treeState. They are
                     always in terms of left-to-right. They get mapped to right-to-left
                     by the various methods of this class.                    
                </comment>
                <comment line="2507">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2609">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2638">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2650">
                    End of BasicTreeUI.TreeSelectionHandler                    
                </comment>
                <comment line="2659">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2682">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2687">
                    Also note these fields aren&apos;t use anymore, nor does Handler have
                     the old functionality. This behavior worked around an old bug
                     in JComponent that has long since been fixed.                    
                </comment>
                <comment line="2724">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2752">
                    This returns locations that don&apos;t include any Insets.                    
                </comment>
                <comment line="2826">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2864">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2882">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3265">
                    KeyListener                    
                </comment>
                <comment line="3365">
                    PropertyChangeListener                    
                </comment>
                <comment line="3461">
                    MouseListener                    
                </comment>
                <comment line="3465">
                    Whether or not the mouse press (which is being considered as part
                     of a drag sequence) also caused the selection change to be fully
                     processed.                    
                </comment>
                <comment line="3470">
                    Set to true when a drag gesture has been fully recognized and DnD
                     begins. Use this to ignore further mouse events which could be
                     delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="3475">
                    The path over which the press occurred and the press event itself                    
                </comment>
                <comment line="3479">
                    Used to detect whether the press event causes a selection change.
                     If it does, we won&apos;t try to start editing on the release.                    
                </comment>
                <comment line="3665">
                    FocusListener                    
                </comment>
                <comment line="3685">
                    CellEditorListener                    
                </comment>
                <comment line="3698">
                    TreeSelectionListener                    
                </comment>
                <comment line="3777">
                    TreeExpansionListener                    
                </comment>
                <comment line="3801">
                    TreeModelListener                    
                </comment>
                <comment line="3968">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="3971">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="3974">
                    extend the selection to the lead item                    
                </comment>
                <comment line="3977">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <implements interface="CellEditorListener"/>
                <implements interface="FocusListener"/>
                <implements interface="KeyListener"/>
                <implements interface="MouseListener"/>
                <implements interface="MouseMotionListener"/>
                <implements interface="PropertyChangeListener"/>
                <implements interface="TreeExpansionListener"/>
                <implements interface="TreeModelListener"/>
                <implements interface="TreeSelectionListener"/>
                <implements interface="BeforeDrag"/>
                <declaration name="prefix" type="String" line="3267"/>
                <declaration name="typedString" type="String" line="3268"/>
                <declaration name="lastTime" type="long" line="3269"/>
                <javadoc line="3271">
                    Invoked when a key has been typed.
                      Moves the keyboard focus to the first element whose prefix matches the
                      sequence of alphanumeric keys pressed by the user with delay less
                      than value of &lt;code&gt;timeFactor&lt;/code&gt; property (or 1000 milliseconds
                      if it is not defined). Subsequent same key presses move the keyboard
                      focus to the next object that starts with the same letter until another
                      key is pressed, then it is treated as the prefix with appropriate number
                      of the same letters followed by first typed another letter.                    
                </javadoc>
                <method name="keyTyped" type="void" line="3282">
                    <params>
                        <param name="e" type="KeyEvent"/>
                    </params>
                    <comment line="3284">
                        handle first letter navigation                        
                    </comment>
                    <comment line="3300">
                        Subsequent same key presses move the keyboard focus to the next
                         object that starts with the same letter.                        
                    </comment>
                    <scope line="3285">
                        <scope line="3287"/>
                        <declaration name="startingFromSelection" type="boolean" line="3290"/>
                        <declaration name="c" type="char" line="3292"/>
                        <declaration name="time" type="long" line="3294"/>
                        <declaration name="startingRow" type="int" line="3295"/>
                        <scope line="3296">
                            <scope line="3298"/>
                            <scope line="3302"/>
                        </scope>
                        <scope line="3305"/>
                        <scope line="3312"/>
                        <declaration name="path" type="TreePath" line="3316"/>
                        <scope line="3318">
                            <declaration name="row" type="int" line="3320"/>
                        </scope>
                        <scope line="3322">
                            <scope line="3325">
                                <declaration name="row" type="int" line="3327"/>
                            </scope>
                        </scope>
                    </scope>
                </method>
                <javadoc line="3334">
                    Invoked when a key has been pressed.
                      Checks to see if the key event is a navigation key to prevent
                      dispatching these keys for the first letter navigation.                    
                </javadoc>
                <method name="keyPressed" type="void" line="3340">
                    <params>
                        <param name="e" type="KeyEvent"/>
                    </params>
                    <scope line="3341"/>
                </method>
                <method name="keyReleased" type="void" line="3348">
                    <params>
                        <param name="e" type="KeyEvent"/>
                    </params>
                </method>
                <javadoc line="3351">
                    Returns whether or not the supplied key event maps to a key that is used for
                      navigation.  This is used for optimizing key input by only passing non-
                      navigation keys to the first letter navigation mechanism.                    
                </javadoc>
                <method name="isNavigationKey" type="boolean" line="3356">
                    <params>
                        <param name="event" type="KeyEvent"/>
                    </params>
                    <declaration name="inputMap" type="InputMap" line="3357"/>
                    <declaration name="key" type="KeyStroke" line="3358"/>
                </method>
                <method name="propertyChange" type="void" line="3367">
                    <params>
                        <param name="event" type="PropertyChangeEvent"/>
                    </params>
                    <scope line="3368"/>
                    <scope line="3371">
                        <declaration name="changeName" type="String" line="3372"/>
                        <scope line="3374">
                            <scope line="3375"/>
                        </scope>
                        <scope line="3381">
                            <scope line="3382"/>
                        </scope>
                        <scope line="3387"/>
                        <scope line="3391"/>
                        <scope line="3394"/>
                        <scope line="3398"/>
                        <scope line="3402"/>
                        <scope line="3406"/>
                        <scope line="3409"/>
                        <scope line="3412"/>
                        <scope line="3415"/>
                        <scope line="3418"/>
                        <scope line="3424">
                            <scope line="3425">
                                <declaration name="km" type="InputMap" line="3430"/>
                            </scope>
                        </scope>
                        <scope line="3434">
                            <declaration name="oldValue" type="JTree.DropLocation" line="3435"/>
                        </scope>
                    </scope>
                </method>
                <method name="repaintDropLocation" type="void" line="3442">
                    <params>
                        <param name="loc" type="JTree.DropLocation"/>
                    </params>
                    <scope line="3443"/>
                    <declaration name="r" type="Rectangle" line="3447"/>
                    <scope line="3449"/>
                    <scope line="3451"/>
                    <scope line="3455"/>
                </method>
                <declaration name="dragPressDidSelection" type="boolean" line="3467"/>
                <declaration name="dragStarted" type="boolean" line="3472"/>
                <declaration name="pressedPath" type="TreePath" line="3475"/>
                <declaration name="pressedEvent" type="MouseEvent" line="3476"/>
                <declaration name="valueChangedOnPress" type="boolean" line="3480"/>
                <method name="isActualPath" type="boolean" line="3482">
                    <params>
                        <param name="path" type="TreePath"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <scope line="3483"/>
                    <declaration name="bounds" type="Rectangle" line="3487"/>
                    <scope line="3488"/>
                </method>
                <method name="mouseClicked" type="void" line="3495">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseEntered" type="void" line="3498">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseExited" type="void" line="3501">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <javadoc line="3504">
                    Invoked when a mouse button has been pressed on a component.                    
                </javadoc>
                <method name="mousePressed" type="void" line="3507">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <comment line="3513">
                        if we can&apos;t stop any ongoing editing, do nothing                        
                    </comment>
                    <scope line="3508"/>
                    <scope line="3514"/>
                    <scope line="3522"/>
                    <scope line="3524"/>
                </method>
                <method name="mousePressedDND" type="void" line="3530">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <comment line="3537">
                        if we have a valid path and this is a drag initiating event                        
                    </comment>
                    <comment line="3544">
                        do nothing for control - will be handled on release
                         or when drag starts                        
                    </comment>
                    <comment line="3548">
                        clicking on something that&apos;s already selected
                         and need to make it the lead now                        
                    </comment>
                    <comment line="3557">
                        could be a drag initiating event - don&apos;t grab focus                        
                    </comment>
                    <declaration name="grabFocus" type="boolean" line="3532"/>
                    <scope line="3538">
                        <scope line="3542"/>
                        <scope line="3546"/>
                    </scope>
                    <scope line="3560"/>
                </method>
                <method name="handleSelection" type="void" line="3567">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <comment line="3576">
                        Preferably checkForClickInExpandControl could take
                         the Event to do this it self!                        
                    </comment>
                    <comment line="3584">
                        Perhaps they clicked the cell itself. If so,
                         select it.                        
                    </comment>
                    <scope line="3568">
                        <declaration name="bounds" type="Rectangle" line="3569"/>
                        <scope line="3571"/>
                        <scope line="3577"/>
                        <declaration name="x" type="int" line="3581"/>
                        <scope line="3585">
                            <scope line="3586"/>
                        </scope>
                    </scope>
                </method>
                <method name="dragStarting" type="void" line="3593">
                    <params>
                        <param name="me" type="MouseEvent"/>
                    </params>
                    <scope line="3596"/>
                </method>
                <method name="mouseDragged" type="void" line="3606">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <scope line="3607"/>
                    <scope line="3611"/>
                </method>
                <javadoc line="3616">
                    Invoked when the mouse button has been moved on a component
                      (with no buttons no down).                    
                </javadoc>
                <method name="mouseMoved" type="void" line="3620">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseReleased" type="void" line="3623">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <scope line="3624"/>
                    <scope line="3628"/>
                </method>
                <method name="mouseReleasedDND" type="void" line="3636">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <comment line="3648">
                        Note: We don&apos;t give the tree a chance to start editing if the
                         mouse press caused a selection change. Otherwise the default
                         tree cell editor will start editing on EVERY press and
                         release. If it turns out that this affects some editors, we
                         can always parameterize this with a client property. ex:
                        
                         if (pressedPath != null &amp;&amp;
                                 (Boolean.TRUE == tree.getClientProperty(&quot;Tree.DnD.canEditOnValueChange&quot;) ||
                                  !valueChangedOnPress) &amp;&amp; ...                        
                    </comment>
                    <declaration name="me" type="MouseEvent" line="3637"/>
                    <scope line="3638">
                        <scope line="3640"/>
                    </scope>
                    <scope line="3645">
                        <scope line="3657"/>
                    </scope>
                </method>
                <method name="focusGained" type="void" line="3667">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                    <scope line="3668">
                        <declaration name="pBounds" type="Rectangle" line="3669"/>
                    </scope>
                </method>
                <method name="focusLost" type="void" line="3680">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                </method>
                <method name="editingStopped" type="void" line="3687">
                    <params>
                        <param name="e" type="ChangeEvent"/>
                    </params>
                </method>
                <javadoc line="3691">
                    Messaged when editing has been canceled in the tree.                    
                </javadoc>
                <method name="editingCanceled" type="void" line="3692">
                    <params>
                        <param name="e" type="ChangeEvent"/>
                    </params>
                </method>
                <method name="valueChanged" type="void" line="3700">
                    <params>
                        <param name="event" type="TreeSelectionEvent"/>
                    </params>
                    <comment line="3704">
                        Stop editing                        
                    </comment>
                    <comment line="3706">
                        Make sure all the paths are visible, if necessary.
                         PENDING: This should be tweaked when isAdjusting is added                        
                    </comment>
                    <comment line="3719">
                        Indicates this path isn&apos;t valid anymore,
                         we shouldn&apos;t attempt to expand it then.                        
                    </comment>
                    <scope line="3707">
                        <declaration name="paths" type="TreePath[]" line="3708"/>
                        <scope line="3711">
                            <scope line="3713">
                                <declaration name="path" type="TreePath" line="3714"/>
                                <declaration name="expand" type="boolean" line="3715"/>
                                <scope line="3717">
                                    <scope line="3720"/>
                                    <scope line="3724"/>
                                </scope>
                                <scope line="3728"/>
                            </scope>
                        </scope>
                    </scope>
                    <declaration name="oldLead" type="TreePath" line="3735"/>
                    <declaration name="lead" type="TreePath" line="3737"/>
                    <declaration name="changedPaths" type="TreePath[]" line="3741"/>
                    <declaration name="nodeBounds" type="Rectangle" line="3742"/>
                    <declaration name="visRect" type="Rectangle" line="3743"/>
                    <declaration name="paintPaths" type="boolean" line="3744"/>
                    <declaration name="nWidth" type="int" line="3745"/>
                    <scope line="3747">
                        <declaration name="counter" type="int" line="3748"/>
                        <scope line="3750"/>
                        <scope line="3754">
                            <scope line="3755"/>
                        </scope>
                    </scope>
                    <scope line="3765"/>
                </method>
                <method name="treeExpanded" type="void" line="3779">
                    <params>
                        <param name="event" type="TreeExpansionEvent"/>
                    </params>
                    <scope line="3780">
                        <declaration name="path" type="TreePath" line="3781"/>
                    </scope>
                </method>
                <method name="treeCollapsed" type="void" line="3787">
                    <params>
                        <param name="event" type="TreeExpansionEvent"/>
                    </params>
                    <scope line="3788">
                        <declaration name="path" type="TreePath" line="3789"/>
                        <scope line="3792"/>
                    </scope>
                </method>
                <method name="treeNodesChanged" type="void" line="3803">
                    <params>
                        <param name="e" type="TreeModelEvent"/>
                    </params>
                    <comment line="3809">
                        The root has changed                        
                    </comment>
                    <comment line="3814">
                        Changed nodes are visible
                         Find the minimum index, we only need paint from there
                         down.                        
                    </comment>
                    <comment line="3826">
                        Forward to the treestate                        
                    </comment>
                    <comment line="3829">
                        Mark preferred size as bogus.                        
                    </comment>
                    <comment line="3832">
                        And repaint                        
                    </comment>
                    <comment line="3845">
                        Nodes that changed aren&apos;t visible.  No need to paint                        
                    </comment>
                    <scope line="3804">
                        <declaration name="parentPath" type="TreePath" line="3805"/>
                        <declaration name="indices" type="int[]" line="3806"/>
                        <scope line="3807"/>
                        <scope line="3812">
                            <declaration name="minIndex" type="int" line="3816"/>
                            <scope line="3817"/>
                            <declaration name="minChild" type="Object" line="3820"/>
                            <declaration name="minPath" type="TreePath" line="3822"/>
                            <declaration name="minBounds" type="Rectangle" line="3823"/>
                            <declaration name="newMinBounds" type="Rectangle" line="3832"/>
                            <scope line="3834"/>
                            <scope line="3838"/>
                        </scope>
                        <scope line="3843"/>
                    </scope>
                </method>
                <method name="treeNodesInserted" type="void" line="3850">
                    <params>
                        <param name="e" type="TreeModelEvent"/>
                    </params>
                    <comment line="3863">
                        PENDING(sky): Need a method in TreeModelEvent
                         that can return the count, getChildIndices allocs
                         a new array!                        
                    </comment>
                    <scope line="3851">
                        <declaration name="path" type="TreePath" line="3856"/>
                        <scope line="3858"/>
                        <scope line="3861">
                            <declaration name="indices" type="int[]" line="3865"/>
                            <declaration name="childCount" type="int" line="3866"/>
                        </scope>
                    </scope>
                </method>
                <method name="treeNodesRemoved" type="void" line="3875">
                    <params>
                        <param name="e" type="TreeModelEvent"/>
                    </params>
                    <scope line="3876">
                        <declaration name="path" type="TreePath" line="3881"/>
                    </scope>
                </method>
                <method name="treeStructureChanged" type="void" line="3889">
                    <params>
                        <param name="e" type="TreeModelEvent"/>
                    </params>
                    <scope line="3890">
                        <declaration name="pPath" type="TreePath" line="3895"/>
                        <scope line="3897"/>
                    </scope>
                </method>
            </class>
            <class name="Actions" line="3908">
                <extends class="UIAction"/>
                <comment line="123">
                    WARNING: Be careful with the bounds held by treeState. They are
                     always in terms of left-to-right. They get mapped to right-to-left
                     by the various methods of this class.                    
                </comment>
                <comment line="2507">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2609">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2638">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2650">
                    End of BasicTreeUI.TreeSelectionHandler                    
                </comment>
                <comment line="2659">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2682">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2687">
                    Also note these fields aren&apos;t use anymore, nor does Handler have
                     the old functionality. This behavior worked around an old bug
                     in JComponent that has long since been fixed.                    
                </comment>
                <comment line="2724">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2752">
                    This returns locations that don&apos;t include any Insets.                    
                </comment>
                <comment line="2826">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2864">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="2882">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3265">
                    KeyListener                    
                </comment>
                <comment line="3365">
                    PropertyChangeListener                    
                </comment>
                <comment line="3461">
                    MouseListener                    
                </comment>
                <comment line="3465">
                    Whether or not the mouse press (which is being considered as part
                     of a drag sequence) also caused the selection change to be fully
                     processed.                    
                </comment>
                <comment line="3470">
                    Set to true when a drag gesture has been fully recognized and DnD
                     begins. Use this to ignore further mouse events which could be
                     delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="3475">
                    The path over which the press occurred and the press event itself                    
                </comment>
                <comment line="3479">
                    Used to detect whether the press event causes a selection change.
                     If it does, we won&apos;t try to start editing on the release.                    
                </comment>
                <comment line="3665">
                    FocusListener                    
                </comment>
                <comment line="3685">
                    CellEditorListener                    
                </comment>
                <comment line="3698">
                    TreeSelectionListener                    
                </comment>
                <comment line="3777">
                    TreeExpansionListener                    
                </comment>
                <comment line="3801">
                    TreeModelListener                    
                </comment>
                <comment line="3968">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="3971">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="3974">
                    extend the selection to the lead item                    
                </comment>
                <comment line="3977">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <declaration name="SELECT_PREVIOUS" type="String" line="3909"/>
                <declaration name="SELECT_PREVIOUS_CHANGE_LEAD" type="String" line="3910"/>
                <declaration name="SELECT_PREVIOUS_EXTEND_SELECTION" type="String" line="3912"/>
                <declaration name="SELECT_NEXT" type="String" line="3914"/>
                <declaration name="SELECT_NEXT_CHANGE_LEAD" type="String" line="3915"/>
                <declaration name="SELECT_NEXT_EXTEND_SELECTION" type="String" line="3917"/>
                <declaration name="SELECT_CHILD" type="String" line="3919"/>
                <declaration name="SELECT_CHILD_CHANGE_LEAD" type="String" line="3920"/>
                <declaration name="SELECT_PARENT" type="String" line="3922"/>
                <declaration name="SELECT_PARENT_CHANGE_LEAD" type="String" line="3923"/>
                <declaration name="SCROLL_UP_CHANGE_SELECTION" type="String" line="3925"/>
                <declaration name="SCROLL_UP_CHANGE_LEAD" type="String" line="3927"/>
                <declaration name="SCROLL_UP_EXTEND_SELECTION" type="String" line="3929"/>
                <declaration name="SCROLL_DOWN_CHANGE_SELECTION" type="String" line="3931"/>
                <declaration name="SCROLL_DOWN_EXTEND_SELECTION" type="String" line="3933"/>
                <declaration name="SCROLL_DOWN_CHANGE_LEAD" type="String" line="3935"/>
                <declaration name="SELECT_FIRST" type="String" line="3937"/>
                <declaration name="SELECT_FIRST_CHANGE_LEAD" type="String" line="3938"/>
                <declaration name="SELECT_FIRST_EXTEND_SELECTION" type="String" line="3940"/>
                <declaration name="SELECT_LAST" type="String" line="3942"/>
                <declaration name="SELECT_LAST_CHANGE_LEAD" type="String" line="3943"/>
                <declaration name="SELECT_LAST_EXTEND_SELECTION" type="String" line="3945"/>
                <declaration name="TOGGLE" type="String" line="3947"/>
                <declaration name="CANCEL_EDITING" type="String" line="3948"/>
                <declaration name="START_EDITING" type="String" line="3949"/>
                <declaration name="SELECT_ALL" type="String" line="3950"/>
                <declaration name="CLEAR_SELECTION" type="String" line="3951"/>
                <declaration name="SCROLL_LEFT" type="String" line="3952"/>
                <declaration name="SCROLL_RIGHT" type="String" line="3953"/>
                <declaration name="SCROLL_LEFT_EXTEND_SELECTION" type="String" line="3954"/>
                <declaration name="SCROLL_RIGHT_EXTEND_SELECTION" type="String" line="3956"/>
                <declaration name="SCROLL_RIGHT_CHANGE_LEAD" type="String" line="3958"/>
                <declaration name="SCROLL_LEFT_CHANGE_LEAD" type="String" line="3960"/>
                <declaration name="EXPAND" type="String" line="3962"/>
                <declaration name="COLLAPSE" type="String" line="3963"/>
                <declaration name="MOVE_SELECTION_TO_PARENT" type="String" line="3964"/>
                <declaration name="ADD_TO_SELECTION" type="String" line="3968"/>
                <declaration name="TOGGLE_AND_ANCHOR" type="String" line="3971"/>
                <declaration name="EXTEND_TO" type="String" line="3974"/>
                <declaration name="MOVE_SELECTION_TO" type="String" line="3977"/>
                <method name="Actions" type="constructor" line="3979"/>
                <method name="Actions" type="constructor" line="3983">
                    <params>
                        <param name="key" type="String"/>
                    </params>
                </method>
                <method name="isEnabled" type="boolean" line="3987">
                    <params>
                        <param name="o" type="Object"/>
                    </params>
                    <scope line="3988">
                        <scope line="3989"/>
                    </scope>
                </method>
                <method name="actionPerformed" type="void" line="3996">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                    <declaration name="tree" type="JTree" line="3997"/>
                    <declaration name="ui" type="BasicTreeUI" line="3998"/>
                    <scope line="4000"/>
                    <declaration name="key" type="String" line="4003"/>
                    <scope line="4004"/>
                    <scope line="4007"/>
                    <scope line="4010"/>
                    <scope line="4013"/>
                    <scope line="4016"/>
                    <scope line="4019"/>
                    <scope line="4022"/>
                    <scope line="4025"/>
                    <scope line="4028"/>
                    <scope line="4031"/>
                    <scope line="4034"/>
                    <scope line="4037"/>
                    <scope line="4040"/>
                    <scope line="4043"/>
                    <scope line="4046"/>
                    <scope line="4049"/>
                    <scope line="4052"/>
                    <scope line="4055"/>
                    <scope line="4058"/>
                    <scope line="4061"/>
                    <scope line="4064"/>
                    <scope line="4067"/>
                    <scope line="4070"/>
                    <scope line="4073"/>
                    <scope line="4076"/>
                    <scope line="4079"/>
                    <scope line="4082"/>
                    <scope line="4085">
                        <scope line="4086">
                            <declaration name="lead" type="int" line="4087"/>
                            <scope line="4088">
                                <declaration name="aPath" type="TreePath" line="4089"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="4095">
                        <scope line="4096">
                            <declaration name="lead" type="int" line="4097"/>
                            <declaration name="lPath" type="TreePath" line="4098"/>
                            <scope line="4099"/>
                            <scope line="4101"/>
                        </scope>
                    </scope>
                    <scope line="4108"/>
                    <scope line="4111">
                        <scope line="4112">
                            <declaration name="lead" type="int" line="4113"/>
                        </scope>
                    </scope>
                    <scope line="4117"/>
                    <scope line="4120"/>
                    <scope line="4123"/>
                    <scope line="4126"/>
                    <scope line="4129"/>
                    <scope line="4132"/>
                    <scope line="4135"/>
                    <scope line="4138"/>
                    <scope line="4141"/>
                </method>
                <method name="scrollChangeSelection" type="void" line="4148">
                    <params>
                        <param name="tree" type="JTree"/>
                        <param name="ui" type="BasicTreeUI"/>
                        <param name="direction" type="int"/>
                        <param name="addToSelection" type="boolean"/>
                        <param name="changeSelection" type="boolean"/>
                    </params>
                    <comment line="4168">
                        Scroll                        
                    </comment>
                    <comment line="4170">
                        select                        
                    </comment>
                    <declaration name="rowCount" type="int" line="4149"/>
                    <scope line="4152">
                        <declaration name="newPath" type="TreePath" line="4153"/>
                        <declaration name="visRect" type="Rectangle" line="4154"/>
                        <scope line="4156"/>
                        <scope line="4161"/>
                        <scope line="4170"/>
                        <scope line="4173"/>
                        <scope line="4176"/>
                    </scope>
                </method>
                <method name="scroll" type="void" line="4183">
                    <params>
                        <param name="component" type="JTree"/>
                        <param name="ui" type="BasicTreeUI"/>
                        <param name="direction" type="int"/>
                        <param name="amount" type="int"/>
                    </params>
                    <declaration name="visRect" type="Rectangle" line="4184"/>
                    <declaration name="size" type="Dimension" line="4185"/>
                    <scope line="4186"/>
                    <scope line="4192"/>
                </method>
                <method name="extendSelection" type="void" line="4201">
                    <params>
                        <param name="tree" type="JTree"/>
                        <param name="ui" type="BasicTreeUI"/>
                    </params>
                    <scope line="4202">
                        <declaration name="lead" type="int" line="4203"/>
                        <scope line="4205">
                            <declaration name="leadP" type="TreePath" line="4206"/>
                            <declaration name="aPath" type="TreePath" line="4207"/>
                            <declaration name="aRow" type="int" line="4208"/>
                        </scope>
                    </scope>
                </method>
                <method name="selectAll" type="void" line="4219">
                    <params>
                        <param name="tree" type="JTree"/>
                        <param name="ui" type="BasicTreeUI"/>
                        <param name="selectAll" type="boolean"/>
                    </params>
                    <declaration name="rowCount" type="int" line="4220"/>
                    <scope line="4222">
                        <scope line="4223">
                            <scope line="4225">
                                <declaration name="lead" type="int" line="4227"/>
                                <scope line="4228"/>
                                <scope line="4230"/>
                            </scope>
                            <declaration name="lastPath" type="TreePath" line="4237"/>
                            <declaration name="aPath" type="TreePath" line="4238"/>
                            <scope line="4240"/>
                            <scope line="4244"/>
                            <scope line="4247"/>
                        </scope>
                        <scope line="4251">
                            <declaration name="lastPath" type="TreePath" line="4252"/>
                            <declaration name="aPath" type="TreePath" line="4253"/>
                        </scope>
                    </scope>
                </method>
                <method name="startEditing" type="void" line="4262">
                    <params>
                        <param name="tree" type="JTree"/>
                        <param name="ui" type="BasicTreeUI"/>
                    </params>
                    <declaration name="lead" type="TreePath" line="4263"/>
                    <declaration name="editRow" type="int" line="4264"/>
                    <scope line="4267"/>
                </method>
                <method name="cancelEditing" type="void" line="4272">
                    <params>
                        <param name="tree" type="JTree"/>
                        <param name="ui" type="BasicTreeUI"/>
                    </params>
                </method>
                <method name="toggle" type="void" line="4276">
                    <params>
                        <param name="tree" type="JTree"/>
                        <param name="ui" type="BasicTreeUI"/>
                    </params>
                    <declaration name="selRow" type="int" line="4277"/>
                    <scope line="4279">
                        <declaration name="aPath" type="TreePath" line="4280"/>
                        <declaration name="lPath" type="TreePath" line="4281"/>
                    </scope>
                </method>
                <method name="expand" type="void" line="4289">
                    <params>
                        <param name="tree" type="JTree"/>
                        <param name="ui" type="BasicTreeUI"/>
                    </params>
                    <declaration name="selRow" type="int" line="4290"/>
                </method>
                <method name="collapse" type="void" line="4294">
                    <params>
                        <param name="tree" type="JTree"/>
                        <param name="ui" type="BasicTreeUI"/>
                    </params>
                    <declaration name="selRow" type="int" line="4295"/>
                </method>
                <method name="increment" type="void" line="4301">
                    <params>
                        <param name="tree" type="JTree"/>
                        <param name="ui" type="BasicTreeUI"/>
                        <param name="direction" type="int"/>
                        <param name="addToSelection" type="boolean"/>
                        <param name="changeSelection" type="boolean"/>
                    </params>
                    <comment line="4304">
                        disable moving of lead unless in discontiguous mode                        
                    </comment>
                    <comment line="4325">
                                                
                    </comment>
                    <scope line="4306"/>
                    <declaration name="rowCount" type="int" line="4310"/>
                    <scope line="4313">
                        <declaration name="selIndex" type="int" line="4314"/>
                        <declaration name="newIndex" type="int" line="4315"/>
                        <scope line="4317"/>
                        <scope line="4329"/>
                        <scope line="4332"/>
                        <scope line="4335"/>
                    </scope>
                </method>
                <method name="traverse" type="void" line="4344">
                    <params>
                        <param name="tree" type="JTree"/>
                        <param name="ui" type="BasicTreeUI"/>
                        <param name="direction" type="int"/>
                        <param name="changeSelection" type="boolean"/>
                    </params>
                    <comment line="4347">
                        disable moving of lead unless in discontiguous mode                        
                    </comment>
                    <comment line="4363">
                        Try and expand the node, otherwise go to next                        
                    </comment>
                    <comment line="4379">
                                                
                    </comment>
                    <scope line="4349"/>
                    <declaration name="rowCount" type="int" line="4353"/>
                    <scope line="4355">
                        <declaration name="minSelIndex" type="int" line="4356"/>
                        <declaration name="newIndex" type="int" line="4357"/>
                        <scope line="4361">
                            <scope line="4364">
                                <declaration name="minSelPath" type="TreePath" line="4365"/>
                                <declaration name="childCount" type="int" line="4366"/>
                                <scope line="4369">
                                    <scope line="4370"/>
                                    <scope line="4373"/>
                                </scope>
                            </scope>
                            <scope line="4379">
                                <scope line="4381"/>
                                <scope line="4386">
                                    <declaration name="path" type="TreePath" line="4387"/>
                                    <scope line="4390"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="4399">
                            <scope line="4400"/>
                            <scope line="4403"/>
                        </scope>
                    </scope>
                </method>
                <method name="moveSelectionToParent" type="void" line="4412">
                    <params>
                        <param name="tree" type="JTree"/>
                        <param name="ui" type="BasicTreeUI"/>
                    </params>
                    <declaration name="selRow" type="int" line="4413"/>
                    <declaration name="path" type="TreePath" line="4414"/>
                    <scope line="4415">
                        <declaration name="newIndex" type="int" line="4416"/>
                        <scope line="4417"/>
                    </scope>
                </method>
                <method name="page" type="void" line="4425">
                    <params>
                        <param name="tree" type="JTree"/>
                        <param name="ui" type="BasicTreeUI"/>
                        <param name="direction" type="int"/>
                        <param name="addToSelection" type="boolean"/>
                        <param name="changeSelection" type="boolean"/>
                    </params>
                    <comment line="4428">
                        disable moving of lead unless in discontiguous mode                        
                    </comment>
                    <comment line="4445">
                        up.                        
                    </comment>
                    <comment line="4455">
                        down                        
                    </comment>
                    <scope line="4430"/>
                    <declaration name="rowCount" type="int" line="4434"/>
                    <scope line="4437">
                        <declaration name="maxSize" type="Dimension" line="4438"/>
                        <declaration name="lead" type="TreePath" line="4439"/>
                        <declaration name="newPath" type="TreePath" line="4440"/>
                        <declaration name="visRect" type="Rectangle" line="4441"/>
                        <scope line="4443">
                            <scope line="4447"/>
                        </scope>
                        <scope line="4453">
                            <scope line="4459"/>
                        </scope>
                        <declaration name="newRect" type="Rectangle" line="4466"/>
                        <scope line="4470"/>
                        <scope line="4473"/>
                        <scope line="4478"/>
                        <scope line="4481"/>
                        <scope line="4484"/>
                    </scope>
                </method>
                <method name="home" type="void" line="4492">
                    <params>
                        <param name="tree" type="JTree"/>
                        <param name="ui" type="BasicTreeUI"/>
                        <param name="direction" type="int"/>
                        <param name="addToSelection" type="boolean"/>
                        <param name="changeSelection" type="boolean"/>
                    </params>
                    <comment line="4495">
                        disable moving of lead unless in discontiguous mode                        
                    </comment>
                    <scope line="4497"/>
                    <declaration name="rowCount" type="int" line="4501"/>
                    <scope line="4503">
                        <scope line="4504">
                            <scope line="4506">
                                <declaration name="aPath" type="TreePath" line="4507"/>
                                <declaration name="aRow" type="int" line="4508"/>
                                <scope line="4511"/>
                                <scope line="4514"/>
                            </scope>
                            <scope line="4520"/>
                            <scope line="4523"/>
                        </scope>
                        <scope line="4528">
                            <scope line="4530">
                                <declaration name="aPath" type="TreePath" line="4531"/>
                                <declaration name="aRow" type="int" line="4532"/>
                                <scope line="4535"/>
                                <scope line="4539"/>
                            </scope>
                            <scope line="4546"/>
                            <scope line="4549"/>
                        </scope>
                    </scope>
                </method>
            </class>
        </class>
    </source>