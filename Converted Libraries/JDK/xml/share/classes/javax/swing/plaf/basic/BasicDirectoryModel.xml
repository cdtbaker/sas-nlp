<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.basic">
        <import package="java.io.File"/>
        <import package="java.util"/>
        <import package="java.util.concurrent.Callable"/>
        <import package="javax.swing"/>
        <import package="javax.swing.filechooser"/>
        <import package="javax.swing.event"/>
        <import package="java.beans"/>
        <import package="sun.awt.shell.ShellFolder"/>
        <class name="BasicDirectoryModel" line="38">
            <extends class="AbstractListModel">
                <type_params>
                    <type_param name="Object"/>
                </type_params>
            </extends>
            <comment line="47">
                PENDING(jeff) pick the size more sensibly                
            </comment>
            <comment line="204">
                Obsolete - not used                
            </comment>
            <implements interface="PropertyChangeListener"/>
            <javadoc line="38">
                Basic implementation of a file list.                
                <author>
                    Jeff Dinkins                    
                </author>
            </javadoc>
            <declaration name="filechooser" type="JFileChooser" line="45"/>
            <declaration name="fileCache" type="Vector&lt;File&gt;" line="47"/>
            <declaration name="loadThread" type="LoadFilesThread" line="48"/>
            <declaration name="files" type="Vector&lt;File&gt;" line="49"/>
            <declaration name="directories" type="Vector&lt;File&gt;" line="50"/>
            <declaration name="fetchID" type="int" line="51"/>
            <declaration name="changeSupport" type="PropertyChangeSupport" line="53"/>
            <declaration name="busy" type="boolean" line="55"/>
            <method name="BasicDirectoryModel" type="constructor" line="57">
                <params>
                    <param name="filechooser" type="JFileChooser"/>
                </params>
            </method>
            <method name="propertyChange" type="void" line="62">
                <params>
                    <param name="e" type="PropertyChangeEvent"/>
                </params>
                <declaration name="prop" type="String" line="63"/>
                <scope line="68"/>
                <scope line="70">
                    <declaration name="old" type="Object" line="71"/>
                    <scope line="72">
                        <declaration name="ui" type="BasicFileChooserUI" line="73"/>
                        <declaration name="model" type="BasicDirectoryModel" line="74"/>
                        <scope line="75"/>
                    </scope>
                </scope>
                <scope line="79"/>
            </method>
            <javadoc line="84">
                This method is used to interrupt file loading thread.                
            </javadoc>
            <method name="invalidateFileCache" type="void" line="87">
                <scope line="88"/>
            </method>
            <method name="getDirectories" type="Vector<File>" line="95">
                <scope line="96">
                    <scope line="97"/>
                    <declaration name="fls" type="Vector" line="100"/>
                </scope>
            </method>
            <method name="getFiles" type="Vector<File>" line="105">
                <scope line="106">
                    <scope line="107"/>
                    <scope line="116">
                        <declaration name="f" type="File" line="117"/>
                        <scope line="118"/>
                        <scope line="120"/>
                    </scope>
                </scope>
            </method>
            <method name="validateFileCache" type="void" line="128">
                <declaration name="currentDirectory" type="File" line="129"/>
                <scope line="130"/>
                <scope line="133"/>
            </method>
            <javadoc line="144">
                Renames a file in the underlying file system.                
                <param>
                    oldFile a &lt;code&gt;File&lt;/code&gt; object representing
                      the existing file                    
                </param>
                <param>
                    newFile a &lt;code&gt;File&lt;/code&gt; object representing
                      the desired new file name                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if rename succeeded,
                      otherwise &lt;code&gt;false&lt;/code&gt;                    
                </return>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="renameFile" type="boolean" line="155">
                <params>
                    <param name="oldFile" type="File"/>
                    <param name="newFile" type="File"/>
                </params>
                <scope line="156">
                    <scope line="157"/>
                </scope>
            </method>
            <method name="fireContentsChanged" type="void" line="166">
                <comment line="168">
                    System.out.println(&quot;BasicDirectoryModel: firecontentschanged&quot;);                    
                </comment>
            </method>
            <method name="getSize" type="int" line="171"/>
            <method name="contains" type="boolean" line="175">
                <params>
                    <param name="o" type="Object"/>
                </params>
            </method>
            <method name="indexOf" type="int" line="179">
                <params>
                    <param name="o" type="Object"/>
                </params>
            </method>
            <method name="getElementAt" type="Object" line="183">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <javadoc line="187">
                Obsolete - not used.                
            </javadoc>
            <method name="intervalAdded" type="void" line="190">
                <params>
                    <param name="e" type="ListDataEvent"/>
                </params>
            </method>
            <javadoc line="193">
                Obsolete - not used.                
            </javadoc>
            <method name="intervalRemoved" type="void" line="196">
                <params>
                    <param name="e" type="ListDataEvent"/>
                </params>
            </method>
            <method name="sort" type="void" line="199">
                <params>
                    <param name="v" type="Vector<? extends File>"/>
                </params>
            </method>
            <method name="lt" type="boolean" line="204">
                <params>
                    <param name="a" type="File"/>
                    <param name="b" type="File"/>
                </params>
                <comment line="206">
                    First ignore case when comparing                    
                </comment>
                <comment line="211">
                    May differ in case (e.g. &quot;mail&quot; vs. &quot;Mail&quot;)                    
                </comment>
                <declaration name="diff" type="int" line="206"/>
                <scope line="207"/>
                <scope line="209"/>
            </method>
            <class name="LoadFilesThread" line="216">
                <extends class="Thread"/>
                <declaration name="currentDirectory" type="File" line="217"/>
                <declaration name="fid" type="int" line="218"/>
                <declaration name="runnables" type="Vector&lt;DoChangeContents&gt;" line="219"/>
                <method name="LoadFilesThread" type="constructor" line="221">
                    <params>
                        <param name="currentDirectory" type="File"/>
                        <param name="fid" type="int"/>
                    </params>
                </method>
                <method name="run" type="void" line="227"/>
                <method name="run0" type="void" line="232">
                    <comment line="249">
                        run through the file list, add directories and selectable files to fileCache
                         Note that this block must be OUTSIDE of Invoker thread because of
                         deadlock possibility with custom synchronized FileSystemView                        
                    </comment>
                    <comment line="268">
                        First sort alphabetically by filename                        
                    </comment>
                    <comment line="274">
                        To avoid loads of synchronizations with Invoker and improve performance we
                         execute the whole block on the COM thread                        
                    </comment>
                    <comment line="282">
                        see if interval is added                        
                    </comment>
                    <comment line="305">
                        see if interval is removed                        
                    </comment>
                    <declaration name="fileSystem" type="FileSystemView" line="233"/>
                    <scope line="235"/>
                    <declaration name="list" type="File[]" line="239"/>
                    <scope line="241"/>
                    <declaration name="newFileCache" type="Vector&lt;File&gt;" line="245"/>
                    <declaration name="newFiles" type="Vector&lt;File&gt;" line="246"/>
                    <scope line="251">
                        <scope line="252">
                            <declaration name="isTraversable" type="boolean" line="253"/>
                            <scope line="255"/>
                            <scope line="257"/>
                            <scope line="261"/>
                        </scope>
                    </scope>
                    <anonymous_class line="275">
                        <method name="call" type="DoChangeContents" line="276">
                            <comment line="282">
                                see if interval is added                                
                            </comment>
                            <comment line="305">
                                see if interval is removed                                
                            </comment>
                            <declaration name="newSize" type="int" line="277"/>
                            <declaration name="oldSize" type="int" line="278"/>
                            <scope line="280">
                                <declaration name="start" type="int" line="282"/>
                                <declaration name="end" type="int" line="283"/>
                                <scope line="284">
                                    <scope line="285">
                                        <scope line="287">
                                            <scope line="288"/>
                                        </scope>
                                    </scope>
                                </scope>
                                <scope line="297">
                                    <scope line="298"/>
                                </scope>
                            </scope>
                            <scope line="303">
                                <declaration name="start" type="int" line="305"/>
                                <declaration name="end" type="int" line="306"/>
                                <scope line="307">
                                    <scope line="308"/>
                                </scope>
                                <scope line="315">
                                    <scope line="316"/>
                                </scope>
                            </scope>
                            <scope line="322">
                                <scope line="323"/>
                            </scope>
                        </method>
                    </anonymous_class>
                    <declaration name="doChangeContents" type="DoChangeContents" line="275"/>
                    <scope line="332"/>
                </method>
                <method name="cancelRunnables" type="void" line="339">
                    <params>
                        <param name="runnables" type="Vector<DoChangeContents>"/>
                    </params>
                    <scope line="340"/>
                </method>
                <method name="cancelRunnables" type="void" line="345"/>
            </class>
            <javadoc line="351">
                Adds a PropertyChangeListener to the listener list. The listener is
                  registered for all bound properties of this class.
                  &lt;p&gt;
                  If &lt;code&gt;listener&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;,
                  no exception is thrown and no action is performed.                
                <param>
                    listener  the property change listener to be added                    
                </param>
                <see>
                    #removePropertyChangeListener                    
                </see>
                <see>
                    #getPropertyChangeListeners                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="addPropertyChangeListener" type="void" line="365">
                <params>
                    <param name="listener" type="PropertyChangeListener"/>
                </params>
                <scope line="366"/>
            </method>
            <javadoc line="372">
                Removes a PropertyChangeListener from the listener list.
                  &lt;p&gt;
                  If listener is null, no exception is thrown and no action is performed.                
                <param>
                    listener the PropertyChangeListener to be removed                    
                </param>
                <see>
                    #addPropertyChangeListener                    
                </see>
                <see>
                    #getPropertyChangeListeners                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="removePropertyChangeListener" type="void" line="384">
                <params>
                    <param name="listener" type="PropertyChangeListener"/>
                </params>
                <scope line="385"/>
            </method>
            <javadoc line="390">
                Returns an array of all the property change listeners
                  registered on this component.                
                <return>
                    all of this component&apos;s &lt;code&gt;PropertyChangeListener&lt;/code&gt;s
                      or an empty array if no property change
                      listeners are currently registered                    
                </return>
                <see>
                    #addPropertyChangeListener                    
                </see>
                <see>
                    #removePropertyChangeListener                    
                </see>
                <see>
                    java.beans.PropertyChangeSupport#getPropertyChangeListeners                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="getPropertyChangeListeners" type="PropertyChangeListener[]" line="404">
                <scope line="405"/>
            </method>
            <javadoc line="411">
                Support for reporting bound property changes for boolean properties.
                  This method can be called when a bound property has changed and it will
                  send the appropriate PropertyChangeEvent to any registered
                  PropertyChangeListeners.                
                <param>
                    propertyName the property whose value has changed                    
                </param>
                <param>
                    oldValue the property&apos;s previous value                    
                </param>
                <param>
                    newValue the property&apos;s new value                    
                </param>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="firePropertyChange" type="void" line="424">
                <params>
                    <param name="propertyName" type="String"/>
                    <param name="oldValue" type="Object"/>
                    <param name="newValue" type="Object"/>
                </params>
                <scope line="425"/>
            </method>
            <javadoc line="432">
                Set the busy state for the model. The model is considered
                  busy when it is running a separate (interruptable)
                  thread in order to load the contents of a directory.                
            </javadoc>
            <method name="setBusy" type="void" line="437">
                <params>
                    <param name="busy" type="boolean"/>
                    <param name="fid" type="int"/>
                </params>
                <scope line="438">
                    <declaration name="oldValue" type="boolean" line="439"/>
                    <scope line="442">
                        <anonymous_class line="443">
                            <method name="run" type="void" line="444"/>
                        </anonymous_class>
                    </scope>
                </scope>
            </method>
            <class name="DoChangeContents" line="453">
                <implements interface="Runnable"/>
                <declaration name="addFiles" type="List&lt;File&gt;" line="454"/>
                <declaration name="remFiles" type="List&lt;File&gt;" line="455"/>
                <declaration name="doFire" type="boolean" line="456"/>
                <declaration name="fid" type="int" line="457"/>
                <declaration name="addStart" type="int" line="458"/>
                <declaration name="remStart" type="int" line="459"/>
                <method name="DoChangeContents" type="constructor" line="461">
                    <params>
                        <param name="addFiles" type="List<File>"/>
                        <param name="addStart" type="int"/>
                        <param name="remFiles" type="List<File>"/>
                        <param name="remStart" type="int"/>
                        <param name="fid" type="int"/>
                    </params>
                </method>
                <method name="cancel" type="void" line="469"/>
                <method name="run" type="void" line="473">
                    <scope line="474">
                        <declaration name="remSize" type="int" line="475"/>
                        <declaration name="addSize" type="int" line="476"/>
                        <scope line="477">
                            <scope line="478"/>
                            <scope line="481"/>
                        </scope>
                        <scope line="487"/>
                        <scope line="489"/>
                        <scope line="491"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>