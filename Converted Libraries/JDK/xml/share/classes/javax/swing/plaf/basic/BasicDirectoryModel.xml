<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.basic">
        <import package="java.io.File"/>
        <import package="java.util"/>
        <import package="java.util.concurrent.Callable"/>
        <import package="javax.swing"/>
        <import package="javax.swing.filechooser"/>
        <import package="javax.swing.event"/>
        <import package="java.beans"/>
        <import package="sun.awt.shell.ShellFolder"/>
        <class name="BasicDirectoryModel" line="10">
            <extends class="AbstractListModel">
                <type_params>
                    <type_param name="Object"/>
                </type_params>
            </extends>
            <implements interface="PropertyChangeListener"/>
            <javadoc line="10">
                Basic implementation of a file list.                
                <author>
                    Jeff Dinkins                    
                </author>
            </javadoc>
            <declaration name="filechooser" type="JFileChooser" line="15"/>
            <declaration name="fileCache" type="Vector&amp;lt;File&amp;gt;" line="16"/>
            <declaration name="loadThread" type="LoadFilesThread" line="17"/>
            <declaration name="files" type="Vector&amp;lt;File&amp;gt;" line="18"/>
            <declaration name="directories" type="Vector&amp;lt;File&amp;gt;" line="19"/>
            <declaration name="fetchID" type="int" line="20"/>
            <declaration name="changeSupport" type="PropertyChangeSupport" line="21"/>
            <declaration name="busy" type="boolean" line="22"/>
            <method name="BasicDirectoryModel" type="constructor" line="23">
                <params>
                    <param name="filechooser" type="JFileChooser"/>
                </params>
            </method>
            <method name="propertyChange" type="void" line="27">
                <params>
                    <param name="e" type="PropertyChangeEvent"/>
                </params>
                <declaration name="prop" type="String" line="28"/>
                <scope line="29"/>
                <scope line="32">
                    <declaration name="old" type="Object" line="33"/>
                    <scope line="34">
                        <declaration name="ui" type="BasicFileChooserUI" line="35"/>
                        <declaration name="model" type="BasicDirectoryModel" line="36"/>
                        <scope line="37"/>
                    </scope>
                </scope>
                <scope line="42"/>
            </method>
            <javadoc line="46">
                This method is used to interrupt file loading thread.                
            </javadoc>
            <method name="invalidateFileCache" type="void" line="49">
                <scope line="50"/>
            </method>
            <method name="getDirectories" type="Vector&lt;File&gt;" line="56">
                <scope line="57">
                    <scope line="58"/>
                    <declaration name="fls" type="Vector" line="61"/>
                </scope>
            </method>
            <method name="getFiles" type="Vector&lt;File&gt;" line="65">
                <scope line="66">
                    <scope line="67"/>
                    <scope line="73">
                        <declaration name="f" type="File" line="74"/>
                        <scope line="75"/>
                        <scope line="78"/>
                    </scope>
                </scope>
            </method>
            <method name="validateFileCache" type="void" line="85">
                <declaration name="currentDirectory" type="File" line="86"/>
                <scope line="87"/>
                <scope line="90"/>
            </method>
            <javadoc line="98">
                Renames a file in the underlying file system.                
                <param>
                    oldFile a &lt;code&gt;File&lt;/code&gt; object representing
                      the existing file                    
                </param>
                <param>
                    newFile a &lt;code&gt;File&lt;/code&gt; object representing
                      the desired new file name                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if rename succeeded,
                      otherwise &lt;code&gt;false&lt;/code&gt;                    
                </return>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="renameFile" type="boolean" line="108">
                <params>
                    <param name="oldFile" type="File"/>
                    <param name="newFile" type="File"/>
                </params>
                <scope line="109">
                    <scope line="110"/>
                </scope>
            </method>
            <method name="fireContentsChanged" type="void" line="117"/>
            <method name="getSize" type="int" line="120"/>
            <method name="contains" type="boolean" line="123">
                <params>
                    <param name="o" type="Object"/>
                </params>
            </method>
            <method name="indexOf" type="int" line="126">
                <params>
                    <param name="o" type="Object"/>
                </params>
            </method>
            <method name="getElementAt" type="Object" line="129">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <javadoc line="132">
                Obsolete - not used.                
            </javadoc>
            <method name="intervalAdded" type="void" line="135">
                <params>
                    <param name="e" type="ListDataEvent"/>
                </params>
            </method>
            <javadoc line="137">
                Obsolete - not used.                
            </javadoc>
            <method name="intervalRemoved" type="void" line="140">
                <params>
                    <param name="e" type="ListDataEvent"/>
                </params>
            </method>
            <method name="sort" type="void" line="142">
                <params>
                    <param name="v" type="Vector&lt;? extends File&gt;"/>
                </params>
            </method>
            <method name="lt" type="boolean" line="145">
                <params>
                    <param name="a" type="File"/>
                    <param name="b" type="File"/>
                </params>
                <declaration name="diff" type="int" line="146"/>
                <scope line="147"/>
                <scope line="150"/>
            </method>
            <class name="LoadFilesThread" line="154">
                <extends class="Thread"/>
                <declaration name="currentDirectory" type="File" line="155"/>
                <declaration name="fid" type="int" line="156"/>
                <declaration name="runnables" type="Vector&amp;lt;DoChangeContents&amp;gt;" line="157"/>
                <method name="LoadFilesThread" type="constructor" line="158">
                    <params>
                        <param name="currentDirectory" type="File"/>
                        <param name="fid" type="int"/>
                    </params>
                </method>
                <method name="run" type="void" line="163"/>
                <method name="run0" type="void" line="167">
                    <declaration name="fileSystem" type="FileSystemView" line="168"/>
                    <scope line="169"/>
                    <declaration name="list" type="File[]" line="172"/>
                    <scope line="173"/>
                    <declaration name="newFileCache" type="Vector&amp;lt;File&amp;gt;" line="176"/>
                    <declaration name="newFiles" type="Vector&amp;lt;File&amp;gt;" line="177"/>
                    <scope line="178">
                        <scope line="179">
                            <declaration name="isTraversable" type="boolean" line="180"/>
                            <scope line="181"/>
                            <scope line="184"/>
                            <scope line="187"/>
                        </scope>
                    </scope>
                    <anonymous_class line="195">
                        <method name="call" type="DoChangeContents" line="196">
                            <declaration name="newSize" type="int" line="197"/>
                            <declaration name="oldSize" type="int" line="198"/>
                            <scope line="199">
                                <declaration name="start" type="int" line="200"/>
                                <declaration name="end" type="int" line="201"/>
                                <scope line="202">
                                    <scope line="203">
                                        <scope line="205">
                                            <scope line="206"/>
                                        </scope>
                                    </scope>
                                </scope>
                                <scope line="214">
                                    <scope line="215"/>
                                </scope>
                            </scope>
                            <scope line="221">
                                <declaration name="start" type="int" line="222"/>
                                <declaration name="end" type="int" line="223"/>
                                <scope line="224">
                                    <scope line="225"/>
                                </scope>
                                <scope line="231">
                                    <scope line="232"/>
                                </scope>
                            </scope>
                            <scope line="238">
                                <scope line="239"/>
                            </scope>
                        </method>
                    </anonymous_class>
                    <declaration name="doChangeContents" type="DoChangeContents" line="195"/>
                    <scope line="248"/>
                </method>
                <method name="cancelRunnables" type="void" line="253">
                    <params>
                        <param name="runnables" type="Vector&lt;DoChangeContents&gt;"/>
                    </params>
                    <scope line="254"/>
                </method>
                <method name="cancelRunnables" type="void" line="258"/>
            </class>
            <javadoc line="262">
                Adds a PropertyChangeListener to the listener list. The listener is
                  registered for all bound properties of this class.
                  &lt;p&gt;
                  If &lt;code&gt;listener&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;,
                  no exception is thrown and no action is performed.                
                <param>
                    listener  the property change listener to be added                    
                </param>
                <see>
                    #removePropertyChangeListener                    
                </see>
                <see>
                    #getPropertyChangeListeners                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="addPropertyChangeListener" type="void" line="273">
                <params>
                    <param name="listener" type="PropertyChangeListener"/>
                </params>
                <scope line="274"/>
            </method>
            <javadoc line="279">
                Removes a PropertyChangeListener from the listener list.
                  &lt;p&gt;
                  If listener is null, no exception is thrown and no action is performed.                
                <param>
                    listener the PropertyChangeListener to be removed                    
                </param>
                <see>
                    #addPropertyChangeListener                    
                </see>
                <see>
                    #getPropertyChangeListeners                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="removePropertyChangeListener" type="void" line="288">
                <params>
                    <param name="listener" type="PropertyChangeListener"/>
                </params>
                <scope line="289"/>
            </method>
            <javadoc line="293">
                Returns an array of all the property change listeners
                  registered on this component.                
                <return>
                    all of this component&apos;s &lt;code&gt;PropertyChangeListener&lt;/code&gt;s
                      or an empty array if no property change
                      listeners are currently registered                    
                </return>
                <see>
                    #addPropertyChangeListener                    
                </see>
                <see>
                    #removePropertyChangeListener                    
                </see>
                <see>
                    java.beans.PropertyChangeSupport#getPropertyChangeListeners                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="getPropertyChangeListeners" type="PropertyChangeListener[]" line="304">
                <scope line="305"/>
            </method>
            <javadoc line="310">
                Support for reporting bound property changes for boolean properties.
                  This method can be called when a bound property has changed and it will
                  send the appropriate PropertyChangeEvent to any registered
                  PropertyChangeListeners.                
                <param>
                    propertyName the property whose value has changed                    
                </param>
                <param>
                    oldValue the property&apos;s previous value                    
                </param>
                <param>
                    newValue the property&apos;s new value                    
                </param>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="firePropertyChange" type="void" line="320">
                <params>
                    <param name="propertyName" type="String"/>
                    <param name="oldValue" type="Object"/>
                    <param name="newValue" type="Object"/>
                </params>
                <scope line="321"/>
            </method>
            <javadoc line="325">
                Set the busy state for the model. The model is considered
                  busy when it is running a separate (interruptable)
                  thread in order to load the contents of a directory.                
            </javadoc>
            <method name="setBusy" type="void" line="330">
                <params>
                    <param name="busy" type="boolean"/>
                    <param name="fid" type="int"/>
                </params>
                <scope line="331">
                    <declaration name="oldValue" type="boolean" line="332"/>
                    <scope line="334">
                        <anonymous_class line="335">
                            <method name="run" type="void" line="336"/>
                        </anonymous_class>
                    </scope>
                </scope>
            </method>
            <class name="DoChangeContents" line="344">
                <implements interface="Runnable"/>
                <declaration name="addFiles" type="List&amp;lt;File&amp;gt;" line="345"/>
                <declaration name="remFiles" type="List&amp;lt;File&amp;gt;" line="346"/>
                <declaration name="doFire" type="boolean" line="347"/>
                <declaration name="fid" type="int" line="348"/>
                <declaration name="addStart" type="int" line="349"/>
                <declaration name="remStart" type="int" line="350"/>
                <method name="DoChangeContents" type="constructor" line="351">
                    <params>
                        <param name="addFiles" type="List&lt;File&gt;"/>
                        <param name="addStart" type="int"/>
                        <param name="remFiles" type="List&lt;File&gt;"/>
                        <param name="remStart" type="int"/>
                        <param name="fid" type="int"/>
                    </params>
                </method>
                <method name="cancel" type="void" line="358"/>
                <method name="run" type="void" line="361">
                    <scope line="362">
                        <declaration name="remSize" type="int" line="363"/>
                        <declaration name="addSize" type="int" line="364"/>
                        <scope line="365">
                            <scope line="366"/>
                            <scope line="369"/>
                        </scope>
                        <scope line="375"/>
                        <scope line="378"/>
                        <scope line="381"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>