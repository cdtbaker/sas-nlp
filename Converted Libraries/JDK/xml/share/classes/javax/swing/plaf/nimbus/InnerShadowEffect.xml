<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.nimbus">
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.awt.image.Raster"/>
        <import package="java.awt.image.WritableRaster"/>
        <import package="java.util.Arrays"/>
        <class name="InnerShadowEffect" line="6">
            <extends class="ShadowEffect"/>
            <javadoc line="6">
                InnerShadowEffect - This effect currently only works with ARGB type buffered
                  images.                
                <author>
                    Created by Jasper Potts (Jun 18, 2007)                    
                </author>
            </javadoc>
            <javadoc line="12">
                Get the type of this effect, one of UNDER,BLENDED,OVER. UNDER means the result of apply effect should be painted
                  under the src image. BLENDED means the result of apply sffect contains a modified src image so just it should be
                  painted. OVER means the result of apply effect should be painted over the src image.                
                <return>
                    The effect type                    
                </return>
            </javadoc>
            <method name="getEffectType" type="Effect.EffectType" line="18"/>
            <javadoc line="21">
                Apply the effect to the src image generating the result . The result image may or may not contain the source
                  image depending on what the effect type is.                
                <param>
                    src The source image for applying the effect to                    
                </param>
                <param>
                    dst The dstination image to paint effect result into. If this is null then a new image will be created                    
                </param>
                <param>
                    w   The width of the src image to apply effect to, this allow the src and dst buffers to be bigger than
                      the area the need effect applied to it                    
                </param>
                <param>
                    h   The height of the src image to apply effect to, this allow the src and dst buffers to be bigger than
                      the area the need effect applied to it                    
                </param>
                <return>
                    Image with the result of the effect                    
                </return>
            </javadoc>
            <method name="applyEffect" type="BufferedImage" line="32">
                <params>
                    <param name="src" type="BufferedImage"/>
                    <param name="dst" type="BufferedImage"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <scope line="33"/>
                <scope line="36"/>
                <declaration name="trangleAngle" type="double" line="39"/>
                <declaration name="offsetX" type="int" line="40"/>
                <declaration name="offsetY" type="int" line="41"/>
                <declaration name="tmpOffX" type="int" line="42"/>
                <declaration name="tmpOffY" type="int" line="43"/>
                <declaration name="tmpW" type="int" line="44"/>
                <declaration name="tmpH" type="int" line="45"/>
                <declaration name="lineBuf" type="int[]" line="46"/>
                <declaration name="srcAlphaBuf" type="byte[]" line="47"/>
                <declaration name="tmpBuf1" type="byte[]" line="49"/>
                <declaration name="tmpBuf2" type="byte[]" line="50"/>
                <declaration name="srcRaster" type="Raster" line="51"/>
                <scope line="52">
                    <declaration name="dy" type="int" line="53"/>
                    <declaration name="offset" type="int" line="54"/>
                    <scope line="56">
                        <declaration name="dx" type="int" line="57"/>
                    </scope>
                </scope>
                <declaration name="kernel" type="float[]" line="61"/>
                <declaration name="spread" type="float" line="64"/>
                <scope line="65">
                    <declaration name="val" type="int" line="66"/>
                </scope>
                <declaration name="shadowRaster" type="WritableRaster" line="70"/>
                <declaration name="red" type="int" line="71"/>
                <scope line="72">
                    <declaration name="srcY" type="int" line="73"/>
                    <declaration name="offset" type="int" line="74"/>
                    <declaration name="shadowOffset" type="int" line="75"/>
                    <scope line="76">
                        <declaration name="srcX" type="int" line="77"/>
                        <declaration name="origianlAlphaVal" type="int" line="78"/>
                        <declaration name="shadowVal" type="int" line="79"/>
                        <declaration name="alphaVal" type="int" line="80"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>