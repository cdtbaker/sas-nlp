<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf">
        <import package="java.awt.Component"/>
        <import package="java.awt.Insets"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Font"/>
        <import package="java.awt.Graphics"/>
        <import package="java.io.Serializable"/>
        <import package="java.beans.ConstructorProperties"/>
        <import package="javax.swing.border"/>
        <import package="javax.swing.Icon"/>
        <import package="javax.swing.plaf.UIResource"/>
        <class name="BorderUIResource" line="62">
            <implements interface="Border"/>
            <implements interface="UIResource"/>
            <implements interface="Serializable"/>
            <declaration name="etched" type="Border" line="64"/>
            <declaration name="loweredBevel" type="Border" line="65"/>
            <declaration name="raisedBevel" type="Border" line="66"/>
            <declaration name="blackLine" type="Border" line="67"/>
            <method name="getEtchedBorderUIResource" type="Border" line="69">
                <scope line="70"/>
            </method>
            <method name="getLoweredBevelBorderUIResource" type="Border" line="76">
                <scope line="77"/>
            </method>
            <method name="getRaisedBevelBorderUIResource" type="Border" line="83">
                <scope line="84"/>
            </method>
            <method name="getBlackLineBorderUIResource" type="Border" line="90">
                <scope line="91"/>
            </method>
            <declaration name="delegate" type="Border" line="97"/>
            <javadoc line="99">
                Creates a UIResource border object which wraps
                  an existing Border instance.                
                <param>
                    delegate the border being wrapped                    
                </param>
            </javadoc>
            <method name="BorderUIResource" type="constructor" line="104">
                <params>
                    <param name="delegate" type="Border"/>
                </params>
                <scope line="105"/>
            </method>
            <method name="paintBorder" type="void" line="112">
                <params>
                    <param name="c" type="Component"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
            </method>
            <method name="getBorderInsets" type="Insets" line="116">
                <params>
                    <param name="c" type="Component"/>
                </params>
            </method>
            <method name="isBorderOpaque" type="boolean" line="120"/>
            <class name="CompoundBorderUIResource" line="124">
                <extends class="CompoundBorder"/>
                <implements interface="UIResource"/>
                <method name="CompoundBorderUIResource" type="constructor" line="126">
                    <params>
                        <param name="outsideBorder" type="Border"/>
                        <param name="insideBorder" type="Border"/>
                    </params>
                </method>
            </class>
            <class name="EmptyBorderUIResource" line="132">
                <extends class="EmptyBorder"/>
                <implements interface="UIResource"/>
                <method name="EmptyBorderUIResource" type="constructor" line="134">
                    <params>
                        <param name="top" type="int"/>
                        <param name="left" type="int"/>
                        <param name="bottom" type="int"/>
                        <param name="right" type="int"/>
                    </params>
                </method>
                <method name="EmptyBorderUIResource" type="constructor" line="138">
                    <params>
                        <param name="insets" type="Insets"/>
                    </params>
                </method>
            </class>
            <class name="LineBorderUIResource" line="143">
                <extends class="LineBorder"/>
                <implements interface="UIResource"/>
                <method name="LineBorderUIResource" type="constructor" line="145">
                    <params>
                        <param name="color" type="Color"/>
                    </params>
                </method>
                <method name="LineBorderUIResource" type="constructor" line="150">
                    <params>
                        <param name="color" type="Color"/>
                        <param name="thickness" type="int"/>
                    </params>
                </method>
            </class>
            <class name="BevelBorderUIResource" line="156">
                <extends class="BevelBorder"/>
                <implements interface="UIResource"/>
                <method name="BevelBorderUIResource" type="constructor" line="158">
                    <params>
                        <param name="bevelType" type="int"/>
                    </params>
                </method>
                <method name="BevelBorderUIResource" type="constructor" line="162">
                    <params>
                        <param name="bevelType" type="int"/>
                        <param name="highlight" type="Color"/>
                        <param name="shadow" type="Color"/>
                    </params>
                </method>
                <method name="BevelBorderUIResource" type="constructor" line="169">
                    <params>
                        <param name="bevelType" type="int"/>
                        <param name="highlightOuter" type="Color"/>
                        <param name="highlightInner" type="Color"/>
                        <param name="shadowOuter" type="Color"/>
                        <param name="shadowInner" type="Color"/>
                    </params>
                </method>
            </class>
            <class name="EtchedBorderUIResource" line="174">
                <extends class="EtchedBorder"/>
                <implements interface="UIResource"/>
                <method name="EtchedBorderUIResource" type="constructor" line="176"/>
                <method name="EtchedBorderUIResource" type="constructor" line="180">
                    <params>
                        <param name="etchType" type="int"/>
                    </params>
                </method>
                <method name="EtchedBorderUIResource" type="constructor" line="184">
                    <params>
                        <param name="highlight" type="Color"/>
                        <param name="shadow" type="Color"/>
                    </params>
                </method>
                <method name="EtchedBorderUIResource" type="constructor" line="189">
                    <params>
                        <param name="etchType" type="int"/>
                        <param name="highlight" type="Color"/>
                        <param name="shadow" type="Color"/>
                    </params>
                </method>
            </class>
            <class name="MatteBorderUIResource" line="194">
                <extends class="MatteBorder"/>
                <implements interface="UIResource"/>
                <method name="MatteBorderUIResource" type="constructor" line="197">
                    <params>
                        <param name="top" type="int"/>
                        <param name="left" type="int"/>
                        <param name="bottom" type="int"/>
                        <param name="right" type="int"/>
                        <param name="color" type="Color"/>
                    </params>
                </method>
                <method name="MatteBorderUIResource" type="constructor" line="202">
                    <params>
                        <param name="top" type="int"/>
                        <param name="left" type="int"/>
                        <param name="bottom" type="int"/>
                        <param name="right" type="int"/>
                        <param name="tileIcon" type="Icon"/>
                    </params>
                </method>
                <method name="MatteBorderUIResource" type="constructor" line="206">
                    <params>
                        <param name="tileIcon" type="Icon"/>
                    </params>
                </method>
            </class>
            <class name="TitledBorderUIResource" line="211">
                <extends class="TitledBorder"/>
                <implements interface="UIResource"/>
                <method name="TitledBorderUIResource" type="constructor" line="213">
                    <params>
                        <param name="title" type="String"/>
                    </params>
                </method>
                <method name="TitledBorderUIResource" type="constructor" line="217">
                    <params>
                        <param name="border" type="Border"/>
                    </params>
                </method>
                <method name="TitledBorderUIResource" type="constructor" line="221">
                    <params>
                        <param name="border" type="Border"/>
                        <param name="title" type="String"/>
                    </params>
                </method>
                <method name="TitledBorderUIResource" type="constructor" line="228">
                    <params>
                        <param name="border" type="Border"/>
                        <param name="title" type="String"/>
                        <param name="titleJustification" type="int"/>
                        <param name="titlePosition" type="int"/>
                    </params>
                </method>
                <method name="TitledBorderUIResource" type="constructor" line="236">
                    <params>
                        <param name="border" type="Border"/>
                        <param name="title" type="String"/>
                        <param name="titleJustification" type="int"/>
                        <param name="titlePosition" type="int"/>
                        <param name="titleFont" type="Font"/>
                    </params>
                </method>
                <method name="TitledBorderUIResource" type="constructor" line="246">
                    <params>
                        <param name="border" type="Border"/>
                        <param name="title" type="String"/>
                        <param name="titleJustification" type="int"/>
                        <param name="titlePosition" type="int"/>
                        <param name="titleFont" type="Font"/>
                        <param name="titleColor" type="Color"/>
                    </params>
                </method>
            </class>
        </class>
    </source>