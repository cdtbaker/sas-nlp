<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.metal">
        <import package="sun.swing.SwingUtilities2"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="javax.swing"/>
        <import package="javax.swing.border"/>
        <import package="javax.swing.event.InternalFrameEvent"/>
        <import package="java.util.EventListener"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="javax.swing.plaf.basic.BasicInternalFrameTitlePane"/>
        <class name="MetalInternalFrameTitlePane" line="12">
            <extends class="BasicInternalFrameTitlePane"/>
            <javadoc line="12">
                Class that manages a JLF title bar                
                <author>
                    Steve Wilson                    
                </author>
                <author>
                    Brian Beck                    
                </author>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <declaration name="isPalette" type="boolean" line="19"/>
            <declaration name="paletteCloseIcon" type="Icon" line="20"/>
            <declaration name="paletteTitleHeight" type="int" line="21"/>
            <declaration name="handyEmptyBorder" type="Border" line="22"/>
            <declaration name="selectedBackgroundKey" type="String" line="23"/>
            <javadoc line="23">
                Key used to lookup Color from UIManager. If this is null,
                  &lt;code&gt;getWindowTitleBackground&lt;/code&gt; is used.                
            </javadoc>
            <declaration name="selectedForegroundKey" type="String" line="28"/>
            <javadoc line="28">
                Key used to lookup Color from UIManager. If this is null,
                  &lt;code&gt;getWindowTitleForeground&lt;/code&gt; is used.                
            </javadoc>
            <declaration name="selectedShadowKey" type="String" line="33"/>
            <javadoc line="33">
                Key used to lookup shadow color from UIManager. If this is null,
                  &lt;code&gt;getPrimaryControlDarkShadow&lt;/code&gt; is used.                
            </javadoc>
            <declaration name="wasClosable" type="boolean" line="38"/>
            <javadoc line="38">
                Boolean indicating the state of the &lt;code&gt;JInternalFrame&lt;/code&gt;s
                  closable property at &lt;code&gt;updateUI&lt;/code&gt; time.                
            </javadoc>
            <declaration name="buttonsWidth" type="int" line="43"/>
            <declaration name="activeBumps" type="MetalBumps" line="44"/>
            <declaration name="inactiveBumps" type="MetalBumps" line="45"/>
            <declaration name="paletteBumps" type="MetalBumps" line="46"/>
            <declaration name="activeBumpsHighlight" type="Color" line="47"/>
            <declaration name="activeBumpsShadow" type="Color" line="48"/>
            <method name="MetalInternalFrameTitlePane" type="constructor" line="49">
                <params>
                    <param name="f" type="JInternalFrame"/>
                </params>
            </method>
            <method name="addNotify" type="void" line="52"/>
            <method name="installDefaults" type="void" line="56">
                <scope line="63"/>
            </method>
            <method name="uninstallDefaults" type="void" line="67">
                <scope line="69"/>
            </method>
            <method name="createButtons" type="void" line="73">
                <declaration name="paintActive" type="Boolean" line="75"/>
                <scope line="83"/>
            </method>
            <javadoc line="89">
                Override the parent&apos;s method to do nothing. Metal frames do not
                  have system menus.                
            </javadoc>
            <method name="assembleSystemMenu" type="void" line="93"/>
            <javadoc line="95">
                Override the parent&apos;s method to do nothing. Metal frames do not
                  have system menus.                
            </javadoc>
            <method name="addSystemMenuItems" type="void" line="99">
                <params>
                    <param name="systemMenu" type="JMenu"/>
                </params>
            </method>
            <javadoc line="101">
                Override the parent&apos;s method to do nothing. Metal frames do not
                  have system menus.                
            </javadoc>
            <method name="showSystemMenu" type="void" line="105"/>
            <javadoc line="107">
                Override the parent&apos;s method avoid creating a menu bar. Metal frames
                  do not have system menus.                
            </javadoc>
            <method name="addSubComponents" type="void" line="111"/>
            <method name="createPropertyChangeListener" type="PropertyChangeListener" line="116"/>
            <method name="createLayout" type="LayoutManager" line="119"/>
            <class name="MetalPropertyChangeHandler" line="122">
                <extends class="BasicInternalFrameTitlePane.PropertyChangeHandler"/>
                <method name="propertyChange" type="void" line="123">
                    <params>
                        <param name="evt" type="PropertyChangeEvent"/>
                    </params>
                    <declaration name="prop" type="String" line="124"/>
                    <scope line="125">
                        <declaration name="b" type="Boolean" line="126"/>
                    </scope>
                    <scope line="131"/>
                </method>
            </class>
            <class name="MetalTitlePaneLayout" line="138">
                <extends class="TitlePaneLayout"/>
                <method name="addLayoutComponent" type="void" line="139">
                    <params>
                        <param name="name" type="String"/>
                        <param name="c" type="Component"/>
                    </params>
                </method>
                <method name="removeLayoutComponent" type="void" line="141">
                    <params>
                        <param name="c" type="Component"/>
                    </params>
                </method>
                <method name="preferredLayoutSize" type="Dimension" line="143">
                    <params>
                        <param name="c" type="Container"/>
                    </params>
                </method>
                <method name="minimumLayoutSize" type="Dimension" line="146">
                    <params>
                        <param name="c" type="Container"/>
                    </params>
                    <declaration name="width" type="int" line="147"/>
                    <scope line="148"/>
                    <scope line="151"/>
                    <scope line="154"/>
                    <declaration name="fm" type="FontMetrics" line="157"/>
                    <declaration name="frameTitle" type="String" line="158"/>
                    <declaration name="title_w" type="int" line="159"/>
                    <declaration name="title_length" type="int" line="160"/>
                    <scope line="161">
                        <declaration name="subtitle_w" type="int" line="162"/>
                    </scope>
                    <scope line="165"/>
                    <declaration name="height" type="int" line="168"/>
                    <scope line="169"/>
                    <scope line="172">
                        <declaration name="fontHeight" type="int" line="173"/>
                        <declaration name="icon" type="Icon" line="175"/>
                        <declaration name="iconHeight" type="int" line="176"/>
                        <scope line="177"/>
                    </scope>
                </method>
                <method name="layoutContainer" type="void" line="185">
                    <params>
                        <param name="c" type="Container"/>
                    </params>
                    <declaration name="leftToRight" type="boolean" line="186"/>
                    <declaration name="w" type="int" line="187"/>
                    <declaration name="x" type="int" line="188"/>
                    <declaration name="y" type="int" line="189"/>
                    <declaration name="spacing" type="int" line="190"/>
                    <declaration name="buttonHeight" type="int" line="191"/>
                    <declaration name="buttonWidth" type="int" line="192"/>
                    <scope line="193">
                        <scope line="194"/>
                        <scope line="200"/>
                    </scope>
                    <scope line="207"/>
                    <scope line="213"/>
                </method>
            </class>
            <method name="paintPalette" type="void" line="222">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="leftToRight" type="boolean" line="223"/>
                <declaration name="width" type="int" line="224"/>
                <declaration name="height" type="int" line="225"/>
                <scope line="226"/>
                <declaration name="background" type="Color" line="229"/>
                <declaration name="darkShadow" type="Color" line="230"/>
                <declaration name="xOffset" type="int" line="235"/>
                <declaration name="bumpLength" type="int" line="236"/>
                <declaration name="bumpHeight" type="int" line="237"/>
            </method>
            <method name="paintComponent" type="void" line="241">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <scope line="242"/>
                <declaration name="leftToRight" type="boolean" line="246"/>
                <declaration name="isSelected" type="boolean" line="247"/>
                <declaration name="width" type="int" line="248"/>
                <declaration name="height" type="int" line="249"/>
                <declaration name="background" type="Color" line="250"/>
                <declaration name="foreground" type="Color" line="251"/>
                <declaration name="shadow" type="Color" line="252"/>
                <declaration name="bumps" type="MetalBumps" line="253"/>
                <declaration name="gradientKey" type="String" line="254"/>
                <scope line="255">
                    <scope line="256"/>
                    <scope line="261"/>
                    <scope line="264"/>
                    <scope line="267"/>
                    <scope line="270"/>
                    <scope line="273"/>
                    <scope line="276"/>
                </scope>
                <scope line="283">
                    <scope line="284"/>
                </scope>
                <scope line="295"/>
                <declaration name="titleLength" type="int" line="303"/>
                <declaration name="xOffset" type="int" line="304"/>
                <declaration name="frameTitle" type="String" line="305"/>
                <declaration name="icon" type="Icon" line="306"/>
                <scope line="307">
                    <declaration name="iconY" type="int" line="309"/>
                </scope>
                <scope line="313">
                    <declaration name="f" type="Font" line="314"/>
                    <declaration name="fm" type="FontMetrics" line="316"/>
                    <declaration name="fHeight" type="int" line="317"/>
                    <declaration name="yOffset" type="int" line="319"/>
                    <declaration name="rect" type="Rectangle" line="320"/>
                    <scope line="321"/>
                    <scope line="324"/>
                    <scope line="327"/>
                    <declaration name="titleW" type="int" line="330"/>
                    <scope line="331">
                        <scope line="332"/>
                    </scope>
                    <scope line="338"/>
                </scope>
                <declaration name="bumpXOffset" type="int" line="347"/>
                <declaration name="bumpLength" type="int" line="348"/>
                <scope line="349"/>
                <scope line="353"/>
                <declaration name="bumpYOffset" type="int" line="357"/>
                <declaration name="bumpHeight" type="int" line="358"/>
            </method>
            <method name="setPalette" type="void" line="362">
                <params>
                    <param name="b" type="boolean"/>
                </params>
                <scope line="364"/>
                <scope line="369"/>
            </method>
            <javadoc line="377">
                Updates any state dependant upon the JInternalFrame being shown in
                  a &lt;code&gt;JOptionPane&lt;/code&gt;.                
            </javadoc>
            <method name="updateOptionPaneState" type="void" line="381">
                <declaration name="type" type="int" line="382"/>
                <declaration name="closable" type="boolean" line="383"/>
                <declaration name="obj" type="Object" line="384"/>
                <scope line="385"/>
                <scope line="388"/>
                <scope line="419"/>
            </method>
        </class>
    </source>