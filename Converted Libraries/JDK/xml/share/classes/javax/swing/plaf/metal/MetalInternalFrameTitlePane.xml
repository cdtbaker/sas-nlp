<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.metal">
        <import package="sun.swing.SwingUtilities2"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="javax.swing"/>
        <import package="javax.swing.border"/>
        <import package="javax.swing.event.InternalFrameEvent"/>
        <import package="java.util.EventListener"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="javax.swing.plaf.basic.BasicInternalFrameTitlePane"/>
        <class name="MetalInternalFrameTitlePane" line="40">
            <extends class="BasicInternalFrameTitlePane"/>
            <javadoc line="40">
                Class that manages a JLF title bar                
                <author>
                    Steve Wilson                    
                </author>
                <author>
                    Brian Beck                    
                </author>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <declaration name="isPalette" type="boolean" line="49"/>
            <declaration name="paletteCloseIcon" type="Icon" line="50"/>
            <declaration name="paletteTitleHeight" type="int" line="51"/>
            <declaration name="handyEmptyBorder" type="Border" line="53"/>
            <declaration name="selectedBackgroundKey" type="String" line="55"/>
            <javadoc line="55">
                Key used to lookup Color from UIManager. If this is null,
                  &lt;code&gt;getWindowTitleBackground&lt;/code&gt; is used.                
            </javadoc>
            <declaration name="selectedForegroundKey" type="String" line="60"/>
            <javadoc line="60">
                Key used to lookup Color from UIManager. If this is null,
                  &lt;code&gt;getWindowTitleForeground&lt;/code&gt; is used.                
            </javadoc>
            <declaration name="selectedShadowKey" type="String" line="65"/>
            <javadoc line="65">
                Key used to lookup shadow color from UIManager. If this is null,
                  &lt;code&gt;getPrimaryControlDarkShadow&lt;/code&gt; is used.                
            </javadoc>
            <declaration name="wasClosable" type="boolean" line="70"/>
            <javadoc line="70">
                Boolean indicating the state of the &lt;code&gt;JInternalFrame&lt;/code&gt;s
                  closable property at &lt;code&gt;updateUI&lt;/code&gt; time.                
            </javadoc>
            <declaration name="buttonsWidth" type="int" line="76"/>
            <declaration name="activeBumps" type="MetalBumps" line="78"/>
            <declaration name="inactiveBumps" type="MetalBumps" line="84"/>
            <declaration name="paletteBumps" type="MetalBumps" line="90"/>
            <declaration name="activeBumpsHighlight" type="Color" line="92"/>
            <declaration name="activeBumpsShadow" type="Color" line="94"/>
            <method name="MetalInternalFrameTitlePane" type="constructor" line="97">
                <params>
                    <param name="f" type="JInternalFrame"/>
                </params>
            </method>
            <method name="addNotify" type="void" line="101">
                <comment line="103">
                    This is done here instead of in installDefaults as I was worried                    
                </comment>
                <comment line="104">
                    that the BasicInternalFrameUI might not be fully initialized, and                    
                </comment>
                <comment line="105">
                    that if this resets the closable state the BasicInternalFrameUI                    
                </comment>
                <comment line="106">
                    Listeners that get notified might be in an odd/uninitialized state.                    
                </comment>
            </method>
            <method name="installDefaults" type="void" line="110">
                <scope line="118"/>
            </method>
            <method name="uninstallDefaults" type="void" line="123">
                <scope line="125"/>
            </method>
            <method name="createButtons" type="void" line="130">
                <comment line="143">
                    The palette close icon isn&apos;t opaque while the regular close icon is.                    
                </comment>
                <comment line="144">
                    This makes sure palette close buttons have the right background.                    
                </comment>
                <declaration name="paintActive" type="Boolean" line="133"/>
                <scope line="147"/>
            </method>
            <javadoc line="154">
                Override the parent&apos;s method to do nothing. Metal frames do not
                  have system menus.                
            </javadoc>
            <method name="assembleSystemMenu" type="void" line="158"/>
            <javadoc line="160">
                Override the parent&apos;s method to do nothing. Metal frames do not
                  have system menus.                
            </javadoc>
            <method name="addSystemMenuItems" type="void" line="164">
                <params>
                    <param name="systemMenu" type="JMenu"/>
                </params>
            </method>
            <javadoc line="166">
                Override the parent&apos;s method to do nothing. Metal frames do not
                  have system menus.                
            </javadoc>
            <method name="showSystemMenu" type="void" line="170"/>
            <javadoc line="172">
                Override the parent&apos;s method avoid creating a menu bar. Metal frames
                  do not have system menus.                
            </javadoc>
            <method name="addSubComponents" type="void" line="176"/>
            <method name="createPropertyChangeListener" type="PropertyChangeListener" line="182"/>
            <method name="createLayout" type="LayoutManager" line="186"/>
            <class name="MetalPropertyChangeHandler" line="190">
                <extends class="BasicInternalFrameTitlePane.PropertyChangeHandler"/>
                <method name="propertyChange" type="void" line="193">
                    <params>
                        <param name="evt" type="PropertyChangeEvent"/>
                    </params>
                    <declaration name="prop" type="String" line="194"/>
                    <scope line="195">
                        <declaration name="b" type="Boolean" line="196"/>
                    </scope>
                    <scope line="201"/>
                </method>
            </class>
            <class name="MetalTitlePaneLayout" line="209">
                <extends class="TitlePaneLayout"/>
                <method name="addLayoutComponent" type="void" line="210">
                    <params>
                        <param name="name" type="String"/>
                        <param name="c" type="Component"/>
                    </params>
                </method>
                <method name="removeLayoutComponent" type="void" line="211">
                    <params>
                        <param name="c" type="Component"/>
                    </params>
                </method>
                <method name="preferredLayoutSize" type="Dimension" line="212">
                    <params>
                        <param name="c" type="Container"/>
                    </params>
                </method>
                <method name="minimumLayoutSize" type="Dimension" line="216">
                    <params>
                        <param name="c" type="Container"/>
                    </params>
                    <comment line="217">
                        Compute width.                        
                    </comment>
                    <comment line="244">
                        Compute height.                        
                    </comment>
                    <comment line="254">
                        SystemMenuBar forces the icon to be 16x16 or less.                        
                    </comment>
                    <declaration name="width" type="int" line="218"/>
                    <scope line="219"/>
                    <scope line="222"/>
                    <scope line="225"/>
                    <declaration name="fm" type="FontMetrics" line="229"/>
                    <declaration name="frameTitle" type="String" line="230"/>
                    <declaration name="title_w" type="int" line="231"/>
                    <declaration name="title_length" type="int" line="233"/>
                    <scope line="235">
                        <declaration name="subtitle_w" type="int" line="236"/>
                    </scope>
                    <scope line="240"/>
                    <declaration name="height" type="int" line="245"/>
                    <scope line="246"/>
                    <scope line="248">
                        <declaration name="fontHeight" type="int" line="249"/>
                        <declaration name="icon" type="Icon" line="251"/>
                        <declaration name="iconHeight" type="int" line="252"/>
                        <scope line="253"/>
                    </scope>
                </method>
                <method name="layoutContainer" type="void" line="264">
                    <params>
                        <param name="c" type="Container"/>
                    </params>
                    <comment line="272">
                        assumes all buttons have the same dimensions                        
                    </comment>
                    <comment line="273">
                        these dimensions include the borders                        
                    </comment>
                    <declaration name="leftToRight" type="boolean" line="265"/>
                    <declaration name="w" type="int" line="267"/>
                    <declaration name="x" type="int" line="268"/>
                    <declaration name="y" type="int" line="269"/>
                    <declaration name="spacing" type="int" line="270"/>
                    <declaration name="buttonHeight" type="int" line="274"/>
                    <declaration name="buttonWidth" type="int" line="275"/>
                    <scope line="277">
                        <scope line="278"/>
                        <scope line="283"/>
                    </scope>
                    <scope line="291"/>
                    <scope line="298"/>
                </method>
            </class>
            <method name="paintPalette" type="void" line="310">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="leftToRight" type="boolean" line="311"/>
                <declaration name="width" type="int" line="313"/>
                <declaration name="height" type="int" line="314"/>
                <scope line="316"/>
                <declaration name="background" type="Color" line="324"/>
                <declaration name="darkShadow" type="Color" line="325"/>
                <declaration name="xOffset" type="int" line="333"/>
                <declaration name="bumpLength" type="int" line="334"/>
                <declaration name="bumpHeight" type="int" line="335"/>
            </method>
            <method name="paintComponent" type="void" line="340">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <scope line="341"/>
                <declaration name="leftToRight" type="boolean" line="346"/>
                <declaration name="isSelected" type="boolean" line="347"/>
                <declaration name="width" type="int" line="349"/>
                <declaration name="height" type="int" line="350"/>
                <declaration name="background" type="Color" line="352"/>
                <declaration name="foreground" type="Color" line="353"/>
                <declaration name="shadow" type="Color" line="354"/>
                <declaration name="bumps" type="MetalBumps" line="356"/>
                <declaration name="gradientKey" type="String" line="357"/>
                <scope line="359">
                    <scope line="360"/>
                    <scope line="365"/>
                    <scope line="368"/>
                    <scope line="371"/>
                    <scope line="374"/>
                    <scope line="377"/>
                    <scope line="380"/>
                </scope>
                <scope line="388">
                    <scope line="389"/>
                </scope>
                <scope line="402"/>
                <declaration name="titleLength" type="int" line="413"/>
                <declaration name="xOffset" type="int" line="414"/>
                <declaration name="frameTitle" type="String" line="415"/>
                <declaration name="icon" type="Icon" line="417"/>
                <scope line="418">
                    <declaration name="iconY" type="int" line="421"/>
                </scope>
                <scope line="426">
                    <declaration name="f" type="Font" line="427"/>
                    <declaration name="fm" type="FontMetrics" line="429"/>
                    <declaration name="fHeight" type="int" line="430"/>
                    <declaration name="yOffset" type="int" line="434"/>
                    <declaration name="rect" type="Rectangle" line="436"/>
                    <scope line="437"/>
                    <scope line="438"/>
                    <scope line="439"/>
                    <declaration name="titleW" type="int" line="440"/>
                    <scope line="442">
                        <scope line="443"/>
                    </scope>
                    <scope line="448"/>
                </scope>
                <declaration name="bumpXOffset" type="int" line="459"/>
                <declaration name="bumpLength" type="int" line="460"/>
                <scope line="461"/>
                <scope line="464"/>
                <declaration name="bumpYOffset" type="int" line="468"/>
                <declaration name="bumpHeight" type="int" line="469"/>
            </method>
            <method name="setPalette" type="void" line="474">
                <params>
                    <param name="b" type="boolean"/>
                </params>
                <scope line="477"/>
                <scope line="483"/>
            </method>
            <javadoc line="494">
                Updates any state dependant upon the JInternalFrame being shown in
                  a &lt;code&gt;JOptionPane&lt;/code&gt;.                
            </javadoc>
            <method name="updateOptionPaneState" type="void" line="498">
                <comment line="504">
                    Don&apos;t change the closable state unless in an JOptionPane.                    
                </comment>
                <declaration name="type" type="int" line="499"/>
                <declaration name="closable" type="boolean" line="500"/>
                <declaration name="obj" type="Object" line="501"/>
                <scope line="503"/>
                <scope line="507"/>
                <scope line="547"/>
            </method>
        </class>
    </source>