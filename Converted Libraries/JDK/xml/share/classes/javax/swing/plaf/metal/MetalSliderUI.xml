<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.metal">
        <import package="javax.swing.plaf.basic.BasicSliderUI"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.Color"/>
        <import package="java.beans"/>
        <import package="javax.swing"/>
        <import package="javax.swing.plaf"/>
        <class name="MetalSliderUI" line="39">
            <extends class="BasicSliderUI"/>
            <comment line="58">
                NOTE: these next five variables are currently unused.                
            </comment>
            <javadoc line="39">
                A Java L&amp;F implementation of SliderUI.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases. The current serialization support is
                  appropriate for short term storage or RMI between applications running
                  the same version of Swing.  As of 1.4, support for long term storage
                  of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                  has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                  Please see {@link java.beans.XMLEncoder}.                
                <author>
                    Tom Santos                    
                </author>
            </javadoc>
            <declaration name="TICK_BUFFER" type="int" line="55"/>
            <declaration name="filledSlider" type="boolean" line="56"/>
            <declaration name="thumbColor" type="Color" line="58"/>
            <declaration name="highlightColor" type="Color" line="59"/>
            <declaration name="darkShadowColor" type="Color" line="60"/>
            <declaration name="trackWidth" type="int" line="61"/>
            <declaration name="tickLength" type="int" line="62"/>
            <declaration name="safeLength" type="int" line="63"/>
            <declaration name="horizThumbIcon" type="Icon" line="65"/>
            <javadoc line="65">
                A default horizontal thumb &lt;code&gt;Icon&lt;/code&gt;. This field might not be
                  used. To change the &lt;code&gt;Icon&lt;/code&gt; used by this delgate directly set it
                  using the &lt;code&gt;Slider.horizontalThumbIcon&lt;/code&gt; UIManager property.                
            </javadoc>
            <declaration name="vertThumbIcon" type="Icon" line="72"/>
            <javadoc line="72">
                A default vertical thumb &lt;code&gt;Icon&lt;/code&gt;. This field might not be
                  used. To change the &lt;code&gt;Icon&lt;/code&gt; used by this delgate directly set it
                  using the &lt;code&gt;Slider.verticalThumbIcon&lt;/code&gt; UIManager property.                
            </javadoc>
            <declaration name="SAFE_HORIZ_THUMB_ICON" type="Icon" line="79"/>
            <declaration name="SAFE_VERT_THUMB_ICON" type="Icon" line="80"/>
            <declaration name="SLIDER_FILL" type="String" line="83"/>
            <method name="createUI" type="ComponentUI" line="85">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="MetalSliderUI" type="constructor" line="89"/>
            <method name="getHorizThumbIcon" type="Icon" line="93">
                <scope line="94"/>
                <scope line="96"/>
            </method>
            <method name="getVertThumbIcon" type="Icon" line="101">
                <scope line="102"/>
                <scope line="104"/>
            </method>
            <method name="installUI" type="void" line="109">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="createPropertyChangeListener" type="PropertyChangeListener" line="128">
                <params>
                    <param name="slider" type="JSlider"/>
                </params>
            </method>
            <class name="MetalPropertyListener" line="132">
                <extends class="BasicSliderUI.PropertyChangeHandler"/>
                <method name="propertyChange" type="void" line="133">
                    <params>
                        <param name="e" type="PropertyChangeEvent"/>
                    </params>
                    <scope line="136"/>
                </method>
            </class>
            <method name="prepareFilledSliderField" type="void" line="142">
                <comment line="144">
                    Use true for Ocean theme                    
                </comment>
                <declaration name="sliderFillProp" type="Object" line="146"/>
                <scope line="148"/>
            </method>
            <method name="paintThumb" type="void" line="153">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="knobBounds" type="Rectangle" line="154"/>
                <scope line="158"/>
                <scope line="161"/>
            </method>
            <javadoc line="168">
                Returns a rectangle enclosing the track that will be painted.                
            </javadoc>
            <method name="getPaintTrackRect" type="Rectangle" line="171">
                <declaration name="trackLeft" type="int" line="172"/>
                <scope line="173"/>
                <scope line="178">
                    <scope line="179"/>
                    <scope line="184"/>
                </scope>
            </method>
            <method name="paintTrack" type="void" line="194">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <comment line="212">
                    Draw the track                    
                </comment>
                <comment line="250">
                    Draw the fill                    
                </comment>
                <comment line="260">
                    To compensate for the g.translate()                    
                </comment>
                <comment line="275">
                    To compensate for the g.translate()                    
                </comment>
                <scope line="195"/>
                <declaration name="trackColor" type="Color" line="199"/>
                <declaration name="leftToRight" type="boolean" line="202"/>
                <declaration name="trackLeft" type="int" line="206"/>
                <declaration name="trackTop" type="int" line="207"/>
                <declaration name="trackRight" type="int" line="208"/>
                <declaration name="trackBottom" type="int" line="209"/>
                <scope line="212"/>
                <scope line="217">
                    <scope line="218"/>
                    <scope line="223"/>
                </scope>
                <scope line="230"/>
                <scope line="243"/>
                <scope line="250">
                    <declaration name="middleOfThumb" type="int" line="251"/>
                    <declaration name="fillTop" type="int" line="252"/>
                    <declaration name="fillLeft" type="int" line="253"/>
                    <declaration name="fillBottom" type="int" line="254"/>
                    <declaration name="fillRight" type="int" line="255"/>
                    <scope line="257">
                        <scope line="263"/>
                        <scope line="267"/>
                    </scope>
                    <scope line="272">
                        <scope line="278"/>
                        <scope line="282"/>
                    </scope>
                    <scope line="288"/>
                    <scope line="297"/>
                </scope>
            </method>
            <method name="oceanPaintTrack" type="void" line="306">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <comment line="313">
                    Translate to the origin of the painting rectangle                    
                </comment>
                <comment line="317">
                    Width and height of the painting rectangle.                    
                </comment>
                <declaration name="leftToRight" type="boolean" line="307"/>
                <declaration name="drawInverted" type="boolean" line="308"/>
                <declaration name="sliderAltTrackColor" type="Color" line="309"/>
                <declaration name="paintRect" type="Rectangle" line="313"/>
                <declaration name="w" type="int" line="317"/>
                <declaration name="h" type="int" line="318"/>
                <scope line="320">
                    <declaration name="middleOfThumb" type="int" line="321"/>
                    <scope line="323">
                        <declaration name="fillMinX" type="int" line="324"/>
                        <declaration name="fillMaxX" type="int" line="325"/>
                        <scope line="327"/>
                        <scope line="334"/>
                        <scope line="341">
                            <scope line="343"/>
                            <scope line="347"/>
                            <scope line="352"/>
                        </scope>
                    </scope>
                    <scope line="363">
                        <scope line="366">
                            <scope line="367"/>
                            <scope line="369"/>
                        </scope>
                        <scope line="374">
                            <scope line="375"/>
                            <scope line="377"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="382">
                    <declaration name="middleOfThumb" type="int" line="383"/>
                    <scope line="385">
                        <declaration name="fillMinY" type="int" line="386"/>
                        <declaration name="fillMaxY" type="int" line="387"/>
                        <scope line="389"/>
                        <scope line="396"/>
                        <scope line="403">
                            <scope line="405">
                                <scope line="408"/>
                                <scope line="410"/>
                            </scope>
                            <scope line="413">
                                <scope line="416"/>
                                <scope line="418"/>
                            </scope>
                            <scope line="422"/>
                        </scope>
                    </scope>
                    <scope line="433">
                        <scope line="436">
                            <scope line="437"/>
                            <scope line="439"/>
                        </scope>
                        <scope line="444">
                            <scope line="445"/>
                            <scope line="447"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="paintFocus" type="void" line="457">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
            </method>
            <method name="getThumbSize" type="Dimension" line="460">
                <declaration name="size" type="Dimension" line="461"/>
                <scope line="463"/>
                <scope line="467"/>
            </method>
            <javadoc line="475">
                Gets the height of the tick area for horizontal sliders and the width of the
                  tick area for vertical sliders.  BasicSliderUI uses the returned value to
                  determine the tick area rectangle.                
            </javadoc>
            <method name="getTickLength" type="int" line="480"/>
            <javadoc line="485">
                Returns the shorter dimension of the track.                
            </javadoc>
            <method name="getTrackWidth" type="int" line="488">
                <comment line="490">
                    This strange calculation is here to keep the
                     track in proportion to the thumb.                    
                </comment>
                <declaration name="kIdealTrackWidth" type="double" line="491"/>
                <declaration name="kIdealThumbHeight" type="double" line="492"/>
                <declaration name="kWidthScalar" type="double" line="493"/>
                <scope line="495"/>
                <scope line="498"/>
            </method>
            <javadoc line="503">
                Returns the longer dimension of the slide bar.  (The slide bar is only the
                  part that runs directly under the thumb)                
            </javadoc>
            <method name="getTrackLength" type="int" line="507">
                <scope line="508"/>
            </method>
            <javadoc line="514">
                Returns the amount that the thumb goes past the slide bar.                
            </javadoc>
            <method name="getThumbOverhang" type="int" line="517"/>
            <method name="scrollDueToClickInTrack" type="void" line="521">
                <params>
                    <param name="dir" type="int"/>
                </params>
            </method>
            <method name="paintMinorTickForHorizSlider" type="void" line="525">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="tickBounds" type="Rectangle"/>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="paintMajorTickForHorizSlider" type="void" line="530">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="tickBounds" type="Rectangle"/>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="paintMinorTickForVertSlider" type="void" line="535">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="tickBounds" type="Rectangle"/>
                    <param name="y" type="int"/>
                </params>
                <scope line="538"/>
                <scope line="541"/>
            </method>
            <method name="paintMajorTickForVertSlider" type="void" line="546">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="tickBounds" type="Rectangle"/>
                    <param name="y" type="int"/>
                </params>
                <scope line="549"/>
                <scope line="552"/>
            </method>
        </class>
    </source>