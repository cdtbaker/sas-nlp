<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.synth">
        <import package="java.awt.Color"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Font"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Image"/>
        <import package="java.awt.Insets"/>
        <import package="java.awt.Toolkit"/>
        <import package="java.io.BufferedInputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.net.MalformedURLException"/>
        <import package="java.net.URL"/>
        <import package="java.net.URLClassLoader"/>
        <import package="java.text.ParseException"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.List"/>
        <import package="java.util.Locale"/>
        <import package="java.util.Map"/>
        <import package="java.util.StringTokenizer"/>
        <import package="java.util.regex.PatternSyntaxException"/>
        <import package="javax.swing.ImageIcon"/>
        <import package="javax.swing.JSplitPane"/>
        <import package="javax.swing.SwingConstants"/>
        <import package="javax.swing.UIDefaults"/>
        <import package="javax.swing.plaf.ColorUIResource"/>
        <import package="javax.swing.plaf.DimensionUIResource"/>
        <import package="javax.swing.plaf.FontUIResource"/>
        <import package="javax.swing.plaf.InsetsUIResource"/>
        <import package="javax.swing.plaf.UIResource"/>
        <import package="javax.xml.parsers.ParserConfigurationException"/>
        <import package="javax.xml.parsers.SAXParser"/>
        <import package="javax.xml.parsers.SAXParserFactory"/>
        <import package="org.xml.sax.Attributes"/>
        <import package="org.xml.sax.InputSource"/>
        <import package="org.xml.sax.Locator"/>
        <import package="org.xml.sax.SAXException"/>
        <import package="org.xml.sax.SAXParseException"/>
        <import package="org.xml.sax.helpers.DefaultHandler"/>
        <import package="com.sun.beans.decoder.DocumentHandler"/>
        <class name="SynthParser" line="71">
            <extends class="DefaultHandler"/>
            <comment line="73">
                                
            </comment>
            <comment line="74">
                Known element names                
            </comment>
            <comment line="75">
                                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="95">
                Known attribute names                
            </comment>
            <comment line="96">
                                
            </comment>
            <comment line="400">
                                
            </comment>
            <comment line="401">
                The following methods are invoked from startElement/stopElement                
            </comment>
            <comment line="402">
                                
            </comment>
            <comment line="1130">
                                
            </comment>
            <comment line="1131">
                SAX methods, these forward to the DocumentHandler if we don&apos;t know                
            </comment>
            <comment line="1132">
                the element name.                
            </comment>
            <comment line="1133">
                                
            </comment>
            <declaration name="ELEMENT_SYNTH" type="String" line="75"/>
            <declaration name="ELEMENT_STYLE" type="String" line="76"/>
            <declaration name="ELEMENT_STATE" type="String" line="77"/>
            <declaration name="ELEMENT_FONT" type="String" line="78"/>
            <declaration name="ELEMENT_COLOR" type="String" line="79"/>
            <declaration name="ELEMENT_IMAGE_PAINTER" type="String" line="80"/>
            <declaration name="ELEMENT_PAINTER" type="String" line="81"/>
            <declaration name="ELEMENT_PROPERTY" type="String" line="82"/>
            <declaration name="ELEMENT_SYNTH_GRAPHICS" type="String" line="83"/>
            <declaration name="ELEMENT_IMAGE_ICON" type="String" line="84"/>
            <declaration name="ELEMENT_BIND" type="String" line="85"/>
            <declaration name="ELEMENT_BIND_KEY" type="String" line="86"/>
            <declaration name="ELEMENT_INSETS" type="String" line="87"/>
            <declaration name="ELEMENT_OPAQUE" type="String" line="88"/>
            <declaration name="ELEMENT_DEFAULTS_PROPERTY" type="String" line="89"/>
            <declaration name="ELEMENT_INPUT_MAP" type="String" line="91"/>
            <declaration name="ATTRIBUTE_ACTION" type="String" line="96"/>
            <declaration name="ATTRIBUTE_ID" type="String" line="97"/>
            <declaration name="ATTRIBUTE_IDREF" type="String" line="98"/>
            <declaration name="ATTRIBUTE_CLONE" type="String" line="99"/>
            <declaration name="ATTRIBUTE_VALUE" type="String" line="100"/>
            <declaration name="ATTRIBUTE_NAME" type="String" line="101"/>
            <declaration name="ATTRIBUTE_STYLE" type="String" line="102"/>
            <declaration name="ATTRIBUTE_SIZE" type="String" line="103"/>
            <declaration name="ATTRIBUTE_TYPE" type="String" line="104"/>
            <declaration name="ATTRIBUTE_TOP" type="String" line="105"/>
            <declaration name="ATTRIBUTE_LEFT" type="String" line="106"/>
            <declaration name="ATTRIBUTE_BOTTOM" type="String" line="107"/>
            <declaration name="ATTRIBUTE_RIGHT" type="String" line="108"/>
            <declaration name="ATTRIBUTE_KEY" type="String" line="109"/>
            <declaration name="ATTRIBUTE_SOURCE_INSETS" type="String" line="110"/>
            <declaration name="ATTRIBUTE_DEST_INSETS" type="String" line="111"/>
            <declaration name="ATTRIBUTE_PATH" type="String" line="112"/>
            <declaration name="ATTRIBUTE_STRETCH" type="String" line="113"/>
            <declaration name="ATTRIBUTE_PAINT_CENTER" type="String" line="114"/>
            <declaration name="ATTRIBUTE_METHOD" type="String" line="115"/>
            <declaration name="ATTRIBUTE_DIRECTION" type="String" line="116"/>
            <declaration name="ATTRIBUTE_CENTER" type="String" line="117"/>
            <declaration name="_handler" type="DocumentHandler" line="119"/>
            <javadoc line="119">
                Lazily created, used for anything we don&apos;t understand.                
            </javadoc>
            <declaration name="_depth" type="int" line="124"/>
            <javadoc line="124">
                Indicates the depth of how many elements we&apos;ve encountered but don&apos;t
                  understand. This is used when forwarding to beans persistance to know
                  when we hsould stop forwarding.                
            </javadoc>
            <declaration name="_factory" type="DefaultSynthStyleFactory" line="131"/>
            <javadoc line="131">
                Factory that new styles are added to.                
            </javadoc>
            <declaration name="_stateInfos" type="List&lt;ParsedSynthStyle.StateInfo&gt;" line="136"/>
            <javadoc line="136">
                Array of state infos for the current style. These are pushed to the
                  style when &lt;/style&gt; is received.                
            </javadoc>
            <declaration name="_style" type="ParsedSynthStyle" line="142"/>
            <javadoc line="142">
                Current style.                
            </javadoc>
            <declaration name="_stateInfo" type="ParsedSynthStyle.StateInfo" line="147"/>
            <javadoc line="147">
                Current state info.                
            </javadoc>
            <declaration name="_inputMapBindings" type="List&lt;String&gt;" line="152"/>
            <javadoc line="152">
                Bindings for the current InputMap                
            </javadoc>
            <declaration name="_inputMapID" type="String" line="157"/>
            <javadoc line="157">
                ID for the input map. This is cached as
                  the InputMap is created AFTER the inputMapProperty has ended.                
            </javadoc>
            <declaration name="_mapping" type="Map&lt;String,Object&gt;" line="163"/>
            <javadoc line="163">
                Object references outside the scope of persistance.                
            </javadoc>
            <declaration name="_urlResourceBase" type="URL" line="168"/>
            <javadoc line="168">
                Based URL used to resolve paths.                
            </javadoc>
            <declaration name="_classResourceBase" type="Class&lt;?&gt;" line="173"/>
            <javadoc line="173">
                Based class used to resolve paths.                
            </javadoc>
            <declaration name="_colorTypes" type="List&lt;ColorType&gt;" line="178"/>
            <javadoc line="178">
                List of ColorTypes. This is populated in startColorType.                
            </javadoc>
            <declaration name="_defaultsMap" type="Map&lt;String,Object&gt;" line="183"/>
            <javadoc line="183">
                defaultsPropertys are placed here.                
            </javadoc>
            <declaration name="_stylePainters" type="List&lt;ParsedSynthStyle.PainterInfo&gt;" line="188"/>
            <javadoc line="188">
                List of SynthStyle.Painters that will be applied to the current style.                
            </javadoc>
            <declaration name="_statePainters" type="List&lt;ParsedSynthStyle.PainterInfo&gt;" line="193"/>
            <javadoc line="193">
                List of SynthStyle.Painters that will be applied to the current state.                
            </javadoc>
            <method name="SynthParser" type="constructor" line="198"/>
            <javadoc line="207">
                Parses a set of styles from &lt;code&gt;inputStream&lt;/code&gt;, adding the
                  resulting styles to the passed in DefaultSynthStyleFactory.
                  Resources are resolved either from a URL or from a Class. When calling
                  this method, one of the URL or the Class must be null but not both at
                  the same time.                
                <param>
                    inputStream XML document containing the styles to read                    
                </param>
                <param>
                    factory DefaultSynthStyleFactory that new styles are added to                    
                </param>
                <param>
                    urlResourceBase the URL used to resolve any resources, such as Images                    
                </param>
                <param>
                    classResourceBase the Class used to resolve any resources, such as Images                    
                </param>
                <param>
                    defaultsMap Map that UIDefaults properties are placed in                    
                </param>
            </javadoc>
            <method name="parse" type="void" line="224">
                <params>
                    <param name="inputStream" type="InputStream"/>
                    <param name="factory" type="DefaultSynthStyleFactory"/>
                    <param name="urlResourceBase" type="URL"/>
                    <param name="classResourceBase" type="Class<?>"/>
                    <param name="defaultsMap" type="Map<String,Object>"/>
                </params>
                <scope line="226"/>
                <scope line="237">
                    <scope line="238">
                        <declaration name="saxParser" type="SAXParser" line="239"/>
                    </scope>
                    <scope line="242"/>
                    <scope line="245"/>
                    <scope line="249"/>
                </scope>
                <scope line="252"/>
            </method>
            <javadoc line="257">
                Returns the path to a resource.                
            </javadoc>
            <method name="getResource" type="URL" line="260">
                <params>
                    <param name="path" type="String"/>
                </params>
                <scope line="261"/>
                <scope line="263">
                    <scope line="264"/>
                    <scope line="266"/>
                </scope>
            </method>
            <javadoc line="272">
                Clears our internal state.                
            </javadoc>
            <method name="reset" type="void" line="275"/>
            <javadoc line="285">
                Returns true if we are forwarding to persistance.                
            </javadoc>
            <method name="isForwarding" type="boolean" line="288"/>
            <javadoc line="292">
                Handles beans persistance.                
            </javadoc>
            <method name="getHandler" type="DocumentHandler" line="295">
                <comment line="299">
                    getHandler() is never called before parse() so it is safe                    
                </comment>
                <comment line="300">
                    to create a URLClassLoader with _resourceBase.                    
                </comment>
                <comment line="301">
                                        
                </comment>
                <comment line="302">
                    getResource(&quot;.&quot;) is called to ensure we have the directory                    
                </comment>
                <comment line="303">
                    containing the resources in the case the resource base is a                    
                </comment>
                <comment line="304">
                    .class file.                    
                </comment>
                <scope line="296">
                    <scope line="298">
                        <declaration name="urls" type="URL[]" line="305"/>
                        <declaration name="parent" type="ClassLoader" line="306"/>
                        <declaration name="urlLoader" type="ClassLoader" line="307"/>
                    </scope>
                    <scope line="309"/>
                    <scope line="313"/>
                </scope>
            </method>
            <javadoc line="320">
                If &lt;code&gt;value&lt;/code&gt; is an instance of &lt;code&gt;type&lt;/code&gt; it is
                  returned, otherwise a SAXException is thrown.                
            </javadoc>
            <method name="checkCast" type="Object" line="324">
                <params>
                    <param name="value" type="Object"/>
                    <param name="type" type="Class"/>
                </params>
                <scope line="325"/>
            </method>
            <javadoc line="332">
                Returns an object created with id=key. If the object is not of
                  type type, this will throw an exception.                
            </javadoc>
            <method name="lookup" type="Object" line="336">
                <params>
                    <param name="key" type="String"/>
                    <param name="type" type="Class"/>
                </params>
                <declaration name="value" type="Object" line="337"/>
                <scope line="338">
                    <scope line="339"/>
                </scope>
                <scope line="344"/>
            </method>
            <javadoc line="350">
                Registers an object by name. This will throw an exception if an
                  object has already been registered under the given name.                
            </javadoc>
            <method name="register" type="void" line="354">
                <params>
                    <param name="key" type="String"/>
                    <param name="value" type="Object"/>
                </params>
                <scope line="355">
                    <scope line="357"/>
                    <scope line="360"/>
                    <scope line="363"/>
                </scope>
            </method>
            <javadoc line="369">
                Convenience method to return the next int, or throw if there are no
                  more valid ints.                
            </javadoc>
            <method name="nextInt" type="int" line="374">
                <params>
                    <param name="tok" type="StringTokenizer"/>
                    <param name="errorMsg" type="String"/>
                </params>
                <scope line="375"/>
                <scope line="378"/>
                <scope line="380"/>
            </method>
            <javadoc line="385">
                Convenience method to return an Insets object.                
            </javadoc>
            <method name="parseInsets" type="Insets" line="389">
                <params>
                    <param name="insets" type="String"/>
                    <param name="errorMsg" type="String"/>
                </params>
                <declaration name="tokenizer" type="StringTokenizer" line="390"/>
            </method>
            <method name="startStyle" type="void" line="403">
                <params>
                    <param name="attributes" type="Attributes"/>
                </params>
                <declaration name="id" type="String" line="404"/>
                <scope line="407">
                    <declaration name="key" type="String" line="408"/>
                    <scope line="409"/>
                    <scope line="414"/>
                </scope>
                <scope line="418"/>
            </method>
            <method name="endStyle" type="void" line="424">
                <declaration name="size" type="int" line="425"/>
                <scope line="426"/>
                <scope line="431"/>
            </method>
            <method name="startState" type="void" line="438">
                <params>
                    <param name="attributes" type="Attributes"/>
                </params>
                <declaration name="stateInfo" type="ParsedSynthStyle.StateInfo" line="439"/>
                <declaration name="state" type="int" line="440"/>
                <declaration name="id" type="String" line="441"/>
                <scope line="444">
                    <declaration name="key" type="String" line="445"/>
                    <scope line="446"/>
                    <scope line="449"/>
                    <scope line="453"/>
                    <scope line="458">
                        <declaration name="tokenizer" type="StringTokenizer" line="459"/>
                        <scope line="461">
                            <declaration name="stateString" type="String" line="462"/>
                            <scope line="464"/>
                            <scope line="467"/>
                            <scope line="470"/>
                            <scope line="473"/>
                            <scope line="476"/>
                            <scope line="479"/>
                            <scope line="482"/>
                            <scope line="485"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="491"/>
            </method>
            <method name="endState" type="void" line="499">
                <declaration name="size" type="int" line="500"/>
                <scope line="501"/>
            </method>
            <method name="startFont" type="void" line="508">
                <params>
                    <param name="attributes" type="Attributes"/>
                </params>
                <declaration name="font" type="Font" line="509"/>
                <declaration name="style" type="int" line="510"/>
                <declaration name="size" type="int" line="511"/>
                <declaration name="id" type="String" line="512"/>
                <declaration name="name" type="String" line="513"/>
                <scope line="515">
                    <declaration name="key" type="String" line="516"/>
                    <scope line="517"/>
                    <scope line="520"/>
                    <scope line="523"/>
                    <scope line="526">
                        <scope line="527"/>
                        <scope line="529"/>
                    </scope>
                    <scope line="534">
                        <declaration name="tok" type="StringTokenizer" line="535"/>
                        <scope line="537">
                            <declaration name="token" type="String" line="538"/>
                            <scope line="539"/>
                            <scope line="543"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="549">
                    <scope line="550"/>
                    <scope line="553"/>
                </scope>
                <scope line="558"/>
                <scope line="563"/>
                <scope line="566"/>
            </method>
            <method name="startColor" type="void" line="571">
                <params>
                    <param name="attributes" type="Attributes"/>
                </params>
                <comment line="596">
                    Just RGB, or some portion of it.                    
                </comment>
                <comment line="600">
                    Single character alpha: #ARRGGBB.                    
                </comment>
                <comment line="604">
                    Color has alpha and is of the form                    
                </comment>
                <comment line="605">
                    #AARRGGBB.                    
                </comment>
                <comment line="606">
                    The following split decoding is mandatory due to                    
                </comment>
                <comment line="607">
                    Integer.decode() behavior which won&apos;t decode                    
                </comment>
                <comment line="608">
                    hexadecimal values higher than #7FFFFFFF.                    
                </comment>
                <comment line="609">
                    Thus, when an alpha channel is detected, it is                    
                </comment>
                <comment line="610">
                    decoded separately from the RGB channels.                    
                </comment>
                <declaration name="color" type="Color" line="572"/>
                <declaration name="id" type="String" line="573"/>
                <scope line="576">
                    <declaration name="key" type="String" line="577"/>
                    <scope line="578"/>
                    <scope line="581"/>
                    <scope line="584"/>
                    <scope line="586">
                        <declaration name="value" type="String" line="587"/>
                        <scope line="589">
                            <scope line="590">
                                <declaration name="argb" type="int" line="591"/>
                                <declaration name="hasAlpha" type="boolean" line="592"/>
                                <declaration name="length" type="int" line="594"/>
                                <scope line="595"/>
                                <scope line="599"/>
                                <scope line="603">
                                    <declaration name="rgb" type="int" line="611"/>
                                    <declaration name="a" type="int" line="613"/>
                                </scope>
                                <scope line="616"/>
                            </scope>
                            <scope line="622"/>
                        </scope>
                        <scope line="626">
                            <scope line="627"/>
                            <scope line="630"/>
                            <scope line="632"/>
                        </scope>
                    </scope>
                    <scope line="637">
                        <declaration name="tokenizer" type="StringTokenizer" line="638"/>
                        <scope line="640">
                            <declaration name="typeName" type="String" line="641"/>
                            <declaration name="classIndex" type="int" line="642"/>
                            <declaration name="typeClass" type="Class" line="643"/>
                            <scope line="645"/>
                            <scope line="649">
                                <scope line="650"/>
                                <scope line="653"/>
                            </scope>
                            <scope line="659"/>
                            <scope line="663"/>
                            <scope line="666"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="673"/>
                <scope line="677">
                    <declaration name="colors" type="Color[]" line="678"/>
                    <declaration name="max" type="int" line="679"/>
                    <scope line="681"/>
                    <scope line="684">
                        <declaration name="newColors" type="Color[]" line="685"/>
                        <scope line="686"/>
                    </scope>
                    <scope line="692"/>
                </scope>
            </method>
            <method name="startProperty" type="void" line="700">
                <params>
                    <param name="attributes" type="Attributes"/>
                    <param name="property" type="Object"/>
                </params>
                <comment line="703">
                    Type of the value: 0=idref, 1=boolean, 2=dimension, 3=insets,                    
                </comment>
                <comment line="704">
                    4=integer,5=string                    
                </comment>
                <comment line="744">
                    idref                    
                </comment>
                <comment line="747">
                    boolean                    
                </comment>
                <comment line="755">
                    dimension                    
                </comment>
                <comment line="761">
                    insets                    
                </comment>
                <comment line="764">
                    integer                    
                </comment>
                <comment line="771">
                    string                    
                </comment>
                <declaration name="value" type="Object" line="701"/>
                <declaration name="key" type="String" line="702"/>
                <declaration name="iType" type="int" line="705"/>
                <declaration name="aValue" type="String" line="706"/>
                <scope line="708">
                    <declaration name="aName" type="String" line="709"/>
                    <scope line="710">
                        <declaration name="type" type="String" line="711"/>
                        <scope line="712"/>
                        <scope line="715"/>
                        <scope line="718"/>
                        <scope line="721"/>
                        <scope line="724"/>
                        <scope line="727"/>
                        <scope line="730"/>
                    </scope>
                    <scope line="735"/>
                    <scope line="738"/>
                </scope>
                <scope line="742">
                    <scope line="748"/>
                    <scope line="751"/>
                    <declaration name="tok" type="StringTokenizer" line="756"/>
                    <scope line="765"/>
                    <scope line="767"/>
                </scope>
                <scope line="776"/>
                <scope line="780"/>
                <scope line="783">
                    <scope line="784"/>
                </scope>
                <scope line="789">
                    <scope line="790"/>
                </scope>
            </method>
            <method name="startGraphics" type="void" line="797">
                <params>
                    <param name="attributes" type="Attributes"/>
                </params>
                <declaration name="graphics" type="SynthGraphicsUtils" line="798"/>
                <scope line="800">
                    <declaration name="key" type="String" line="801"/>
                    <scope line="802"/>
                </scope>
                <scope line="807"/>
                <scope line="810"/>
            </method>
            <method name="startInsets" type="void" line="815">
                <params>
                    <param name="attributes" type="Attributes"/>
                </params>
                <declaration name="top" type="int" line="816"/>
                <declaration name="bottom" type="int" line="817"/>
                <declaration name="left" type="int" line="818"/>
                <declaration name="right" type="int" line="819"/>
                <declaration name="insets" type="Insets" line="820"/>
                <declaration name="id" type="String" line="821"/>
                <scope line="823">
                    <declaration name="key" type="String" line="824"/>
                    <scope line="826">
                        <scope line="827"/>
                        <scope line="831"/>
                        <scope line="834"/>
                        <scope line="837"/>
                        <scope line="840"/>
                        <scope line="843"/>
                    </scope>
                    <scope line="846"/>
                </scope>
                <scope line="851"/>
                <scope line="855"/>
            </method>
            <method name="startBind" type="void" line="860">
                <params>
                    <param name="attributes" type="Attributes"/>
                </params>
                <declaration name="style" type="ParsedSynthStyle" line="861"/>
                <declaration name="path" type="String" line="862"/>
                <declaration name="type" type="int" line="863"/>
                <scope line="865">
                    <declaration name="key" type="String" line="866"/>
                    <scope line="868"/>
                    <scope line="872">
                        <declaration name="typeS" type="String" line="873"/>
                        <scope line="875"/>
                        <scope line="878"/>
                        <scope line="881"/>
                    </scope>
                    <scope line="885"/>
                </scope>
                <scope line="889"/>
                <scope line="893"/>
                <scope line="895"/>
            </method>
            <method name="startPainter" type="void" line="901">
                <params>
                    <param name="attributes" type="Attributes"/>
                    <param name="type" type="String"/>
                </params>
                <declaration name="sourceInsets" type="Insets" line="902"/>
                <declaration name="destInsets" type="Insets" line="903"/>
                <declaration name="path" type="String" line="904"/>
                <declaration name="paintCenter" type="boolean" line="905"/>
                <declaration name="stretch" type="boolean" line="906"/>
                <declaration name="painter" type="SynthPainter" line="907"/>
                <declaration name="method" type="String" line="908"/>
                <declaration name="id" type="String" line="909"/>
                <declaration name="direction" type="int" line="910"/>
                <declaration name="center" type="boolean" line="911"/>
                <declaration name="stretchSpecified" type="boolean" line="913"/>
                <declaration name="paintCenterSpecified" type="boolean" line="914"/>
                <scope line="916">
                    <declaration name="key" type="String" line="917"/>
                    <declaration name="value" type="String" line="918"/>
                    <scope line="920"/>
                    <scope line="923"/>
                    <scope line="926"/>
                    <scope line="929"/>
                    <scope line="932"/>
                    <scope line="936"/>
                    <scope line="940"/>
                    <scope line="944"/>
                    <scope line="948">
                        <scope line="950"/>
                        <scope line="953"/>
                        <scope line="956"/>
                        <scope line="959"/>
                        <scope line="962"/>
                        <scope line="965"/>
                        <scope line="968"/>
                        <scope line="971"/>
                        <scope line="974"/>
                        <scope line="977"/>
                        <scope line="980"/>
                        <scope line="983"/>
                        <scope line="986"/>
                    </scope>
                    <scope line="990"/>
                </scope>
                <scope line="994">
                    <scope line="995"/>
                    <scope line="999"/>
                    <scope line="1003"/>
                    <scope line="1007"/>
                </scope>
                <scope line="1016"/>
                <scope line="1019"/>
            </method>
            <method name="addPainterOrMerge" type="void" line="1025">
                <params>
                    <param name="painters" type="List<ParsedSynthStyle.PainterInfo>"/>
                    <param name="method" type="String"/>
                    <param name="painter" type="SynthPainter"/>
                    <param name="direction" type="int"/>
                </params>
                <declaration name="painterInfo" type="ParsedSynthStyle.PainterInfo" line="1026"/>
                <scope line="1031">
                    <declaration name="info" type="ParsedSynthStyle.PainterInfo" line="1032"/>
                    <scope line="1035"/>
                </scope>
            </method>
            <method name="startImageIcon" type="void" line="1044">
                <params>
                    <param name="attributes" type="Attributes"/>
                </params>
                <declaration name="path" type="String" line="1045"/>
                <declaration name="id" type="String" line="1046"/>
                <scope line="1048">
                    <declaration name="key" type="String" line="1049"/>
                    <scope line="1051"/>
                    <scope line="1054"/>
                </scope>
                <scope line="1058"/>
            </method>
            <method name="startOpaque" type="void" line="1064">
                <params>
                    <param name="attributes" type="Attributes"/>
                </params>
                <scope line="1065">
                    <scope line="1067">
                        <declaration name="key" type="String" line="1068"/>
                        <scope line="1070"/>
                    </scope>
                </scope>
            </method>
            <method name="startInputMap" type="void" line="1078">
                <params>
                    <param name="attributes" type="Attributes"/>
                </params>
                <scope line="1081">
                    <scope line="1082">
                        <declaration name="key" type="String" line="1083"/>
                        <scope line="1085"/>
                    </scope>
                </scope>
            </method>
            <method name="endInputMap" type="void" line="1092">
                <scope line="1093"/>
            </method>
            <method name="startBindKey" type="void" line="1102">
                <params>
                    <param name="attributes" type="Attributes"/>
                </params>
                <comment line="1104">
                    Not in an inputmap, bail.                    
                </comment>
                <scope line="1103"/>
                <scope line="1107">
                    <declaration name="key" type="String" line="1108"/>
                    <declaration name="value" type="String" line="1109"/>
                    <scope line="1110">
                        <declaration name="aKey" type="String" line="1111"/>
                        <scope line="1113"/>
                        <scope line="1116"/>
                    </scope>
                    <scope line="1120"/>
                </scope>
            </method>
            <method name="resolveEntity" type="InputSource" line="1135">
                <params>
                    <param name="publicId" type="String"/>
                    <param name="systemId" type="String"/>
                </params>
                <scope line="1136"/>
            </method>
            <method name="notationDecl" type="void" line="1142">
                <params>
                    <param name="name" type="String"/>
                    <param name="publicId" type="String"/>
                    <param name="systemId" type="String"/>
                </params>
                <scope line="1143"/>
            </method>
            <method name="unparsedEntityDecl" type="void" line="1149">
                <params>
                    <param name="name" type="String"/>
                    <param name="publicId" type="String"/>
                    <param name="systemId" type="String"/>
                    <param name="notationName" type="String"/>
                </params>
                <scope line="1150"/>
            </method>
            <method name="setDocumentLocator" type="void" line="1156">
                <params>
                    <param name="locator" type="Locator"/>
                </params>
                <scope line="1157"/>
            </method>
            <method name="startDocument" type="void" line="1162">
                <scope line="1163"/>
            </method>
            <method name="endDocument" type="void" line="1168">
                <scope line="1169"/>
            </method>
            <method name="startElement" type="void" line="1175">
                <params>
                    <param name="uri" type="String"/>
                    <param name="local" type="String"/>
                    <param name="name" type="String"/>
                    <param name="attributes" type="Attributes"/>
                </params>
                <scope line="1177"/>
                <scope line="1180"/>
                <scope line="1183"/>
                <scope line="1186"/>
                <scope line="1189"/>
                <scope line="1192"/>
                <scope line="1195"/>
                <scope line="1198"/>
                <scope line="1201"/>
                <scope line="1204"/>
                <scope line="1207"/>
                <scope line="1210"/>
                <scope line="1213"/>
                <scope line="1216"/>
                <scope line="1219"/>
                <scope line="1222">
                    <scope line="1223"/>
                </scope>
            </method>
            <method name="endElement" type="void" line="1230">
                <params>
                    <param name="uri" type="String"/>
                    <param name="local" type="String"/>
                    <param name="name" type="String"/>
                </params>
                <scope line="1231">
                    <scope line="1234"/>
                </scope>
                <scope line="1238">
                    <scope line="1240"/>
                    <scope line="1243"/>
                    <scope line="1246"/>
                </scope>
            </method>
            <method name="characters" type="void" line="1253">
                <params>
                    <param name="ch" type="char"/>
                    <param name="start" type="int"/>
                    <param name="length" type="int"/>
                </params>
                <scope line="1254"/>
            </method>
            <method name="ignorableWhitespace" type="void" line="1260">
                <params>
                    <param name="ch" type="char"/>
                    <param name="start" type="int"/>
                    <param name="length" type="int"/>
                </params>
                <scope line="1261"/>
            </method>
            <method name="processingInstruction" type="void" line="1267">
                <params>
                    <param name="target" type="String"/>
                    <param name="data" type="String"/>
                </params>
                <scope line="1268"/>
            </method>
            <method name="warning" type="void" line="1273">
                <params>
                    <param name="e" type="SAXParseException"/>
                </params>
                <scope line="1274"/>
            </method>
            <method name="error" type="void" line="1279">
                <params>
                    <param name="e" type="SAXParseException"/>
                </params>
                <scope line="1280"/>
            </method>
            <method name="fatalError" type="void" line="1286">
                <params>
                    <param name="e" type="SAXParseException"/>
                </params>
                <scope line="1287"/>
            </method>
            <class name="LazyImageIcon" line="1294">
                <extends class="ImageIcon"/>
                <implements interface="UIResource"/>
                <javadoc line="1294">
                    ImageIcon that lazily loads the image until needed.                    
                </javadoc>
                <declaration name="location" type="URL" line="1298"/>
                <method name="LazyImageIcon" type="constructor" line="1300">
                    <params>
                        <param name="location" type="URL"/>
                    </params>
                </method>
                <method name="paintIcon" type="void" line="1305">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <scope line="1306"/>
                </method>
                <method name="getIconWidth" type="int" line="1311">
                    <scope line="1312"/>
                </method>
                <method name="getIconHeight" type="int" line="1318">
                    <scope line="1319"/>
                </method>
                <method name="getImage" type="Image" line="1325">
                    <scope line="1326"/>
                </method>
            </class>
        </class>
    </source>