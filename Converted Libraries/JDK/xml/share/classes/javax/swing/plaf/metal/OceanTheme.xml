<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.metal">
        <import package="java.awt"/>
        <import package="java.net.URL"/>
        <import package="java.util"/>
        <import package="javax.swing"/>
        <import package="javax.swing.plaf"/>
        <import package="sun.swing.SwingUtilities2"/>
        <import package="sun.swing.PrintColorUIResource"/>
        <import package="sun.swing.SwingLazyValue"/>
        <class name="OceanTheme" line="10">
            <extends class="DefaultMetalTheme"/>
            <javadoc line="10">
                The default theme for the {@code MetalLookAndFeel}.
                  &lt;p&gt;
                  The designers
                  of the Metal Look and Feel strive to keep the default look up to
                  date, possibly through the use of new themes in the future.
                  Therefore, developers should only use this class directly when they
                  wish to customize the &quot;Ocean&quot; look, or force it to be the current
                  theme, regardless of future updates.
                  &lt;p&gt;
                  All colors returned by {@code OceanTheme} are completely
                  opaque.                
                <since>
                    1.5                    
                </since>
                <see>
                    MetalLookAndFeel#setCurrentTheme                    
                </see>
            </javadoc>
            <declaration name="PRIMARY1" type="ColorUIResource" line="26"/>
            <declaration name="PRIMARY2" type="ColorUIResource" line="27"/>
            <declaration name="PRIMARY3" type="ColorUIResource" line="28"/>
            <declaration name="SECONDARY1" type="ColorUIResource" line="29"/>
            <declaration name="SECONDARY2" type="ColorUIResource" line="30"/>
            <declaration name="SECONDARY3" type="ColorUIResource" line="31"/>
            <declaration name="CONTROL_TEXT_COLOR" type="ColorUIResource" line="32"/>
            <declaration name="INACTIVE_CONTROL_TEXT_COLOR" type="ColorUIResource" line="33"/>
            <declaration name="MENU_DISABLED_FOREGROUND" type="ColorUIResource" line="34"/>
            <declaration name="OCEAN_BLACK" type="ColorUIResource" line="35"/>
            <declaration name="OCEAN_DROP" type="ColorUIResource" line="36"/>
            <class name="COIcon" line="37">
                <extends class="IconUIResource"/>
                <declaration name="rtl" type="Icon" line="38"/>
                <method name="COIcon" type="constructor" line="39">
                    <params>
                        <param name="ltr" type="Icon"/>
                        <param name="rtl" type="Icon"/>
                    </params>
                </method>
                <method name="paintIcon" type="void" line="43">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <scope line="44"/>
                    <scope line="47"/>
                </method>
            </class>
            <class name="IFIcon" line="52">
                <extends class="IconUIResource"/>
                <declaration name="pressed" type="Icon" line="53"/>
                <method name="IFIcon" type="constructor" line="54">
                    <params>
                        <param name="normal" type="Icon"/>
                        <param name="pressed" type="Icon"/>
                    </params>
                </method>
                <method name="paintIcon" type="void" line="58">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <declaration name="model" type="ButtonModel" line="59"/>
                    <scope line="60"/>
                    <scope line="63"/>
                </method>
            </class>
            <javadoc line="68">
                Creates an instance of &lt;code&gt;OceanTheme&lt;/code&gt;                
            </javadoc>
            <method name="OceanTheme" type="constructor" line="71"/>
            <javadoc line="73">
                Add this theme&apos;s custom entries to the defaults table.                
                <param>
                    table the defaults table, non-null                    
                </param>
                <throws>
                    NullPointerException if {@code table} is {@code null}                    
                </throws>
            </javadoc>
            <method name="addCustomEntriesToTable" type="void" line="78">
                <params>
                    <param name="table" type="UIDefaults"/>
                </params>
                <declaration name="focusBorder" type="Object" line="79"/>
                <declaration name="buttonGradient" type="java.util.List" line="80"/>
                <declaration name="cccccc" type="Color" line="81"/>
                <declaration name="dadada" type="Color" line="82"/>
                <declaration name="c8ddf2" type="Color" line="83"/>
                <declaration name="directoryIcon" type="Object" line="84"/>
                <declaration name="fileIcon" type="Object" line="85"/>
                <declaration name="sliderGradient" type="java.util.List" line="86"/>
                <anonymous_class line="87">
                    <method name="createValue" type="Object" line="88">
                        <params>
                            <param name="table" type="UIDefaults"/>
                        </params>
                    </method>
                </anonymous_class>
                <anonymous_class line="92">
                    <method name="createValue" type="Object" line="93">
                        <params>
                            <param name="table" type="UIDefaults"/>
                        </params>
                    </method>
                </anonymous_class>
                <anonymous_class line="97">
                    <method name="createValue" type="Object" line="98">
                        <params>
                            <param name="table" type="UIDefaults"/>
                        </params>
                    </method>
                </anonymous_class>
                <anonymous_class line="102">
                    <method name="createValue" type="Object" line="103">
                        <params>
                            <param name="table" type="UIDefaults"/>
                        </params>
                    </method>
                </anonymous_class>
                <anonymous_class line="107">
                    <method name="createValue" type="Object" line="108">
                        <params>
                            <param name="table" type="UIDefaults"/>
                        </params>
                    </method>
                </anonymous_class>
                <anonymous_class line="112">
                    <method name="createValue" type="Object" line="113">
                        <params>
                            <param name="table" type="UIDefaults"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="defaults" type="Object[]" line="87"/>
            </method>
            <javadoc line="120">
                Overriden to enable picking up the system fonts, if applicable.                
            </javadoc>
            <method name="isSystemTheme" type="boolean" line="123"/>
            <javadoc line="126">
                Return the name of this theme, &quot;Ocean&quot;.                
                <return>
                    "Ocean"                    
                </return>
            </javadoc>
            <method name="getName" type="String" line="130"/>
            <javadoc line="133">
                Returns the primary 1 color. This returns a color with an rgb hex value
                  of {@code 0x6382BF}.                
                <return>
                    the primary 1 color                    
                </return>
                <see>
                    java.awt.Color#decode                    
                </see>
            </javadoc>
            <method name="getPrimary1" type="ColorUIResource" line="139"/>
            <javadoc line="142">
                Returns the primary 2 color. This returns a color with an rgb hex value
                  of {@code 0xA3B8CC}.                
                <return>
                    the primary 2 color                    
                </return>
                <see>
                    java.awt.Color#decode                    
                </see>
            </javadoc>
            <method name="getPrimary2" type="ColorUIResource" line="148"/>
            <javadoc line="151">
                Returns the primary 3 color. This returns a color with an rgb hex value
                  of {@code 0xB8CFE5}.                
                <return>
                    the primary 3 color                    
                </return>
                <see>
                    java.awt.Color#decode                    
                </see>
            </javadoc>
            <method name="getPrimary3" type="ColorUIResource" line="157"/>
            <javadoc line="160">
                Returns the secondary 1 color. This returns a color with an rgb hex
                  value of {@code 0x7A8A99}.                
                <return>
                    the secondary 1 color                    
                </return>
                <see>
                    java.awt.Color#decode                    
                </see>
            </javadoc>
            <method name="getSecondary1" type="ColorUIResource" line="166"/>
            <javadoc line="169">
                Returns the secondary 2 color. This returns a color with an rgb hex
                  value of {@code 0xB8CFE5}.                
                <return>
                    the secondary 2 color                    
                </return>
                <see>
                    java.awt.Color#decode                    
                </see>
            </javadoc>
            <method name="getSecondary2" type="ColorUIResource" line="175"/>
            <javadoc line="178">
                Returns the secondary 3 color. This returns a color with an rgb hex
                  value of {@code 0xEEEEEE}.                
                <return>
                    the secondary 3 color                    
                </return>
                <see>
                    java.awt.Color#decode                    
                </see>
            </javadoc>
            <method name="getSecondary3" type="ColorUIResource" line="184"/>
            <javadoc line="187">
                Returns the black color. This returns a color with an rgb hex
                  value of {@code 0x333333}.                
                <return>
                    the black color                    
                </return>
                <see>
                    java.awt.Color#decode                    
                </see>
            </javadoc>
            <method name="getBlack" type="ColorUIResource" line="193"/>
            <javadoc line="196">
                Returns the desktop color. This returns a color with an rgb hex
                  value of {@code 0xFFFFFF}.                
                <return>
                    the desktop color                    
                </return>
                <see>
                    java.awt.Color#decode                    
                </see>
            </javadoc>
            <method name="getDesktopColor" type="ColorUIResource" line="202"/>
            <javadoc line="205">
                Returns the inactive control text color. This returns a color with an
                  rgb hex value of {@code 0x999999}.                
                <return>
                    the inactive control text color                    
                </return>
            </javadoc>
            <method name="getInactiveControlTextColor" type="ColorUIResource" line="210"/>
            <javadoc line="213">
                Returns the control text color. This returns a color with an
                  rgb hex value of {@code 0x333333}.                
                <return>
                    the control text color                    
                </return>
            </javadoc>
            <method name="getControlTextColor" type="ColorUIResource" line="218"/>
            <javadoc line="221">
                Returns the menu disabled foreground color. This returns a color with an
                  rgb hex value of {@code 0x999999}.                
                <return>
                    the menu disabled foreground color                    
                </return>
            </javadoc>
            <method name="getMenuDisabledForeground" type="ColorUIResource" line="226"/>
            <method name="getIconResource" type="Object" line="229">
                <params>
                    <param name="iconID" type="String"/>
                </params>
            </method>
            <method name="getHastenedIcon" type="Icon" line="232">
                <params>
                    <param name="iconID" type="String"/>
                    <param name="table" type="UIDefaults"/>
                </params>
                <declaration name="res" type="Object" line="233"/>
            </method>
        </class>
    </source>