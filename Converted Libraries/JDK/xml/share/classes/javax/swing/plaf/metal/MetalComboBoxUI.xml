<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.metal">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="javax.swing"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.border"/>
        <import package="javax.swing.plaf.basic"/>
        <import package="java.io.Serializable"/>
        <import package="java.beans"/>
        <class name="MetalComboBoxUI" line="38">
            <extends class="BasicComboBoxUI"/>
            <comment line="259">
                This is here because of a bug in the compiler.                
            </comment>
            <comment line="260">
                When a protected-inner-class-savvy compiler comes out we                
            </comment>
            <comment line="261">
                should move this into MetalComboBoxLayoutManager.                
            </comment>
            <comment line="307">
                These two methods were overloaded and made public. This was probably a                
            </comment>
            <comment line="308">
                mistake in the implementation. The functionality that they used to                
            </comment>
            <comment line="309">
                provide is no longer necessary and should be removed. However,                
            </comment>
            <comment line="310">
                removing them will create an uncompatible API change.                
            </comment>
            <javadoc line="38">
                Metal UI for JComboBox
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases. The current serialization support is
                  appropriate for short term storage or RMI between applications running
                  the same version of Swing.  As of 1.4, support for long term storage
                  of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                  has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                  Please see {@link java.beans.XMLEncoder}.                
                <see>
                    MetalComboBoxEditor                    
                </see>
                <see>
                    MetalComboBoxButton                    
                </see>
                <author>
                    Tom Santos                    
                </author>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="56">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="paint" type="void" line="60">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <scope line="61"/>
            </method>
            <javadoc line="66">
                If necessary paints the currently selected item.                
                <param>
                    g Graphics to paint to                    
                </param>
                <param>
                    bounds Region to paint current value to                    
                </param>
                <param>
                    hasFocus whether or not the JComboBox has focus                    
                </param>
                <throws>
                    NullPointerException if any of the arguments are null.                    
                </throws>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="paintCurrentValue" type="void" line="76">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="bounds" type="Rectangle"/>
                    <param name="hasFocus" type="boolean"/>
                </params>
                <comment line="77">
                    This is really only called if we&apos;re using ocean.                    
                </comment>
                <scope line="78">
                    <scope line="81">
                        <declaration name="buttonInsets" type="Insets" line="82"/>
                    </scope>
                    <scope line="86"/>
                </scope>
                <scope line="92"/>
            </method>
            <javadoc line="98">
                If necessary paints the background of the currently selected item.                
                <param>
                    g Graphics to paint to                    
                </param>
                <param>
                    bounds Region to paint background to                    
                </param>
                <param>
                    hasFocus whether or not the JComboBox has focus                    
                </param>
                <throws>
                    NullPointerException if any of the arguments are null.                    
                </throws>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="paintCurrentValueBackground" type="void" line="108">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="bounds" type="Rectangle"/>
                    <param name="hasFocus" type="boolean"/>
                </params>
                <comment line="109">
                    This is really only called if we&apos;re using ocean.                    
                </comment>
                <scope line="110">
                    <scope line="117">
                        <declaration name="buttonInsets" type="Insets" line="119"/>
                        <scope line="120"/>
                        <scope line="124"/>
                    </scope>
                </scope>
                <scope line="131"/>
            </method>
            <javadoc line="137">
                Returns the baseline.                
                <throws>
                    NullPointerException {@inheritDoc}                    
                </throws>
                <throws>
                    IllegalArgumentException {@inheritDoc}                    
                </throws>
                <see>
                    javax.swing.JComponent#getBaseline(int,int)                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="getBaseline" type="int" line="145">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="baseline" type="int" line="146"/>
                <scope line="147">
                    <scope line="150"/>
                </scope>
                <scope line="154"/>
            </method>
            <method name="createEditor" type="ComboBoxEditor" line="160"/>
            <method name="createPopup" type="ComboPopup" line="164"/>
            <method name="createArrowButton" type="JButton" line="168">
                <comment line="178">
                    Disabled rollover effect.                    
                </comment>
                <declaration name="iconOnly" type="boolean" line="169"/>
                <declaration name="button" type="JButton" line="171"/>
                <scope line="177"/>
            </method>
            <javadoc line="186">
                Resets the necessary state on the ComboBoxButton for ocean.                
            </javadoc>
            <method name="updateButtonForOcean" type="void" line="189">
                <params>
                    <param name="button" type="JButton"/>
                </params>
                <comment line="191">
                    Ocean renders the focus in a different way, this                    
                </comment>
                <comment line="192">
                    would be redundant.                    
                </comment>
                <scope line="190"/>
            </method>
            <method name="createPropertyChangeListener" type="PropertyChangeListener" line="197"/>
            <class name="MetalPropertyChangeListener" line="201">
                <extends class="BasicComboBoxUI.PropertyChangeHandler"/>
                <comment line="374">
                    This method was overloaded and made public. This was probably                    
                </comment>
                <comment line="375">
                    mistake in the implementation. The functionality that they used to                    
                </comment>
                <comment line="376">
                    provide is no longer necessary and should be removed. However,                    
                </comment>
                <comment line="377">
                    removing them will create an uncompatible API change.                    
                </comment>
                <javadoc line="201">
                    This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of {@code MetalComboBoxUI}.                    
                </javadoc>
                <method name="propertyChange" type="void" line="206">
                    <params>
                        <param name="e" type="PropertyChangeEvent"/>
                    </params>
                    <declaration name="propertyName" type="String" line="208"/>
                    <scope line="210">
                        <scope line="211">
                            <declaration name="button" type="MetalComboBoxButton" line="212"/>
                        </scope>
                    </scope>
                    <scope line="218">
                        <declaration name="color" type="Color" line="219"/>
                    </scope>
                    <scope line="223">
                        <declaration name="color" type="Color" line="224"/>
                    </scope>
                </method>
            </class>
            <javadoc line="231">
                As of Java 2 platform v1.4 this method is no longer used. Do not call or
                  override. All the functionality of this method is in the
                  MetalPropertyChangeListener.                
                <deprecated>
                    As of Java 2 platform v1.4.                    
                </deprecated>
            </javadoc>
            <method name="editablePropertyChanged" type="void" line="239">
                <params>
                    <param name="e" type="PropertyChangeEvent"/>
                </params>
            </method>
            <method name="createLayoutManager" type="LayoutManager" line="241"/>
            <class name="MetalComboBoxLayoutManager" line="245">
                <extends class="BasicComboBoxUI.ComboBoxLayoutManager"/>
                <comment line="374">
                    This method was overloaded and made public. This was probably                    
                </comment>
                <comment line="375">
                    mistake in the implementation. The functionality that they used to                    
                </comment>
                <comment line="376">
                    provide is no longer necessary and should be removed. However,                    
                </comment>
                <comment line="377">
                    removing them will create an uncompatible API change.                    
                </comment>
                <javadoc line="245">
                    This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of {@code MetalComboBoxUI}.                    
                </javadoc>
                <method name="layoutContainer" type="void" line="250">
                    <params>
                        <param name="parent" type="Container"/>
                    </params>
                </method>
                <method name="superLayout" type="void" line="253">
                    <params>
                        <param name="parent" type="Container"/>
                    </params>
                </method>
            </class>
            <method name="layoutComboBox" type="void" line="261">
                <params>
                    <param name="parent" type="Container"/>
                    <param name="manager" type="MetalComboBoxLayoutManager"/>
                </params>
                <scope line="262"/>
                <scope line="267">
                    <scope line="268">
                        <declaration name="insets" type="Insets" line="269"/>
                        <declaration name="buttonWidth" type="int" line="270"/>
                    </scope>
                    <scope line="277">
                        <declaration name="insets" type="Insets" line="278"/>
                        <declaration name="width" type="int" line="279"/>
                        <declaration name="height" type="int" line="280"/>
                    </scope>
                </scope>
                <scope line="287">
                    <declaration name="cvb" type="Rectangle" line="288"/>
                </scope>
            </method>
            <javadoc line="293">
                As of Java 2 platform v1.4 this method is no
                  longer used.                
                <deprecated>
                    As of Java 2 platform v1.4.                    
                </deprecated>
            </javadoc>
            <method name="removeListeners" type="void" line="300">
                <scope line="301"/>
            </method>
            <method name="configureEditor" type="void" line="311"/>
            <method name="unconfigureEditor" type="void" line="315"/>
            <method name="getMinimumSize" type="Dimension" line="319">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <scope line="320"/>
                <declaration name="size" type="Dimension" line="324"/>
                <scope line="327">
                    <declaration name="buttonInsets" type="Insets" line="328"/>
                    <declaration name="insets" type="Insets" line="329"/>
                </scope>
                <scope line="340">
                    <declaration name="margin" type="Insets" line="342"/>
                </scope>
                <scope line="346"/>
            </method>
            <class name="MetalComboPopup" line="356">
                <extends class="BasicComboPopup"/>
                <comment line="374">
                    This method was overloaded and made public. This was probably                    
                </comment>
                <comment line="375">
                    mistake in the implementation. The functionality that they used to                    
                </comment>
                <comment line="376">
                    provide is no longer necessary and should be removed. However,                    
                </comment>
                <comment line="377">
                    removing them will create an uncompatible API change.                    
                </comment>
                <javadoc line="356">
                    This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of {@code MetalComboBoxUI}.
                      This class is now obsolete and doesn&apos;t do anything and
                      is only included for backwards API compatibility. Do not call or
                      override.                    
                    <deprecated>
                        As of Java 2 platform v1.4.                        
                    </deprecated>
                </javadoc>
                <method name="MetalComboPopup" type="constructor" line="369">
                    <params>
                        <param name="cBox" type="JComboBox"/>
                    </params>
                </method>
                <method name="delegateFocus" type="void" line="378">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
            </class>
        </class>
    </source>