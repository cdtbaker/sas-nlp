<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.synth">
        <import package="java.awt.Color"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Point"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="java.text.DateFormat"/>
        <import package="java.text.Format"/>
        <import package="java.text.NumberFormat"/>
        <import package="java.util.Date"/>
        <import package="javax.swing.Icon"/>
        <import package="javax.swing.ImageIcon"/>
        <import package="javax.swing.JCheckBox"/>
        <import package="javax.swing.JComponent"/>
        <import package="javax.swing.JLabel"/>
        <import package="javax.swing.JTable"/>
        <import package="javax.swing.LookAndFeel"/>
        <import package="javax.swing.border.Border"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.plaf.basic.BasicTableUI"/>
        <import package="javax.swing.table.DefaultTableCellRenderer"/>
        <import package="javax.swing.table.JTableHeader"/>
        <import package="javax.swing.table.TableCellRenderer"/>
        <import package="javax.swing.table.TableColumn"/>
        <import package="javax.swing.table.TableColumnModel"/>
        <class name="SynthTableUI" line="56">
            <extends class="BasicTableUI"/>
            <comment line="66">
                                
            </comment>
            <comment line="67">
                Instance Variables                
            </comment>
            <comment line="68">
                                
            </comment>
            <comment line="74">
                the background color to use for cells for alternate cells                
            </comment>
            <comment line="76">
                TableCellRenderer installed on the JTable at the time we&apos;re installed,                
            </comment>
            <comment line="77">
                cached so that we can reinstall them at uninstallUI time.                
            </comment>
            <comment line="87">
                                
            </comment>
            <comment line="88">
                The installation/uninstall procedures and support                
            </comment>
            <comment line="89">
                                
            </comment>
            <comment line="237">
                                
            </comment>
            <comment line="238">
                SynthUI                
            </comment>
            <comment line="239">
                                
            </comment>
            <comment line="254">
                                
            </comment>
            <comment line="255">
                Paint methods and support                
            </comment>
            <comment line="256">
                                
            </comment>
            <comment line="503">
                Paints the grid lines within &lt;I&gt;aRect&lt;I&gt;, using the grid
                 color set with &lt;I&gt;setGridColor&lt;I&gt;. Paints vertical lines
                 if &lt;code&gt;getShowVerticalLines()&lt;code&gt; returns true and paints
                 horizontal lines if &lt;code&gt;getShowHorizontalLines()&lt;code&gt;
                 returns true.                
            </comment>
            <implements interface="SynthUI"/>
            <implements interface="PropertyChangeListener"/>
            <javadoc line="56">
                Provides the Synth L&amp;F UI delegate for{@link javax.swing.JTable}.                
                <author>
                    Philip Milne                    
                </author>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="style" type="SynthStyle" line="69"/>
            <declaration name="useTableColors" type="boolean" line="71"/>
            <declaration name="useUIBorder" type="boolean" line="72"/>
            <declaration name="alternateColor" type="Color" line="73"/>
            <declaration name="dateRenderer" type="TableCellRenderer" line="77"/>
            <declaration name="numberRenderer" type="TableCellRenderer" line="78"/>
            <declaration name="doubleRender" type="TableCellRenderer" line="79"/>
            <declaration name="floatRenderer" type="TableCellRenderer" line="80"/>
            <declaration name="iconRenderer" type="TableCellRenderer" line="81"/>
            <declaration name="imageIconRenderer" type="TableCellRenderer" line="82"/>
            <declaration name="booleanRenderer" type="TableCellRenderer" line="83"/>
            <declaration name="objectRenderer" type="TableCellRenderer" line="84"/>
            <javadoc line="90">
                Creates a new UI object for the given component.                
                <param>
                    c component to create UI object for                    
                </param>
                <return>
                    the UI object                    
                </return>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="96">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="100">
                Initializes JTable properties, such as font, foreground, and background.
                  The font, foreground, and background properties are only set if their
                  current value is either null or a UIResource, other properties are set
                  if the current value is null.                
                <see>
                    #installUI                    
                </see>
            </javadoc>
            <method name="installDefaults" type="void" line="109"/>
            <method name="installRendererIfPossible" type="TableCellRenderer" line="124">
                <params>
                    <param name="objectClass" type="Class"/>
                    <param name="renderer" type="TableCellRenderer"/>
                </params>
                <declaration name="currentRenderer" type="TableCellRenderer" line="125"/>
                <scope line="127"/>
            </method>
            <method name="updateStyle" type="void" line="133">
                <params>
                    <param name="c" type="JTable"/>
                </params>
                <comment line="177">
                    if (d == null || d instanceof UIResource) {                    
                </comment>
                <declaration name="context" type="SynthContext" line="134"/>
                <declaration name="oldStyle" type="SynthStyle" line="135"/>
                <scope line="137">
                    <declaration name="sbg" type="Color" line="140"/>
                    <scope line="141"/>
                    <declaration name="sfg" type="Color" line="146"/>
                    <scope line="147"/>
                    <declaration name="gridColor" type="Color" line="154"/>
                    <scope line="155">
                        <scope line="157"/>
                    </scope>
                    <declaration name="rowHeight" type="Object" line="168"/>
                    <scope line="169"/>
                    <declaration name="showGrid" type="boolean" line="172"/>
                    <scope line="173"/>
                    <declaration name="d" type="Dimension" line="176"/>
                    <scope line="178"/>
                    <scope line="182"/>
                    <scope line="187"/>
                </scope>
            </method>
            <javadoc line="195">
                Attaches listeners to the JTable.                
            </javadoc>
            <method name="installListeners" type="void" line="199"/>
            <javadoc line="204">
                @inheritDoc                
            </javadoc>
            <method name="uninstallDefaults" type="void" line="208">
                <scope line="218"/>
                <declaration name="context" type="SynthContext" line="221"/>
            </method>
            <javadoc line="227">
                @inheritDoc                
            </javadoc>
            <method name="uninstallListeners" type="void" line="231"/>
            <javadoc line="240">
                @inheritDoc                
            </javadoc>
            <method name="getContext" type="SynthContext" line="244">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="248">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="state" type="int"/>
                </params>
            </method>
            <javadoc line="257">
                Notifies this UI delegate to repaint the specified component.
                  This method paints the component background, then calls
                  the {@link #paint(SynthContext,Graphics)} method.
                  &lt;p&gt;In general, this method does not need to be overridden by subclasses.
                  All Look and Feel rendering code should reside in the {@code paint} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="update" type="void" line="270">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="271"/>
            </method>
            <javadoc line="280">
                @inheritDoc                
            </javadoc>
            <method name="paintBorder" type="void" line="285">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <javadoc line="289">
                Paints the specified component according to the Look and Feel.
                  &lt;p&gt;This method is not used by Synth Look and Feel.
                  Painting is handled by the {@link #paint(SynthContext,Graphics)} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="299">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="300"/>
            </method>
            <javadoc line="306">
                Paints the specified component.                
                <param>
                    context context for the component being painted                    
                </param>
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <see>
                    #update(Graphics,JComponent)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="313">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                </params>
                <comment line="317">
                    account for the fact that the graphics has already been translated                    
                </comment>
                <comment line="318">
                    into the table&apos;s bounds                    
                </comment>
                <comment line="322">
                    this check prevents us from painting the entire table                    
                </comment>
                <comment line="323">
                    when the clip doesn&apos;t intersect our bounds at all                    
                </comment>
                <comment line="339">
                    This should never happen (as long as our bounds intersect the clip,                    
                </comment>
                <comment line="340">
                    which is why we bail above if that is the case).                    
                </comment>
                <comment line="344">
                    If the table does not have enough rows to fill the view we&apos;ll get -1.                    
                </comment>
                <comment line="345">
                    (We could also get -1 if our bounds don&apos;t intersect the clip,                    
                </comment>
                <comment line="346">
                    which is why we bail above if that is the case).                    
                </comment>
                <comment line="347">
                    Replace this with the index of the last row.                    
                </comment>
                <comment line="354">
                    This should never happen.                    
                </comment>
                <comment line="358">
                    If the table does not have enough columns to fill the view we&apos;ll get -1.                    
                </comment>
                <comment line="359">
                    Replace this with the index of the last column.                    
                </comment>
                <comment line="364">
                    Paint the cells.                    
                </comment>
                <comment line="367">
                    Paint the grid.                    
                </comment>
                <comment line="368">
                    it is important to paint the grid after the cells, otherwise the grid will be overpainted                    
                </comment>
                <comment line="369">
                    because in Synth cell renderers are likely to be opaque                    
                </comment>
                <declaration name="clip" type="Rectangle" line="314"/>
                <declaration name="bounds" type="Rectangle" line="316"/>
                <scope line="324"/>
                <declaration name="ltr" type="boolean" line="330"/>
                <declaration name="upperLeft" type="Point" line="332"/>
                <declaration name="lowerRight" type="Point" line="334"/>
                <declaration name="rMin" type="int" line="337"/>
                <declaration name="rMax" type="int" line="338"/>
                <scope line="341"/>
                <scope line="348"/>
                <declaration name="cMin" type="int" line="352"/>
                <declaration name="cMax" type="int" line="353"/>
                <scope line="355"/>
                <scope line="360"/>
            </method>
            <method name="paintDropLines" type="void" line="375">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="loc" type="JTable.DropLocation" line="376"/>
                <scope line="377"/>
                <declaration name="color" type="Color" line="381"/>
                <declaration name="shortColor" type="Color" line="382"/>
                <scope line="383"/>
                <declaration name="rect" type="Rectangle" line="387"/>
                <scope line="390">
                    <declaration name="x" type="int" line="391"/>
                    <declaration name="w" type="int" line="392"/>
                    <scope line="393"/>
                    <scope line="398"/>
                </scope>
                <scope line="405">
                    <declaration name="y" type="int" line="406"/>
                    <declaration name="h" type="int" line="407"/>
                    <scope line="408"/>
                    <scope line="413"/>
                </scope>
            </method>
            <method name="getHDropLineRect" type="Rectangle" line="420">
                <params>
                    <param name="loc" type="JTable.DropLocation"/>
                </params>
                <scope line="421"/>
                <declaration name="row" type="int" line="425"/>
                <declaration name="col" type="int" line="426"/>
                <scope line="427"/>
                <declaration name="rect" type="Rectangle" line="431"/>
                <scope line="433">
                    <declaration name="prevRect" type="Rectangle" line="435"/>
                </scope>
                <scope line="439"/>
                <scope line="441"/>
            </method>
            <method name="getVDropLineRect" type="Rectangle" line="450">
                <params>
                    <param name="loc" type="JTable.DropLocation"/>
                </params>
                <scope line="451"/>
                <declaration name="ltr" type="boolean" line="455"/>
                <declaration name="col" type="int" line="456"/>
                <declaration name="rect" type="Rectangle" line="457"/>
                <scope line="459">
                    <scope line="462"/>
                </scope>
                <scope line="465"/>
                <scope line="469"/>
                <scope line="471"/>
            </method>
            <method name="extendRect" type="Rectangle" line="480">
                <params>
                    <param name="rect" type="Rectangle"/>
                    <param name="horizontal" type="boolean"/>
                </params>
                <scope line="481"/>
                <scope line="485"/>
                <scope line="488">
                    <scope line="491">
                        <declaration name="lastRect" type="Rectangle" line="492"/>
                    </scope>
                    <scope line="494"/>
                </scope>
            </method>
            <method name="paintGrid" type="void" line="510">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="rMin" type="int"/>
                    <param name="rMax" type="int"/>
                    <param name="cMin" type="int"/>
                    <param name="cMax" type="int"/>
                </params>
                <declaration name="minCell" type="Rectangle" line="513"/>
                <declaration name="maxCell" type="Rectangle" line="514"/>
                <declaration name="damagedArea" type="Rectangle" line="515"/>
                <declaration name="synthG" type="SynthGraphicsUtils" line="516"/>
                <scope line="519">
                    <declaration name="tableWidth" type="int" line="520"/>
                    <declaration name="y" type="int" line="521"/>
                    <scope line="522"/>
                </scope>
                <scope line="528">
                    <declaration name="cm" type="TableColumnModel" line="529"/>
                    <declaration name="tableHeight" type="int" line="530"/>
                    <declaration name="x" type="int" line="531"/>
                    <scope line="532">
                        <scope line="534">
                            <declaration name="w" type="int" line="535"/>
                        </scope>
                    </scope>
                    <scope line="540">
                        <scope line="542">
                            <declaration name="w" type="int" line="543"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="viewIndexForColumn" type="int" line="552">
                <params>
                    <param name="aColumn" type="TableColumn"/>
                </params>
                <declaration name="cm" type="TableColumnModel" line="553"/>
                <scope line="554">
                    <scope line="555"/>
                </scope>
            </method>
            <method name="paintCells" type="void" line="563">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="rMin" type="int"/>
                    <param name="rMax" type="int"/>
                    <param name="cMin" type="int"/>
                    <param name="cMax" type="int"/>
                </params>
                <comment line="607">
                    Paint the dragged column if we are dragging.                    
                </comment>
                <comment line="612">
                    Remove any renderers that may be left in the rendererPane.                    
                </comment>
                <declaration name="header" type="JTableHeader" line="564"/>
                <declaration name="draggedColumn" type="TableColumn" line="565"/>
                <declaration name="cm" type="TableColumnModel" line="567"/>
                <declaration name="columnMargin" type="int" line="568"/>
                <declaration name="cellRect" type="Rectangle" line="570"/>
                <declaration name="aColumn" type="TableColumn" line="571"/>
                <declaration name="columnWidth" type="int" line="572"/>
                <scope line="573">
                    <scope line="574">
                        <scope line="576">
                            <scope line="580"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="586">
                    <scope line="587">
                        <scope line="590"/>
                        <scope line="595">
                            <scope line="600"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="608"/>
            </method>
            <method name="paintDraggedArea" type="void" line="616">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="rMin" type="int"/>
                    <param name="rMax" type="int"/>
                    <param name="draggedColumn" type="TableColumn"/>
                    <param name="distance" type="int"/>
                </params>
                <comment line="624">
                    Paint a gray well in place of the moving column.                    
                </comment>
                <comment line="629">
                    Move to the where the cell has been dragged.                    
                </comment>
                <comment line="632">
                    Fill the background.                    
                </comment>
                <comment line="641">
                    Paint the vertical grid lines if necessary.                    
                </comment>
                <comment line="648">
                    Left                    
                </comment>
                <comment line="650">
                    Right                    
                </comment>
                <comment line="655">
                    Render the cell value                    
                </comment>
                <comment line="660">
                    Paint the (lower) horizontal grid line if necessary.                    
                </comment>
                <declaration name="draggedColumnIndex" type="int" line="617"/>
                <declaration name="minCell" type="Rectangle" line="619"/>
                <declaration name="maxCell" type="Rectangle" line="620"/>
                <declaration name="vacatedColumnRect" type="Rectangle" line="622"/>
                <declaration name="synthG" type="SynthGraphicsUtils" line="637"/>
                <scope line="642">
                    <declaration name="x1" type="int" line="644"/>
                    <declaration name="y1" type="int" line="645"/>
                    <declaration name="x2" type="int" line="646"/>
                    <declaration name="y2" type="int" line="647"/>
                </scope>
                <scope line="654">
                    <declaration name="r" type="Rectangle" line="656"/>
                    <scope line="661">
                        <declaration name="rcr" type="Rectangle" line="663"/>
                        <declaration name="x1" type="int" line="665"/>
                        <declaration name="y1" type="int" line="666"/>
                        <declaration name="x2" type="int" line="667"/>
                        <declaration name="y2" type="int" line="668"/>
                    </scope>
                </scope>
            </method>
            <method name="paintCell" type="void" line="675">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="cellRect" type="Rectangle"/>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
                <scope line="677">
                    <declaration name="component" type="Component" line="678"/>
                </scope>
                <scope line="682">
                    <declaration name="renderer" type="TableCellRenderer" line="683"/>
                    <declaration name="component" type="Component" line="684"/>
                    <declaration name="b" type="Color" line="685"/>
                    <scope line="688">
                        <scope line="689"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="698">
                @inheritDoc                
            </javadoc>
            <method name="propertyChange" type="void" line="702">
                <params>
                    <param name="event" type="PropertyChangeEvent"/>
                </params>
                <scope line="703"/>
            </method>
            <class name="SynthBooleanTableCellRenderer" line="709">
                <extends class="JCheckBox"/>
                <implements interface="TableCellRenderer"/>
                <declaration name="isRowSelected" type="boolean" line="711"/>
                <method name="SynthBooleanTableCellRenderer" type="constructor" line="713"/>
                <method name="getTableCellRendererComponent" type="Component" line="720">
                    <params>
                        <param name="table" type="JTable"/>
                        <param name="value" type="Object"/>
                        <param name="isSelected" type="boolean"/>
                        <param name="hasFocus" type="boolean"/>
                        <param name="row" type="int"/>
                        <param name="column" type="int"/>
                    </params>
                    <scope line="723"/>
                    <scope line="726"/>
                </method>
                <method name="unwrap" type="Color" line="735">
                    <params>
                        <param name="c" type="Color"/>
                    </params>
                    <scope line="736"/>
                </method>
                <method name="isOpaque" type="boolean" line="742"/>
            </class>
            <class name="SynthTableCellRenderer" line="747">
                <extends class="DefaultTableCellRenderer"/>
                <declaration name="numberFormat" type="Object" line="748"/>
                <declaration name="dateFormat" type="Object" line="749"/>
                <declaration name="opaque" type="boolean" line="750"/>
                <method name="setOpaque" type="void" line="752">
                    <params>
                        <param name="isOpaque" type="boolean"/>
                    </params>
                </method>
                <method name="isOpaque" type="boolean" line="756"/>
                <method name="getName" type="String" line="760">
                    <declaration name="name" type="String" line="761"/>
                    <scope line="762"/>
                </method>
                <method name="setBorder" type="void" line="768">
                    <params>
                        <param name="b" type="Border"/>
                    </params>
                    <scope line="769"/>
                </method>
                <method name="getTableCellRendererComponent" type="Component" line="776">
                    <params>
                        <param name="table" type="JTable"/>
                        <param name="value" type="Object"/>
                        <param name="isSelected" type="boolean"/>
                        <param name="hasFocus" type="boolean"/>
                        <param name="row" type="int"/>
                        <param name="column" type="int"/>
                    </params>
                    <scope line="777"/>
                    <scope line="782"/>
                    <scope line="789"/>
                </method>
                <method name="configureValue" type="void" line="795">
                    <params>
                        <param name="value" type="Object"/>
                        <param name="columnClass" type="Class"/>
                    </params>
                    <comment line="807">
                        Super will have set value.                        
                    </comment>
                    <scope line="796"/>
                    <scope line="798">
                        <scope line="799"/>
                    </scope>
                    <scope line="805"/>
                    <scope line="809"/>
                    <scope line="814">
                        <scope line="815"/>
                    </scope>
                    <scope line="821"/>
                </method>
                <method name="paint" type="void" line="826">
                    <params>
                        <param name="g" type="Graphics"/>
                    </params>
                </method>
            </class>
        </class>
    </source>