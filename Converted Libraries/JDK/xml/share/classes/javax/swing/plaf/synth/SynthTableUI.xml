<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.synth">
        <import package="java.awt.Color"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Point"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="java.text.DateFormat"/>
        <import package="java.text.Format"/>
        <import package="java.text.NumberFormat"/>
        <import package="java.util.Date"/>
        <import package="javax.swing.Icon"/>
        <import package="javax.swing.ImageIcon"/>
        <import package="javax.swing.JCheckBox"/>
        <import package="javax.swing.JComponent"/>
        <import package="javax.swing.JLabel"/>
        <import package="javax.swing.JTable"/>
        <import package="javax.swing.LookAndFeel"/>
        <import package="javax.swing.border.Border"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.plaf.basic.BasicTableUI"/>
        <import package="javax.swing.table.DefaultTableCellRenderer"/>
        <import package="javax.swing.table.JTableHeader"/>
        <import package="javax.swing.table.TableCellRenderer"/>
        <import package="javax.swing.table.TableColumn"/>
        <import package="javax.swing.table.TableColumnModel"/>
        <class name="SynthTableUI" line="29">
            <extends class="BasicTableUI"/>
            <implements interface="SynthUI"/>
            <implements interface="PropertyChangeListener"/>
            <javadoc line="29">
                Provides the Synth L&amp;F UI delegate for{@link javax.swing.JTable}.                
                <author>
                    Philip Milne                    
                </author>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="style" type="SynthStyle" line="35"/>
            <declaration name="useTableColors" type="boolean" line="36"/>
            <declaration name="useUIBorder" type="boolean" line="37"/>
            <declaration name="alternateColor" type="Color" line="38"/>
            <declaration name="dateRenderer" type="TableCellRenderer" line="39"/>
            <declaration name="numberRenderer" type="TableCellRenderer" line="40"/>
            <declaration name="doubleRender" type="TableCellRenderer" line="41"/>
            <declaration name="floatRenderer" type="TableCellRenderer" line="42"/>
            <declaration name="iconRenderer" type="TableCellRenderer" line="43"/>
            <declaration name="imageIconRenderer" type="TableCellRenderer" line="44"/>
            <declaration name="booleanRenderer" type="TableCellRenderer" line="45"/>
            <declaration name="objectRenderer" type="TableCellRenderer" line="46"/>
            <javadoc line="47">
                Creates a new UI object for the given component.                
                <param>
                    c component to create UI object for                    
                </param>
                <return>
                    the UI object                    
                </return>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="52">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="55">
                Initializes JTable properties, such as font, foreground, and background.
                  The font, foreground, and background properties are only set if their
                  current value is either null or a UIResource, other properties are set
                  if the current value is null.                
                <see>
                    #installUI                    
                </see>
            </javadoc>
            <method name="installDefaults" type="void" line="62"/>
            <method name="installRendererIfPossible" type="TableCellRenderer" line="73">
                <params>
                    <param name="objectClass" type="Class"/>
                    <param name="renderer" type="TableCellRenderer"/>
                </params>
                <declaration name="currentRenderer" type="TableCellRenderer" line="74"/>
                <scope line="75"/>
            </method>
            <method name="updateStyle" type="void" line="80">
                <params>
                    <param name="c" type="JTable"/>
                </params>
                <declaration name="context" type="SynthContext" line="81"/>
                <declaration name="oldStyle" type="SynthStyle" line="82"/>
                <scope line="84">
                    <declaration name="sbg" type="Color" line="86"/>
                    <scope line="87"/>
                    <declaration name="sfg" type="Color" line="90"/>
                    <scope line="91"/>
                    <declaration name="gridColor" type="Color" line="95"/>
                    <scope line="96">
                        <scope line="98"/>
                    </scope>
                    <declaration name="rowHeight" type="Object" line="105"/>
                    <scope line="106"/>
                    <declaration name="showGrid" type="boolean" line="109"/>
                    <scope line="110"/>
                    <declaration name="d" type="Dimension" line="113"/>
                    <scope line="114"/>
                    <scope line="118"/>
                    <scope line="121"/>
                </scope>
            </method>
            <javadoc line="128">
                Attaches listeners to the JTable.                
            </javadoc>
            <method name="installListeners" type="void" line="131"/>
            <javadoc line="135">
                @inheritDoc                
            </javadoc>
            <method name="uninstallDefaults" type="void" line="138">
                <scope line="147"/>
                <declaration name="context" type="SynthContext" line="150"/>
            </method>
            <javadoc line="155">
                @inheritDoc                
            </javadoc>
            <method name="uninstallListeners" type="void" line="158"/>
            <javadoc line="162">
                @inheritDoc                
            </javadoc>
            <method name="getContext" type="SynthContext" line="165">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="168">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="state" type="int"/>
                </params>
            </method>
            <javadoc line="171">
                Notifies this UI delegate to repaint the specified component.
                  This method paints the component background, then calls
                  the {@link #paint(SynthContext,Graphics)} method.
                  &lt;p&gt;In general, this method does not need to be overridden by subclasses.
                  All Look and Feel rendering code should reside in the {@code paint} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="update" type="void" line="181">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="182"/>
            </method>
            <javadoc line="188">
                @inheritDoc                
            </javadoc>
            <method name="paintBorder" type="void" line="191">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <javadoc line="194">
                Paints the specified component according to the Look and Feel.
                  &lt;p&gt;This method is not used by Synth Look and Feel.
                  Painting is handled by the {@link #paint(SynthContext,Graphics)} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="202">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="203"/>
            </method>
            <javadoc line="207">
                Paints the specified component.                
                <param>
                    context context for the component being painted                    
                </param>
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <see>
                    #update(Graphics,JComponent)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="213">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="clip" type="Rectangle" line="214"/>
                <declaration name="bounds" type="Rectangle" line="215"/>
                <scope line="217"/>
                <declaration name="ltr" type="boolean" line="221"/>
                <declaration name="upperLeft" type="Point" line="222"/>
                <declaration name="lowerRight" type="Point" line="223"/>
                <declaration name="rMin" type="int" line="224"/>
                <declaration name="rMax" type="int" line="225"/>
                <scope line="226"/>
                <scope line="229"/>
                <declaration name="cMin" type="int" line="232"/>
                <declaration name="cMax" type="int" line="233"/>
                <scope line="234"/>
                <scope line="237"/>
            </method>
            <method name="paintDropLines" type="void" line="244">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="loc" type="JTable.DropLocation" line="245"/>
                <scope line="246"/>
                <declaration name="color" type="Color" line="249"/>
                <declaration name="shortColor" type="Color" line="250"/>
                <scope line="251"/>
                <declaration name="rect" type="Rectangle" line="254"/>
                <scope line="256">
                    <declaration name="x" type="int" line="257"/>
                    <declaration name="w" type="int" line="258"/>
                    <scope line="259"/>
                    <scope line="264"/>
                </scope>
                <scope line="270">
                    <declaration name="y" type="int" line="271"/>
                    <declaration name="h" type="int" line="272"/>
                    <scope line="273"/>
                    <scope line="278"/>
                </scope>
            </method>
            <method name="getHDropLineRect" type="Rectangle" line="284">
                <params>
                    <param name="loc" type="JTable.DropLocation"/>
                </params>
                <scope line="285"/>
                <declaration name="row" type="int" line="288"/>
                <declaration name="col" type="int" line="289"/>
                <scope line="290"/>
                <declaration name="rect" type="Rectangle" line="293"/>
                <scope line="294">
                    <declaration name="prevRect" type="Rectangle" line="296"/>
                </scope>
                <scope line="299"/>
                <scope line="302"/>
            </method>
            <method name="getVDropLineRect" type="Rectangle" line="308">
                <params>
                    <param name="loc" type="JTable.DropLocation"/>
                </params>
                <scope line="309"/>
                <declaration name="ltr" type="boolean" line="312"/>
                <declaration name="col" type="int" line="313"/>
                <declaration name="rect" type="Rectangle" line="314"/>
                <scope line="315">
                    <scope line="318"/>
                </scope>
                <scope line="322"/>
                <scope line="325"/>
                <scope line="328"/>
            </method>
            <method name="extendRect" type="Rectangle" line="334">
                <params>
                    <param name="rect" type="Rectangle"/>
                    <param name="horizontal" type="boolean"/>
                </params>
                <scope line="335"/>
                <scope line="338"/>
                <scope line="342">
                    <scope line="344">
                        <declaration name="lastRect" type="Rectangle" line="345"/>
                    </scope>
                    <scope line="348"/>
                </scope>
            </method>
            <method name="paintGrid" type="void" line="354">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="rMin" type="int"/>
                    <param name="rMax" type="int"/>
                    <param name="cMin" type="int"/>
                    <param name="cMax" type="int"/>
                </params>
                <declaration name="minCell" type="Rectangle" line="356"/>
                <declaration name="maxCell" type="Rectangle" line="357"/>
                <declaration name="damagedArea" type="Rectangle" line="358"/>
                <declaration name="synthG" type="SynthGraphicsUtils" line="359"/>
                <scope line="360">
                    <declaration name="tableWidth" type="int" line="361"/>
                    <declaration name="y" type="int" line="362"/>
                    <scope line="363"/>
                </scope>
                <scope line="368">
                    <declaration name="cm" type="TableColumnModel" line="369"/>
                    <declaration name="tableHeight" type="int" line="370"/>
                    <declaration name="x" type="int" line="371"/>
                    <scope line="372">
                        <scope line="374">
                            <declaration name="w" type="int" line="375"/>
                        </scope>
                    </scope>
                    <scope line="380">
                        <scope line="382">
                            <declaration name="w" type="int" line="383"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="viewIndexForColumn" type="int" line="390">
                <params>
                    <param name="aColumn" type="TableColumn"/>
                </params>
                <declaration name="cm" type="TableColumnModel" line="391"/>
                <scope line="392">
                    <scope line="393"/>
                </scope>
            </method>
            <method name="paintCells" type="void" line="399">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="rMin" type="int"/>
                    <param name="rMax" type="int"/>
                    <param name="cMin" type="int"/>
                    <param name="cMax" type="int"/>
                </params>
                <declaration name="header" type="JTableHeader" line="400"/>
                <declaration name="draggedColumn" type="TableColumn" line="401"/>
                <declaration name="cm" type="TableColumnModel" line="402"/>
                <declaration name="columnMargin" type="int" line="403"/>
                <declaration name="cellRect" type="Rectangle" line="404"/>
                <declaration name="aColumn" type="TableColumn" line="405"/>
                <declaration name="columnWidth" type="int" line="406"/>
                <scope line="407">
                    <scope line="408">
                        <scope line="410">
                            <scope line="414"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="421">
                    <scope line="422">
                        <scope line="425"/>
                        <scope line="430">
                            <scope line="435"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="441"/>
            </method>
            <method name="paintDraggedArea" type="void" line="446">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="rMin" type="int"/>
                    <param name="rMax" type="int"/>
                    <param name="draggedColumn" type="TableColumn"/>
                    <param name="distance" type="int"/>
                </params>
                <declaration name="draggedColumnIndex" type="int" line="447"/>
                <declaration name="minCell" type="Rectangle" line="448"/>
                <declaration name="maxCell" type="Rectangle" line="449"/>
                <declaration name="vacatedColumnRect" type="Rectangle" line="450"/>
                <declaration name="synthG" type="SynthGraphicsUtils" line="456"/>
                <scope line="457">
                    <declaration name="x1" type="int" line="459"/>
                    <declaration name="y1" type="int" line="460"/>
                    <declaration name="x2" type="int" line="461"/>
                    <declaration name="y2" type="int" line="462"/>
                </scope>
                <scope line="466">
                    <declaration name="r" type="Rectangle" line="467"/>
                    <scope line="470">
                        <declaration name="rcr" type="Rectangle" line="472"/>
                        <declaration name="x1" type="int" line="474"/>
                        <declaration name="y1" type="int" line="475"/>
                        <declaration name="x2" type="int" line="476"/>
                        <declaration name="y2" type="int" line="477"/>
                    </scope>
                </scope>
            </method>
            <method name="paintCell" type="void" line="482">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="cellRect" type="Rectangle"/>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
                <scope line="483">
                    <declaration name="component" type="Component" line="484"/>
                </scope>
                <scope line="488">
                    <declaration name="renderer" type="TableCellRenderer" line="489"/>
                    <declaration name="component" type="Component" line="490"/>
                    <declaration name="b" type="Color" line="491"/>
                    <scope line="492">
                        <scope line="493"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="500">
                @inheritDoc                
            </javadoc>
            <method name="propertyChange" type="void" line="503">
                <params>
                    <param name="event" type="PropertyChangeEvent"/>
                </params>
                <scope line="504"/>
            </method>
            <class name="SynthBooleanTableCellRenderer" line="508">
                <extends class="JCheckBox"/>
                <implements interface="TableCellRenderer"/>
                <declaration name="isRowSelected" type="boolean" line="509"/>
                <method name="SynthBooleanTableCellRenderer" type="constructor" line="510"/>
                <method name="getTableCellRendererComponent" type="Component" line="514">
                    <params>
                        <param name="table" type="JTable"/>
                        <param name="value" type="Object"/>
                        <param name="isSelected" type="boolean"/>
                        <param name="hasFocus" type="boolean"/>
                        <param name="row" type="int"/>
                        <param name="column" type="int"/>
                    </params>
                    <scope line="516"/>
                    <scope line="520"/>
                </method>
                <method name="unwrap" type="Color" line="527">
                    <params>
                        <param name="c" type="Color"/>
                    </params>
                    <scope line="528"/>
                </method>
                <method name="isOpaque" type="boolean" line="533"/>
            </class>
            <class name="SynthTableCellRenderer" line="537">
                <extends class="DefaultTableCellRenderer"/>
                <declaration name="numberFormat" type="Object" line="538"/>
                <declaration name="dateFormat" type="Object" line="539"/>
                <declaration name="opaque" type="boolean" line="540"/>
                <method name="setOpaque" type="void" line="541">
                    <params>
                        <param name="isOpaque" type="boolean"/>
                    </params>
                </method>
                <method name="isOpaque" type="boolean" line="544"/>
                <method name="getName" type="String" line="547">
                    <declaration name="name" type="String" line="548"/>
                    <scope line="549"/>
                </method>
                <method name="setBorder" type="void" line="554">
                    <params>
                        <param name="b" type="Border"/>
                    </params>
                    <scope line="555"/>
                </method>
                <method name="getTableCellRendererComponent" type="Component" line="559">
                    <params>
                        <param name="table" type="JTable"/>
                        <param name="value" type="Object"/>
                        <param name="isSelected" type="boolean"/>
                        <param name="hasFocus" type="boolean"/>
                        <param name="row" type="int"/>
                        <param name="column" type="int"/>
                    </params>
                    <scope line="560"/>
                    <scope line="563"/>
                    <scope line="568"/>
                </method>
                <method name="configureValue" type="void" line="573">
                    <params>
                        <param name="value" type="Object"/>
                        <param name="columnClass" type="Class"/>
                    </params>
                    <scope line="574"/>
                    <scope line="577">
                        <scope line="578"/>
                    </scope>
                    <scope line="584"/>
                    <scope line="587"/>
                    <scope line="592">
                        <scope line="593"/>
                    </scope>
                    <scope line="599"/>
                </method>
                <method name="paint" type="void" line="603">
                    <params>
                        <param name="g" type="Graphics"/>
                    </params>
                </method>
            </class>
        </class>
    </source>