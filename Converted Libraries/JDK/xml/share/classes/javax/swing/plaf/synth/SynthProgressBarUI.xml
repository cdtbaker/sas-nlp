<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.synth">
        <import package="java.awt"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="javax.swing"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.plaf.basic.BasicProgressBarUI"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="sun.swing.SwingUtilities2"/>
        <class name="SynthProgressBarUI" line="10">
            <extends class="BasicProgressBarUI"/>
            <implements interface="SynthUI"/>
            <implements interface="PropertyChangeListener"/>
            <javadoc line="10">
                Provides the Synth L&amp;F UI delegate for{@link javax.swing.JProgressBar}.                
                <author>
                    Joshua Outwater                    
                </author>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="style" type="SynthStyle" line="16"/>
            <declaration name="progressPadding" type="int" line="17"/>
            <declaration name="rotateText" type="boolean" line="18"/>
            <declaration name="paintOutsideClip" type="boolean" line="19"/>
            <declaration name="tileWhenIndeterminate" type="boolean" line="20"/>
            <declaration name="tileWidth" type="int" line="21"/>
            <javadoc line="22">
                Creates a new UI object for the given component.                
                <param>
                    x component to create UI object for                    
                </param>
                <return>
                    the UI object                    
                </return>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="27">
                <params>
                    <param name="x" type="JComponent"/>
                </params>
            </method>
            <javadoc line="30">
                @inheritDoc                
            </javadoc>
            <method name="installListeners" type="void" line="33"/>
            <javadoc line="37">
                @inheritDoc                
            </javadoc>
            <method name="uninstallListeners" type="void" line="40"/>
            <javadoc line="44">
                @inheritDoc                
            </javadoc>
            <method name="installDefaults" type="void" line="47"/>
            <method name="updateStyle" type="void" line="50">
                <params>
                    <param name="c" type="JProgressBar"/>
                </params>
                <declaration name="context" type="SynthContext" line="51"/>
                <declaration name="oldStyle" type="SynthStyle" line="52"/>
                <declaration name="scaleKey" type="String" line="61"/>
                <scope line="62">
                    <scope line="63"/>
                    <scope line="66"/>
                    <scope line="69"/>
                </scope>
            </method>
            <javadoc line="75">
                @inheritDoc                
            </javadoc>
            <method name="uninstallDefaults" type="void" line="78">
                <declaration name="context" type="SynthContext" line="79"/>
            </method>
            <javadoc line="84">
                @inheritDoc                
            </javadoc>
            <method name="getContext" type="SynthContext" line="87">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="90">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="state" type="int"/>
                </params>
            </method>
            <method name="getComponentState" type="int" line="93">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="96">
                @inheritDoc                
            </javadoc>
            <method name="getBaseline" type="int" line="99">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <scope line="101">
                    <declaration name="context" type="SynthContext" line="102"/>
                    <declaration name="font" type="Font" line="103"/>
                    <declaration name="metrics" type="FontMetrics" line="104"/>
                </scope>
            </method>
            <javadoc line="110">
                @inheritDoc                
            </javadoc>
            <method name="getBox" type="Rectangle" line="113">
                <params>
                    <param name="r" type="Rectangle"/>
                </params>
                <scope line="114"/>
                <scope line="117"/>
            </method>
            <javadoc line="121">
                @inheritDoc                
            </javadoc>
            <method name="setAnimationIndex" type="void" line="124">
                <params>
                    <param name="newValue" type="int"/>
                </params>
                <scope line="125">
                    <scope line="126"/>
                </scope>
                <scope line="132"/>
            </method>
            <javadoc line="136">
                Notifies this UI delegate to repaint the specified component.
                  This method paints the component background, then calls
                  the {@link #paint(SynthContext,Graphics)} method.
                  &lt;p&gt;In general, this method does not need to be overridden by subclasses.
                  All Look and Feel rendering code should reside in the {@code paint} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="update" type="void" line="146">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="147"/>
            </method>
            <javadoc line="153">
                Paints the specified component according to the Look and Feel.
                  &lt;p&gt;This method is not used by Synth Look and Feel.
                  Painting is handled by the {@link #paint(SynthContext,Graphics)} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="161">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="162"/>
            </method>
            <javadoc line="166">
                Paints the specified component.                
                <param>
                    context context for the component being painted                    
                </param>
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <see>
                    #update(Graphics,JComponent)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="172">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="pBar" type="JProgressBar" line="173"/>
                <declaration name="x" type="int" line="174"/>
                <scope line="175">
                    <declaration name="pBarInsets" type="Insets" line="176"/>
                    <declaration name="percentComplete" type="double" line="177"/>
                    <scope line="178">
                        <scope line="179">
                            <scope line="184"/>
                        </scope>
                        <scope line="188"/>
                    </scope>
                </scope>
                <scope line="196"/>
                <scope line="203">
                    <declaration name="percentComplete" type="double" line="204"/>
                    <declaration name="offset" type="int" line="205"/>
                    <declaration name="clip" type="Shape" line="206"/>
                    <scope line="208">
                        <scope line="209"/>
                    </scope>
                    <scope line="213">
                        <scope line="214"/>
                    </scope>
                </scope>
                <scope line="220"/>
                <scope line="223"/>
            </method>
            <javadoc line="227">
                Paints the component&apos;s text.                
                <param>
                    context context for the component being painted                    
                </param>
                <param>
                    g {@code Graphics} object used for painting                    
                </param>
                <param>
                    title the text to paint                    
                </param>
            </javadoc>
            <method name="paintText" type="void" line="233">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="title" type="String"/>
                </params>
                <scope line="234">
                    <declaration name="style" type="SynthStyle" line="235"/>
                    <declaration name="font" type="Font" line="236"/>
                    <declaration name="fm" type="FontMetrics" line="237"/>
                    <declaration name="strLength" type="int" line="238"/>
                    <declaration name="bounds" type="Rectangle" line="239"/>
                    <scope line="240">
                        <declaration name="g2" type="Graphics2D" line="241"/>
                        <declaration name="textPos" type="Point" line="242"/>
                        <declaration name="rotation" type="AffineTransform" line="243"/>
                        <scope line="244"/>
                        <scope line="248"/>
                        <scope line="252"/>
                    </scope>
                    <scope line="260">
                        <declaration name="textRect" type="Rectangle" line="261"/>
                        <scope line="262"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="271">
                @inheritDoc                
            </javadoc>
            <method name="paintBorder" type="void" line="274">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <javadoc line="277">
                @inheritDoc                
            </javadoc>
            <method name="propertyChange" type="void" line="280">
                <params>
                    <param name="e" type="PropertyChangeEvent"/>
                </params>
                <scope line="281"/>
            </method>
            <javadoc line="285">
                @inheritDoc                
            </javadoc>
            <method name="getPreferredSize" type="Dimension" line="288">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="size" type="Dimension" line="289"/>
                <declaration name="border" type="Insets" line="290"/>
                <declaration name="fontSizer" type="FontMetrics" line="291"/>
                <declaration name="progString" type="String" line="292"/>
                <declaration name="stringHeight" type="int" line="293"/>
                <scope line="294">
                    <scope line="296">
                        <scope line="297"/>
                        <declaration name="stringWidth" type="int" line="300"/>
                        <scope line="301"/>
                    </scope>
                </scope>
                <scope line="306">
                    <scope line="308">
                        <scope line="309"/>
                        <declaration name="stringWidth" type="int" line="312"/>
                        <scope line="313"/>
                    </scope>
                </scope>
                <declaration name="scaleKey" type="String" line="318"/>
                <scope line="319">
                    <scope line="320"/>
                    <scope line="324"/>
                    <scope line="328"/>
                </scope>
            </method>
        </class>
    </source>