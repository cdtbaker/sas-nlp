<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.nimbus">
        <import package="javax.swing.Painter"/>
        <import package="sun.swing.plaf.synth.SynthIcon"/>
        <import package="javax.swing.plaf.synth.SynthContext"/>
        <import package="javax.swing"/>
        <import package="java.awt"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="javax.swing.plaf.UIResource"/>
        <class name="NimbusIcon" line="36">
            <extends class="SynthIcon"/>
            <javadoc line="36">
                An icon that delegates to a painter.                
                <author>
                    rbair                    
                </author>
            </javadoc>
            <declaration name="width" type="int" line="41"/>
            <declaration name="height" type="int" line="42"/>
            <declaration name="prefix" type="String" line="43"/>
            <declaration name="key" type="String" line="44"/>
            <method name="NimbusIcon" type="constructor" line="46">
                <params>
                    <param name="prefix" type="String"/>
                    <param name="key" type="String"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <method name="paintIcon" type="void" line="55">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <comment line="68">
                    translatex and translatey are additional translations that                    
                </comment>
                <comment line="69">
                    must occur on the graphics context when rendering a toolbar                    
                </comment>
                <comment line="70">
                    icon                    
                </comment>
                <comment line="78">
                    we only do the +1 hack for UIResource borders, assuming                    
                </comment>
                <comment line="79">
                    that the border is probably going to be our border                    
                </comment>
                <comment line="112">
                    use image if we are printing to a Java 1.1 PrintGraphics as                    
                </comment>
                <comment line="113">
                    it is not a instance of Graphics2D                    
                </comment>
                <declaration name="painter" type="Painter" line="56"/>
                <scope line="57"/>
                <scope line="60"/>
                <scope line="64">
                    <declaration name="c" type="JComponent" line="65"/>
                    <declaration name="rotate" type="boolean" line="66"/>
                    <declaration name="flip" type="boolean" line="67"/>
                    <declaration name="translatex" type="int" line="71"/>
                    <declaration name="translatey" type="int" line="72"/>
                    <scope line="73">
                        <declaration name="toolbar" type="JToolBar" line="74"/>
                        <declaration name="o" type="Object" line="77"/>
                        <scope line="80">
                            <scope line="81"/>
                            <scope line="83"/>
                        </scope>
                    </scope>
                    <scope line="87"/>
                    <scope line="90">
                        <declaration name="gfx" type="Graphics2D" line="91"/>
                        <scope line="94"/>
                        <scope line="100"/>
                        <scope line="106"/>
                    </scope>
                    <scope line="111">
                        <declaration name="img" type="BufferedImage" line="114"/>
                        <declaration name="gfx" type="Graphics2D" line="116"/>
                        <scope line="117"/>
                        <scope line="121"/>
                        <scope line="125"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="135">
                Implements the standard Icon interface&apos;s paintIcon method as the standard
                  synth stub passes null for the context and this will cause us to not
                  paint any thing, so we override here so that we can paint the enabled
                  state if no synth context is available                
            </javadoc>
            <method name="paintIcon" type="void" line="142">
                <params>
                    <param name="c" type="Component"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <declaration name="painter" type="Painter" line="143"/>
                <scope line="144">
                    <declaration name="jc" type="JComponent" line="145"/>
                    <declaration name="gfx" type="Graphics2D" line="146"/>
                </scope>
            </method>
            <method name="getIconWidth" type="int" line="154">
                <params>
                    <param name="context" type="SynthContext"/>
                </params>
                <comment line="160">
                    we only do the -1 hack for UIResource borders, assuming                    
                </comment>
                <comment line="161">
                    that the border is probably going to be our border                    
                </comment>
                <scope line="155"/>
                <declaration name="c" type="JComponent" line="158"/>
                <scope line="159">
                    <scope line="162"/>
                    <scope line="164"/>
                </scope>
                <scope line="167"/>
            </method>
            <method name="getIconHeight" type="int" line="173">
                <params>
                    <param name="context" type="SynthContext"/>
                </params>
                <comment line="181">
                    we only do the -1 hack for UIResource borders, assuming                    
                </comment>
                <comment line="182">
                    that the border is probably going to be our border                    
                </comment>
                <scope line="174"/>
                <declaration name="c" type="JComponent" line="177"/>
                <scope line="178">
                    <declaration name="toolbar" type="JToolBar" line="179"/>
                    <scope line="180">
                        <scope line="183"/>
                        <scope line="185"/>
                    </scope>
                    <scope line="188"/>
                </scope>
                <scope line="191"/>
            </method>
            <javadoc line="196">
                Scale a size based on the &quot;JComponent.sizeVariant&quot; client property of the
                  component that is using this icon                
                <param>
                    context The synthContext to get the component from                    
                </param>
                <param>
                    size The size to scale                    
                </param>
                <return>
                    The scaled size or original if "JComponent.sizeVariant" is not
                      set                    
                </return>
            </javadoc>
            <method name="scale" type="int" line="205">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="size" type="int"/>
                </params>
                <comment line="209">
                    The key &quot;JComponent.sizeVariant&quot; is used to match Apple&apos;s LAF                    
                </comment>
                <comment line="218">
                    mini is not quite as small for icons as full mini is                    
                </comment>
                <comment line="219">
                    just too tiny                    
                </comment>
                <scope line="206"/>
                <declaration name="scaleKey" type="String" line="210"/>
                <scope line="212">
                    <scope line="213"/>
                    <scope line="215"/>
                    <scope line="217"/>
                </scope>
            </method>
        </class>
    </source>