<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.synth">
        <import package="javax.swing"/>
        <import package="java.awt.Graphics"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.plaf.basic"/>
        <class name="SynthMenuBarUI" line="34">
            <extends class="BasicMenuBarUI"/>
            <implements interface="PropertyChangeListener"/>
            <implements interface="SynthUI"/>
            <javadoc line="34">
                Provides the Synth L&amp;F UI delegate for{@link javax.swing.JMenuBar}.                
                <author>
                    Scott Violet                    
                </author>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="style" type="SynthStyle" line="43"/>
            <javadoc line="45">
                Creates a new UI object for the given component.                
                <param>
                    x component to create UI object for                    
                </param>
                <return>
                    the UI object                    
                </return>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="51">
                <params>
                    <param name="x" type="JComponent"/>
                </params>
            </method>
            <javadoc line="55">
                @inheritDoc                
            </javadoc>
            <method name="installDefaults" type="void" line="59">
                <scope line="61"/>
            </method>
            <javadoc line="67">
                @inheritDoc                
            </javadoc>
            <method name="installListeners" type="void" line="71"/>
            <method name="updateStyle" type="void" line="76">
                <params>
                    <param name="c" type="JMenuBar"/>
                </params>
                <declaration name="context" type="SynthContext" line="77"/>
                <declaration name="oldStyle" type="SynthStyle" line="78"/>
                <scope line="80">
                    <scope line="81"/>
                </scope>
            </method>
            <javadoc line="89">
                @inheritDoc                
            </javadoc>
            <method name="uninstallDefaults" type="void" line="93">
                <declaration name="context" type="SynthContext" line="94"/>
            </method>
            <javadoc line="101">
                @inheritDoc                
            </javadoc>
            <method name="uninstallListeners" type="void" line="105"/>
            <javadoc line="110">
                @inheritDoc                
            </javadoc>
            <method name="getContext" type="SynthContext" line="114">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="118">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="state" type="int"/>
                </params>
            </method>
            <method name="getComponentState" type="int" line="123">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="127">
                Notifies this UI delegate to repaint the specified component.
                  This method paints the component background, then calls
                  the {@link #paint(SynthContext,Graphics)} method.
                  &lt;p&gt;In general, this method does not need to be overridden by subclasses.
                  All Look and Feel rendering code should reside in the {@code paint} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="update" type="void" line="140">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="141"/>
            </method>
            <javadoc line="150">
                Paints the specified component according to the Look and Feel.
                  &lt;p&gt;This method is not used by Synth Look and Feel.
                  Painting is handled by the {@link #paint(SynthContext,Graphics)} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="160">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="161"/>
            </method>
            <javadoc line="167">
                Paints the specified component. This implementation does nothing.                
                <param>
                    context context for the component being painted                    
                </param>
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <see>
                    #update(Graphics,JComponent)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="174">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                </params>
            </method>
            <javadoc line="177">
                @inheritDoc                
            </javadoc>
            <method name="paintBorder" type="void" line="182">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <javadoc line="186">
                @inheritDoc                
            </javadoc>
            <method name="propertyChange" type="void" line="190">
                <params>
                    <param name="e" type="PropertyChangeEvent"/>
                </params>
                <scope line="191"/>
            </method>
        </class>
    </source>