<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.basic">
        <import package="sun.swing.DefaultLookup"/>
        <import package="sun.swing.UIAction"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.beans"/>
        <import package="javax.swing"/>
        <import package="javax.swing.event"/>
        <import package="javax.swing.plaf.ActionMapUIResource"/>
        <import package="javax.swing.plaf.ButtonUI"/>
        <import package="javax.swing.plaf.ComponentInputMapUIResource"/>
        <class name="BasicButtonListener" line="39">
            <implements interface="MouseListener"/>
            <implements interface="MouseMotionListener"/>
            <implements interface="FocusListener"/>
            <implements interface="ChangeListener"/>
            <implements interface="PropertyChangeListener"/>
            <javadoc line="39">
                Button Listener                
                <author>
                    Jeff Dinkins                    
                </author>
                <author>
                    Arnaud Weber (keyboard UI support)                    
                </author>
            </javadoc>
            <declaration name="lastPressedTimestamp" type="long" line="49"/>
            <declaration name="shouldDiscardRelease" type="boolean" line="50"/>
            <javadoc line="52">
                Populates Buttons actions.                
            </javadoc>
            <method name="loadActionMap" type="void" line="55">
                <params>
                    <param name="map" type="LazyActionMap"/>
                </params>
            </method>
            <method name="BasicButtonListener" type="constructor" line="61">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
            </method>
            <method name="propertyChange" type="void" line="64">
                <params>
                    <param name="e" type="PropertyChangeEvent"/>
                </params>
                <declaration name="prop" type="String" line="65"/>
                <scope line="66"/>
                <scope line="69"/>
                <scope line="73">
                    <declaration name="b" type="AbstractButton" line="74"/>
                </scope>
            </method>
            <method name="checkOpacity" type="void" line="79">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
            </method>
            <javadoc line="83">
                Register default key actions: pressing space to &quot;click&quot; a
                  button and registring the keyboard mnemonic (if any).                
            </javadoc>
            <method name="installKeyboardActions" type="void" line="87">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <comment line="90">
                    Update the mnemonic binding.                    
                </comment>
                <declaration name="b" type="AbstractButton" line="88"/>
                <declaration name="km" type="InputMap" line="95"/>
            </method>
            <javadoc line="100">
                Unregister&apos;s default key actions                
            </javadoc>
            <method name="uninstallKeyboardActions" type="void" line="103">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="110">
                Returns the InputMap for condition &lt;code&gt;condition&lt;/code&gt;. Called as
                  part of &lt;code&gt;installKeyboardActions&lt;/code&gt;.                
            </javadoc>
            <method name="getInputMap" type="InputMap" line="114">
                <params>
                    <param name="condition" type="int"/>
                    <param name="c" type="JComponent"/>
                </params>
                <scope line="115">
                    <declaration name="ui" type="BasicButtonUI" line="116"/>
                    <scope line="118"/>
                </scope>
            </method>
            <javadoc line="126">
                Resets the binding for the mnemonic in the WHEN_IN_FOCUSED_WINDOW
                  UI InputMap.                
            </javadoc>
            <method name="updateMnemonicBinding" type="void" line="130">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
                <declaration name="m" type="int" line="131"/>
                <scope line="132">
                    <declaration name="map" type="InputMap" line="133"/>
                    <scope line="136"/>
                </scope>
                <scope line="148">
                    <declaration name="map" type="InputMap" line="149"/>
                    <scope line="151"/>
                </scope>
            </method>
            <method name="stateChanged" type="void" line="157">
                <params>
                    <param name="e" type="ChangeEvent"/>
                </params>
                <declaration name="b" type="AbstractButton" line="158"/>
            </method>
            <method name="focusGained" type="void" line="162">
                <params>
                    <param name="e" type="FocusEvent"/>
                </params>
                <declaration name="b" type="AbstractButton" line="163"/>
                <scope line="164">
                    <declaration name="root" type="JRootPane" line="165"/>
                    <scope line="166">
                        <declaration name="ui" type="BasicButtonUI" line="167"/>
                        <scope line="171"/>
                    </scope>
                </scope>
            </method>
            <method name="focusLost" type="void" line="181">
                <params>
                    <param name="e" type="FocusEvent"/>
                </params>
                <declaration name="b" type="AbstractButton" line="182"/>
                <declaration name="root" type="JRootPane" line="183"/>
                <scope line="184">
                    <declaration name="initialDefault" type="JButton" line="185"/>
                    <scope line="186">
                        <declaration name="ui" type="BasicButtonUI" line="187"/>
                        <scope line="191"/>
                    </scope>
                </scope>
                <declaration name="model" type="ButtonModel" line="197"/>
            </method>
            <method name="mouseMoved" type="void" line="203">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <method name="mouseDragged" type="void" line="207">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <method name="mouseClicked" type="void" line="210">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <method name="mousePressed" type="void" line="213">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
                <comment line="229">
                    Disabled buttons ignore all input...                    
                </comment>
                <comment line="233">
                    button not armed, should be                    
                </comment>
                <scope line="214">
                    <declaration name="b" type="AbstractButton" line="215"/>
                    <scope line="217">
                        <declaration name="multiClickThreshhold" type="long" line="218"/>
                        <declaration name="lastTime" type="long" line="219"/>
                        <declaration name="currentTime" type="long" line="220"/>
                        <scope line="221"/>
                        <declaration name="model" type="ButtonModel" line="226"/>
                        <scope line="227"/>
                        <scope line="231"/>
                        <scope line="236"/>
                    </scope>
                </scope>
            </method>
            <method name="mouseReleased" type="void" line="243">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
                <comment line="246">
                    Support for multiClickThreshhold                    
                </comment>
                <scope line="244">
                    <scope line="246"/>
                    <declaration name="b" type="AbstractButton" line="250"/>
                    <declaration name="model" type="ButtonModel" line="251"/>
                </scope>
            </method>
            <method name="mouseEntered" type="void" line="257">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
                <declaration name="b" type="AbstractButton" line="258"/>
                <declaration name="model" type="ButtonModel" line="259"/>
                <scope line="260"/>
            </method>
            <method name="mouseExited" type="void" line="267">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
                <declaration name="b" type="AbstractButton" line="268"/>
                <declaration name="model" type="ButtonModel" line="269"/>
                <scope line="270"/>
            </method>
            <class name="Actions" line="277">
                <extends class="UIAction"/>
                <javadoc line="277">
                    Actions for Buttons. Two types of action are supported:
                      pressed: Moves the button to a pressed state
                      released: Disarms the button.                    
                </javadoc>
                <declaration name="PRESS" type="String" line="283"/>
                <declaration name="RELEASE" type="String" line="284"/>
                <method name="Actions" type="constructor" line="286">
                    <params>
                        <param name="name" type="String"/>
                    </params>
                </method>
                <method name="actionPerformed" type="void" line="290">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                    <declaration name="b" type="AbstractButton" line="291"/>
                    <declaration name="key" type="String" line="292"/>
                    <scope line="293">
                        <declaration name="model" type="ButtonModel" line="294"/>
                        <scope line="297"/>
                    </scope>
                    <scope line="301">
                        <declaration name="model" type="ButtonModel" line="302"/>
                    </scope>
                </method>
                <method name="isEnabled" type="boolean" line="308">
                    <params>
                        <param name="sender" type="Object"/>
                    </params>
                    <scope line="310"/>
                    <scope line="312"/>
                </method>
            </class>
        </class>
    </source>