<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.synth">
        <import package="java.awt"/>
        <import package="javax.swing"/>
        <import package="javax.swing.text.JTextComponent"/>
        <import package="javax.swing.border"/>
        <import package="javax.swing.plaf.UIResource"/>
        <class name="SynthBorder" line="33">
            <extends class="AbstractBorder"/>
            <implements interface="UIResource"/>
            <javadoc line="33">
                SynthBorder is a border that delegates to a Painter. The Insets
                  are determined at construction time.                
                <author>
                    Scott Violet                    
                </author>
            </javadoc>
            <declaration name="ui" type="SynthUI" line="40"/>
            <declaration name="insets" type="Insets" line="41"/>
            <method name="SynthBorder" type="constructor" line="43">
                <params>
                    <param name="ui" type="SynthUI"/>
                    <param name="insets" type="Insets"/>
                </params>
            </method>
            <method name="SynthBorder" type="constructor" line="48">
                <params>
                    <param name="ui" type="SynthUI"/>
                </params>
            </method>
            <method name="paintBorder" type="void" line="53">
                <params>
                    <param name="c" type="Component"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="jc" type="JComponent" line="54"/>
                <declaration name="context" type="SynthContext" line="55"/>
                <declaration name="style" type="SynthStyle" line="56"/>
                <scope line="57"/>
            </method>
            <javadoc line="66">
                Reinitializes the insets parameter with this Border&apos;s current Insets.                
                <param>
                    c the component for which this border insets value applies                    
                </param>
                <param>
                    insets the object to be reinitialized                    
                </param>
                <return>
                    the &lt;code&gt;insets&lt;/code&gt; object                    
                </return>
            </javadoc>
            <method name="getBorderInsets" type="Insets" line="72">
                <params>
                    <param name="c" type="Component"/>
                    <param name="insets" type="Insets"/>
                </params>
                <scope line="73">
                    <scope line="74"/>
                    <scope line="78"/>
                </scope>
                <scope line="85"/>
                <scope line="88"/>
                <scope line="91">
                    <declaration name="region" type="Region" line="92"/>
                    <declaration name="margin" type="Insets" line="93"/>
                    <scope line="101"/>
                    <scope line="110"/>
                    <scope line="113"/>
                    <scope line="116"/>
                    <scope line="119"/>
                </scope>
            </method>
            <javadoc line="129">
                This default implementation returns false.                
                <return>
                    false                    
                </return>
            </javadoc>
            <method name="isBorderOpaque" type="boolean" line="133"/>
        </class>
    </source>