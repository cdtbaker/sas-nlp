<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.metal">
        <import package="javax.swing"/>
        <import package="javax.swing.plaf.UIResource"/>
        <import package="java.awt"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.io.Serializable"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.Vector"/>
        <import package="sun.swing.CachedPainter"/>
        <class name="MetalIconFactory" line="10">
            <implements interface="Serializable"/>
            <javadoc line="10">
                Factory object that vends &lt;code&gt;Icon&lt;/code&gt;s for
                  the Java&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt; look and feel (Metal).
                  These icons are used extensively in Metal via the defaults mechanism.
                  While other look and feels often use GIFs for icons, creating icons
                  in code facilitates switching to other themes.
                  &lt;p&gt;
                  Each method in this class returns
                  either an &lt;code&gt;Icon&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;,
                  where &lt;code&gt;null&lt;/code&gt; implies that there is no default icon.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases. The current serialization support is
                  appropriate for short term storage or RMI between applications running
                  the same version of Swing.  As of 1.4, support for long term storage
                  of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                  has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                  Please see {@link java.beans.XMLEncoder}.                
                <author>
                    Michael C. Albers                    
                </author>
            </javadoc>
            <declaration name="fileChooserDetailViewIcon" type="Icon" line="32"/>
            <declaration name="fileChooserHomeFolderIcon" type="Icon" line="33"/>
            <declaration name="fileChooserListViewIcon" type="Icon" line="34"/>
            <declaration name="fileChooserNewFolderIcon" type="Icon" line="35"/>
            <declaration name="fileChooserUpFolderIcon" type="Icon" line="36"/>
            <declaration name="internalFrameAltMaximizeIcon" type="Icon" line="37"/>
            <declaration name="internalFrameCloseIcon" type="Icon" line="38"/>
            <declaration name="internalFrameDefaultMenuIcon" type="Icon" line="39"/>
            <declaration name="internalFrameMaximizeIcon" type="Icon" line="40"/>
            <declaration name="internalFrameMinimizeIcon" type="Icon" line="41"/>
            <declaration name="radioButtonIcon" type="Icon" line="42"/>
            <declaration name="treeComputerIcon" type="Icon" line="43"/>
            <declaration name="treeFloppyDriveIcon" type="Icon" line="44"/>
            <declaration name="treeHardDriveIcon" type="Icon" line="45"/>
            <declaration name="menuArrowIcon" type="Icon" line="46"/>
            <declaration name="menuItemArrowIcon" type="Icon" line="47"/>
            <declaration name="checkBoxMenuItemIcon" type="Icon" line="48"/>
            <declaration name="radioButtonMenuItemIcon" type="Icon" line="49"/>
            <declaration name="checkBoxIcon" type="Icon" line="50"/>
            <declaration name="oceanHorizontalSliderThumb" type="Icon" line="51"/>
            <declaration name="oceanVerticalSliderThumb" type="Icon" line="52"/>
            <declaration name="DARK" type="boolean" line="53"/>
            <declaration name="LIGHT" type="boolean" line="54"/>
            <method name="getFileChooserDetailViewIcon" type="Icon" line="55">
                <scope line="56"/>
            </method>
            <method name="getFileChooserHomeFolderIcon" type="Icon" line="61">
                <scope line="62"/>
            </method>
            <method name="getFileChooserListViewIcon" type="Icon" line="67">
                <scope line="68"/>
            </method>
            <method name="getFileChooserNewFolderIcon" type="Icon" line="73">
                <scope line="74"/>
            </method>
            <method name="getFileChooserUpFolderIcon" type="Icon" line="79">
                <scope line="80"/>
            </method>
            <method name="getInternalFrameAltMaximizeIcon" type="Icon" line="85">
                <params>
                    <param name="size" type="int"/>
                </params>
            </method>
            <method name="getInternalFrameCloseIcon" type="Icon" line="88">
                <params>
                    <param name="size" type="int"/>
                </params>
            </method>
            <method name="getInternalFrameDefaultMenuIcon" type="Icon" line="91">
                <scope line="92"/>
            </method>
            <method name="getInternalFrameMaximizeIcon" type="Icon" line="97">
                <params>
                    <param name="size" type="int"/>
                </params>
            </method>
            <method name="getInternalFrameMinimizeIcon" type="Icon" line="100">
                <params>
                    <param name="size" type="int"/>
                </params>
            </method>
            <method name="getRadioButtonIcon" type="Icon" line="103">
                <scope line="104"/>
            </method>
            <javadoc line="109">
                Returns a checkbox icon.                
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="getCheckBoxIcon" type="Icon" line="113">
                <scope line="114"/>
            </method>
            <method name="getTreeComputerIcon" type="Icon" line="119">
                <scope line="120"/>
            </method>
            <method name="getTreeFloppyDriveIcon" type="Icon" line="125">
                <scope line="126"/>
            </method>
            <method name="getTreeFolderIcon" type="Icon" line="131"/>
            <method name="getTreeHardDriveIcon" type="Icon" line="134">
                <scope line="135"/>
            </method>
            <method name="getTreeLeafIcon" type="Icon" line="140"/>
            <method name="getTreeControlIcon" type="Icon" line="143">
                <params>
                    <param name="isCollapsed" type="boolean"/>
                </params>
            </method>
            <method name="getMenuArrowIcon" type="Icon" line="146">
                <scope line="147"/>
            </method>
            <javadoc line="152">
                Returns an icon to be used by &lt;code&gt;JCheckBoxMenuItem&lt;/code&gt;.                
                <return>
                    the default icon for check box menu items,
                      or &lt;code&gt;null&lt;/code&gt; if no default exists                    
                </return>
            </javadoc>
            <method name="getMenuItemCheckIcon" type="Icon" line="157"/>
            <method name="getMenuItemArrowIcon" type="Icon" line="160">
                <scope line="161"/>
            </method>
            <method name="getCheckBoxMenuItemIcon" type="Icon" line="166">
                <scope line="167"/>
            </method>
            <method name="getRadioButtonMenuItemIcon" type="Icon" line="172">
                <scope line="173"/>
            </method>
            <method name="getHorizontalSliderThumbIcon" type="Icon" line="178">
                <scope line="179">
                    <scope line="180"/>
                </scope>
            </method>
            <method name="getVerticalSliderThumbIcon" type="Icon" line="187">
                <scope line="188">
                    <scope line="189"/>
                </scope>
            </method>
            <class name="FileChooserDetailViewIcon" line="196">
                <implements interface="Icon"/>
                <implements interface="UIResource"/>
                <implements interface="Serializable"/>
                <method name="paintIcon" type="void" line="197">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                </method>
                <method name="getIconWidth" type="int" line="218"/>
                <method name="getIconHeight" type="int" line="221"/>
            </class>
            <class name="FileChooserHomeFolderIcon" line="225">
                <implements interface="Icon"/>
                <implements interface="UIResource"/>
                <implements interface="Serializable"/>
                <method name="paintIcon" type="void" line="226">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                </method>
                <method name="getIconWidth" type="int" line="252"/>
                <method name="getIconHeight" type="int" line="255"/>
            </class>
            <class name="FileChooserListViewIcon" line="259">
                <implements interface="Icon"/>
                <implements interface="UIResource"/>
                <implements interface="Serializable"/>
                <method name="paintIcon" type="void" line="260">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                </method>
                <method name="getIconWidth" type="int" line="295"/>
                <method name="getIconHeight" type="int" line="298"/>
            </class>
            <class name="FileChooserNewFolderIcon" line="302">
                <implements interface="Icon"/>
                <implements interface="UIResource"/>
                <implements interface="Serializable"/>
                <method name="paintIcon" type="void" line="303">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                </method>
                <method name="getIconWidth" type="int" line="322"/>
                <method name="getIconHeight" type="int" line="325"/>
            </class>
            <class name="FileChooserUpFolderIcon" line="329">
                <implements interface="Icon"/>
                <implements interface="UIResource"/>
                <implements interface="Serializable"/>
                <method name="paintIcon" type="void" line="330">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                </method>
                <method name="getIconWidth" type="int" line="354"/>
                <method name="getIconHeight" type="int" line="357"/>
            </class>
            <class name="PaletteCloseIcon" line="361">
                <implements interface="Icon"/>
                <implements interface="UIResource"/>
                <implements interface="Serializable"/>
                <javadoc line="361">
                    Defines an icon for Palette close                    
                    <since>
                        1.3                        
                    </since>
                </javadoc>
                <declaration name="iconSize" type="int" line="366"/>
                <method name="paintIcon" type="void" line="367">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <declaration name="parentButton" type="JButton" line="368"/>
                    <declaration name="buttonModel" type="ButtonModel" line="369"/>
                    <declaration name="back" type="Color" line="370"/>
                    <declaration name="highlight" type="Color" line="371"/>
                    <declaration name="shadow" type="Color" line="372"/>
                    <scope line="373"/>
                    <scope line="376"/>
                </method>
                <method name="getIconWidth" type="int" line="393"/>
                <method name="getIconHeight" type="int" line="396"/>
            </class>
            <class name="InternalFrameCloseIcon" line="400">
                <implements interface="Icon"/>
                <implements interface="UIResource"/>
                <implements interface="Serializable"/>
                <declaration name="iconSize" type="int" line="401"/>
                <method name="InternalFrameCloseIcon" type="constructor" line="402">
                    <params>
                        <param name="size" type="int"/>
                    </params>
                </method>
                <method name="paintIcon" type="void" line="405">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <declaration name="parentButton" type="JButton" line="406"/>
                    <declaration name="buttonModel" type="ButtonModel" line="407"/>
                    <declaration name="backgroundColor" type="Color" line="408"/>
                    <declaration name="internalBackgroundColor" type="Color" line="409"/>
                    <declaration name="mainItemColor" type="Color" line="410"/>
                    <declaration name="darkHighlightColor" type="Color" line="411"/>
                    <declaration name="xLightHighlightColor" type="Color" line="412"/>
                    <declaration name="boxLightHighlightColor" type="Color" line="413"/>
                    <scope line="414">
                        <scope line="418"/>
                    </scope>
                    <scope line="424"/>
                    <declaration name="oneHalf" type="int" line="429"/>
                </method>
                <method name="getIconWidth" type="int" line="460"/>
                <method name="getIconHeight" type="int" line="463"/>
            </class>
            <class name="InternalFrameAltMaximizeIcon" line="467">
                <implements interface="Icon"/>
                <implements interface="UIResource"/>
                <implements interface="Serializable"/>
                <declaration name="iconSize" type="int" line="468"/>
                <method name="InternalFrameAltMaximizeIcon" type="constructor" line="469">
                    <params>
                        <param name="size" type="int"/>
                    </params>
                </method>
                <method name="paintIcon" type="void" line="472">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <declaration name="parentButton" type="JButton" line="473"/>
                    <declaration name="buttonModel" type="ButtonModel" line="474"/>
                    <declaration name="backgroundColor" type="Color" line="475"/>
                    <declaration name="internalBackgroundColor" type="Color" line="476"/>
                    <declaration name="mainItemColor" type="Color" line="477"/>
                    <declaration name="darkHighlightColor" type="Color" line="478"/>
                    <declaration name="ulLightHighlightColor" type="Color" line="479"/>
                    <declaration name="lrLightHighlightColor" type="Color" line="480"/>
                    <scope line="481">
                        <scope line="485"/>
                    </scope>
                    <scope line="491"/>
                </method>
                <method name="getIconWidth" type="int" line="536"/>
                <method name="getIconHeight" type="int" line="539"/>
            </class>
            <class name="InternalFrameDefaultMenuIcon" line="543">
                <implements interface="Icon"/>
                <implements interface="UIResource"/>
                <implements interface="Serializable"/>
                <method name="paintIcon" type="void" line="544">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <declaration name="windowBodyColor" type="Color" line="545"/>
                    <declaration name="titleColor" type="Color" line="546"/>
                    <declaration name="edgeColor" type="Color" line="547"/>
                </method>
                <method name="getIconWidth" type="int" line="570"/>
                <method name="getIconHeight" type="int" line="573"/>
            </class>
            <class name="InternalFrameMaximizeIcon" line="577">
                <implements interface="Icon"/>
                <implements interface="UIResource"/>
                <implements interface="Serializable"/>
                <declaration name="iconSize" type="int" line="578"/>
                <method name="InternalFrameMaximizeIcon" type="constructor" line="579">
                    <params>
                        <param name="size" type="int"/>
                    </params>
                </method>
                <method name="paintIcon" type="void" line="582">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <declaration name="parentButton" type="JButton" line="583"/>
                    <declaration name="buttonModel" type="ButtonModel" line="584"/>
                    <declaration name="backgroundColor" type="Color" line="585"/>
                    <declaration name="internalBackgroundColor" type="Color" line="586"/>
                    <declaration name="mainItemColor" type="Color" line="587"/>
                    <declaration name="darkHighlightColor" type="Color" line="588"/>
                    <declaration name="ulLightHighlightColor" type="Color" line="589"/>
                    <declaration name="lrLightHighlightColor" type="Color" line="590"/>
                    <scope line="591">
                        <scope line="595"/>
                    </scope>
                    <scope line="601"/>
                </method>
                <method name="getIconWidth" type="int" line="641"/>
                <method name="getIconHeight" type="int" line="644"/>
            </class>
            <class name="InternalFrameMinimizeIcon" line="648">
                <implements interface="Icon"/>
                <implements interface="UIResource"/>
                <implements interface="Serializable"/>
                <declaration name="iconSize" type="int" line="649"/>
                <method name="InternalFrameMinimizeIcon" type="constructor" line="650">
                    <params>
                        <param name="size" type="int"/>
                    </params>
                </method>
                <method name="paintIcon" type="void" line="653">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <declaration name="parentButton" type="JButton" line="654"/>
                    <declaration name="buttonModel" type="ButtonModel" line="655"/>
                    <declaration name="backgroundColor" type="Color" line="656"/>
                    <declaration name="internalBackgroundColor" type="Color" line="657"/>
                    <declaration name="mainItemColor" type="Color" line="658"/>
                    <declaration name="darkHighlightColor" type="Color" line="659"/>
                    <declaration name="ulLightHighlightColor" type="Color" line="660"/>
                    <declaration name="lrLightHighlightColor" type="Color" line="661"/>
                    <scope line="662">
                        <scope line="666"/>
                    </scope>
                    <scope line="672"/>
                </method>
                <method name="getIconWidth" type="int" line="710"/>
                <method name="getIconHeight" type="int" line="713"/>
            </class>
            <class name="CheckBoxIcon" line="717">
                <implements interface="Icon"/>
                <implements interface="UIResource"/>
                <implements interface="Serializable"/>
                <method name="getControlSize" type="int" line="718"/>
                <method name="paintOceanIcon" type="void" line="721">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <declaration name="model" type="ButtonModel" line="722"/>
                    <declaration name="w" type="int" line="724"/>
                    <declaration name="h" type="int" line="725"/>
                    <scope line="726">
                        <scope line="727"/>
                        <scope line="736"/>
                        <scope line="744"/>
                    </scope>
                    <scope line="751"/>
                    <scope line="756"/>
                </method>
                <method name="paintIcon" type="void" line="760">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <scope line="761"/>
                    <declaration name="model" type="ButtonModel" line="765"/>
                    <declaration name="controlSize" type="int" line="766"/>
                    <scope line="767">
                        <scope line="768"/>
                        <scope line="773"/>
                    </scope>
                    <scope line="778"/>
                    <scope line="782"/>
                </method>
                <method name="drawCheck" type="void" line="786">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <declaration name="controlSize" type="int" line="787"/>
                </method>
                <method name="getIconWidth" type="int" line="792"/>
                <method name="getIconHeight" type="int" line="795"/>
            </class>
            <class name="RadioButtonIcon" line="799">
                <implements interface="Icon"/>
                <implements interface="UIResource"/>
                <implements interface="Serializable"/>
                <method name="paintOceanIcon" type="void" line="800">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <declaration name="model" type="ButtonModel" line="801"/>
                    <declaration name="enabled" type="boolean" line="802"/>
                    <declaration name="pressed" type="boolean" line="803"/>
                    <declaration name="rollover" type="boolean" line="804"/>
                    <scope line="806"/>
                    <scope line="814">
                        <scope line="815"/>
                        <scope line="818"/>
                    </scope>
                    <scope line="827"/>
                    <scope line="830"/>
                    <scope line="845"/>
                    <scope line="851"/>
                    <scope line="862">
                        <scope line="863"/>
                        <scope line="866"/>
                    </scope>
                </method>
                <method name="paintIcon" type="void" line="877">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <scope line="878"/>
                    <declaration name="rb" type="JRadioButton" line="882"/>
                    <declaration name="model" type="ButtonModel" line="883"/>
                    <declaration name="drawDot" type="boolean" line="884"/>
                    <declaration name="background" type="Color" line="885"/>
                    <declaration name="dotColor" type="Color" line="886"/>
                    <declaration name="shadow" type="Color" line="887"/>
                    <declaration name="darkCircle" type="Color" line="888"/>
                    <declaration name="whiteInnerLeftArc" type="Color" line="889"/>
                    <declaration name="whiteOuterRightArc" type="Color" line="890"/>
                    <declaration name="interiorColor" type="Color" line="891"/>
                    <scope line="892"/>
                    <scope line="896"/>
                    <scope line="931"/>
                </method>
                <method name="getIconWidth" type="int" line="941"/>
                <method name="getIconHeight" type="int" line="944"/>
            </class>
            <class name="TreeComputerIcon" line="948">
                <implements interface="Icon"/>
                <implements interface="UIResource"/>
                <implements interface="Serializable"/>
                <method name="paintIcon" type="void" line="949">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                </method>
                <method name="getIconWidth" type="int" line="972"/>
                <method name="getIconHeight" type="int" line="975"/>
            </class>
            <class name="TreeHardDriveIcon" line="979">
                <implements interface="Icon"/>
                <implements interface="UIResource"/>
                <implements interface="Serializable"/>
                <method name="paintIcon" type="void" line="980">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                </method>
                <method name="getIconWidth" type="int" line="1036"/>
                <method name="getIconHeight" type="int" line="1039"/>
            </class>
            <class name="TreeFloppyDriveIcon" line="1043">
                <implements interface="Icon"/>
                <implements interface="UIResource"/>
                <implements interface="Serializable"/>
                <method name="paintIcon" type="void" line="1044">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                </method>
                <method name="getIconWidth" type="int" line="1066"/>
                <method name="getIconHeight" type="int" line="1069"/>
            </class>
            <declaration name="folderIcon16Size" type="Dimension" line="1073"/>
            <class name="ImageCacher" line="1074">
                <javadoc line="1074">
                    Utility class for caching icon images.  This is necessary because
                      we need a new image whenever we are rendering into a new
                      GraphicsConfiguration, but we do not want to keep recreating icon
                      images for GC&apos;s that we have already seen (for example,
                      dragging a window back and forth between monitors on a multimon
                      system, or drawing an icon to different Components that have different
                      GC&apos;s).
                      So now whenever we create a new icon image for a given GC, we
                      cache that image with the GC for later retrieval.                    
                </javadoc>
                <declaration name="images" type="Vector&amp;lt;ImageGcPair&amp;gt;" line="1086"/>
                <declaration name="currentImageGcPair" type="ImageGcPair" line="1087"/>
                <class name="ImageGcPair" line="1088">
                    <declaration name="image" type="Image" line="1089"/>
                    <declaration name="gc" type="GraphicsConfiguration" line="1090"/>
                    <method name="ImageGcPair" type="constructor" line="1091">
                        <params>
                            <param name="image" type="Image"/>
                            <param name="gc" type="GraphicsConfiguration"/>
                        </params>
                    </method>
                    <method name="hasSameConfiguration" type="boolean" line="1095">
                        <params>
                            <param name="newGC" type="GraphicsConfiguration"/>
                        </params>
                    </method>
                </class>
                <method name="getImage" type="Image" line="1099">
                    <params>
                        <param name="newGC" type="GraphicsConfiguration"/>
                    </params>
                    <scope line="1100">
                        <scope line="1101">
                            <scope line="1102"/>
                        </scope>
                    </scope>
                </method>
                <method name="cacheImage" type="void" line="1111">
                    <params>
                        <param name="image" type="Image"/>
                        <param name="gc" type="GraphicsConfiguration"/>
                    </params>
                    <declaration name="imgGcPair" type="ImageGcPair" line="1112"/>
                </method>
            </class>
            <class name="FolderIcon16" line="1117">
                <implements interface="Icon"/>
                <implements interface="Serializable"/>
                <javadoc line="1117">
                    &lt;p&gt;
                      &lt;strong&gt;Warning:&lt;/strong&gt;
                      Serialized objects of this class will not be compatible with
                      future Swing releases. The current serialization support is
                      appropriate for short term storage or RMI between applications running
                      the same version of Swing.  As of 1.4, support for long term storage
                      of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                      has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                      Please see {@link java.beans.XMLEncoder}.                    
                </javadoc>
                <declaration name="imageCacher" type="ImageCacher" line="1129"/>
                <method name="paintIcon" type="void" line="1130">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <declaration name="gc" type="GraphicsConfiguration" line="1131"/>
                    <scope line="1132"/>
                    <declaration name="image" type="Image" line="1135"/>
                    <scope line="1136">
                        <scope line="1137"/>
                        <scope line="1140"/>
                        <declaration name="imageG" type="Graphics" line="1143"/>
                    </scope>
                </method>
                <method name="paintMe" type="void" line="1150">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                    </params>
                    <declaration name="right" type="int" line="1151"/>
                    <declaration name="bottom" type="int" line="1152"/>
                </method>
                <method name="getShift" type="int" line="1171"/>
                <method name="getAdditionalHeight" type="int" line="1174"/>
                <method name="getIconWidth" type="int" line="1177"/>
                <method name="getIconHeight" type="int" line="1180"/>
            </class>
            <class name="TreeFolderIcon" line="1184">
                <extends class="FolderIcon16"/>
                <javadoc line="1184">
                    &lt;p&gt;
                      &lt;strong&gt;Warning:&lt;/strong&gt;
                      Serialized objects of this class will not be compatible with
                      future Swing releases. The current serialization support is
                      appropriate for short term storage or RMI between applications running
                      the same version of Swing.  As of 1.4, support for long term storage
                      of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                      has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                      Please see {@link java.beans.XMLEncoder}.                    
                </javadoc>
                <method name="getShift" type="int" line="1196"/>
                <method name="getAdditionalHeight" type="int" line="1199"/>
            </class>
            <declaration name="fileIcon16Size" type="Dimension" line="1203"/>
            <class name="FileIcon16" line="1204">
                <implements interface="Icon"/>
                <implements interface="Serializable"/>
                <javadoc line="1204">
                    &lt;p&gt;
                      &lt;strong&gt;Warning:&lt;/strong&gt;
                      Serialized objects of this class will not be compatible with
                      future Swing releases. The current serialization support is
                      appropriate for short term storage or RMI between applications running
                      the same version of Swing.  As of 1.4, support for long term storage
                      of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                      has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                      Please see {@link java.beans.XMLEncoder}.                    
                </javadoc>
                <declaration name="imageCacher" type="ImageCacher" line="1216"/>
                <method name="paintIcon" type="void" line="1217">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <declaration name="gc" type="GraphicsConfiguration" line="1218"/>
                    <scope line="1219"/>
                    <declaration name="image" type="Image" line="1222"/>
                    <scope line="1223">
                        <scope line="1224"/>
                        <scope line="1227"/>
                        <declaration name="imageG" type="Graphics" line="1230"/>
                    </scope>
                </method>
                <method name="paintMe" type="void" line="1237">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                    </params>
                    <declaration name="right" type="int" line="1238"/>
                    <declaration name="bottom" type="int" line="1239"/>
                </method>
                <method name="getShift" type="int" line="1258"/>
                <method name="getAdditionalHeight" type="int" line="1261"/>
                <method name="getIconWidth" type="int" line="1264"/>
                <method name="getIconHeight" type="int" line="1267"/>
            </class>
            <class name="TreeLeafIcon" line="1271">
                <extends class="FileIcon16"/>
                <method name="getShift" type="int" line="1272"/>
                <method name="getAdditionalHeight" type="int" line="1275"/>
            </class>
            <declaration name="treeControlSize" type="Dimension" line="1279"/>
            <class name="TreeControlIcon" line="1280">
                <implements interface="Icon"/>
                <implements interface="Serializable"/>
                <javadoc line="1280">
                    &lt;p&gt;
                      &lt;strong&gt;Warning:&lt;/strong&gt;
                      Serialized objects of this class will not be compatible with
                      future Swing releases. The current serialization support is
                      appropriate for short term storage or RMI between applications running
                      the same version of Swing.  As of 1.4, support for long term storage
                      of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                      has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                      Please see {@link java.beans.XMLEncoder}.                    
                </javadoc>
                <declaration name="isLight" type="boolean" line="1292"/>
                <method name="TreeControlIcon" type="constructor" line="1293">
                    <params>
                        <param name="isCollapsed" type="boolean"/>
                    </params>
                </method>
                <declaration name="imageCacher" type="ImageCacher" line="1296"/>
                <declaration name="cachedOrientation" type="boolean" line="1297"/>
                <method name="paintIcon" type="void" line="1298">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <declaration name="gc" type="GraphicsConfiguration" line="1299"/>
                    <scope line="1300"/>
                    <declaration name="image" type="Image" line="1303"/>
                    <scope line="1304">
                        <scope line="1306"/>
                        <scope line="1309"/>
                        <declaration name="imageG" type="Graphics" line="1312"/>
                    </scope>
                    <scope line="1317">
                        <scope line="1318"/>
                        <scope line="1321"/>
                    </scope>
                    <scope line="1325">
                        <scope line="1326"/>
                        <scope line="1329"/>
                    </scope>
                </method>
                <method name="paintMe" type="void" line="1334">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <declaration name="xoff" type="int" line="1336"/>
                    <scope line="1347">
                        <scope line="1348"/>
                        <scope line="1352"/>
                    </scope>
                    <scope line="1357"/>
                </method>
                <method name="getIconWidth" type="int" line="1379"/>
                <method name="getIconHeight" type="int" line="1382"/>
            </class>
            <declaration name="menuArrowIconSize" type="Dimension" line="1386"/>
            <declaration name="menuCheckIconSize" type="Dimension" line="1387"/>
            <declaration name="xOff" type="int" line="1388"/>
            <class name="MenuArrowIcon" line="1389">
                <implements interface="Icon"/>
                <implements interface="UIResource"/>
                <implements interface="Serializable"/>
                <method name="paintIcon" type="void" line="1390">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <declaration name="b" type="JMenuItem" line="1391"/>
                    <declaration name="model" type="ButtonModel" line="1392"/>
                    <scope line="1394"/>
                    <scope line="1397">
                        <scope line="1398"/>
                        <scope line="1401"/>
                    </scope>
                    <scope line="1405"/>
                    <scope line="1411"/>
                </method>
                <method name="getIconWidth" type="int" line="1419"/>
                <method name="getIconHeight" type="int" line="1422"/>
            </class>
            <class name="MenuItemArrowIcon" line="1426">
                <implements interface="Icon"/>
                <implements interface="UIResource"/>
                <implements interface="Serializable"/>
                <method name="paintIcon" type="void" line="1427">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                </method>
                <method name="getIconWidth" type="int" line="1429"/>
                <method name="getIconHeight" type="int" line="1432"/>
            </class>
            <class name="CheckBoxMenuItemIcon" line="1436">
                <implements interface="Icon"/>
                <implements interface="UIResource"/>
                <implements interface="Serializable"/>
                <method name="paintOceanIcon" type="void" line="1437">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <declaration name="model" type="ButtonModel" line="1438"/>
                    <declaration name="isSelected" type="boolean" line="1439"/>
                    <declaration name="isEnabled" type="boolean" line="1440"/>
                    <declaration name="isPressed" type="boolean" line="1441"/>
                    <declaration name="isArmed" type="boolean" line="1442"/>
                    <scope line="1444">
                        <scope line="1446"/>
                        <scope line="1456"/>
                    </scope>
                    <scope line="1467"/>
                    <scope line="1471">
                        <scope line="1472">
                            <scope line="1473"/>
                            <scope line="1476"/>
                        </scope>
                        <scope line="1480"/>
                    </scope>
                </method>
                <method name="paintIcon" type="void" line="1490">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <scope line="1491"/>
                    <declaration name="b" type="JMenuItem" line="1495"/>
                    <declaration name="model" type="ButtonModel" line="1496"/>
                    <declaration name="isSelected" type="boolean" line="1497"/>
                    <declaration name="isEnabled" type="boolean" line="1498"/>
                    <declaration name="isPressed" type="boolean" line="1499"/>
                    <declaration name="isArmed" type="boolean" line="1500"/>
                    <scope line="1502">
                        <scope line="1503"/>
                        <scope line="1515"/>
                    </scope>
                    <scope line="1528"/>
                    <scope line="1532">
                        <scope line="1533">
                            <scope line="1534"/>
                            <scope line="1537"/>
                        </scope>
                        <scope line="1541"/>
                    </scope>
                </method>
                <method name="getIconWidth" type="int" line="1551"/>
                <method name="getIconHeight" type="int" line="1554"/>
            </class>
            <class name="RadioButtonMenuItemIcon" line="1558">
                <implements interface="Icon"/>
                <implements interface="UIResource"/>
                <implements interface="Serializable"/>
                <method name="paintOceanIcon" type="void" line="1559">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <declaration name="model" type="ButtonModel" line="1560"/>
                    <declaration name="isSelected" type="boolean" line="1561"/>
                    <declaration name="isEnabled" type="boolean" line="1562"/>
                    <declaration name="isPressed" type="boolean" line="1563"/>
                    <declaration name="isArmed" type="boolean" line="1564"/>
                    <scope line="1566">
                        <scope line="1568"/>
                        <scope line="1571"/>
                        <scope line="1577"/>
                        <scope line="1580"/>
                    </scope>
                    <scope line="1584"/>
                    <scope line="1595">
                        <scope line="1596">
                            <scope line="1597"/>
                            <scope line="1600"/>
                        </scope>
                        <scope line="1604"/>
                    </scope>
                </method>
                <method name="paintIcon" type="void" line="1615">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <scope line="1616"/>
                    <declaration name="b" type="JMenuItem" line="1620"/>
                    <declaration name="model" type="ButtonModel" line="1621"/>
                    <declaration name="isSelected" type="boolean" line="1622"/>
                    <declaration name="isEnabled" type="boolean" line="1623"/>
                    <declaration name="isPressed" type="boolean" line="1624"/>
                    <declaration name="isArmed" type="boolean" line="1625"/>
                    <scope line="1627">
                        <scope line="1628"/>
                        <scope line="1646"/>
                    </scope>
                    <scope line="1665"/>
                    <scope line="1676">
                        <scope line="1677">
                            <scope line="1678"/>
                            <scope line="1681"/>
                        </scope>
                        <scope line="1685"/>
                    </scope>
                </method>
                <method name="getIconWidth" type="int" line="1696"/>
                <method name="getIconHeight" type="int" line="1699"/>
            </class>
            <class name="VerticalSliderThumbIcon" line="1703">
                <implements interface="Icon"/>
                <implements interface="Serializable"/>
                <implements interface="UIResource"/>
                <declaration name="controlBumps" type="MetalBumps" line="1704"/>
                <declaration name="primaryBumps" type="MetalBumps" line="1705"/>
                <method name="VerticalSliderThumbIcon" type="constructor" line="1706"/>
                <method name="paintIcon" type="void" line="1710">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <declaration name="leftToRight" type="boolean" line="1711"/>
                    <scope line="1713"/>
                    <scope line="1716"/>
                    <scope line="1719"/>
                    <scope line="1726"/>
                    <scope line="1733"/>
                    <scope line="1736"/>
                    <scope line="1739"/>
                    <scope line="1748"/>
                    <declaration name="offset" type="int" line="1756"/>
                    <scope line="1757">
                        <scope line="1758"/>
                        <scope line="1761"/>
                    </scope>
                    <scope line="1765">
                        <scope line="1767"/>
                        <scope line="1771"/>
                    </scope>
                </method>
                <method name="getIconWidth" type="int" line="1778"/>
                <method name="getIconHeight" type="int" line="1781"/>
            </class>
            <class name="HorizontalSliderThumbIcon" line="1785">
                <implements interface="Icon"/>
                <implements interface="Serializable"/>
                <implements interface="UIResource"/>
                <declaration name="controlBumps" type="MetalBumps" line="1786"/>
                <declaration name="primaryBumps" type="MetalBumps" line="1787"/>
                <method name="HorizontalSliderThumbIcon" type="constructor" line="1788"/>
                <method name="paintIcon" type="void" line="1792">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <scope line="1794"/>
                    <scope line="1797"/>
                    <scope line="1805"/>
                    <scope line="1808"/>
                    <scope line="1818">
                        <scope line="1819"/>
                        <scope line="1822"/>
                    </scope>
                    <scope line="1826"/>
                </method>
                <method name="getIconWidth" type="int" line="1833"/>
                <method name="getIconHeight" type="int" line="1836"/>
            </class>
            <class name="OceanVerticalSliderThumbIcon" line="1840">
                <extends class="CachedPainter"/>
                <implements interface="Icon"/>
                <implements interface="Serializable"/>
                <implements interface="UIResource"/>
                <declaration name="LTR_THUMB_SHAPE" type="Polygon" line="1841"/>
                <declaration name="RTL_THUMB_SHAPE" type="Polygon" line="1842"/>
                <scope line="1843"/>
                <method name="OceanVerticalSliderThumbIcon" type="constructor" line="1847"/>
                <method name="paintIcon" type="void" line="1850">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <scope line="1851"/>
                </method>
                <method name="paintToImage" type="void" line="1856">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="image" type="Image"/>
                        <param name="g2" type="Graphics"/>
                        <param name="w" type="int"/>
                        <param name="h" type="int"/>
                        <param name="args" type="Object[]"/>
                    </params>
                    <declaration name="g" type="Graphics2D" line="1857"/>
                    <declaration name="leftToRight" type="boolean" line="1858"/>
                    <declaration name="hasFocus" type="boolean" line="1859"/>
                    <declaration name="enabled" type="boolean" line="1860"/>
                    <declaration name="clip" type="Rectangle" line="1861"/>
                    <scope line="1862"/>
                    <scope line="1865"/>
                    <scope line="1868"/>
                    <scope line="1872"/>
                    <scope line="1875"/>
                    <scope line="1879"/>
                    <scope line="1882"/>
                    <scope line="1885"/>
                    <scope line="1892"/>
                    <scope line="1899">
                        <scope line="1901"/>
                        <scope line="1908"/>
                    </scope>
                </method>
                <method name="getIconWidth" type="int" line="1917"/>
                <method name="getIconHeight" type="int" line="1920"/>
                <method name="createImage" type="Image" line="1923">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="w" type="int"/>
                        <param name="h" type="int"/>
                        <param name="config" type="GraphicsConfiguration"/>
                        <param name="args" type="Object[]"/>
                    </params>
                    <scope line="1924"/>
                </method>
            </class>
            <class name="OceanHorizontalSliderThumbIcon" line="1930">
                <extends class="CachedPainter"/>
                <implements interface="Icon"/>
                <implements interface="Serializable"/>
                <implements interface="UIResource"/>
                <declaration name="THUMB_SHAPE" type="Polygon" line="1931"/>
                <scope line="1932"/>
                <method name="OceanHorizontalSliderThumbIcon" type="constructor" line="1935"/>
                <method name="paintIcon" type="void" line="1938">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <scope line="1939"/>
                </method>
                <method name="createImage" type="Image" line="1944">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="w" type="int"/>
                        <param name="h" type="int"/>
                        <param name="config" type="GraphicsConfiguration"/>
                        <param name="args" type="Object[]"/>
                    </params>
                    <scope line="1945"/>
                </method>
                <method name="paintToImage" type="void" line="1950">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="image" type="Image"/>
                        <param name="g2" type="Graphics"/>
                        <param name="w" type="int"/>
                        <param name="h" type="int"/>
                        <param name="args" type="Object[]"/>
                    </params>
                    <declaration name="g" type="Graphics2D" line="1951"/>
                    <declaration name="hasFocus" type="boolean" line="1952"/>
                    <declaration name="enabled" type="boolean" line="1953"/>
                    <declaration name="clip" type="Rectangle" line="1954"/>
                    <scope line="1956"/>
                    <scope line="1960"/>
                    <scope line="1963"/>
                    <scope line="1967"/>
                    <scope line="1970"/>
                    <scope line="1978"/>
                </method>
                <method name="getIconWidth" type="int" line="1987"/>
                <method name="getIconHeight" type="int" line="1990"/>
            </class>
        </class>
    </source>