<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.multi">
        <import package="java.util.Vector"/>
        <import package="javax.swing.plaf.SplitPaneUI"/>
        <import package="javax.swing.JSplitPane"/>
        <import package="java.awt.Graphics"/>
        <import package="javax.swing.plaf.ComponentUI"/>
        <import package="javax.swing.JComponent"/>
        <import package="java.awt.Dimension"/>
        <import package="javax.accessibility.Accessible"/>
        <class name="MultiSplitPaneUI" line="10">
            <extends class="SplitPaneUI"/>
            <javadoc line="10">
                A multiplexing UI used to combine &lt;code&gt;SplitPaneUI&lt;/code&gt;s.
                  &lt;p&gt;This file was automatically generated by AutoMulti.                
                <author>
                    Otto Multey                    
                </author>
            </javadoc>
            <declaration name="uis" type="Vector" line="16"/>
            <javadoc line="16">
                The vector containing the real UIs.  This is populated
                  in the call to &lt;code&gt;createUI&lt;/code&gt;, and can be obtained by calling
                  the &lt;code&gt;getUIs&lt;/code&gt; method.  The first element is guaranteed to be the real UI
                  obtained from the default look and feel.                
            </javadoc>
            <javadoc line="23">
                Returns the list of UIs associated with this multiplexing UI.  This
                  allows processing of the UIs by an application aware of multiplexing
                  UIs on components.                
            </javadoc>
            <method name="getUIs" type="ComponentUI[]" line="28"/>
            <javadoc line="31">
                Invokes the &lt;code&gt;resetToPreferredSizes&lt;/code&gt; method on each UI handled by this object.                
            </javadoc>
            <method name="resetToPreferredSizes" type="void" line="34">
                <params>
                    <param name="a" type="JSplitPane"/>
                </params>
                <scope line="35"/>
            </method>
            <javadoc line="39">
                Invokes the &lt;code&gt;setDividerLocation&lt;/code&gt; method on each UI handled by this object.                
            </javadoc>
            <method name="setDividerLocation" type="void" line="42">
                <params>
                    <param name="a" type="JSplitPane"/>
                    <param name="b" type="int"/>
                </params>
                <scope line="43"/>
            </method>
            <javadoc line="47">
                Invokes the &lt;code&gt;getDividerLocation&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default <code>LookAndFeel</code>                    
                </return>
            </javadoc>
            <method name="getDividerLocation" type="int" line="52">
                <params>
                    <param name="a" type="JSplitPane"/>
                </params>
                <declaration name="returnValue" type="int" line="53"/>
                <scope line="54"/>
            </method>
            <javadoc line="59">
                Invokes the &lt;code&gt;getMinimumDividerLocation&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default <code>LookAndFeel</code>                    
                </return>
            </javadoc>
            <method name="getMinimumDividerLocation" type="int" line="64">
                <params>
                    <param name="a" type="JSplitPane"/>
                </params>
                <declaration name="returnValue" type="int" line="65"/>
                <scope line="66"/>
            </method>
            <javadoc line="71">
                Invokes the &lt;code&gt;getMaximumDividerLocation&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default <code>LookAndFeel</code>                    
                </return>
            </javadoc>
            <method name="getMaximumDividerLocation" type="int" line="76">
                <params>
                    <param name="a" type="JSplitPane"/>
                </params>
                <declaration name="returnValue" type="int" line="77"/>
                <scope line="78"/>
            </method>
            <javadoc line="83">
                Invokes the &lt;code&gt;finishedPaintingChildren&lt;/code&gt; method on each UI handled by this object.                
            </javadoc>
            <method name="finishedPaintingChildren" type="void" line="86">
                <params>
                    <param name="a" type="JSplitPane"/>
                    <param name="b" type="Graphics"/>
                </params>
                <scope line="87"/>
            </method>
            <javadoc line="91">
                Invokes the &lt;code&gt;contains&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default <code>LookAndFeel</code>                    
                </return>
            </javadoc>
            <method name="contains" type="boolean" line="96">
                <params>
                    <param name="a" type="JComponent"/>
                    <param name="b" type="int"/>
                    <param name="c" type="int"/>
                </params>
                <declaration name="returnValue" type="boolean" line="97"/>
                <scope line="98"/>
            </method>
            <javadoc line="103">
                Invokes the &lt;code&gt;update&lt;/code&gt; method on each UI handled by this object.                
            </javadoc>
            <method name="update" type="void" line="106">
                <params>
                    <param name="a" type="Graphics"/>
                    <param name="b" type="JComponent"/>
                </params>
                <scope line="107"/>
            </method>
            <javadoc line="111">
                Returns a multiplexing UI instance if any of the auxiliary
                  &lt;code&gt;LookAndFeel&lt;/code&gt;s supports this UI.  Otherwise, just returns the
                  UI object obtained from the default &lt;code&gt;LookAndFeel&lt;/code&gt;.                
            </javadoc>
            <method name="createUI" type="ComponentUI" line="116">
                <params>
                    <param name="a" type="JComponent"/>
                </params>
                <declaration name="mui" type="ComponentUI" line="117"/>
            </method>
            <javadoc line="120">
                Invokes the &lt;code&gt;installUI&lt;/code&gt; method on each UI handled by this object.                
            </javadoc>
            <method name="installUI" type="void" line="123">
                <params>
                    <param name="a" type="JComponent"/>
                </params>
                <scope line="124"/>
            </method>
            <javadoc line="128">
                Invokes the &lt;code&gt;uninstallUI&lt;/code&gt; method on each UI handled by this object.                
            </javadoc>
            <method name="uninstallUI" type="void" line="131">
                <params>
                    <param name="a" type="JComponent"/>
                </params>
                <scope line="132"/>
            </method>
            <javadoc line="136">
                Invokes the &lt;code&gt;paint&lt;/code&gt; method on each UI handled by this object.                
            </javadoc>
            <method name="paint" type="void" line="139">
                <params>
                    <param name="a" type="Graphics"/>
                    <param name="b" type="JComponent"/>
                </params>
                <scope line="140"/>
            </method>
            <javadoc line="144">
                Invokes the &lt;code&gt;getPreferredSize&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default <code>LookAndFeel</code>                    
                </return>
            </javadoc>
            <method name="getPreferredSize" type="Dimension" line="149">
                <params>
                    <param name="a" type="JComponent"/>
                </params>
                <declaration name="returnValue" type="Dimension" line="150"/>
                <scope line="151"/>
            </method>
            <javadoc line="156">
                Invokes the &lt;code&gt;getMinimumSize&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default <code>LookAndFeel</code>                    
                </return>
            </javadoc>
            <method name="getMinimumSize" type="Dimension" line="161">
                <params>
                    <param name="a" type="JComponent"/>
                </params>
                <declaration name="returnValue" type="Dimension" line="162"/>
                <scope line="163"/>
            </method>
            <javadoc line="168">
                Invokes the &lt;code&gt;getMaximumSize&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default <code>LookAndFeel</code>                    
                </return>
            </javadoc>
            <method name="getMaximumSize" type="Dimension" line="173">
                <params>
                    <param name="a" type="JComponent"/>
                </params>
                <declaration name="returnValue" type="Dimension" line="174"/>
                <scope line="175"/>
            </method>
            <javadoc line="180">
                Invokes the &lt;code&gt;getAccessibleChildrenCount&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default <code>LookAndFeel</code>                    
                </return>
            </javadoc>
            <method name="getAccessibleChildrenCount" type="int" line="185">
                <params>
                    <param name="a" type="JComponent"/>
                </params>
                <declaration name="returnValue" type="int" line="186"/>
                <scope line="187"/>
            </method>
            <javadoc line="192">
                Invokes the &lt;code&gt;getAccessibleChild&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default <code>LookAndFeel</code>                    
                </return>
            </javadoc>
            <method name="getAccessibleChild" type="Accessible" line="197">
                <params>
                    <param name="a" type="JComponent"/>
                    <param name="b" type="int"/>
                </params>
                <declaration name="returnValue" type="Accessible" line="198"/>
                <scope line="199"/>
            </method>
        </class>
    </source>