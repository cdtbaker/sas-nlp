<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf">
        <import package="java.awt.Rectangle"/>
        <import package="javax.swing.JTree"/>
        <import package="javax.swing.tree.TreePath"/>
        <class name="TreeUI" line="32">
            <extends class="ComponentUI"/>
            <javadoc line="32">
                Pluggable look and feel interface for JTree.                
                <author>
                    Rob Davis                    
                </author>
                <author>
                    Scott Violet                    
                </author>
            </javadoc>
            <method name="getPathBounds" type="Rectangle" line="40"/>
            <javadoc line="40">
                Returns the Rectangle enclosing the label portion that the
                  last item in path will be drawn into.  Will return null if
                  any component in path is currently valid.                
            </javadoc>
            <method name="getPathForRow" type="TreePath" line="47"/>
            <javadoc line="47">
                Returns the path for passed in row.  If row is not visible
                  null is returned.                
            </javadoc>
            <method name="getRowForPath" type="int" line="53"/>
            <javadoc line="53">
                Returns the row that the last item identified in path is visible
                  at.  Will return -1 if any of the elements in path are not
                  currently visible.                
            </javadoc>
            <method name="getRowCount" type="int" line="60"/>
            <javadoc line="60">
                Returns the number of rows that are being displayed.                
            </javadoc>
            <method name="getClosestPathForLocation" type="TreePath" line="65"/>
            <javadoc line="65">
                Returns the path to the node that is closest to x,y.  If
                  there is nothing currently visible this will return null, otherwise
                  it&apos;ll always return a valid path.  If you need to test if the
                  returned object is exactly at x, y you should get the bounds for
                  the returned path and test x, y against that.                
            </javadoc>
            <method name="isEditing" type="boolean" line="75"/>
            <javadoc line="75">
                Returns true if the tree is being edited.  The item that is being
                  edited can be returned by getEditingPath().                
            </javadoc>
            <method name="stopEditing" type="boolean" line="81"/>
            <javadoc line="81">
                Stops the current editing session.  This has no effect if the
                  tree isn&apos;t being edited.  Returns true if the editor allows the
                  editing session to stop.                
            </javadoc>
            <method name="cancelEditing" type="void" line="88"/>
            <javadoc line="88">
                Cancels the current editing session. This has no effect if the
                  tree isn&apos;t being edited.  Returns true if the editor allows the
                  editing session to stop.                
            </javadoc>
            <method name="startEditingAtPath" type="void" line="95"/>
            <javadoc line="95">
                Selects the last item in path and tries to edit it.  Editing will
                  fail if the CellEditor won&apos;t allow it for the selected item.                
            </javadoc>
            <method name="getEditingPath" type="TreePath" line="101"/>
            <javadoc line="101">
                Returns the path to the element that is being edited.                
            </javadoc>
        </class>
    </source>