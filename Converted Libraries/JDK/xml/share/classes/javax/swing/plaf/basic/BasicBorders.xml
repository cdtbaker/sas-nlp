<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.basic">
        <import package="javax.swing"/>
        <import package="javax.swing.border"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.text.JTextComponent"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Insets"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Graphics"/>
        <class name="BasicBorders" line="12">
            <javadoc line="12">
                Factory object that can vend Borders appropriate for the basic L &amp; F.                
                <author>
                    Georges Saab                    
                </author>
                <author>
                    Amy Fowler                    
                </author>
            </javadoc>
            <method name="getButtonBorder" type="Border" line="18">
                <declaration name="table" type="UIDefaults" line="19"/>
                <declaration name="buttonBorder" type="Border" line="20"/>
            </method>
            <method name="getRadioButtonBorder" type="Border" line="23">
                <declaration name="table" type="UIDefaults" line="24"/>
                <declaration name="radioButtonBorder" type="Border" line="25"/>
            </method>
            <method name="getToggleButtonBorder" type="Border" line="28">
                <declaration name="table" type="UIDefaults" line="29"/>
                <declaration name="toggleButtonBorder" type="Border" line="30"/>
            </method>
            <method name="getMenuBarBorder" type="Border" line="33">
                <declaration name="table" type="UIDefaults" line="34"/>
                <declaration name="menuBarBorder" type="Border" line="35"/>
            </method>
            <method name="getSplitPaneBorder" type="Border" line="38">
                <declaration name="table" type="UIDefaults" line="39"/>
                <declaration name="splitPaneBorder" type="Border" line="40"/>
            </method>
            <javadoc line="43">
                Returns a border instance for a JSplitPane divider                
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="getSplitPaneDividerBorder" type="Border" line="47">
                <declaration name="table" type="UIDefaults" line="48"/>
                <declaration name="splitPaneBorder" type="Border" line="49"/>
            </method>
            <method name="getTextFieldBorder" type="Border" line="52">
                <declaration name="table" type="UIDefaults" line="53"/>
                <declaration name="textFieldBorder" type="Border" line="54"/>
            </method>
            <method name="getProgressBarBorder" type="Border" line="57">
                <declaration name="table" type="UIDefaults" line="58"/>
                <declaration name="progressBarBorder" type="Border" line="59"/>
            </method>
            <method name="getInternalFrameBorder" type="Border" line="62">
                <declaration name="table" type="UIDefaults" line="63"/>
                <declaration name="internalFrameBorder" type="Border" line="64"/>
            </method>
            <class name="RolloverButtonBorder" line="67">
                <extends class="ButtonBorder"/>
                <javadoc line="67">
                    Special thin border for rollover toolbar buttons.                    
                    <since>
                        1.4                        
                    </since>
                </javadoc>
                <method name="RolloverButtonBorder" type="constructor" line="72">
                    <params>
                        <param name="shadow" type="Color"/>
                        <param name="darkShadow" type="Color"/>
                        <param name="highlight" type="Color"/>
                        <param name="lightHighlight" type="Color"/>
                    </params>
                </method>
                <method name="paintBorder" type="void" line="75">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="w" type="int"/>
                        <param name="h" type="int"/>
                    </params>
                    <declaration name="b" type="AbstractButton" line="76"/>
                    <declaration name="model" type="ButtonModel" line="77"/>
                    <declaration name="shade" type="Color" line="78"/>
                    <declaration name="p" type="Component" line="79"/>
                    <scope line="80"/>
                    <scope line="83">
                        <declaration name="oldColor" type="Color" line="84"/>
                        <scope line="86"/>
                        <scope line="93"/>
                    </scope>
                </method>
            </class>
            <class name="RolloverMarginBorder" line="105">
                <extends class="EmptyBorder"/>
                <javadoc line="105">
                    A border which is like a Margin border but it will only honor the margin
                      if the margin has been explicitly set by the developer.
                      Note: This is identical to the package private class
                      MetalBorders.RolloverMarginBorder and should probably be consolidated.                    
                </javadoc>
                <method name="RolloverMarginBorder" type="constructor" line="112"/>
                <method name="getBorderInsets" type="Insets" line="115">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="insets" type="Insets"/>
                    </params>
                    <declaration name="margin" type="Insets" line="116"/>
                    <scope line="117"/>
                    <scope line="120"/>
                    <scope line="126"/>
                </method>
            </class>
            <class name="ButtonBorder" line="135">
                <extends class="AbstractBorder"/>
                <implements interface="UIResource"/>
                <declaration name="shadow" type="Color" line="136"/>
                <declaration name="darkShadow" type="Color" line="137"/>
                <declaration name="highlight" type="Color" line="138"/>
                <declaration name="lightHighlight" type="Color" line="139"/>
                <method name="ButtonBorder" type="constructor" line="140">
                    <params>
                        <param name="shadow" type="Color"/>
                        <param name="darkShadow" type="Color"/>
                        <param name="highlight" type="Color"/>
                        <param name="lightHighlight" type="Color"/>
                    </params>
                </method>
                <method name="paintBorder" type="void" line="146">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <declaration name="isPressed" type="boolean" line="147"/>
                    <declaration name="isDefault" type="boolean" line="148"/>
                    <scope line="149">
                        <declaration name="b" type="AbstractButton" line="150"/>
                        <declaration name="model" type="ButtonModel" line="151"/>
                        <scope line="153"/>
                    </scope>
                </method>
                <method name="getBorderInsets" type="Insets" line="159">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="insets" type="Insets"/>
                    </params>
                </method>
            </class>
            <class name="ToggleButtonBorder" line="164">
                <extends class="ButtonBorder"/>
                <method name="ToggleButtonBorder" type="constructor" line="165">
                    <params>
                        <param name="shadow" type="Color"/>
                        <param name="darkShadow" type="Color"/>
                        <param name="highlight" type="Color"/>
                        <param name="lightHighlight" type="Color"/>
                    </params>
                </method>
                <method name="paintBorder" type="void" line="168">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                </method>
                <method name="getBorderInsets" type="Insets" line="171">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="insets" type="Insets"/>
                    </params>
                </method>
            </class>
            <class name="RadioButtonBorder" line="176">
                <extends class="ButtonBorder"/>
                <method name="RadioButtonBorder" type="constructor" line="177">
                    <params>
                        <param name="shadow" type="Color"/>
                        <param name="darkShadow" type="Color"/>
                        <param name="highlight" type="Color"/>
                        <param name="lightHighlight" type="Color"/>
                    </params>
                </method>
                <method name="paintBorder" type="void" line="180">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <scope line="181">
                        <declaration name="b" type="AbstractButton" line="182"/>
                        <declaration name="model" type="ButtonModel" line="183"/>
                        <scope line="184"/>
                        <scope line="187"/>
                    </scope>
                    <scope line="191"/>
                </method>
                <method name="getBorderInsets" type="Insets" line="195">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="insets" type="Insets"/>
                    </params>
                </method>
            </class>
            <class name="MenuBarBorder" line="200">
                <extends class="AbstractBorder"/>
                <implements interface="UIResource"/>
                <declaration name="shadow" type="Color" line="201"/>
                <declaration name="highlight" type="Color" line="202"/>
                <method name="MenuBarBorder" type="constructor" line="203">
                    <params>
                        <param name="shadow" type="Color"/>
                        <param name="highlight" type="Color"/>
                    </params>
                </method>
                <method name="paintBorder" type="void" line="207">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <declaration name="oldColor" type="Color" line="208"/>
                </method>
                <method name="getBorderInsets" type="Insets" line="217">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="insets" type="Insets"/>
                    </params>
                </method>
            </class>
            <class name="MarginBorder" line="222">
                <extends class="AbstractBorder"/>
                <implements interface="UIResource"/>
                <method name="getBorderInsets" type="Insets" line="223">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="insets" type="Insets"/>
                    </params>
                    <declaration name="margin" type="Insets" line="224"/>
                    <scope line="225">
                        <declaration name="b" type="AbstractButton" line="226"/>
                    </scope>
                    <scope line="229">
                        <declaration name="t" type="JToolBar" line="230"/>
                    </scope>
                    <scope line="233">
                        <declaration name="t" type="JTextComponent" line="234"/>
                    </scope>
                </method>
            </class>
            <class name="FieldBorder" line="244">
                <extends class="AbstractBorder"/>
                <implements interface="UIResource"/>
                <declaration name="shadow" type="Color" line="245"/>
                <declaration name="darkShadow" type="Color" line="246"/>
                <declaration name="highlight" type="Color" line="247"/>
                <declaration name="lightHighlight" type="Color" line="248"/>
                <method name="FieldBorder" type="constructor" line="249">
                    <params>
                        <param name="shadow" type="Color"/>
                        <param name="darkShadow" type="Color"/>
                        <param name="highlight" type="Color"/>
                        <param name="lightHighlight" type="Color"/>
                    </params>
                </method>
                <method name="paintBorder" type="void" line="255">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                </method>
                <method name="getBorderInsets" type="Insets" line="258">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="insets" type="Insets"/>
                    </params>
                    <declaration name="margin" type="Insets" line="259"/>
                    <scope line="260"/>
                </method>
            </class>
            <class name="SplitPaneDividerBorder" line="270">
                <implements interface="Border"/>
                <implements interface="UIResource"/>
                <javadoc line="270">
                    Draws the border around the divider in a splitpane
                      (when BasicSplitPaneUI is used). To get the appropriate effect, this
                      needs to be used with a SplitPaneBorder.                    
                </javadoc>
                <declaration name="highlight" type="Color" line="276"/>
                <declaration name="shadow" type="Color" line="277"/>
                <method name="SplitPaneDividerBorder" type="constructor" line="278">
                    <params>
                        <param name="highlight" type="Color"/>
                        <param name="shadow" type="Color"/>
                    </params>
                </method>
                <method name="paintBorder" type="void" line="282">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <scope line="283"/>
                    <declaration name="child" type="Component" line="286"/>
                    <declaration name="cBounds" type="Rectangle" line="287"/>
                    <declaration name="splitPane" type="JSplitPane" line="288"/>
                    <declaration name="size" type="Dimension" line="289"/>
                    <scope line="293">
                        <scope line="294"/>
                        <scope line="299"/>
                    </scope>
                    <scope line="304">
                        <scope line="305"/>
                        <scope line="310"/>
                    </scope>
                </method>
                <method name="getBorderInsets" type="Insets" line="316">
                    <params>
                        <param name="c" type="Component"/>
                    </params>
                    <declaration name="insets" type="Insets" line="317"/>
                    <scope line="318">
                        <declaration name="bspui" type="BasicSplitPaneUI" line="319"/>
                        <scope line="320">
                            <declaration name="splitPane" type="JSplitPane" line="321"/>
                            <scope line="322">
                                <scope line="323"/>
                            </scope>
                        </scope>
                    </scope>
                </method>
                <method name="isBorderOpaque" type="boolean" line="337"/>
            </class>
            <class name="SplitPaneBorder" line="341">
                <implements interface="Border"/>
                <implements interface="UIResource"/>
                <javadoc line="341">
                    Draws the border around the splitpane. To work correctly you shoudl
                      also install a border on the divider (property SplitPaneDivider.border).                    
                </javadoc>
                <declaration name="highlight" type="Color" line="346"/>
                <declaration name="shadow" type="Color" line="347"/>
                <method name="SplitPaneBorder" type="constructor" line="348">
                    <params>
                        <param name="highlight" type="Color"/>
                        <param name="shadow" type="Color"/>
                    </params>
                </method>
                <method name="paintBorder" type="void" line="352">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <scope line="353"/>
                    <declaration name="child" type="Component" line="356"/>
                    <declaration name="cBounds" type="Rectangle" line="357"/>
                    <declaration name="splitPane" type="JSplitPane" line="358"/>
                    <scope line="362">
                        <scope line="363"/>
                        <scope line="372">
                            <declaration name="maxX" type="int" line="374"/>
                            <declaration name="maxY" type="int" line="375"/>
                        </scope>
                    </scope>
                    <scope line="383">
                        <scope line="384"/>
                        <scope line="394">
                            <declaration name="maxX" type="int" line="396"/>
                            <declaration name="maxY" type="int" line="397"/>
                        </scope>
                    </scope>
                </method>
                <method name="getBorderInsets" type="Insets" line="407">
                    <params>
                        <param name="c" type="Component"/>
                    </params>
                </method>
                <method name="isBorderOpaque" type="boolean" line="410"/>
            </class>
        </class>
    </source>