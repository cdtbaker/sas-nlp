<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.metal">
        <import package="javax.swing"/>
        <import package="javax.swing.event"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.beans"/>
        <import package="java.io"/>
        <import package="java.util"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.tree"/>
        <import package="javax.swing.plaf.basic"/>
        <class name="MetalTreeUI" line="12">
            <extends class="BasicTreeUI"/>
            <javadoc line="12">
                The metal look and feel implementation of &lt;code&gt;TreeUI&lt;/code&gt;.
                  &lt;p&gt;
                  &lt;code&gt;MetalTreeUI&lt;/code&gt; allows for configuring how to
                  visually render the spacing and delineation between nodes. The following
                  hints are supported:
                  &lt;table summary=&quot;Descriptions of supported hints: Angled, Horizontal, and None&quot;&gt;
                  &lt;tr&gt;
                  &lt;th&gt;&lt;p align=&quot;left&quot;&gt;Angled&lt;/p&gt;&lt;/th&gt;
                  &lt;td&gt;A line is drawn connecting the child to the parent. For handling
                  of the root node refer to{@link javax.swing.JTree#setRootVisible} and{@link javax.swing.JTree#setShowsRootHandles}.
                  &lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;th&gt;&lt;p align=&quot;left&quot;&gt;Horizontal&lt;/p&gt;&lt;/th&gt;
                  &lt;td&gt;A horizontal line is drawn dividing the children of the root node.&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;th&gt;&lt;p align=&quot;left&quot;&gt;None&lt;/p&gt;&lt;/th&gt;
                  &lt;td&gt;Do not draw any visual indication between nodes.&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;/table&gt;
                  &lt;p&gt;
                  As it is typically impratical to obtain the &lt;code&gt;TreeUI&lt;/code&gt; from
                  the &lt;code&gt;JTree&lt;/code&gt; and cast to an instance of &lt;code&gt;MetalTreeUI&lt;/code&gt;
                  you enable this property via the client property
                  &lt;code&gt;JTree.lineStyle&lt;/code&gt;. For example, to switch to
                  &lt;code&gt;Horizontal&lt;/code&gt; style you would do:
                  &lt;code&gt;tree.putClientProperty(&quot;JTree.lineStyle&quot;, &quot;Horizontal&quot;);&lt;/code&gt;
                  &lt;p&gt;
                  The default is &lt;code&gt;Angled&lt;/code&gt;.                
                <author>
                    Tom Santos                    
                </author>
                <author>
                    Steve Wilson (value add stuff)                    
                </author>
            </javadoc>
            <declaration name="lineColor" type="Color" line="47"/>
            <declaration name="LINE_STYLE" type="String" line="48"/>
            <declaration name="LEG_LINE_STYLE_STRING" type="String" line="49"/>
            <declaration name="HORIZ_STYLE_STRING" type="String" line="50"/>
            <declaration name="NO_STYLE_STRING" type="String" line="51"/>
            <declaration name="LEG_LINE_STYLE" type="int" line="52"/>
            <declaration name="HORIZ_LINE_STYLE" type="int" line="53"/>
            <declaration name="NO_LINE_STYLE" type="int" line="54"/>
            <declaration name="lineStyle" type="int" line="55"/>
            <declaration name="lineStyleListener" type="PropertyChangeListener" line="56"/>
            <method name="createUI" type="ComponentUI" line="57">
                <params>
                    <param name="x" type="JComponent"/>
                </params>
            </method>
            <method name="MetalTreeUI" type="constructor" line="60"/>
            <method name="getHorizontalLegBuffer" type="int" line="63"/>
            <method name="installUI" type="void" line="66">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="lineStyleFlag" type="Object" line="69"/>
            </method>
            <method name="uninstallUI" type="void" line="73">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="77">
                this function converts between the string passed into the client property
                  and the internal representation (currently and int)                
            </javadoc>
            <method name="decodeLineStyle" type="void" line="81">
                <params>
                    <param name="lineStyleFlag" type="Object"/>
                </params>
                <scope line="82"/>
                <scope line="85">
                    <scope line="86"/>
                    <scope line="89"/>
                </scope>
            </method>
            <method name="isLocationInExpandControl" type="boolean" line="94">
                <params>
                    <param name="row" type="int"/>
                    <param name="rowLevel" type="int"/>
                    <param name="mouseX" type="int"/>
                    <param name="mouseY" type="int"/>
                </params>
                <scope line="95">
                    <declaration name="boxWidth" type="int" line="96"/>
                    <declaration name="i" type="Insets" line="99"/>
                    <declaration name="boxLeftX" type="int" line="100"/>
                    <declaration name="boxRightX" type="int" line="102"/>
                </scope>
            </method>
            <method name="paint" type="void" line="107">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <scope line="109"/>
            </method>
            <method name="paintHorizontalSeparators" type="void" line="113">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="clipBounds" type="Rectangle" line="115"/>
                <declaration name="beginRow" type="int" line="116"/>
                <declaration name="endRow" type="int" line="117"/>
                <scope line="118"/>
                <scope line="121">
                    <declaration name="path" type="TreePath" line="122"/>
                    <scope line="123">
                        <declaration name="rowBounds" type="Rectangle" line="124"/>
                    </scope>
                </scope>
            </method>
            <method name="paintVerticalPartOfLeg" type="void" line="129">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="clipBounds" type="Rectangle"/>
                    <param name="insets" type="Insets"/>
                    <param name="path" type="TreePath"/>
                </params>
                <scope line="130"/>
            </method>
            <method name="paintHorizontalPartOfLeg" type="void" line="134">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="clipBounds" type="Rectangle"/>
                    <param name="insets" type="Insets"/>
                    <param name="bounds" type="Rectangle"/>
                    <param name="path" type="TreePath"/>
                    <param name="row" type="int"/>
                    <param name="isExpanded" type="boolean"/>
                    <param name="hasBeenExpanded" type="boolean"/>
                    <param name="isLeaf" type="boolean"/>
                </params>
                <scope line="135"/>
            </method>
            <class name="LineListener" line="139">
                <implements interface="PropertyChangeListener"/>
                <javadoc line="139">
                    This class listens for changes in line style                    
                </javadoc>
                <method name="propertyChange" type="void" line="143">
                    <params>
                        <param name="e" type="PropertyChangeEvent"/>
                    </params>
                    <declaration name="name" type="String" line="144"/>
                    <scope line="145"/>
                </method>
            </class>
        </class>
    </source>