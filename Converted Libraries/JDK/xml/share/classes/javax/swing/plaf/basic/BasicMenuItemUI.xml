<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.basic">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="javax.swing"/>
        <import package="javax.swing.event"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.text.View"/>
        <import package="sun.swing"/>
        <class name="BasicMenuItemUI" line="11">
            <extends class="MenuItemUI"/>
            <javadoc line="11">
                BasicMenuItem implementation                
                <author>
                    Georges Saab                    
                </author>
                <author>
                    David Karlton                    
                </author>
                <author>
                    Arnaud Weber                    
                </author>
                <author>
                    Fredrik Lagerblad                    
                </author>
            </javadoc>
            <declaration name="menuItem" type="JMenuItem" line="19"/>
            <declaration name="selectionBackground" type="Color" line="20"/>
            <declaration name="selectionForeground" type="Color" line="21"/>
            <declaration name="disabledForeground" type="Color" line="22"/>
            <declaration name="acceleratorForeground" type="Color" line="23"/>
            <declaration name="acceleratorSelectionForeground" type="Color" line="24"/>
            <declaration name="acceleratorDelimiter" type="String" line="25"/>
            <javadoc line="25">
                Accelerator delimiter string, such as {@code &apos;+&apos;} in {@code &apos;Ctrl+C&apos;}.                
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="defaultTextIconGap" type="int" line="30"/>
            <declaration name="acceleratorFont" type="Font" line="31"/>
            <declaration name="mouseInputListener" type="MouseInputListener" line="32"/>
            <declaration name="menuDragMouseListener" type="MenuDragMouseListener" line="33"/>
            <declaration name="menuKeyListener" type="MenuKeyListener" line="34"/>
            <declaration name="propertyChangeListener" type="PropertyChangeListener" line="35"/>
            <javadoc line="35">
                &lt;code&gt;PropertyChangeListener&lt;/code&gt; returned from
                  &lt;code&gt;createPropertyChangeListener&lt;/code&gt;. You should not
                  need to access this field, rather if you want to customize the
                  &lt;code&gt;PropertyChangeListener&lt;/code&gt; override
                  &lt;code&gt;createPropertyChangeListener&lt;/code&gt;.                
                <since>
                    1.6                    
                </since>
                <see>
                    #createPropertyChangeListener                    
                </see>
            </javadoc>
            <declaration name="handler" type="Handler" line="45"/>
            <declaration name="arrowIcon" type="Icon" line="46"/>
            <declaration name="checkIcon" type="Icon" line="47"/>
            <declaration name="oldBorderPainted" type="boolean" line="48"/>
            <declaration name="TRACE" type="boolean" line="49"/>
            <declaration name="VERBOSE" type="boolean" line="50"/>
            <declaration name="DEBUG" type="boolean" line="51"/>
            <method name="loadActionMap" type="void" line="52">
                <params>
                    <param name="map" type="LazyActionMap"/>
                </params>
            </method>
            <method name="createUI" type="ComponentUI" line="56">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="installUI" type="void" line="59">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="installDefaults" type="void" line="66">
                <declaration name="prefix" type="String" line="67"/>
                <scope line="69"/>
                <declaration name="opaque" type="Object" line="72"/>
                <scope line="73"/>
                <scope line="76"/>
                <scope line="79"/>
                <scope line="88"/>
                <scope line="91"/>
                <scope line="94"/>
                <scope line="97"/>
                <scope line="100"/>
                <scope line="104"/>
                <scope line="107"/>
                <scope line="110">
                    <declaration name="isColumnLayout" type="boolean" line="112"/>
                    <scope line="113">
                        <declaration name="iconFactory" type="MenuItemCheckIconFactory" line="114"/>
                        <scope line="115"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="121">
                @since 1.3                
            </javadoc>
            <method name="installComponents" type="void" line="124">
                <params>
                    <param name="menuItem" type="JMenuItem"/>
                </params>
            </method>
            <method name="getPropertyPrefix" type="String" line="127"/>
            <method name="installListeners" type="void" line="130">
                <scope line="131"/>
                <scope line="135"/>
                <scope line="138"/>
                <scope line="141"/>
            </method>
            <method name="installKeyboardActions" type="void" line="145"/>
            <method name="installLazyActionMap" type="void" line="149"/>
            <method name="uninstallUI" type="void" line="152">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="uninstallDefaults" type="void" line="161"/>
            <javadoc line="168">
                @since 1.3                
            </javadoc>
            <method name="uninstallComponents" type="void" line="171">
                <params>
                    <param name="menuItem" type="JMenuItem"/>
                </params>
            </method>
            <method name="uninstallListeners" type="void" line="174">
                <scope line="175"/>
                <scope line="179"/>
                <scope line="182"/>
                <scope line="185"/>
            </method>
            <method name="uninstallKeyboardActions" type="void" line="194"/>
            <method name="createMouseInputListener" type="MouseInputListener" line="198">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="createMenuDragMouseListener" type="MenuDragMouseListener" line="201">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="createMenuKeyListener" type="MenuKeyListener" line="204">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="207">
                Creates a &lt;code&gt;PropertyChangeListener&lt;/code&gt; which will be added to
                  the menu item.
                  If this method returns null then it will not be added to the menu item.                
                <return>
                    an instance of a &lt;code&gt;PropertyChangeListener&lt;/code&gt; or null                    
                </return>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="createPropertyChangeListener" type="PropertyChangeListener" line="214">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="getHandler" type="Handler" line="217">
                <scope line="218"/>
            </method>
            <method name="createInputMap" type="InputMap" line="223">
                <params>
                    <param name="condition" type="int"/>
                </params>
                <scope line="224"/>
            </method>
            <method name="updateAcceleratorBinding" type="void" line="229">
                <declaration name="accelerator" type="KeyStroke" line="230"/>
                <declaration name="windowInputMap" type="InputMap" line="231"/>
                <scope line="232"/>
                <scope line="235">
                    <scope line="236"/>
                </scope>
            </method>
            <method name="getMinimumSize" type="Dimension" line="243">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="d" type="Dimension" line="244"/>
                <declaration name="v" type="View" line="245"/>
                <scope line="246"/>
            </method>
            <method name="getPreferredSize" type="Dimension" line="252">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="getMaximumSize" type="Dimension" line="255">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="d" type="Dimension" line="256"/>
                <declaration name="v" type="View" line="257"/>
                <scope line="258"/>
            </method>
            <method name="getPreferredMenuItemSize" type="Dimension" line="264">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="checkIcon" type="Icon"/>
                    <param name="arrowIcon" type="Icon"/>
                    <param name="defaultTextIconGap" type="int"/>
                </params>
                <declaration name="mi" type="JMenuItem" line="265"/>
                <declaration name="lh" type="MenuItemLayoutHelper" line="266"/>
                <declaration name="result" type="Dimension" line="267"/>
                <scope line="270"/>
                <declaration name="insets" type="Insets" line="277"/>
                <scope line="278"/>
                <scope line="282"/>
                <scope line="285"/>
            </method>
            <javadoc line="290">
                We draw the background in paintMenuItem()
                  so override update (which fills the background of opaque
                  components by default) to just call paint().                
            </javadoc>
            <method name="update" type="void" line="295">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="paint" type="void" line="298">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="paintMenuItem" type="void" line="301">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                    <param name="checkIcon" type="Icon"/>
                    <param name="arrowIcon" type="Icon"/>
                    <param name="background" type="Color"/>
                    <param name="foreground" type="Color"/>
                    <param name="defaultTextIconGap" type="int"/>
                </params>
                <declaration name="holdf" type="Font" line="302"/>
                <declaration name="holdc" type="Color" line="303"/>
                <declaration name="mi" type="JMenuItem" line="304"/>
                <declaration name="viewRect" type="Rectangle" line="306"/>
                <declaration name="lh" type="MenuItemLayoutHelper" line="308"/>
                <declaration name="lr" type="MenuItemLayoutHelper.LayoutResult" line="309"/>
            </method>
            <method name="paintIcon" type="void" line="319">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="lh" type="MenuItemLayoutHelper"/>
                    <param name="lr" type="MenuItemLayoutHelper.LayoutResult"/>
                    <param name="holdc" type="Color"/>
                </params>
                <scope line="320">
                    <declaration name="icon" type="Icon" line="321"/>
                    <declaration name="model" type="ButtonModel" line="322"/>
                    <scope line="323"/>
                    <scope line="326">
                        <scope line="328"/>
                    </scope>
                    <scope line="332"/>
                    <scope line="335"/>
                </scope>
            </method>
            <method name="paintCheckIcon" type="void" line="341">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="lh" type="MenuItemLayoutHelper"/>
                    <param name="lr" type="MenuItemLayoutHelper.LayoutResult"/>
                    <param name="holdc" type="Color"/>
                    <param name="foreground" type="Color"/>
                </params>
                <scope line="342">
                    <declaration name="model" type="ButtonModel" line="343"/>
                    <scope line="344"/>
                    <scope line="347"/>
                    <scope line="350"/>
                </scope>
            </method>
            <method name="paintAccText" type="void" line="356">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="lh" type="MenuItemLayoutHelper"/>
                    <param name="lr" type="MenuItemLayoutHelper.LayoutResult"/>
                </params>
                <scope line="357">
                    <declaration name="model" type="ButtonModel" line="358"/>
                    <scope line="360">
                        <scope line="361"/>
                        <scope line="365"/>
                    </scope>
                    <scope line="372">
                        <scope line="373"/>
                        <scope line="376"/>
                    </scope>
                </scope>
            </method>
            <method name="paintText" type="void" line="383">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="lh" type="MenuItemLayoutHelper"/>
                    <param name="lr" type="MenuItemLayoutHelper.LayoutResult"/>
                </params>
                <scope line="384">
                    <scope line="385"/>
                    <scope line="388"/>
                </scope>
            </method>
            <method name="paintArrowIcon" type="void" line="393">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="lh" type="MenuItemLayoutHelper"/>
                    <param name="lr" type="MenuItemLayoutHelper.LayoutResult"/>
                    <param name="foreground" type="Color"/>
                </params>
                <scope line="394">
                    <declaration name="model" type="ButtonModel" line="395"/>
                    <scope line="396"/>
                    <scope line="399"/>
                </scope>
            </method>
            <method name="applyInsets" type="void" line="404">
                <params>
                    <param name="rect" type="Rectangle"/>
                    <param name="insets" type="Insets"/>
                </params>
                <scope line="405"/>
            </method>
            <javadoc line="412">
                Draws the background of the menu item.                
                <param>
                    g the paint graphics                    
                </param>
                <param>
                    menuItem menu item to be painted                    
                </param>
                <param>
                    bgColor selection background color                    
                </param>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="paintBackground" type="void" line="419">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="menuItem" type="JMenuItem"/>
                    <param name="bgColor" type="Color"/>
                </params>
                <declaration name="model" type="ButtonModel" line="420"/>
                <declaration name="oldColor" type="Color" line="421"/>
                <declaration name="menuWidth" type="int" line="422"/>
                <declaration name="menuHeight" type="int" line="423"/>
                <scope line="424">
                    <scope line="425"/>
                    <scope line="429"/>
                </scope>
                <scope line="435"/>
            </method>
            <javadoc line="441">
                Renders the text of the current menu item.
                  &lt;p&gt;                
                <param>
                    g graphics context                    
                </param>
                <param>
                    menuItem menu item to render                    
                </param>
                <param>
                    textRect bounding rectangle for rendering the text                    
                </param>
                <param>
                    text string to render                    
                </param>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="paintText" type="void" line="450">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="menuItem" type="JMenuItem"/>
                    <param name="textRect" type="Rectangle"/>
                    <param name="text" type="String"/>
                </params>
                <declaration name="model" type="ButtonModel" line="451"/>
                <declaration name="fm" type="FontMetrics" line="452"/>
                <declaration name="mnemIndex" type="int" line="453"/>
                <scope line="454">
                    <scope line="455"/>
                    <scope line="459"/>
                </scope>
                <scope line="466">
                    <scope line="467"/>
                </scope>
            </method>
            <method name="getPath" type="MenuElement[]" line="473">
                <declaration name="m" type="MenuSelectionManager" line="474"/>
                <declaration name="oldPath" type="MenuElement" line="475"/>
                <declaration name="newPath" type="MenuElement" line="476"/>
                <declaration name="i" type="int" line="477"/>
                <declaration name="parent" type="Component" line="479"/>
                <scope line="480"/>
                <scope line="485">
                    <declaration name="j" type="int" line="486"/>
                    <scope line="487"/>
                </scope>
            </method>
            <method name="printMenuElementArray" type="void" line="496">
                <params>
                    <param name="path" type="MenuElement"/>
                    <param name="dumpStack" type="boolean"/>
                </params>
                <declaration name="i" type="int" line="498"/>
                <scope line="499">
                    <declaration name="me" type="MenuElement" line="501"/>
                </scope>
            </method>
            <class name="MouseInputHandler" line="509">
                <implements interface="MouseInputListener"/>
                <method name="mouseClicked" type="void" line="510">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mousePressed" type="void" line="513">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseReleased" type="void" line="516">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseEntered" type="void" line="519">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseExited" type="void" line="522">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseDragged" type="void" line="525">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseMoved" type="void" line="528">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
            </class>
            <class name="Actions" line="532">
                <extends class="UIAction"/>
                <declaration name="CLICK" type="String" line="533"/>
                <method name="Actions" type="constructor" line="534">
                    <params>
                        <param name="key" type="String"/>
                    </params>
                </method>
                <method name="actionPerformed" type="void" line="537">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                    <declaration name="mi" type="JMenuItem" line="538"/>
                </method>
            </class>
            <javadoc line="543">
                Call this method when a menu item is to be activated.
                  This method handles some of the details of menu item activation
                  such as clearing the selected path and messaging the
                  JMenuItem&apos;s doClick() method.                
                <param>
                    msm  A MenuSelectionManager. The visual feedback and
                      internal bookkeeping tasks are delegated to
                      this MenuSelectionManager. If &lt;code&gt;null&lt;/code&gt; is
                      passed as this argument, the
                      &lt;code&gt;MenuSelectionManager.defaultManager&lt;/code&gt; is
                      used.                    
                </param>
                <see>
                    MenuSelectionManager                    
                </see>
                <see>
                    JMenuItem#doClick(int)                    
                </see>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="doClick" type="void" line="558">
                <params>
                    <param name="msm" type="MenuSelectionManager"/>
                </params>
                <scope line="559"/>
                <scope line="562"/>
            </method>
            <javadoc line="568">
                This is to see if the menu item in question is part of the
                  system menu on an internal frame.
                  The Strings that are being checked can be found in
                  MetalInternalFrameTitlePaneUI.java,
                  WindowsInternalFrameTitlePaneUI.java, and
                  MotifInternalFrameTitlePaneUI.java.                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="isInternalFrameSystemMenu" type="boolean" line="577">
                <declaration name="actionCommand" type="String" line="578"/>
                <scope line="579"/>
                <scope line="582"/>
            </method>
            <class name="Handler" line="586">
                <implements interface="MenuDragMouseListener"/>
                <implements interface="MouseInputListener"/>
                <implements interface="PropertyChangeListener"/>
                <method name="mouseClicked" type="void" line="587">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mousePressed" type="void" line="589">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseReleased" type="void" line="591">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <scope line="592"/>
                    <declaration name="manager" type="MenuSelectionManager" line="595"/>
                    <declaration name="p" type="Point" line="596"/>
                    <scope line="597"/>
                    <scope line="600"/>
                </method>
                <method name="mouseEntered" type="void" line="604">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <declaration name="manager" type="MenuSelectionManager" line="605"/>
                    <declaration name="modifiers" type="int" line="606"/>
                    <scope line="607"/>
                    <scope line="610"/>
                </method>
                <method name="mouseExited" type="void" line="614">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <declaration name="manager" type="MenuSelectionManager" line="615"/>
                    <declaration name="modifiers" type="int" line="616"/>
                    <scope line="617"/>
                    <scope line="620">
                        <declaration name="path" type="MenuElement" line="621"/>
                        <scope line="622">
                            <declaration name="newPath" type="MenuElement" line="623"/>
                            <declaration name="i" type="int" line="624"/>
                        </scope>
                    </scope>
                </method>
                <method name="mouseDragged" type="void" line="630">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseMoved" type="void" line="633">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="menuDragMouseEntered" type="void" line="635">
                    <params>
                        <param name="e" type="MenuDragMouseEvent"/>
                    </params>
                    <declaration name="manager" type="MenuSelectionManager" line="636"/>
                    <declaration name="path" type="MenuElement" line="637"/>
                </method>
                <method name="menuDragMouseDragged" type="void" line="640">
                    <params>
                        <param name="e" type="MenuDragMouseEvent"/>
                    </params>
                    <declaration name="manager" type="MenuSelectionManager" line="641"/>
                    <declaration name="path" type="MenuElement" line="642"/>
                </method>
                <method name="menuDragMouseExited" type="void" line="645">
                    <params>
                        <param name="e" type="MenuDragMouseEvent"/>
                    </params>
                </method>
                <method name="menuDragMouseReleased" type="void" line="647">
                    <params>
                        <param name="e" type="MenuDragMouseEvent"/>
                    </params>
                    <scope line="648"/>
                    <declaration name="manager" type="MenuSelectionManager" line="651"/>
                    <declaration name="path" type="MenuElement" line="652"/>
                    <declaration name="p" type="Point" line="653"/>
                    <scope line="654"/>
                    <scope line="657"/>
                </method>
                <method name="propertyChange" type="void" line="661">
                    <params>
                        <param name="e" type="PropertyChangeEvent"/>
                    </params>
                    <declaration name="name" type="String" line="662"/>
                    <scope line="663"/>
                    <scope line="666">
                        <declaration name="lbl" type="JMenuItem" line="667"/>
                        <declaration name="text" type="String" line="668"/>
                    </scope>
                    <scope line="671"/>
                </method>
            </class>
        </class>
    </source>