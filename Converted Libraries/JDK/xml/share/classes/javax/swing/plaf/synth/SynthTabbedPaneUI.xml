<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.synth">
        <import package="javax.swing"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.plaf.basic"/>
        <import package="javax.swing.text.View"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="sun.swing.SwingUtilities2"/>
        <class name="SynthTabbedPaneUI" line="39">
            <extends class="BasicTabbedPaneUI"/>
            <comment line="101">
                added for the Nimbus look and feel, where the tab area is painted differently depending on the
                state for the selected tab                
            </comment>
            <comment line="104">
                added for the Nimbus LAF to ensure that the labels don&apos;t move whether the tab is selected or not                
            </comment>
            <implements interface="PropertyChangeListener"/>
            <implements interface="SynthUI"/>
            <javadoc line="39">
                Provides the Synth L&amp;F UI delegate for{@link javax.swing.JTabbedPane}.
                  &lt;p&gt;Looks up the {@code selectedTabPadInsets} property from the Style,
                  which represents additional insets for the selected tab.                
                <author>
                    Scott Violet                    
                </author>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="tabOverlap" type="int" line="52"/>
            <javadoc line="52">
                &lt;p&gt;If non-zero, tabOverlap indicates the amount that the tab bounds
                  should be altered such that they would overlap with a tab on either the
                  leading or trailing end of a run (ie: in TOP, this would be on the left
                  or right).&lt;/p&gt;
                  &lt;p&gt;A positive overlap indicates that tabs should overlap right/down,
                  while a negative overlap indicates tha tabs should overlap left/up.&lt;/p&gt;
                  &lt;p&gt;When tabOverlap is specified, it both changes the x position and width
                  of the tab if in TOP or BOTTOM placement, and changes the y position and
                  height if in LEFT or RIGHT placement.&lt;/p&gt;
                  &lt;p&gt;This is done for the following reason. Consider a run of 10 tabs.
                  There are 9 gaps between these tabs. If you specified a tabOverlap of
                  &quot;-1&quot;, then each of the tabs &quot;x&quot; values will be shifted left. This leaves
                  9 pixels of space to the right of the right-most tab unpainted. So, each
                  tab&apos;s width is also extended by 1 pixel to make up the difference.&lt;/p&gt;
                  &lt;p&gt;This property respects the RTL component orientation.&lt;/p&gt;                
            </javadoc>
            <declaration name="extendTabsToBase" type="boolean" line="75"/>
            <javadoc line="75">
                When a tabbed pane has multiple rows of tabs, this indicates whether
                  the tabs in the upper row(s) should extend to the base of the tab area,
                  or whether they should remain at their normal tab height. This does not
                  affect the bounds of the tabs, only the bounds of area painted by the
                  tabs. The text position does not change. The result is that the bottom
                  border of the upper row of tabs becomes fully obscured by the lower tabs,
                  resulting in a cleaner look.                
            </javadoc>
            <declaration name="tabAreaContext" type="SynthContext" line="86"/>
            <declaration name="tabContext" type="SynthContext" line="87"/>
            <declaration name="tabContentContext" type="SynthContext" line="88"/>
            <declaration name="style" type="SynthStyle" line="90"/>
            <declaration name="tabStyle" type="SynthStyle" line="91"/>
            <declaration name="tabAreaStyle" type="SynthStyle" line="92"/>
            <declaration name="tabContentStyle" type="SynthStyle" line="93"/>
            <declaration name="textRect" type="Rectangle" line="95"/>
            <declaration name="iconRect" type="Rectangle" line="96"/>
            <declaration name="tabAreaBounds" type="Rectangle" line="98"/>
            <declaration name="tabAreaStatesMatchSelectedTab" type="boolean" line="102"/>
            <declaration name="nudgeSelectedLabel" type="boolean" line="104"/>
            <declaration name="selectedTabIsPressed" type="boolean" line="106"/>
            <javadoc line="108">
                Creates a new UI object for the given component.                
                <param>
                    c component to create UI object for                    
                </param>
                <return>
                    the UI object                    
                </return>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="114">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="scrollableTabLayoutEnabled" type="boolean" line="118"/>
            <javadoc line="122">
                @inheritDoc                
            </javadoc>
            <method name="installDefaults" type="void" line="126"/>
            <method name="updateStyle" type="void" line="130">
                <params>
                    <param name="c" type="JTabbedPane"/>
                </params>
                <comment line="135">
                    Add properties other than JComponent colors, Borders and
                     opacity settings here:                    
                </comment>
                <declaration name="context" type="SynthContext" line="131"/>
                <declaration name="oldStyle" type="SynthStyle" line="132"/>
                <scope line="136">
                    <scope line="145"/>
                    <scope line="152"/>
                </scope>
                <scope line="159"/>
                <scope line="167"/>
                <scope line="175"/>
            </method>
            <javadoc line="185">
                @inheritDoc                
            </javadoc>
            <method name="installListeners" type="void" line="189"/>
            <javadoc line="194">
                @inheritDoc                
            </javadoc>
            <method name="uninstallListeners" type="void" line="198"/>
            <javadoc line="203">
                @inheritDoc                
            </javadoc>
            <method name="uninstallDefaults" type="void" line="207">
                <declaration name="context" type="SynthContext" line="208"/>
            </method>
            <javadoc line="229">
                @inheritDoc                
            </javadoc>
            <method name="getContext" type="SynthContext" line="233">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="237">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="state" type="int"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="242">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="subregion" type="Region"/>
                    <param name="state" type="int"/>
                </params>
                <declaration name="style" type="SynthStyle" line="243"/>
                <declaration name="klass" type="Class" line="244"/>
                <scope line="246"/>
                <scope line="249"/>
                <scope line="252"/>
            </method>
            <javadoc line="258">
                @inheritDoc                
            </javadoc>
            <method name="createScrollButton" type="JButton" line="262">
                <params>
                    <param name="direction" type="int"/>
                </params>
                <comment line="264">
                    added for Nimbus LAF so that it can use the basic arrow buttons
                     UIManager is queried directly here because this is called before
                     updateStyle is called so the style can not be queried directly                    
                </comment>
                <scope line="266">
                    <declaration name="btn" type="JButton" line="267"/>
                </scope>
            </method>
            <javadoc line="274">
                @inheritDoc                
            </javadoc>
            <method name="propertyChange" type="void" line="278">
                <params>
                    <param name="e" type="PropertyChangeEvent"/>
                </params>
                <scope line="279"/>
            </method>
            <javadoc line="284">
                @inheritDocOverridden to keep track of whether the selected tab is also pressed.                
            </javadoc>
            <method name="createMouseListener" type="MouseListener" line="290">
                <comment line="307">
                    Clicking on selected tab                    
                </comment>
                <comment line="309">
                    TODO need to just repaint the tab area!                    
                </comment>
                <comment line="314">
                    forward the event (this will set the selected index, or none at all                    
                </comment>
                <comment line="321">
                    TODO need to just repaint the tab area!                    
                </comment>
                <comment line="324">
                    forward the event                    
                </comment>
                <comment line="327">
                    hack: The super method *should* be setting the mouse-over property correctly
                    here, but it doesn&apos;t. That is, when the mouse is released, whatever tab is below the
                    released mouse should be in rollover state. But, if you select a tab and don&apos;t
                    move the mouse, this doesn&apos;t happen. Hence, forwarding the event.                    
                </comment>
                <declaration name="delegate" type="MouseListener" line="291"/>
                <declaration name="delegate2" type="MouseMotionListener" line="292"/>
                <anonymous_class line="293">
                    <method name="mouseClicked" type="void" line="294">
                        <params>
                            <param name="e" type="MouseEvent"/>
                        </params>
                    </method>
                    <method name="mouseEntered" type="void" line="295">
                        <params>
                            <param name="e" type="MouseEvent"/>
                        </params>
                    </method>
                    <method name="mouseExited" type="void" line="296">
                        <params>
                            <param name="e" type="MouseEvent"/>
                        </params>
                    </method>
                    <method name="mousePressed" type="void" line="298">
                        <params>
                            <param name="e" type="MouseEvent"/>
                        </params>
                        <comment line="307">
                            Clicking on selected tab                            
                        </comment>
                        <comment line="309">
                            TODO need to just repaint the tab area!                            
                        </comment>
                        <comment line="314">
                            forward the event (this will set the selected index, or none at all                            
                        </comment>
                        <scope line="299"/>
                        <declaration name="tabIndex" type="int" line="303"/>
                        <scope line="304">
                            <scope line="305"/>
                        </scope>
                    </method>
                    <method name="mouseReleased" type="void" line="317">
                        <params>
                            <param name="e" type="MouseEvent"/>
                        </params>
                        <comment line="321">
                            TODO need to just repaint the tab area!                            
                        </comment>
                        <comment line="324">
                            forward the event                            
                        </comment>
                        <comment line="327">
                            hack: The super method *should* be setting the mouse-over property correctly
                            here, but it doesn&apos;t. That is, when the mouse is released, whatever tab is below the
                            released mouse should be in rollover state. But, if you select a tab and don&apos;t
                            move the mouse, this doesn&apos;t happen. Hence, forwarding the event.                            
                        </comment>
                        <scope line="318"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="335">
                @inheritDoc                
            </javadoc>
            <method name="getTabLabelShiftX" type="int" line="339">
                <params>
                    <param name="tabPlacement" type="int"/>
                    <param name="tabIndex" type="int"/>
                    <param name="isSelected" type="boolean"/>
                </params>
                <scope line="340"/>
                <scope line="342"/>
            </method>
            <javadoc line="347">
                @inheritDoc                
            </javadoc>
            <method name="getTabLabelShiftY" type="int" line="351">
                <params>
                    <param name="tabPlacement" type="int"/>
                    <param name="tabIndex" type="int"/>
                    <param name="isSelected" type="boolean"/>
                </params>
                <scope line="352"/>
                <scope line="354"/>
            </method>
            <javadoc line="359">
                Notifies this UI delegate to repaint the specified component.
                  This method paints the component background, then calls
                  the {@link #paint(SynthContext,Graphics)} method.
                  &lt;p&gt;In general, this method does not need to be overridden by subclasses.
                  All Look and Feel rendering code should reside in the {@code paint} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="update" type="void" line="372">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="373"/>
            </method>
            <javadoc line="382">
                @inheritDoc                
            </javadoc>
            <method name="getBaseline" type="int" line="386">
                <params>
                    <param name="tab" type="int"/>
                </params>
                <scope line="388"/>
                <declaration name="title" type="String" line="391"/>
                <declaration name="font" type="Font" line="392"/>
                <declaration name="metrics" type="FontMetrics" line="393"/>
                <declaration name="icon" type="Icon" line="394"/>
            </method>
            <javadoc line="406">
                @inheritDoc                
            </javadoc>
            <method name="paintBorder" type="void" line="411">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <javadoc line="415">
                Paints the specified component according to the Look and Feel.
                  &lt;p&gt;This method is not used by Synth Look and Feel.
                  Painting is handled by the {@link #paint(SynthContext,Graphics)} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="425">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="426"/>
            </method>
            <javadoc line="432">
                Paints the specified component.                
                <param>
                    context context for the component being painted                    
                </param>
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <see>
                    #update(Graphics,JComponent)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="439">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                </params>
                <comment line="446">
                    Paint tab area
                     If scrollable tabs are enabled, the tab area will be
                     painted by the scrollable tab panel instead.                    
                </comment>
                <comment line="450">
                    WRAP_TAB_LAYOUT                    
                </comment>
                <comment line="488">
                    Paint content border                    
                </comment>
                <declaration name="selectedIndex" type="int" line="440"/>
                <declaration name="tabPlacement" type="int" line="441"/>
                <scope line="449">
                    <declaration name="insets" type="Insets" line="450"/>
                    <declaration name="x" type="int" line="451"/>
                    <declaration name="y" type="int" line="452"/>
                    <declaration name="width" type="int" line="453"/>
                    <declaration name="height" type="int" line="454"/>
                    <declaration name="size" type="int" line="455"/>
                    <scope line="481"/>
                </scope>
            </method>
            <method name="paintTabArea" type="void" line="492">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="tabPlacement" type="int"/>
                    <param name="selectedIndex" type="int"/>
                </params>
                <comment line="494">
                    This can be invoked from ScrollabeTabPanel                    
                </comment>
                <declaration name="insets" type="Insets" line="494"/>
                <declaration name="x" type="int" line="495"/>
                <declaration name="y" type="int" line="496"/>
                <declaration name="width" type="int" line="497"/>
                <declaration name="height" type="int" line="498"/>
            </method>
            <method name="paintTabArea" type="void" line="506">
                <params>
                    <param name="ss" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="tabPlacement" type="int"/>
                    <param name="selectedIndex" type="int"/>
                    <param name="tabAreaBounds" type="Rectangle"/>
                </params>
                <comment line="510">
                    if the tab area&apos;s states should match that of the selected tab, then
                    first update the selected tab&apos;s states, then set the state
                    for the tab area to match
                    otherwise, restore the tab area&apos;s state to ENABLED (which is the
                    only supported state otherwise).                    
                </comment>
                <comment line="524">
                    Paint the tab area.                    
                </comment>
                <comment line="538">
                    Paint tabRuns of tabs from back to front                    
                </comment>
                <declaration name="clipRect" type="Rectangle" line="507"/>
                <scope line="514"/>
                <scope line="519"/>
                <declaration name="tabCount" type="int" line="532"/>
                <scope line="538">
                    <declaration name="start" type="int" line="539"/>
                    <declaration name="next" type="int" line="540"/>
                    <declaration name="end" type="int" line="541"/>
                    <scope line="542">
                        <scope line="543"/>
                    </scope>
                </scope>
                <scope line="550">
                    <scope line="551"/>
                </scope>
            </method>
            <javadoc line="558">
                @inheritDoc                
            </javadoc>
            <method name="setRolloverTab" type="void" line="562">
                <params>
                    <param name="index" type="int"/>
                </params>
                <comment line="570">
                    TODO need to just repaint the tab area!                    
                </comment>
                <declaration name="oldRolloverTab" type="int" line="563"/>
                <declaration name="r" type="Rectangle" line="566"/>
                <scope line="568"/>
                <scope line="571">
                    <scope line="572">
                        <scope line="574"/>
                    </scope>
                    <scope line="579">
                        <scope line="581"/>
                    </scope>
                </scope>
            </method>
            <method name="paintTab" type="void" line="590">
                <params>
                    <param name="ss" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="tabPlacement" type="int"/>
                    <param name="rects" type="Rectangle[]"/>
                    <param name="tabIndex" type="int"/>
                    <param name="iconRect" type="Rectangle"/>
                    <param name="textRect" type="Rectangle"/>
                </params>
                <comment line="606">
                    paint this tab such that its edge closest to the base is equal to
                    edge of the selected tab closest to the base. In terms of the TOP
                    tab placement, this will cause the bottom of each tab to be
                    painted even with the bottom of the selected tab. This is because
                    in each tab placement (TOP, LEFT, BOTTOM, RIGHT) the selected tab
                    is closest to the base.                    
                </comment>
                <declaration name="tabRect" type="Rectangle" line="591"/>
                <declaration name="selectedIndex" type="int" line="592"/>
                <declaration name="isSelected" type="boolean" line="593"/>
                <declaration name="x" type="int" line="599"/>
                <declaration name="y" type="int" line="600"/>
                <declaration name="height" type="int" line="601"/>
                <declaration name="width" type="int" line="602"/>
                <declaration name="placement" type="int" line="603"/>
                <scope line="604">
                    <scope line="611">
                        <declaration name="r" type="Rectangle" line="612"/>
                        <declaration name="bottomY" type="int" line="615"/>
                        <declaration name="rightX" type="int" line="619"/>
                        <declaration name="topY" type="int" line="623"/>
                        <declaration name="leftX" type="int" line="628"/>
                    </scope>
                </scope>
                <scope line="640">
                    <declaration name="title" type="String" line="641"/>
                    <declaration name="font" type="Font" line="642"/>
                    <declaration name="metrics" type="FontMetrics" line="643"/>
                    <declaration name="icon" type="Icon" line="644"/>
                </scope>
            </method>
            <method name="layoutLabel" type="void" line="660">
                <params>
                    <param name="ss" type="SynthContext"/>
                    <param name="tabPlacement" type="int"/>
                    <param name="metrics" type="FontMetrics"/>
                    <param name="tabIndex" type="int"/>
                    <param name="title" type="String"/>
                    <param name="icon" type="Icon"/>
                    <param name="tabRect" type="Rectangle"/>
                    <param name="iconRect" type="Rectangle"/>
                    <param name="textRect" type="Rectangle"/>
                    <param name="isSelected" type="boolean"/>
                </params>
                <declaration name="v" type="View" line="661"/>
                <scope line="662"/>
                <declaration name="xNudge" type="int" line="675"/>
                <declaration name="yNudge" type="int" line="676"/>
            </method>
            <method name="paintText" type="void" line="687">
                <params>
                    <param name="ss" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="tabPlacement" type="int"/>
                    <param name="font" type="Font"/>
                    <param name="metrics" type="FontMetrics"/>
                    <param name="tabIndex" type="int"/>
                    <param name="title" type="String"/>
                    <param name="textRect" type="Rectangle"/>
                    <param name="isSelected" type="boolean"/>
                </params>
                <comment line="693">
                    html                    
                </comment>
                <comment line="696">
                    plain text                    
                </comment>
                <declaration name="v" type="View" line="690"/>
                <scope line="691"/>
                <scope line="694">
                    <declaration name="mnemIndex" type="int" line="696"/>
                </scope>
            </method>
            <method name="paintContentBorder" type="void" line="706">
                <params>
                    <param name="ss" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="tabPlacement" type="int"/>
                    <param name="selectedIndex" type="int"/>
                </params>
                <declaration name="width" type="int" line="707"/>
                <declaration name="height" type="int" line="708"/>
                <declaration name="insets" type="Insets" line="709"/>
                <declaration name="x" type="int" line="711"/>
                <declaration name="y" type="int" line="712"/>
                <declaration name="w" type="int" line="713"/>
                <declaration name="h" type="int" line="714"/>
            </method>
            <method name="ensureCurrentLayout" type="void" line="738">
                <comment line="743">
                    If tabPane doesn&apos;t have a peer yet, the validate() call will
                     silently fail.  We handle that by forcing a layout if tabPane
                     is still invalid.  See bug 4237677.                    
                </comment>
                <scope line="739"/>
                <scope line="746">
                    <declaration name="layout" type="TabbedPaneLayout" line="747"/>
                </scope>
            </method>
            <javadoc line="752">
                @inheritDoc                
            </javadoc>
            <method name="calculateMaxTabHeight" type="int" line="756">
                <params>
                    <param name="tabPlacement" type="int"/>
                </params>
                <declaration name="metrics" type="FontMetrics" line="757"/>
                <declaration name="tabCount" type="int" line="759"/>
                <declaration name="result" type="int" line="760"/>
                <declaration name="fontHeight" type="int" line="761"/>
                <scope line="762"/>
            </method>
            <javadoc line="768">
                @inheritDoc                
            </javadoc>
            <method name="calculateTabWidth" type="int" line="773">
                <params>
                    <param name="tabPlacement" type="int"/>
                    <param name="tabIndex" type="int"/>
                    <param name="metrics" type="FontMetrics"/>
                </params>
                <comment line="787">
                    html                    
                </comment>
                <comment line="790">
                    plain text                    
                </comment>
                <declaration name="icon" type="Icon" line="774"/>
                <declaration name="tabInsets" type="Insets" line="775"/>
                <declaration name="width" type="int" line="776"/>
                <declaration name="tabComponent" type="Component" line="777"/>
                <scope line="778"/>
                <scope line="780">
                    <scope line="781"/>
                    <declaration name="v" type="View" line="784"/>
                    <scope line="785"/>
                    <scope line="788">
                        <declaration name="title" type="String" line="790"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="799">
                @inheritDoc                
            </javadoc>
            <method name="calculateMaxTabWidth" type="int" line="803">
                <params>
                    <param name="tabPlacement" type="int"/>
                </params>
                <declaration name="metrics" type="FontMetrics" line="804"/>
                <declaration name="tabCount" type="int" line="806"/>
                <declaration name="result" type="int" line="807"/>
                <scope line="808"/>
            </method>
            <javadoc line="815">
                @inheritDoc                
            </javadoc>
            <method name="getTabInsets" type="Insets" line="819">
                <params>
                    <param name="tabPlacement" type="int"/>
                    <param name="tabIndex" type="int"/>
                </params>
            </method>
            <javadoc line="825">
                @inheritDoc                
            </javadoc>
            <method name="getFontMetrics" type="FontMetrics" line="829"/>
            <method name="getFontMetrics" type="FontMetrics" line="833">
                <params>
                    <param name="font" type="Font"/>
                </params>
            </method>
            <method name="updateTabContext" type="void" line="838">
                <params>
                    <param name="index" type="int"/>
                    <param name="selected" type="boolean"/>
                    <param name="isMouseDown" type="boolean"/>
                    <param name="isMouseOver" type="boolean"/>
                    <param name="hasFocus" type="boolean"/>
                </params>
                <comment line="858">
                    don&apos;t use tabbedpane focus state                    
                </comment>
                <comment line="861">
                    individual tab has focus                    
                </comment>
                <declaration name="state" type="int" line="839"/>
                <scope line="840">
                    <scope line="842"/>
                </scope>
                <scope line="846">
                    <scope line="848"/>
                </scope>
                <scope line="852"/>
                <scope line="855"/>
                <scope line="859"/>
                <scope line="862"/>
            </method>
            <javadoc line="869">
                @inheritDocOverridden to create a TabbedPaneLayout subclass which takes into
                  account tabOverlap.                
            </javadoc>
            <method name="createLayoutManager" type="LayoutManager" line="876">
                <comment line="880">
                                        
                </comment>
                <comment line="885">
                    shift all the tabs, if necessary                    
                </comment>
                <comment line="888">
                    left-to-right/right-to-left only affects layout
                    when placement is TOP or BOTTOM                    
                </comment>
                <comment line="896">
                    xshift and yshift represent the amount &amp;
                     direction to shift the tab in their
                     respective axis.                    
                </comment>
                <comment line="901">
                    configure xshift and y shift based on tab
                     position and ltr/rtl                    
                </comment>
                <comment line="912">
                    do nothing                    
                </comment>
                <scope line="877"/>
                <scope line="879">
                    <anonymous_class line="880">
                        <method name="calculateLayoutInfo" type="void" line="882">
                            <comment line="885">
                                shift all the tabs, if necessary                                
                            </comment>
                            <comment line="888">
                                left-to-right/right-to-left only affects layout
                                when placement is TOP or BOTTOM                                
                            </comment>
                            <comment line="896">
                                xshift and yshift represent the amount &amp;
                                 direction to shift the tab in their
                                 respective axis.                                
                            </comment>
                            <comment line="901">
                                configure xshift and y shift based on tab
                                 position and ltr/rtl                                
                            </comment>
                            <comment line="912">
                                do nothing                                
                            </comment>
                            <scope line="885">
                                <declaration name="tabCount" type="int" line="886"/>
                                <declaration name="ltr" type="boolean" line="889"/>
                                <scope line="890">
                                    <declaration name="start" type="int" line="891"/>
                                    <declaration name="next" type="int" line="892"/>
                                    <declaration name="end" type="int" line="893"/>
                                    <scope line="894">
                                        <declaration name="xshift" type="int" line="898"/>
                                        <declaration name="yshift" type="int" line="899"/>
                                    </scope>
                                </scope>
                            </scope>
                        </method>
                    </anonymous_class>
                </scope>
            </method>
            <class name="SynthScrollableTabButton" line="925">
                <extends class="SynthArrowButton"/>
                <implements interface="UIResource"/>
                <method name="SynthScrollableTabButton" type="constructor" line="927">
                    <params>
                        <param name="direction" type="int"/>
                    </params>
                </method>
            </class>
        </class>
    </source>