<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.synth">
        <import package="javax.swing"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.plaf.basic"/>
        <import package="javax.swing.text.View"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="sun.swing.SwingUtilities2"/>
        <class name="SynthTabbedPaneUI" line="11">
            <extends class="BasicTabbedPaneUI"/>
            <implements interface="PropertyChangeListener"/>
            <implements interface="SynthUI"/>
            <javadoc line="11">
                Provides the Synth L&amp;F UI delegate for{@link javax.swing.JTabbedPane}.
                  &lt;p&gt;Looks up the {@code selectedTabPadInsets} property from the Style,
                  which represents additional insets for the selected tab.                
                <author>
                    Scott Violet                    
                </author>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="tabOverlap" type="int" line="19"/>
            <javadoc line="19">
                &lt;p&gt;If non-zero, tabOverlap indicates the amount that the tab bounds
                  should be altered such that they would overlap with a tab on either the
                  leading or trailing end of a run (ie: in TOP, this would be on the left
                  or right).&lt;/p&gt;
                  &lt;p&gt;A positive overlap indicates that tabs should overlap right/down,
                  while a negative overlap indicates tha tabs should overlap left/up.&lt;/p&gt;
                  &lt;p&gt;When tabOverlap is specified, it both changes the x position and width
                  of the tab if in TOP or BOTTOM placement, and changes the y position and
                  height if in LEFT or RIGHT placement.&lt;/p&gt;
                  &lt;p&gt;This is done for the following reason. Consider a run of 10 tabs.
                  There are 9 gaps between these tabs. If you specified a tabOverlap of
                  &quot;-1&quot;, then each of the tabs &quot;x&quot; values will be shifted left. This leaves
                  9 pixels of space to the right of the right-most tab unpainted. So, each
                  tab&apos;s width is also extended by 1 pixel to make up the difference.&lt;/p&gt;
                  &lt;p&gt;This property respects the RTL component orientation.&lt;/p&gt;                
            </javadoc>
            <declaration name="extendTabsToBase" type="boolean" line="37"/>
            <javadoc line="37">
                When a tabbed pane has multiple rows of tabs, this indicates whether
                  the tabs in the upper row(s) should extend to the base of the tab area,
                  or whether they should remain at their normal tab height. This does not
                  affect the bounds of the tabs, only the bounds of area painted by the
                  tabs. The text position does not change. The result is that the bottom
                  border of the upper row of tabs becomes fully obscured by the lower tabs,
                  resulting in a cleaner look.                
            </javadoc>
            <declaration name="tabAreaContext" type="SynthContext" line="47"/>
            <declaration name="tabContext" type="SynthContext" line="48"/>
            <declaration name="tabContentContext" type="SynthContext" line="49"/>
            <declaration name="style" type="SynthStyle" line="50"/>
            <declaration name="tabStyle" type="SynthStyle" line="51"/>
            <declaration name="tabAreaStyle" type="SynthStyle" line="52"/>
            <declaration name="tabContentStyle" type="SynthStyle" line="53"/>
            <declaration name="textRect" type="Rectangle" line="54"/>
            <declaration name="iconRect" type="Rectangle" line="55"/>
            <declaration name="tabAreaBounds" type="Rectangle" line="56"/>
            <declaration name="tabAreaStatesMatchSelectedTab" type="boolean" line="57"/>
            <declaration name="nudgeSelectedLabel" type="boolean" line="58"/>
            <declaration name="selectedTabIsPressed" type="boolean" line="59"/>
            <javadoc line="60">
                Creates a new UI object for the given component.                
                <param>
                    c component to create UI object for                    
                </param>
                <return>
                    the UI object                    
                </return>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="65">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="scrollableTabLayoutEnabled" type="boolean" line="68"/>
            <javadoc line="71">
                @inheritDoc                
            </javadoc>
            <method name="installDefaults" type="void" line="74"/>
            <method name="updateStyle" type="void" line="77">
                <params>
                    <param name="c" type="JTabbedPane"/>
                </params>
                <declaration name="context" type="SynthContext" line="78"/>
                <declaration name="oldStyle" type="SynthStyle" line="79"/>
                <scope line="81">
                    <scope line="87"/>
                    <scope line="92"/>
                </scope>
                <scope line="98"/>
                <scope line="104"/>
                <scope line="110"/>
            </method>
            <javadoc line="117">
                @inheritDoc                
            </javadoc>
            <method name="installListeners" type="void" line="120"/>
            <javadoc line="124">
                @inheritDoc                
            </javadoc>
            <method name="uninstallListeners" type="void" line="127"/>
            <javadoc line="131">
                @inheritDoc                
            </javadoc>
            <method name="uninstallDefaults" type="void" line="134">
                <declaration name="context" type="SynthContext" line="135"/>
            </method>
            <javadoc line="152">
                @inheritDoc                
            </javadoc>
            <method name="getContext" type="SynthContext" line="155">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="158">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="state" type="int"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="161">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="subregion" type="Region"/>
                    <param name="state" type="int"/>
                </params>
                <declaration name="style" type="SynthStyle" line="162"/>
                <declaration name="klass" type="Class" line="163"/>
                <scope line="164"/>
                <scope line="167"/>
                <scope line="170"/>
            </method>
            <javadoc line="175">
                @inheritDoc                
            </javadoc>
            <method name="createScrollButton" type="JButton" line="178">
                <params>
                    <param name="direction" type="int"/>
                </params>
                <scope line="179">
                    <declaration name="btn" type="JButton" line="180"/>
                </scope>
            </method>
            <javadoc line="186">
                @inheritDoc                
            </javadoc>
            <method name="propertyChange" type="void" line="189">
                <params>
                    <param name="e" type="PropertyChangeEvent"/>
                </params>
                <scope line="190"/>
            </method>
            <javadoc line="194">
                @inheritDocOverridden to keep track of whether the selected tab is also pressed.                
            </javadoc>
            <method name="createMouseListener" type="MouseListener" line="197">
                <declaration name="delegate" type="MouseListener" line="198"/>
                <declaration name="delegate2" type="MouseMotionListener" line="199"/>
                <anonymous_class line="200">
                    <method name="mouseClicked" type="void" line="201">
                        <params>
                            <param name="e" type="MouseEvent"/>
                        </params>
                    </method>
                    <method name="mouseEntered" type="void" line="204">
                        <params>
                            <param name="e" type="MouseEvent"/>
                        </params>
                    </method>
                    <method name="mouseExited" type="void" line="207">
                        <params>
                            <param name="e" type="MouseEvent"/>
                        </params>
                    </method>
                    <method name="mousePressed" type="void" line="210">
                        <params>
                            <param name="e" type="MouseEvent"/>
                        </params>
                        <scope line="211"/>
                        <declaration name="tabIndex" type="int" line="214"/>
                        <scope line="215">
                            <scope line="216"/>
                        </scope>
                    </method>
                    <method name="mouseReleased" type="void" line="223">
                        <params>
                            <param name="e" type="MouseEvent"/>
                        </params>
                        <scope line="224"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="234">
                @inheritDoc                
            </javadoc>
            <method name="getTabLabelShiftX" type="int" line="237">
                <params>
                    <param name="tabPlacement" type="int"/>
                    <param name="tabIndex" type="int"/>
                    <param name="isSelected" type="boolean"/>
                </params>
                <scope line="238"/>
                <scope line="241"/>
            </method>
            <javadoc line="245">
                @inheritDoc                
            </javadoc>
            <method name="getTabLabelShiftY" type="int" line="248">
                <params>
                    <param name="tabPlacement" type="int"/>
                    <param name="tabIndex" type="int"/>
                    <param name="isSelected" type="boolean"/>
                </params>
                <scope line="249"/>
                <scope line="252"/>
            </method>
            <javadoc line="256">
                Notifies this UI delegate to repaint the specified component.
                  This method paints the component background, then calls
                  the {@link #paint(SynthContext,Graphics)} method.
                  &lt;p&gt;In general, this method does not need to be overridden by subclasses.
                  All Look and Feel rendering code should reside in the {@code paint} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="update" type="void" line="266">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="267"/>
            </method>
            <javadoc line="273">
                @inheritDoc                
            </javadoc>
            <method name="getBaseline" type="int" line="276">
                <params>
                    <param name="tab" type="int"/>
                </params>
                <scope line="277"/>
                <declaration name="title" type="String" line="280"/>
                <declaration name="font" type="Font" line="281"/>
                <declaration name="metrics" type="FontMetrics" line="282"/>
                <declaration name="icon" type="Icon" line="283"/>
            </method>
            <javadoc line="290">
                @inheritDoc                
            </javadoc>
            <method name="paintBorder" type="void" line="293">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <javadoc line="296">
                Paints the specified component according to the Look and Feel.
                  &lt;p&gt;This method is not used by Synth Look and Feel.
                  Painting is handled by the {@link #paint(SynthContext,Graphics)} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="304">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="305"/>
            </method>
            <javadoc line="309">
                Paints the specified component.                
                <param>
                    context context for the component being painted                    
                </param>
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <see>
                    #update(Graphics,JComponent)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="315">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="selectedIndex" type="int" line="316"/>
                <declaration name="tabPlacement" type="int" line="317"/>
                <scope line="319">
                    <declaration name="insets" type="Insets" line="320"/>
                    <declaration name="x" type="int" line="321"/>
                    <declaration name="y" type="int" line="322"/>
                    <declaration name="width" type="int" line="323"/>
                    <declaration name="height" type="int" line="324"/>
                    <declaration name="size" type="int" line="325"/>
                    <scope line="345"/>
                </scope>
            </method>
            <method name="paintTabArea" type="void" line="351">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="tabPlacement" type="int"/>
                    <param name="selectedIndex" type="int"/>
                </params>
                <declaration name="insets" type="Insets" line="352"/>
                <declaration name="x" type="int" line="353"/>
                <declaration name="y" type="int" line="354"/>
                <declaration name="width" type="int" line="355"/>
                <declaration name="height" type="int" line="356"/>
            </method>
            <method name="paintTabArea" type="void" line="359">
                <params>
                    <param name="ss" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="tabPlacement" type="int"/>
                    <param name="selectedIndex" type="int"/>
                    <param name="tabAreaBounds" type="Rectangle"/>
                </params>
                <declaration name="clipRect" type="Rectangle" line="360"/>
                <scope line="361"/>
                <scope line="365"/>
                <declaration name="tabCount" type="int" line="371"/>
                <scope line="374">
                    <declaration name="start" type="int" line="375"/>
                    <declaration name="next" type="int" line="376"/>
                    <declaration name="end" type="int" line="377"/>
                    <scope line="378">
                        <scope line="379"/>
                    </scope>
                </scope>
                <scope line="384">
                    <scope line="385"/>
                </scope>
            </method>
            <javadoc line="390">
                @inheritDoc                
            </javadoc>
            <method name="setRolloverTab" type="void" line="393">
                <params>
                    <param name="index" type="int"/>
                </params>
                <declaration name="oldRolloverTab" type="int" line="394"/>
                <declaration name="r" type="Rectangle" line="396"/>
                <scope line="397"/>
                <scope line="400">
                    <scope line="401">
                        <scope line="403"/>
                    </scope>
                    <scope line="407">
                        <scope line="409"/>
                    </scope>
                </scope>
            </method>
            <method name="paintTab" type="void" line="415">
                <params>
                    <param name="ss" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="tabPlacement" type="int"/>
                    <param name="rects" type="Rectangle[]"/>
                    <param name="tabIndex" type="int"/>
                    <param name="iconRect" type="Rectangle"/>
                    <param name="textRect" type="Rectangle"/>
                </params>
                <declaration name="tabRect" type="Rectangle" line="416"/>
                <declaration name="selectedIndex" type="int" line="417"/>
                <declaration name="isSelected" type="boolean" line="418"/>
                <declaration name="x" type="int" line="421"/>
                <declaration name="y" type="int" line="422"/>
                <declaration name="height" type="int" line="423"/>
                <declaration name="width" type="int" line="424"/>
                <declaration name="placement" type="int" line="425"/>
                <scope line="426">
                    <scope line="427">
                        <declaration name="r" type="Rectangle" line="428"/>
                        <declaration name="bottomY" type="int" line="431"/>
                        <declaration name="rightX" type="int" line="435"/>
                        <declaration name="topY" type="int" line="439"/>
                        <declaration name="leftX" type="int" line="444"/>
                    </scope>
                </scope>
                <scope line="453">
                    <declaration name="title" type="String" line="454"/>
                    <declaration name="font" type="Font" line="455"/>
                    <declaration name="metrics" type="FontMetrics" line="456"/>
                    <declaration name="icon" type="Icon" line="457"/>
                </scope>
            </method>
            <method name="layoutLabel" type="void" line="463">
                <params>
                    <param name="ss" type="SynthContext"/>
                    <param name="tabPlacement" type="int"/>
                    <param name="metrics" type="FontMetrics"/>
                    <param name="tabIndex" type="int"/>
                    <param name="title" type="String"/>
                    <param name="icon" type="Icon"/>
                    <param name="tabRect" type="Rectangle"/>
                    <param name="iconRect" type="Rectangle"/>
                    <param name="textRect" type="Rectangle"/>
                    <param name="isSelected" type="boolean"/>
                </params>
                <declaration name="v" type="View" line="464"/>
                <scope line="465"/>
                <declaration name="xNudge" type="int" line="471"/>
                <declaration name="yNudge" type="int" line="472"/>
            </method>
            <method name="paintText" type="void" line="478">
                <params>
                    <param name="ss" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="tabPlacement" type="int"/>
                    <param name="font" type="Font"/>
                    <param name="metrics" type="FontMetrics"/>
                    <param name="tabIndex" type="int"/>
                    <param name="title" type="String"/>
                    <param name="textRect" type="Rectangle"/>
                    <param name="isSelected" type="boolean"/>
                </params>
                <declaration name="v" type="View" line="480"/>
                <scope line="481"/>
                <scope line="484">
                    <declaration name="mnemIndex" type="int" line="485"/>
                </scope>
            </method>
            <method name="paintContentBorder" type="void" line="490">
                <params>
                    <param name="ss" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="tabPlacement" type="int"/>
                    <param name="selectedIndex" type="int"/>
                </params>
                <declaration name="width" type="int" line="491"/>
                <declaration name="height" type="int" line="492"/>
                <declaration name="insets" type="Insets" line="493"/>
                <declaration name="x" type="int" line="494"/>
                <declaration name="y" type="int" line="495"/>
                <declaration name="w" type="int" line="496"/>
                <declaration name="h" type="int" line="497"/>
            </method>
            <method name="ensureCurrentLayout" type="void" line="518">
                <scope line="519"/>
                <scope line="522">
                    <declaration name="layout" type="TabbedPaneLayout" line="523"/>
                </scope>
            </method>
            <javadoc line="527">
                @inheritDoc                
            </javadoc>
            <method name="calculateMaxTabHeight" type="int" line="530">
                <params>
                    <param name="tabPlacement" type="int"/>
                </params>
                <declaration name="metrics" type="FontMetrics" line="531"/>
                <declaration name="tabCount" type="int" line="532"/>
                <declaration name="result" type="int" line="533"/>
                <declaration name="fontHeight" type="int" line="534"/>
                <scope line="535"/>
            </method>
            <javadoc line="540">
                @inheritDoc                
            </javadoc>
            <method name="calculateTabWidth" type="int" line="543">
                <params>
                    <param name="tabPlacement" type="int"/>
                    <param name="tabIndex" type="int"/>
                    <param name="metrics" type="FontMetrics"/>
                </params>
                <declaration name="icon" type="Icon" line="544"/>
                <declaration name="tabInsets" type="Insets" line="545"/>
                <declaration name="width" type="int" line="546"/>
                <declaration name="tabComponent" type="Component" line="547"/>
                <scope line="548"/>
                <scope line="551">
                    <scope line="552"/>
                    <declaration name="v" type="View" line="555"/>
                    <scope line="556"/>
                    <scope line="559">
                        <declaration name="title" type="String" line="560"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="566">
                @inheritDoc                
            </javadoc>
            <method name="calculateMaxTabWidth" type="int" line="569">
                <params>
                    <param name="tabPlacement" type="int"/>
                </params>
                <declaration name="metrics" type="FontMetrics" line="570"/>
                <declaration name="tabCount" type="int" line="571"/>
                <declaration name="result" type="int" line="572"/>
                <scope line="573"/>
            </method>
            <javadoc line="578">
                @inheritDoc                
            </javadoc>
            <method name="getTabInsets" type="Insets" line="581">
                <params>
                    <param name="tabPlacement" type="int"/>
                    <param name="tabIndex" type="int"/>
                </params>
            </method>
            <javadoc line="585">
                @inheritDoc                
            </javadoc>
            <method name="getFontMetrics" type="FontMetrics" line="588"/>
            <method name="getFontMetrics" type="FontMetrics" line="591">
                <params>
                    <param name="font" type="Font"/>
                </params>
            </method>
            <method name="updateTabContext" type="void" line="594">
                <params>
                    <param name="index" type="int"/>
                    <param name="selected" type="boolean"/>
                    <param name="isMouseDown" type="boolean"/>
                    <param name="isMouseOver" type="boolean"/>
                    <param name="hasFocus" type="boolean"/>
                </params>
                <declaration name="state" type="int" line="595"/>
                <scope line="596">
                    <scope line="598"/>
                </scope>
                <scope line="602">
                    <scope line="604"/>
                </scope>
                <scope line="608"/>
                <scope line="611"/>
                <scope line="615"/>
                <scope line="618"/>
            </method>
            <javadoc line="623">
                @inheritDocOverridden to create a TabbedPaneLayout subclass which takes into
                  account tabOverlap.                
            </javadoc>
            <method name="createLayoutManager" type="LayoutManager" line="627">
                <scope line="628"/>
                <scope line="631">
                    <anonymous_class line="632">
                        <method name="calculateLayoutInfo" type="void" line="633">
                            <scope line="635">
                                <declaration name="tabCount" type="int" line="636"/>
                                <declaration name="ltr" type="boolean" line="637"/>
                                <scope line="638">
                                    <declaration name="start" type="int" line="639"/>
                                    <declaration name="next" type="int" line="640"/>
                                    <declaration name="end" type="int" line="641"/>
                                    <scope line="642">
                                        <declaration name="xshift" type="int" line="643"/>
                                        <declaration name="yshift" type="int" line="644"/>
                                    </scope>
                                </scope>
                            </scope>
                        </method>
                    </anonymous_class>
                </scope>
            </method>
            <class name="SynthScrollableTabButton" line="668">
                <extends class="SynthArrowButton"/>
                <implements interface="UIResource"/>
                <method name="SynthScrollableTabButton" type="constructor" line="669">
                    <params>
                        <param name="direction" type="int"/>
                    </params>
                </method>
            </class>
        </class>
    </source>