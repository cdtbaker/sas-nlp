<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.basic">
        <import package="sun.swing.DefaultLookup"/>
        <import package="sun.swing.UIAction"/>
        <import package="javax.swing"/>
        <import package="javax.swing.border.Border"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.awt.peer.ComponentPeer"/>
        <import package="java.awt.peer.LightweightPeer"/>
        <import package="java.beans"/>
        <import package="java.util"/>
        <import package="javax.swing.plaf.SplitPaneUI"/>
        <import package="javax.swing.plaf.ComponentUI"/>
        <import package="javax.swing.plaf.UIResource"/>
        <import package="sun.swing.SwingUtilities2"/>
        <class name="BasicSplitPaneUI" line="46">
            <extends class="SplitPaneUI"/>
            <comment line="266">
                Private data of the instance                
            </comment>
            <comment line="271">
                needed for tracking                
            </comment>
            <comment line="272">
                the first occurrence of                
            </comment>
            <comment line="273">
                setDividerLocation()                
            </comment>
            <comment line="277">
                Indicates wether the one of splitpane sides is expanded                
            </comment>
            <javadoc line="46">
                A Basic L&amp;F implementation of the SplitPaneUI.                
                <author>
                    Scott Violet                    
                </author>
                <author>
                    Steve Wilson                    
                </author>
                <author>
                    Ralph Kar                    
                </author>
            </javadoc>
            <declaration name="NON_CONTINUOUS_DIVIDER" type="String" line="55"/>
            <javadoc line="55">
                The divider used for non-continuous layout is added to the split pane
                  with this object.                
            </javadoc>
            <declaration name="KEYBOARD_DIVIDER_MOVE_OFFSET" type="int" line="63"/>
            <javadoc line="63">
                How far (relative) the divider does move when it is moved around by
                  the cursor keys on the keyboard.                
            </javadoc>
            <declaration name="splitPane" type="JSplitPane" line="70"/>
            <javadoc line="70">
                JSplitPane instance this instance is providing
                  the look and feel for.                
            </javadoc>
            <declaration name="layoutManager" type="BasicHorizontalLayoutManager" line="77"/>
            <javadoc line="77">
                LayoutManager that is created and placed into the split pane.                
            </javadoc>
            <declaration name="divider" type="BasicSplitPaneDivider" line="83"/>
            <javadoc line="83">
                Instance of the divider for this JSplitPane.                
            </javadoc>
            <declaration name="propertyChangeListener" type="PropertyChangeListener" line="89"/>
            <javadoc line="89">
                Instance of the PropertyChangeListener for this JSplitPane.                
            </javadoc>
            <declaration name="focusListener" type="FocusListener" line="95"/>
            <javadoc line="95">
                Instance of the FocusListener for this JSplitPane.                
            </javadoc>
            <declaration name="handler" type="Handler" line="100"/>
            <declaration name="managingFocusForwardTraversalKeys" type="Set&lt;KeyStroke&gt;" line="103"/>
            <javadoc line="103">
                Keys to use for forward focus traversal when the JComponent is
                  managing focus.                
            </javadoc>
            <declaration name="managingFocusBackwardTraversalKeys" type="Set&lt;KeyStroke&gt;" line="109"/>
            <javadoc line="109">
                Keys to use for backward focus traversal when the JComponent is
                  managing focus.                
            </javadoc>
            <declaration name="dividerSize" type="int" line="116"/>
            <javadoc line="116">
                The size of the divider while the dragging session is valid.                
            </javadoc>
            <declaration name="nonContinuousLayoutDivider" type="Component" line="122"/>
            <javadoc line="122">
                Instance for the shadow of the divider when non continuous layout
                  is being used.                
            </javadoc>
            <declaration name="draggingHW" type="boolean" line="129"/>
            <javadoc line="129">
                Set to true in startDragging if any of the children
                  (not including the nonContinuousLayoutDivider) are heavy weights.                
            </javadoc>
            <declaration name="beginDragDividerLocation" type="int" line="136"/>
            <javadoc line="136">
                Location of the divider when the dragging session began.                
            </javadoc>
            <declaration name="upKey" type="KeyStroke" line="142"/>
            <javadoc line="142">
                As of Java 2 platform v1.3 this previously undocumented field is no
                  longer used.
                  Key bindings are now defined by the LookAndFeel, please refer to
                  the key bindings specification for further details.                
                <deprecated>
                    As of Java 2 platform v1.3.                    
                </deprecated>
            </javadoc>
            <declaration name="downKey" type="KeyStroke" line="152"/>
            <javadoc line="152">
                As of Java 2 platform v1.3 this previously undocumented field is no
                  longer used.
                  Key bindings are now defined by the LookAndFeel, please refer to
                  the key bindings specification for further details.                
                <deprecated>
                    As of Java 2 platform v1.3.                    
                </deprecated>
            </javadoc>
            <declaration name="leftKey" type="KeyStroke" line="162"/>
            <javadoc line="162">
                As of Java 2 platform v1.3 this previously undocumented field is no
                  longer used.
                  Key bindings are now defined by the LookAndFeel, please refer to
                  the key bindings specification for further details.                
                <deprecated>
                    As of Java 2 platform v1.3.                    
                </deprecated>
            </javadoc>
            <declaration name="rightKey" type="KeyStroke" line="172"/>
            <javadoc line="172">
                As of Java 2 platform v1.3 this previously undocumented field is no
                  longer used.
                  Key bindings are now defined by the LookAndFeel, please refer to
                  the key bindings specification for further details.                
                <deprecated>
                    As of Java 2 platform v1.3.                    
                </deprecated>
            </javadoc>
            <declaration name="homeKey" type="KeyStroke" line="182"/>
            <javadoc line="182">
                As of Java 2 platform v1.3 this previously undocumented field is no
                  longer used.
                  Key bindings are now defined by the LookAndFeel, please refer to
                  the key bindings specification for further details.                
                <deprecated>
                    As of Java 2 platform v1.3.                    
                </deprecated>
            </javadoc>
            <declaration name="endKey" type="KeyStroke" line="192"/>
            <javadoc line="192">
                As of Java 2 platform v1.3 this previously undocumented field is no
                  longer used.
                  Key bindings are now defined by the LookAndFeel, please refer to
                  the key bindings specification for further details.                
                <deprecated>
                    As of Java 2 platform v1.3.                    
                </deprecated>
            </javadoc>
            <declaration name="dividerResizeToggleKey" type="KeyStroke" line="202"/>
            <javadoc line="202">
                As of Java 2 platform v1.3 this previously undocumented field is no
                  longer used.
                  Key bindings are now defined by the LookAndFeel, please refer to
                  the key bindings specification for further details.                
                <deprecated>
                    As of Java 2 platform v1.3.                    
                </deprecated>
            </javadoc>
            <declaration name="keyboardUpLeftListener" type="ActionListener" line="213"/>
            <javadoc line="213">
                As of Java 2 platform v1.3 this previously undocumented field is no
                  longer used.
                  Key bindings are now defined by the LookAndFeel, please refer to
                  the key bindings specification for further details.                
                <deprecated>
                    As of Java 2 platform v1.3.                    
                </deprecated>
            </javadoc>
            <declaration name="keyboardDownRightListener" type="ActionListener" line="223"/>
            <javadoc line="223">
                As of Java 2 platform v1.3 this previously undocumented field is no
                  longer used.
                  Key bindings are now defined by the LookAndFeel, please refer to
                  the key bindings specification for further details.                
                <deprecated>
                    As of Java 2 platform v1.3.                    
                </deprecated>
            </javadoc>
            <declaration name="keyboardHomeListener" type="ActionListener" line="233"/>
            <javadoc line="233">
                As of Java 2 platform v1.3 this previously undocumented field is no
                  longer used.
                  Key bindings are now defined by the LookAndFeel, please refer to
                  the key bindings specification for further details.                
                <deprecated>
                    As of Java 2 platform v1.3.                    
                </deprecated>
            </javadoc>
            <declaration name="keyboardEndListener" type="ActionListener" line="243"/>
            <javadoc line="243">
                As of Java 2 platform v1.3 this previously undocumented field is no
                  longer used.
                  Key bindings are now defined by the LookAndFeel, please refer to
                  the key bindings specification for further details.                
                <deprecated>
                    As of Java 2 platform v1.3.                    
                </deprecated>
            </javadoc>
            <declaration name="keyboardResizeToggleListener" type="ActionListener" line="253"/>
            <javadoc line="253">
                As of Java 2 platform v1.3 this previously undocumented field is no
                  longer used.
                  Key bindings are now defined by the LookAndFeel, please refer to
                  the key bindings specification for further details.                
                <deprecated>
                    As of Java 2 platform v1.3.                    
                </deprecated>
            </javadoc>
            <declaration name="orientation" type="int" line="266"/>
            <declaration name="lastDragLocation" type="int" line="267"/>
            <declaration name="continuousLayout" type="boolean" line="268"/>
            <declaration name="dividerKeyboardResize" type="boolean" line="269"/>
            <declaration name="dividerLocationIsSet" type="boolean" line="270"/>
            <declaration name="dividerDraggingColor" type="Color" line="273"/>
            <declaration name="rememberPaneSizes" type="boolean" line="274"/>
            <declaration name="keepHidden" type="boolean" line="277"/>
            <declaration name="painted" type="boolean" line="279"/>
            <javadoc line="279">
                Indicates that we have painted once.                
            </javadoc>
            <declaration name="ignoreDividerLocationChange" type="boolean" line="284"/>
            <javadoc line="284">
                If true, setDividerLocation does nothing.                
            </javadoc>
            <javadoc line="288">
                Creates a new BasicSplitPaneUI instance                
            </javadoc>
            <method name="createUI" type="ComponentUI" line="291">
                <params>
                    <param name="x" type="JComponent"/>
                </params>
            </method>
            <method name="loadActionMap" type="void" line="295">
                <params>
                    <param name="map" type="LazyActionMap"/>
                </params>
            </method>
            <javadoc line="308">
                Installs the UI.                
            </javadoc>
            <method name="installUI" type="void" line="311">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="323">
                Installs the UI defaults.                
            </javadoc>
            <method name="installDefaults" type="void" line="326">
                <comment line="345">
                    note: don&apos;t rename this temp variable to dividerSize                    
                </comment>
                <comment line="346">
                    since it will conflict with &quot;this.dividerSize&quot; field                    
                </comment>
                <comment line="358">
                    Install the nonContinuousLayoutDivider here to avoid having to                    
                </comment>
                <comment line="368">
                    focus forward traversal key                    
                </comment>
                <comment line="376">
                    focus backward traversal key                    
                </comment>
                <declaration name="b" type="Border" line="335"/>
                <scope line="337"/>
                <declaration name="temp" type="Integer" line="347"/>
                <scope line="360"/>
                <scope line="364"/>
                <scope line="369"/>
                <scope line="377"/>
            </method>
            <javadoc line="387">
                Installs the event listeners for the UI.                
            </javadoc>
            <method name="installListeners" type="void" line="390">
                <scope line="392"/>
                <scope line="396"/>
            </method>
            <javadoc line="402">
                Installs the keyboard actions for the UI.                
            </javadoc>
            <method name="installKeyboardActions" type="void" line="405">
                <declaration name="km" type="InputMap" line="406"/>
            </method>
            <method name="getInputMap" type="InputMap" line="416">
                <params>
                    <param name="condition" type="int"/>
                </params>
                <scope line="417"/>
            </method>
            <javadoc line="424">
                Uninstalls the UI.                
            </javadoc>
            <method name="uninstallUI" type="void" line="427">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="437">
                Uninstalls the UI defaults.                
            </javadoc>
            <method name="uninstallDefaults" type="void" line="440">
                <comment line="465">
                    sets the focus forward and backward traversal keys to null                    
                </comment>
                <comment line="466">
                    to restore the defaults                    
                </comment>
                <scope line="441"/>
                <scope line="445"/>
                <declaration name="b" type="Border" line="451"/>
                <scope line="453"/>
            </method>
            <javadoc line="472">
                Uninstalls the event listeners for the UI.                
            </javadoc>
            <method name="uninstallListeners" type="void" line="475">
                <scope line="476"/>
                <scope line="480"/>
            </method>
            <javadoc line="494">
                Uninstalls the keyboard actions for the UI.                
            </javadoc>
            <method name="uninstallKeyboardActions" type="void" line="497"/>
            <javadoc line="505">
                Creates a PropertyChangeListener for the JSplitPane UI.                
            </javadoc>
            <method name="createPropertyChangeListener" type="PropertyChangeListener" line="508"/>
            <method name="getHandler" type="Handler" line="512">
                <scope line="513"/>
            </method>
            <javadoc line="520">
                Creates a FocusListener for the JSplitPane UI.                
            </javadoc>
            <method name="createFocusListener" type="FocusListener" line="523"/>
            <javadoc line="528">
                As of Java 2 platform v1.3 this method is no
                  longer used. Subclassers previously using this method should
                  instead create an Action wrapping the ActionListener, and register
                  that Action by overriding &lt;code&gt;installKeyboardActions&lt;/code&gt; and
                  placing the Action in the SplitPane&apos;s ActionMap. Please refer to
                  the key bindings specification for further details.
                  &lt;p&gt;
                  Creates a ActionListener for the JSplitPane UI that listens for
                  specific key presses.                
                <deprecated>
                    As of Java 2 platform v1.3.                    
                </deprecated>
            </javadoc>
            <method name="createKeyboardUpLeftListener" type="ActionListener" line="542"/>
            <javadoc line="547">
                As of Java 2 platform v1.3 this method is no
                  longer used. Subclassers previously using this method should
                  instead create an Action wrapping the ActionListener, and register
                  that Action by overriding &lt;code&gt;installKeyboardActions&lt;/code&gt; and
                  placing the Action in the SplitPane&apos;s ActionMap. Please refer to
                  the key bindings specification for further details.
                  &lt;p&gt;
                  Creates a ActionListener for the JSplitPane UI that listens for
                  specific key presses.                
                <deprecated>
                    As of Java 2 platform v1.3.                    
                </deprecated>
            </javadoc>
            <method name="createKeyboardDownRightListener" type="ActionListener" line="561"/>
            <javadoc line="566">
                As of Java 2 platform v1.3 this method is no
                  longer used. Subclassers previously using this method should
                  instead create an Action wrapping the ActionListener, and register
                  that Action by overriding &lt;code&gt;installKeyboardActions&lt;/code&gt; and
                  placing the Action in the SplitPane&apos;s ActionMap. Please refer to
                  the key bindings specification for further details.
                  &lt;p&gt;
                  Creates a ActionListener for the JSplitPane UI that listens for
                  specific key presses.                
                <deprecated>
                    As of Java 2 platform v1.3.                    
                </deprecated>
            </javadoc>
            <method name="createKeyboardHomeListener" type="ActionListener" line="580"/>
            <javadoc line="585">
                As of Java 2 platform v1.3 this method is no
                  longer used. Subclassers previously using this method should
                  instead create an Action wrapping the ActionListener, and register
                  that Action by overriding &lt;code&gt;installKeyboardActions&lt;/code&gt; and
                  placing the Action in the SplitPane&apos;s ActionMap. Please refer to
                  the key bindings specification for further details.
                  &lt;p&gt;
                  Creates a ActionListener for the JSplitPane UI that listens for
                  specific key presses.                
                <deprecated>
                    As of Java 2 platform v1.3.                    
                </deprecated>
            </javadoc>
            <method name="createKeyboardEndListener" type="ActionListener" line="599"/>
            <javadoc line="604">
                As of Java 2 platform v1.3 this method is no
                  longer used. Subclassers previously using this method should
                  instead create an Action wrapping the ActionListener, and register
                  that Action by overriding &lt;code&gt;installKeyboardActions&lt;/code&gt; and
                  placing the Action in the SplitPane&apos;s ActionMap. Please refer to
                  the key bindings specification for further details.
                  &lt;p&gt;
                  Creates a ActionListener for the JSplitPane UI that listens for
                  specific key presses.                
                <deprecated>
                    As of Java 2 platform v1.3.                    
                </deprecated>
            </javadoc>
            <method name="createKeyboardResizeToggleListener" type="ActionListener" line="618"/>
            <javadoc line="623">
                Returns the orientation for the JSplitPane.                
            </javadoc>
            <method name="getOrientation" type="int" line="626"/>
            <javadoc line="631">
                Set the orientation for the JSplitPane.                
            </javadoc>
            <method name="setOrientation" type="void" line="634">
                <params>
                    <param name="orientation" type="int"/>
                </params>
            </method>
            <javadoc line="639">
                Determines wether the JSplitPane is set to use a continuous layout.                
            </javadoc>
            <method name="isContinuousLayout" type="boolean" line="642"/>
            <javadoc line="647">
                Turn continuous layout on/off.                
            </javadoc>
            <method name="setContinuousLayout" type="void" line="650">
                <params>
                    <param name="b" type="boolean"/>
                </params>
            </method>
            <javadoc line="655">
                Returns the last drag location of the JSplitPane.                
            </javadoc>
            <method name="getLastDragLocation" type="int" line="658"/>
            <javadoc line="663">
                Set the last drag location of the JSplitPane.                
            </javadoc>
            <method name="setLastDragLocation" type="void" line="666">
                <params>
                    <param name="l" type="int"/>
                </params>
            </method>
            <javadoc line="670">
                @return increment via keyboard methods.                
            </javadoc>
            <method name="getKeyboardMoveIncrement" type="int" line="673"/>
            <class name="PropertyHandler" line="677">
                <comment line="281">
                    This is used by the LayoutManager to determine when it should use                    
                </comment>
                <comment line="282">
                    the divider location provided by the JSplitPane. This is used as there                    
                </comment>
                <comment line="283">
                    is no way to determine when the layout process has completed.                    
                </comment>
                <comment line="687">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="688">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="689">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="690">
                    class calls into the Handler.                    
                </comment>
                <comment line="711">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="712">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="713">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="714">
                    class calls into the Handler.                    
                </comment>
                <comment line="1277">
                                        
                </comment>
                <comment line="1299">
                                        
                </comment>
                <comment line="1300">
                    LayoutManager                    
                </comment>
                <comment line="1301">
                                        
                </comment>
                <comment line="1521">
                                        
                </comment>
                <comment line="1522">
                    LayoutManager2                    
                </comment>
                <comment line="1523">
                                        
                </comment>
                <comment line="1585">
                                        
                </comment>
                <comment line="1586">
                    New methods.                    
                </comment>
                <comment line="1587">
                                        
                </comment>
                <comment line="2031">
                                        
                </comment>
                <comment line="2032">
                    PropertyChangeListener                    
                </comment>
                <comment line="2033">
                                        
                </comment>
                <comment line="2069">
                                        
                </comment>
                <comment line="2070">
                    FocusListener                    
                </comment>
                <comment line="2071">
                                        
                </comment>
                <implements interface="PropertyChangeListener"/>
                <javadoc line="677">
                    Implementation of the PropertyChangeListener
                      that the JSplitPane UI uses.
                      &lt;p&gt;
                      This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of BasicSplitPaneUI.                    
                </javadoc>
                <javadoc line="691">
                    Messaged from the &lt;code&gt;JSplitPane&lt;/code&gt; the receiver is
                      contained in.  May potentially reset the layout manager and cause a
                      &lt;code&gt;validate&lt;/code&gt; to be sent.                    
                </javadoc>
                <method name="propertyChange" type="void" line="696">
                    <params>
                        <param name="e" type="PropertyChangeEvent"/>
                    </params>
                </method>
            </class>
            <class name="FocusHandler" line="702">
                <extends class="FocusAdapter"/>
                <comment line="281">
                    This is used by the LayoutManager to determine when it should use                    
                </comment>
                <comment line="282">
                    the divider location provided by the JSplitPane. This is used as there                    
                </comment>
                <comment line="283">
                    is no way to determine when the layout process has completed.                    
                </comment>
                <comment line="687">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="688">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="689">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="690">
                    class calls into the Handler.                    
                </comment>
                <comment line="711">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="712">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="713">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="714">
                    class calls into the Handler.                    
                </comment>
                <comment line="1277">
                                        
                </comment>
                <comment line="1299">
                                        
                </comment>
                <comment line="1300">
                    LayoutManager                    
                </comment>
                <comment line="1301">
                                        
                </comment>
                <comment line="1521">
                                        
                </comment>
                <comment line="1522">
                    LayoutManager2                    
                </comment>
                <comment line="1523">
                                        
                </comment>
                <comment line="1585">
                                        
                </comment>
                <comment line="1586">
                    New methods.                    
                </comment>
                <comment line="1587">
                                        
                </comment>
                <comment line="2031">
                                        
                </comment>
                <comment line="2032">
                    PropertyChangeListener                    
                </comment>
                <comment line="2033">
                                        
                </comment>
                <comment line="2069">
                                        
                </comment>
                <comment line="2070">
                    FocusListener                    
                </comment>
                <comment line="2071">
                                        
                </comment>
                <javadoc line="702">
                    Implementation of the FocusListener that the JSplitPane UI uses.
                      &lt;p&gt;
                      This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of BasicSplitPaneUI.                    
                </javadoc>
                <method name="focusGained" type="void" line="714">
                    <params>
                        <param name="ev" type="FocusEvent"/>
                    </params>
                </method>
                <method name="focusLost" type="void" line="718">
                    <params>
                        <param name="ev" type="FocusEvent"/>
                    </params>
                </method>
            </class>
            <class name="KeyboardUpLeftHandler" line="724">
                <comment line="281">
                    This is used by the LayoutManager to determine when it should use                    
                </comment>
                <comment line="282">
                    the divider location provided by the JSplitPane. This is used as there                    
                </comment>
                <comment line="283">
                    is no way to determine when the layout process has completed.                    
                </comment>
                <comment line="687">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="688">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="689">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="690">
                    class calls into the Handler.                    
                </comment>
                <comment line="711">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="712">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="713">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="714">
                    class calls into the Handler.                    
                </comment>
                <comment line="1277">
                                        
                </comment>
                <comment line="1299">
                                        
                </comment>
                <comment line="1300">
                    LayoutManager                    
                </comment>
                <comment line="1301">
                                        
                </comment>
                <comment line="1521">
                                        
                </comment>
                <comment line="1522">
                    LayoutManager2                    
                </comment>
                <comment line="1523">
                                        
                </comment>
                <comment line="1585">
                                        
                </comment>
                <comment line="1586">
                    New methods.                    
                </comment>
                <comment line="1587">
                                        
                </comment>
                <comment line="2031">
                                        
                </comment>
                <comment line="2032">
                    PropertyChangeListener                    
                </comment>
                <comment line="2033">
                                        
                </comment>
                <comment line="2069">
                                        
                </comment>
                <comment line="2070">
                    FocusListener                    
                </comment>
                <comment line="2071">
                                        
                </comment>
                <implements interface="ActionListener"/>
                <javadoc line="724">
                    Implementation of an ActionListener that the JSplitPane UI uses for
                      handling specific key presses.
                      &lt;p&gt;
                      This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of BasicSplitPaneUI.                    
                </javadoc>
                <method name="actionPerformed" type="void" line="733">
                    <params>
                        <param name="ev" type="ActionEvent"/>
                    </params>
                    <scope line="734"/>
                </method>
            </class>
            <class name="KeyboardDownRightHandler" line="741">
                <comment line="281">
                    This is used by the LayoutManager to determine when it should use                    
                </comment>
                <comment line="282">
                    the divider location provided by the JSplitPane. This is used as there                    
                </comment>
                <comment line="283">
                    is no way to determine when the layout process has completed.                    
                </comment>
                <comment line="687">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="688">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="689">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="690">
                    class calls into the Handler.                    
                </comment>
                <comment line="711">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="712">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="713">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="714">
                    class calls into the Handler.                    
                </comment>
                <comment line="1277">
                                        
                </comment>
                <comment line="1299">
                                        
                </comment>
                <comment line="1300">
                    LayoutManager                    
                </comment>
                <comment line="1301">
                                        
                </comment>
                <comment line="1521">
                                        
                </comment>
                <comment line="1522">
                    LayoutManager2                    
                </comment>
                <comment line="1523">
                                        
                </comment>
                <comment line="1585">
                                        
                </comment>
                <comment line="1586">
                    New methods.                    
                </comment>
                <comment line="1587">
                                        
                </comment>
                <comment line="2031">
                                        
                </comment>
                <comment line="2032">
                    PropertyChangeListener                    
                </comment>
                <comment line="2033">
                                        
                </comment>
                <comment line="2069">
                                        
                </comment>
                <comment line="2070">
                    FocusListener                    
                </comment>
                <comment line="2071">
                                        
                </comment>
                <implements interface="ActionListener"/>
                <javadoc line="741">
                    Implementation of an ActionListener that the JSplitPane UI uses for
                      handling specific key presses.
                      &lt;p&gt;
                      This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of BasicSplitPaneUI.                    
                </javadoc>
                <method name="actionPerformed" type="void" line="750">
                    <params>
                        <param name="ev" type="ActionEvent"/>
                    </params>
                    <scope line="751"/>
                </method>
            </class>
            <class name="KeyboardHomeHandler" line="759">
                <comment line="281">
                    This is used by the LayoutManager to determine when it should use                    
                </comment>
                <comment line="282">
                    the divider location provided by the JSplitPane. This is used as there                    
                </comment>
                <comment line="283">
                    is no way to determine when the layout process has completed.                    
                </comment>
                <comment line="687">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="688">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="689">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="690">
                    class calls into the Handler.                    
                </comment>
                <comment line="711">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="712">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="713">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="714">
                    class calls into the Handler.                    
                </comment>
                <comment line="1277">
                                        
                </comment>
                <comment line="1299">
                                        
                </comment>
                <comment line="1300">
                    LayoutManager                    
                </comment>
                <comment line="1301">
                                        
                </comment>
                <comment line="1521">
                                        
                </comment>
                <comment line="1522">
                    LayoutManager2                    
                </comment>
                <comment line="1523">
                                        
                </comment>
                <comment line="1585">
                                        
                </comment>
                <comment line="1586">
                    New methods.                    
                </comment>
                <comment line="1587">
                                        
                </comment>
                <comment line="2031">
                                        
                </comment>
                <comment line="2032">
                    PropertyChangeListener                    
                </comment>
                <comment line="2033">
                                        
                </comment>
                <comment line="2069">
                                        
                </comment>
                <comment line="2070">
                    FocusListener                    
                </comment>
                <comment line="2071">
                                        
                </comment>
                <implements interface="ActionListener"/>
                <javadoc line="759">
                    Implementation of an ActionListener that the JSplitPane UI uses for
                      handling specific key presses.
                      &lt;p&gt;
                      This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of BasicSplitPaneUI.                    
                </javadoc>
                <method name="actionPerformed" type="void" line="768">
                    <params>
                        <param name="ev" type="ActionEvent"/>
                    </params>
                    <scope line="769"/>
                </method>
            </class>
            <class name="KeyboardEndHandler" line="776">
                <comment line="281">
                    This is used by the LayoutManager to determine when it should use                    
                </comment>
                <comment line="282">
                    the divider location provided by the JSplitPane. This is used as there                    
                </comment>
                <comment line="283">
                    is no way to determine when the layout process has completed.                    
                </comment>
                <comment line="687">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="688">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="689">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="690">
                    class calls into the Handler.                    
                </comment>
                <comment line="711">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="712">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="713">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="714">
                    class calls into the Handler.                    
                </comment>
                <comment line="1277">
                                        
                </comment>
                <comment line="1299">
                                        
                </comment>
                <comment line="1300">
                    LayoutManager                    
                </comment>
                <comment line="1301">
                                        
                </comment>
                <comment line="1521">
                                        
                </comment>
                <comment line="1522">
                    LayoutManager2                    
                </comment>
                <comment line="1523">
                                        
                </comment>
                <comment line="1585">
                                        
                </comment>
                <comment line="1586">
                    New methods.                    
                </comment>
                <comment line="1587">
                                        
                </comment>
                <comment line="2031">
                                        
                </comment>
                <comment line="2032">
                    PropertyChangeListener                    
                </comment>
                <comment line="2033">
                                        
                </comment>
                <comment line="2069">
                                        
                </comment>
                <comment line="2070">
                    FocusListener                    
                </comment>
                <comment line="2071">
                                        
                </comment>
                <implements interface="ActionListener"/>
                <javadoc line="776">
                    Implementation of an ActionListener that the JSplitPane UI uses for
                      handling specific key presses.
                      &lt;p&gt;
                      This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of BasicSplitPaneUI.                    
                </javadoc>
                <method name="actionPerformed" type="void" line="785">
                    <params>
                        <param name="ev" type="ActionEvent"/>
                    </params>
                    <scope line="786">
                        <declaration name="insets" type="Insets" line="787"/>
                        <declaration name="bottomI" type="int" line="788"/>
                        <declaration name="rightI" type="int" line="789"/>
                        <scope line="791"/>
                        <scope line="795"/>
                    </scope>
                </method>
            </class>
            <class name="KeyboardResizeToggleHandler" line="804">
                <comment line="281">
                    This is used by the LayoutManager to determine when it should use                    
                </comment>
                <comment line="282">
                    the divider location provided by the JSplitPane. This is used as there                    
                </comment>
                <comment line="283">
                    is no way to determine when the layout process has completed.                    
                </comment>
                <comment line="687">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="688">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="689">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="690">
                    class calls into the Handler.                    
                </comment>
                <comment line="711">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="712">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="713">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="714">
                    class calls into the Handler.                    
                </comment>
                <comment line="1277">
                                        
                </comment>
                <comment line="1299">
                                        
                </comment>
                <comment line="1300">
                    LayoutManager                    
                </comment>
                <comment line="1301">
                                        
                </comment>
                <comment line="1521">
                                        
                </comment>
                <comment line="1522">
                    LayoutManager2                    
                </comment>
                <comment line="1523">
                                        
                </comment>
                <comment line="1585">
                                        
                </comment>
                <comment line="1586">
                    New methods.                    
                </comment>
                <comment line="1587">
                                        
                </comment>
                <comment line="2031">
                                        
                </comment>
                <comment line="2032">
                    PropertyChangeListener                    
                </comment>
                <comment line="2033">
                                        
                </comment>
                <comment line="2069">
                                        
                </comment>
                <comment line="2070">
                    FocusListener                    
                </comment>
                <comment line="2071">
                                        
                </comment>
                <implements interface="ActionListener"/>
                <javadoc line="804">
                    Implementation of an ActionListener that the JSplitPane UI uses for
                      handling specific key presses.
                      &lt;p&gt;
                      This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of BasicSplitPaneUI.                    
                </javadoc>
                <method name="actionPerformed" type="void" line="813">
                    <params>
                        <param name="ev" type="ActionEvent"/>
                    </params>
                    <scope line="814"/>
                </method>
            </class>
            <javadoc line="820">
                Returns the divider between the top Components.                
            </javadoc>
            <method name="getDivider" type="BasicSplitPaneDivider" line="823"/>
            <javadoc line="828">
                Returns the default non continuous layout divider, which is an
                  instance of {@code Canvas} that fills in the background with dark gray.                
            </javadoc>
            <method name="createDefaultNonContinuousLayoutDivider" type="Component" line="832">
                <anonymous_class line="833">
                    <method name="paint" type="void" line="834">
                        <params>
                            <param name="g" type="Graphics"/>
                        </params>
                        <scope line="835">
                            <declaration name="size" type="Dimension" line="836"/>
                            <scope line="839"/>
                            <scope line="841"/>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="850">
                Sets the divider to use when the splitPane is configured to
                  not continuously layout. This divider will only be used during a
                  dragging session. It is recommended that the passed in component
                  be a heavy weight.                
            </javadoc>
            <method name="setNonContinuousLayoutDivider" type="void" line="856">
                <params>
                    <param name="newDivider" type="Component"/>
                </params>
            </method>
            <javadoc line="861">
                Sets the divider to use.                
            </javadoc>
            <method name="setNonContinuousLayoutDivider" type="void" line="865">
                <params>
                    <param name="newDivider" type="Component"/>
                    <param name="rememberSizes" type="boolean"/>
                </params>
                <scope line="867"/>
            </method>
            <method name="addHeavyweightDivider" type="void" line="873">
                <comment line="876">
                                        
                </comment>
                <comment line="877">
                    This is all done so that the nonContinuousLayoutDivider will                    
                </comment>
                <comment line="878">
                    be drawn on top of the other components, without this, one                    
                </comment>
                <comment line="879">
                    of the heavyweights will draw over the divider!                    
                </comment>
                <scope line="874">
                    <declaration name="leftC" type="Component" line="880"/>
                    <declaration name="rightC" type="Component" line="881"/>
                    <declaration name="lastLocation" type="int" line="882"/>
                    <scope line="896"/>
                </scope>
            </method>
            <javadoc line="904">
                Returns the divider to use when the splitPane is configured to
                  not continuously layout. This divider will only be used during a
                  dragging session.                
            </javadoc>
            <method name="getNonContinuousLayoutDivider" type="Component" line="909"/>
            <javadoc line="914">
                Returns the splitpane this instance is currently contained
                  in.                
            </javadoc>
            <method name="getSplitPane" type="JSplitPane" line="918"/>
            <javadoc line="923">
                Creates the default divider.                
            </javadoc>
            <method name="createDefaultDivider" type="BasicSplitPaneDivider" line="926"/>
            <javadoc line="931">
                Messaged to reset the preferred sizes.                
            </javadoc>
            <method name="resetToPreferredSizes" type="void" line="934">
                <params>
                    <param name="jc" type="JSplitPane"/>
                </params>
                <scope line="935"/>
            </method>
            <javadoc line="943">
                Sets the location of the divider to location.                
            </javadoc>
            <method name="setDividerLocation" type="void" line="946">
                <params>
                    <param name="jc" type="JSplitPane"/>
                    <param name="location" type="int"/>
                </params>
                <scope line="947">
                    <scope line="952">
                        <declaration name="insets" type="Insets" line="953"/>
                        <declaration name="orientation" type="int" line="954"/>
                        <scope line="960"/>
                    </scope>
                </scope>
                <scope line="965"/>
            </method>
            <javadoc line="971">
                Returns the location of the divider, which may differ from what
                  the splitpane thinks the location of the divider is.                
            </javadoc>
            <method name="getDividerLocation" type="int" line="975">
                <params>
                    <param name="jc" type="JSplitPane"/>
                </params>
            </method>
            <javadoc line="982">
                Gets the minimum location of the divider.                
            </javadoc>
            <method name="getMinimumDividerLocation" type="int" line="985">
                <params>
                    <param name="jc" type="JSplitPane"/>
                </params>
                <declaration name="minLoc" type="int" line="986"/>
                <declaration name="leftC" type="Component" line="987"/>
                <scope line="989">
                    <declaration name="insets" type="Insets" line="990"/>
                    <declaration name="minSize" type="Dimension" line="991"/>
                    <scope line="992"/>
                    <scope line="994"/>
                    <scope line="997">
                        <scope line="998"/>
                        <scope line="1000"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="1009">
                Gets the maximum location of the divider.                
            </javadoc>
            <method name="getMaximumDividerLocation" type="int" line="1012">
                <params>
                    <param name="jc" type="JSplitPane"/>
                </params>
                <declaration name="splitPaneSize" type="Dimension" line="1013"/>
                <declaration name="maxLoc" type="int" line="1014"/>
                <declaration name="rightC" type="Component" line="1015"/>
                <scope line="1017">
                    <declaration name="insets" type="Insets" line="1018"/>
                    <declaration name="minSize" type="Dimension" line="1019"/>
                    <scope line="1020"/>
                    <scope line="1023"/>
                    <scope line="1025"/>
                    <scope line="1029">
                        <scope line="1030"/>
                        <scope line="1032"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="1041">
                Called when the specified split pane has finished painting
                  its children.                
            </javadoc>
            <method name="finishedPaintingChildren" type="void" line="1045">
                <params>
                    <param name="sp" type="JSplitPane"/>
                    <param name="g" type="Graphics"/>
                </params>
                <scope line="1047">
                    <declaration name="size" type="Dimension" line="1048"/>
                    <scope line="1051"/>
                    <scope line="1054"/>
                </scope>
            </method>
            <javadoc line="1062">
                @inheritDoc                
            </javadoc>
            <method name="paint" type="void" line="1065">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="jc" type="JComponent"/>
                </params>
                <scope line="1066"/>
            </method>
            <javadoc line="1074">
                Returns the preferred size for the passed in component,
                  This is passed off to the current layoutmanager.                
            </javadoc>
            <method name="getPreferredSize" type="Dimension" line="1078">
                <params>
                    <param name="jc" type="JComponent"/>
                </params>
            </method>
            <javadoc line="1085">
                Returns the minimum size for the passed in component,
                  This is passed off to the current layoutmanager.                
            </javadoc>
            <method name="getMinimumSize" type="Dimension" line="1089">
                <params>
                    <param name="jc" type="JComponent"/>
                </params>
            </method>
            <javadoc line="1096">
                Returns the maximum size for the passed in component,
                  This is passed off to the current layoutmanager.                
            </javadoc>
            <method name="getMaximumSize" type="Dimension" line="1100">
                <params>
                    <param name="jc" type="JComponent"/>
                </params>
            </method>
            <javadoc line="1107">
                Returns the insets. The insets are returned from the border insets
                  of the current border.                
            </javadoc>
            <method name="getInsets" type="Insets" line="1111">
                <params>
                    <param name="jc" type="JComponent"/>
                </params>
            </method>
            <javadoc line="1116">
                Resets the layout manager based on orientation and messages it
                  with invalidateLayout to pull in appropriate Components.                
            </javadoc>
            <method name="resetLayoutManager" type="void" line="1120">
                <scope line="1121"/>
                <scope line="1123"/>
            </method>
            <javadoc line="1132">
                Set the value to indicate if one of the splitpane sides is expanded.                
            </javadoc>
            <method name="setKeepHidden" type="void" line="1135">
                <params>
                    <param name="keepHidden" type="boolean"/>
                </params>
            </method>
            <javadoc line="1139">
                The value returned indicates if one of the splitpane sides is expanded.                
                <return>
                    true if one of the splitpane sides is expanded, false otherwise.                    
                </return>
            </javadoc>
            <method name="getKeepHidden" type="boolean" line="1143"/>
            <javadoc line="1147">
                Should be messaged before the dragging session starts, resets
                  lastDragLocation and dividerSize.                
            </javadoc>
            <method name="startDragging" type="void" line="1151">
                <declaration name="leftC" type="Component" line="1152"/>
                <declaration name="rightC" type="Component" line="1153"/>
                <declaration name="cPeer" type="ComponentPeer" line="1154"/>
                <scope line="1159"/>
                <scope line="1162"/>
                <scope line="1165">
                    <scope line="1168"/>
                </scope>
                <scope line="1174">
                    <scope line="1177"/>
                </scope>
            </method>
            <javadoc line="1187">
                Messaged during a dragging session to move the divider to the
                  passed in location. If continuousLayout is true the location is
                  reset and the splitPane validated.                
            </javadoc>
            <method name="dragDividerTo" type="void" line="1192">
                <params>
                    <param name="location" type="int"/>
                </params>
                <scope line="1193">
                    <scope line="1194"/>
                    <scope line="1197">
                        <declaration name="lastLoc" type="int" line="1198"/>
                        <scope line="1201">
                            <scope line="1202"/>
                            <scope line="1205">
                                <declaration name="splitHeight" type="int" line="1206"/>
                            </scope>
                        </scope>
                        <scope line="1212">
                            <scope line="1213"/>
                            <scope line="1216">
                                <declaration name="splitWidth" type="int" line="1217"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1230">
                Messaged to finish the dragging session. If not continuous display
                  the dividers location will be reset.                
            </javadoc>
            <method name="finishDraggingTo" type="void" line="1234">
                <params>
                    <param name="location" type="int"/>
                </params>
                <scope line="1237">
                    <declaration name="leftC" type="Component" line="1238"/>
                    <declaration name="leftBounds" type="Rectangle" line="1239"/>
                    <scope line="1241">
                        <scope line="1242"/>
                        <scope line="1245"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="1255">
                As of Java 2 platform v1.3 this method is no longer used. Instead
                  you should set the border on the divider.
                  &lt;p&gt;
                  Returns the width of one side of the divider border.                
                <deprecated>
                    As of Java 2 platform v1.3, instead set the border on the
                      divider.                    
                </deprecated>
            </javadoc>
            <method name="getDividerBorderSize" type="int" line="1265"/>
            <class name="BasicHorizontalLayoutManager" line="1270">
                <comment line="281">
                    This is used by the LayoutManager to determine when it should use                    
                </comment>
                <comment line="282">
                    the divider location provided by the JSplitPane. This is used as there                    
                </comment>
                <comment line="283">
                    is no way to determine when the layout process has completed.                    
                </comment>
                <comment line="687">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="688">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="689">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="690">
                    class calls into the Handler.                    
                </comment>
                <comment line="711">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="712">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="713">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="714">
                    class calls into the Handler.                    
                </comment>
                <comment line="1277">
                                        
                </comment>
                <comment line="1299">
                                        
                </comment>
                <comment line="1300">
                    LayoutManager                    
                </comment>
                <comment line="1301">
                                        
                </comment>
                <comment line="1521">
                                        
                </comment>
                <comment line="1522">
                    LayoutManager2                    
                </comment>
                <comment line="1523">
                                        
                </comment>
                <comment line="1585">
                                        
                </comment>
                <comment line="1586">
                    New methods.                    
                </comment>
                <comment line="1587">
                                        
                </comment>
                <comment line="2031">
                                        
                </comment>
                <comment line="2032">
                    PropertyChangeListener                    
                </comment>
                <comment line="2033">
                                        
                </comment>
                <comment line="2069">
                                        
                </comment>
                <comment line="2070">
                    FocusListener                    
                </comment>
                <comment line="2071">
                                        
                </comment>
                <implements interface="LayoutManager2"/>
                <javadoc line="1270">
                    LayoutManager for JSplitPanes that have an orientation of
                      HORIZONTAL_SPLIT.                    
                </javadoc>
                <declaration name="sizes" type="int[]" line="1277"/>
                <declaration name="components" type="Component[]" line="1278"/>
                <declaration name="lastSplitPaneSize" type="int" line="1279"/>
                <javadoc line="1279">
                    Size of the splitpane the last time laid out.                    
                </javadoc>
                <declaration name="doReset" type="boolean" line="1281"/>
                <javadoc line="1281">
                    True if resetToPreferredSizes has been invoked.                    
                </javadoc>
                <declaration name="axis" type="int" line="1283"/>
                <javadoc line="1283">
                    Axis, 0 for horizontal, or 1 for veritcal.                    
                </javadoc>
                <method name="BasicHorizontalLayoutManager" type="constructor" line="1287"/>
                <method name="BasicHorizontalLayoutManager" type="constructor" line="1291">
                    <params>
                        <param name="axis" type="int"/>
                    </params>
                </method>
                <javadoc line="1302">
                    Does the actual layout.                    
                </javadoc>
                <method name="layoutContainer" type="void" line="1305">
                    <params>
                        <param name="container" type="Container"/>
                    </params>
                    <comment line="1308">
                        If the splitpane has a zero size then no op out of here.                        
                    </comment>
                    <comment line="1309">
                        If we execute this function now, we&apos;re going to cause ourselves                        
                    </comment>
                    <comment line="1310">
                        much grief.                        
                    </comment>
                    <comment line="1350">
                        Reset the bounds of each component                        
                    </comment>
                    <comment line="1374">
                        This is tricky, there is never a good time for us                        
                    </comment>
                    <comment line="1375">
                        to push the value to the splitpane, painted appears to                        
                    </comment>
                    <comment line="1376">
                        the best time to do it. What is really needed is                        
                    </comment>
                    <comment line="1377">
                        notification that layout has completed.                        
                    </comment>
                    <comment line="1386">
                        This is not always needed, but is rather tricky                        
                    </comment>
                    <comment line="1387">
                        to determine when... The case this is needed for                        
                    </comment>
                    <comment line="1388">
                        is if the user sets the divider location to some                        
                    </comment>
                    <comment line="1389">
                        bogus value, say 0, and the actual value is 1, the                        
                    </comment>
                    <comment line="1390">
                        call to setDividerLocation(1) will preserve the                        
                    </comment>
                    <comment line="1391">
                        old value of 0, when we really want the divider                        
                    </comment>
                    <comment line="1392">
                        location value  before the call. This is needed for                        
                    </comment>
                    <comment line="1393">
                        the one touch buttons.                        
                    </comment>
                    <declaration name="containerSize" type="Dimension" line="1306"/>
                    <scope line="1311"/>
                    <declaration name="spDividerLocation" type="int" line="1316"/>
                    <declaration name="insets" type="Insets" line="1317"/>
                    <declaration name="availableSize" type="int" line="1318"/>
                    <declaration name="newSize" type="int" line="1320"/>
                    <declaration name="beginLocation" type="int" line="1321"/>
                    <declaration name="dOffset" type="int" line="1322"/>
                    <declaration name="dSize" type="Dimension" line="1323"/>
                    <scope line="1326"/>
                    <scope line="1332">
                        <scope line="1333"/>
                        <scope line="1336"/>
                    </scope>
                    <scope line="1342"/>
                    <declaration name="nextLocation" type="int" line="1351"/>
                    <declaration name="counter" type="int" line="1352"/>
                    <scope line="1354">
                        <scope line="1356"/>
                    </scope>
                    <scope line="1373">
                        <declaration name="newLocation" type="int" line="1378"/>
                        <scope line="1380">
                            <declaration name="lastLocation" type="int" line="1381"/>
                            <scope line="1384"/>
                            <scope line="1395"/>
                        </scope>
                    </scope>
                </method>
                <javadoc line="1403">
                    Adds the component at place.  Place must be one of
                      JSplitPane.LEFT, RIGHT, TOP, BOTTOM, or null (for the
                      divider).                    
                </javadoc>
                <method name="addLayoutComponent" type="void" line="1408">
                    <params>
                        <param name="place" type="String"/>
                        <param name="component" type="Component"/>
                    </params>
                    <comment line="1413">
                                                
                    </comment>
                    <declaration name="isValid" type="boolean" line="1409"/>
                    <scope line="1411">
                        <scope line="1412"/>
                        <scope line="1418"/>
                        <scope line="1422"/>
                    </scope>
                    <scope line="1428"/>
                </method>
                <javadoc line="1439">
                    Returns the minimum size needed to contain the children.
                      The width is the sum of all the childrens min widths and
                      the height is the largest of the childrens minimum heights.                    
                </javadoc>
                <method name="minimumLayoutSize" type="Dimension" line="1444">
                    <params>
                        <param name="container" type="Container"/>
                    </params>
                    <declaration name="minPrimary" type="int" line="1445"/>
                    <declaration name="minSecondary" type="int" line="1446"/>
                    <declaration name="insets" type="Insets" line="1447"/>
                    <scope line="1449">
                        <scope line="1450">
                            <declaration name="minSize" type="Dimension" line="1451"/>
                            <declaration name="secSize" type="int" line="1452"/>
                        </scope>
                    </scope>
                    <scope line="1459"/>
                    <scope line="1465"/>
                </method>
                <javadoc line="1472">
                    Returns the preferred size needed to contain the children.
                      The width is the sum of all the childrens preferred widths and
                      the height is the largest of the childrens preferred heights.                    
                </javadoc>
                <method name="preferredLayoutSize" type="Dimension" line="1477">
                    <params>
                        <param name="container" type="Container"/>
                    </params>
                    <declaration name="prePrimary" type="int" line="1478"/>
                    <declaration name="preSecondary" type="int" line="1479"/>
                    <declaration name="insets" type="Insets" line="1480"/>
                    <scope line="1482">
                        <scope line="1483">
                            <declaration name="preSize" type="Dimension" line="1484"/>
                            <declaration name="secSize" type="int" line="1486"/>
                        </scope>
                    </scope>
                    <scope line="1493"/>
                    <scope line="1499"/>
                </method>
                <javadoc line="1506">
                    Removes the specified component from our knowledge.                    
                </javadoc>
                <method name="removeLayoutComponent" type="void" line="1509">
                    <params>
                        <param name="component" type="Component"/>
                    </params>
                    <scope line="1510">
                        <scope line="1511"/>
                    </scope>
                </method>
                <javadoc line="1525">
                    Adds the specified component to the layout, using the specified
                      constraint object.                    
                    <param>
                        comp the component to be added                        
                    </param>
                    <param>
                        constraints  where/how the component is added to the layout.                        
                    </param>
                </javadoc>
                <method name="addLayoutComponent" type="void" line="1531">
                    <params>
                        <param name="comp" type="Component"/>
                        <param name="constraints" type="Object"/>
                    </params>
                    <scope line="1532"/>
                    <scope line="1534"/>
                </method>
                <javadoc line="1542">
                    Returns the alignment along the x axis.  This specifies how
                      the component would like to be aligned relative to other
                      components.  The value should be a number between 0 and 1
                      where 0 represents alignment along the origin, 1 is aligned
                      the furthest away from the origin, 0.5 is centered, etc.                    
                </javadoc>
                <method name="getLayoutAlignmentX" type="float" line="1549">
                    <params>
                        <param name="target" type="Container"/>
                    </params>
                </method>
                <javadoc line="1554">
                    Returns the alignment along the y axis.  This specifies how
                      the component would like to be aligned relative to other
                      components.  The value should be a number between 0 and 1
                      where 0 represents alignment along the origin, 1 is aligned
                      the furthest away from the origin, 0.5 is centered, etc.                    
                </javadoc>
                <method name="getLayoutAlignmentY" type="float" line="1561">
                    <params>
                        <param name="target" type="Container"/>
                    </params>
                </method>
                <javadoc line="1566">
                    Does nothing. If the developer really wants to change the
                      size of one of the views JSplitPane.resetToPreferredSizes should
                      be messaged.                    
                </javadoc>
                <method name="invalidateLayout" type="void" line="1571">
                    <params>
                        <param name="c" type="Container"/>
                    </params>
                </method>
                <javadoc line="1575">
                    Returns the maximum layout size, which is Integer.MAX_VALUE
                      in both directions.                    
                </javadoc>
                <method name="maximumLayoutSize" type="Dimension" line="1579">
                    <params>
                        <param name="target" type="Container"/>
                    </params>
                </method>
                <javadoc line="1588">
                    Marks the receiver so that the next time this instance is
                      laid out it&apos;ll ask for the preferred sizes.                    
                </javadoc>
                <method name="resetToPreferredSizes" type="void" line="1592"/>
                <javadoc line="1596">
                    Resets the size of the Component at the passed in location.                    
                </javadoc>
                <method name="resetSizeAt" type="void" line="1599">
                    <params>
                        <param name="index" type="int"/>
                    </params>
                </method>
                <javadoc line="1605">
                    Sets the sizes to &lt;code&gt;newSizes&lt;/code&gt;.                    
                </javadoc>
                <method name="setSizes" type="void" line="1608">
                    <params>
                        <param name="newSizes" type="int[]"/>
                    </params>
                </method>
                <javadoc line="1613">
                    Returns the sizes of the components.                    
                </javadoc>
                <method name="getSizes" type="int[]" line="1616">
                    <declaration name="retSizes" type="int[]" line="1617"/>
                </method>
                <javadoc line="1624">
                    Returns the width of the passed in Components preferred size.                    
                </javadoc>
                <method name="getPreferredSizeOfComponent" type="int" line="1627">
                    <params>
                        <param name="c" type="Component"/>
                    </params>
                </method>
                <javadoc line="1632">
                    Returns the width of the passed in Components minimum size.                    
                </javadoc>
                <method name="getMinimumSizeOfComponent" type="int" line="1635">
                    <params>
                        <param name="c" type="Component"/>
                    </params>
                </method>
                <javadoc line="1640">
                    Returns the width of the passed in component.                    
                </javadoc>
                <method name="getSizeOfComponent" type="int" line="1643">
                    <params>
                        <param name="c" type="Component"/>
                    </params>
                </method>
                <javadoc line="1648">
                    Returns the available width based on the container size and
                      Insets.                    
                </javadoc>
                <method name="getAvailableSize" type="int" line="1653">
                    <params>
                        <param name="containerSize" type="Dimension"/>
                        <param name="insets" type="Insets"/>
                    </params>
                </method>
                <javadoc line="1662">
                    Returns the left inset, unless the Insets are null in which case
                      0 is returned.                    
                </javadoc>
                <method name="getInitialLocation" type="int" line="1666">
                    <params>
                        <param name="insets" type="Insets"/>
                    </params>
                </method>
                <javadoc line="1673">
                    Sets the width of the component c to be size, placing its
                      x location at location, y to the insets.top and height
                      to the containersize.height less the top and bottom insets.                    
                </javadoc>
                <method name="setComponentToSize" type="void" line="1680">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="size" type="int"/>
                        <param name="location" type="int"/>
                        <param name="insets" type="Insets"/>
                        <param name="containerSize" type="Dimension"/>
                    </params>
                    <scope line="1681">
                        <scope line="1682"/>
                        <scope line="1687"/>
                    </scope>
                    <scope line="1692">
                        <scope line="1693"/>
                        <scope line="1696"/>
                    </scope>
                </method>
                <javadoc line="1702">
                    If the axis == 0, the width is returned, otherwise the height.                    
                </javadoc>
                <method name="getSizeForPrimaryAxis" type="int" line="1705">
                    <params>
                        <param name="size" type="Dimension"/>
                    </params>
                    <scope line="1706"/>
                </method>
                <javadoc line="1712">
                    If the axis == 0, the width is returned, otherwise the height.                    
                </javadoc>
                <method name="getSizeForSecondaryAxis" type="int" line="1715">
                    <params>
                        <param name="size" type="Dimension"/>
                    </params>
                    <scope line="1716"/>
                </method>
                <javadoc line="1722">
                    Returns a particular value of the inset identified by the
                      axis and &lt;code&gt;isTop&lt;/code&gt;&lt;p&gt;
                      axis isTop
                      0    true    - left
                      0    false   - right
                      1    true    - top
                      1    false   - bottom                    
                </javadoc>
                <method name="getSizeForPrimaryAxis" type="int" line="1731">
                    <params>
                        <param name="insets" type="Insets"/>
                        <param name="isTop" type="boolean"/>
                    </params>
                    <scope line="1732">
                        <scope line="1733"/>
                    </scope>
                    <scope line="1738"/>
                </method>
                <javadoc line="1744">
                    Returns a particular value of the inset identified by the
                      axis and &lt;code&gt;isTop&lt;/code&gt;&lt;p&gt;
                      axis isTop
                      0    true    - left
                      0    false   - right
                      1    true    - top
                      1    false   - bottom                    
                </javadoc>
                <method name="getSizeForSecondaryAxis" type="int" line="1753">
                    <params>
                        <param name="insets" type="Insets"/>
                        <param name="isTop" type="boolean"/>
                    </params>
                    <scope line="1754">
                        <scope line="1755"/>
                    </scope>
                    <scope line="1760"/>
                </method>
                <javadoc line="1766">
                    Determines the components. This should be called whenever
                      a new instance of this is installed into an existing
                      SplitPane.                    
                </javadoc>
                <method name="updateComponents" type="void" line="1771">
                    <comment line="1794">
                                                
                    </comment>
                    <declaration name="comp" type="Component" line="1772"/>
                    <scope line="1775">
                        <scope line="1777"/>
                        <scope line="1779"/>
                    </scope>
                    <scope line="1785">
                        <scope line="1787"/>
                        <scope line="1789"/>
                    </scope>
                    <declaration name="children" type="Component[]" line="1795"/>
                    <declaration name="oldDivider" type="Component" line="1796"/>
                    <scope line="1799">
                        <scope line="1802">
                            <scope line="1803"/>
                            <scope line="1805"/>
                        </scope>
                    </scope>
                    <scope line="1811"/>
                    <scope line="1814"/>
                </method>
                <javadoc line="1819">
                    Resets the size of the first component to &lt;code&gt;leftSize&lt;/code&gt;,
                      and the right component to the remainder of the space.                    
                </javadoc>
                <method name="setDividerLocation" type="void" line="1823">
                    <params>
                        <param name="leftSize" type="int"/>
                        <param name="availableSize" type="int"/>
                    </params>
                    <declaration name="lValid" type="boolean" line="1824"/>
                    <declaration name="rValid" type="boolean" line="1826"/>
                    <declaration name="dValid" type="boolean" line="1828"/>
                    <declaration name="max" type="int" line="1830"/>
                    <scope line="1832"/>
                    <scope line="1836">
                        <scope line="1837"/>
                        <scope line="1841"/>
                    </scope>
                    <scope line="1846"/>
                </method>
                <javadoc line="1852">
                    Returns an array of the minimum sizes of the components.                    
                </javadoc>
                <method name="getPreferredSizes" type="int[]" line="1855">
                    <declaration name="retValue" type="int[]" line="1856"/>
                    <scope line="1858">
                        <scope line="1860"/>
                        <scope line="1864"/>
                    </scope>
                </method>
                <javadoc line="1871">
                    Returns an array of the minimum sizes of the components.                    
                </javadoc>
                <method name="getMinimumSizes" type="int[]" line="1874">
                    <declaration name="retValue" type="int[]" line="1875"/>
                    <scope line="1877">
                        <scope line="1879"/>
                        <scope line="1883"/>
                    </scope>
                </method>
                <javadoc line="1892">
                    Resets the components to their preferred sizes.                    
                </javadoc>
                <method name="resetToPreferredSizes" type="void" line="1895">
                    <params>
                        <param name="availableSize" type="int"/>
                    </params>
                    <comment line="1896">
                        Set the sizes to the preferred sizes (if fits), otherwise                        
                    </comment>
                    <comment line="1897">
                        set to min sizes and distribute any extra space.                        
                    </comment>
                    <declaration name="testSizes" type="int[]" line="1898"/>
                    <declaration name="totalSize" type="int" line="1899"/>
                    <scope line="1901">
                        <scope line="1902"/>
                    </scope>
                    <scope line="1906">
                        <scope line="1910">
                            <scope line="1911"/>
                        </scope>
                    </scope>
                </method>
                <javadoc line="1920">
                    Distributes &lt;code&gt;space&lt;/code&gt; between the two components
                      (divider won&apos;t get any extra space) based on the weighting. This
                      attempts to honor the min size of the components.                    
                    <param>
                        keepHidden if true and one of the components is 0x0
                          it gets none of the extra space                        
                    </param>
                </javadoc>
                <method name="distributeSpace" type="void" line="1928">
                    <params>
                        <param name="space" type="int"/>
                        <param name="keepHidden" type="boolean"/>
                    </params>
                    <comment line="1940">
                        Both aren&apos;t valid, force them both to be valid                        
                    </comment>
                    <comment line="1974">
                        both below min, just make sure &gt; 0                        
                    </comment>
                    <comment line="1987">
                        both below min, just make sure &gt; 0                        
                    </comment>
                    <declaration name="lValid" type="boolean" line="1929"/>
                    <declaration name="rValid" type="boolean" line="1931"/>
                    <scope line="1934">
                        <scope line="1936">
                            <scope line="1939"/>
                        </scope>
                        <scope line="1945"/>
                    </scope>
                    <scope line="1949">
                        <declaration name="weight" type="double" line="1950"/>
                        <declaration name="lExtra" type="int" line="1951"/>
                        <declaration name="rExtra" type="int" line="1952"/>
                        <declaration name="lMin" type="int" line="1957"/>
                        <declaration name="rMin" type="int" line="1958"/>
                        <declaration name="lMinValid" type="boolean" line="1959"/>
                        <declaration name="rMinValid" type="boolean" line="1960"/>
                        <scope line="1962">
                            <scope line="1963"/>
                            <scope line="1967"/>
                        </scope>
                        <scope line="1972">
                            <scope line="1973">
                                <scope line="1975"/>
                            </scope>
                            <scope line="1980"/>
                        </scope>
                        <scope line="1985">
                            <scope line="1986">
                                <scope line="1988"/>
                            </scope>
                            <scope line="1993"/>
                        </scope>
                        <scope line="1998"/>
                        <scope line="2001"/>
                    </scope>
                    <scope line="2005"/>
                    <scope line="2008"/>
                </method>
            </class>
            <class name="BasicVerticalLayoutManager" line="2015">
                <extends class="BasicHorizontalLayoutManager"/>
                <comment line="281">
                    This is used by the LayoutManager to determine when it should use                    
                </comment>
                <comment line="282">
                    the divider location provided by the JSplitPane. This is used as there                    
                </comment>
                <comment line="283">
                    is no way to determine when the layout process has completed.                    
                </comment>
                <comment line="687">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="688">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="689">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="690">
                    class calls into the Handler.                    
                </comment>
                <comment line="711">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="712">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="713">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="714">
                    class calls into the Handler.                    
                </comment>
                <comment line="1277">
                                        
                </comment>
                <comment line="1299">
                                        
                </comment>
                <comment line="1300">
                    LayoutManager                    
                </comment>
                <comment line="1301">
                                        
                </comment>
                <comment line="1521">
                                        
                </comment>
                <comment line="1522">
                    LayoutManager2                    
                </comment>
                <comment line="1523">
                                        
                </comment>
                <comment line="1585">
                                        
                </comment>
                <comment line="1586">
                    New methods.                    
                </comment>
                <comment line="1587">
                                        
                </comment>
                <comment line="2031">
                                        
                </comment>
                <comment line="2032">
                    PropertyChangeListener                    
                </comment>
                <comment line="2033">
                                        
                </comment>
                <comment line="2069">
                                        
                </comment>
                <comment line="2070">
                    FocusListener                    
                </comment>
                <comment line="2071">
                                        
                </comment>
                <javadoc line="2015">
                    LayoutManager used for JSplitPanes with an orientation of
                      VERTICAL_SPLIT.
                      &lt;p&gt;                    
                </javadoc>
                <method name="BasicVerticalLayoutManager" type="constructor" line="2023"/>
            </class>
            <class name="Handler" line="2029">
                <comment line="281">
                    This is used by the LayoutManager to determine when it should use                    
                </comment>
                <comment line="282">
                    the divider location provided by the JSplitPane. This is used as there                    
                </comment>
                <comment line="283">
                    is no way to determine when the layout process has completed.                    
                </comment>
                <comment line="687">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="688">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="689">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="690">
                    class calls into the Handler.                    
                </comment>
                <comment line="711">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="712">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="713">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="714">
                    class calls into the Handler.                    
                </comment>
                <comment line="1277">
                                        
                </comment>
                <comment line="1299">
                                        
                </comment>
                <comment line="1300">
                    LayoutManager                    
                </comment>
                <comment line="1301">
                                        
                </comment>
                <comment line="1521">
                                        
                </comment>
                <comment line="1522">
                    LayoutManager2                    
                </comment>
                <comment line="1523">
                                        
                </comment>
                <comment line="1585">
                                        
                </comment>
                <comment line="1586">
                    New methods.                    
                </comment>
                <comment line="1587">
                                        
                </comment>
                <comment line="2031">
                                        
                </comment>
                <comment line="2032">
                    PropertyChangeListener                    
                </comment>
                <comment line="2033">
                                        
                </comment>
                <comment line="2069">
                                        
                </comment>
                <comment line="2070">
                    FocusListener                    
                </comment>
                <comment line="2071">
                                        
                </comment>
                <implements interface="FocusListener"/>
                <implements interface="PropertyChangeListener"/>
                <javadoc line="2033">
                    Messaged from the &lt;code&gt;JSplitPane&lt;/code&gt; the receiver is
                      contained in.  May potentially reset the layout manager and cause a
                      &lt;code&gt;validate&lt;/code&gt; to be sent.                    
                </javadoc>
                <method name="propertyChange" type="void" line="2038">
                    <params>
                        <param name="e" type="PropertyChangeEvent"/>
                    </params>
                    <scope line="2039">
                        <declaration name="changeName" type="String" line="2040"/>
                        <scope line="2042"/>
                        <scope line="2045">
                            <scope line="2047">
                                <scope line="2048"/>
                                <scope line="2053"/>
                            </scope>
                        </scope>
                        <scope line="2059"/>
                    </scope>
                </method>
                <method name="focusGained" type="void" line="2071">
                    <params>
                        <param name="ev" type="FocusEvent"/>
                    </params>
                </method>
                <method name="focusLost" type="void" line="2076">
                    <params>
                        <param name="ev" type="FocusEvent"/>
                    </params>
                </method>
            </class>
            <class name="Actions" line="2083">
                <extends class="UIAction"/>
                <comment line="281">
                    This is used by the LayoutManager to determine when it should use                    
                </comment>
                <comment line="282">
                    the divider location provided by the JSplitPane. This is used as there                    
                </comment>
                <comment line="283">
                    is no way to determine when the layout process has completed.                    
                </comment>
                <comment line="687">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="688">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="689">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="690">
                    class calls into the Handler.                    
                </comment>
                <comment line="711">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="712">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="713">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="714">
                    class calls into the Handler.                    
                </comment>
                <comment line="1277">
                                        
                </comment>
                <comment line="1299">
                                        
                </comment>
                <comment line="1300">
                    LayoutManager                    
                </comment>
                <comment line="1301">
                                        
                </comment>
                <comment line="1521">
                                        
                </comment>
                <comment line="1522">
                    LayoutManager2                    
                </comment>
                <comment line="1523">
                                        
                </comment>
                <comment line="1585">
                                        
                </comment>
                <comment line="1586">
                    New methods.                    
                </comment>
                <comment line="1587">
                                        
                </comment>
                <comment line="2031">
                                        
                </comment>
                <comment line="2032">
                    PropertyChangeListener                    
                </comment>
                <comment line="2033">
                                        
                </comment>
                <comment line="2069">
                                        
                </comment>
                <comment line="2070">
                    FocusListener                    
                </comment>
                <comment line="2071">
                                        
                </comment>
                <declaration name="NEGATIVE_INCREMENT" type="String" line="2084"/>
                <declaration name="POSITIVE_INCREMENT" type="String" line="2085"/>
                <declaration name="SELECT_MIN" type="String" line="2086"/>
                <declaration name="SELECT_MAX" type="String" line="2087"/>
                <declaration name="START_RESIZE" type="String" line="2088"/>
                <declaration name="TOGGLE_FOCUS" type="String" line="2089"/>
                <declaration name="FOCUS_OUT_FORWARD" type="String" line="2090"/>
                <declaration name="FOCUS_OUT_BACKWARD" type="String" line="2091"/>
                <method name="Actions" type="constructor" line="2093">
                    <params>
                        <param name="key" type="String"/>
                    </params>
                </method>
                <method name="actionPerformed" type="void" line="2097">
                    <params>
                        <param name="ev" type="ActionEvent"/>
                    </params>
                    <declaration name="splitPane" type="JSplitPane" line="2098"/>
                    <declaration name="ui" type="BasicSplitPaneUI" line="2099"/>
                    <scope line="2102"/>
                    <declaration name="key" type="String" line="2105"/>
                    <scope line="2106">
                        <scope line="2107"/>
                    </scope>
                    <scope line="2113">
                        <scope line="2114"/>
                    </scope>
                    <scope line="2120">
                        <scope line="2121"/>
                    </scope>
                    <scope line="2125">
                        <scope line="2126">
                            <declaration name="insets" type="Insets" line="2127"/>
                            <declaration name="bottomI" type="int" line="2128"/>
                            <declaration name="rightI" type="int" line="2129"/>
                            <scope line="2131"/>
                            <scope line="2135"/>
                        </scope>
                    </scope>
                    <scope line="2141">
                        <scope line="2142"/>
                        <scope line="2144">
                            <declaration name="parentSplitPane" type="JSplitPane" line="2145"/>
                            <scope line="2148"/>
                        </scope>
                    </scope>
                    <scope line="2153"/>
                    <scope line="2156"/>
                    <scope line="2159"/>
                </method>
                <method name="moveFocus" type="void" line="2164">
                    <params>
                        <param name="splitPane" type="JSplitPane"/>
                        <param name="direction" type="int"/>
                    </params>
                    <declaration name="rootAncestor" type="Container" line="2165"/>
                    <declaration name="policy" type="FocusTraversalPolicy" line="2166"/>
                    <declaration name="focusOn" type="Component" line="2167"/>
                    <declaration name="focusFrom" type="HashSet&lt;Component&gt;" line="2170"/>
                    <scope line="2171">
                        <scope line="2172"/>
                    </scope>
                    <scope line="2182"/>
                </method>
                <method name="toggleFocus" type="void" line="2187">
                    <params>
                        <param name="splitPane" type="JSplitPane"/>
                    </params>
                    <comment line="2196">
                        don&apos;t change the focus if the new focused component belongs                        
                    </comment>
                    <comment line="2197">
                        to the same splitpane and the same side                        
                    </comment>
                    <declaration name="left" type="Component" line="2188"/>
                    <declaration name="right" type="Component" line="2189"/>
                    <declaration name="manager" type="KeyboardFocusManager" line="2191"/>
                    <declaration name="focus" type="Component" line="2193"/>
                    <declaration name="focusOn" type="Component" line="2194"/>
                    <scope line="2195">
                        <scope line="2202"/>
                    </scope>
                </method>
                <method name="getNextSide" type="Component" line="2209">
                    <params>
                        <param name="splitPane" type="JSplitPane"/>
                        <param name="focus" type="Component"/>
                    </params>
                    <comment line="2222">
                        focus next side of the parent split pane                        
                    </comment>
                    <declaration name="left" type="Component" line="2210"/>
                    <declaration name="right" type="Component" line="2211"/>
                    <declaration name="next" type="Component" line="2212"/>
                    <scope line="2214">
                        <scope line="2216"/>
                    </scope>
                    <declaration name="parentSplitPane" type="JSplitPane" line="2220"/>
                    <scope line="2221"/>
                    <scope line="2224">
                        <scope line="2226"/>
                    </scope>
                </method>
                <method name="getFirstAvailableComponent" type="Component" line="2233">
                    <params>
                        <param name="c" type="Component"/>
                    </params>
                    <scope line="2234">
                        <declaration name="sp" type="JSplitPane" line="2235"/>
                        <declaration name="left" type="Component" line="2236"/>
                        <scope line="2237"/>
                        <scope line="2239"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>