<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.basic">
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Color"/>
        <import package="javax.swing"/>
        <import package="javax.swing.plaf.UIResource"/>
        <class name="BasicArrowButton" line="34">
            <extends class="JButton"/>
            <implements interface="SwingConstants"/>
            <javadoc line="34">
                JButton object that draws a scaled Arrow in one of the cardinal directions.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases. The current serialization support is
                  appropriate for short term storage or RMI between applications running
                  the same version of Swing.  As of 1.4, support for long term storage
                  of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                  has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                  Please see {@link java.beans.XMLEncoder}.                
                <author>
                    David Kloba                    
                </author>
            </javadoc>
            <declaration name="direction" type="int" line="50"/>
            <javadoc line="50">
                The direction of the arrow. One of{@code SwingConstants.NORTH}, {@code SwingConstants.SOUTH},{@code SwingConstants.EAST} or {@code SwingConstants.WEST}.                
            </javadoc>
            <declaration name="shadow" type="Color" line="57"/>
            <declaration name="darkShadow" type="Color" line="58"/>
            <declaration name="highlight" type="Color" line="59"/>
            <javadoc line="61">
                Creates a {@code BasicArrowButton} whose arrow
                  is drawn in the specified direction and with the specified
                  colors.                
                <param>
                    direction the direction of the arrow; one of{@code SwingConstants.NORTH}, {@code SwingConstants.SOUTH},{@code SwingConstants.EAST} or {@code SwingConstants.WEST}                    
                </param>
                <param>
                    background the background color of the button                    
                </param>
                <param>
                    shadow the color of the shadow                    
                </param>
                <param>
                    darkShadow the color of the dark shadow                    
                </param>
                <param>
                    highlight the color of the highlight                    
                </param>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="BasicArrowButton" type="constructor" line="76">
                <params>
                    <param name="direction" type="int"/>
                    <param name="background" type="Color"/>
                    <param name="shadow" type="Color"/>
                    <param name="darkShadow" type="Color"/>
                    <param name="highlight" type="Color"/>
                </params>
            </method>
            <javadoc line="86">
                Creates a {@code BasicArrowButton} whose arrow
                  is drawn in the specified direction.                
                <param>
                    direction the direction of the arrow; one of{@code SwingConstants.NORTH}, {@code SwingConstants.SOUTH},{@code SwingConstants.EAST} or {@code SwingConstants.WEST}                    
                </param>
            </javadoc>
            <method name="BasicArrowButton" type="constructor" line="94">
                <params>
                    <param name="direction" type="int"/>
                </params>
            </method>
            <javadoc line="99">
                Returns the direction of the arrow.                
            </javadoc>
            <method name="getDirection" type="int" line="102"/>
            <javadoc line="106">
                Sets the direction of the arrow.                
                <param>
                    direction the direction of the arrow; one of
                      of {@code SwingConstants.NORTH},{@code SwingConstants.SOUTH},{@code SwingConstants.EAST} or {@code SwingConstants.WEST}                    
                </param>
            </javadoc>
            <method name="setDirection" type="void" line="114">
                <params>
                    <param name="direction" type="int"/>
                </params>
            </method>
            <method name="paint" type="void" line="118">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <comment line="132">
                    / Draw the proper Border                    
                </comment>
                <comment line="139">
                    Using the background color set above                    
                </comment>
                <comment line="143">
                    inner 3D border                    
                </comment>
                <comment line="147">
                    inner 3D border                    
                </comment>
                <comment line="151">
                    black drop shadow  __|                    
                </comment>
                <comment line="156">
                    If there&apos;s no room to draw arrow, bail                    
                </comment>
                <comment line="166">
                    Draw the arrow                    
                </comment>
                <comment line="172">
                    Reset the Graphics back to it&apos;s original settings                    
                </comment>
                <declaration name="origColor" type="Color" line="119"/>
                <declaration name="isPressed" type="boolean" line="120"/>
                <declaration name="w" type="int" line="121"/>
                <scope line="133"/>
                <scope line="135"/>
                <scope line="138"/>
                <scope line="157"/>
                <scope line="162"/>
                <scope line="173"/>
            </method>
            <javadoc line="180">
                Returns the preferred size of the {@code BasicArrowButton}.                
                <return>
                    the preferred size                    
                </return>
            </javadoc>
            <method name="getPreferredSize" type="Dimension" line="185"/>
            <javadoc line="189">
                Returns the minimum size of the {@code BasicArrowButton}.                
                <return>
                    the minimum size                    
                </return>
            </javadoc>
            <method name="getMinimumSize" type="Dimension" line="194"/>
            <javadoc line="198">
                Returns the maximum size of the {@code BasicArrowButton}.                
                <return>
                    the maximum size                    
                </return>
            </javadoc>
            <method name="getMaximumSize" type="Dimension" line="203"/>
            <javadoc line="207">
                Returns whether the arrow button should get the focus.{@code BasicArrowButton}s are used as a child component of
                  composite components such as {@code JScrollBar} and{@code JComboBox}. Since the composite component typically gets the
                  focus, this method is overriden to return {@code false}.                
                <return>
                    {@code false}                    
                </return>
            </javadoc>
            <method name="isFocusTraversable" type="boolean" line="216"/>
            <javadoc line="220">
                Paints a triangle.                
                <param>
                    g the {@code Graphics} to draw to                    
                </param>
                <param>
                    x the x coordinate                    
                </param>
                <param>
                    y the y coordinate                    
                </param>
                <param>
                    size the size of the triangle to draw                    
                </param>
                <param>
                    direction the direction in which to draw the arrow;
                      one of {@code SwingConstants.NORTH},{@code SwingConstants.SOUTH}, {@code SwingConstants.EAST} or{@code SwingConstants.WEST}                    
                </param>
                <param>
                    isEnabled whether or not the arrow is drawn enabled                    
                </param>
            </javadoc>
            <method name="paintTriangle" type="void" line="234">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="size" type="int"/>
                    <param name="direction" type="int"/>
                    <param name="isEnabled" type="boolean"/>
                </params>
                <declaration name="oldColor" type="Color" line="235"/>
                <declaration name="mid" type="int" line="236"/>
                <scope line="250"/>
                <scope line="253"/>
                <scope line="259">
                    <scope line="262"/>
                </scope>
                <scope line="271"/>
                <scope line="277"/>
                <scope line="280"/>
                <scope line="286">
                    <scope line="289"/>
                </scope>
                <scope line="298"/>
            </method>
        </class>
    </source>