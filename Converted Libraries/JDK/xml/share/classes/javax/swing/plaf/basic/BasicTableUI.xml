<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.basic">
        <import package="java.awt"/>
        <import package="java.awt.datatransfer"/>
        <import package="java.awt.dnd"/>
        <import package="java.awt.event"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.EventObject"/>
        <import package="java.util.Hashtable"/>
        <import package="java.util.TooManyListenersException"/>
        <import package="javax.swing"/>
        <import package="javax.swing.event"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.text"/>
        <import package="javax.swing.table"/>
        <import package="javax.swing.plaf.basic.DragRecognitionSupport.BeforeDrag"/>
        <import package="sun.swing.SwingUtilities2"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="sun.swing.DefaultLookup"/>
        <import package="sun.swing.UIAction"/>
        <class name="BasicTableUI" line="51">
            <extends class="TableUI"/>
            <comment line="63">
                                
            </comment>
            <comment line="64">
                Instance Variables                
            </comment>
            <comment line="65">
                                
            </comment>
            <comment line="67">
                The JTable that is delegating the painting to this UI.                
            </comment>
            <comment line="71">
                Listeners that are attached to the JTable                
            </comment>
            <comment line="83">
                                
            </comment>
            <comment line="84">
                Helper class for keyboard actions                
            </comment>
            <comment line="85">
                                
            </comment>
            <comment line="729">
                                
            </comment>
            <comment line="730">
                The Table&apos;s Key listener                
            </comment>
            <comment line="731">
                                
            </comment>
            <comment line="759">
                                
            </comment>
            <comment line="760">
                The Table&apos;s focus listener                
            </comment>
            <comment line="761">
                                
            </comment>
            <comment line="781">
                                
            </comment>
            <comment line="782">
                The Table&apos;s mouse and mouse motion listeners                
            </comment>
            <comment line="783">
                                
            </comment>
            <comment line="1329">
                Returns true if the given point is outside the preferredSize of the
                 item at the given row of the table.  (Column must be 0).
                 Returns false if the &quot;Table.isFileList&quot; client property is not set.                
            </comment>
            <comment line="1342">
                                
            </comment>
            <comment line="1343">
                Factory methods for the Listeners                
            </comment>
            <comment line="1344">
                                
            </comment>
            <comment line="1374">
                                
            </comment>
            <comment line="1375">
                The installation/uninstall procedures and support                
            </comment>
            <comment line="1376">
                                
            </comment>
            <comment line="1382">
                Installation                
            </comment>
            <comment line="1608">
                Uninstallation                
            </comment>
            <comment line="1687">
                                
            </comment>
            <comment line="1688">
                Size Methods                
            </comment>
            <comment line="1689">
                                
            </comment>
            <comment line="1752">
                                
            </comment>
            <comment line="1753">
                Paint methods and support                
            </comment>
            <comment line="1754">
                                
            </comment>
            <comment line="1945">
                Paints the grid lines within &lt;I&gt;aRect&lt;I&gt;, using the grid
                 color set with &lt;I&gt;setGridColor&lt;I&gt;. Paints vertical lines
                 if &lt;code&gt;getShowVerticalLines()&lt;code&gt; returns true and paints
                 horizontal lines if &lt;code&gt;getShowHorizontalLines()&lt;code&gt;
                 returns true.                
            </comment>
            <javadoc line="51">
                BasicTableUI implementation                
                <author>
                    Philip Milne                    
                </author>
                <author>
                    Shannon Hickey (drag and drop)                    
                </author>
            </javadoc>
            <declaration name="BASELINE_COMPONENT_KEY" type="StringBuilder" line="59"/>
            <declaration name="table" type="JTable" line="67"/>
            <declaration name="rendererPane" type="CellRendererPane" line="68"/>
            <declaration name="keyListener" type="KeyListener" line="71"/>
            <declaration name="focusListener" type="FocusListener" line="72"/>
            <declaration name="mouseInputListener" type="MouseInputListener" line="73"/>
            <declaration name="handler" type="Handler" line="75"/>
            <declaration name="isFileList" type="boolean" line="77"/>
            <javadoc line="77">
                Local cache of Table&apos;s client property &quot;Table.isFileList&quot;                
            </javadoc>
            <class name="Actions" line="86">
                <extends class="UIAction"/>
                <comment line="156">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="159">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="162">
                    extend the selection to the lead item                    
                </comment>
                <comment line="165">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <comment line="168">
                    give focus to the JTableHeader, if one exists                    
                </comment>
                <comment line="176">
                    horizontally, forwards always means right,                    
                </comment>
                <comment line="177">
                    regardless of component orientation                    
                </comment>
                <comment line="742">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="743">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="744">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="745">
                    class calls into the Handler.                    
                </comment>
                <comment line="768">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="769">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="770">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="771">
                    class calls into the Handler.                    
                </comment>
                <comment line="790">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="791">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="792">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="793">
                    class calls into the Handler.                    
                </comment>
                <comment line="827">
                    FocusListener                    
                </comment>
                <comment line="849">
                    KeyListener                    
                </comment>
                <comment line="922">
                    MouseInputListener                    
                </comment>
                <comment line="924">
                    Component receiving mouse events during editing.                    
                </comment>
                <comment line="925">
                    May not be editorComponent.                    
                </comment>
                <comment line="959">
                    The row and column where the press occurred and the                    
                </comment>
                <comment line="960">
                    press event itself                    
                </comment>
                <comment line="965">
                    Whether or not the mouse press (which is being considered as part                    
                </comment>
                <comment line="966">
                    of a drag sequence) also caused the selection change to be fully                    
                </comment>
                <comment line="967">
                    processed.                    
                </comment>
                <comment line="970">
                    Set to true when a drag gesture has been fully recognized and DnD                    
                </comment>
                <comment line="971">
                    begins. Use this to ignore further mouse events which could be                    
                </comment>
                <comment line="972">
                    delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="975">
                    Whether or not we should start the editing timer on release                    
                </comment>
                <comment line="978">
                    To cache the return value of pointOutsidePrefSize since we use                    
                </comment>
                <comment line="979">
                    it multiple times.                    
                </comment>
                <comment line="982">
                    Used to delay the start of editing.                    
                </comment>
                <comment line="1259">
                    PropertyChangeListener                    
                </comment>
                <declaration name="CANCEL_EDITING" type="String" line="87"/>
                <declaration name="SELECT_ALL" type="String" line="88"/>
                <declaration name="CLEAR_SELECTION" type="String" line="89"/>
                <declaration name="START_EDITING" type="String" line="90"/>
                <declaration name="NEXT_ROW" type="String" line="92"/>
                <declaration name="NEXT_ROW_CELL" type="String" line="93"/>
                <declaration name="NEXT_ROW_EXTEND_SELECTION" type="String" line="94"/>
                <declaration name="NEXT_ROW_CHANGE_LEAD" type="String" line="96"/>
                <declaration name="PREVIOUS_ROW" type="String" line="98"/>
                <declaration name="PREVIOUS_ROW_CELL" type="String" line="99"/>
                <declaration name="PREVIOUS_ROW_EXTEND_SELECTION" type="String" line="100"/>
                <declaration name="PREVIOUS_ROW_CHANGE_LEAD" type="String" line="102"/>
                <declaration name="NEXT_COLUMN" type="String" line="105"/>
                <declaration name="NEXT_COLUMN_CELL" type="String" line="106"/>
                <declaration name="NEXT_COLUMN_EXTEND_SELECTION" type="String" line="107"/>
                <declaration name="NEXT_COLUMN_CHANGE_LEAD" type="String" line="109"/>
                <declaration name="PREVIOUS_COLUMN" type="String" line="111"/>
                <declaration name="PREVIOUS_COLUMN_CELL" type="String" line="112"/>
                <declaration name="PREVIOUS_COLUMN_EXTEND_SELECTION" type="String" line="114"/>
                <declaration name="PREVIOUS_COLUMN_CHANGE_LEAD" type="String" line="116"/>
                <declaration name="SCROLL_LEFT_CHANGE_SELECTION" type="String" line="119"/>
                <declaration name="SCROLL_LEFT_EXTEND_SELECTION" type="String" line="121"/>
                <declaration name="SCROLL_RIGHT_CHANGE_SELECTION" type="String" line="123"/>
                <declaration name="SCROLL_RIGHT_EXTEND_SELECTION" type="String" line="125"/>
                <declaration name="SCROLL_UP_CHANGE_SELECTION" type="String" line="128"/>
                <declaration name="SCROLL_UP_EXTEND_SELECTION" type="String" line="130"/>
                <declaration name="SCROLL_DOWN_CHANGE_SELECTION" type="String" line="132"/>
                <declaration name="SCROLL_DOWN_EXTEND_SELECTION" type="String" line="134"/>
                <declaration name="FIRST_COLUMN" type="String" line="137"/>
                <declaration name="FIRST_COLUMN_EXTEND_SELECTION" type="String" line="139"/>
                <declaration name="LAST_COLUMN" type="String" line="141"/>
                <declaration name="LAST_COLUMN_EXTEND_SELECTION" type="String" line="143"/>
                <declaration name="FIRST_ROW" type="String" line="146"/>
                <declaration name="FIRST_ROW_EXTEND_SELECTION" type="String" line="148"/>
                <declaration name="LAST_ROW" type="String" line="150"/>
                <declaration name="LAST_ROW_EXTEND_SELECTION" type="String" line="152"/>
                <declaration name="ADD_TO_SELECTION" type="String" line="156"/>
                <declaration name="TOGGLE_AND_ANCHOR" type="String" line="159"/>
                <declaration name="EXTEND_TO" type="String" line="162"/>
                <declaration name="MOVE_SELECTION_TO" type="String" line="165"/>
                <declaration name="FOCUS_HEADER" type="String" line="168"/>
                <declaration name="dx" type="int" line="170"/>
                <declaration name="dy" type="int" line="171"/>
                <declaration name="extend" type="boolean" line="172"/>
                <declaration name="inSelection" type="boolean" line="173"/>
                <declaration name="forwards" type="boolean" line="177"/>
                <declaration name="vertically" type="boolean" line="178"/>
                <declaration name="toLimit" type="boolean" line="179"/>
                <declaration name="leadRow" type="int" line="181"/>
                <declaration name="leadColumn" type="int" line="182"/>
                <method name="Actions" type="constructor" line="184">
                    <params>
                        <param name="name" type="String"/>
                    </params>
                </method>
                <method name="Actions" type="constructor" line="189">
                    <params>
                        <param name="name" type="String"/>
                        <param name="dx" type="int"/>
                        <param name="dy" type="int"/>
                        <param name="extend" type="boolean"/>
                        <param name="inSelection" type="boolean"/>
                    </params>
                    <comment line="192">
                        Actions spcifying true for &quot;inSelection&quot; are                        
                    </comment>
                    <comment line="193">
                        fairly sensitive to bad parameter values. They require                        
                    </comment>
                    <comment line="194">
                        that one of dx and dy be 0 and the other be -1 or 1.                        
                    </comment>
                    <comment line="195">
                        Bogus parameter values could cause an infinite loop.                        
                    </comment>
                    <comment line="196">
                        To prevent any problems we massage the params here                        
                    </comment>
                    <comment line="197">
                        and complain if we get something we can&apos;t deal with.                        
                    </comment>
                    <comment line="201">
                        look at the sign of dx and dy only                        
                    </comment>
                    <comment line="205">
                        make sure one is zero, but not both                        
                    </comment>
                    <scope line="198"/>
                </method>
                <method name="Actions" type="constructor" line="215">
                    <params>
                        <param name="name" type="String"/>
                        <param name="extend" type="boolean"/>
                        <param name="forwards" type="boolean"/>
                        <param name="vertically" type="boolean"/>
                        <param name="toLimit" type="boolean"/>
                    </params>
                </method>
                <method name="clipToRange" type="int" line="222">
                    <params>
                        <param name="i" type="int"/>
                        <param name="a" type="int"/>
                        <param name="b" type="int"/>
                    </params>
                </method>
                <method name="moveWithinTableRange" type="void" line="226">
                    <params>
                        <param name="table" type="JTable"/>
                        <param name="dx" type="int"/>
                        <param name="dy" type="int"/>
                    </params>
                </method>
                <method name="sign" type="int" line="231">
                    <params>
                        <param name="num" type="int"/>
                    </params>
                </method>
                <javadoc line="235">
                    Called to move within the selected range of the given JTable.
                      This method uses the table&apos;s notion of selection, which is
                      important to allow the user to navigate between items visually
                      selected on screen. This notion may or may not be the same as
                      what could be determined by directly querying the selection models.
                      It depends on certain table properties (such as whether or not
                      row or column selection is allowed). When performing modifications,
                      it is recommended that caution be taken in order to preserve
                      the intent of this method, especially when deciding whether to
                      query the selection models or interact with JTable directly.                    
                </javadoc>
                <method name="moveWithinSelectedRange" type="boolean" line="248">
                    <params>
                        <param name="table" type="JTable"/>
                        <param name="dx" type="int"/>
                        <param name="dy" type="int"/>
                        <param name="rsm" type="ListSelectionModel"/>
                        <param name="csm" type="ListSelectionModel"/>
                    </params>
                    <comment line="250">
                        Note: The Actions constructor ensures that only one of                        
                    </comment>
                    <comment line="251">
                        dx and dy is 0, and the other is either -1 or 1                        
                    </comment>
                    <comment line="253">
                        find out how many items the table is showing as selected                        
                    </comment>
                    <comment line="254">
                        and the range of items to navigate through                        
                    </comment>
                    <comment line="261">
                        both column and row selection                        
                    </comment>
                    <comment line="268">
                        row selection only                        
                    </comment>
                    <comment line="275">
                        column selection only                        
                    </comment>
                    <comment line="282">
                        no selection allowed                        
                    </comment>
                    <comment line="285">
                        A bogus assignment to stop javac from complaining                        
                    </comment>
                    <comment line="286">
                        about unitialized values. In this case, these                        
                    </comment>
                    <comment line="287">
                        won&apos;t even be used.                        
                    </comment>
                    <comment line="291">
                        For some cases, there is no point in trying to stay within the                        
                    </comment>
                    <comment line="292">
                        selected area. Instead, move outside the selection, wrapping at                        
                    </comment>
                    <comment line="293">
                        the table boundaries. The cases are:                        
                    </comment>
                    <comment line="296">
                        - nothing selected                        
                    </comment>
                    <comment line="298">
                        - one item selected, and the lead is already selected                        
                    </comment>
                    <comment line="306">
                        the mins are calculated like this in case the max is -1                        
                    </comment>
                    <comment line="313">
                        the algorithm below isn&apos;t prepared to deal with -1 lead/anchor                        
                    </comment>
                    <comment line="314">
                        so massage appropriately here first                        
                    </comment>
                    <comment line="329">
                        In cases where the lead is not within the search range,                        
                    </comment>
                    <comment line="330">
                        we need to bring it within one cell for the the search                        
                    </comment>
                    <comment line="331">
                        to work properly. Check these here.                        
                    </comment>
                    <comment line="335">
                        find the next position, possibly looping until it is selected                        
                    </comment>
                    <declaration name="totalCount" type="int" line="255"/>
                    <declaration name="minX" type="int" line="256"/>
                    <declaration name="rs" type="boolean" line="258"/>
                    <declaration name="cs" type="boolean" line="259"/>
                    <scope line="262"/>
                    <scope line="269"/>
                    <scope line="276"/>
                    <scope line="283"/>
                    <declaration name="stayInSelection" type="boolean" line="294"/>
                    <scope line="299"/>
                    <scope line="309"/>
                    <scope line="315"/>
                    <scope line="318"/>
                    <scope line="321"/>
                    <scope line="324"/>
                    <scope line="336"/>
                </method>
                <javadoc line="343">
                    Find the next lead row and column based on the given
                      dx/dy and max/min values.                    
                </javadoc>
                <method name="calcNextPos" type="void" line="348">
                    <params>
                        <param name="dx" type="int"/>
                        <param name="minX" type="int"/>
                        <param name="maxX" type="int"/>
                        <param name="dy" type="int"/>
                        <param name="minY" type="int"/>
                        <param name="maxY" type="int"/>
                    </params>
                    <scope line="350">
                        <scope line="352">
                            <scope line="355"/>
                        </scope>
                        <scope line="358">
                            <scope line="361"/>
                        </scope>
                    </scope>
                    <scope line="365">
                        <scope line="367">
                            <scope line="370"/>
                        </scope>
                        <scope line="373">
                            <scope line="376"/>
                        </scope>
                    </scope>
                </method>
                <method name="actionPerformed" type="void" line="383">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                    <comment line="393">
                        Paging Actions                        
                    </comment>
                    <comment line="432">
                        scroll by at least one cell                        
                    </comment>
                    <comment line="449">
                        scroll by at least one cell                        
                    </comment>
                    <comment line="468">
                        Navigate Actions                        
                    </comment>
                    <comment line="484">
                        Paging Actions.                        
                    </comment>
                    <comment line="507">
                        Unfortunately, this strategy introduces bugs because                        
                    </comment>
                    <comment line="508">
                        of the asynchronous nature of requestFocus() call below.                        
                    </comment>
                    <comment line="509">
                        Introducing a delay with invokeLater() makes this work                        
                    </comment>
                    <comment line="510">
                        in the typical case though race conditions then allow                        
                    </comment>
                    <comment line="511">
                        focus to disappear altogether. The right solution appears                        
                    </comment>
                    <comment line="512">
                        to be to fix requestFocus() so that it queues a request                        
                    </comment>
                    <comment line="513">
                        for the focus regardless of who owns the focus at the                        
                    </comment>
                    <comment line="514">
                        time the call to requestFocus() is made. The optimisation                        
                    </comment>
                    <comment line="515">
                        to ignore the call to requestFocus() when the component                        
                    </comment>
                    <comment line="516">
                        already has focus may ligitimately be made as the                        
                    </comment>
                    <comment line="517">
                        request focus event is dequeued, not before.                        
                    </comment>
                    <comment line="519">
                        boolean wasEditingWithFocus = table.isEditing() &amp;&amp;                        
                    </comment>
                    <comment line="520">
                        table.getEditorComponent().isFocusOwner();                        
                    </comment>
                    <comment line="534">
                        casting should be safe since the action is only enabled                        
                    </comment>
                    <comment line="535">
                        for DefaultListSelectionModel                        
                    </comment>
                    <comment line="543">
                        casting should be safe since the action is only enabled                        
                    </comment>
                    <comment line="544">
                        for DefaultListSelectionModel                        
                    </comment>
                    <comment line="563">
                        bail - don&apos;t try to move selection on an empty table                        
                    </comment>
                    <comment line="568">
                        this is the only way we have to set both the lead                        
                    </comment>
                    <comment line="569">
                        and the anchor without changing the selection                        
                    </comment>
                    <comment line="593">
                        if (wasEditingWithFocus) {
                        table.editCellAt(leadRow, leadColumn);
                        final Component editorComp = table.getEditorComponent();
                        if (editorComp != null) {
                        SwingUtilities.invokeLater(new Runnable() {
                        public void run() {
                        editorComp.requestFocus();
                        }
                        });
                        }
                        }                        
                    </comment>
                    <comment line="647">
                        Set the header&apos;s selected column to match the table.                        
                    </comment>
                    <comment line="656">
                        Then give the header the focus.                        
                    </comment>
                    <declaration name="key" type="String" line="384"/>
                    <declaration name="table" type="JTable" line="385"/>
                    <declaration name="rsm" type="ListSelectionModel" line="387"/>
                    <declaration name="csm" type="ListSelectionModel" line="390"/>
                    <scope line="408">
                        <scope line="409">
                            <scope line="410">
                                <declaration name="rowCount" type="int" line="411"/>
                            </scope>
                            <scope line="415">
                                <declaration name="colCount" type="int" line="416"/>
                            </scope>
                        </scope>
                        <scope line="421">
                            <scope line="423"/>
                            <declaration name="delta" type="Dimension" line="427"/>
                            <scope line="429">
                                <declaration name="r" type="Rectangle" line="430"/>
                                <scope line="431"/>
                                <scope line="434"/>
                                <declaration name="newRow" type="int" line="439"/>
                                <scope line="440"/>
                            </scope>
                            <scope line="445">
                                <declaration name="r" type="Rectangle" line="446"/>
                                <scope line="448"/>
                                <scope line="451"/>
                                <declaration name="newColumn" type="int" line="455"/>
                                <scope line="456">
                                    <declaration name="ltr" type="boolean" line="457"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="500">
                        <scope line="503"/>
                        <declaration name="changeLead" type="boolean" line="522"/>
                        <scope line="523"/>
                        <scope line="526"/>
                        <scope line="531">
                            <scope line="533">
                                <scope line="538"/>
                            </scope>
                            <scope line="542">
                                <scope line="547"/>
                            </scope>
                            <declaration name="cellRect" type="Rectangle" line="553"/>
                            <scope line="554"/>
                        </scope>
                        <scope line="557"/>
                        <scope line="561">
                            <scope line="562"/>
                            <scope line="567">
                                <scope line="570"/>
                                <scope line="572"/>
                                <scope line="576"/>
                                <scope line="578"/>
                                <declaration name="cellRect" type="Rectangle" line="582"/>
                                <scope line="583"/>
                            </scope>
                            <scope line="587"/>
                        </scope>
                    </scope>
                    <scope line="606"/>
                    <scope line="608"/>
                    <scope line="610"/>
                    <scope line="612">
                        <scope line="613">
                            <declaration name="cellEditor" type="CellEditor" line="614"/>
                            <scope line="615"/>
                        </scope>
                        <declaration name="editorComp" type="Component" line="622"/>
                        <scope line="623"/>
                    </scope>
                    <scope line="626">
                        <scope line="627">
                            <declaration name="oldAnchorRow" type="int" line="628"/>
                            <declaration name="oldAnchorColumn" type="int" line="629"/>
                        </scope>
                    </scope>
                    <scope line="638"/>
                    <scope line="640"/>
                    <scope line="642"/>
                    <scope line="644">
                        <declaration name="th" type="JTableHeader" line="645"/>
                        <scope line="646">
                            <declaration name="col" type="int" line="648"/>
                            <scope line="649">
                                <declaration name="thUI" type="TableHeaderUI" line="650"/>
                                <scope line="651"/>
                            </scope>
                        </scope>
                    </scope>
                </method>
                <method name="isEnabled" type="boolean" line="662">
                    <params>
                        <param name="sender" type="Object"/>
                    </params>
                    <comment line="694">
                        discontinuous selection actions are only enabled for                        
                    </comment>
                    <comment line="695">
                        DefaultListSelectionModel                        
                    </comment>
                    <comment line="701">
                        discontinuous selection actions are only enabled for                        
                    </comment>
                    <comment line="702">
                        DefaultListSelectionModel                        
                    </comment>
                    <comment line="707">
                        This action is typically bound to SPACE.                        
                    </comment>
                    <comment line="708">
                        If the table is already in an editing mode, SPACE should                        
                    </comment>
                    <comment line="709">
                        simply enter a space character into the table, and not                        
                    </comment>
                    <comment line="710">
                        select a cell. Likewise, if the lead cell is already selected                        
                    </comment>
                    <comment line="711">
                        then hitting SPACE should just enter a space character                        
                    </comment>
                    <comment line="712">
                        into the cell and begin editing. In both of these cases                        
                    </comment>
                    <comment line="713">
                        this action will be disabled.                        
                    </comment>
                    <declaration name="key" type="String" line="663"/>
                    <scope line="666">
                        <scope line="684"/>
                    </scope>
                    <scope line="690"/>
                    <scope line="693"/>
                    <scope line="700"/>
                    <scope line="706">
                        <declaration name="table" type="JTable" line="714"/>
                        <declaration name="leadRow" type="int" line="715"/>
                        <declaration name="leadCol" type="int" line="716"/>
                    </scope>
                    <scope line="718">
                        <declaration name="table" type="JTable" line="719"/>
                    </scope>
                </method>
            </class>
            <class name="KeyHandler" line="732">
                <comment line="156">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="159">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="162">
                    extend the selection to the lead item                    
                </comment>
                <comment line="165">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <comment line="168">
                    give focus to the JTableHeader, if one exists                    
                </comment>
                <comment line="176">
                    horizontally, forwards always means right,                    
                </comment>
                <comment line="177">
                    regardless of component orientation                    
                </comment>
                <comment line="742">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="743">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="744">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="745">
                    class calls into the Handler.                    
                </comment>
                <comment line="768">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="769">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="770">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="771">
                    class calls into the Handler.                    
                </comment>
                <comment line="790">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="791">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="792">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="793">
                    class calls into the Handler.                    
                </comment>
                <comment line="827">
                    FocusListener                    
                </comment>
                <comment line="849">
                    KeyListener                    
                </comment>
                <comment line="922">
                    MouseInputListener                    
                </comment>
                <comment line="924">
                    Component receiving mouse events during editing.                    
                </comment>
                <comment line="925">
                    May not be editorComponent.                    
                </comment>
                <comment line="959">
                    The row and column where the press occurred and the                    
                </comment>
                <comment line="960">
                    press event itself                    
                </comment>
                <comment line="965">
                    Whether or not the mouse press (which is being considered as part                    
                </comment>
                <comment line="966">
                    of a drag sequence) also caused the selection change to be fully                    
                </comment>
                <comment line="967">
                    processed.                    
                </comment>
                <comment line="970">
                    Set to true when a drag gesture has been fully recognized and DnD                    
                </comment>
                <comment line="971">
                    begins. Use this to ignore further mouse events which could be                    
                </comment>
                <comment line="972">
                    delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="975">
                    Whether or not we should start the editing timer on release                    
                </comment>
                <comment line="978">
                    To cache the return value of pointOutsidePrefSize since we use                    
                </comment>
                <comment line="979">
                    it multiple times.                    
                </comment>
                <comment line="982">
                    Used to delay the start of editing.                    
                </comment>
                <comment line="1259">
                    PropertyChangeListener                    
                </comment>
                <implements interface="KeyListener"/>
                <javadoc line="732">
                    This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of {@code BasicTableUI}.
                      &lt;p&gt;As of Java 2 platform v1.3 this class is no longer used.
                      Instead &lt;code&gt;JTable&lt;/code&gt;
                      overrides &lt;code&gt;processKeyBinding&lt;/code&gt; to dispatch the event to
                      the current &lt;code&gt;TableCellEditor&lt;/code&gt;.                    
                </javadoc>
                <method name="keyPressed" type="void" line="745">
                    <params>
                        <param name="e" type="KeyEvent"/>
                    </params>
                </method>
                <method name="keyReleased" type="void" line="749">
                    <params>
                        <param name="e" type="KeyEvent"/>
                    </params>
                </method>
                <method name="keyTyped" type="void" line="753">
                    <params>
                        <param name="e" type="KeyEvent"/>
                    </params>
                </method>
            </class>
            <class name="FocusHandler" line="762">
                <comment line="156">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="159">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="162">
                    extend the selection to the lead item                    
                </comment>
                <comment line="165">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <comment line="168">
                    give focus to the JTableHeader, if one exists                    
                </comment>
                <comment line="176">
                    horizontally, forwards always means right,                    
                </comment>
                <comment line="177">
                    regardless of component orientation                    
                </comment>
                <comment line="742">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="743">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="744">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="745">
                    class calls into the Handler.                    
                </comment>
                <comment line="768">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="769">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="770">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="771">
                    class calls into the Handler.                    
                </comment>
                <comment line="790">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="791">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="792">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="793">
                    class calls into the Handler.                    
                </comment>
                <comment line="827">
                    FocusListener                    
                </comment>
                <comment line="849">
                    KeyListener                    
                </comment>
                <comment line="922">
                    MouseInputListener                    
                </comment>
                <comment line="924">
                    Component receiving mouse events during editing.                    
                </comment>
                <comment line="925">
                    May not be editorComponent.                    
                </comment>
                <comment line="959">
                    The row and column where the press occurred and the                    
                </comment>
                <comment line="960">
                    press event itself                    
                </comment>
                <comment line="965">
                    Whether or not the mouse press (which is being considered as part                    
                </comment>
                <comment line="966">
                    of a drag sequence) also caused the selection change to be fully                    
                </comment>
                <comment line="967">
                    processed.                    
                </comment>
                <comment line="970">
                    Set to true when a drag gesture has been fully recognized and DnD                    
                </comment>
                <comment line="971">
                    begins. Use this to ignore further mouse events which could be                    
                </comment>
                <comment line="972">
                    delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="975">
                    Whether or not we should start the editing timer on release                    
                </comment>
                <comment line="978">
                    To cache the return value of pointOutsidePrefSize since we use                    
                </comment>
                <comment line="979">
                    it multiple times.                    
                </comment>
                <comment line="982">
                    Used to delay the start of editing.                    
                </comment>
                <comment line="1259">
                    PropertyChangeListener                    
                </comment>
                <implements interface="FocusListener"/>
                <javadoc line="762">
                    This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of {@code BasicTableUI}.                    
                </javadoc>
                <method name="focusGained" type="void" line="771">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                </method>
                <method name="focusLost" type="void" line="775">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                </method>
            </class>
            <class name="MouseInputHandler" line="784">
                <comment line="156">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="159">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="162">
                    extend the selection to the lead item                    
                </comment>
                <comment line="165">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <comment line="168">
                    give focus to the JTableHeader, if one exists                    
                </comment>
                <comment line="176">
                    horizontally, forwards always means right,                    
                </comment>
                <comment line="177">
                    regardless of component orientation                    
                </comment>
                <comment line="742">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="743">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="744">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="745">
                    class calls into the Handler.                    
                </comment>
                <comment line="768">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="769">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="770">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="771">
                    class calls into the Handler.                    
                </comment>
                <comment line="790">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="791">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="792">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="793">
                    class calls into the Handler.                    
                </comment>
                <comment line="827">
                    FocusListener                    
                </comment>
                <comment line="849">
                    KeyListener                    
                </comment>
                <comment line="922">
                    MouseInputListener                    
                </comment>
                <comment line="924">
                    Component receiving mouse events during editing.                    
                </comment>
                <comment line="925">
                    May not be editorComponent.                    
                </comment>
                <comment line="959">
                    The row and column where the press occurred and the                    
                </comment>
                <comment line="960">
                    press event itself                    
                </comment>
                <comment line="965">
                    Whether or not the mouse press (which is being considered as part                    
                </comment>
                <comment line="966">
                    of a drag sequence) also caused the selection change to be fully                    
                </comment>
                <comment line="967">
                    processed.                    
                </comment>
                <comment line="970">
                    Set to true when a drag gesture has been fully recognized and DnD                    
                </comment>
                <comment line="971">
                    begins. Use this to ignore further mouse events which could be                    
                </comment>
                <comment line="972">
                    delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="975">
                    Whether or not we should start the editing timer on release                    
                </comment>
                <comment line="978">
                    To cache the return value of pointOutsidePrefSize since we use                    
                </comment>
                <comment line="979">
                    it multiple times.                    
                </comment>
                <comment line="982">
                    Used to delay the start of editing.                    
                </comment>
                <comment line="1259">
                    PropertyChangeListener                    
                </comment>
                <implements interface="MouseInputListener"/>
                <javadoc line="784">
                    This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of BasicTableUI.                    
                </javadoc>
                <method name="mouseClicked" type="void" line="793">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mousePressed" type="void" line="797">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseReleased" type="void" line="801">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseEntered" type="void" line="805">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseExited" type="void" line="809">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseMoved" type="void" line="813">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseDragged" type="void" line="817">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
            </class>
            <class name="Handler" line="822">
                <comment line="156">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="159">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="162">
                    extend the selection to the lead item                    
                </comment>
                <comment line="165">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <comment line="168">
                    give focus to the JTableHeader, if one exists                    
                </comment>
                <comment line="176">
                    horizontally, forwards always means right,                    
                </comment>
                <comment line="177">
                    regardless of component orientation                    
                </comment>
                <comment line="742">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="743">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="744">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="745">
                    class calls into the Handler.                    
                </comment>
                <comment line="768">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="769">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="770">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="771">
                    class calls into the Handler.                    
                </comment>
                <comment line="790">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="791">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="792">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="793">
                    class calls into the Handler.                    
                </comment>
                <comment line="827">
                    FocusListener                    
                </comment>
                <comment line="849">
                    KeyListener                    
                </comment>
                <comment line="922">
                    MouseInputListener                    
                </comment>
                <comment line="924">
                    Component receiving mouse events during editing.                    
                </comment>
                <comment line="925">
                    May not be editorComponent.                    
                </comment>
                <comment line="959">
                    The row and column where the press occurred and the                    
                </comment>
                <comment line="960">
                    press event itself                    
                </comment>
                <comment line="965">
                    Whether or not the mouse press (which is being considered as part                    
                </comment>
                <comment line="966">
                    of a drag sequence) also caused the selection change to be fully                    
                </comment>
                <comment line="967">
                    processed.                    
                </comment>
                <comment line="970">
                    Set to true when a drag gesture has been fully recognized and DnD                    
                </comment>
                <comment line="971">
                    begins. Use this to ignore further mouse events which could be                    
                </comment>
                <comment line="972">
                    delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="975">
                    Whether or not we should start the editing timer on release                    
                </comment>
                <comment line="978">
                    To cache the return value of pointOutsidePrefSize since we use                    
                </comment>
                <comment line="979">
                    it multiple times.                    
                </comment>
                <comment line="982">
                    Used to delay the start of editing.                    
                </comment>
                <comment line="1259">
                    PropertyChangeListener                    
                </comment>
                <implements interface="FocusListener"/>
                <implements interface="MouseInputListener"/>
                <implements interface="PropertyChangeListener"/>
                <implements interface="ListSelectionListener"/>
                <implements interface="ActionListener"/>
                <implements interface="BeforeDrag"/>
                <method name="repaintLeadCell" type="void" line="827">
                    <declaration name="lr" type="int" line="828"/>
                    <declaration name="lc" type="int" line="829"/>
                    <scope line="831"/>
                    <declaration name="dirtyRect" type="Rectangle" line="835"/>
                </method>
                <method name="focusGained" type="void" line="839">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                </method>
                <method name="focusLost" type="void" line="843">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                </method>
                <method name="keyPressed" type="void" line="849">
                    <params>
                        <param name="e" type="KeyEvent"/>
                    </params>
                </method>
                <method name="keyReleased" type="void" line="851">
                    <params>
                        <param name="e" type="KeyEvent"/>
                    </params>
                </method>
                <method name="keyTyped" type="void" line="853">
                    <params>
                        <param name="e" type="KeyEvent"/>
                    </params>
                    <comment line="857">
                        We register all actions using ANCESTOR_OF_FOCUSED_COMPONENT                        
                    </comment>
                    <comment line="858">
                        which means that we might perform the appropriate action                        
                    </comment>
                    <comment line="859">
                        in the table and then forward it to the editor if the editor                        
                    </comment>
                    <comment line="860">
                        had focus. Make sure this doesn&apos;t happen by checking our                        
                    </comment>
                    <comment line="861">
                        InputMaps.                        
                    </comment>
                    <comment line="874">
                        The AWT seems to generate an unconsumed \r event when                        
                    </comment>
                    <comment line="875">
                        ENTER (\n) is pressed.                        
                    </comment>
                    <comment line="888">
                        Forwarding events this way seems to put the component                        
                    </comment>
                    <comment line="889">
                        in a state where it believes it has focus. In reality                        
                    </comment>
                    <comment line="890">
                        the table retains focus - though it is difficult for                        
                    </comment>
                    <comment line="891">
                        a user to tell, since the caret is visible and flashing.                        
                    </comment>
                    <comment line="893">
                        Calling table.requestFocus() here, to get the focus back to                        
                    </comment>
                    <comment line="894">
                        the table, seems to have no effect.                        
                    </comment>
                    <declaration name="keyStroke" type="KeyStroke" line="854"/>
                    <declaration name="map" type="InputMap" line="862"/>
                    <scope line="863"/>
                    <scope line="868"/>
                    <scope line="876"/>
                    <declaration name="leadRow" type="int" line="880"/>
                    <declaration name="leadColumn" type="int" line="881"/>
                    <scope line="882">
                        <scope line="883"/>
                    </scope>
                    <declaration name="editorComp" type="Component" line="896"/>
                    <scope line="897">
                        <scope line="898">
                            <declaration name="component" type="JComponent" line="899"/>
                            <declaration name="binding" type="Object" line="901"/>
                            <scope line="902"/>
                            <scope line="907">
                                <declaration name="am" type="ActionMap" line="908"/>
                                <declaration name="action" type="Action" line="909"/>
                                <scope line="912"/>
                            </scope>
                        </scope>
                    </scope>
                </method>
                <declaration name="dispatchComponent" type="Component" line="925"/>
                <method name="mouseClicked" type="void" line="927">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="setDispatchComponent" type="void" line="929">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <declaration name="editorComponent" type="Component" line="930"/>
                    <declaration name="p" type="Point" line="931"/>
                    <declaration name="p2" type="Point" line="932"/>
                </method>
                <method name="repostEvent" type="boolean" line="940">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <comment line="941">
                        Check for isEditing() in case another event has                        
                    </comment>
                    <comment line="942">
                        caused the editor to be removed. See bug #4306499.                        
                    </comment>
                    <scope line="943"/>
                    <declaration name="e2" type="MouseEvent" line="946"/>
                </method>
                <method name="setValueIsAdjusting" type="void" line="952">
                    <params>
                        <param name="flag" type="boolean"/>
                    </params>
                </method>
                <declaration name="pressedRow" type="int" line="960"/>
                <declaration name="pressedCol" type="int" line="961"/>
                <declaration name="pressedEvent" type="MouseEvent" line="962"/>
                <declaration name="dragPressDidSelection" type="boolean" line="967"/>
                <declaration name="dragStarted" type="boolean" line="972"/>
                <declaration name="shouldStartTimer" type="boolean" line="975"/>
                <declaration name="outsidePrefSize" type="boolean" line="979"/>
                <declaration name="timer" type="Timer" line="982"/>
                <method name="canStartDrag" type="boolean" line="984">
                    <comment line="993">
                        if this is a single selection table                        
                    </comment>
                    <scope line="985"/>
                    <scope line="989"/>
                    <scope line="997"/>
                </method>
                <method name="mousePressed" type="void" line="1005">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <scope line="1006"/>
                    <scope line="1010">
                        <declaration name="editorComponent" type="Component" line="1011"/>
                        <scope line="1012"/>
                    </scope>
                    <declaration name="p" type="Point" line="1018"/>
                    <scope line="1023"/>
                    <scope line="1031"/>
                    <scope line="1033">
                        <scope line="1035"/>
                    </scope>
                </method>
                <method name="mousePressedDND" type="void" line="1042">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <comment line="1052">
                        do nothing for control - will be handled on release                        
                    </comment>
                    <comment line="1053">
                        or when drag starts                        
                    </comment>
                    <comment line="1056">
                        clicking on something that&apos;s already selected                        
                    </comment>
                    <comment line="1057">
                        and need to make it the lead now                        
                    </comment>
                    <comment line="1068">
                        could be a drag initiating event - don&apos;t grab focus                        
                    </comment>
                    <comment line="1071">
                        When drag can&apos;t happen, mouse drags might change the selection in the table                        
                    </comment>
                    <comment line="1072">
                        so we want the isAdjusting flag to be set                        
                    </comment>
                    <declaration name="grabFocus" type="boolean" line="1044"/>
                    <scope line="1047">
                        <scope line="1051"/>
                        <scope line="1055"/>
                    </scope>
                    <scope line="1070"/>
                    <scope line="1076"/>
                </method>
                <method name="adjustSelection" type="void" line="1083">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <comment line="1084">
                        Fix for 4835633                        
                    </comment>
                    <comment line="1086">
                        If shift is down in multi-select, we should just return.                        
                    </comment>
                    <comment line="1087">
                        For single select or non-shift-click, clear the selection                        
                    </comment>
                    <comment line="1100">
                        The autoscroller can generate drag events outside the                        
                    </comment>
                    <comment line="1101">
                        table&apos;s range.                        
                    </comment>
                    <scope line="1085">
                        <scope line="1091">
                            <declaration name="tce" type="TableCellEditor" line="1093"/>
                            <scope line="1094"/>
                        </scope>
                    </scope>
                    <scope line="1102"/>
                    <declaration name="dragEnabled" type="boolean" line="1106"/>
                    <scope line="1108"/>
                    <declaration name="editor" type="CellEditor" line="1113"/>
                    <scope line="1114"/>
                </method>
                <method name="valueChanged" type="void" line="1121">
                    <params>
                        <param name="e" type="ListSelectionEvent"/>
                    </params>
                    <scope line="1122"/>
                </method>
                <method name="actionPerformed" type="void" line="1128">
                    <params>
                        <param name="ae" type="ActionEvent"/>
                    </params>
                    <declaration name="editorComponent" type="Component" line="1130"/>
                    <scope line="1131"/>
                </method>
                <method name="maybeStartTimer" type="void" line="1137">
                    <scope line="1138"/>
                    <scope line="1142"/>
                </method>
                <method name="mouseReleased" type="void" line="1150">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <scope line="1151"/>
                    <scope line="1155"/>
                    <scope line="1157">
                        <scope line="1158"/>
                    </scope>
                </method>
                <method name="mouseReleasedDND" type="void" line="1169">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <comment line="1194">
                        This may appear completely odd, but must be done for backward                        
                    </comment>
                    <comment line="1195">
                        compatibility reasons. Developers have been known to rely on                        
                    </comment>
                    <comment line="1196">
                        a call to shouldSelectCell after editing has begun.                        
                    </comment>
                    <declaration name="me" type="MouseEvent" line="1170"/>
                    <scope line="1171">
                        <scope line="1173"/>
                    </scope>
                    <scope line="1178">
                        <scope line="1179"/>
                        <declaration name="p" type="Point" line="1184"/>
                        <scope line="1189">
                            <declaration name="ce" type="CellEditor" line="1197"/>
                            <scope line="1198"/>
                        </scope>
                    </scope>
                </method>
                <method name="mouseEntered" type="void" line="1205">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseExited" type="void" line="1207">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseMoved" type="void" line="1209">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="dragStarting" type="void" line="1211">
                    <params>
                        <param name="me" type="MouseEvent"/>
                    </params>
                    <scope line="1214"/>
                </method>
                <method name="mouseDragged" type="void" line="1224">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <comment line="1237">
                        Check isFileList:                        
                    </comment>
                    <comment line="1238">
                        Until we support drag-selection, dragging should not change                        
                    </comment>
                    <comment line="1239">
                        the selection (act like single-select).                        
                    </comment>
                    <comment line="1247">
                        The autoscroller can generate drag events outside the                        
                    </comment>
                    <comment line="1248">
                        table&apos;s range.                        
                    </comment>
                    <scope line="1225"/>
                    <scope line="1230"/>
                    <scope line="1240"/>
                    <declaration name="p" type="Point" line="1244"/>
                    <declaration name="row" type="int" line="1245"/>
                    <declaration name="column" type="int" line="1246"/>
                    <scope line="1249"/>
                </method>
                <method name="propertyChange" type="void" line="1259">
                    <params>
                        <param name="event" type="PropertyChangeEvent"/>
                    </params>
                    <declaration name="changeName" type="String" line="1260"/>
                    <scope line="1262">
                        <declaration name="inputMap" type="InputMap" line="1263"/>
                        <declaration name="header" type="JTableHeader" line="1270"/>
                        <scope line="1271"/>
                    </scope>
                    <scope line="1275">
                        <declaration name="oldValue" type="JTable.DropLocation" line="1276"/>
                    </scope>
                    <scope line="1279">
                        <scope line="1283"/>
                        <scope line="1285"/>
                    </scope>
                    <scope line="1289">
                        <scope line="1290">
                            <declaration name="old" type="ListSelectionModel" line="1291"/>
                        </scope>
                    </scope>
                </method>
                <method name="repaintDropLocation" type="void" line="1298">
                    <params>
                        <param name="loc" type="JTable.DropLocation"/>
                    </params>
                    <scope line="1299"/>
                    <scope line="1303">
                        <declaration name="rect" type="Rectangle" line="1304"/>
                        <scope line="1305"/>
                    </scope>
                    <scope line="1311">
                        <declaration name="rect" type="Rectangle" line="1312"/>
                        <scope line="1313"/>
                    </scope>
                    <scope line="1318">
                        <declaration name="rect" type="Rectangle" line="1319"/>
                        <scope line="1320"/>
                    </scope>
                </method>
            </class>
            <method name="pointOutsidePrefSize" type="boolean" line="1333">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="p" type="Point"/>
                </params>
                <scope line="1334"/>
            </method>
            <method name="getHandler" type="Handler" line="1345">
                <scope line="1346"/>
            </method>
            <javadoc line="1352">
                Creates the key listener for handling keyboard navigation in the JTable.                
            </javadoc>
            <method name="createKeyListener" type="KeyListener" line="1355"/>
            <javadoc line="1359">
                Creates the focus listener for handling keyboard navigation in the JTable.                
            </javadoc>
            <method name="createFocusListener" type="FocusListener" line="1362"/>
            <javadoc line="1366">
                Creates the mouse listener for the JTable.                
            </javadoc>
            <method name="createMouseInputListener" type="MouseInputListener" line="1369"/>
            <method name="createUI" type="ComponentUI" line="1377">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="installUI" type="void" line="1383">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="1394">
                Initialize JTable properties, e.g. font, foreground, and background.
                  The font, foreground, and background properties are only set if their
                  current value is either null or a UIResource, other properties are set
                  if the current value is null.                
                <see>
                    #installUI                    
                </see>
            </javadoc>
            <method name="installDefaults" type="void" line="1402">
                <comment line="1405">
                    JTable&apos;s original row height is 16.  To correctly display the                    
                </comment>
                <comment line="1406">
                    contents on Linux we should have set it to 18, Windows 19 and                    
                </comment>
                <comment line="1407">
                    Solaris 20.  As these values vary so much it&apos;s too hard to                    
                </comment>
                <comment line="1408">
                    be backward compatable and try to update the row height, we&apos;re                    
                </comment>
                <comment line="1409">
                    therefor NOT going to adjust the row height based on font.  If the                    
                </comment>
                <comment line="1410">
                    developer changes the font, it&apos;s there responsability to update                    
                </comment>
                <comment line="1411">
                    the row height.                    
                </comment>
                <comment line="1433">
                    install the scrollpane border                    
                </comment>
                <comment line="1434">
                    should be viewport                    
                </comment>
                <comment line="1436">
                    should be the scrollpane                    
                </comment>
                <declaration name="sbg" type="Color" line="1415"/>
                <scope line="1416"/>
                <declaration name="sfg" type="Color" line="1421"/>
                <scope line="1422"/>
                <declaration name="gridColor" type="Color" line="1427"/>
                <scope line="1428"/>
                <declaration name="parent" type="Container" line="1434"/>
                <scope line="1435">
                    <scope line="1437"/>
                </scope>
            </method>
            <method name="installDefaults2" type="void" line="1445">
                <comment line="1449">
                    default TransferHandler doesn&apos;t support drop                    
                </comment>
                <comment line="1450">
                    so we don&apos;t want drop handling                    
                </comment>
                <declaration name="th" type="TransferHandler" line="1446"/>
                <scope line="1447">
                    <scope line="1451"/>
                </scope>
            </method>
            <javadoc line="1457">
                Attaches listeners to the JTable.                
            </javadoc>
            <method name="installListeners" type="void" line="1460">
                <scope line="1470"/>
            </method>
            <javadoc line="1475">
                Register all keyboard actions on the JTable.                
            </javadoc>
            <method name="installKeyboardActions" type="void" line="1478">
                <declaration name="inputMap" type="InputMap" line="1482"/>
            </method>
            <method name="getInputMap" type="InputMap" line="1489">
                <params>
                    <param name="condition" type="int"/>
                </params>
                <scope line="1490">
                    <declaration name="keyMap" type="InputMap" line="1491"/>
                    <declaration name="rtlKeyMap" type="InputMap" line="1494"/>
                    <scope line="1498"/>
                    <scope line="1500"/>
                </scope>
            </method>
            <method name="loadActionMap" type="void" line="1508">
                <params>
                    <param name="map" type="LazyActionMap"/>
                </params>
                <comment line="1509">
                    IMPORTANT: There is a very close coupling between the parameters                    
                </comment>
                <comment line="1510">
                    passed to the Actions constructor. Only certain parameter                    
                </comment>
                <comment line="1511">
                    combinations are supported. For example, the following Action would                    
                </comment>
                <comment line="1512">
                    not work as expected:                    
                </comment>
                <comment line="1513">
                    new Actions(Actions.NEXT_ROW_CELL, 1, 4, false, true)                    
                </comment>
                <comment line="1514">
                    Actions which move within the selection only (having a true                    
                </comment>
                <comment line="1515">
                    inSelection parameter) require that one of dx or dy be                    
                </comment>
                <comment line="1516">
                    zero and the other be -1 or 1. The point of this warning is                    
                </comment>
                <comment line="1517">
                    that you should be very careful about making sure a particular                    
                </comment>
                <comment line="1518">
                    combination of parameters is supported before changing or                    
                </comment>
                <comment line="1519">
                    adding anything here.                    
                </comment>
            </method>
            <method name="uninstallUI" type="void" line="1609">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="uninstallDefaults" type="void" line="1619">
                <scope line="1620"/>
            </method>
            <method name="uninstallListeners" type="void" line="1625">
                <scope line="1631"/>
            </method>
            <method name="uninstallKeyboardActions" type="void" line="1641"/>
            <javadoc line="1647">
                Returns the baseline.                
                <throws>
                    NullPointerException {@inheritDoc}                    
                </throws>
                <throws>
                    IllegalArgumentException {@inheritDoc}                    
                </throws>
                <see>
                    javax.swing.JComponent#getBaseline(int,int)                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="getBaseline" type="int" line="1655">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="lafDefaults" type="UIDefaults" line="1657"/>
                <declaration name="renderer" type="Component" line="1658"/>
                <scope line="1660">
                    <declaration name="tcr" type="DefaultTableCellRenderer" line="1661"/>
                </scope>
                <declaration name="rowMargin" type="int" line="1667"/>
            </method>
            <javadoc line="1672">
                Returns an enum indicating how the baseline of the component
                  changes as the size changes.                
                <throws>
                    NullPointerException {@inheritDoc}                    
                </throws>
                <see>
                    javax.swing.JComponent#getBaseline(int,int)                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="getBaselineResizeBehavior" type="Component.BaselineResizeBehavior" line="1681">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="createTableSize" type="Dimension" line="1690">
                <params>
                    <param name="width" type="long"/>
                </params>
                <comment line="1697">
                    Width is always positive. The call to abs() is a workaround for                    
                </comment>
                <comment line="1698">
                    a bug in the 1.1.6 JIT on Windows.                    
                </comment>
                <declaration name="height" type="int" line="1691"/>
                <declaration name="rowCount" type="int" line="1692"/>
                <scope line="1693">
                    <declaration name="r" type="Rectangle" line="1694"/>
                </scope>
                <declaration name="tmp" type="long" line="1699"/>
                <scope line="1700"/>
            </method>
            <javadoc line="1706">
                Return the minimum size of the table. The minimum height is the
                  row height times the number of rows.
                  The minimum width is the sum of the minimum widths of each column.                
            </javadoc>
            <method name="getMinimumSize" type="Dimension" line="1711">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="width" type="long" line="1712"/>
                <declaration name="enumeration" type="Enumeration" line="1713"/>
                <scope line="1714">
                    <declaration name="aColumn" type="TableColumn" line="1715"/>
                </scope>
            </method>
            <javadoc line="1721">
                Return the preferred size of the table. The preferred height is the
                  row height times the number of rows.
                  The preferred width is the sum of the preferred widths of each column.                
            </javadoc>
            <method name="getPreferredSize" type="Dimension" line="1726">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="width" type="long" line="1727"/>
                <declaration name="enumeration" type="Enumeration" line="1728"/>
                <scope line="1729">
                    <declaration name="aColumn" type="TableColumn" line="1730"/>
                </scope>
            </method>
            <javadoc line="1736">
                Return the maximum size of the table. The maximum height is the
                  row heighttimes the number of rows.
                  The maximum width is the sum of the maximum widths of each column.                
            </javadoc>
            <method name="getMaximumSize" type="Dimension" line="1741">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="width" type="long" line="1742"/>
                <declaration name="enumeration" type="Enumeration" line="1743"/>
                <scope line="1744">
                    <declaration name="aColumn" type="TableColumn" line="1745"/>
                </scope>
            </method>
            <javadoc line="1755">
                Paint a representation of the &lt;code&gt;table&lt;/code&gt; instance
                  that was set in installUI().                
            </javadoc>
            <method name="paint" type="void" line="1758">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <comment line="1762">
                    account for the fact that the graphics has already been translated                    
                </comment>
                <comment line="1763">
                    into the table&apos;s bounds                    
                </comment>
                <comment line="1767">
                    this check prevents us from painting the entire table                    
                </comment>
                <comment line="1768">
                    when the clip doesn&apos;t intersect our bounds at all                    
                </comment>
                <comment line="1783">
                    This should never happen (as long as our bounds intersect the clip,                    
                </comment>
                <comment line="1784">
                    which is why we bail above if that is the case).                    
                </comment>
                <comment line="1788">
                    If the table does not have enough rows to fill the view we&apos;ll get -1.                    
                </comment>
                <comment line="1789">
                    (We could also get -1 if our bounds don&apos;t intersect the clip,                    
                </comment>
                <comment line="1790">
                    which is why we bail above if that is the case).                    
                </comment>
                <comment line="1791">
                    Replace this with the index of the last row.                    
                </comment>
                <comment line="1798">
                    This should never happen.                    
                </comment>
                <comment line="1802">
                    If the table does not have enough columns to fill the view we&apos;ll get -1.                    
                </comment>
                <comment line="1803">
                    Replace this with the index of the last column.                    
                </comment>
                <comment line="1808">
                    Paint the grid.                    
                </comment>
                <comment line="1811">
                    Paint the cells.                    
                </comment>
                <declaration name="clip" type="Rectangle" line="1759"/>
                <declaration name="bounds" type="Rectangle" line="1761"/>
                <scope line="1769"/>
                <declaration name="ltr" type="boolean" line="1775"/>
                <declaration name="upperLeft" type="Point" line="1777"/>
                <declaration name="lowerRight" type="Point" line="1778"/>
                <declaration name="rMin" type="int" line="1781"/>
                <declaration name="rMax" type="int" line="1782"/>
                <scope line="1785"/>
                <scope line="1792"/>
                <declaration name="cMin" type="int" line="1796"/>
                <declaration name="cMax" type="int" line="1797"/>
                <scope line="1799"/>
                <scope line="1804"/>
            </method>
            <method name="paintDropLines" type="void" line="1817">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="loc" type="JTable.DropLocation" line="1818"/>
                <scope line="1819"/>
                <declaration name="color" type="Color" line="1823"/>
                <declaration name="shortColor" type="Color" line="1824"/>
                <scope line="1825"/>
                <declaration name="rect" type="Rectangle" line="1829"/>
                <scope line="1832">
                    <declaration name="x" type="int" line="1833"/>
                    <declaration name="w" type="int" line="1834"/>
                    <scope line="1835"/>
                    <scope line="1840"/>
                </scope>
                <scope line="1847">
                    <declaration name="y" type="int" line="1848"/>
                    <declaration name="h" type="int" line="1849"/>
                    <scope line="1850"/>
                    <scope line="1855"/>
                </scope>
            </method>
            <method name="getHDropLineRect" type="Rectangle" line="1862">
                <params>
                    <param name="loc" type="JTable.DropLocation"/>
                </params>
                <scope line="1863"/>
                <declaration name="row" type="int" line="1867"/>
                <declaration name="col" type="int" line="1868"/>
                <scope line="1869"/>
                <declaration name="rect" type="Rectangle" line="1873"/>
                <scope line="1875">
                    <declaration name="prevRect" type="Rectangle" line="1877"/>
                </scope>
                <scope line="1881"/>
                <scope line="1883"/>
            </method>
            <method name="getVDropLineRect" type="Rectangle" line="1892">
                <params>
                    <param name="loc" type="JTable.DropLocation"/>
                </params>
                <scope line="1893"/>
                <declaration name="ltr" type="boolean" line="1897"/>
                <declaration name="col" type="int" line="1898"/>
                <declaration name="rect" type="Rectangle" line="1899"/>
                <scope line="1901">
                    <scope line="1904"/>
                </scope>
                <scope line="1907"/>
                <scope line="1911"/>
                <scope line="1913"/>
            </method>
            <method name="extendRect" type="Rectangle" line="1922">
                <params>
                    <param name="rect" type="Rectangle"/>
                    <param name="horizontal" type="boolean"/>
                </params>
                <scope line="1923"/>
                <scope line="1927"/>
                <scope line="1930">
                    <scope line="1933">
                        <declaration name="lastRect" type="Rectangle" line="1934"/>
                    </scope>
                    <scope line="1936"/>
                </scope>
            </method>
            <method name="paintGrid" type="void" line="1951">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="rMin" type="int"/>
                    <param name="rMax" type="int"/>
                    <param name="cMin" type="int"/>
                    <param name="cMax" type="int"/>
                </params>
                <declaration name="minCell" type="Rectangle" line="1954"/>
                <declaration name="maxCell" type="Rectangle" line="1955"/>
                <declaration name="damagedArea" type="Rectangle" line="1956"/>
                <scope line="1958">
                    <declaration name="tableWidth" type="int" line="1959"/>
                    <declaration name="y" type="int" line="1960"/>
                    <scope line="1961"/>
                </scope>
                <scope line="1966">
                    <declaration name="cm" type="TableColumnModel" line="1967"/>
                    <declaration name="tableHeight" type="int" line="1968"/>
                    <declaration name="x" type="int" line="1969"/>
                    <scope line="1970">
                        <scope line="1972">
                            <declaration name="w" type="int" line="1973"/>
                        </scope>
                    </scope>
                    <scope line="1977">
                        <scope line="1979">
                            <declaration name="w" type="int" line="1980"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="viewIndexForColumn" type="int" line="1988">
                <params>
                    <param name="aColumn" type="TableColumn"/>
                </params>
                <declaration name="cm" type="TableColumnModel" line="1989"/>
                <scope line="1990">
                    <scope line="1991"/>
                </scope>
            </method>
            <method name="paintCells" type="void" line="1998">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="rMin" type="int"/>
                    <param name="rMax" type="int"/>
                    <param name="cMin" type="int"/>
                    <param name="cMax" type="int"/>
                </params>
                <comment line="2042">
                    Paint the dragged column if we are dragging.                    
                </comment>
                <comment line="2047">
                    Remove any renderers that may be left in the rendererPane.                    
                </comment>
                <declaration name="header" type="JTableHeader" line="1999"/>
                <declaration name="draggedColumn" type="TableColumn" line="2000"/>
                <declaration name="cm" type="TableColumnModel" line="2002"/>
                <declaration name="columnMargin" type="int" line="2003"/>
                <declaration name="cellRect" type="Rectangle" line="2005"/>
                <declaration name="aColumn" type="TableColumn" line="2006"/>
                <declaration name="columnWidth" type="int" line="2007"/>
                <scope line="2008">
                    <scope line="2009">
                        <scope line="2011">
                            <scope line="2015"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="2021">
                    <scope line="2022">
                        <scope line="2025"/>
                        <scope line="2030">
                            <scope line="2035"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="2043"/>
            </method>
            <method name="paintDraggedArea" type="void" line="2051">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="rMin" type="int"/>
                    <param name="rMax" type="int"/>
                    <param name="draggedColumn" type="TableColumn"/>
                    <param name="distance" type="int"/>
                </params>
                <comment line="2059">
                    Paint a gray well in place of the moving column.                    
                </comment>
                <comment line="2064">
                    Move to the where the cell has been dragged.                    
                </comment>
                <comment line="2067">
                    Fill the background.                    
                </comment>
                <comment line="2072">
                    Paint the vertical grid lines if necessary.                    
                </comment>
                <comment line="2079">
                    Left                    
                </comment>
                <comment line="2081">
                    Right                    
                </comment>
                <comment line="2086">
                    Render the cell value                    
                </comment>
                <comment line="2091">
                    Paint the (lower) horizontal grid line if necessary.                    
                </comment>
                <declaration name="draggedColumnIndex" type="int" line="2052"/>
                <declaration name="minCell" type="Rectangle" line="2054"/>
                <declaration name="maxCell" type="Rectangle" line="2055"/>
                <declaration name="vacatedColumnRect" type="Rectangle" line="2057"/>
                <scope line="2073">
                    <declaration name="x1" type="int" line="2075"/>
                    <declaration name="y1" type="int" line="2076"/>
                    <declaration name="x2" type="int" line="2077"/>
                    <declaration name="y2" type="int" line="2078"/>
                </scope>
                <scope line="2085">
                    <declaration name="r" type="Rectangle" line="2087"/>
                    <scope line="2092">
                        <declaration name="rcr" type="Rectangle" line="2094"/>
                        <declaration name="x1" type="int" line="2096"/>
                        <declaration name="y1" type="int" line="2097"/>
                        <declaration name="x2" type="int" line="2098"/>
                        <declaration name="y2" type="int" line="2099"/>
                    </scope>
                </scope>
            </method>
            <method name="paintCell" type="void" line="2105">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="cellRect" type="Rectangle"/>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
                <scope line="2107">
                    <declaration name="component" type="Component" line="2108"/>
                </scope>
                <scope line="2112">
                    <declaration name="renderer" type="TableCellRenderer" line="2113"/>
                    <declaration name="component" type="Component" line="2114"/>
                </scope>
            </method>
            <method name="getAdjustedLead" type="int" line="2122">
                <params>
                    <param name="table" type="JTable"/>
                    <param name="row" type="boolean"/>
                    <param name="model" type="ListSelectionModel"/>
                </params>
                <declaration name="index" type="int" line="2124"/>
                <declaration name="compare" type="int" line="2125"/>
            </method>
            <method name="getAdjustedLead" type="int" line="2129">
                <params>
                    <param name="table" type="JTable"/>
                    <param name="row" type="boolean"/>
                </params>
            </method>
            <declaration name="defaultTransferHandler" type="TransferHandler" line="2135"/>
            <class name="TableTransferHandler" line="2137">
                <extends class="TransferHandler"/>
                <comment line="156">
                    add the lead item to the selection without changing lead or anchor                    
                </comment>
                <comment line="159">
                    toggle the selected state of the lead item and move the anchor to it                    
                </comment>
                <comment line="162">
                    extend the selection to the lead item                    
                </comment>
                <comment line="165">
                    move the anchor to the lead and ensure only that item is selected                    
                </comment>
                <comment line="168">
                    give focus to the JTableHeader, if one exists                    
                </comment>
                <comment line="176">
                    horizontally, forwards always means right,                    
                </comment>
                <comment line="177">
                    regardless of component orientation                    
                </comment>
                <comment line="742">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="743">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="744">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="745">
                    class calls into the Handler.                    
                </comment>
                <comment line="768">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="769">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="770">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="771">
                    class calls into the Handler.                    
                </comment>
                <comment line="790">
                    NOTE: This class exists only for backward compatability. All                    
                </comment>
                <comment line="791">
                    its functionality has been moved into Handler. If you need to add                    
                </comment>
                <comment line="792">
                    new functionality add it to the Handler, but make sure this                    
                </comment>
                <comment line="793">
                    class calls into the Handler.                    
                </comment>
                <comment line="827">
                    FocusListener                    
                </comment>
                <comment line="849">
                    KeyListener                    
                </comment>
                <comment line="922">
                    MouseInputListener                    
                </comment>
                <comment line="924">
                    Component receiving mouse events during editing.                    
                </comment>
                <comment line="925">
                    May not be editorComponent.                    
                </comment>
                <comment line="959">
                    The row and column where the press occurred and the                    
                </comment>
                <comment line="960">
                    press event itself                    
                </comment>
                <comment line="965">
                    Whether or not the mouse press (which is being considered as part                    
                </comment>
                <comment line="966">
                    of a drag sequence) also caused the selection change to be fully                    
                </comment>
                <comment line="967">
                    processed.                    
                </comment>
                <comment line="970">
                    Set to true when a drag gesture has been fully recognized and DnD                    
                </comment>
                <comment line="971">
                    begins. Use this to ignore further mouse events which could be                    
                </comment>
                <comment line="972">
                    delivered if DnD is cancelled (via ESCAPE for example)                    
                </comment>
                <comment line="975">
                    Whether or not we should start the editing timer on release                    
                </comment>
                <comment line="978">
                    To cache the return value of pointOutsidePrefSize since we use                    
                </comment>
                <comment line="979">
                    it multiple times.                    
                </comment>
                <comment line="982">
                    Used to delay the start of editing.                    
                </comment>
                <comment line="1259">
                    PropertyChangeListener                    
                </comment>
                <implements interface="UIResource"/>
                <javadoc line="2139">
                    Create a Transferable to use as the source for a data transfer.                    
                    <param>
                        c  The component holding the data to be transfered.  This
                          argument is provided to enable sharing of TransferHandlers by
                          multiple components.                        
                    </param>
                    <return>
                        The representation of the data to be transfered.                        
                    </return>
                </javadoc>
                <method name="createTransferable" type="Transferable" line="2148">
                    <params>
                        <param name="c" type="JComponent"/>
                    </params>
                    <comment line="2197">
                        we want a newline at the end of each line and not a tab                        
                    </comment>
                    <comment line="2202">
                        remove the last newline                        
                    </comment>
                    <scope line="2149">
                        <declaration name="table" type="JTable" line="2150"/>
                        <declaration name="rows" type="int[]" line="2151"/>
                        <declaration name="cols" type="int[]" line="2152"/>
                        <scope line="2154"/>
                        <scope line="2158">
                            <declaration name="rowCount" type="int" line="2159"/>
                            <scope line="2162"/>
                        </scope>
                        <scope line="2165"/>
                        <scope line="2169">
                            <declaration name="colCount" type="int" line="2170"/>
                            <scope line="2173"/>
                        </scope>
                        <scope line="2176"/>
                        <scope line="2180"/>
                        <declaration name="plainBuf" type="StringBuffer" line="2184"/>
                        <declaration name="htmlBuf" type="StringBuffer" line="2185"/>
                        <scope line="2189">
                            <scope line="2191">
                                <declaration name="obj" type="Object" line="2192"/>
                                <declaration name="val" type="String" line="2193"/>
                            </scope>
                        </scope>
                    </scope>
                </method>
                <method name="getSourceActions" type="int" line="2212">
                    <params>
                        <param name="c" type="JComponent"/>
                    </params>
                </method>
            </class>
        </class>
    </source>