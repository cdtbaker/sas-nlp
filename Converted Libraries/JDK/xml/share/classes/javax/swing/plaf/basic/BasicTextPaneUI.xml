<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.basic">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.beans"/>
        <import package="javax.swing"/>
        <import package="javax.swing.text"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.border"/>
        <class name="BasicTextPaneUI" line="36">
            <extends class="BasicEditorPaneUI"/>
            <javadoc line="36">
                Provides the look and feel for a styled text editor.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases. The current serialization support is
                  appropriate for short term storage or RMI between applications running
                  the same version of Swing.  As of 1.4, support for long term storage
                  of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                  has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                  Please see {@link java.beans.XMLEncoder}.                
                <author>
                    Timothy Prinzing                    
                </author>
            </javadoc>
            <javadoc line="52">
                Creates a UI for the JTextPane.                
                <param>
                    c the JTextPane object                    
                </param>
                <return>
                    the UI                    
                </return>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="58">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="62">
                Creates a new BasicTextPaneUI.                
            </javadoc>
            <method name="BasicTextPaneUI" type="constructor" line="65"/>
            <javadoc line="69">
                Fetches the name used as a key to lookup properties through the
                  UIManager.  This is used as a prefix to all the standard
                  text properties.                
                <return>
                    the name (&quot;TextPane&quot;)                    
                </return>
            </javadoc>
            <method name="getPropertyPrefix" type="String" line="76"/>
            <method name="installUI" type="void" line="80">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="84">
                This method gets called when a bound property is changed
                  on the associated JTextComponent.  This is a hook
                  which UI implementations may change to reflect how the
                  UI displays bound properties of JTextComponent subclasses.
                  If the font, foreground or document has changed, the
                  the appropriate property is set in the default style of
                  the document.                
                <param>
                    evt the property change event                    
                </param>
            </javadoc>
            <method name="propertyChange" type="void" line="95">
                <params>
                    <param name="evt" type="PropertyChangeEvent"/>
                </params>
            </method>
        </class>
    </source>