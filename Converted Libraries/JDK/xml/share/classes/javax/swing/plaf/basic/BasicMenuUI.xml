<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.basic">
        <import package="sun.swing.DefaultLookup"/>
        <import package="sun.swing.UIAction"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.beans"/>
        <import package="javax.swing"/>
        <import package="javax.swing.event"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.border"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.ArrayList"/>
        <class name="BasicMenuUI" line="13">
            <extends class="BasicMenuItemUI"/>
            <javadoc line="13">
                A default L&amp;F implementation of MenuUI.  This implementation
                  is a &quot;combined&quot; view/controller.                
                <author>
                    Georges Saab                    
                </author>
                <author>
                    David Karlton                    
                </author>
                <author>
                    Arnaud Weber                    
                </author>
            </javadoc>
            <declaration name="changeListener" type="ChangeListener" line="21"/>
            <declaration name="menuListener" type="MenuListener" line="22"/>
            <declaration name="lastMnemonic" type="int" line="23"/>
            <declaration name="selectedWindowInputMap" type="InputMap" line="24"/>
            <javadoc line="24">
                Uses as the parent of the windowInputMap when selected.                
            </javadoc>
            <declaration name="TRACE" type="boolean" line="28"/>
            <declaration name="VERBOSE" type="boolean" line="29"/>
            <declaration name="DEBUG" type="boolean" line="30"/>
            <declaration name="crossMenuMnemonic" type="boolean" line="31"/>
            <method name="createUI" type="ComponentUI" line="32">
                <params>
                    <param name="x" type="JComponent"/>
                </params>
            </method>
            <method name="loadActionMap" type="void" line="35">
                <params>
                    <param name="map" type="LazyActionMap"/>
                </params>
            </method>
            <method name="installDefaults" type="void" line="39"/>
            <method name="getPropertyPrefix" type="String" line="45"/>
            <method name="installListeners" type="void" line="48"/>
            <method name="installKeyboardActions" type="void" line="55"/>
            <method name="installLazyActionMap" type="void" line="59"/>
            <method name="updateMnemonicBinding" type="void" line="62">
                <declaration name="mnemonic" type="int" line="63"/>
                <declaration name="shortcutKeys" type="int[]" line="64"/>
                <scope line="65"/>
                <scope line="68"/>
                <declaration name="windowInputMap" type="InputMap" line="71"/>
                <scope line="72">
                    <scope line="73"/>
                </scope>
                <scope line="77">
                    <scope line="78"/>
                    <scope line="82"/>
                </scope>
            </method>
            <method name="uninstallKeyboardActions" type="void" line="88"/>
            <method name="createMouseInputListener" type="MouseInputListener" line="92">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="createMenuListener" type="MenuListener" line="95">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="createChangeListener" type="ChangeListener" line="98">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="createPropertyChangeListener" type="PropertyChangeListener" line="101">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="getHandler" type="BasicMenuItemUI.Handler" line="104">
                <scope line="105"/>
            </method>
            <method name="uninstallDefaults" type="void" line="110"/>
            <method name="uninstallListeners" type="void" line="116"/>
            <method name="createMenuDragMouseListener" type="MenuDragMouseListener" line="124">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="createMenuKeyListener" type="MenuKeyListener" line="127">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="getMaximumSize" type="Dimension" line="130">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <scope line="131">
                    <declaration name="d" type="Dimension" line="132"/>
                </scope>
            </method>
            <method name="setupPostTimer" type="void" line="137">
                <params>
                    <param name="menu" type="JMenu"/>
                </params>
                <declaration name="timer" type="Timer" line="138"/>
            </method>
            <method name="appendPath" type="void" line="142">
                <params>
                    <param name="path" type="MenuElement[]"/>
                    <param name="elem" type="MenuElement"/>
                </params>
                <declaration name="newPath" type="MenuElement" line="143"/>
            </method>
            <class name="Actions" line="148">
                <extends class="UIAction"/>
                <declaration name="SELECT" type="String" line="149"/>
                <declaration name="menu" type="JMenu" line="150"/>
                <declaration name="force" type="boolean" line="151"/>
                <method name="Actions" type="constructor" line="152">
                    <params>
                        <param name="key" type="String"/>
                        <param name="menu" type="JMenu"/>
                        <param name="shouldForce" type="boolean"/>
                    </params>
                </method>
                <method name="getMenu" type="JMenu" line="157">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                    <scope line="158"/>
                </method>
                <method name="actionPerformed" type="void" line="163">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                    <declaration name="menu" type="JMenu" line="164"/>
                    <scope line="165">
                        <declaration name="pm" type="JPopupMenu" line="166"/>
                        <scope line="167"/>
                    </scope>
                    <declaration name="defaultManager" type="MenuSelectionManager" line="171"/>
                    <scope line="172">
                        <declaration name="cnt" type="Container" line="173"/>
                        <scope line="174">
                            <declaration name="me" type="MenuElement" line="175"/>
                            <declaration name="subElements" type="MenuElement" line="176"/>
                            <scope line="178"/>
                            <scope line="185"/>
                        </scope>
                    </scope>
                    <scope line="194">
                        <declaration name="path" type="MenuElement" line="195"/>
                        <scope line="196"/>
                    </scope>
                </method>
                <method name="isEnabled" type="boolean" line="201">
                    <params>
                        <param name="c" type="Object"/>
                    </params>
                    <scope line="202"/>
                </method>
            </class>
            <method name="updateDefaultBackgroundColor" type="void" line="208">
                <scope line="209"/>
                <declaration name="menu" type="JMenu" line="212"/>
                <scope line="213">
                    <scope line="214"/>
                    <scope line="217"/>
                </scope>
            </method>
            <class name="MouseInputHandler" line="222">
                <implements interface="MouseInputListener"/>
                <javadoc line="222">
                    Instantiated and used by a menu item to handle the current menu selection
                      from mouse events. A MouseInputHandler processes and forwards all mouse events
                      to a shared instance of the MenuSelectionManager.
                      &lt;p&gt;
                      This class is protected so that it can be subclassed by other look and
                      feels to implement their own mouse handling behavior. All overridden
                      methods should call the parent methods so that the menu selection
                      is correct.                    
                    <see>
                        javax.swing.MenuSelectionManager                        
                    </see>
                    <since>
                        1.4                        
                    </since>
                </javadoc>
                <method name="mouseClicked" type="void" line="235">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <javadoc line="238">
                    Invoked when the mouse has been clicked on the menu. This
                      method clears or sets the selection path of the
                      MenuSelectionManager.                    
                    <param>
                        e the mouse event                        
                    </param>
                </javadoc>
                <method name="mousePressed" type="void" line="244">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <javadoc line="247">
                    Invoked when the mouse has been released on the menu. Delegates the
                      mouse event to the MenuSelectionManager.                    
                    <param>
                        e the mouse event                        
                    </param>
                </javadoc>
                <method name="mouseReleased" type="void" line="252">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <javadoc line="255">
                    Invoked when the cursor enters the menu. This method sets the selected
                      path for the MenuSelectionManager and handles the case
                      in which a menu item is used to pop up an additional menu, as in a
                      hierarchical menu system.                    
                    <param>
                        e the mouse event; not used                        
                    </param>
                </javadoc>
                <method name="mouseEntered" type="void" line="262">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseExited" type="void" line="265">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <javadoc line="268">
                    Invoked when a mouse button is pressed on the menu and then dragged.
                      Delegates the mouse event to the MenuSelectionManager.                    
                    <param>
                        e the mouse event                        
                    </param>
                    <see>
                        java.awt.event.MouseMotionListener#mouseDragged                        
                    </see>
                </javadoc>
                <method name="mouseDragged" type="void" line="274">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseMoved" type="void" line="277">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
            </class>
            <class name="ChangeHandler" line="281">
                <implements interface="ChangeListener"/>
                <javadoc line="281">
                    As of Java 2 platform 1.4, this previously undocumented class
                      is now obsolete. KeyBindings are now managed by the popup menu.                    
                </javadoc>
                <declaration name="menu" type="JMenu" line="286"/>
                <declaration name="ui" type="BasicMenuUI" line="287"/>
                <declaration name="isSelected" type="boolean" line="288"/>
                <declaration name="wasFocused" type="Component" line="289"/>
                <method name="ChangeHandler" type="constructor" line="290">
                    <params>
                        <param name="m" type="JMenu"/>
                        <param name="ui" type="BasicMenuUI"/>
                    </params>
                </method>
                <method name="stateChanged" type="void" line="294">
                    <params>
                        <param name="e" type="ChangeEvent"/>
                    </params>
                </method>
            </class>
            <class name="Handler" line="297">
                <extends class="BasicMenuItemUI.Handler"/>
                <implements interface="MenuKeyListener"/>
                <method name="propertyChange" type="void" line="298">
                    <params>
                        <param name="e" type="PropertyChangeEvent"/>
                    </params>
                    <scope line="299"/>
                    <scope line="302">
                        <scope line="303"/>
                    </scope>
                </method>
                <method name="mouseClicked" type="void" line="309">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <javadoc line="311">
                    Invoked when the mouse has been clicked on the menu. This
                      method clears or sets the selection path of the
                      MenuSelectionManager.                    
                    <param>
                        e the mouse event                        
                    </param>
                </javadoc>
                <method name="mousePressed" type="void" line="317">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <declaration name="menu" type="JMenu" line="318"/>
                    <declaration name="manager" type="MenuSelectionManager" line="320"/>
                    <scope line="321">
                        <scope line="322"/>
                        <scope line="325">
                            <declaration name="cnt" type="Container" line="326"/>
                            <scope line="327">
                                <declaration name="me" type="MenuElement" line="328"/>
                            </scope>
                        </scope>
                    </scope>
                    <declaration name="selectedPath" type="MenuElement" line="335"/>
                    <scope line="336">
                        <scope line="337"/>
                        <scope line="340"/>
                    </scope>
                </method>
                <javadoc line="345">
                    Invoked when the mouse has been released on the menu. Delegates the
                      mouse event to the MenuSelectionManager.                    
                    <param>
                        e the mouse event                        
                    </param>
                </javadoc>
                <method name="mouseReleased" type="void" line="350">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <declaration name="menu" type="JMenu" line="351"/>
                    <declaration name="manager" type="MenuSelectionManager" line="353"/>
                </method>
                <javadoc line="357">
                    Invoked when the cursor enters the menu. This method sets the selected
                      path for the MenuSelectionManager and handles the case
                      in which a menu item is used to pop up an additional menu, as in a
                      hierarchical menu system.                    
                    <param>
                        e the mouse event; not used                        
                    </param>
                </javadoc>
                <method name="mouseEntered" type="void" line="364">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <declaration name="menu" type="JMenu" line="365"/>
                    <scope line="366"/>
                    <declaration name="manager" type="MenuSelectionManager" line="369"/>
                    <declaration name="selectedPath" type="MenuElement" line="370"/>
                    <scope line="371">
                        <scope line="372">
                            <scope line="373"/>
                            <scope line="376"/>
                        </scope>
                    </scope>
                    <scope line="382">
                        <scope line="383">
                            <declaration name="newPath" type="MenuElement" line="384"/>
                            <scope line="387"/>
                        </scope>
                    </scope>
                </method>
                <method name="mouseExited" type="void" line="394">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <javadoc line="396">
                    Invoked when a mouse button is pressed on the menu and then dragged.
                      Delegates the mouse event to the MenuSelectionManager.                    
                    <param>
                        e the mouse event                        
                    </param>
                    <see>
                        java.awt.event.MouseMotionListener#mouseDragged                        
                    </see>
                </javadoc>
                <method name="mouseDragged" type="void" line="402">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <declaration name="menu" type="JMenu" line="403"/>
                </method>
                <method name="mouseMoved" type="void" line="407">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="menuDragMouseEntered" type="void" line="409">
                    <params>
                        <param name="e" type="MenuDragMouseEvent"/>
                    </params>
                </method>
                <method name="menuDragMouseDragged" type="void" line="411">
                    <params>
                        <param name="e" type="MenuDragMouseEvent"/>
                    </params>
                    <declaration name="manager" type="MenuSelectionManager" line="413"/>
                    <declaration name="path" type="MenuElement" line="414"/>
                    <declaration name="p" type="Point" line="415"/>
                    <scope line="416">
                        <declaration name="menu" type="JMenu" line="417"/>
                        <declaration name="selectedPath" type="MenuElement" line="418"/>
                        <scope line="419">
                            <scope line="420"/>
                            <scope line="423"/>
                        </scope>
                    </scope>
                    <scope line="429">
                        <declaration name="comp" type="Component" line="430"/>
                    </scope>
                </method>
                <method name="menuDragMouseExited" type="void" line="434">
                    <params>
                        <param name="e" type="MenuDragMouseEvent"/>
                    </params>
                </method>
                <method name="menuDragMouseReleased" type="void" line="436">
                    <params>
                        <param name="e" type="MenuDragMouseEvent"/>
                    </params>
                </method>
                <javadoc line="438">
                    Open the Menu                    
                </javadoc>
                <method name="menuKeyTyped" type="void" line="441">
                    <params>
                        <param name="e" type="MenuKeyEvent"/>
                    </params>
                    <scope line="442"/>
                    <scope line="445"/>
                    <declaration name="key" type="char" line="448"/>
                    <declaration name="path" type="MenuElement" line="449"/>
                    <scope line="450">
                        <declaration name="popupMenu" type="JPopupMenu" line="451"/>
                        <declaration name="newList" type="ArrayList" line="452"/>
                        <declaration name="subs" type="MenuElement" line="454"/>
                        <declaration name="sub" type="MenuElement" line="455"/>
                        <scope line="456"/>
                        <declaration name="manager" type="MenuSelectionManager" line="459"/>
                        <declaration name="newPath" type="MenuElement" line="460"/>
                    </scope>
                </method>
                <method name="menuKeyPressed" type="void" line="467">
                    <params>
                        <param name="e" type="MenuKeyEvent"/>
                    </params>
                </method>
                <method name="menuKeyReleased" type="void" line="469">
                    <params>
                        <param name="e" type="MenuKeyEvent"/>
                    </params>
                </method>
            </class>
        </class>
    </source>