<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.basic">
        <import package="java.awt.Toolkit"/>
        <import package="java.awt.event"/>
        <import package="java.awt.dnd.DragSource"/>
        <import package="javax.swing"/>
        <import package="sun.awt.dnd.SunDragSourceContextPeer"/>
        <import package="sun.awt.AppContext"/>
        <class name="DragRecognitionSupport" line="34">
            <javadoc line="34">
                Drag gesture recognition support for classes that have a
                  &lt;code&gt;TransferHandler&lt;/code&gt;. The gesture for a drag in this class is a mouse
                  press followed by movement by &lt;code&gt;DragSource.getDragThreshold()&lt;/code&gt;
                  pixels. An instance of this class is maintained per AppContext, and the
                  public static methods call into the appropriate instance.                
                <author>
                    Shannon Hickey                    
                </author>
            </javadoc>
            <declaration name="motionThreshold" type="int" line="44"/>
            <declaration name="dndArmedEvent" type="MouseEvent" line="45"/>
            <declaration name="component" type="JComponent" line="46"/>
            <interface name="BeforeDrag">
                <javadoc line="48">
                    This interface allows us to pass in a handler to mouseDragged,
                      so that we can be notified immediately before a drag begins.                    
                </javadoc>
                <method name="dragStarting" type="void" line="53"/>
            </interface>
            <javadoc line="56">
                Returns the DragRecognitionSupport for the caller&apos;s AppContext.                
            </javadoc>
            <method name="getDragRecognitionSupport" type="DragRecognitionSupport" line="59">
                <declaration name="support" type="DragRecognitionSupport" line="60"/>
                <scope line="64"/>
            </method>
            <javadoc line="72">
                Returns whether or not the event is potentially part of a drag sequence.                
            </javadoc>
            <method name="mousePressed" type="boolean" line="75">
                <params>
                    <param name="me" type="MouseEvent"/>
                </params>
            </method>
            <javadoc line="79">
                If a dnd recognition has been going on, return the MouseEvent
                  that started the recognition. Otherwise, return null.                
            </javadoc>
            <method name="mouseReleased" type="MouseEvent" line="83">
                <params>
                    <param name="me" type="MouseEvent"/>
                </params>
            </method>
            <javadoc line="87">
                Returns whether or not a drag gesture recognition is ongoing.                
            </javadoc>
            <method name="mouseDragged" type="boolean" line="90">
                <params>
                    <param name="me" type="MouseEvent"/>
                    <param name="bd" type="BeforeDrag"/>
                </params>
            </method>
            <method name="clearState" type="void" line="94"/>
            <method name="mapDragOperationFromModifiers" type="int" line="100">
                <params>
                    <param name="me" type="MouseEvent"/>
                    <param name="th" type="TransferHandler"/>
                </params>
                <scope line="102"/>
            </method>
            <javadoc line="111">
                Returns whether or not the event is potentially part of a drag sequence.                
            </javadoc>
            <method name="mousePressedImpl" type="boolean" line="114">
                <params>
                    <param name="me" type="MouseEvent"/>
                </params>
                <scope line="118"/>
            </method>
            <javadoc line="129">
                If a dnd recognition has been going on, return the MouseEvent
                  that started the recognition. Otherwise, return null.                
            </javadoc>
            <method name="mouseReleasedImpl" type="MouseEvent" line="133">
                <params>
                    <param name="me" type="MouseEvent"/>
                </params>
                <comment line="135">
                                        
                </comment>
                <comment line="144">
                    else component has changed unexpectedly, so return null                    
                </comment>
                <scope line="135"/>
                <declaration name="retEvent" type="MouseEvent" line="139"/>
                <scope line="141"/>
            </method>
            <javadoc line="149">
                Returns whether or not a drag gesture recognition is ongoing.                
            </javadoc>
            <method name="mouseDraggedImpl" type="boolean" line="152">
                <params>
                    <param name="me" type="MouseEvent"/>
                    <param name="bd" type="BeforeDrag"/>
                </params>
                <comment line="154">
                                        
                </comment>
                <comment line="159">
                                        
                </comment>
                <comment line="171">
                                        
                </comment>
                <scope line="154"/>
                <scope line="159"/>
                <declaration name="dx" type="int" line="164"/>
                <declaration name="dy" type="int" line="165"/>
                <scope line="166">
                    <declaration name="th" type="TransferHandler" line="167"/>
                    <declaration name="action" type="int" line="168"/>
                    <scope line="169">
                        <scope line="171"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>