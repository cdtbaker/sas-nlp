<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.basic">
        <import package="java.awt.Toolkit"/>
        <import package="java.awt.event"/>
        <import package="java.awt.dnd.DragSource"/>
        <import package="javax.swing"/>
        <import package="sun.awt.dnd.SunDragSourceContextPeer"/>
        <import package="sun.awt.AppContext"/>
        <class name="DragRecognitionSupport" line="8">
            <javadoc line="8">
                Drag gesture recognition support for classes that have a
                  &lt;code&gt;TransferHandler&lt;/code&gt;. The gesture for a drag in this class is a mouse
                  press followed by movement by &lt;code&gt;DragSource.getDragThreshold()&lt;/code&gt;
                  pixels. An instance of this class is maintained per AppContext, and the
                  public static methods call into the appropriate instance.                
                <author>
                    Shannon Hickey                    
                </author>
            </javadoc>
            <declaration name="motionThreshold" type="int" line="17"/>
            <declaration name="dndArmedEvent" type="MouseEvent" line="18"/>
            <declaration name="component" type="JComponent" line="19"/>
            <interface name="BeforeDrag">
                <javadoc line="20">
                    This interface allows us to pass in a handler to mouseDragged,
                      so that we can be notified immediately before a drag begins.                    
                </javadoc>
                <method name="dragStarting" type="void" line="25"/>
            </interface>
            <javadoc line="27">
                Returns the DragRecognitionSupport for the caller&apos;s AppContext.                
            </javadoc>
            <method name="getDragRecognitionSupport" type="DragRecognitionSupport" line="30">
                <declaration name="support" type="DragRecognitionSupport" line="31"/>
                <scope line="32"/>
            </method>
            <javadoc line="38">
                Returns whether or not the event is potentially part of a drag sequence.                
            </javadoc>
            <method name="mousePressed" type="boolean" line="41">
                <params>
                    <param name="me" type="MouseEvent"/>
                </params>
            </method>
            <javadoc line="44">
                If a dnd recognition has been going on, return the MouseEvent
                  that started the recognition. Otherwise, return null.                
            </javadoc>
            <method name="mouseReleased" type="MouseEvent" line="48">
                <params>
                    <param name="me" type="MouseEvent"/>
                </params>
            </method>
            <javadoc line="51">
                Returns whether or not a drag gesture recognition is ongoing.                
            </javadoc>
            <method name="mouseDragged" type="boolean" line="54">
                <params>
                    <param name="me" type="MouseEvent"/>
                    <param name="bd" type="BeforeDrag"/>
                </params>
            </method>
            <method name="clearState" type="void" line="57"/>
            <method name="mapDragOperationFromModifiers" type="int" line="61">
                <params>
                    <param name="me" type="MouseEvent"/>
                    <param name="th" type="TransferHandler"/>
                </params>
                <scope line="62"/>
            </method>
            <javadoc line="67">
                Returns whether or not the event is potentially part of a drag sequence.                
            </javadoc>
            <method name="mousePressedImpl" type="boolean" line="70">
                <params>
                    <param name="me" type="MouseEvent"/>
                </params>
                <scope line="72"/>
            </method>
            <javadoc line="80">
                If a dnd recognition has been going on, return the MouseEvent
                  that started the recognition. Otherwise, return null.                
            </javadoc>
            <method name="mouseReleasedImpl" type="MouseEvent" line="84">
                <params>
                    <param name="me" type="MouseEvent"/>
                </params>
                <scope line="85"/>
                <declaration name="retEvent" type="MouseEvent" line="88"/>
                <scope line="89"/>
            </method>
            <javadoc line="95">
                Returns whether or not a drag gesture recognition is ongoing.                
            </javadoc>
            <method name="mouseDraggedImpl" type="boolean" line="98">
                <params>
                    <param name="me" type="MouseEvent"/>
                    <param name="bd" type="BeforeDrag"/>
                </params>
                <scope line="99"/>
                <scope line="102"/>
                <declaration name="dx" type="int" line="106"/>
                <declaration name="dy" type="int" line="107"/>
                <scope line="108">
                    <declaration name="th" type="TransferHandler" line="109"/>
                    <declaration name="action" type="int" line="110"/>
                    <scope line="111">
                        <scope line="112"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>