<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf">
        <import package="javax.swing.Action"/>
        <import package="javax.swing.BoundedRangeModel"/>
        <import package="java.awt.Point"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.Insets"/>
        <import package="javax.swing.text"/>
        <class name="TextUI" line="8">
            <extends class="ComponentUI"/>
            <javadoc line="8">
                Text editor user interface                
                <author>
                    Timothy Prinzing                    
                </author>
            </javadoc>
            <method name="modelToView" type="Rectangle" line="13"/>
            <javadoc line="13">
                Converts the given location in the model to a place in
                  the view coordinate system.                
                <param>
                    pos  the local location in the model to translate >= 0                    
                </param>
                <return>
                    the coordinates as a rectangle                    
                </return>
                <exception>
                    BadLocationException  if the given position does not
                      represent a valid location in the associated document                    
                </exception>
            </javadoc>
            <method name="modelToView" type="Rectangle" line="22"/>
            <javadoc line="22">
                Converts the given location in the model to a place in
                  the view coordinate system.                
                <param>
                    pos  the local location in the model to translate >= 0                    
                </param>
                <return>
                    the coordinates as a rectangle                    
                </return>
                <exception>
                    BadLocationException  if the given position does not
                      represent a valid location in the associated document                    
                </exception>
            </javadoc>
            <method name="viewToModel" type="int" line="31"/>
            <javadoc line="31">
                Converts the given place in the view coordinate system
                  to the nearest representative location in the model.                
                <param>
                    pt  the location in the view to translate.  This
                      should be in the same coordinate system as the mouse
                      events.                    
                </param>
                <return>
                    the offset from the start of the document >= 0                    
                </return>
            </javadoc>
            <method name="viewToModel" type="int" line="40"/>
            <javadoc line="40">
                Provides a mapping from the view coordinate space to the logical
                  coordinate space of the model.                
                <param>
                    pt the location in the view to translate.
                      This should be in the same coordinate system
                      as the mouse events.                    
                </param>
                <param>
                    biasReturnfilled in by this method to indicate whether
                      the point given is closer to the previous or the next
                      character in the model                    
                </param>
                <return>
                    the location within the model that best represents the
                      given point in the view >= 0                    
                </return>
            </javadoc>
            <method name="getNextVisualPositionFrom" type="int" line="53"/>
            <javadoc line="53">
                Provides a way to determine the next visually represented model
                  location that one might place a caret.  Some views may not be visible,
                  they might not be in the same order found in the model, or they just
                  might not allow access to some of the locations in the model.                
                <param>
                    t the text component for which this UI is installed                    
                </param>
                <param>
                    pos the position to convert >= 0                    
                </param>
                <param>
                    b the bias for the position                    
                </param>
                <param>
                    direction the direction from the current position that can
                      be thought of as the arrow keys typically found on a keyboard.
                      This may be SwingConstants.WEST, SwingConstants.EAST,
                      SwingConstants.NORTH, or SwingConstants.SOUTH                    
                </param>
                <param>
                    biasRet an array to contain the bias for the returned position                    
                </param>
                <return>
                    the location within the model that best represents the next
                      location visual position                    
                </return>
                <exception>
                    BadLocationException                    
                </exception>
                <exception>
                    IllegalArgumentException for an invalid direction                    
                </exception>
            </javadoc>
            <method name="damageRange" type="void" line="72"/>
            <javadoc line="72">
                Causes the portion of the view responsible for the
                  given part of the model to be repainted.                
                <param>
                    p0 the beginning of the range >= 0                    
                </param>
                <param>
                    p1 the end of the range >= p0                    
                </param>
            </javadoc>
            <method name="damageRange" type="void" line="79"/>
            <javadoc line="79">
                Causes the portion of the view responsible for the
                  given part of the model to be repainted.                
                <param>
                    p0 the beginning of the range >= 0                    
                </param>
                <param>
                    p1 the end of the range >= p0                    
                </param>
            </javadoc>
            <method name="getEditorKit" type="EditorKit" line="86"/>
            <javadoc line="86">
                Fetches the binding of services that set a policy
                  for the type of document being edited.  This contains
                  things like the commands available, stream readers and
                  writers, etc.                
                <return>
                    the editor kit binding                    
                </return>
            </javadoc>
            <method name="getRootView" type="View" line="94"/>
            <javadoc line="94">
                Fetches a View with the allocation of the associated
                  text component (i.e. the root of the hierarchy) that
                  can be traversed to determine how the model is being
                  represented spatially.                
                <return>
                    the view                    
                </return>
            </javadoc>
            <javadoc line="102">
                Returns the string to be used as the tooltip at the passed in location.                
                <see>
                    javax.swing.text.JTextComponent#getToolTipText                    
                </see>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="getToolTipText" type="String" line="107">
                <params>
                    <param name="t" type="JTextComponent"/>
                    <param name="pt" type="Point"/>
                </params>
            </method>
        </class>
    </source>