<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.synth">
        <import package="java.awt"/>
        <import package="java.beans"/>
        <import package="javax.swing"/>
        <import package="javax.swing.border"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.plaf.basic"/>
        <import package="javax.swing.table"/>
        <import package="sun.swing.table"/>
        <class name="SynthTableHeaderUI" line="10">
            <extends class="BasicTableHeaderUI"/>
            <implements interface="PropertyChangeListener"/>
            <implements interface="SynthUI"/>
            <javadoc line="10">
                Provides the Synth L&amp;F UI delegate for{@link javax.swing.table.JTableHeader}.                
                <author>
                    Alan Chung                    
                </author>
                <author>
                    Philip Milne                    
                </author>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="prevRenderer" type="TableCellRenderer" line="17"/>
            <declaration name="style" type="SynthStyle" line="18"/>
            <javadoc line="19">
                Creates a new UI object for the given component.                
                <param>
                    h component to create UI object for                    
                </param>
                <return>
                    the UI object                    
                </return>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="24">
                <params>
                    <param name="h" type="JComponent"/>
                </params>
            </method>
            <javadoc line="27">
                @inheritDoc                
            </javadoc>
            <method name="installDefaults" type="void" line="30">
                <scope line="32"/>
            </method>
            <method name="updateStyle" type="void" line="37">
                <params>
                    <param name="c" type="JTableHeader"/>
                </params>
                <declaration name="context" type="SynthContext" line="38"/>
                <declaration name="oldStyle" type="SynthStyle" line="39"/>
                <scope line="41">
                    <scope line="42"/>
                </scope>
            </method>
            <javadoc line="49">
                @inheritDoc                
            </javadoc>
            <method name="installListeners" type="void" line="52"/>
            <javadoc line="56">
                @inheritDoc                
            </javadoc>
            <method name="uninstallDefaults" type="void" line="59">
                <scope line="60"/>
                <declaration name="context" type="SynthContext" line="63"/>
            </method>
            <javadoc line="68">
                @inheritDoc                
            </javadoc>
            <method name="uninstallListeners" type="void" line="71"/>
            <javadoc line="75">
                Notifies this UI delegate to repaint the specified component.
                  This method paints the component background, then calls
                  the {@link #paint(SynthContext,Graphics)} method.
                  &lt;p&gt;In general, this method does not need to be overridden by subclasses.
                  All Look and Feel rendering code should reside in the {@code paint} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="update" type="void" line="85">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="86"/>
            </method>
            <javadoc line="92">
                Paints the specified component according to the Look and Feel.
                  &lt;p&gt;This method is not used by Synth Look and Feel.
                  Painting is handled by the {@link #paint(SynthContext,Graphics)} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="100">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="101"/>
            </method>
            <javadoc line="105">
                Paints the specified component.                
                <param>
                    context context for the component being painted                    
                </param>
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <see>
                    #update(Graphics,JComponent)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="111">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                </params>
            </method>
            <javadoc line="114">
                @inheritDoc                
            </javadoc>
            <method name="paintBorder" type="void" line="117">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <javadoc line="120">
                @inheritDoc                
            </javadoc>
            <method name="getContext" type="SynthContext" line="123">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="126">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="state" type="int"/>
                </params>
            </method>
            <javadoc line="129">
                @inheritDoc                
            </javadoc>
            <method name="rolloverColumnUpdated" type="void" line="132">
                <params>
                    <param name="oldColumn" type="int"/>
                    <param name="newColumn" type="int"/>
                </params>
            </method>
            <javadoc line="136">
                @inheritDoc                
            </javadoc>
            <method name="propertyChange" type="void" line="139">
                <params>
                    <param name="evt" type="PropertyChangeEvent"/>
                </params>
                <scope line="140"/>
            </method>
            <class name="HeaderRenderer" line="144">
                <extends class="DefaultTableCellHeaderRenderer"/>
                <method name="HeaderRenderer" type="constructor" line="145"/>
                <method name="getTableCellRendererComponent" type="Component" line="149">
                    <params>
                        <param name="table" type="JTable"/>
                        <param name="value" type="Object"/>
                        <param name="isSelected" type="boolean"/>
                        <param name="hasFocus" type="boolean"/>
                        <param name="row" type="int"/>
                        <param name="column" type="int"/>
                    </params>
                    <declaration name="hasRollover" type="boolean" line="150"/>
                    <scope line="151"/>
                    <scope line="154"/>
                    <declaration name="rs" type="RowSorter" line="157"/>
                    <declaration name="sortKeys" type="java.util.List&amp;lt;? extends RowSorter.SortKey&amp;gt;" line="158"/>
                    <scope line="159"/>
                    <scope line="174"/>
                </method>
                <method name="setBorder" type="void" line="180">
                    <params>
                        <param name="border" type="Border"/>
                    </params>
                    <scope line="181"/>
                </method>
            </class>
        </class>
    </source>