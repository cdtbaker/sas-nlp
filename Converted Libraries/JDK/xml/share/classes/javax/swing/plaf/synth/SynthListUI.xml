<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.synth">
        <import package="javax.swing"/>
        <import package="javax.swing.border"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.plaf.basic"/>
        <import package="java.awt"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <class name="SynthListUI" line="36">
            <extends class="BasicListUI"/>
            <implements interface="PropertyChangeListener"/>
            <implements interface="SynthUI"/>
            <javadoc line="36">
                Provides the Synth L&amp;F UI delegate for{@link javax.swing.JList}.                
                <author>
                    Scott Violet                    
                </author>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="style" type="SynthStyle" line="45"/>
            <declaration name="useListColors" type="boolean" line="46"/>
            <declaration name="useUIBorder" type="boolean" line="47"/>
            <javadoc line="49">
                Creates a new UI object for the given component.                
                <param>
                    list component to create UI object for                    
                </param>
                <return>
                    the UI object                    
                </return>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="55">
                <params>
                    <param name="list" type="JComponent"/>
                </params>
            </method>
            <javadoc line="59">
                Notifies this UI delegate to repaint the specified component.
                  This method paints the component background, then calls
                  the {@link #paint} method.
                  &lt;p&gt;In general, this method does not need to be overridden by subclasses.
                  All Look and Feel rendering code should reside in the {@code paint} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint                    
                </see>
            </javadoc>
            <method name="update" type="void" line="72">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="73"/>
            </method>
            <javadoc line="82">
                @inheritDoc                
            </javadoc>
            <method name="paintBorder" type="void" line="87">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <javadoc line="91">
                @inheritDoc                
            </javadoc>
            <method name="installListeners" type="void" line="95"/>
            <javadoc line="100">
                @inheritDoc                
            </javadoc>
            <method name="propertyChange" type="void" line="104">
                <params>
                    <param name="e" type="PropertyChangeEvent"/>
                </params>
                <scope line="105"/>
            </method>
            <javadoc line="110">
                @inheritDoc                
            </javadoc>
            <method name="uninstallListeners" type="void" line="114"/>
            <javadoc line="119">
                @inheritDoc                
            </javadoc>
            <method name="installDefaults" type="void" line="123">
                <scope line="125"/>
            </method>
            <method name="updateStyle" type="void" line="131">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="132"/>
                <declaration name="oldStyle" type="SynthStyle" line="133"/>
                <scope line="137">
                    <declaration name="sbg" type="Color" line="139"/>
                    <scope line="140"/>
                    <declaration name="sfg" type="Color" line="145"/>
                    <scope line="146"/>
                    <declaration name="height" type="int" line="156"/>
                    <scope line="157"/>
                    <scope line="160"/>
                </scope>
            </method>
            <javadoc line="168">
                @inheritDoc                
            </javadoc>
            <method name="uninstallDefaults" type="void" line="172">
                <declaration name="context" type="SynthContext" line="175"/>
            </method>
            <javadoc line="182">
                @inheritDoc                
            </javadoc>
            <method name="getContext" type="SynthContext" line="186">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="190">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="state" type="int"/>
                </params>
            </method>
            <method name="getComponentState" type="int" line="195">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <class name="SynthListCellRenderer" line="200">
                <extends class="DefaultListCellRenderer.UIResource"/>
                <method name="getName" type="String" line="201"/>
                <method name="setBorder" type="void" line="205">
                    <params>
                        <param name="b" type="Border"/>
                    </params>
                    <scope line="206"/>
                </method>
                <method name="getListCellRendererComponent" type="Component" line="212">
                    <params>
                        <param name="list" type="JList"/>
                        <param name="value" type="Object"/>
                        <param name="index" type="int"/>
                        <param name="isSelected" type="boolean"/>
                        <param name="cellHasFocus" type="boolean"/>
                    </params>
                    <scope line="213"/>
                    <scope line="218"/>
                </method>
                <method name="paint" type="void" line="227">
                    <params>
                        <param name="g" type="Graphics"/>
                    </params>
                </method>
            </class>
        </class>
    </source>