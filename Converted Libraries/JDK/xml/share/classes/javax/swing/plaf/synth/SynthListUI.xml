<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.synth">
        <import package="javax.swing"/>
        <import package="javax.swing.border"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.plaf.basic"/>
        <import package="java.awt"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <class name="SynthListUI" line="9">
            <extends class="BasicListUI"/>
            <implements interface="PropertyChangeListener"/>
            <implements interface="SynthUI"/>
            <javadoc line="9">
                Provides the Synth L&amp;F UI delegate for{@link javax.swing.JList}.                
                <author>
                    Scott Violet                    
                </author>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="style" type="SynthStyle" line="15"/>
            <declaration name="useListColors" type="boolean" line="16"/>
            <declaration name="useUIBorder" type="boolean" line="17"/>
            <javadoc line="18">
                Creates a new UI object for the given component.                
                <param>
                    list component to create UI object for                    
                </param>
                <return>
                    the UI object                    
                </return>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="23">
                <params>
                    <param name="list" type="JComponent"/>
                </params>
            </method>
            <javadoc line="26">
                Notifies this UI delegate to repaint the specified component.
                  This method paints the component background, then calls
                  the {@link #paint} method.
                  &lt;p&gt;In general, this method does not need to be overridden by subclasses.
                  All Look and Feel rendering code should reside in the {@code paint} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint                    
                </see>
            </javadoc>
            <method name="update" type="void" line="36">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="37"/>
            </method>
            <javadoc line="43">
                @inheritDoc                
            </javadoc>
            <method name="paintBorder" type="void" line="46">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <javadoc line="49">
                @inheritDoc                
            </javadoc>
            <method name="installListeners" type="void" line="52"/>
            <javadoc line="56">
                @inheritDoc                
            </javadoc>
            <method name="propertyChange" type="void" line="59">
                <params>
                    <param name="e" type="PropertyChangeEvent"/>
                </params>
                <scope line="60"/>
            </method>
            <javadoc line="64">
                @inheritDoc                
            </javadoc>
            <method name="uninstallListeners" type="void" line="67"/>
            <javadoc line="71">
                @inheritDoc                
            </javadoc>
            <method name="installDefaults" type="void" line="74">
                <scope line="75"/>
            </method>
            <method name="updateStyle" type="void" line="80">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="81"/>
                <declaration name="oldStyle" type="SynthStyle" line="82"/>
                <scope line="84">
                    <declaration name="sbg" type="Color" line="86"/>
                    <scope line="87"/>
                    <declaration name="sfg" type="Color" line="90"/>
                    <scope line="91"/>
                    <declaration name="height" type="int" line="96"/>
                    <scope line="97"/>
                    <scope line="100"/>
                </scope>
            </method>
            <javadoc line="107">
                @inheritDoc                
            </javadoc>
            <method name="uninstallDefaults" type="void" line="110">
                <declaration name="context" type="SynthContext" line="112"/>
            </method>
            <javadoc line="117">
                @inheritDoc                
            </javadoc>
            <method name="getContext" type="SynthContext" line="120">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="123">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="state" type="int"/>
                </params>
            </method>
            <method name="getComponentState" type="int" line="126">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <class name="SynthListCellRenderer" line="129">
                <extends class="DefaultListCellRenderer.UIResource"/>
                <method name="getName" type="String" line="130"/>
                <method name="setBorder" type="void" line="133">
                    <params>
                        <param name="b" type="Border"/>
                    </params>
                    <scope line="134"/>
                </method>
                <method name="getListCellRendererComponent" type="Component" line="138">
                    <params>
                        <param name="list" type="JList"/>
                        <param name="value" type="Object"/>
                        <param name="index" type="int"/>
                        <param name="isSelected" type="boolean"/>
                        <param name="cellHasFocus" type="boolean"/>
                    </params>
                    <scope line="139"/>
                    <scope line="142"/>
                </method>
                <method name="paint" type="void" line="148">
                    <params>
                        <param name="g" type="Graphics"/>
                    </params>
                </method>
            </class>
        </class>
    </source>