<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.synth">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.beans"/>
        <import package="java.util"/>
        <import package="javax.swing"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.plaf.basic"/>
        <class name="SynthSplitPaneUI" line="9">
            <extends class="BasicSplitPaneUI"/>
            <implements interface="PropertyChangeListener"/>
            <implements interface="SynthUI"/>
            <javadoc line="9">
                Provides the Synth L&amp;F UI delegate for{@link javax.swing.JSplitPane}.                
                <author>
                    Scott Violet                    
                </author>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="managingFocusForwardTraversalKeys" type="Set&amp;lt;KeyStroke&amp;gt;" line="15"/>
            <javadoc line="15">
                Keys to use for forward focus traversal when the JComponent is
                  managing focus.                
            </javadoc>
            <declaration name="managingFocusBackwardTraversalKeys" type="Set&amp;lt;KeyStroke&amp;gt;" line="20"/>
            <javadoc line="20">
                Keys to use for backward focus traversal when the JComponent is
                  managing focus.                
            </javadoc>
            <declaration name="style" type="SynthStyle" line="25"/>
            <javadoc line="25">
                Style for the JSplitPane.                
            </javadoc>
            <declaration name="dividerStyle" type="SynthStyle" line="29"/>
            <javadoc line="29">
                Style for the divider.                
            </javadoc>
            <javadoc line="33">
                Creates a new SynthSplitPaneUI instance                
                <param>
                    x component to create UI object for                    
                </param>
                <return>
                    the UI object                    
                </return>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="38">
                <params>
                    <param name="x" type="JComponent"/>
                </params>
            </method>
            <javadoc line="41">
                Installs the UI defaults.                
            </javadoc>
            <method name="installDefaults" type="void" line="44">
                <scope line="49"/>
                <scope line="52"/>
                <scope line="55"/>
                <scope line="60"/>
            </method>
            <method name="updateStyle" type="void" line="66">
                <params>
                    <param name="splitPane" type="JSplitPane"/>
                </params>
                <declaration name="context" type="SynthContext" line="67"/>
                <declaration name="oldDividerStyle" type="SynthStyle" line="68"/>
                <declaration name="oldStyle" type="SynthStyle" line="72"/>
                <scope line="74">
                    <declaration name="value" type="Object" line="75"/>
                    <scope line="76"/>
                    <scope line="81"/>
                    <scope line="84"/>
                    <scope line="88"/>
                </scope>
                <scope line="93">
                    <scope line="94"/>
                </scope>
            </method>
            <javadoc line="103">
                Installs the event listeners for the UI.                
            </javadoc>
            <method name="installListeners" type="void" line="106"/>
            <javadoc line="110">
                Uninstalls the UI defaults.                
            </javadoc>
            <method name="uninstallDefaults" type="void" line="113">
                <declaration name="context" type="SynthContext" line="114"/>
            </method>
            <javadoc line="124">
                Uninstalls the event listeners from the UI.                
            </javadoc>
            <method name="uninstallListeners" type="void" line="127"/>
            <javadoc line="131">
                @inheritDoc                
            </javadoc>
            <method name="getContext" type="SynthContext" line="134">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="137">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="state" type="int"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="140">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="region" type="Region"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="143">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="region" type="Region"/>
                    <param name="state" type="int"/>
                </params>
                <scope line="144"/>
            </method>
            <method name="getComponentState" type="int" line="149">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="subregion" type="Region"/>
                </params>
                <declaration name="state" type="int" line="150"/>
                <scope line="151"/>
            </method>
            <javadoc line="156">
                @inheritDoc                
            </javadoc>
            <method name="propertyChange" type="void" line="159">
                <params>
                    <param name="e" type="PropertyChangeEvent"/>
                </params>
                <scope line="160"/>
            </method>
            <javadoc line="164">
                Creates the default divider.                
            </javadoc>
            <method name="createDefaultDivider" type="BasicSplitPaneDivider" line="167">
                <declaration name="divider" type="SynthSplitPaneDivider" line="168"/>
            </method>
            <javadoc line="172">
                @inheritDoc                
            </javadoc>
            <method name="createDefaultNonContinuousLayoutDivider" type="Component" line="175">
                <anonymous_class line="176">
                    <method name="paint" type="void" line="177">
                        <params>
                            <param name="g" type="Graphics"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="183">
                Notifies this UI delegate to repaint the specified component.
                  This method paints the component background, then calls
                  the {@link #paint(SynthContext,Graphics)} method.
                  &lt;p&gt;In general, this method does not need to be overridden by subclasses.
                  All Look and Feel rendering code should reside in the {@code paint} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="update" type="void" line="193">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="194"/>
            </method>
            <javadoc line="200">
                Paints the specified component according to the Look and Feel.
                  &lt;p&gt;This method is not used by Synth Look and Feel.
                  Painting is handled by the {@link #paint(SynthContext,Graphics)} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="208">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="209"/>
            </method>
            <javadoc line="213">
                Paints the specified component. This implementation does nothing.                
                <param>
                    context context for the component being painted                    
                </param>
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <see>
                    #update(Graphics,JComponent)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="219">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                </params>
            </method>
            <javadoc line="222">
                @inheritDoc                
            </javadoc>
            <method name="paintBorder" type="void" line="225">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <method name="paintDragDivider" type="void" line="228">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="context" type="SynthContext" line="229"/>
                <declaration name="oldClip" type="Shape" line="231"/>
            </method>
            <javadoc line="237">
                @inheritDoc                
            </javadoc>
            <method name="finishedPaintingChildren" type="void" line="240">
                <params>
                    <param name="jc" type="JSplitPane"/>
                    <param name="g" type="Graphics"/>
                </params>
                <scope line="241">
                    <scope line="242"/>
                    <scope line="245"/>
                </scope>
            </method>
        </class>
    </source>