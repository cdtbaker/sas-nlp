<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.synth">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.beans"/>
        <import package="java.util"/>
        <import package="javax.swing"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.plaf.basic"/>
        <class name="SynthSplitPaneUI" line="38">
            <extends class="BasicSplitPaneUI"/>
            <implements interface="PropertyChangeListener"/>
            <implements interface="SynthUI"/>
            <javadoc line="38">
                Provides the Synth L&amp;F UI delegate for{@link javax.swing.JSplitPane}.                
                <author>
                    Scott Violet                    
                </author>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="managingFocusForwardTraversalKeys" type="Set&lt;KeyStroke&gt;" line="47"/>
            <javadoc line="47">
                Keys to use for forward focus traversal when the JComponent is
                  managing focus.                
            </javadoc>
            <declaration name="managingFocusBackwardTraversalKeys" type="Set&lt;KeyStroke&gt;" line="53"/>
            <javadoc line="53">
                Keys to use for backward focus traversal when the JComponent is
                  managing focus.                
            </javadoc>
            <declaration name="style" type="SynthStyle" line="59"/>
            <javadoc line="59">
                Style for the JSplitPane.                
            </javadoc>
            <declaration name="dividerStyle" type="SynthStyle" line="63"/>
            <javadoc line="63">
                Style for the divider.                
            </javadoc>
            <javadoc line="69">
                Creates a new SynthSplitPaneUI instance                
                <param>
                    x component to create UI object for                    
                </param>
                <return>
                    the UI object                    
                </return>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="75">
                <params>
                    <param name="x" type="JComponent"/>
                </params>
            </method>
            <javadoc line="79">
                Installs the UI defaults.                
            </javadoc>
            <method name="installDefaults" type="void" line="83">
                <comment line="92">
                    Install the nonContinuousLayoutDivider here to avoid having to                    
                </comment>
                <comment line="102">
                    focus forward traversal key                    
                </comment>
                <comment line="110">
                    focus backward traversal key                    
                </comment>
                <scope line="93"/>
                <scope line="97"/>
                <scope line="102"/>
                <scope line="110"/>
            </method>
            <method name="updateStyle" type="void" line="119">
                <params>
                    <param name="splitPane" type="JSplitPane"/>
                </params>
                <comment line="154">
                    Only way to force BasicSplitPaneDivider to reread the
                     necessary properties.                    
                </comment>
                <declaration name="context" type="SynthContext" line="120"/>
                <declaration name="oldDividerStyle" type="SynthStyle" line="122"/>
                <declaration name="oldStyle" type="SynthStyle" line="127"/>
                <scope line="131">
                    <declaration name="value" type="Object" line="132"/>
                    <scope line="133"/>
                    <scope line="139"/>
                    <scope line="143"/>
                    <scope line="147"/>
                </scope>
                <scope line="152">
                    <scope line="155"/>
                </scope>
            </method>
            <javadoc line="165">
                Installs the event listeners for the UI.                
            </javadoc>
            <method name="installListeners" type="void" line="169"/>
            <javadoc line="174">
                Uninstalls the UI defaults.                
            </javadoc>
            <method name="uninstallDefaults" type="void" line="178">
                <declaration name="context" type="SynthContext" line="179"/>
            </method>
            <javadoc line="194">
                Uninstalls the event listeners from the UI.                
            </javadoc>
            <method name="uninstallListeners" type="void" line="198"/>
            <javadoc line="203">
                @inheritDoc                
            </javadoc>
            <method name="getContext" type="SynthContext" line="207">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="211">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="state" type="int"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="216">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="region" type="Region"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="220">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="region" type="Region"/>
                    <param name="state" type="int"/>
                </params>
                <scope line="221"/>
            </method>
            <method name="getComponentState" type="int" line="229">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="subregion" type="Region"/>
                </params>
                <declaration name="state" type="int" line="230"/>
                <scope line="232"/>
            </method>
            <javadoc line="238">
                @inheritDoc                
            </javadoc>
            <method name="propertyChange" type="void" line="242">
                <params>
                    <param name="e" type="PropertyChangeEvent"/>
                </params>
                <scope line="243"/>
            </method>
            <javadoc line="248">
                Creates the default divider.                
            </javadoc>
            <method name="createDefaultDivider" type="BasicSplitPaneDivider" line="252">
                <declaration name="divider" type="SynthSplitPaneDivider" line="253"/>
            </method>
            <javadoc line="259">
                @inheritDoc                
            </javadoc>
            <method name="createDefaultNonContinuousLayoutDivider" type="Component" line="263">
                <anonymous_class line="264">
                    <method name="paint" type="void" line="265">
                        <params>
                            <param name="g" type="Graphics"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="271">
                Notifies this UI delegate to repaint the specified component.
                  This method paints the component background, then calls
                  the {@link #paint(SynthContext,Graphics)} method.
                  &lt;p&gt;In general, this method does not need to be overridden by subclasses.
                  All Look and Feel rendering code should reside in the {@code paint} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="update" type="void" line="284">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="285"/>
            </method>
            <javadoc line="294">
                Paints the specified component according to the Look and Feel.
                  &lt;p&gt;This method is not used by Synth Look and Feel.
                  Painting is handled by the {@link #paint(SynthContext,Graphics)} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="304">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="305"/>
            </method>
            <javadoc line="311">
                Paints the specified component. This implementation does nothing.                
                <param>
                    context context for the component being painted                    
                </param>
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <see>
                    #update(Graphics,JComponent)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="318">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                </params>
                <comment line="320">
                    This is done to update package private variables in
                     BasicSplitPaneUI                    
                </comment>
            </method>
            <javadoc line="324">
                @inheritDoc                
            </javadoc>
            <method name="paintBorder" type="void" line="329">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <method name="paintDragDivider" type="void" line="333">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="context" type="SynthContext" line="334"/>
                <declaration name="oldClip" type="Shape" line="337"/>
            </method>
            <javadoc line="345">
                @inheritDoc                
            </javadoc>
            <method name="finishedPaintingChildren" type="void" line="349">
                <params>
                    <param name="jc" type="JSplitPane"/>
                    <param name="g" type="Graphics"/>
                </params>
                <scope line="351">
                    <scope line="352"/>
                    <scope line="355"/>
                </scope>
            </method>
        </class>
    </source>