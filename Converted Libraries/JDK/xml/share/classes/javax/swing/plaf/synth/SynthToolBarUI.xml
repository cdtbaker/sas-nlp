<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.synth">
        <import package="java.awt.Component"/>
        <import package="java.awt.Container"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Insets"/>
        <import package="java.awt.LayoutManager"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="javax.swing.Box"/>
        <import package="javax.swing.Icon"/>
        <import package="javax.swing.JComponent"/>
        <import package="javax.swing.JSeparator"/>
        <import package="javax.swing.JToolBar"/>
        <import package="javax.swing.plaf.ComponentUI"/>
        <import package="javax.swing.plaf.basic.BasicToolBarUI"/>
        <import package="sun.swing.plaf.synth.SynthIcon"/>
        <class name="SynthToolBarUI" line="19">
            <extends class="BasicToolBarUI"/>
            <implements interface="PropertyChangeListener"/>
            <implements interface="SynthUI"/>
            <javadoc line="19">
                Provides the Synth L&amp;F UI delegate for{@link javax.swing.JToolBar}.                
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="handleIcon" type="Icon" line="24"/>
            <declaration name="contentRect" type="Rectangle" line="25"/>
            <declaration name="style" type="SynthStyle" line="26"/>
            <declaration name="contentStyle" type="SynthStyle" line="27"/>
            <declaration name="dragWindowStyle" type="SynthStyle" line="28"/>
            <javadoc line="29">
                Creates a new UI object for the given component.                
                <param>
                    c component to create UI object for                    
                </param>
                <return>
                    the UI object                    
                </return>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="34">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="37">
                @inheritDoc                
            </javadoc>
            <method name="installDefaults" type="void" line="40"/>
            <javadoc line="44">
                @inheritDoc                
            </javadoc>
            <method name="installListeners" type="void" line="47"/>
            <javadoc line="51">
                @inheritDoc                
            </javadoc>
            <method name="uninstallListeners" type="void" line="54"/>
            <method name="updateStyle" type="void" line="58">
                <params>
                    <param name="c" type="JToolBar"/>
                </params>
                <declaration name="context" type="SynthContext" line="59"/>
                <declaration name="oldStyle" type="SynthStyle" line="66"/>
                <scope line="68">
                    <scope line="70"/>
                </scope>
            </method>
            <javadoc line="77">
                @inheritDoc                
            </javadoc>
            <method name="uninstallDefaults" type="void" line="80">
                <declaration name="context" type="SynthContext" line="81"/>
            </method>
            <javadoc line="96">
                @inheritDoc                
            </javadoc>
            <method name="installComponents" type="void" line="99"/>
            <javadoc line="101">
                @inheritDoc                
            </javadoc>
            <method name="uninstallComponents" type="void" line="104"/>
            <javadoc line="106">
                Creates a {@code LayoutManager} to use with the toolbar.                
                <return>
                    a {@code LayoutManager} instance                    
                </return>
            </javadoc>
            <method name="createLayout" type="LayoutManager" line="110"/>
            <javadoc line="113">
                @inheritDoc                
            </javadoc>
            <method name="getContext" type="SynthContext" line="116">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="119">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="state" type="int"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="122">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="region" type="Region"/>
                    <param name="style" type="SynthStyle"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="125">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="region" type="Region"/>
                    <param name="style" type="SynthStyle"/>
                    <param name="state" type="int"/>
                </params>
            </method>
            <method name="getComponentState" type="int" line="128">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="region" type="Region"/>
                </params>
            </method>
            <javadoc line="131">
                Notifies this UI delegate to repaint the specified component.
                  This method paints the component background, then calls
                  the {@link #paint(SynthContext,Graphics)} method.
                  &lt;p&gt;In general, this method does not need to be overridden by subclasses.
                  All Look and Feel rendering code should reside in the {@code paint} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="update" type="void" line="141">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="142"/>
            </method>
            <javadoc line="148">
                Paints the specified component according to the Look and Feel.
                  &lt;p&gt;This method is not used by Synth Look and Feel.
                  Painting is handled by the {@link #paint(SynthContext,Graphics)} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="156">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="157"/>
            </method>
            <javadoc line="161">
                @inheritDoc                
            </javadoc>
            <method name="paintBorder" type="void" line="164">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <javadoc line="167">
                This implementation does nothing, because the {@code rollover}property of the {@code JToolBar} class is not used
                  in the Synth Look and Feel.                
            </javadoc>
            <method name="setBorderToNonRollover" type="void" line="171">
                <params>
                    <param name="c" type="Component"/>
                </params>
            </method>
            <javadoc line="173">
                This implementation does nothing, because the {@code rollover}property of the {@code JToolBar} class is not used
                  in the Synth Look and Feel.                
            </javadoc>
            <method name="setBorderToRollover" type="void" line="177">
                <params>
                    <param name="c" type="Component"/>
                </params>
            </method>
            <javadoc line="179">
                This implementation does nothing, because the {@code rollover}property of the {@code JToolBar} class is not used
                  in the Synth Look and Feel.                
            </javadoc>
            <method name="setBorderToNormal" type="void" line="183">
                <params>
                    <param name="c" type="Component"/>
                </params>
            </method>
            <javadoc line="185">
                Paints the toolbar.                
                <param>
                    context context for the component being painted                    
                </param>
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <see>
                    #update(Graphics,JComponent)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="191">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                </params>
                <scope line="192">
                    <declaration name="startX" type="int" line="193"/>
                </scope>
                <declaration name="subcontext" type="SynthContext" line="196"/>
            </method>
            <javadoc line="200">
                Paints the toolbar content.                
                <param>
                    context context for the component being painted                    
                </param>
                <param>
                    g {@code Graphics} object used for painting                    
                </param>
                <param>
                    bounds bounding box for the toolbar                    
                </param>
            </javadoc>
            <method name="paintContent" type="void" line="206">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="bounds" type="Rectangle"/>
                </params>
            </method>
            <javadoc line="211">
                @inheritDoc                
            </javadoc>
            <method name="paintDragWindow" type="void" line="214">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="w" type="int" line="215"/>
                <declaration name="h" type="int" line="216"/>
                <declaration name="context" type="SynthContext" line="217"/>
            </method>
            <javadoc line="223">
                @inheritDoc                
            </javadoc>
            <method name="propertyChange" type="void" line="226">
                <params>
                    <param name="e" type="PropertyChangeEvent"/>
                </params>
                <scope line="227"/>
            </method>
            <class name="SynthToolBarLayoutManager" line="231">
                <implements interface="LayoutManager"/>
                <method name="addLayoutComponent" type="void" line="232">
                    <params>
                        <param name="name" type="String"/>
                        <param name="comp" type="Component"/>
                    </params>
                </method>
                <method name="removeLayoutComponent" type="void" line="234">
                    <params>
                        <param name="comp" type="Component"/>
                    </params>
                </method>
                <method name="minimumLayoutSize" type="Dimension" line="236">
                    <params>
                        <param name="parent" type="Container"/>
                    </params>
                    <declaration name="tb" type="JToolBar" line="237"/>
                    <declaration name="insets" type="Insets" line="238"/>
                    <declaration name="dim" type="Dimension" line="239"/>
                    <declaration name="context" type="SynthContext" line="240"/>
                    <scope line="241">
                        <declaration name="compDim" type="Dimension" line="243"/>
                        <scope line="244">
                            <declaration name="component" type="Component" line="245"/>
                            <scope line="246"/>
                        </scope>
                    </scope>
                    <scope line="253">
                        <declaration name="compDim" type="Dimension" line="255"/>
                        <scope line="256">
                            <declaration name="component" type="Component" line="257"/>
                            <scope line="258"/>
                        </scope>
                    </scope>
                </method>
                <method name="preferredLayoutSize" type="Dimension" line="270">
                    <params>
                        <param name="parent" type="Container"/>
                    </params>
                    <declaration name="tb" type="JToolBar" line="271"/>
                    <declaration name="insets" type="Insets" line="272"/>
                    <declaration name="dim" type="Dimension" line="273"/>
                    <declaration name="context" type="SynthContext" line="274"/>
                    <scope line="275">
                        <declaration name="compDim" type="Dimension" line="277"/>
                        <scope line="278">
                            <declaration name="component" type="Component" line="279"/>
                            <scope line="280"/>
                        </scope>
                    </scope>
                    <scope line="287">
                        <declaration name="compDim" type="Dimension" line="289"/>
                        <scope line="290">
                            <declaration name="component" type="Component" line="291"/>
                            <scope line="292"/>
                        </scope>
                    </scope>
                </method>
                <method name="layoutContainer" type="void" line="304">
                    <params>
                        <param name="parent" type="Container"/>
                    </params>
                    <declaration name="tb" type="JToolBar" line="305"/>
                    <declaration name="insets" type="Insets" line="306"/>
                    <declaration name="ltr" type="boolean" line="307"/>
                    <declaration name="context" type="SynthContext" line="308"/>
                    <declaration name="c" type="Component" line="309"/>
                    <declaration name="d" type="Dimension" line="310"/>
                    <declaration name="glueCount" type="int" line="311"/>
                    <scope line="312"/>
                    <scope line="315">
                        <declaration name="handleWidth" type="int" line="316"/>
                        <declaration name="x" type="int" line="321"/>
                        <declaration name="baseY" type="int" line="322"/>
                        <declaration name="baseH" type="int" line="323"/>
                        <declaration name="extraSpacePerGlue" type="int" line="324"/>
                        <scope line="325">
                            <declaration name="minWidth" type="int" line="326"/>
                        </scope>
                        <scope line="330">
                            <scope line="332">
                                <declaration name="y" type="int" line="334"/>
                                <scope line="335"/>
                                <scope line="339"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="349">
                        <declaration name="handleHeight" type="int" line="350"/>
                        <declaration name="baseX" type="int" line="355"/>
                        <declaration name="baseW" type="int" line="356"/>
                        <declaration name="y" type="int" line="357"/>
                        <declaration name="extraSpacePerGlue" type="int" line="358"/>
                        <scope line="359">
                            <declaration name="minHeight" type="int" line="360"/>
                        </scope>
                        <scope line="364">
                            <scope line="366">
                                <declaration name="x" type="int" line="368"/>
                                <scope line="369"/>
                                <scope line="373"/>
                            </scope>
                        </scope>
                    </scope>
                </method>
                <method name="isGlue" type="boolean" line="385">
                    <params>
                        <param name="c" type="Component"/>
                    </params>
                    <scope line="386">
                        <declaration name="f" type="Box.Filler" line="387"/>
                        <declaration name="min" type="Dimension" line="388"/>
                        <declaration name="pref" type="Dimension" line="389"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>