<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.synth">
        <import package="java.awt"/>
        <import package="java.beans"/>
        <import package="javax.swing"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.plaf.basic"/>
        <class name="SynthScrollBarUI" line="7">
            <extends class="BasicScrollBarUI"/>
            <implements interface="PropertyChangeListener"/>
            <implements interface="SynthUI"/>
            <javadoc line="7">
                Provides the Synth L&amp;F UI delegate for{@link javax.swing.JScrollBar}.                
                <author>
                    Scott Violet                    
                </author>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="style" type="SynthStyle" line="13"/>
            <declaration name="thumbStyle" type="SynthStyle" line="14"/>
            <declaration name="trackStyle" type="SynthStyle" line="15"/>
            <declaration name="validMinimumThumbSize" type="boolean" line="16"/>
            <method name="createUI" type="ComponentUI" line="17">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="20">
                @inheritDoc                
            </javadoc>
            <method name="installDefaults" type="void" line="23">
                <scope line="25"/>
            </method>
            <javadoc line="31">
                @inheritDoc                
            </javadoc>
            <method name="configureScrollBarColors" type="void" line="34"/>
            <method name="updateStyle" type="void" line="36">
                <params>
                    <param name="c" type="JScrollBar"/>
                </params>
                <declaration name="oldStyle" type="SynthStyle" line="37"/>
                <declaration name="context" type="SynthContext" line="38"/>
                <scope line="40">
                    <scope line="43"/>
                    <scope line="47"/>
                    <scope line="51"/>
                    <declaration name="scaleKey" type="String" line="56"/>
                    <scope line="57">
                        <scope line="58"/>
                        <scope line="63"/>
                        <scope line="68"/>
                    </scope>
                    <scope line="74"/>
                </scope>
            </method>
            <javadoc line="87">
                @inheritDoc                
            </javadoc>
            <method name="installListeners" type="void" line="90"/>
            <javadoc line="94">
                @inheritDoc                
            </javadoc>
            <method name="uninstallListeners" type="void" line="97"/>
            <javadoc line="101">
                @inheritDoc                
            </javadoc>
            <method name="uninstallDefaults" type="void" line="104">
                <declaration name="context" type="SynthContext" line="105"/>
            </method>
            <javadoc line="119">
                @inheritDoc                
            </javadoc>
            <method name="getContext" type="SynthContext" line="122">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="125">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="state" type="int"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="128">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="region" type="Region"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="131">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="region" type="Region"/>
                    <param name="state" type="int"/>
                </params>
                <declaration name="style" type="SynthStyle" line="132"/>
                <scope line="133"/>
            </method>
            <method name="getComponentState" type="int" line="138">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="region" type="Region"/>
                </params>
                <scope line="139"/>
            </method>
            <javadoc line="144">
                @inheritDoc                
            </javadoc>
            <method name="getSupportsAbsolutePositioning" type="boolean" line="147">
                <declaration name="context" type="SynthContext" line="148"/>
                <declaration name="value" type="boolean" line="149"/>
            </method>
            <javadoc line="153">
                Notifies this UI delegate to repaint the specified component.
                  This method paints the component background, then calls
                  the {@link #paint(SynthContext,Graphics)} method.
                  &lt;p&gt;In general, this method does not need to be overridden by subclasses.
                  All Look and Feel rendering code should reside in the {@code paint} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="update" type="void" line="163">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="164"/>
            </method>
            <javadoc line="170">
                Paints the specified component according to the Look and Feel.
                  &lt;p&gt;This method is not used by Synth Look and Feel.
                  Painting is handled by the {@link #paint(SynthContext,Graphics)} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="178">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="179"/>
            </method>
            <javadoc line="183">
                Paints the specified component.                
                <param>
                    context context for the component being painted                    
                </param>
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <see>
                    #update(Graphics,JComponent)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="189">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="subcontext" type="SynthContext" line="190"/>
            </method>
            <javadoc line="197">
                @inheritDoc                
            </javadoc>
            <method name="paintBorder" type="void" line="200">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <javadoc line="203">
                Paints the scrollbar track.                
                <param>
                    context context for the component being painted                    
                </param>
                <param>
                    g {@code Graphics} object used for painting                    
                </param>
                <param>
                    trackBounds bounding box for the track                    
                </param>
            </javadoc>
            <method name="paintTrack" type="void" line="209">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="trackBounds" type="Rectangle"/>
                </params>
            </method>
            <javadoc line="214">
                Paints the scrollbar thumb.                
                <param>
                    context context for the component being painted                    
                </param>
                <param>
                    g {@code Graphics} object used for painting                    
                </param>
                <param>
                    thumbBounds bounding box for the thumb                    
                </param>
            </javadoc>
            <method name="paintThumb" type="void" line="220">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="thumbBounds" type="Rectangle"/>
                </params>
                <declaration name="orientation" type="int" line="222"/>
            </method>
            <javadoc line="226">
                A vertical scrollbar&apos;s preferred width is the maximum of
                  preferred widths of the (non &lt;code&gt;null&lt;/code&gt;)
                  increment/decrement buttons,
                  and the minimum width of the thumb. The preferred height is the
                  sum of the preferred heights of the same parts.  The basis for
                  the preferred size of a horizontal scrollbar is similar.
                  &lt;p&gt;
                  The &lt;code&gt;preferredSize&lt;/code&gt; is only computed once, subsequent
                  calls to this method just return a cached size.                
                <param>
                    c the &lt;code&gt;JScrollBar&lt;/code&gt; that&apos;s delegating this method to us                    
                </param>
                <return>
                    the preferred size of a Basic JScrollBar                    
                </return>
                <see>
                    #getMaximumSize                    
                </see>
                <see>
                    #getMinimumSize                    
                </see>
            </javadoc>
            <method name="getPreferredSize" type="Dimension" line="241">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="insets" type="Insets" line="242"/>
            </method>
            <javadoc line="245">
                @inheritDoc                
            </javadoc>
            <method name="getMinimumThumbSize" type="Dimension" line="248">
                <scope line="249">
                    <scope line="250"/>
                    <scope line="254"/>
                </scope>
            </method>
            <javadoc line="261">
                @inheritDoc                
            </javadoc>
            <method name="createDecreaseButton" type="JButton" line="264">
                <params>
                    <param name="orientation" type="int"/>
                </params>
                <anonymous_class line="265">
                    <method name="contains" type="boolean" line="266">
                        <params>
                            <param name="x" type="int"/>
                            <param name="y" type="int"/>
                        </params>
                        <scope line="267">
                            <declaration name="width" type="int" line="268"/>
                            <declaration name="height" type="int" line="269"/>
                            <scope line="270"/>
                            <scope line="273"/>
                        </scope>
                    </method>
                </anonymous_class>
                <declaration name="synthArrowButton" type="SynthArrowButton" line="265"/>
            </method>
            <javadoc line="285">
                @inheritDoc                
            </javadoc>
            <method name="createIncreaseButton" type="JButton" line="288">
                <params>
                    <param name="orientation" type="int"/>
                </params>
                <anonymous_class line="289">
                    <method name="contains" type="boolean" line="290">
                        <params>
                            <param name="x" type="int"/>
                            <param name="y" type="int"/>
                        </params>
                        <scope line="291">
                            <declaration name="width" type="int" line="292"/>
                            <declaration name="height" type="int" line="293"/>
                            <scope line="294"/>
                            <scope line="298"/>
                        </scope>
                    </method>
                </anonymous_class>
                <declaration name="synthArrowButton" type="SynthArrowButton" line="289"/>
            </method>
            <javadoc line="311">
                @inheritDoc                
            </javadoc>
            <method name="setThumbRollover" type="void" line="314">
                <params>
                    <param name="active" type="boolean"/>
                </params>
                <scope line="315"/>
            </method>
            <method name="updateButtonDirections" type="void" line="320">
                <declaration name="orient" type="int" line="321"/>
                <scope line="322"/>
                <scope line="326"/>
            </method>
            <method name="propertyChange" type="void" line="331">
                <params>
                    <param name="e" type="PropertyChangeEvent"/>
                </params>
                <declaration name="propertyName" type="String" line="332"/>
                <scope line="333"/>
                <scope line="336"/>
                <scope line="339"/>
            </method>
        </class>
    </source>