<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.nimbus">
        <import package="javax.swing.UIManager"/>
        <import package="java.awt.Color"/>
        <import package="java.beans.PropertyChangeSupport"/>
        <import package="java.beans.PropertyChangeListener"/>
        <class name="DerivedColor" line="32">
            <extends class="Color"/>
            <javadoc line="32">
                DerivedColor - A color implementation that is derived from a UIManager
                  defaults table color and a set of offsets. It can be rederived at any point
                  by calling rederiveColor(). For example when its parent color changes and it
                  value will update to reflect the new derived color. Property change events
                  are fired for the &quot;rgb&quot; property when the derived color changes.                
                <author>
                    Jasper Potts                    
                </author>
            </javadoc>
            <declaration name="uiDefaultParentName" type="String" line="42"/>
            <declaration name="hOffset" type="float" line="43"/>
            <declaration name="aOffset" type="int" line="44"/>
            <declaration name="argbValue" type="int" line="45"/>
            <method name="DerivedColor" type="constructor" line="47">
                <params>
                    <param name="uiDefaultParentName" type="String"/>
                    <param name="hOffset" type="float"/>
                    <param name="sOffset" type="float"/>
                    <param name="bOffset" type="float"/>
                    <param name="aOffset" type="int"/>
                </params>
            </method>
            <method name="getUiDefaultParentName" type="String" line="56"/>
            <method name="getHueOffset" type="float" line="60"/>
            <method name="getSaturationOffset" type="float" line="64"/>
            <method name="getBrightnessOffset" type="float" line="68"/>
            <method name="getAlphaOffset" type="int" line="72"/>
            <javadoc line="76">
                Recalculate the derived color from the UIManager parent color and offsets                
            </javadoc>
            <method name="rederiveColor" type="void" line="79">
                <comment line="84">
                    apply offsets                    
                </comment>
                <declaration name="src" type="Color" line="80"/>
                <scope line="81">
                    <declaration name="tmp" type="float[]" line="82"/>
                    <declaration name="alpha" type="int" line="87"/>
                </scope>
                <scope line="89">
                    <declaration name="tmp" type="float[]" line="90"/>
                    <declaration name="alpha" type="int" line="94"/>
                </scope>
            </method>
            <javadoc line="99">
                Returns the RGB value representing the color in the default sRGB {@link java.awt.image.ColorModel}. (Bits 24-31
                  are alpha, 16-23 are red, 8-15 are green, 0-7 are blue).                
                <return>
                    the RGB value of the color in the default sRGB <code>ColorModel</code>.                    
                </return>
                <see>
                    java.awt.image.ColorModel#getRGBdefault                    
                </see>
                <see>
                    #getRed                    
                </see>
                <see>
                    #getGreen                    
                </see>
                <see>
                    #getBlue                    
                </see>
                <since>
                    JDK1.0                    
                </since>
            </javadoc>
            <method name="getRGB" type="int" line="110"/>
            <method name="equals" type="boolean" line="115">
                <params>
                    <param name="o" type="Object"/>
                </params>
                <declaration name="that" type="DerivedColor" line="118"/>
            </method>
            <method name="hashCode" type="int" line="128">
                <declaration name="result" type="int" line="129"/>
            </method>
            <method name="clamp" type="float" line="140">
                <params>
                    <param name="value" type="float"/>
                </params>
                <scope line="141"/>
                <scope line="143"/>
            </method>
            <method name="clamp" type="int" line="149">
                <params>
                    <param name="value" type="int"/>
                </params>
                <scope line="150"/>
                <scope line="152"/>
            </method>
            <javadoc line="158">
                Returns a string representation of this &lt;code&gt;Color&lt;/code&gt;. This method
                  is intended to be used only for debugging purposes. The content and
                  format of the returned string might vary between implementations. The
                  returned string might be empty but cannot be &lt;code&gt;null&lt;/code&gt;.                
                <return>
                    a String representation of this <code>Color</code>.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="167">
                <declaration name="src" type="Color" line="168"/>
                <declaration name="s" type="String" line="169"/>
            </method>
            <class name="UIResource" line="176">
                <extends class="DerivedColor"/>
                <implements interface="javax.swing.plaf.UIResource"/>
                <method name="UIResource" type="constructor" line="178">
                    <params>
                        <param name="uiDefaultParentName" type="String"/>
                        <param name="hOffset" type="float"/>
                        <param name="sOffset" type="float"/>
                        <param name="bOffset" type="float"/>
                        <param name="aOffset" type="int"/>
                    </params>
                </method>
                <method name="equals" type="boolean" line="183">
                    <params>
                        <param name="o" type="Object"/>
                    </params>
                </method>
                <method name="hashCode" type="int" line="188"/>
            </class>
        </class>
    </source>