<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.basic">
        <import package="sun.swing.SwingUtilities2"/>
        <import package="javax.swing"/>
        <import package="javax.swing.event"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.text.View"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="java.util.Vector"/>
        <import package="java.util.Hashtable"/>
        <import package="sun.swing.DefaultLookup"/>
        <import package="sun.swing.UIAction"/>
        <class name="BasicTabbedPaneUI" line="45">
            <extends class="TabbedPaneUI"/>
            <comment line="58">
                Instance variables initialized at installation                
            </comment>
            <comment line="123">
                Transient variables (recalculated each time TabbedPane is layed out)                
            </comment>
            <comment line="132">
                Listeners                
            </comment>
            <comment line="139">
                Private instance data                
            </comment>
            <comment line="145">
                PENDING(api): See comment for ContainerHandler                
            </comment>
            <comment line="156">
                For use when tabLayoutPolicy = SCROLL_TAB_LAYOUT                
            </comment>
            <comment line="192">
                UI creation                
            </comment>
            <comment line="215">
                UI Installation/De-installation                
            </comment>
            <comment line="258">
                In an attempt to preserve backward compatibility for programs
                 which have extended BasicTabbedPaneUI to do their own layout, the
                 UI uses the installed layoutManager (and not tabLayoutPolicy) to
                 determine if scrollTabLayout is enabled.                
            </comment>
            <comment line="782">
                UI Rendering                
            </comment>
            <comment line="894">
                This method will create and return a polygon shape for the given tab rectangle
                 which has been cropped at the specified cropline with a torn edge visual.
                 e.g. A &quot;File&quot; tab which has cropped been cropped just after the &quot;i&quot;:
                             -------------
                             |  .....     |
                             |  .          |
                             |  ...  .    |
                             |  .    .   |
                             |  .    .    |
                             |  .    .     |
                             --------------
                
                 The x, y arrays below define the pattern used to create a &quot;torn&quot; edge
                 segment which is repeated to fill the edge of the tab.
                 For tabs placed on TOP and BOTTOM, this righthand torn edge is created by
                 line segments which are defined by coordinates obtained by
                 subtracting xCropLen[i] from (tab.x + tab.width) and adding yCroplen[i]
                 to (tab.y).
                 For tabs placed on LEFT or RIGHT, the bottom torn edge is created by
                 subtracting xCropLen[i] from (tab.y + tab.height) and adding yCropLen[i]
                 to (tab.x).                
            </comment>
            <comment line="975">
                If tabLayoutPolicy == SCROLL_TAB_LAYOUT, this method will paint an edge
                 indicating the tab is cropped in the viewport display                
            </comment>
            <comment line="1460">
                TabbedPaneUI methods                
            </comment>
            <comment line="1609">
                BasicTabbedPaneUI methods                
            </comment>
            <comment line="1823">
                Tab Navigation methods                
            </comment>
            <comment line="2157">
                REMIND(aim,7/29/98): This method should be made
                 protected in the next release where
                 API changes are allowed                
            </comment>
            <comment line="3507">
                Controller: event listeners                
            </comment>
            <implements interface="SwingConstants"/>
            <javadoc line="45">
                A Basic L&amp;F implementation of TabbedPaneUI.                
                <author>
                    Amy Fowler                    
                </author>
                <author>
                    Philip Milne                    
                </author>
                <author>
                    Steve Wilson                    
                </author>
                <author>
                    Tom Santos                    
                </author>
                <author>
                    Dave Moore                    
                </author>
            </javadoc>
            <declaration name="tabPane" type="JTabbedPane" line="59"/>
            <declaration name="highlight" type="Color" line="61"/>
            <declaration name="lightHighlight" type="Color" line="62"/>
            <declaration name="shadow" type="Color" line="63"/>
            <declaration name="darkShadow" type="Color" line="64"/>
            <declaration name="focus" type="Color" line="65"/>
            <declaration name="selectedColor" type="Color" line="66"/>
            <declaration name="textIconGap" type="int" line="68"/>
            <declaration name="tabRunOverlay" type="int" line="70"/>
            <declaration name="tabInsets" type="Insets" line="72"/>
            <declaration name="selectedTabPadInsets" type="Insets" line="73"/>
            <declaration name="tabAreaInsets" type="Insets" line="74"/>
            <declaration name="contentBorderInsets" type="Insets" line="75"/>
            <declaration name="tabsOverlapBorder" type="boolean" line="76"/>
            <declaration name="tabsOpaque" type="boolean" line="77"/>
            <declaration name="contentOpaque" type="boolean" line="78"/>
            <declaration name="upKey" type="KeyStroke" line="80"/>
            <javadoc line="80">
                As of Java 2 platform v1.3 this previously undocumented field is no
                  longer used.
                  Key bindings are now defined by the LookAndFeel, please refer to
                  the key bindings specification for further details.                
                <deprecated>
                    As of Java 2 platform v1.3.                    
                </deprecated>
            </javadoc>
            <declaration name="downKey" type="KeyStroke" line="90"/>
            <javadoc line="90">
                As of Java 2 platform v1.3 this previously undocumented field is no
                  longer used.
                  Key bindings are now defined by the LookAndFeel, please refer to
                  the key bindings specification for further details.                
                <deprecated>
                    As of Java 2 platform v1.3.                    
                </deprecated>
            </javadoc>
            <declaration name="leftKey" type="KeyStroke" line="100"/>
            <javadoc line="100">
                As of Java 2 platform v1.3 this previously undocumented field is no
                  longer used.
                  Key bindings are now defined by the LookAndFeel, please refer to
                  the key bindings specification for further details.                
                <deprecated>
                    As of Java 2 platform v1.3.                    
                </deprecated>
            </javadoc>
            <declaration name="rightKey" type="KeyStroke" line="110"/>
            <javadoc line="110">
                As of Java 2 platform v1.3 this previously undocumented field is no
                  longer used.
                  Key bindings are now defined by the LookAndFeel, please refer to
                  the key bindings specification for further details.                
                <deprecated>
                    As of Java 2 platform v1.3.                    
                </deprecated>
            </javadoc>
            <declaration name="tabRuns" type="int" line="124"/>
            <declaration name="runCount" type="int" line="125"/>
            <declaration name="selectedRun" type="int" line="126"/>
            <declaration name="rects" type="Rectangle" line="127"/>
            <declaration name="maxTabHeight" type="int" line="128"/>
            <declaration name="maxTabWidth" type="int" line="129"/>
            <declaration name="tabChangeListener" type="ChangeListener" line="133"/>
            <declaration name="propertyChangeListener" type="PropertyChangeListener" line="134"/>
            <declaration name="mouseListener" type="MouseListener" line="135"/>
            <declaration name="focusListener" type="FocusListener" line="136"/>
            <declaration name="currentPadInsets" type="Insets" line="140"/>
            <declaration name="currentTabAreaInsets" type="Insets" line="141"/>
            <declaration name="visibleComponent" type="Component" line="143"/>
            <declaration name="htmlViews" type="Vector&lt;View&gt;" line="145"/>
            <declaration name="mnemonicToIndexMap" type="Hashtable&lt;Integer,Integer&gt;" line="147"/>
            <declaration name="mnemonicInputMap" type="InputMap" line="149"/>
            <javadoc line="149">
                InputMap used for mnemonics. Only non-null if the JTabbedPane has
                  mnemonics associated with it. Lazily created in initMnemonics.                
            </javadoc>
            <declaration name="tabScroller" type="ScrollableTabSupport" line="156"/>
            <declaration name="tabContainer" type="TabContainer" line="158"/>
            <declaration name="calcRect" type="Rectangle" line="160"/>
            <javadoc line="160">
                A rectangle used for general layout calculations in order
                  to avoid constructing many new Rectangles on the fly.                
            </javadoc>
            <declaration name="focusIndex" type="int" line="166"/>
            <javadoc line="166">
                Tab that has focus.                
            </javadoc>
            <declaration name="handler" type="Handler" line="171"/>
            <javadoc line="171">
                Combined listeners.                
            </javadoc>
            <declaration name="rolloverTabIndex" type="int" line="176"/>
            <javadoc line="176">
                Index of the tab the mouse is over.                
            </javadoc>
            <declaration name="isRunsDirty" type="boolean" line="181"/>
            <javadoc line="181">
                This is set to true when a component is added/removed from the tab
                  pane and set to false when layout happens.  If true it indicates that
                  tabRuns is not valid and shouldn&apos;t be used.                
            </javadoc>
            <declaration name="calculatedBaseline" type="boolean" line="188"/>
            <declaration name="baseline" type="int" line="189"/>
            <method name="createUI" type="ComponentUI" line="193">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="loadActionMap" type="void" line="197">
                <params>
                    <param name="map" type="LazyActionMap"/>
                </params>
            </method>
            <method name="installUI" type="void" line="216">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="uninstallUI" type="void" line="229">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="239">
                Invoked by &lt;code&gt;installUI&lt;/code&gt; to create
                  a layout manager object to manage
                  the &lt;code&gt;JTabbedPane&lt;/code&gt;.                
                <return>
                    a layout manager object                    
                </return>
                <see>
                    TabbedPaneLayout                    
                </see>
                <see>
                    javax.swing.JTabbedPane#getTabLayoutPolicy                    
                </see>
            </javadoc>
            <method name="createLayoutManager" type="LayoutManager" line="249">
                <comment line="253">
                                        
                </comment>
                <scope line="250"/>
                <scope line="252"/>
            </method>
            <method name="scrollableTabLayoutEnabled" type="boolean" line="262"/>
            <javadoc line="266">
                Creates and installs any required subcomponents for the JTabbedPane.
                  Invoked by installUI.                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="installComponents" type="void" line="272">
                <scope line="273">
                    <scope line="274"/>
                </scope>
            </method>
            <method name="installTabContainer" type="void" line="282">
                <scope line="283">
                    <declaration name="tabComponent" type="Component" line="284"/>
                    <scope line="285">
                        <scope line="286"/>
                    </scope>
                </scope>
                <scope line="292"/>
                <scope line="295"/>
                <scope line="297"/>
            </method>
            <javadoc line="302">
                Creates and returns a JButton that will provide the user
                  with a way to scroll the tabs in a particular direction. The
                  returned JButton must be instance of UIResource.                
                <param>
                    direction One of the SwingConstants constants:
                      SOUTH, NORTH, EAST or WEST                    
                </param>
                <return>
                    Widget for user to                    
                </return>
                <see>
                    javax.swing.JTabbedPane#setTabPlacement                    
                </see>
                <see>
                    javax.swing.SwingConstants                    
                </see>
                <throws>
                    IllegalArgumentException if direction is not one of
                      NORTH, SOUTH, EAST or WEST                    
                </throws>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="createScrollButton" type="JButton" line="316">
                <params>
                    <param name="direction" type="int"/>
                </params>
                <scope line="318"/>
            </method>
            <javadoc line="325">
                Removes any installed subcomponents from the JTabbedPane.
                  Invoked by uninstallUI.                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="uninstallComponents" type="void" line="331">
                <scope line="333"/>
            </method>
            <method name="uninstallTabContainer" type="void" line="341">
                <comment line="346">
                    Remove all the tabComponents, making sure not to notify
                     the tabbedpane.                    
                </comment>
                <scope line="342"/>
                <scope line="349"/>
                <scope line="352"/>
            </method>
            <method name="installDefaults" type="void" line="358">
                <comment line="384">
                    Fix for 6711145 BasicTabbedPanuUI should not throw a NPE if these
                     keys are missing. So we are setting them to there default values here
                     if the keys are missing.                    
                </comment>
                <declaration name="opaque" type="Object" line="377"/>
                <scope line="378"/>
            </method>
            <method name="uninstallDefaults" type="void" line="392"/>
            <method name="installListeners" type="void" line="404">
                <scope line="405"/>
                <scope line="408"/>
                <scope line="411"/>
                <scope line="415"/>
                <scope line="419"/>
            </method>
            <method name="uninstallListeners" type="void" line="424">
                <scope line="425"/>
                <scope line="430"/>
                <scope line="436"/>
                <scope line="440"/>
                <scope line="444"/>
            </method>
            <method name="createMouseListener" type="MouseListener" line="451"/>
            <method name="createFocusListener" type="FocusListener" line="455"/>
            <method name="createChangeListener" type="ChangeListener" line="459"/>
            <method name="createPropertyChangeListener" type="PropertyChangeListener" line="463"/>
            <method name="getHandler" type="Handler" line="467">
                <scope line="468"/>
            </method>
            <method name="installKeyboardActions" type="void" line="474">
                <declaration name="km" type="InputMap" line="475"/>
            </method>
            <method name="getInputMap" type="InputMap" line="489">
                <params>
                    <param name="condition" type="int"/>
                </params>
                <scope line="490"/>
                <scope line="494"/>
            </method>
            <method name="uninstallKeyboardActions" type="void" line="501"/>
            <javadoc line="515">
                Reloads the mnemonics. This should be invoked when a memonic changes,
                  when the title of a mnemonic changes, or when tabs are added/removed.                
            </javadoc>
            <method name="updateMnemonics" type="void" line="519">
                <scope line="522">
                    <declaration name="mnemonic" type="int" line="523"/>
                    <scope line="525"/>
                </scope>
            </method>
            <javadoc line="531">
                Resets the mnemonics bindings to an empty state.                
            </javadoc>
            <method name="resetMnemonics" type="void" line="534">
                <scope line="535"/>
            </method>
            <javadoc line="541">
                Adds the specified mnemonic at the specified index.                
            </javadoc>
            <method name="addMnemonic" type="void" line="544">
                <params>
                    <param name="index" type="int"/>
                    <param name="mnemonic" type="int"/>
                </params>
                <scope line="545"/>
            </method>
            <javadoc line="553">
                Installs the state needed for mnemonics.                
            </javadoc>
            <method name="initMnemonics" type="void" line="556"/>
            <javadoc line="566">
                Sets the tab the mouse is over by location. This is a cover method
                  for &lt;code&gt;setRolloverTab(tabForCoordinate(x, y, false))&lt;/code&gt;.                
            </javadoc>
            <method name="setRolloverTab" type="void" line="570">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <comment line="572">
                    NOTE:
                     This calls in with false otherwise it could trigger a validate,
                     which should NOT happen if the user is only dragging the
                     mouse around.                    
                </comment>
            </method>
            <javadoc line="578">
                Sets the tab the mouse is currently over to &lt;code&gt;index&lt;/code&gt;.
                  &lt;code&gt;index&lt;/code&gt; will be -1 if the mouse is no longer over any
                  tab. No checking is done to ensure the passed in index identifies a
                  valid tab.                
                <param>
                    index Index of the tab the mouse is over.                    
                </param>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="setRolloverTab" type="void" line="587">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <javadoc line="591">
                Returns the tab the mouse is currently over, or {@code -1} if the mouse is no
                  longer over any tab.                
                <return>
                    the tab the mouse is currently over, or {@code -1} if the mouse is no
                      longer over any tab                    
                </return>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="getRolloverTab" type="int" line="599"/>
            <method name="getMinimumSize" type="Dimension" line="603">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <comment line="605">
                    Default to LayoutManager&apos;s minimumLayoutSize                    
                </comment>
            </method>
            <method name="getMaximumSize" type="Dimension" line="608">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <comment line="610">
                    Default to LayoutManager&apos;s maximumLayoutSize                    
                </comment>
            </method>
            <javadoc line="613">
                Returns the baseline.                
                <throws>
                    NullPointerException {@inheritDoc}                    
                </throws>
                <throws>
                    IllegalArgumentException {@inheritDoc}                    
                </throws>
                <see>
                    javax.swing.JComponent#getBaseline(int,int)                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="getBaseline" type="int" line="621">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="baseline" type="int" line="623"/>
                <scope line="624">
                    <declaration name="placement" type="int" line="625"/>
                    <declaration name="insets" type="Insets" line="626"/>
                    <declaration name="tabAreaInsets" type="Insets" line="627"/>
                </scope>
            </method>
            <javadoc line="645">
                Returns an enum indicating how the baseline of the component
                  changes as the size changes.                
                <throws>
                    NullPointerException {@inheritDoc}                    
                </throws>
                <see>
                    javax.swing.JComponent#getBaseline(int,int)                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="getBaselineResizeBehavior" type="Component.BaselineResizeBehavior" line="654">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="667">
                Returns the baseline for the specified tab.                
                <param>
                    tab index of tab to get baseline for                    
                </param>
                <exception>
                    IndexOutOfBoundsException if index is out of range
                      (index < 0 || index >= tab count)                    
                </exception>
                <return>
                    baseline or a value &lt; 0 indicating there is no reasonable
                      baseline                    
                </return>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="getBaseline" type="int" line="677">
                <params>
                    <param name="tab" type="int"/>
                </params>
                <comment line="682">
                    The offset is not applied to the tab component, and so
                     in general we can&apos;t get good alignment like with components
                     in the tab.                    
                </comment>
                <scope line="678">
                    <declaration name="offset" type="int" line="679"/>
                    <scope line="680"/>
                    <declaration name="c" type="Component" line="686"/>
                    <declaration name="pref" type="Dimension" line="687"/>
                    <declaration name="tabInsets" type="Insets" line="688"/>
                    <declaration name="cellHeight" type="int" line="689"/>
                </scope>
                <scope line="693">
                    <declaration name="view" type="View" line="694"/>
                    <scope line="695">
                        <declaration name="viewHeight" type="int" line="696"/>
                        <declaration name="baseline" type="int" line="697"/>
                        <scope line="699"/>
                    </scope>
                </scope>
                <declaration name="metrics" type="FontMetrics" line="706"/>
                <declaration name="fontHeight" type="int" line="707"/>
                <declaration name="fontBaseline" type="int" line="708"/>
            </method>
            <javadoc line="713">
                Returns the amount the baseline is offset by.  This is typically
                  the same as &lt;code&gt;getTabLabelShiftY&lt;/code&gt;.                
                <return>
                    amount to offset the baseline by                    
                </return>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="getBaselineOffset" type="int" line="720">
                <comment line="737">
                    RIGHT|LEFT                    
                </comment>
                <scope line="723"/>
                <scope line="726"/>
                <scope line="730"/>
                <scope line="733"/>
            </method>
            <method name="calculateBaselineIfNecessary" type="int" line="741">
                <scope line="742">
                    <scope line="745"/>
                </scope>
            </method>
            <method name="calculateBaseline" type="void" line="752">
                <comment line="767">
                    left/right, tabs may be different sizes.                    
                </comment>
                <comment line="774">
                    assume different baseline                    
                </comment>
                <declaration name="tabCount" type="int" line="753"/>
                <declaration name="tabPlacement" type="int" line="754"/>
                <scope line="757">
                    <scope line="758">
                        <scope line="759"/>
                    </scope>
                </scope>
                <scope line="765">
                    <declaration name="fontMetrics" type="FontMetrics" line="767"/>
                    <declaration name="fontHeight" type="int" line="768"/>
                    <declaration name="height" type="int" line="769"/>
                    <scope line="770">
                        <declaration name="newHeight" type="int" line="771"/>
                        <scope line="772"/>
                    </scope>
                </scope>
            </method>
            <method name="paint" type="void" line="783">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <comment line="790">
                    Paint content border and tab area                    
                </comment>
                <comment line="794">
                    If scrollable tabs are enabled, the tab area will be
                     painted by the scrollable tab panel instead.                    
                </comment>
                <comment line="797">
                    WRAP_TAB_LAYOUT                    
                </comment>
                <declaration name="selectedIndex" type="int" line="784"/>
                <declaration name="tabPlacement" type="int" line="785"/>
                <scope line="790"/>
                <scope line="796"/>
                <scope line="799"/>
            </method>
            <javadoc line="804">
                Paints the tabs in the tab area.
                  Invoked by paint().
                  The graphics parameter must be a valid &lt;code&gt;Graphics&lt;/code&gt;
                  object.  Tab placement may be either:
                  &lt;code&gt;JTabbedPane.TOP&lt;/code&gt;, &lt;code&gt;JTabbedPane.BOTTOM&lt;/code&gt;,
                  &lt;code&gt;JTabbedPane.LEFT&lt;/code&gt;, or &lt;code&gt;JTabbedPane.RIGHT&lt;/code&gt;.
                  The selected index must be a valid tabbed pane tab index (0 to
                  tab count - 1, inclusive) or -1 if no tab is currently selected.
                  The handling of invalid parameters is unspecified.                
                <param>
                    g the graphics object to use for rendering                    
                </param>
                <param>
                    tabPlacement the placement for the tabs within the JTabbedPane                    
                </param>
                <param>
                    selectedIndex the tab index of the selected component                    
                </param>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="paintTabArea" type="void" line="821">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="tabPlacement" type="int"/>
                    <param name="selectedIndex" type="int"/>
                </params>
                <comment line="829">
                    Paint tabRuns of tabs from back to front                    
                </comment>
                <comment line="841">
                    Paint selected tab if its in the front run
                     since it may overlap other tabs                    
                </comment>
                <declaration name="tabCount" type="int" line="822"/>
                <declaration name="iconRect" type="Rectangle" line="824"/>
                <declaration name="clipRect" type="Rectangle" line="826"/>
                <scope line="829">
                    <declaration name="start" type="int" line="830"/>
                    <declaration name="next" type="int" line="831"/>
                    <declaration name="end" type="int" line="832"/>
                    <scope line="833">
                        <scope line="834"/>
                    </scope>
                </scope>
                <scope line="842"/>
            </method>
            <method name="paintTab" type="void" line="849">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="tabPlacement" type="int"/>
                    <param name="rects" type="Rectangle[]"/>
                    <param name="tabIndex" type="int"/>
                    <param name="iconRect" type="Rectangle"/>
                    <param name="textRect" type="Rectangle"/>
                </params>
                <declaration name="tabRect" type="Rectangle" line="850"/>
                <declaration name="selectedIndex" type="int" line="851"/>
                <declaration name="isSelected" type="boolean" line="852"/>
                <scope line="854"/>
                <declaration name="title" type="String" line="862"/>
                <declaration name="font" type="Font" line="863"/>
                <declaration name="metrics" type="FontMetrics" line="864"/>
                <declaration name="icon" type="Icon" line="865"/>
                <scope line="870">
                    <declaration name="clippedTitle" type="String" line="871"/>
                    <scope line="874">
                        <declaration name="availTextWidth" type="int" line="875"/>
                    </scope>
                </scope>
            </method>
            <method name="isHorizontalTabPlacement" type="boolean" line="889"/>
            <declaration name="xCropLen" type="int" line="915"/>
            <declaration name="yCropLen" type="int" line="916"/>
            <declaration name="CROP_SEGMENT" type="int" line="917"/>
            <method name="createCroppedTabShape" type="Polygon" line="919">
                <params>
                    <param name="tabPlacement" type="int"/>
                    <param name="tabRect" type="Rectangle"/>
                    <param name="cropline" type="int"/>
                </params>
                <comment line="970">
                    LEFT or RIGHT                    
                </comment>
                <declaration name="rlen" type="int" line="920"/>
                <declaration name="start" type="int" line="921"/>
                <declaration name="end" type="int" line="922"/>
                <declaration name="ostart" type="int" line="923"/>
                <declaration name="rcnt" type="int" line="941"/>
                <scope line="942"/>
                <declaration name="npts" type="int" line="945"/>
                <declaration name="xp" type="int" line="946"/>
                <declaration name="yp" type="int" line="947"/>
                <declaration name="pcnt" type="int" line="948"/>
                <scope line="954">
                    <scope line="955">
                        <scope line="958"/>
                    </scope>
                </scope>
                <scope line="966"/>
                <scope line="969"/>
            </method>
            <method name="paintCroppedTabEdge" type="void" line="977">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="tabIndex" type="int" line="978"/>
                <declaration name="cropline" type="int" line="979"/>
                <declaration name="x" type="int" line="980"/>
                <declaration name="xx" type="int" line="986"/>
                <scope line="988">
                    <scope line="989"/>
                </scope>
                <declaration name="yy" type="int" line="1001"/>
                <scope line="1003">
                    <scope line="1004"/>
                </scope>
            </method>
            <method name="layoutLabel" type="void" line="1017">
                <params>
                    <param name="tabPlacement" type="int"/>
                    <param name="metrics" type="FontMetrics"/>
                    <param name="tabIndex" type="int"/>
                    <param name="title" type="String"/>
                    <param name="icon" type="Icon"/>
                    <param name="tabRect" type="Rectangle"/>
                    <param name="iconRect" type="Rectangle"/>
                    <param name="textRect" type="Rectangle"/>
                    <param name="isSelected" type="boolean"/>
                </params>
                <declaration name="v" type="View" line="1020"/>
                <scope line="1021"/>
                <declaration name="xNudge" type="int" line="1038"/>
                <declaration name="yNudge" type="int" line="1039"/>
            </method>
            <method name="paintIcon" type="void" line="1048">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="tabPlacement" type="int"/>
                    <param name="tabIndex" type="int"/>
                    <param name="icon" type="Icon"/>
                    <param name="iconRect" type="Rectangle"/>
                    <param name="isSelected" type="boolean"/>
                </params>
                <scope line="1049"/>
            </method>
            <method name="paintText" type="void" line="1057">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="tabPlacement" type="int"/>
                    <param name="font" type="Font"/>
                    <param name="metrics" type="FontMetrics"/>
                    <param name="tabIndex" type="int"/>
                    <param name="title" type="String"/>
                    <param name="textRect" type="Rectangle"/>
                    <param name="isSelected" type="boolean"/>
                </params>
                <comment line="1064">
                    html                    
                </comment>
                <comment line="1067">
                    plain text                    
                </comment>
                <comment line="1084">
                    tab disabled                    
                </comment>
                <declaration name="v" type="View" line="1061"/>
                <scope line="1062"/>
                <scope line="1065">
                    <declaration name="mnemIndex" type="int" line="1067"/>
                    <scope line="1069">
                        <declaration name="fg" type="Color" line="1070"/>
                        <scope line="1071">
                            <declaration name="selectedFG" type="Color" line="1072"/>
                            <scope line="1074"/>
                        </scope>
                    </scope>
                    <scope line="1083"/>
                </scope>
            </method>
            <method name="getTabLabelShiftX" type="int" line="1098">
                <params>
                    <param name="tabPlacement" type="int"/>
                    <param name="tabIndex" type="int"/>
                    <param name="isSelected" type="boolean"/>
                </params>
                <declaration name="tabRect" type="Rectangle" line="1099"/>
                <declaration name="propKey" type="String" line="1100"/>
                <declaration name="nudge" type="int" line="1101"/>
            </method>
            <method name="getTabLabelShiftY" type="int" line="1116">
                <params>
                    <param name="tabPlacement" type="int"/>
                    <param name="tabIndex" type="int"/>
                    <param name="isSelected" type="boolean"/>
                </params>
                <declaration name="tabRect" type="Rectangle" line="1117"/>
                <declaration name="propKey" type="String" line="1118"/>
                <declaration name="nudge" type="int" line="1119"/>
            </method>
            <method name="paintFocusIndicator" type="void" line="1137">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="tabPlacement" type="int"/>
                    <param name="rects" type="Rectangle[]"/>
                    <param name="tabIndex" type="int"/>
                    <param name="iconRect" type="Rectangle"/>
                    <param name="textRect" type="Rectangle"/>
                    <param name="isSelected" type="boolean"/>
                </params>
                <declaration name="tabRect" type="Rectangle" line="1138"/>
                <scope line="1139">
                    <declaration name="x" type="int" line="1140"/>
                </scope>
            </method>
            <javadoc line="1172">
                this function draws the border around each tab
                  note that this function does now draw the background of the tab.
                  that is done elsewhere                
            </javadoc>
            <method name="paintTabBorder" type="void" line="1180">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="tabPlacement" type="int"/>
                    <param name="tabIndex" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="isSelected" type="boolean"/>
                </params>
                <comment line="1186">
                    bottom-left highlight                    
                </comment>
                <comment line="1187">
                    left highlight                    
                </comment>
                <comment line="1188">
                    top-left highlight                    
                </comment>
                <comment line="1189">
                    top highlight                    
                </comment>
                <comment line="1192">
                    bottom shadow                    
                </comment>
                <comment line="1195">
                    bottom dark shadow                    
                </comment>
                <comment line="1198">
                    top highlight                    
                </comment>
                <comment line="1201">
                    bottom shadow                    
                </comment>
                <comment line="1202">
                    right shadow                    
                </comment>
                <comment line="1205">
                    top-right dark shadow                    
                </comment>
                <comment line="1206">
                    bottom-right dark shadow                    
                </comment>
                <comment line="1207">
                    right dark shadow                    
                </comment>
                <comment line="1208">
                    bottom dark shadow                    
                </comment>
                <comment line="1211">
                    left highlight                    
                </comment>
                <comment line="1212">
                    bottom-left highlight                    
                </comment>
                <comment line="1215">
                    bottom shadow                    
                </comment>
                <comment line="1216">
                    right shadow                    
                </comment>
                <comment line="1219">
                    bottom dark shadow                    
                </comment>
                <comment line="1220">
                    bottom-right dark shadow                    
                </comment>
                <comment line="1221">
                    right dark shadow                    
                </comment>
                <comment line="1225">
                    left highlight                    
                </comment>
                <comment line="1226">
                    top-left highlight                    
                </comment>
                <comment line="1227">
                    top highlight                    
                </comment>
                <comment line="1230">
                    right shadow                    
                </comment>
                <comment line="1233">
                    right dark-shadow                    
                </comment>
                <comment line="1234">
                    top-right shadow                    
                </comment>
            </method>
            <method name="paintTabBackground" type="void" line="1240">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="tabPlacement" type="int"/>
                    <param name="tabIndex" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="isSelected" type="boolean"/>
                </params>
            </method>
            <method name="paintContentBorder" type="void" line="1259">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="tabPlacement" type="int"/>
                    <param name="selectedIndex" type="int"/>
                </params>
                <comment line="1301">
                    Fill region behind content area                    
                </comment>
                <declaration name="width" type="int" line="1260"/>
                <declaration name="height" type="int" line="1261"/>
                <declaration name="insets" type="Insets" line="1262"/>
                <declaration name="tabAreaInsets" type="Insets" line="1263"/>
                <declaration name="x" type="int" line="1265"/>
                <declaration name="y" type="int" line="1266"/>
                <declaration name="w" type="int" line="1267"/>
                <declaration name="h" type="int" line="1268"/>
                <scope line="1273"/>
                <scope line="1280"/>
                <scope line="1286"/>
                <scope line="1293"/>
                <scope line="1299">
                    <declaration name="color" type="Color" line="1301"/>
                    <scope line="1302"/>
                    <scope line="1305"/>
                    <scope line="1308"/>
                </scope>
            </method>
            <method name="paintContentBorderTopEdge" type="void" line="1323">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="tabPlacement" type="int"/>
                    <param name="selectedIndex" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <comment line="1330">
                    Draw unbroken line if tabs are not on TOP, OR
                     selected tab is not in run adjacent to content, OR
                     selected tab is not visible (SCROLL_TAB_LAYOUT)                    
                </comment>
                <comment line="1339">
                    Break line to show visual connection to selected tab                    
                </comment>
                <declaration name="selRect" type="Rectangle" line="1324"/>
                <scope line="1335"/>
                <scope line="1337">
                    <scope line="1340"/>
                    <scope line="1343"/>
                </scope>
            </method>
            <method name="paintContentBorderLeftEdge" type="void" line="1352">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="tabPlacement" type="int"/>
                    <param name="selectedIndex" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <comment line="1359">
                    Draw unbroken line if tabs are not on LEFT, OR
                     selected tab is not in run adjacent to content, OR
                     selected tab is not visible (SCROLL_TAB_LAYOUT)                    
                </comment>
                <comment line="1368">
                    Break line to show visual connection to selected tab                    
                </comment>
                <declaration name="selRect" type="Rectangle" line="1353"/>
                <scope line="1364"/>
                <scope line="1366">
                    <scope line="1369"/>
                </scope>
            </method>
            <method name="paintContentBorderBottomEdge" type="void" line="1378">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="tabPlacement" type="int"/>
                    <param name="selectedIndex" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <comment line="1385">
                    Draw unbroken line if tabs are not on BOTTOM, OR
                     selected tab is not in run adjacent to content, OR
                     selected tab is not visible (SCROLL_TAB_LAYOUT)                    
                </comment>
                <comment line="1396">
                    Break line to show visual connection to selected tab                    
                </comment>
                <declaration name="selRect" type="Rectangle" line="1379"/>
                <scope line="1390"/>
                <scope line="1394">
                    <scope line="1399"/>
                </scope>
            </method>
            <method name="paintContentBorderRightEdge" type="void" line="1411">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="tabPlacement" type="int"/>
                    <param name="selectedIndex" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <comment line="1418">
                    Draw unbroken line if tabs are not on RIGHT, OR
                     selected tab is not in run adjacent to content, OR
                     selected tab is not visible (SCROLL_TAB_LAYOUT)                    
                </comment>
                <comment line="1429">
                    Break line to show visual connection to selected tab                    
                </comment>
                <declaration name="selRect" type="Rectangle" line="1412"/>
                <scope line="1423"/>
                <scope line="1427">
                    <scope line="1433"/>
                </scope>
            </method>
            <method name="ensureCurrentLayout" type="void" line="1444">
                <comment line="1449">
                    If tabPane doesn&apos;t have a peer yet, the validate() call will
                     silently fail.  We handle that by forcing a layout if tabPane
                     is still invalid.  See bug 4237677.                    
                </comment>
                <scope line="1445"/>
                <scope line="1452">
                    <declaration name="layout" type="TabbedPaneLayout" line="1453"/>
                </scope>
            </method>
            <javadoc line="1461">
                Returns the bounds of the specified tab index.  The bounds are
                  with respect to the JTabbedPane&apos;s coordinate space.                
            </javadoc>
            <method name="getTabBounds" type="Rectangle" line="1465">
                <params>
                    <param name="pane" type="JTabbedPane"/>
                    <param name="i" type="int"/>
                </params>
                <declaration name="tabRect" type="Rectangle" line="1467"/>
            </method>
            <method name="getTabRunCount" type="int" line="1471">
                <params>
                    <param name="pane" type="JTabbedPane"/>
                </params>
            </method>
            <javadoc line="1476">
                Returns the tab index which intersects the specified point
                  in the JTabbedPane&apos;s coordinate space.                
            </javadoc>
            <method name="tabForCoordinate" type="int" line="1480">
                <params>
                    <param name="pane" type="JTabbedPane"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
            </method>
            <method name="tabForCoordinate" type="int" line="1485">
                <params>
                    <param name="pane" type="JTabbedPane"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="validateIfNecessary" type="boolean"/>
                </params>
                <comment line="1491">
                    We didn&apos;t recalculate the layout, runs and tabCount may not
                     line up, bail.                    
                </comment>
                <scope line="1486"/>
                <scope line="1489"/>
                <declaration name="p" type="Point" line="1494"/>
                <scope line="1496">
                    <declaration name="viewRect" type="Rectangle" line="1498"/>
                    <scope line="1499"/>
                </scope>
                <declaration name="tabCount" type="int" line="1503"/>
                <scope line="1504">
                    <scope line="1505"/>
                </scope>
            </method>
            <javadoc line="1512">
                Returns the bounds of the specified tab in the coordinate space
                  of the JTabbedPane component.  This is required because the tab rects
                  are by default defined in the coordinate space of the component where
                  they are rendered, which could be the JTabbedPane
                  (for WRAP_TAB_LAYOUT) or a ScrollableTabPanel (SCROLL_TAB_LAYOUT).
                  This method should be used whenever the tab rectangle must be relative
                  to the JTabbedPane itself and the result should be placed in a
                  designated Rectangle object (rather than instantiating and returning
                  a new Rectangle each time). The tab index parameter must be a valid
                  tabbed pane tab index (0 to tab count - 1, inclusive).  The destination
                  rectangle parameter must be a valid &lt;code&gt;Rectangle&lt;/code&gt; instance.
                  The handling of invalid parameters is unspecified.                
                <param>
                    tabIndex the index of the tab                    
                </param>
                <param>
                    dest the rectangle where the result should be placed                    
                </param>
                <return>
                    the resulting rectangle                    
                </return>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="getTabBounds" type="Rectangle" line="1532">
                <params>
                    <param name="tabIndex" type="int"/>
                    <param name="dest" type="Rectangle"/>
                </params>
                <comment line="1537">
                    SCROLL_TAB_LAYOUT                    
                </comment>
                <comment line="1538">
                    Need to translate coordinates based on viewport location &amp;
                     view position                    
                </comment>
                <comment line="1545">
                    WRAP_TAB_LAYOUT                    
                </comment>
                <scope line="1536">
                    <declaration name="vpp" type="Point" line="1539"/>
                    <declaration name="viewp" type="Point" line="1540"/>
                </scope>
                <scope line="1544"/>
            </method>
            <javadoc line="1551">
                Returns the index of the tab closest to the passed in location, note
                  that the returned tab may not contain the location x,y.                
            </javadoc>
            <method name="getClosestTab" type="int" line="1555">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <declaration name="min" type="int" line="1556"/>
                <declaration name="tabCount" type="int" line="1557"/>
                <declaration name="max" type="int" line="1558"/>
                <declaration name="tabPlacement" type="int" line="1559"/>
                <declaration name="useX" type="boolean" line="1560"/>
                <declaration name="want" type="int" line="1561"/>
                <scope line="1563">
                    <declaration name="current" type="int" line="1564"/>
                    <declaration name="minLoc" type="int" line="1565"/>
                    <declaration name="maxLoc" type="int" line="1566"/>
                    <scope line="1568"/>
                    <scope line="1572"/>
                    <scope line="1576">
                        <scope line="1578"/>
                    </scope>
                    <scope line="1582">
                        <scope line="1584"/>
                    </scope>
                    <scope line="1588"/>
                </scope>
            </method>
            <javadoc line="1595">
                Returns a point which is translated from the specified point in the
                  JTabbedPane&apos;s coordinate space to the coordinate space of the
                  ScrollableTabPanel.  This is used for SCROLL_TAB_LAYOUT ONLY.                
            </javadoc>
            <method name="translatePointToTabPanel" type="Point" line="1600">
                <params>
                    <param name="srcx" type="int"/>
                    <param name="srcy" type="int"/>
                    <param name="dest" type="Point"/>
                </params>
                <declaration name="vpp" type="Point" line="1601"/>
                <declaration name="viewp" type="Point" line="1602"/>
            </method>
            <method name="getVisibleComponent" type="Component" line="1610"/>
            <method name="setVisibleComponent" type="void" line="1614">
                <params>
                    <param name="component" type="Component"/>
                </params>
                <scope line="1618"/>
                <scope line="1622"/>
            </method>
            <method name="assureRectsCreated" type="void" line="1628">
                <params>
                    <param name="tabCount" type="int"/>
                </params>
                <declaration name="rectArrayLen" type="int" line="1629"/>
                <scope line="1630">
                    <declaration name="tempRectArray" type="Rectangle[]" line="1631"/>
                    <scope line="1635"/>
                </scope>
            </method>
            <method name="expandTabRunsArray" type="void" line="1642">
                <declaration name="rectLen" type="int" line="1643"/>
                <declaration name="newArray" type="int[]" line="1644"/>
            </method>
            <method name="getRunForTab" type="int" line="1649">
                <params>
                    <param name="tabCount" type="int"/>
                    <param name="tabIndex" type="int"/>
                </params>
                <scope line="1650">
                    <declaration name="first" type="int" line="1651"/>
                    <declaration name="last" type="int" line="1652"/>
                    <scope line="1653"/>
                </scope>
            </method>
            <method name="lastTabInRun" type="int" line="1660">
                <params>
                    <param name="tabCount" type="int"/>
                    <param name="run" type="int"/>
                </params>
                <scope line="1661"/>
                <declaration name="nextRun" type="int" line="1664"/>
                <scope line="1665"/>
            </method>
            <method name="getTabRunOverlay" type="int" line="1671">
                <params>
                    <param name="tabPlacement" type="int"/>
                </params>
            </method>
            <method name="getTabRunIndent" type="int" line="1675">
                <params>
                    <param name="tabPlacement" type="int"/>
                    <param name="run" type="int"/>
                </params>
            </method>
            <method name="shouldPadTabRun" type="boolean" line="1679">
                <params>
                    <param name="tabPlacement" type="int"/>
                    <param name="run" type="int"/>
                </params>
            </method>
            <method name="shouldRotateTabRuns" type="boolean" line="1683">
                <params>
                    <param name="tabPlacement" type="int"/>
                </params>
            </method>
            <method name="getIconForTab" type="Icon" line="1687">
                <params>
                    <param name="tabIndex" type="int"/>
                </params>
            </method>
            <javadoc line="1692">
                Returns the text View object required to render stylized text (HTML) for
                  the specified tab or null if no specialized text rendering is needed
                  for this tab. This is provided to support html rendering inside tabs.                
                <param>
                    tabIndex the index of the tab                    
                </param>
                <return>
                    the text view to render the tab's text or null if no
                      specialized rendering is required                    
                </return>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="getTextViewForTab" type="View" line="1703">
                <params>
                    <param name="tabIndex" type="int"/>
                </params>
                <scope line="1704"/>
            </method>
            <method name="calculateTabHeight" type="int" line="1710">
                <params>
                    <param name="tabPlacement" type="int"/>
                    <param name="tabIndex" type="int"/>
                    <param name="fontHeight" type="int"/>
                </params>
                <comment line="1719">
                    html                    
                </comment>
                <comment line="1722">
                    plain text                    
                </comment>
                <declaration name="height" type="int" line="1711"/>
                <declaration name="c" type="Component" line="1712"/>
                <scope line="1713"/>
                <scope line="1715">
                    <declaration name="v" type="View" line="1716"/>
                    <scope line="1717"/>
                    <scope line="1720"/>
                    <declaration name="icon" type="Icon" line="1724"/>
                    <scope line="1726"/>
                </scope>
                <declaration name="tabInsets" type="Insets" line="1730"/>
            </method>
            <method name="calculateMaxTabHeight" type="int" line="1735">
                <params>
                    <param name="tabPlacement" type="int"/>
                </params>
                <declaration name="metrics" type="FontMetrics" line="1736"/>
                <declaration name="tabCount" type="int" line="1737"/>
                <declaration name="result" type="int" line="1738"/>
                <declaration name="fontHeight" type="int" line="1739"/>
                <scope line="1740"/>
            </method>
            <method name="calculateTabWidth" type="int" line="1746">
                <params>
                    <param name="tabPlacement" type="int"/>
                    <param name="tabIndex" type="int"/>
                    <param name="metrics" type="FontMetrics"/>
                </params>
                <comment line="1760">
                    html                    
                </comment>
                <comment line="1763">
                    plain text                    
                </comment>
                <declaration name="tabInsets" type="Insets" line="1747"/>
                <declaration name="width" type="int" line="1748"/>
                <declaration name="tabComponent" type="Component" line="1749"/>
                <scope line="1750"/>
                <scope line="1752">
                    <declaration name="icon" type="Icon" line="1753"/>
                    <scope line="1754"/>
                    <declaration name="v" type="View" line="1757"/>
                    <scope line="1758"/>
                    <scope line="1761">
                        <declaration name="title" type="String" line="1763"/>
                    </scope>
                </scope>
            </method>
            <method name="calculateMaxTabWidth" type="int" line="1770">
                <params>
                    <param name="tabPlacement" type="int"/>
                </params>
                <declaration name="metrics" type="FontMetrics" line="1771"/>
                <declaration name="tabCount" type="int" line="1772"/>
                <declaration name="result" type="int" line="1773"/>
                <scope line="1774"/>
            </method>
            <method name="calculateTabAreaHeight" type="int" line="1780">
                <params>
                    <param name="tabPlacement" type="int"/>
                    <param name="horizRunCount" type="int"/>
                    <param name="maxTabHeight" type="int"/>
                </params>
                <declaration name="tabAreaInsets" type="Insets" line="1781"/>
                <declaration name="tabRunOverlay" type="int" line="1782"/>
            </method>
            <method name="calculateTabAreaWidth" type="int" line="1789">
                <params>
                    <param name="tabPlacement" type="int"/>
                    <param name="vertRunCount" type="int"/>
                    <param name="maxTabWidth" type="int"/>
                </params>
                <declaration name="tabAreaInsets" type="Insets" line="1790"/>
                <declaration name="tabRunOverlay" type="int" line="1791"/>
            </method>
            <method name="getTabInsets" type="Insets" line="1798">
                <params>
                    <param name="tabPlacement" type="int"/>
                    <param name="tabIndex" type="int"/>
                </params>
            </method>
            <method name="getSelectedTabPadInsets" type="Insets" line="1802">
                <params>
                    <param name="tabPlacement" type="int"/>
                </params>
            </method>
            <method name="getTabAreaInsets" type="Insets" line="1807">
                <params>
                    <param name="tabPlacement" type="int"/>
                </params>
            </method>
            <method name="getContentBorderInsets" type="Insets" line="1812">
                <params>
                    <param name="tabPlacement" type="int"/>
                </params>
            </method>
            <method name="getFontMetrics" type="FontMetrics" line="1816">
                <declaration name="font" type="Font" line="1817"/>
            </method>
            <method name="navigateSelectedTab" type="void" line="1824">
                <params>
                    <param name="direction" type="int"/>
                </params>
                <comment line="1833">
                    If we have no tabs then don&apos;t navigate.                    
                </comment>
                <declaration name="tabPlacement" type="int" line="1825"/>
                <declaration name="current" type="int" line="1826"/>
                <declaration name="tabCount" type="int" line="1829"/>
                <declaration name="leftToRight" type="boolean" line="1830"/>
                <scope line="1833"/>
                <declaration name="offset" type="int" line="1837"/>
                <scope line="1884"/>
                <scope line="1886"/>
                <scope line="1891"/>
                <scope line="1893"/>
            </method>
            <method name="selectNextTabInRun" type="void" line="1902">
                <params>
                    <param name="current" type="int"/>
                </params>
                <declaration name="tabCount" type="int" line="1903"/>
                <declaration name="tabIndex" type="int" line="1904"/>
                <scope line="1906"/>
            </method>
            <method name="selectPreviousTabInRun" type="void" line="1912">
                <params>
                    <param name="current" type="int"/>
                </params>
                <declaration name="tabCount" type="int" line="1913"/>
                <declaration name="tabIndex" type="int" line="1914"/>
                <scope line="1916"/>
            </method>
            <method name="selectNextTab" type="void" line="1922">
                <params>
                    <param name="current" type="int"/>
                </params>
                <declaration name="tabIndex" type="int" line="1923"/>
                <scope line="1925"/>
            </method>
            <method name="selectPreviousTab" type="void" line="1931">
                <params>
                    <param name="current" type="int"/>
                </params>
                <declaration name="tabIndex" type="int" line="1932"/>
                <scope line="1934"/>
            </method>
            <method name="selectAdjacentRunTab" type="void" line="1941">
                <params>
                    <param name="tabPlacement" type="int"/>
                    <param name="tabIndex" type="int"/>
                    <param name="offset" type="int"/>
                </params>
                <scope line="1942"/>
                <declaration name="newIndex" type="int" line="1945"/>
                <declaration name="r" type="Rectangle" line="1946"/>
                <scope line="1959">
                    <scope line="1960"/>
                </scope>
            </method>
            <method name="navigateTo" type="void" line="1967">
                <params>
                    <param name="index" type="int"/>
                </params>
                <comment line="1973">
                    Just move focus (not selection)                    
                </comment>
                <scope line="1969"/>
                <scope line="1971"/>
            </method>
            <method name="setFocusIndex" type="void" line="1977">
                <params>
                    <param name="index" type="int"/>
                    <param name="repaint" type="boolean"/>
                </params>
                <scope line="1978"/>
                <scope line="1983"/>
            </method>
            <javadoc line="1988">
                Repaints the specified tab.                
            </javadoc>
            <method name="repaintTab" type="void" line="1991">
                <params>
                    <param name="index" type="int"/>
                </params>
                <comment line="1993">
                    If we&apos;re not valid that means we will shortly be validated and
                     painted, which means we don&apos;t have to do anything here.                    
                </comment>
                <scope line="1994"/>
            </method>
            <javadoc line="1999">
                Makes sure the focusIndex is valid.                
            </javadoc>
            <method name="validateFocusIndex" type="void" line="2002">
                <scope line="2003"/>
            </method>
            <javadoc line="2008">
                Returns the index of the tab that has focus.                
                <return>
                    index of tab that has focus                    
                </return>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="getFocusIndex" type="int" line="2014"/>
            <method name="getTabRunOffset" type="int" line="2019">
                <params>
                    <param name="tabPlacement" type="int"/>
                    <param name="tabCount" type="int"/>
                    <param name="tabIndex" type="int"/>
                    <param name="forward" type="boolean"/>
                </params>
                <declaration name="run" type="int" line="2020"/>
                <declaration name="offset" type="int" line="2021"/>
                <scope line="2023">
                    <scope line="2024"/>
                    <scope line="2029"/>
                    <scope line="2033"/>
                </scope>
                <scope line="2038">
                    <scope line="2039"/>
                    <scope line="2043"/>
                    <scope line="2047"/>
                </scope>
                <scope line="2052">
                    <scope line="2053"/>
                    <scope line="2057"/>
                    <scope line="2061"/>
                </scope>
                <scope line="2067">
                    <scope line="2068"/>
                    <scope line="2072"/>
                    <scope line="2076"/>
                </scope>
            </method>
            <method name="getPreviousTabIndex" type="int" line="2084">
                <params>
                    <param name="base" type="int"/>
                </params>
                <declaration name="tabIndex" type="int" line="2085"/>
            </method>
            <method name="getNextTabIndex" type="int" line="2089">
                <params>
                    <param name="base" type="int"/>
                </params>
            </method>
            <method name="getNextTabIndexInRun" type="int" line="2093">
                <params>
                    <param name="tabCount" type="int"/>
                    <param name="base" type="int"/>
                </params>
                <scope line="2094"/>
                <declaration name="currentRun" type="int" line="2097"/>
                <declaration name="next" type="int" line="2098"/>
                <scope line="2099"/>
            </method>
            <method name="getPreviousTabIndexInRun" type="int" line="2105">
                <params>
                    <param name="tabCount" type="int"/>
                    <param name="base" type="int"/>
                </params>
                <scope line="2106"/>
                <declaration name="currentRun" type="int" line="2109"/>
                <scope line="2110">
                    <declaration name="previous" type="int" line="2111"/>
                </scope>
            </method>
            <method name="getPreviousTabRun" type="int" line="2117">
                <params>
                    <param name="baseRun" type="int"/>
                </params>
                <declaration name="runIndex" type="int" line="2118"/>
            </method>
            <method name="getNextTabRun" type="int" line="2122">
                <params>
                    <param name="baseRun" type="int"/>
                </params>
            </method>
            <method name="rotateInsets" type="void" line="2126">
                <params>
                    <param name="topInsets" type="Insets"/>
                    <param name="targetInsets" type="Insets"/>
                    <param name="targetPlacement" type="int"/>
                </params>
            </method>
            <method name="requestFocusForVisibleComponent" type="boolean" line="2159"/>
            <class name="Actions" line="2163">
                <extends class="UIAction"/>
                <comment line="2733">
                    Rotates the run-index array so that the selected run is run[0]                    
                </comment>
                <comment line="3512">
                    PropertyChangeListener                    
                </comment>
                <comment line="3597">
                    ChangeListener                    
                </comment>
                <comment line="3616">
                    MouseListener                    
                </comment>
                <comment line="3654">
                    MouseMotionListener                    
                </comment>
                <comment line="3664">
                    FocusListener                    
                </comment>
                <comment line="3675">
                    ContainerListener                    
                </comment>
                <comment line="3678">
                    GES 2399:
                    The container listener code was added to support HTML
                    rendering of tab titles.
                    
                    Ideally, we would be able to listen for property changes
                    when a tab is added or its text modified.  At the moment
                    there are no such events because the Beans spec doesn&apos;t
                    allow &apos;indexed&apos; property changes (i.e. tab 2&apos;s text changed
                    from A to B).
                    
                    In order to get around this, we listen for tabs to be added
                    or removed by listening for the container events.  we then
                    queue up a runnable (so the component has a chance to complete
                    the add) which checks the tab title of the new component to see
                    if it requires HTML rendering.
                    
                    The Views (one per tab title requiring HTML rendering) are
                    stored in the htmlViews Vector, which is only allocated after
                    the first time we run into an HTML tab.  Note that this vector
                    is kept in step with the number of pages, and nulls are added
                    for those pages whose tab title do not require HTML rendering.
                    
                    This makes it easy for the paint and layout code to tell
                    whether to invoke the HTML engine without having to check
                    the string during time-sensitive operations.
                    
                    When we have added a way to listen for tab additions and
                    changes to tab text, this code should be removed and                    
                </comment>
                <comment line="3750">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3764">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3778">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3792">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <declaration name="NEXT" type="String" line="2164"/>
                <declaration name="PREVIOUS" type="String" line="2165"/>
                <declaration name="RIGHT" type="String" line="2166"/>
                <declaration name="LEFT" type="String" line="2167"/>
                <declaration name="UP" type="String" line="2168"/>
                <declaration name="DOWN" type="String" line="2169"/>
                <declaration name="PAGE_UP" type="String" line="2170"/>
                <declaration name="PAGE_DOWN" type="String" line="2171"/>
                <declaration name="REQUEST_FOCUS" type="String" line="2172"/>
                <declaration name="REQUEST_FOCUS_FOR_VISIBLE" type="String" line="2173"/>
                <declaration name="SET_SELECTED" type="String" line="2175"/>
                <declaration name="SELECT_FOCUSED" type="String" line="2176"/>
                <declaration name="SCROLL_FORWARD" type="String" line="2177"/>
                <declaration name="SCROLL_BACKWARD" type="String" line="2178"/>
                <method name="Actions" type="constructor" line="2180">
                    <params>
                        <param name="key" type="String"/>
                    </params>
                </method>
                <method name="actionPerformed" type="void" line="2184">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                    <declaration name="key" type="String" line="2185"/>
                    <declaration name="pane" type="JTabbedPane" line="2186"/>
                    <declaration name="ui" type="BasicTabbedPaneUI" line="2187"/>
                    <scope line="2190"/>
                    <scope line="2193"/>
                    <scope line="2196"/>
                    <scope line="2199"/>
                    <scope line="2202"/>
                    <scope line="2205"/>
                    <scope line="2208"/>
                    <scope line="2211">
                        <declaration name="tabPlacement" type="int" line="2212"/>
                        <scope line="2213"/>
                        <scope line="2215"/>
                    </scope>
                    <scope line="2219">
                        <declaration name="tabPlacement" type="int" line="2220"/>
                        <scope line="2221"/>
                        <scope line="2223"/>
                    </scope>
                    <scope line="2227"/>
                    <scope line="2230"/>
                    <scope line="2233">
                        <declaration name="command" type="String" line="2234"/>
                        <scope line="2236">
                            <declaration name="mnemonic" type="int" line="2237"/>
                            <scope line="2238"/>
                            <declaration name="index" type="Integer" line="2241"/>
                            <scope line="2242"/>
                        </scope>
                    </scope>
                    <scope line="2247">
                        <declaration name="focusIndex" type="int" line="2248"/>
                        <scope line="2249"/>
                    </scope>
                    <scope line="2253">
                        <scope line="2254"/>
                    </scope>
                    <scope line="2258">
                        <scope line="2259"/>
                    </scope>
                </method>
            </class>
            <class name="TabbedPaneLayout" line="2266">
                <comment line="2733">
                    Rotates the run-index array so that the selected run is run[0]                    
                </comment>
                <comment line="3512">
                    PropertyChangeListener                    
                </comment>
                <comment line="3597">
                    ChangeListener                    
                </comment>
                <comment line="3616">
                    MouseListener                    
                </comment>
                <comment line="3654">
                    MouseMotionListener                    
                </comment>
                <comment line="3664">
                    FocusListener                    
                </comment>
                <comment line="3675">
                    ContainerListener                    
                </comment>
                <comment line="3678">
                    GES 2399:
                    The container listener code was added to support HTML
                    rendering of tab titles.
                    
                    Ideally, we would be able to listen for property changes
                    when a tab is added or its text modified.  At the moment
                    there are no such events because the Beans spec doesn&apos;t
                    allow &apos;indexed&apos; property changes (i.e. tab 2&apos;s text changed
                    from A to B).
                    
                    In order to get around this, we listen for tabs to be added
                    or removed by listening for the container events.  we then
                    queue up a runnable (so the component has a chance to complete
                    the add) which checks the tab title of the new component to see
                    if it requires HTML rendering.
                    
                    The Views (one per tab title requiring HTML rendering) are
                    stored in the htmlViews Vector, which is only allocated after
                    the first time we run into an HTML tab.  Note that this vector
                    is kept in step with the number of pages, and nulls are added
                    for those pages whose tab title do not require HTML rendering.
                    
                    This makes it easy for the paint and layout code to tell
                    whether to invoke the HTML engine without having to check
                    the string during time-sensitive operations.
                    
                    When we have added a way to listen for tab additions and
                    changes to tab text, this code should be removed and                    
                </comment>
                <comment line="3750">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3764">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3778">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3792">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <implements interface="LayoutManager"/>
                <javadoc line="2266">
                    This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of BasicTabbedPaneUI.                    
                </javadoc>
                <method name="addLayoutComponent" type="void" line="2272">
                    <params>
                        <param name="name" type="String"/>
                        <param name="comp" type="Component"/>
                    </params>
                </method>
                <method name="removeLayoutComponent" type="void" line="2274">
                    <params>
                        <param name="comp" type="Component"/>
                    </params>
                </method>
                <method name="preferredLayoutSize" type="Dimension" line="2276">
                    <params>
                        <param name="parent" type="Container"/>
                    </params>
                </method>
                <method name="minimumLayoutSize" type="Dimension" line="2280">
                    <params>
                        <param name="parent" type="Container"/>
                    </params>
                </method>
                <method name="calculateSize" type="Dimension" line="2284">
                    <params>
                        <param name="minimum" type="boolean"/>
                    </params>
                    <comment line="2297">
                        Determine minimum size required to display largest
                         child in each dimension                        
                    </comment>
                    <comment line="2312">
                        Add content border insets to minimum size                        
                    </comment>
                    <comment line="2317">
                        Calculate how much space the tabs will need, based on the
                         minimum size required to display largest child + content border                        
                    </comment>
                    <declaration name="tabPlacement" type="int" line="2285"/>
                    <declaration name="insets" type="Insets" line="2286"/>
                    <declaration name="contentInsets" type="Insets" line="2287"/>
                    <declaration name="tabAreaInsets" type="Insets" line="2288"/>
                    <declaration name="zeroSize" type="Dimension" line="2290"/>
                    <declaration name="height" type="int" line="2291"/>
                    <declaration name="width" type="int" line="2292"/>
                    <declaration name="cWidth" type="int" line="2293"/>
                    <declaration name="cHeight" type="int" line="2294"/>
                    <scope line="2299">
                        <declaration name="component" type="Component" line="2300"/>
                        <scope line="2301">
                            <declaration name="size" type="Dimension" line="2302"/>
                            <scope line="2305"/>
                        </scope>
                    </scope>
                    <declaration name="tabExtent" type="int" line="2314"/>
                </method>
                <method name="preferredTabAreaHeight" type="int" line="2338">
                    <params>
                        <param name="tabPlacement" type="int"/>
                        <param name="width" type="int"/>
                    </params>
                    <declaration name="metrics" type="FontMetrics" line="2339"/>
                    <declaration name="tabCount" type="int" line="2340"/>
                    <declaration name="total" type="int" line="2341"/>
                    <scope line="2342">
                        <declaration name="rows" type="int" line="2343"/>
                        <declaration name="x" type="int" line="2344"/>
                        <declaration name="maxTabHeight" type="int" line="2346"/>
                        <scope line="2348">
                            <declaration name="tabWidth" type="int" line="2349"/>
                            <scope line="2351"/>
                        </scope>
                    </scope>
                </method>
                <method name="preferredTabAreaWidth" type="int" line="2362">
                    <params>
                        <param name="tabPlacement" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <declaration name="metrics" type="FontMetrics" line="2363"/>
                    <declaration name="tabCount" type="int" line="2364"/>
                    <declaration name="total" type="int" line="2365"/>
                    <scope line="2366">
                        <declaration name="columns" type="int" line="2367"/>
                        <declaration name="y" type="int" line="2368"/>
                        <declaration name="fontHeight" type="int" line="2369"/>
                        <scope line="2373">
                            <declaration name="tabHeight" type="int" line="2374"/>
                            <scope line="2376"/>
                        </scope>
                    </scope>
                </method>
                <method name="layoutContainer" type="void" line="2387">
                    <params>
                        <param name="parent" type="Container"/>
                    </params>
                    <comment line="2389">
                        Some of the code in this method deals with changing the
                         visibility of components to hide and show the contents for the
                         selected tab. This is older code that has since been duplicated
                         in JTabbedPane.fireStateChanged(), so as to allow visibility
                         changes to happen sooner (see the note there). This code remains
                         for backward compatibility as there are some cases, such as
                         subclasses that don&apos;t fireStateChanged() where it may be used.
                         Any changes here need to be kept in synch with
                         JTabbedPane.fireStateChanged().                        
                    </comment>
                    <comment line="2412">
                        The last tab was removed, so remove the component                        
                    </comment>
                    <comment line="2425">
                        In order to allow programs to use a single component
                         as the display for multiple tabs, we will not change
                         the visible compnent if the currently selected tab
                         has a null component.  This is a bit dicey, as we don&apos;t
                         explicitly state we support this in the spec, but since
                         programs are now depending on this, we&apos;re making it work.                        
                    </comment>
                    <declaration name="tabPlacement" type="int" line="2401"/>
                    <declaration name="insets" type="Insets" line="2402"/>
                    <declaration name="selectedIndex" type="int" line="2403"/>
                    <declaration name="visibleComponent" type="Component" line="2404"/>
                    <declaration name="selectedComponent" type="Component" line="2408"/>
                    <scope line="2409">
                        <scope line="2410"/>
                    </scope>
                    <scope line="2414"/>
                    <declaration name="cx" type="int" line="2417"/>
                    <declaration name="totalTabWidth" type="int" line="2418"/>
                    <declaration name="totalTabHeight" type="int" line="2419"/>
                    <declaration name="contentInsets" type="Insets" line="2420"/>
                    <declaration name="shouldChangeFocus" type="boolean" line="2422"/>
                    <scope line="2431">
                        <scope line="2433">
                            <scope line="2434"/>
                        </scope>
                    </scope>
                    <declaration name="bounds" type="Rectangle" line="2441"/>
                    <declaration name="numChildren" type="int" line="2442"/>
                    <scope line="2444">
                        <scope line="2476">
                            <declaration name="child" type="Component" line="2477"/>
                            <scope line="2478">
                                <declaration name="tabContainerWidth" type="int" line="2480"/>
                                <declaration name="tabContainerHeight" type="int" line="2483"/>
                                <declaration name="tabContainerX" type="int" line="2487"/>
                                <declaration name="tabContainerY" type="int" line="2488"/>
                                <scope line="2489"/>
                                <scope line="2491"/>
                            </scope>
                            <scope line="2495"/>
                        </scope>
                    </scope>
                    <scope line="2501">
                        <scope line="2502"/>
                    </scope>
                </method>
                <method name="calculateLayoutInfo" type="void" line="2508">
                    <declaration name="tabCount" type="int" line="2509"/>
                </method>
                <method name="layoutTabComponents" type="void" line="2515">
                    <comment line="2537">
                        centralize component                        
                    </comment>
                    <scope line="2516"/>
                    <declaration name="rect" type="Rectangle" line="2519"/>
                    <declaration name="delta" type="Point" line="2520"/>
                    <scope line="2521"/>
                    <scope line="2524">
                        <declaration name="c" type="Component" line="2525"/>
                        <scope line="2526"/>
                        <declaration name="preferredSize" type="Dimension" line="2530"/>
                        <declaration name="insets" type="Insets" line="2531"/>
                        <declaration name="outerX" type="int" line="2532"/>
                        <declaration name="outerY" type="int" line="2533"/>
                        <declaration name="outerWidth" type="int" line="2534"/>
                        <declaration name="outerHeight" type="int" line="2535"/>
                        <declaration name="x" type="int" line="2537"/>
                        <declaration name="y" type="int" line="2538"/>
                        <declaration name="tabPlacement" type="int" line="2539"/>
                        <declaration name="isSeleceted" type="boolean" line="2540"/>
                    </scope>
                </method>
                <method name="calculateTabRects" type="void" line="2547">
                    <params>
                        <param name="tabPlacement" type="int"/>
                        <param name="tabCount" type="int"/>
                    </params>
                    <comment line="2562">
                        Calculate bounds within which a tab run must fit                        
                    </comment>
                    <comment line="2602">
                        Run through tabs and partition them into runs                        
                    </comment>
                    <comment line="2608">
                        Tabs on TOP or BOTTOM....                        
                    </comment>
                    <comment line="2620">
                        Never move a TAB down a run if it is in the first column.
                         Even if there isn&apos;t enough room, moving it to a fresh
                         line won&apos;t help.                        
                    </comment>
                    <comment line="2631">
                        Initialize y position in case there&apos;s just one run                        
                    </comment>
                    <comment line="2633">
                                                
                    </comment>
                    <comment line="2636">
                        Tabs on LEFT or RIGHT...                        
                    </comment>
                    <comment line="2648">
                        Never move a TAB over a run if it is in the first run.
                         Even if there isn&apos;t enough room, moving it to a fresh
                         column won&apos;t help.                        
                    </comment>
                    <comment line="2659">
                        Initialize x position in case there&apos;s just one column                        
                    </comment>
                    <comment line="2661">
                                                
                    </comment>
                    <comment line="2670">
                        Re-distribute tabs in case last run has leftover space                        
                    </comment>
                    <comment line="2675">
                        Rotate run array so that selected run is first                        
                    </comment>
                    <comment line="2681">
                        Step through runs from back to front to calculate
                         tab y locations and to pad runs appropriately                        
                    </comment>
                    <comment line="2718">
                        Pad the selected tab so that it appears raised in front                        
                    </comment>
                    <comment line="2721">
                        if right to left and tab placement on the top or
                         the bottom, flip x positions and adjust by widths                        
                    </comment>
                    <declaration name="metrics" type="FontMetrics" line="2548"/>
                    <declaration name="size" type="Dimension" line="2549"/>
                    <declaration name="insets" type="Insets" line="2550"/>
                    <declaration name="tabAreaInsets" type="Insets" line="2551"/>
                    <declaration name="fontHeight" type="int" line="2552"/>
                    <declaration name="selectedIndex" type="int" line="2553"/>
                    <declaration name="tabRunOverlay" type="int" line="2554"/>
                    <declaration name="i" type="int" line="2555"/>
                    <declaration name="x" type="int" line="2556"/>
                    <declaration name="returnAt" type="int" line="2557"/>
                    <declaration name="verticalTabRuns" type="boolean" line="2558"/>
                    <declaration name="leftToRight" type="boolean" line="2559"/>
                    <scope line="2597"/>
                    <declaration name="rect" type="Rectangle" line="2602"/>
                    <scope line="2603">
                        <scope line="2606">
                            <scope line="2608"/>
                            <scope line="2610"/>
                            <scope line="2622">
                                <scope line="2623"/>
                            </scope>
                        </scope>
                        <scope line="2634">
                            <scope line="2636"/>
                            <scope line="2638"/>
                            <scope line="2650">
                                <scope line="2651"/>
                            </scope>
                        </scope>
                        <scope line="2663"/>
                    </scope>
                    <scope line="2668">
                        <scope line="2675"/>
                    </scope>
                    <scope line="2682">
                        <declaration name="start" type="int" line="2683"/>
                        <declaration name="next" type="int" line="2684"/>
                        <declaration name="end" type="int" line="2685"/>
                        <scope line="2686">
                            <scope line="2687"/>
                            <scope line="2692"/>
                            <scope line="2695"/>
                            <scope line="2697"/>
                        </scope>
                        <scope line="2700">
                            <scope line="2701"/>
                            <scope line="2706"/>
                            <scope line="2709"/>
                            <scope line="2711"/>
                        </scope>
                    </scope>
                    <scope line="2722">
                        <declaration name="rightMargin" type="int" line="2723"/>
                        <scope line="2725"/>
                    </scope>
                </method>
                <method name="rotateTabRuns" type="void" line="2735">
                    <params>
                        <param name="tabPlacement" type="int"/>
                        <param name="selectedRun" type="int"/>
                    </params>
                    <scope line="2736">
                        <declaration name="save" type="int" line="2737"/>
                        <scope line="2738"/>
                    </scope>
                </method>
                <method name="normalizeTabRuns" type="void" line="2746">
                    <params>
                        <param name="tabPlacement" type="int"/>
                        <param name="tabCount" type="int"/>
                        <param name="start" type="int"/>
                        <param name="max" type="int"/>
                    </params>
                    <comment line="2753">
                        At this point the tab runs are packed to fit as many
                         tabs as possible, which can leave the last run with a lot
                         of extra space (resulting in very fat tabs on the last run).
                         So we&apos;ll attempt to distribute this extra space more evenly
                         across the runs in order to make the runs look more consistent.
                        
                         Starting with the last run, determine whether the last tab in
                         the previous run would fit (generously) in this run; if so,
                         move tab to current run and shift tabs accordingly.  Cycle
                         through remaining runs using the same algorithm.                        
                    </comment>
                    <comment line="2778">
                        Check if the run has enough extra space to fit the last tab
                         from the previous row...                        
                    </comment>
                    <comment line="2782">
                        Insert tab from previous row and shift rest over                        
                    </comment>
                    <comment line="2798">
                        no more room left in last run, so we&apos;re done!                        
                    </comment>
                    <comment line="2802">
                        check previous run next...                        
                    </comment>
                    <comment line="2805">
                        check last run again...but require a higher ratio
                         of extraspace-to-tabsize because we don&apos;t want to
                         end up with too many tabs on the last run!                        
                    </comment>
                    <declaration name="verticalTabRuns" type="boolean" line="2747"/>
                    <declaration name="run" type="int" line="2748"/>
                    <declaration name="keepAdjusting" type="boolean" line="2749"/>
                    <declaration name="weight" type="double" line="2750"/>
                    <scope line="2763">
                        <declaration name="last" type="int" line="2764"/>
                        <declaration name="prevLast" type="int" line="2765"/>
                        <declaration name="end" type="int" line="2766"/>
                        <declaration name="prevLastLen" type="int" line="2767"/>
                        <scope line="2769"/>
                        <scope line="2772"/>
                        <scope line="2779">
                            <scope line="2783"/>
                            <scope line="2785"/>
                            <scope line="2788">
                                <scope line="2789"/>
                                <scope line="2791"/>
                            </scope>
                        </scope>
                        <scope line="2796"/>
                        <scope line="2800"/>
                        <scope line="2803"/>
                    </scope>
                </method>
                <method name="padTabRun" type="void" line="2813">
                    <params>
                        <param name="tabPlacement" type="int"/>
                        <param name="start" type="int"/>
                        <param name="end" type="int"/>
                        <param name="max" type="int"/>
                    </params>
                    <declaration name="lastRect" type="Rectangle" line="2814"/>
                    <scope line="2815">
                        <declaration name="runWidth" type="int" line="2816"/>
                        <declaration name="deltaWidth" type="int" line="2817"/>
                        <declaration name="factor" type="float" line="2818"/>
                        <scope line="2820">
                            <declaration name="pastRect" type="Rectangle" line="2821"/>
                            <scope line="2822"/>
                        </scope>
                    </scope>
                    <scope line="2828">
                        <declaration name="runHeight" type="int" line="2829"/>
                        <declaration name="deltaHeight" type="int" line="2830"/>
                        <declaration name="factor" type="float" line="2831"/>
                        <scope line="2833">
                            <declaration name="pastRect" type="Rectangle" line="2834"/>
                            <scope line="2835"/>
                        </scope>
                    </scope>
                </method>
                <method name="padSelectedTab" type="void" line="2844">
                    <params>
                        <param name="tabPlacement" type="int"/>
                        <param name="selectedIndex" type="int"/>
                    </params>
                    <comment line="2855">
                        WRAP_TAB_LAYOUT                        
                    </comment>
                    <comment line="2856">
                        do not expand selected tab more then necessary                        
                    </comment>
                    <scope line="2846">
                        <declaration name="selRect" type="Rectangle" line="2847"/>
                        <declaration name="padInsets" type="Insets" line="2848"/>
                        <scope line="2854">
                            <declaration name="size" type="Dimension" line="2856"/>
                            <declaration name="insets" type="Insets" line="2857"/>
                            <scope line="2859">
                                <declaration name="top" type="int" line="2860"/>
                                <scope line="2861"/>
                                <declaration name="bottom" type="int" line="2865"/>
                                <scope line="2866"/>
                            </scope>
                            <scope line="2869">
                                <declaration name="left" type="int" line="2870"/>
                                <scope line="2871"/>
                                <declaration name="right" type="int" line="2875"/>
                                <scope line="2876"/>
                            </scope>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="TabbedPaneScrollLayout" line="2885">
                <extends class="TabbedPaneLayout"/>
                <comment line="2733">
                    Rotates the run-index array so that the selected run is run[0]                    
                </comment>
                <comment line="3512">
                    PropertyChangeListener                    
                </comment>
                <comment line="3597">
                    ChangeListener                    
                </comment>
                <comment line="3616">
                    MouseListener                    
                </comment>
                <comment line="3654">
                    MouseMotionListener                    
                </comment>
                <comment line="3664">
                    FocusListener                    
                </comment>
                <comment line="3675">
                    ContainerListener                    
                </comment>
                <comment line="3678">
                    GES 2399:
                    The container listener code was added to support HTML
                    rendering of tab titles.
                    
                    Ideally, we would be able to listen for property changes
                    when a tab is added or its text modified.  At the moment
                    there are no such events because the Beans spec doesn&apos;t
                    allow &apos;indexed&apos; property changes (i.e. tab 2&apos;s text changed
                    from A to B).
                    
                    In order to get around this, we listen for tabs to be added
                    or removed by listening for the container events.  we then
                    queue up a runnable (so the component has a chance to complete
                    the add) which checks the tab title of the new component to see
                    if it requires HTML rendering.
                    
                    The Views (one per tab title requiring HTML rendering) are
                    stored in the htmlViews Vector, which is only allocated after
                    the first time we run into an HTML tab.  Note that this vector
                    is kept in step with the number of pages, and nulls are added
                    for those pages whose tab title do not require HTML rendering.
                    
                    This makes it easy for the paint and layout code to tell
                    whether to invoke the HTML engine without having to check
                    the string during time-sensitive operations.
                    
                    When we have added a way to listen for tab additions and
                    changes to tab text, this code should be removed and                    
                </comment>
                <comment line="3750">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3764">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3778">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3792">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <method name="preferredTabAreaHeight" type="int" line="2887">
                    <params>
                        <param name="tabPlacement" type="int"/>
                        <param name="width" type="int"/>
                    </params>
                </method>
                <method name="preferredTabAreaWidth" type="int" line="2891">
                    <params>
                        <param name="tabPlacement" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                </method>
                <method name="layoutContainer" type="void" line="2895">
                    <params>
                        <param name="parent" type="Container"/>
                    </params>
                    <comment line="2897">
                        Some of the code in this method deals with changing the
                         visibility of components to hide and show the contents for the
                         selected tab. This is older code that has since been duplicated
                         in JTabbedPane.fireStateChanged(), so as to allow visibility
                         changes to happen sooner (see the note there). This code remains
                         for backward compatibility as there are some cases, such as
                         subclasses that don&apos;t fireStateChanged() where it may be used.
                         Any changes here need to be kept in synch with
                         JTabbedPane.fireStateChanged().                        
                    </comment>
                    <comment line="2921">
                        The last tab was removed, so remove the component                        
                    </comment>
                    <comment line="2937">
                        In order to allow programs to use a single component
                         as the display for multiple tabs, we will not change
                         the visible compnent if the currently selected tab
                         has a null component.  This is a bit dicey, as we don&apos;t
                         explicitly state we support this in the spec, but since
                         programs are now depending on this, we&apos;re making it work.                        
                    </comment>
                    <comment line="2953">
                        tab area bounds                        
                    </comment>
                    <comment line="2954">
                        content area bounds                        
                    </comment>
                    <comment line="2962">
                        calculate tab area bounds                        
                    </comment>
                    <comment line="2968">
                        calculate content area bounds                        
                    </comment>
                    <comment line="2977">
                        calculate tab area bounds                        
                    </comment>
                    <comment line="2983">
                        calculate content area bounds                        
                    </comment>
                    <comment line="2992">
                        calculate tab area bounds                        
                    </comment>
                    <comment line="2998">
                        calculate content area bounds                        
                    </comment>
                    <comment line="3008">
                        calculate tab area bounds                        
                    </comment>
                    <comment line="3014">
                        calculate content area bounds                        
                    </comment>
                    <comment line="3037">
                        Allow space for scrollbuttons                        
                    </comment>
                    <comment line="3040">
                        Scrolled to the end, so ensure the viewport size is
                         such that the scroll offset aligns with a tab                        
                    </comment>
                    <comment line="3051">
                        Need to allow space for scrollbuttons                        
                    </comment>
                    <comment line="3054">
                        Scrolled to the end, so ensure the viewport size is
                         such that the scroll offset aligns with a tab                        
                    </comment>
                    <comment line="3105">
                        All content children...                        
                    </comment>
                    <declaration name="tabPlacement" type="int" line="2909"/>
                    <declaration name="tabCount" type="int" line="2910"/>
                    <declaration name="insets" type="Insets" line="2911"/>
                    <declaration name="selectedIndex" type="int" line="2912"/>
                    <declaration name="visibleComponent" type="Component" line="2913"/>
                    <declaration name="selectedComponent" type="Component" line="2917"/>
                    <scope line="2918">
                        <scope line="2919"/>
                    </scope>
                    <scope line="2923"/>
                    <scope line="2927"/>
                    <declaration name="shouldChangeFocus" type="boolean" line="2934"/>
                    <scope line="2943">
                        <scope line="2945">
                            <scope line="2946"/>
                        </scope>
                    </scope>
                    <declaration name="tx" type="int" line="2952"/>
                    <declaration name="cx" type="int" line="2953"/>
                    <declaration name="contentInsets" type="Insets" line="2954"/>
                    <declaration name="bounds" type="Rectangle" line="2955"/>
                    <declaration name="numChildren" type="int" line="2956"/>
                    <scope line="2958">
                        <scope line="3022">
                            <declaration name="child" type="Component" line="3023"/>
                            <scope line="3025">
                                <declaration name="viewport" type="JViewport" line="3026"/>
                                <declaration name="viewRect" type="Rectangle" line="3027"/>
                                <declaration name="vw" type="int" line="3028"/>
                                <declaration name="vh" type="int" line="3029"/>
                                <declaration name="butSize" type="Dimension" line="3030"/>
                                <declaration name="totalTabHeight" type="int" line="3034"/>
                                <scope line="3035">
                                    <scope line="3038"/>
                                </scope>
                                <declaration name="totalTabWidth" type="int" line="3048"/>
                                <scope line="3049">
                                    <scope line="3052"/>
                                </scope>
                            </scope>
                            <scope line="3063">
                                <declaration name="scrollbutton" type="Component" line="3064"/>
                                <declaration name="bsize" type="Dimension" line="3065"/>
                                <declaration name="bx" type="int" line="3066"/>
                                <declaration name="by" type="int" line="3067"/>
                                <declaration name="bw" type="int" line="3068"/>
                                <declaration name="bh" type="int" line="3069"/>
                                <declaration name="visible" type="boolean" line="3070"/>
                                <declaration name="totalTabHeight" type="int" line="3075"/>
                                <scope line="3076"/>
                                <declaration name="totalTabWidth" type="int" line="3088"/>
                                <scope line="3090"/>
                                <scope line="3099"/>
                            </scope>
                            <scope line="3103"/>
                        </scope>
                        <scope line="3110">
                            <scope line="3111"/>
                        </scope>
                    </scope>
                </method>
                <method name="layoutCroppedEdge" type="void" line="3118">
                    <declaration name="viewRect" type="Rectangle" line="3120"/>
                    <declaration name="cropline" type="int" line="3121"/>
                    <scope line="3122">
                        <declaration name="tabRect" type="Rectangle" line="3123"/>
                        <scope line="3128"/>
                        <scope line="3137"/>
                    </scope>
                </method>
                <method name="calculateTabRects" type="void" line="3145">
                    <params>
                        <param name="tabPlacement" type="int"/>
                        <param name="tabCount" type="int"/>
                    </params>
                    <comment line="3161">
                        Calculate bounds within which a tab run must fit                        
                    </comment>
                    <comment line="3185">
                        Run through tabs and lay them out in a single run                        
                    </comment>
                    <comment line="3191">
                        Tabs on TOP or BOTTOM....                        
                    </comment>
                    <comment line="3205">
                                                
                    </comment>
                    <comment line="3208">
                        Tabs on LEFT or RIGHT...                        
                    </comment>
                    <comment line="3222">
                                                
                    </comment>
                    <comment line="3228">
                        Pad the selected tab so that it appears raised in front                        
                    </comment>
                    <comment line="3232">
                        if right to left and tab placement on the top or
                         the bottom, flip x positions and adjust by widths                        
                    </comment>
                    <declaration name="metrics" type="FontMetrics" line="3146"/>
                    <declaration name="size" type="Dimension" line="3147"/>
                    <declaration name="insets" type="Insets" line="3148"/>
                    <declaration name="tabAreaInsets" type="Insets" line="3149"/>
                    <declaration name="fontHeight" type="int" line="3150"/>
                    <declaration name="selectedIndex" type="int" line="3151"/>
                    <declaration name="i" type="int" line="3152"/>
                    <declaration name="verticalTabRuns" type="boolean" line="3153"/>
                    <declaration name="leftToRight" type="boolean" line="3154"/>
                    <declaration name="x" type="int" line="3155"/>
                    <declaration name="y" type="int" line="3156"/>
                    <declaration name="totalWidth" type="int" line="3157"/>
                    <declaration name="totalHeight" type="int" line="3158"/>
                    <scope line="3177"/>
                    <declaration name="rect" type="Rectangle" line="3185"/>
                    <scope line="3186">
                        <scope line="3189">
                            <scope line="3191"/>
                            <scope line="3193"/>
                        </scope>
                        <scope line="3206">
                            <scope line="3208"/>
                            <scope line="3210"/>
                        </scope>
                    </scope>
                    <scope line="3226"/>
                    <scope line="3233">
                        <declaration name="rightMargin" type="int" line="3234"/>
                        <scope line="3236"/>
                    </scope>
                </method>
            </class>
            <class name="ScrollableTabSupport" line="3244">
                <comment line="2733">
                    Rotates the run-index array so that the selected run is run[0]                    
                </comment>
                <comment line="3512">
                    PropertyChangeListener                    
                </comment>
                <comment line="3597">
                    ChangeListener                    
                </comment>
                <comment line="3616">
                    MouseListener                    
                </comment>
                <comment line="3654">
                    MouseMotionListener                    
                </comment>
                <comment line="3664">
                    FocusListener                    
                </comment>
                <comment line="3675">
                    ContainerListener                    
                </comment>
                <comment line="3678">
                    GES 2399:
                    The container listener code was added to support HTML
                    rendering of tab titles.
                    
                    Ideally, we would be able to listen for property changes
                    when a tab is added or its text modified.  At the moment
                    there are no such events because the Beans spec doesn&apos;t
                    allow &apos;indexed&apos; property changes (i.e. tab 2&apos;s text changed
                    from A to B).
                    
                    In order to get around this, we listen for tabs to be added
                    or removed by listening for the container events.  we then
                    queue up a runnable (so the component has a chance to complete
                    the add) which checks the tab title of the new component to see
                    if it requires HTML rendering.
                    
                    The Views (one per tab title requiring HTML rendering) are
                    stored in the htmlViews Vector, which is only allocated after
                    the first time we run into an HTML tab.  Note that this vector
                    is kept in step with the number of pages, and nulls are added
                    for those pages whose tab title do not require HTML rendering.
                    
                    This makes it easy for the paint and layout code to tell
                    whether to invoke the HTML engine without having to check
                    the string during time-sensitive operations.
                    
                    When we have added a way to listen for tab additions and
                    changes to tab text, this code should be removed and                    
                </comment>
                <comment line="3750">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3764">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3778">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3792">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <implements interface="ActionListener"/>
                <implements interface="ChangeListener"/>
                <declaration name="viewport" type="ScrollableTabViewport" line="3246"/>
                <declaration name="tabPanel" type="ScrollableTabPanel" line="3247"/>
                <declaration name="scrollForwardButton" type="JButton" line="3248"/>
                <declaration name="scrollBackwardButton" type="JButton" line="3249"/>
                <declaration name="croppedEdge" type="CroppedEdge" line="3250"/>
                <declaration name="leadingTabIndex" type="int" line="3251"/>
                <declaration name="tabViewPosition" type="Point" line="3253"/>
                <method name="ScrollableTabSupport" type="constructor" line="3255">
                    <params>
                        <param name="tabPlacement" type="int"/>
                    </params>
                </method>
                <javadoc line="3264">
                    Recreates the scroll buttons and adds them to the TabbedPane.                    
                </javadoc>
                <method name="createButtons" type="void" line="3267">
                    <comment line="3280">
                        tabPlacement = LEFT || RIGHT                        
                    </comment>
                    <scope line="3268"/>
                    <declaration name="tabPlacement" type="int" line="3274"/>
                    <scope line="3275"/>
                    <scope line="3279"/>
                </method>
                <method name="scrollForward" type="void" line="3289">
                    <params>
                        <param name="tabPlacement" type="int"/>
                    </params>
                    <comment line="3296">
                        no room left to scroll                        
                    </comment>
                    <comment line="3298">
                        tabPlacement == LEFT || tabPlacement == RIGHT                        
                    </comment>
                    <declaration name="viewSize" type="Dimension" line="3290"/>
                    <declaration name="viewRect" type="Rectangle" line="3291"/>
                    <scope line="3293">
                        <scope line="3294"/>
                    </scope>
                    <scope line="3297">
                        <scope line="3298"/>
                    </scope>
                </method>
                <method name="scrollBackward" type="void" line="3305">
                    <params>
                        <param name="tabPlacement" type="int"/>
                    </params>
                    <comment line="3308">
                        no room left to scroll                        
                    </comment>
                    <scope line="3306"/>
                </method>
                <method name="setLeadingTabIndex" type="void" line="3312">
                    <params>
                        <param name="tabPlacement" type="int"/>
                        <param name="index" type="int"/>
                    </params>
                    <comment line="3324">
                        We&apos;ve scrolled to the end, so adjust the viewport size
                         to ensure the view position remains aligned on a tab boundary                        
                    </comment>
                    <comment line="3336">
                        We&apos;ve scrolled to the end, so adjust the viewport size
                         to ensure the view position remains aligned on a tab boundary                        
                    </comment>
                    <declaration name="viewSize" type="Dimension" line="3314"/>
                    <declaration name="viewRect" type="Rectangle" line="3315"/>
                    <scope line="3322">
                        <declaration name="extentSize" type="Dimension" line="3325"/>
                    </scope>
                    <scope line="3334">
                        <declaration name="extentSize" type="Dimension" line="3337"/>
                    </scope>
                </method>
                <method name="stateChanged" type="void" line="3345">
                    <params>
                        <param name="e" type="ChangeEvent"/>
                    </params>
                </method>
                <method name="updateView" type="void" line="3349">
                    <comment line="3359">
                        If the tab isn&apos;t right aligned, adjust it.                        
                    </comment>
                    <declaration name="tabPlacement" type="int" line="3350"/>
                    <declaration name="tabCount" type="int" line="3351"/>
                    <declaration name="vpRect" type="Rectangle" line="3352"/>
                    <declaration name="viewSize" type="Dimension" line="3353"/>
                    <declaration name="viewRect" type="Rectangle" line="3354"/>
                    <scope line="3359">
                        <scope line="3363"/>
                        <scope line="3369"/>
                    </scope>
                    <declaration name="contentInsets" type="Insets" line="3375"/>
                </method>
                <javadoc line="3416">
                    ActionListener for the scroll buttons.                    
                </javadoc>
                <method name="actionPerformed" type="void" line="3419">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                    <declaration name="map" type="ActionMap" line="3420"/>
                    <scope line="3422">
                        <declaration name="actionKey" type="String" line="3423"/>
                        <scope line="3425"/>
                        <scope line="3428"/>
                        <declaration name="action" type="Action" line="3431"/>
                        <scope line="3433"/>
                    </scope>
                </method>
                <method name="toString" type="String" line="3441"/>
            </class>
            <class name="ScrollableTabViewport" line="3450">
                <extends class="JViewport"/>
                <comment line="2733">
                    Rotates the run-index array so that the selected run is run[0]                    
                </comment>
                <comment line="3512">
                    PropertyChangeListener                    
                </comment>
                <comment line="3597">
                    ChangeListener                    
                </comment>
                <comment line="3616">
                    MouseListener                    
                </comment>
                <comment line="3654">
                    MouseMotionListener                    
                </comment>
                <comment line="3664">
                    FocusListener                    
                </comment>
                <comment line="3675">
                    ContainerListener                    
                </comment>
                <comment line="3678">
                    GES 2399:
                    The container listener code was added to support HTML
                    rendering of tab titles.
                    
                    Ideally, we would be able to listen for property changes
                    when a tab is added or its text modified.  At the moment
                    there are no such events because the Beans spec doesn&apos;t
                    allow &apos;indexed&apos; property changes (i.e. tab 2&apos;s text changed
                    from A to B).
                    
                    In order to get around this, we listen for tabs to be added
                    or removed by listening for the container events.  we then
                    queue up a runnable (so the component has a chance to complete
                    the add) which checks the tab title of the new component to see
                    if it requires HTML rendering.
                    
                    The Views (one per tab title requiring HTML rendering) are
                    stored in the htmlViews Vector, which is only allocated after
                    the first time we run into an HTML tab.  Note that this vector
                    is kept in step with the number of pages, and nulls are added
                    for those pages whose tab title do not require HTML rendering.
                    
                    This makes it easy for the paint and layout code to tell
                    whether to invoke the HTML engine without having to check
                    the string during time-sensitive operations.
                    
                    When we have added a way to listen for tab additions and
                    changes to tab text, this code should be removed and                    
                </comment>
                <comment line="3750">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3764">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3778">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3792">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <implements interface="UIResource"/>
                <method name="ScrollableTabViewport" type="constructor" line="3451">
                    <declaration name="bgColor" type="Color" line="3456"/>
                    <scope line="3457"/>
                </method>
            </class>
            <class name="ScrollableTabPanel" line="3464">
                <extends class="JPanel"/>
                <comment line="2733">
                    Rotates the run-index array so that the selected run is run[0]                    
                </comment>
                <comment line="3512">
                    PropertyChangeListener                    
                </comment>
                <comment line="3597">
                    ChangeListener                    
                </comment>
                <comment line="3616">
                    MouseListener                    
                </comment>
                <comment line="3654">
                    MouseMotionListener                    
                </comment>
                <comment line="3664">
                    FocusListener                    
                </comment>
                <comment line="3675">
                    ContainerListener                    
                </comment>
                <comment line="3678">
                    GES 2399:
                    The container listener code was added to support HTML
                    rendering of tab titles.
                    
                    Ideally, we would be able to listen for property changes
                    when a tab is added or its text modified.  At the moment
                    there are no such events because the Beans spec doesn&apos;t
                    allow &apos;indexed&apos; property changes (i.e. tab 2&apos;s text changed
                    from A to B).
                    
                    In order to get around this, we listen for tabs to be added
                    or removed by listening for the container events.  we then
                    queue up a runnable (so the component has a chance to complete
                    the add) which checks the tab title of the new component to see
                    if it requires HTML rendering.
                    
                    The Views (one per tab title requiring HTML rendering) are
                    stored in the htmlViews Vector, which is only allocated after
                    the first time we run into an HTML tab.  Note that this vector
                    is kept in step with the number of pages, and nulls are added
                    for those pages whose tab title do not require HTML rendering.
                    
                    This makes it easy for the paint and layout code to tell
                    whether to invoke the HTML engine without having to check
                    the string during time-sensitive operations.
                    
                    When we have added a way to listen for tab additions and
                    changes to tab text, this code should be removed and                    
                </comment>
                <comment line="3750">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3764">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3778">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3792">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <implements interface="UIResource"/>
                <method name="ScrollableTabPanel" type="constructor" line="3465">
                    <declaration name="bgColor" type="Color" line="3468"/>
                    <scope line="3469"/>
                </method>
                <method name="paintComponent" type="void" line="3474">
                    <params>
                        <param name="g" type="Graphics"/>
                    </params>
                    <scope line="3478">
                        <declaration name="croppedRect" type="Rectangle" line="3479"/>
                    </scope>
                </method>
                <method name="doLayout" type="void" line="3486">
                    <scope line="3487">
                        <declaration name="child" type="Component" line="3488"/>
                    </scope>
                </method>
            </class>
            <class name="ScrollableTabButton" line="3494">
                <extends class="BasicArrowButton"/>
                <comment line="2733">
                    Rotates the run-index array so that the selected run is run[0]                    
                </comment>
                <comment line="3512">
                    PropertyChangeListener                    
                </comment>
                <comment line="3597">
                    ChangeListener                    
                </comment>
                <comment line="3616">
                    MouseListener                    
                </comment>
                <comment line="3654">
                    MouseMotionListener                    
                </comment>
                <comment line="3664">
                    FocusListener                    
                </comment>
                <comment line="3675">
                    ContainerListener                    
                </comment>
                <comment line="3678">
                    GES 2399:
                    The container listener code was added to support HTML
                    rendering of tab titles.
                    
                    Ideally, we would be able to listen for property changes
                    when a tab is added or its text modified.  At the moment
                    there are no such events because the Beans spec doesn&apos;t
                    allow &apos;indexed&apos; property changes (i.e. tab 2&apos;s text changed
                    from A to B).
                    
                    In order to get around this, we listen for tabs to be added
                    or removed by listening for the container events.  we then
                    queue up a runnable (so the component has a chance to complete
                    the add) which checks the tab title of the new component to see
                    if it requires HTML rendering.
                    
                    The Views (one per tab title requiring HTML rendering) are
                    stored in the htmlViews Vector, which is only allocated after
                    the first time we run into an HTML tab.  Note that this vector
                    is kept in step with the number of pages, and nulls are added
                    for those pages whose tab title do not require HTML rendering.
                    
                    This makes it easy for the paint and layout code to tell
                    whether to invoke the HTML engine without having to check
                    the string during time-sensitive operations.
                    
                    When we have added a way to listen for tab additions and
                    changes to tab text, this code should be removed and                    
                </comment>
                <comment line="3750">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3764">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3778">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3792">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <implements interface="UIResource"/>
                <implements interface="SwingConstants"/>
                <method name="ScrollableTabButton" type="constructor" line="3496">
                    <params>
                        <param name="direction" type="int"/>
                    </params>
                </method>
            </class>
            <class name="Handler" line="3508">
                <comment line="2733">
                    Rotates the run-index array so that the selected run is run[0]                    
                </comment>
                <comment line="3512">
                    PropertyChangeListener                    
                </comment>
                <comment line="3597">
                    ChangeListener                    
                </comment>
                <comment line="3616">
                    MouseListener                    
                </comment>
                <comment line="3654">
                    MouseMotionListener                    
                </comment>
                <comment line="3664">
                    FocusListener                    
                </comment>
                <comment line="3675">
                    ContainerListener                    
                </comment>
                <comment line="3678">
                    GES 2399:
                    The container listener code was added to support HTML
                    rendering of tab titles.
                    
                    Ideally, we would be able to listen for property changes
                    when a tab is added or its text modified.  At the moment
                    there are no such events because the Beans spec doesn&apos;t
                    allow &apos;indexed&apos; property changes (i.e. tab 2&apos;s text changed
                    from A to B).
                    
                    In order to get around this, we listen for tabs to be added
                    or removed by listening for the container events.  we then
                    queue up a runnable (so the component has a chance to complete
                    the add) which checks the tab title of the new component to see
                    if it requires HTML rendering.
                    
                    The Views (one per tab title requiring HTML rendering) are
                    stored in the htmlViews Vector, which is only allocated after
                    the first time we run into an HTML tab.  Note that this vector
                    is kept in step with the number of pages, and nulls are added
                    for those pages whose tab title do not require HTML rendering.
                    
                    This makes it easy for the paint and layout code to tell
                    whether to invoke the HTML engine without having to check
                    the string during time-sensitive operations.
                    
                    When we have added a way to listen for tab additions and
                    changes to tab text, this code should be removed and                    
                </comment>
                <comment line="3750">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3764">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3778">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3792">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <implements interface="ChangeListener"/>
                <implements interface="ContainerListener"/>
                <implements interface="FocusListener"/>
                <implements interface="MouseListener"/>
                <implements interface="MouseMotionListener"/>
                <implements interface="PropertyChangeListener"/>
                <method name="propertyChange" type="void" line="3514">
                    <params>
                        <param name="e" type="PropertyChangeEvent"/>
                    </params>
                    <comment line="3529">
                        remove the current index
                         to let updateHtmlViews() insert the correct one                        
                    </comment>
                    <declaration name="pane" type="JTabbedPane" line="3515"/>
                    <declaration name="name" type="String" line="3516"/>
                    <declaration name="isScrollLayout" type="boolean" line="3517"/>
                    <scope line="3518"/>
                    <scope line="3522"/>
                    <scope line="3525">
                        <declaration name="index" type="Integer" line="3527"/>
                        <scope line="3530"/>
                    </scope>
                    <scope line="3534"/>
                    <scope line="3538">
                        <scope line="3539"/>
                    </scope>
                    <scope line="3543">
                        <declaration name="newVal" type="boolean" line="3544"/>
                    </scope>
                    <scope line="3547">
                        <declaration name="newVal" type="Color" line="3548"/>
                        <declaration name="newColor" type="Color" line="3551"/>
                    </scope>
                    <scope line="3554">
                        <scope line="3555"/>
                        <declaration name="c" type="Component" line="3558"/>
                        <scope line="3560">
                            <scope line="3561"/>
                            <scope line="3563"/>
                        </scope>
                    </scope>
                    <scope line="3570"/>
                    <scope line="3573"/>
                </method>
                <method name="updateHtmlViews" type="void" line="3578">
                    <params>
                        <param name="index" type="int"/>
                    </params>
                    <comment line="3583">
                        Initialize vector                        
                    </comment>
                    <comment line="3585">
                        Vector already exists                        
                    </comment>
                    <comment line="3589">
                        Not HTML                        
                    </comment>
                    <comment line="3590">
                        Add placeholder                        
                    </comment>
                    <comment line="3592">
                        else nada!                        
                    </comment>
                    <declaration name="title" type="String" line="3579"/>
                    <declaration name="isHTML" type="boolean" line="3580"/>
                    <scope line="3581">
                        <scope line="3582"/>
                        <scope line="3584">
                            <declaration name="v" type="View" line="3585"/>
                        </scope>
                    </scope>
                    <scope line="3588">
                        <scope line="3589"/>
                    </scope>
                </method>
                <method name="stateChanged" type="void" line="3599">
                    <params>
                        <param name="e" type="ChangeEvent"/>
                    </params>
                    <declaration name="tabPane" type="JTabbedPane" line="3600"/>
                    <scope line="3606">
                        <declaration name="index" type="int" line="3607"/>
                        <scope line="3608"/>
                    </scope>
                </method>
                <method name="mouseClicked" type="void" line="3618">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseReleased" type="void" line="3621">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseEntered" type="void" line="3624">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseExited" type="void" line="3628">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mousePressed" type="void" line="3632">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <comment line="3640">
                        Clicking on unselected tab, change selection, do NOT
                         request focus.
                         This will trigger the focusIndex to change by way
                         of stateChanged.                        
                    </comment>
                    <comment line="3647">
                        Clicking on selected tab, try and give the tabbedpane
                         focus.  Repaint will occur in focusGained.                        
                    </comment>
                    <scope line="3633"/>
                    <declaration name="tabIndex" type="int" line="3636"/>
                    <scope line="3637">
                        <scope line="3638"/>
                        <scope line="3645"/>
                    </scope>
                </method>
                <method name="mouseDragged" type="void" line="3656">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseMoved" type="void" line="3659">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="focusGained" type="void" line="3666">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                </method>
                <method name="focusLost" type="void" line="3669">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                </method>
                <method name="componentAdded" type="void" line="3707">
                    <params>
                        <param name="e" type="ContainerEvent"/>
                    </params>
                    <declaration name="tp" type="JTabbedPane" line="3708"/>
                    <declaration name="child" type="Component" line="3709"/>
                    <scope line="3710"/>
                </method>
                <method name="componentRemoved" type="void" line="3716">
                    <params>
                        <param name="e" type="ContainerEvent"/>
                    </params>
                    <comment line="3724">
                        NOTE 4/15/2002 (joutwate):
                         This fix is implemented using client properties since there is
                         currently no IndexPropertyChangeEvent.  Once
                         IndexPropertyChangeEvents have been added this code should be
                         modified to use it.                        
                    </comment>
                    <declaration name="tp" type="JTabbedPane" line="3717"/>
                    <declaration name="child" type="Component" line="3718"/>
                    <scope line="3719"/>
                    <declaration name="indexObj" type="Integer" line="3728"/>
                    <scope line="3730">
                        <declaration name="index" type="int" line="3731"/>
                        <scope line="3732"/>
                    </scope>
                </method>
            </class>
            <class name="PropertyChangeHandler" line="3744">
                <comment line="2733">
                    Rotates the run-index array so that the selected run is run[0]                    
                </comment>
                <comment line="3512">
                    PropertyChangeListener                    
                </comment>
                <comment line="3597">
                    ChangeListener                    
                </comment>
                <comment line="3616">
                    MouseListener                    
                </comment>
                <comment line="3654">
                    MouseMotionListener                    
                </comment>
                <comment line="3664">
                    FocusListener                    
                </comment>
                <comment line="3675">
                    ContainerListener                    
                </comment>
                <comment line="3678">
                    GES 2399:
                    The container listener code was added to support HTML
                    rendering of tab titles.
                    
                    Ideally, we would be able to listen for property changes
                    when a tab is added or its text modified.  At the moment
                    there are no such events because the Beans spec doesn&apos;t
                    allow &apos;indexed&apos; property changes (i.e. tab 2&apos;s text changed
                    from A to B).
                    
                    In order to get around this, we listen for tabs to be added
                    or removed by listening for the container events.  we then
                    queue up a runnable (so the component has a chance to complete
                    the add) which checks the tab title of the new component to see
                    if it requires HTML rendering.
                    
                    The Views (one per tab title requiring HTML rendering) are
                    stored in the htmlViews Vector, which is only allocated after
                    the first time we run into an HTML tab.  Note that this vector
                    is kept in step with the number of pages, and nulls are added
                    for those pages whose tab title do not require HTML rendering.
                    
                    This makes it easy for the paint and layout code to tell
                    whether to invoke the HTML engine without having to check
                    the string during time-sensitive operations.
                    
                    When we have added a way to listen for tab additions and
                    changes to tab text, this code should be removed and                    
                </comment>
                <comment line="3750">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3764">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3778">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3792">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <implements interface="PropertyChangeListener"/>
                <javadoc line="3744">
                    This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of BasicTabbedPaneUI.                    
                </javadoc>
                <method name="propertyChange" type="void" line="3753">
                    <params>
                        <param name="e" type="PropertyChangeEvent"/>
                    </params>
                </method>
            </class>
            <class name="TabSelectionHandler" line="3758">
                <comment line="2733">
                    Rotates the run-index array so that the selected run is run[0]                    
                </comment>
                <comment line="3512">
                    PropertyChangeListener                    
                </comment>
                <comment line="3597">
                    ChangeListener                    
                </comment>
                <comment line="3616">
                    MouseListener                    
                </comment>
                <comment line="3654">
                    MouseMotionListener                    
                </comment>
                <comment line="3664">
                    FocusListener                    
                </comment>
                <comment line="3675">
                    ContainerListener                    
                </comment>
                <comment line="3678">
                    GES 2399:
                    The container listener code was added to support HTML
                    rendering of tab titles.
                    
                    Ideally, we would be able to listen for property changes
                    when a tab is added or its text modified.  At the moment
                    there are no such events because the Beans spec doesn&apos;t
                    allow &apos;indexed&apos; property changes (i.e. tab 2&apos;s text changed
                    from A to B).
                    
                    In order to get around this, we listen for tabs to be added
                    or removed by listening for the container events.  we then
                    queue up a runnable (so the component has a chance to complete
                    the add) which checks the tab title of the new component to see
                    if it requires HTML rendering.
                    
                    The Views (one per tab title requiring HTML rendering) are
                    stored in the htmlViews Vector, which is only allocated after
                    the first time we run into an HTML tab.  Note that this vector
                    is kept in step with the number of pages, and nulls are added
                    for those pages whose tab title do not require HTML rendering.
                    
                    This makes it easy for the paint and layout code to tell
                    whether to invoke the HTML engine without having to check
                    the string during time-sensitive operations.
                    
                    When we have added a way to listen for tab additions and
                    changes to tab text, this code should be removed and                    
                </comment>
                <comment line="3750">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3764">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3778">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3792">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <implements interface="ChangeListener"/>
                <javadoc line="3758">
                    This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of BasicTabbedPaneUI.                    
                </javadoc>
                <method name="stateChanged" type="void" line="3767">
                    <params>
                        <param name="e" type="ChangeEvent"/>
                    </params>
                </method>
            </class>
            <class name="MouseHandler" line="3772">
                <extends class="MouseAdapter"/>
                <comment line="2733">
                    Rotates the run-index array so that the selected run is run[0]                    
                </comment>
                <comment line="3512">
                    PropertyChangeListener                    
                </comment>
                <comment line="3597">
                    ChangeListener                    
                </comment>
                <comment line="3616">
                    MouseListener                    
                </comment>
                <comment line="3654">
                    MouseMotionListener                    
                </comment>
                <comment line="3664">
                    FocusListener                    
                </comment>
                <comment line="3675">
                    ContainerListener                    
                </comment>
                <comment line="3678">
                    GES 2399:
                    The container listener code was added to support HTML
                    rendering of tab titles.
                    
                    Ideally, we would be able to listen for property changes
                    when a tab is added or its text modified.  At the moment
                    there are no such events because the Beans spec doesn&apos;t
                    allow &apos;indexed&apos; property changes (i.e. tab 2&apos;s text changed
                    from A to B).
                    
                    In order to get around this, we listen for tabs to be added
                    or removed by listening for the container events.  we then
                    queue up a runnable (so the component has a chance to complete
                    the add) which checks the tab title of the new component to see
                    if it requires HTML rendering.
                    
                    The Views (one per tab title requiring HTML rendering) are
                    stored in the htmlViews Vector, which is only allocated after
                    the first time we run into an HTML tab.  Note that this vector
                    is kept in step with the number of pages, and nulls are added
                    for those pages whose tab title do not require HTML rendering.
                    
                    This makes it easy for the paint and layout code to tell
                    whether to invoke the HTML engine without having to check
                    the string during time-sensitive operations.
                    
                    When we have added a way to listen for tab additions and
                    changes to tab text, this code should be removed and                    
                </comment>
                <comment line="3750">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3764">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3778">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3792">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <javadoc line="3772">
                    This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of BasicTabbedPaneUI.                    
                </javadoc>
                <method name="mousePressed" type="void" line="3781">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
            </class>
            <class name="FocusHandler" line="3786">
                <extends class="FocusAdapter"/>
                <comment line="2733">
                    Rotates the run-index array so that the selected run is run[0]                    
                </comment>
                <comment line="3512">
                    PropertyChangeListener                    
                </comment>
                <comment line="3597">
                    ChangeListener                    
                </comment>
                <comment line="3616">
                    MouseListener                    
                </comment>
                <comment line="3654">
                    MouseMotionListener                    
                </comment>
                <comment line="3664">
                    FocusListener                    
                </comment>
                <comment line="3675">
                    ContainerListener                    
                </comment>
                <comment line="3678">
                    GES 2399:
                    The container listener code was added to support HTML
                    rendering of tab titles.
                    
                    Ideally, we would be able to listen for property changes
                    when a tab is added or its text modified.  At the moment
                    there are no such events because the Beans spec doesn&apos;t
                    allow &apos;indexed&apos; property changes (i.e. tab 2&apos;s text changed
                    from A to B).
                    
                    In order to get around this, we listen for tabs to be added
                    or removed by listening for the container events.  we then
                    queue up a runnable (so the component has a chance to complete
                    the add) which checks the tab title of the new component to see
                    if it requires HTML rendering.
                    
                    The Views (one per tab title requiring HTML rendering) are
                    stored in the htmlViews Vector, which is only allocated after
                    the first time we run into an HTML tab.  Note that this vector
                    is kept in step with the number of pages, and nulls are added
                    for those pages whose tab title do not require HTML rendering.
                    
                    This makes it easy for the paint and layout code to tell
                    whether to invoke the HTML engine without having to check
                    the string during time-sensitive operations.
                    
                    When we have added a way to listen for tab additions and
                    changes to tab text, this code should be removed and                    
                </comment>
                <comment line="3750">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3764">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3778">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3792">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <javadoc line="3786">
                    This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of BasicTabbedPaneUI.                    
                </javadoc>
                <method name="focusGained" type="void" line="3795">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                </method>
                <method name="focusLost" type="void" line="3798">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                </method>
            </class>
            <method name="createHTMLVector" type="Vector<View>" line="3803">
                <declaration name="htmlViews" type="Vector&lt;View&gt;" line="3804"/>
                <declaration name="count" type="int" line="3805"/>
                <scope line="3806">
                    <scope line="3807">
                        <declaration name="title" type="String" line="3808"/>
                        <scope line="3809"/>
                        <scope line="3811"/>
                    </scope>
                </scope>
            </method>
            <class name="TabContainer" line="3819">
                <extends class="JPanel"/>
                <comment line="2733">
                    Rotates the run-index array so that the selected run is run[0]                    
                </comment>
                <comment line="3512">
                    PropertyChangeListener                    
                </comment>
                <comment line="3597">
                    ChangeListener                    
                </comment>
                <comment line="3616">
                    MouseListener                    
                </comment>
                <comment line="3654">
                    MouseMotionListener                    
                </comment>
                <comment line="3664">
                    FocusListener                    
                </comment>
                <comment line="3675">
                    ContainerListener                    
                </comment>
                <comment line="3678">
                    GES 2399:
                    The container listener code was added to support HTML
                    rendering of tab titles.
                    
                    Ideally, we would be able to listen for property changes
                    when a tab is added or its text modified.  At the moment
                    there are no such events because the Beans spec doesn&apos;t
                    allow &apos;indexed&apos; property changes (i.e. tab 2&apos;s text changed
                    from A to B).
                    
                    In order to get around this, we listen for tabs to be added
                    or removed by listening for the container events.  we then
                    queue up a runnable (so the component has a chance to complete
                    the add) which checks the tab title of the new component to see
                    if it requires HTML rendering.
                    
                    The Views (one per tab title requiring HTML rendering) are
                    stored in the htmlViews Vector, which is only allocated after
                    the first time we run into an HTML tab.  Note that this vector
                    is kept in step with the number of pages, and nulls are added
                    for those pages whose tab title do not require HTML rendering.
                    
                    This makes it easy for the paint and layout code to tell
                    whether to invoke the HTML engine without having to check
                    the string during time-sensitive operations.
                    
                    When we have added a way to listen for tab additions and
                    changes to tab text, this code should be removed and                    
                </comment>
                <comment line="3750">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3764">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3778">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3792">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <implements interface="UIResource"/>
                <declaration name="notifyTabbedPane" type="boolean" line="3820"/>
                <method name="TabContainer" type="constructor" line="3822"/>
                <method name="remove" type="void" line="3827">
                    <params>
                        <param name="comp" type="Component"/>
                    </params>
                    <declaration name="index" type="int" line="3828"/>
                    <scope line="3830"/>
                </method>
                <method name="removeUnusedTabComponents" type="void" line="3835">
                    <scope line="3836">
                        <scope line="3837">
                            <declaration name="index" type="int" line="3838"/>
                            <scope line="3839"/>
                        </scope>
                    </scope>
                </method>
                <method name="isOptimizedDrawingEnabled" type="boolean" line="3846"/>
                <method name="doLayout" type="void" line="3850">
                    <comment line="3852">
                        We layout tabComponents in JTabbedPane&apos;s layout manager
                         and use this method as a hook for repainting tabs
                         to update tabs area e.g. when the size of tabComponent was changed                        
                    </comment>
                    <scope line="3854"/>
                    <scope line="3857"/>
                </method>
            </class>
            <class name="CroppedEdge" line="3863">
                <extends class="JPanel"/>
                <comment line="2733">
                    Rotates the run-index array so that the selected run is run[0]                    
                </comment>
                <comment line="3512">
                    PropertyChangeListener                    
                </comment>
                <comment line="3597">
                    ChangeListener                    
                </comment>
                <comment line="3616">
                    MouseListener                    
                </comment>
                <comment line="3654">
                    MouseMotionListener                    
                </comment>
                <comment line="3664">
                    FocusListener                    
                </comment>
                <comment line="3675">
                    ContainerListener                    
                </comment>
                <comment line="3678">
                    GES 2399:
                    The container listener code was added to support HTML
                    rendering of tab titles.
                    
                    Ideally, we would be able to listen for property changes
                    when a tab is added or its text modified.  At the moment
                    there are no such events because the Beans spec doesn&apos;t
                    allow &apos;indexed&apos; property changes (i.e. tab 2&apos;s text changed
                    from A to B).
                    
                    In order to get around this, we listen for tabs to be added
                    or removed by listening for the container events.  we then
                    queue up a runnable (so the component has a chance to complete
                    the add) which checks the tab title of the new component to see
                    if it requires HTML rendering.
                    
                    The Views (one per tab title requiring HTML rendering) are
                    stored in the htmlViews Vector, which is only allocated after
                    the first time we run into an HTML tab.  Note that this vector
                    is kept in step with the number of pages, and nulls are added
                    for those pages whose tab title do not require HTML rendering.
                    
                    This makes it easy for the paint and layout code to tell
                    whether to invoke the HTML engine without having to check
                    the string during time-sensitive operations.
                    
                    When we have added a way to listen for tab additions and
                    changes to tab text, this code should be removed and                    
                </comment>
                <comment line="3750">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3764">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3778">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <comment line="3792">
                    NOTE: This class exists only for backward compatability. All
                     its functionality has been moved into Handler. If you need to add
                     new functionality add it to the Handler, but make sure this
                     class calls into the Handler.                    
                </comment>
                <implements interface="UIResource"/>
                <declaration name="shape" type="Shape" line="3864"/>
                <declaration name="tabIndex" type="int" line="3865"/>
                <declaration name="cropline" type="int" line="3866"/>
                <declaration name="cropx" type="int" line="3867"/>
                <method name="CroppedEdge" type="constructor" line="3869"/>
                <method name="setParams" type="void" line="3873">
                    <params>
                        <param name="tabIndex" type="int"/>
                        <param name="cropline" type="int"/>
                        <param name="cropx" type="int"/>
                        <param name="cropy" type="int"/>
                    </params>
                    <declaration name="tabRect" type="Rectangle" line="3878"/>
                    <scope line="3881"/>
                </method>
                <method name="resetParams" type="void" line="3886">
                    <scope line="3888"/>
                </method>
                <method name="isParamsSet" type="boolean" line="3893"/>
                <method name="getTabIndex" type="int" line="3897"/>
                <method name="getCropline" type="int" line="3901"/>
                <method name="getCroppedSideWidth" type="int" line="3905"/>
                <method name="getBgColor" type="Color" line="3909">
                    <declaration name="parent" type="Component" line="3910"/>
                    <scope line="3911">
                        <declaration name="bg" type="Color" line="3912"/>
                        <scope line="3913"/>
                    </scope>
                </method>
                <method name="paintComponent" type="void" line="3920">
                    <params>
                        <param name="g" type="Graphics"/>
                    </params>
                    <scope line="3922">
                        <declaration name="g2" type="Graphics2D" line="3923"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>