<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.synth">
        <import package="javax.swing"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.plaf.basic"/>
        <import package="javax.swing.text.View"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.Insets"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.FontMetrics"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <class name="SynthLabelUI" line="12">
            <extends class="BasicLabelUI"/>
            <implements interface="SynthUI"/>
            <javadoc line="12">
                Provides the Synth L&amp;F UI delegate for{@link javax.swing.JLabel}.                
                <author>
                    Scott Violet                    
                </author>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="style" type="SynthStyle" line="18"/>
            <javadoc line="19">
                Returns the LabelUI implementation used for the skins look and feel.                
                <param>
                    c component to create UI object for                    
                </param>
                <return>
                    the UI object                    
                </return>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="24">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="27">
                @inheritDoc                
            </javadoc>
            <method name="installDefaults" type="void" line="30">
                <params>
                    <param name="c" type="JLabel"/>
                </params>
            </method>
            <method name="updateStyle" type="void" line="33">
                <params>
                    <param name="c" type="JLabel"/>
                </params>
                <declaration name="context" type="SynthContext" line="34"/>
            </method>
            <javadoc line="38">
                @inheritDoc                
            </javadoc>
            <method name="uninstallDefaults" type="void" line="41">
                <params>
                    <param name="c" type="JLabel"/>
                </params>
                <declaration name="context" type="SynthContext" line="42"/>
            </method>
            <javadoc line="47">
                @inheritDoc                
            </javadoc>
            <method name="getContext" type="SynthContext" line="50">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="53">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="state" type="int"/>
                </params>
            </method>
            <method name="getComponentState" type="int" line="56">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="state" type="int" line="57"/>
                <scope line="58"/>
            </method>
            <javadoc line="63">
                @inheritDoc                
            </javadoc>
            <method name="getBaseline" type="int" line="66">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <scope line="67"/>
                <scope line="70"/>
                <declaration name="label" type="JLabel" line="73"/>
                <declaration name="text" type="String" line="74"/>
                <scope line="75"/>
                <declaration name="i" type="Insets" line="78"/>
                <declaration name="viewRect" type="Rectangle" line="79"/>
                <declaration name="textRect" type="Rectangle" line="80"/>
                <declaration name="iconRect" type="Rectangle" line="81"/>
                <declaration name="context" type="SynthContext" line="86"/>
                <declaration name="fm" type="FontMetrics" line="87"/>
                <declaration name="view" type="View" line="89"/>
                <declaration name="baseline" type="int" line="90"/>
                <scope line="91">
                    <scope line="93"/>
                </scope>
                <scope line="97"/>
            </method>
            <javadoc line="103">
                Notifies this UI delegate to repaint the specified component.
                  This method paints the component background, then calls
                  the {@link #paint(SynthContext,Graphics)} method.
                  &lt;p&gt;In general, this method does not need to be overridden by subclasses.
                  All Look and Feel rendering code should reside in the {@code paint} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="update" type="void" line="113">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="114"/>
            </method>
            <javadoc line="120">
                Paints the specified component according to the Look and Feel.
                  &lt;p&gt;This method is not used by Synth Look and Feel.
                  Painting is handled by the {@link #paint(SynthContext,Graphics)} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="128">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="129"/>
            </method>
            <javadoc line="133">
                Paints the specified component.                
                <param>
                    context context for the component being painted                    
                </param>
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <see>
                    #update(Graphics,JComponent)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="139">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="label" type="JLabel" line="140"/>
                <declaration name="icon" type="Icon" line="141"/>
            </method>
            <javadoc line="146">
                @inheritDoc                
            </javadoc>
            <method name="paintBorder" type="void" line="149">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <javadoc line="152">
                @inheritDoc                
            </javadoc>
            <method name="getPreferredSize" type="Dimension" line="155">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="label" type="JLabel" line="156"/>
                <declaration name="icon" type="Icon" line="157"/>
                <declaration name="context" type="SynthContext" line="158"/>
                <declaration name="size" type="Dimension" line="159"/>
            </method>
            <javadoc line="163">
                @inheritDoc                
            </javadoc>
            <method name="getMinimumSize" type="Dimension" line="166">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="label" type="JLabel" line="167"/>
                <declaration name="icon" type="Icon" line="168"/>
                <declaration name="context" type="SynthContext" line="169"/>
                <declaration name="size" type="Dimension" line="170"/>
            </method>
            <javadoc line="174">
                @inheritDoc                
            </javadoc>
            <method name="getMaximumSize" type="Dimension" line="177">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="label" type="JLabel" line="178"/>
                <declaration name="icon" type="Icon" line="179"/>
                <declaration name="context" type="SynthContext" line="180"/>
                <declaration name="size" type="Dimension" line="181"/>
            </method>
            <javadoc line="185">
                @inheritDoc                
            </javadoc>
            <method name="propertyChange" type="void" line="188">
                <params>
                    <param name="e" type="PropertyChangeEvent"/>
                </params>
                <scope line="190"/>
            </method>
        </class>
    </source>