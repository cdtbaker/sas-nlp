<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.synth">
        <import package="javax.swing"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.plaf.basic"/>
        <import package="javax.swing.text.View"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.Insets"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.FontMetrics"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <class name="SynthLabelUI" line="39">
            <extends class="BasicLabelUI"/>
            <implements interface="SynthUI"/>
            <javadoc line="39">
                Provides the Synth L&amp;F UI delegate for{@link javax.swing.JLabel}.                
                <author>
                    Scott Violet                    
                </author>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="style" type="SynthStyle" line="47"/>
            <javadoc line="49">
                Returns the LabelUI implementation used for the skins look and feel.                
                <param>
                    c component to create UI object for                    
                </param>
                <return>
                    the UI object                    
                </return>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="55">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="59">
                @inheritDoc                
            </javadoc>
            <method name="installDefaults" type="void" line="63">
                <params>
                    <param name="c" type="JLabel"/>
                </params>
            </method>
            <method name="updateStyle" type="void" line="67">
                <params>
                    <param name="c" type="JLabel"/>
                </params>
                <declaration name="context" type="SynthContext" line="68"/>
            </method>
            <javadoc line="73">
                @inheritDoc                
            </javadoc>
            <method name="uninstallDefaults" type="void" line="77">
                <params>
                    <param name="c" type="JLabel"/>
                </params>
                <declaration name="context" type="SynthContext" line="78"/>
            </method>
            <javadoc line="85">
                @inheritDoc                
            </javadoc>
            <method name="getContext" type="SynthContext" line="89">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="93">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="state" type="int"/>
                </params>
            </method>
            <method name="getComponentState" type="int" line="98">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="state" type="int" line="99"/>
                <scope line="101"/>
            </method>
            <javadoc line="107">
                @inheritDoc                
            </javadoc>
            <method name="getBaseline" type="int" line="111">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <comment line="133">
                    layout the text and icon                    
                </comment>
                <scope line="112"/>
                <scope line="115"/>
                <declaration name="label" type="JLabel" line="119"/>
                <declaration name="text" type="String" line="120"/>
                <scope line="121"/>
                <declaration name="i" type="Insets" line="124"/>
                <declaration name="viewRect" type="Rectangle" line="125"/>
                <declaration name="textRect" type="Rectangle" line="126"/>
                <declaration name="iconRect" type="Rectangle" line="127"/>
                <declaration name="context" type="SynthContext" line="134"/>
                <declaration name="fm" type="FontMetrics" line="135"/>
                <declaration name="view" type="View" line="142"/>
                <declaration name="baseline" type="int" line="143"/>
                <scope line="144">
                    <scope line="147"/>
                </scope>
                <scope line="151"/>
            </method>
            <javadoc line="158">
                Notifies this UI delegate to repaint the specified component.
                  This method paints the component background, then calls
                  the {@link #paint(SynthContext,Graphics)} method.
                  &lt;p&gt;In general, this method does not need to be overridden by subclasses.
                  All Look and Feel rendering code should reside in the {@code paint} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="update" type="void" line="171">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="172"/>
            </method>
            <javadoc line="181">
                Paints the specified component according to the Look and Feel.
                  &lt;p&gt;This method is not used by Synth Look and Feel.
                  Painting is handled by the {@link #paint(SynthContext,Graphics)} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="191">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="192"/>
            </method>
            <javadoc line="198">
                Paints the specified component.                
                <param>
                    context context for the component being painted                    
                </param>
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <see>
                    #update(Graphics,JComponent)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="205">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="label" type="JLabel" line="206"/>
                <declaration name="icon" type="Icon" line="207"/>
            </method>
            <javadoc line="220">
                @inheritDoc                
            </javadoc>
            <method name="paintBorder" type="void" line="225">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <javadoc line="229">
                @inheritDoc                
            </javadoc>
            <method name="getPreferredSize" type="Dimension" line="233">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="label" type="JLabel" line="234"/>
                <declaration name="icon" type="Icon" line="235"/>
                <declaration name="context" type="SynthContext" line="237"/>
                <declaration name="size" type="Dimension" line="238"/>
            </method>
            <javadoc line="250">
                @inheritDoc                
            </javadoc>
            <method name="getMinimumSize" type="Dimension" line="254">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="label" type="JLabel" line="255"/>
                <declaration name="icon" type="Icon" line="256"/>
                <declaration name="context" type="SynthContext" line="258"/>
                <declaration name="size" type="Dimension" line="259"/>
            </method>
            <javadoc line="271">
                @inheritDoc                
            </javadoc>
            <method name="getMaximumSize" type="Dimension" line="275">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="label" type="JLabel" line="276"/>
                <declaration name="icon" type="Icon" line="277"/>
                <declaration name="context" type="SynthContext" line="279"/>
                <declaration name="size" type="Dimension" line="280"/>
            </method>
            <javadoc line="292">
                @inheritDoc                
            </javadoc>
            <method name="propertyChange" type="void" line="296">
                <params>
                    <param name="e" type="PropertyChangeEvent"/>
                </params>
                <scope line="298"/>
            </method>
        </class>
    </source>