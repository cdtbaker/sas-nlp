<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.synth">
        <import package="javax.swing"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.plaf.basic.BasicPanelUI"/>
        <import package="java.awt"/>
        <import package="java.beans"/>
        <class name="SynthPanelUI" line="34">
            <extends class="BasicPanelUI"/>
            <implements interface="PropertyChangeListener"/>
            <implements interface="SynthUI"/>
            <javadoc line="34">
                Provides the Synth L&amp;F UI delegate for{@link javax.swing.JPanel}.                
                <author>
                    Steve Wilson                    
                </author>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="style" type="SynthStyle" line="43"/>
            <javadoc line="45">
                Creates a new UI object for the given component.                
                <param>
                    c component to create UI object for                    
                </param>
                <return>
                    the UI object                    
                </return>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="51">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="55">
                @inheritDoc                
            </javadoc>
            <method name="installUI" type="void" line="59">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="p" type="JPanel" line="60"/>
            </method>
            <javadoc line="66">
                @inheritDoc                
            </javadoc>
            <method name="uninstallUI" type="void" line="70">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="p" type="JPanel" line="71"/>
            </method>
            <javadoc line="77">
                Installs listeners into the panel.                
                <param>
                    p the {@code JPanel} object                    
                </param>
            </javadoc>
            <method name="installListeners" type="void" line="82">
                <params>
                    <param name="p" type="JPanel"/>
                </params>
            </method>
            <javadoc line="86">
                Uninstalls listeners from the panel.                
                <param>
                    p the {@code JPanel} object                    
                </param>
            </javadoc>
            <method name="uninstallListeners" type="void" line="91">
                <params>
                    <param name="p" type="JPanel"/>
                </params>
            </method>
            <javadoc line="95">
                @inheritDoc                
            </javadoc>
            <method name="installDefaults" type="void" line="99">
                <params>
                    <param name="p" type="JPanel"/>
                </params>
            </method>
            <javadoc line="103">
                @inheritDoc                
            </javadoc>
            <method name="uninstallDefaults" type="void" line="107">
                <params>
                    <param name="p" type="JPanel"/>
                </params>
                <declaration name="context" type="SynthContext" line="108"/>
            </method>
            <method name="updateStyle" type="void" line="115">
                <params>
                    <param name="c" type="JPanel"/>
                </params>
                <declaration name="context" type="SynthContext" line="116"/>
            </method>
            <javadoc line="121">
                @inheritDoc                
            </javadoc>
            <method name="getContext" type="SynthContext" line="125">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="129">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="state" type="int"/>
                </params>
            </method>
            <method name="getComponentState" type="int" line="134">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="138">
                Notifies this UI delegate to repaint the specified component.
                  This method paints the component background, then calls
                  the {@link #paint(SynthContext,Graphics)} method.
                  &lt;p&gt;In general, this method does not need to be overridden by subclasses.
                  All Look and Feel rendering code should reside in the {@code paint} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="update" type="void" line="151">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="152"/>
            </method>
            <javadoc line="161">
                Paints the specified component according to the Look and Feel.
                  &lt;p&gt;This method is not used by Synth Look and Feel.
                  Painting is handled by the {@link #paint(SynthContext,Graphics)} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="171">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="172"/>
            </method>
            <javadoc line="178">
                Paints the specified component. This implementation does nothing.                
                <param>
                    context context for the component being painted                    
                </param>
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <see>
                    #update(Graphics,JComponent)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="185">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                </params>
                <comment line="186">
                    do actual painting                    
                </comment>
            </method>
            <javadoc line="189">
                @inheritDoc                
            </javadoc>
            <method name="paintBorder" type="void" line="194">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <javadoc line="198">
                @inheritDoc                
            </javadoc>
            <method name="propertyChange" type="void" line="202">
                <params>
                    <param name="pce" type="PropertyChangeEvent"/>
                </params>
                <scope line="203"/>
            </method>
        </class>
    </source>