<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.basic">
        <import package="sun.swing.SwingUtilities2"/>
        <import package="sun.awt.AppContext"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.io.Serializable"/>
        <import package="javax.swing"/>
        <import package="javax.swing.border"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="javax.swing.plaf.ButtonUI"/>
        <import package="javax.swing.plaf.UIResource"/>
        <import package="javax.swing.plaf.ComponentUI"/>
        <import package="javax.swing.text.View"/>
        <class name="BasicButtonUI" line="15">
            <extends class="ButtonUI"/>
            <javadoc line="15">
                BasicButton implementation                
                <author>
                    Jeff Dinkins                    
                </author>
            </javadoc>
            <declaration name="defaultTextIconGap" type="int" line="20"/>
            <declaration name="shiftOffset" type="int" line="21"/>
            <declaration name="defaultTextShiftOffset" type="int" line="22"/>
            <declaration name="propertyPrefix" type="String" line="23"/>
            <declaration name="BASIC_BUTTON_UI_KEY" type="Object" line="24"/>
            <method name="createUI" type="ComponentUI" line="25">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="appContext" type="AppContext" line="26"/>
                <declaration name="buttonUI" type="BasicButtonUI" line="27"/>
                <scope line="28"/>
            </method>
            <method name="getPropertyPrefix" type="String" line="34"/>
            <method name="installUI" type="void" line="37">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="installDefaults" type="void" line="43">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
                <declaration name="pp" type="String" line="44"/>
                <scope line="46"/>
                <scope line="49"/>
                <scope line="52"/>
                <declaration name="rollover" type="Object" line="57"/>
                <scope line="58"/>
            </method>
            <method name="installListeners" type="void" line="63">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
                <declaration name="listener" type="BasicButtonListener" line="64"/>
                <scope line="65"/>
            </method>
            <method name="installKeyboardActions" type="void" line="73">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
                <declaration name="listener" type="BasicButtonListener" line="74"/>
                <scope line="75"/>
            </method>
            <method name="uninstallUI" type="void" line="79">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="uninstallKeyboardActions" type="void" line="85">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
                <declaration name="listener" type="BasicButtonListener" line="86"/>
                <scope line="87"/>
            </method>
            <method name="uninstallListeners" type="void" line="91">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
                <declaration name="listener" type="BasicButtonListener" line="92"/>
                <scope line="93"/>
            </method>
            <method name="uninstallDefaults" type="void" line="101">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
            </method>
            <method name="createButtonListener" type="BasicButtonListener" line="104">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
            </method>
            <method name="getDefaultTextIconGap" type="int" line="107">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
            </method>
            <declaration name="viewRect" type="Rectangle" line="110"/>
            <declaration name="textRect" type="Rectangle" line="111"/>
            <declaration name="iconRect" type="Rectangle" line="112"/>
            <method name="paint" type="void" line="113">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="b" type="AbstractButton" line="114"/>
                <declaration name="model" type="ButtonModel" line="115"/>
                <declaration name="text" type="String" line="116"/>
                <scope line="118"/>
                <scope line="121"/>
                <scope line="124">
                    <declaration name="v" type="View" line="125"/>
                    <scope line="126"/>
                    <scope line="129"/>
                </scope>
                <scope line="133"/>
            </method>
            <method name="paintIcon" type="void" line="137">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                    <param name="iconRect" type="Rectangle"/>
                </params>
                <declaration name="b" type="AbstractButton" line="138"/>
                <declaration name="model" type="ButtonModel" line="139"/>
                <declaration name="icon" type="Icon" line="140"/>
                <declaration name="tmpIcon" type="Icon" line="141"/>
                <scope line="142"/>
                <declaration name="selectedIcon" type="Icon" line="145"/>
                <scope line="146">
                    <scope line="148"/>
                </scope>
                <scope line="152">
                    <scope line="153">
                        <scope line="155"/>
                    </scope>
                    <scope line="159"/>
                </scope>
                <scope line="163">
                    <scope line="165"/>
                </scope>
                <scope line="169">
                    <scope line="170">
                        <scope line="172"/>
                    </scope>
                    <scope line="176"/>
                </scope>
                <scope line="180"/>
                <scope line="183"/>
                <scope line="186"/>
            </method>
            <javadoc line="190">
                As of Java 2 platform v 1.4 this method should not be used or overriden.
                  Use the paintText method which takes the AbstractButton argument.                
            </javadoc>
            <method name="paintText" type="void" line="194">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                    <param name="textRect" type="Rectangle"/>
                    <param name="text" type="String"/>
                </params>
                <declaration name="b" type="AbstractButton" line="195"/>
                <declaration name="model" type="ButtonModel" line="196"/>
                <declaration name="fm" type="FontMetrics" line="197"/>
                <declaration name="mnemonicIndex" type="int" line="198"/>
                <scope line="199"/>
                <scope line="203"/>
            </method>
            <javadoc line="210">
                Method which renders the text of the current button.
                  &lt;p&gt;                
                <param>
                    g Graphics context                    
                </param>
                <param>
                    b Current button to render                    
                </param>
                <param>
                    textRect Bounding rectangle to render the text.                    
                </param>
                <param>
                    text String to render                    
                </param>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="paintText" type="void" line="219">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="b" type="AbstractButton"/>
                    <param name="textRect" type="Rectangle"/>
                    <param name="text" type="String"/>
                </params>
            </method>
            <method name="paintFocus" type="void" line="222">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="b" type="AbstractButton"/>
                    <param name="viewRect" type="Rectangle"/>
                    <param name="textRect" type="Rectangle"/>
                    <param name="iconRect" type="Rectangle"/>
                </params>
            </method>
            <method name="paintButtonPressed" type="void" line="224">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="b" type="AbstractButton"/>
                </params>
            </method>
            <method name="clearTextShiftOffset" type="void" line="226"/>
            <method name="setTextShiftOffset" type="void" line="229"/>
            <method name="getTextShiftOffset" type="int" line="232"/>
            <method name="getMinimumSize" type="Dimension" line="235">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="d" type="Dimension" line="236"/>
                <declaration name="v" type="View" line="237"/>
                <scope line="238"/>
            </method>
            <method name="getPreferredSize" type="Dimension" line="243">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="b" type="AbstractButton" line="244"/>
            </method>
            <method name="getMaximumSize" type="Dimension" line="247">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="d" type="Dimension" line="248"/>
                <declaration name="v" type="View" line="249"/>
                <scope line="250"/>
            </method>
            <javadoc line="255">
                Returns the baseline.                
                <throws>
                    NullPointerException {@inheritDoc}                    
                </throws>
                <throws>
                    IllegalArgumentException {@inheritDoc}                    
                </throws>
                <see>
                    javax.swing.JComponent#getBaseline(int,int)                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="getBaseline" type="int" line="262">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="b" type="AbstractButton" line="264"/>
                <declaration name="text" type="String" line="265"/>
                <scope line="266"/>
                <declaration name="fm" type="FontMetrics" line="269"/>
            </method>
            <javadoc line="273">
                Returns an enum indicating how the baseline of the component
                  changes as the size changes.                
                <throws>
                    NullPointerException {@inheritDoc}                    
                </throws>
                <see>
                    javax.swing.JComponent#getBaseline(int,int)                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="getBaselineResizeBehavior" type="Component.BaselineResizeBehavior" line="280">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <scope line="282"/>
            </method>
            <method name="layout" type="String" line="295">
                <params>
                    <param name="b" type="AbstractButton"/>
                    <param name="fm" type="FontMetrics"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="i" type="Insets" line="296"/>
            </method>
            <javadoc line="305">
                Returns the ButtonListener for the passed in Button, or null if one
                  could not be found.                
            </javadoc>
            <method name="getButtonListener" type="BasicButtonListener" line="309">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
                <declaration name="listeners" type="MouseMotionListener[]" line="310"/>
                <scope line="311">
                    <scope line="312">
                        <scope line="313"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>