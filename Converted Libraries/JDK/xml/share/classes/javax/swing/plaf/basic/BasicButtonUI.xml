<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.basic">
        <import package="sun.swing.SwingUtilities2"/>
        <import package="sun.awt.AppContext"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.io.Serializable"/>
        <import package="javax.swing"/>
        <import package="javax.swing.border"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="javax.swing.plaf.ButtonUI"/>
        <import package="javax.swing.plaf.UIResource"/>
        <import package="javax.swing.plaf.ComponentUI"/>
        <import package="javax.swing.text.View"/>
        <class name="BasicButtonUI" line="43">
            <extends class="ButtonUI"/>
            <comment line="50">
                Visual constants
                 NOTE: This is not used or set any where. Were we allowed to remove
                 fields, this would be removed.                
            </comment>
            <comment line="55">
                Amount to offset text, the value of this comes from
                 defaultTextShiftOffset once setTextShiftOffset has been invoked.                
            </comment>
            <comment line="58">
                Value that is set in shiftOffset once setTextShiftOffset has been
                 invoked. The value of this comes from the defaults table.                
            </comment>
            <comment line="66">
                ********************************
                          Create PLAF
                 ********************************                
            </comment>
            <comment line="85">
                ********************************
                          Install PLAF
                 ********************************                
            </comment>
            <comment line="144">
                ********************************
                         Uninstall PLAF
                 ********************************                
            </comment>
            <comment line="176">
                ********************************
                        Create Listeners
                 ********************************                
            </comment>
            <comment line="187">
                These rectanglesinsets are allocated once for all
                 ButtonUI.paint() calls.  Re-using rectangles rather than
                 allocating them in each paint call substantially reduced the time
                 it took paint to run.  Obviously, this method can&apos;t be re-entered.                
            </comment>
            <comment line="196">
                ********************************
                          Paint Methods
                 ********************************                
            </comment>
            <comment line="340">
                Method signature defined here overriden in subclasses.
                 Perhaps this class should be abstract?                
            </comment>
            <comment line="363">
                ********************************
                          Layout Methods
                 ********************************                
            </comment>
            <javadoc line="43">
                BasicButton implementation                
                <author>
                    Jeff Dinkins                    
                </author>
            </javadoc>
            <declaration name="defaultTextIconGap" type="int" line="52"/>
            <declaration name="shiftOffset" type="int" line="56"/>
            <declaration name="defaultTextShiftOffset" type="int" line="59"/>
            <declaration name="propertyPrefix" type="String" line="61"/>
            <declaration name="BASIC_BUTTON_UI_KEY" type="Object" line="63"/>
            <method name="createUI" type="ComponentUI" line="68">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="appContext" type="AppContext" line="69"/>
                <declaration name="buttonUI" type="BasicButtonUI" line="70"/>
                <scope line="72"/>
            </method>
            <method name="getPropertyPrefix" type="String" line="79"/>
            <method name="installUI" type="void" line="87">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="installDefaults" type="void" line="94">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
                <comment line="96">
                    load shared instance defaults                    
                </comment>
                <comment line="101">
                    set the following defaults on the button                    
                </comment>
                <declaration name="pp" type="String" line="96"/>
                <scope line="101"/>
                <scope line="103"/>
                <scope line="107"/>
                <declaration name="rollover" type="Object" line="115"/>
                <scope line="116"/>
            </method>
            <method name="installListeners" type="void" line="123">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
                <declaration name="listener" type="BasicButtonListener" line="124"/>
                <scope line="125"/>
            </method>
            <method name="installKeyboardActions" type="void" line="134">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
                <declaration name="listener" type="BasicButtonListener" line="135"/>
                <scope line="137"/>
            </method>
            <method name="uninstallUI" type="void" line="146">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="uninstallKeyboardActions" type="void" line="153">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
                <declaration name="listener" type="BasicButtonListener" line="154"/>
                <scope line="155"/>
            </method>
            <method name="uninstallListeners" type="void" line="160">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
                <declaration name="listener" type="BasicButtonListener" line="161"/>
                <scope line="162"/>
            </method>
            <method name="uninstallDefaults" type="void" line="171">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
            </method>
            <method name="createButtonListener" type="BasicButtonListener" line="178">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
            </method>
            <method name="getDefaultTextIconGap" type="int" line="182">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
            </method>
            <declaration name="viewRect" type="Rectangle" line="191"/>
            <declaration name="textRect" type="Rectangle" line="192"/>
            <declaration name="iconRect" type="Rectangle" line="193"/>
            <method name="paint" type="void" line="200">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <comment line="210">
                    perform UI specific press action, e.g. Windows L&amp;F shifts text                    
                </comment>
                <comment line="215">
                    Paint the Icon                    
                </comment>
                <comment line="230">
                    paint UI specific focus                    
                </comment>
                <declaration name="b" type="AbstractButton" line="201"/>
                <declaration name="model" type="ButtonModel" line="202"/>
                <declaration name="text" type="String" line="204"/>
                <scope line="210"/>
                <scope line="215"/>
                <scope line="219">
                    <declaration name="v" type="View" line="220"/>
                    <scope line="221"/>
                    <scope line="223"/>
                </scope>
                <scope line="228"/>
            </method>
            <method name="paintIcon" type="void" line="234">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                    <param name="iconRect" type="Rectangle"/>
                </params>
                <comment line="247">
                                        
                </comment>
                <comment line="269">
                    revert back to 0 offset                    
                </comment>
                <declaration name="b" type="AbstractButton" line="235"/>
                <declaration name="model" type="ButtonModel" line="236"/>
                <declaration name="icon" type="Icon" line="237"/>
                <declaration name="tmpIcon" type="Icon" line="238"/>
                <scope line="240"/>
                <declaration name="selectedIcon" type="Icon" line="244"/>
                <scope line="247">
                    <scope line="249"/>
                </scope>
                <scope line="254">
                    <scope line="255">
                        <scope line="257"/>
                    </scope>
                    <scope line="262"/>
                </scope>
                <scope line="265">
                    <scope line="267"/>
                </scope>
                <scope line="271">
                    <scope line="272">
                        <scope line="274"/>
                    </scope>
                    <scope line="279"/>
                </scope>
                <scope line="284"/>
                <scope line="288"/>
                <scope line="291"/>
            </method>
            <javadoc line="297">
                As of Java 2 platform v 1.4 this method should not be used or overriden.
                  Use the paintText method which takes the AbstractButton argument.                
            </javadoc>
            <method name="paintText" type="void" line="301">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                    <param name="textRect" type="Rectangle"/>
                    <param name="text" type="String"/>
                </params>
                <comment line="308">
                                        
                </comment>
                <comment line="310">
                                        
                </comment>
                <comment line="317">
                                        
                </comment>
                <declaration name="b" type="AbstractButton" line="302"/>
                <declaration name="model" type="ButtonModel" line="303"/>
                <declaration name="fm" type="FontMetrics" line="304"/>
                <declaration name="mnemonicIndex" type="int" line="305"/>
                <scope line="308"/>
                <scope line="315"/>
            </method>
            <javadoc line="326">
                Method which renders the text of the current button.
                  &lt;p&gt;                
                <param>
                    g Graphics context                    
                </param>
                <param>
                    b Current button to render                    
                </param>
                <param>
                    textRect Bounding rectangle to render the text.                    
                </param>
                <param>
                    text String to render                    
                </param>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="paintText" type="void" line="335">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="b" type="AbstractButton"/>
                    <param name="textRect" type="Rectangle"/>
                    <param name="text" type="String"/>
                </params>
            </method>
            <method name="paintFocus" type="void" line="342">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="b" type="AbstractButton"/>
                    <param name="viewRect" type="Rectangle"/>
                    <param name="textRect" type="Rectangle"/>
                    <param name="iconRect" type="Rectangle"/>
                </params>
            </method>
            <method name="paintButtonPressed" type="void" line="347">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="b" type="AbstractButton"/>
                </params>
            </method>
            <method name="clearTextShiftOffset" type="void" line="350"/>
            <method name="setTextShiftOffset" type="void" line="354"/>
            <method name="getTextShiftOffset" type="int" line="358"/>
            <method name="getMinimumSize" type="Dimension" line="365">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="d" type="Dimension" line="366"/>
                <declaration name="v" type="View" line="367"/>
                <scope line="368"/>
            </method>
            <method name="getPreferredSize" type="Dimension" line="374">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="b" type="AbstractButton" line="375"/>
            </method>
            <method name="getMaximumSize" type="Dimension" line="379">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="d" type="Dimension" line="380"/>
                <declaration name="v" type="View" line="381"/>
                <scope line="382"/>
            </method>
            <javadoc line="388">
                Returns the baseline.                
                <throws>
                    NullPointerException {@inheritDoc}                    
                </throws>
                <throws>
                    IllegalArgumentException {@inheritDoc}                    
                </throws>
                <see>
                    javax.swing.JComponent#getBaseline(int,int)                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="getBaseline" type="int" line="396">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="b" type="AbstractButton" line="398"/>
                <declaration name="text" type="String" line="399"/>
                <scope line="400"/>
                <declaration name="fm" type="FontMetrics" line="403"/>
            </method>
            <javadoc line="409">
                Returns an enum indicating how the baseline of the component
                  changes as the size changes.                
                <throws>
                    NullPointerException {@inheritDoc}                    
                </throws>
                <see>
                    javax.swing.JComponent#getBaseline(int,int)                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="getBaselineResizeBehavior" type="Component.BaselineResizeBehavior" line="418">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <scope line="420"/>
            </method>
            <method name="layout" type="String" line="435">
                <params>
                    <param name="b" type="AbstractButton"/>
                    <param name="fm" type="FontMetrics"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <comment line="446">
                    layout the text and icon                    
                </comment>
                <declaration name="i" type="Insets" line="436"/>
            </method>
            <javadoc line="454">
                Returns the ButtonListener for the passed in Button, or null if one
                  could not be found.                
            </javadoc>
            <method name="getButtonListener" type="BasicButtonListener" line="458">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
                <declaration name="listeners" type="MouseMotionListener[]" line="459"/>
                <scope line="461">
                    <scope line="462">
                        <scope line="463"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>