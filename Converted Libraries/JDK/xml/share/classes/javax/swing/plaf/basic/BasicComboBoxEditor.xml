<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.basic">
        <import package="javax.swing.ComboBoxEditor"/>
        <import package="javax.swing.JTextField"/>
        <import package="javax.swing.border.Border"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.event"/>
        <import package="java.lang.reflect.Method"/>
        <class name="BasicComboBoxEditor" line="35">
            <comment line="114">
                This used to do something but now it doesn&apos;t.  It couldn&apos;t be                
            </comment>
            <comment line="115">
                removed because it would be an API change to do so.                
            </comment>
            <comment line="118">
                This used to do something but now it doesn&apos;t.  It couldn&apos;t be                
            </comment>
            <comment line="119">
                removed because it would be an API change to do so.                
            </comment>
            <implements interface="ComboBoxEditor"/>
            <implements interface="FocusListener"/>
            <javadoc line="35">
                The default editor for editable combo boxes. The editor is implemented as a JTextField.                
                <author>
                    Arnaud Weber                    
                </author>
                <author>
                    Mark Davidson                    
                </author>
            </javadoc>
            <declaration name="editor" type="JTextField" line="42"/>
            <declaration name="oldValue" type="Object" line="43"/>
            <method name="BasicComboBoxEditor" type="constructor" line="45"/>
            <method name="getEditorComponent" type="Component" line="49"/>
            <javadoc line="53">
                Creates the internal editor component. Override this to provide
                  a custom implementation.                
                <return>
                    a new editor component                    
                </return>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="createEditorComponent" type="JTextField" line="60">
                <declaration name="editor" type="JTextField" line="61"/>
            </method>
            <javadoc line="66">
                Sets the item that should be edited.                
                <param>
                    anObject the displayed value of the editor                    
                </param>
            </javadoc>
            <method name="setItem" type="void" line="71">
                <params>
                    <param name="anObject" type="Object"/>
                </params>
                <comment line="80">
                    workaround for 4530952                    
                </comment>
                <declaration name="text" type="String" line="72"/>
                <scope line="74"/>
                <scope line="77"/>
                <scope line="81"/>
            </method>
            <method name="getItem" type="Object" line="86">
                <comment line="90">
                    The original value is not a string. Should return the value in it&apos;s                    
                </comment>
                <comment line="91">
                    original type.                    
                </comment>
                <comment line="95">
                    Must take the value from the editor and get the value and cast it to the new type.                    
                </comment>
                <comment line="101">
                    Fail silently and return the newValue (a String object)                    
                </comment>
                <declaration name="newValue" type="Object" line="87"/>
                <scope line="89">
                    <scope line="92"/>
                    <scope line="94">
                        <declaration name="cls" type="Class&lt;?&gt;" line="96"/>
                        <scope line="97">
                            <declaration name="method" type="Method" line="98"/>
                        </scope>
                        <scope line="100"/>
                    </scope>
                </scope>
            </method>
            <method name="selectAll" type="void" line="108"/>
            <method name="focusGained" type="void" line="115">
                <params>
                    <param name="e" type="FocusEvent"/>
                </params>
            </method>
            <method name="focusLost" type="void" line="119">
                <params>
                    <param name="e" type="FocusEvent"/>
                </params>
            </method>
            <method name="addActionListener" type="void" line="121">
                <params>
                    <param name="l" type="ActionListener"/>
                </params>
            </method>
            <method name="removeActionListener" type="void" line="125">
                <params>
                    <param name="l" type="ActionListener"/>
                </params>
            </method>
            <class name="BorderlessTextField" line="129">
                <extends class="JTextField"/>
                <comment line="135">
                    workaround for 4530952                    
                </comment>
                <method name="BorderlessTextField" type="constructor" line="130">
                    <params>
                        <param name="value" type="String"/>
                        <param name="n" type="int"/>
                    </params>
                </method>
                <method name="setText" type="void" line="135">
                    <params>
                        <param name="s" type="String"/>
                    </params>
                    <scope line="136"/>
                </method>
                <method name="setBorder" type="void" line="142">
                    <params>
                        <param name="b" type="Border"/>
                    </params>
                    <scope line="143"/>
                </method>
            </class>
            <class name="UIResource" line="149">
                <extends class="BasicComboBoxEditor"/>
                <comment line="135">
                    workaround for 4530952                    
                </comment>
                <implements interface="javax.swing.plaf.UIResource"/>
                <javadoc line="149">
                    A subclass of BasicComboBoxEditor that implements UIResource.
                      BasicComboBoxEditor doesn&apos;t implement UIResource
                      directly so that applications can safely override the
                      cellRenderer property with BasicListCellRenderer subclasses.
                      &lt;p&gt;
                      &lt;strong&gt;Warning:&lt;/strong&gt;
                      Serialized objects of this class will not be compatible with
                      future Swing releases. The current serialization support is
                      appropriate for short term storage or RMI between applications running
                      the same version of Swing.  As of 1.4, support for long term storage
                      of all JavaBeans&lt;sup&gt;&lt;font size=&quot;-2&quot;&gt;TM&lt;/font&gt;&lt;/sup&gt;
                      has been added to the &lt;code&gt;java.beans&lt;/code&gt; package.
                      Please see {@link java.beans.XMLEncoder}.                    
                </javadoc>
            </class>
        </class>
    </source>