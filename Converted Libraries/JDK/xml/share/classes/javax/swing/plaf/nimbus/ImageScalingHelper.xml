<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.nimbus">
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Image"/>
        <import package="java.awt.Insets"/>
        <class name="ImageScalingHelper" line="31">
            <javadoc line="31">
                ImageScalingHelper                
                <author>
                    Created by Jasper Potts (Aug 8, 2007)                    
                </author>
            </javadoc>
            <javadoc line="38">
                Enumeration for the types of painting this class can handle.                
            </javadoc>
            <javadoc line="40">
                Painting type indicating the image should be centered in the space provided.  When used the &lt;code&gt;mask&lt;/code&gt;
                  is ignored.                
            </javadoc>
            <javadoc line="46">
                Painting type indicating the image should be tiled across the specified width and height.  When used the
                  &lt;code&gt;mask&lt;/code&gt; is ignored.                
            </javadoc>
            <javadoc line="52">
                Painting type indicating the image should be split into nine regions with the top, left, bottom and right
                  areas stretched.                
            </javadoc>
            <javadoc line="58">
                Painting type indicating the image should be split into nine regions with the top, left, bottom and right
                  areas tiled.                
            </javadoc>
            <declaration name="EMPTY_INSETS" type="Insets" line="67"/>
            <declaration name="PAINT_TOP_LEFT" type="int" line="69"/>
            <declaration name="PAINT_TOP" type="int" line="70"/>
            <declaration name="PAINT_TOP_RIGHT" type="int" line="71"/>
            <declaration name="PAINT_LEFT" type="int" line="72"/>
            <declaration name="PAINT_CENTER" type="int" line="73"/>
            <declaration name="PAINT_RIGHT" type="int" line="74"/>
            <declaration name="PAINT_BOTTOM_RIGHT" type="int" line="75"/>
            <declaration name="PAINT_BOTTOM" type="int" line="76"/>
            <declaration name="PAINT_BOTTOM_LEFT" type="int" line="77"/>
            <declaration name="PAINT_ALL" type="int" line="78"/>
            <javadoc line="78">
                Specifies that all regions should be painted.  If this is set any other regions specified will not be painted.
                  For example PAINT_ALL | PAINT_CENTER will paint all but the center.                
            </javadoc>
            <javadoc line="84">
                Paints using the algorightm specified by &lt;code&gt;paintType&lt;/code&gt;.                
                <param>
                    g         Graphics to render to                    
                </param>
                <param>
                    x         X-coordinate                    
                </param>
                <param>
                    y         Y-coordinate                    
                </param>
                <param>
                    w         Width to render to                    
                </param>
                <param>
                    h         Height to render to                    
                </param>
                <param>
                    image     Image to render from, if <code>null</code> this method will do nothing                    
                </param>
                <param>
                    sInsets   Insets specifying the portion of the image that will be stretched or tiled, if <code>null</code>
                      empty <code>Insets</code> will be used.                    
                </param>
                <param>
                    dInsets   Destination insets specifying the portion of the image will be stretched or tiled, if
                      <code>null</code> empty <code>Insets</code> will be used.                    
                </param>
                <param>
                    paintType Specifies what type of algorithm to use in painting                    
                </param>
                <param>
                    mask      Specifies portion of image to render, if <code>PAINT_ALL</code> is specified, any other regions
                      specified will not be painted, for example PAINT_ALL | PAINT_CENTER paints everything but the
                      center.                    
                </param>
            </javadoc>
            <method name="paint" type="void" line="104">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="image" type="Image"/>
                    <param name="sInsets" type="Insets"/>
                    <param name="dInsets" type="Insets"/>
                    <param name="paintType" type="PaintType"/>
                    <param name="mask" type="int"/>
                </params>
                <comment line="118">
                    Center the image                    
                </comment>
                <comment line="122">
                    Tile the image                    
                </comment>
                <comment line="147">
                    Constrain the insets to the size of the image                    
                </comment>
                <comment line="155">
                    Constrain the insets to the size of the region we&apos;re painting                    
                </comment>
                <comment line="156">
                    in.                    
                </comment>
                <scope line="105"/>
                <scope line="108"/>
                <scope line="111"/>
                <declaration name="iw" type="int" line="114"/>
                <declaration name="ih" type="int" line="115"/>
                <scope line="117"/>
                <scope line="121">
                    <declaration name="lastIY" type="int" line="123"/>
                    <scope line="125">
                        <declaration name="lastIX" type="int" line="126"/>
                        <scope line="128">
                            <declaration name="dx2" type="int" line="129"/>
                            <declaration name="dy2" type="int" line="130"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="136">
                    <declaration name="st" type="int" line="137"/>
                    <declaration name="sl" type="int" line="138"/>
                    <declaration name="sb" type="int" line="139"/>
                    <declaration name="sr" type="int" line="140"/>
                    <declaration name="dt" type="int" line="142"/>
                    <declaration name="dl" type="int" line="143"/>
                    <declaration name="db" type="int" line="144"/>
                    <declaration name="dr" type="int" line="145"/>
                    <scope line="148"/>
                    <scope line="151"/>
                    <scope line="157"/>
                    <scope line="160"/>
                    <declaration name="stretch" type="boolean" line="164"/>
                    <scope line="165"/>
                    <scope line="169"/>
                    <scope line="173"/>
                    <scope line="177"/>
                    <scope line="181"/>
                    <scope line="185"/>
                    <scope line="190"/>
                    <scope line="194"/>
                    <scope line="199"/>
                    <scope line="203"/>
                </scope>
            </method>
            <javadoc line="210">
                Draws a portion of an image, stretched or tiled.                
                <param>
                    image Image to render.                    
                </param>
                <param>
                    g Graphics to render to                    
                </param>
                <param>
                    stretch Whether the image should be stretched or timed in the
                      provided space.                    
                </param>
                <param>
                    dx1 X origin to draw to                    
                </param>
                <param>
                    dy1 Y origin to draw to                    
                </param>
                <param>
                    dx2 End x location to draw to                    
                </param>
                <param>
                    dy2 End y location to draw to                    
                </param>
                <param>
                    sx1 X origin to draw from                    
                </param>
                <param>
                    sy1 Y origin to draw from                    
                </param>
                <param>
                    sx2 Max x location to draw from                    
                </param>
                <param>
                    sy2 Max y location to draw from                    
                </param>
                <param>
                    xDirection Used if the image is not stretched. If true it
                      indicates the image should be tiled along the x axis.                    
                </param>
            </javadoc>
            <method name="drawChunk" type="void" line="231">
                <params>
                    <param name="image" type="Image"/>
                    <param name="g" type="Graphics"/>
                    <param name="stretch" type="boolean"/>
                    <param name="dx1" type="int"/>
                    <param name="dy1" type="int"/>
                    <param name="dx2" type="int"/>
                    <param name="dy2" type="int"/>
                    <param name="sx1" type="int"/>
                    <param name="sy1" type="int"/>
                    <param name="sx2" type="int"/>
                    <param name="sy2" type="int"/>
                    <param name="xDirection" type="boolean"/>
                </params>
                <comment line="234">
                    Bogus location, nothing to paint                    
                </comment>
                <scope line="233"/>
                <scope line="237"/>
                <scope line="240">
                    <declaration name="xSize" type="int" line="241"/>
                    <declaration name="ySize" type="int" line="242"/>
                    <declaration name="deltaX" type="int" line="243"/>
                    <declaration name="deltaY" type="int" line="244"/>
                    <scope line="246"/>
                    <scope line="250"/>
                    <scope line="254">
                        <declaration name="newDX2" type="int" line="255"/>
                        <declaration name="newDY2" type="int" line="256"/>
                    </scope>
                </scope>
            </method>
            <method name="drawImage" type="void" line="269">
                <params>
                    <param name="image" type="Image"/>
                    <param name="g" type="Graphics"/>
                    <param name="dx1" type="int"/>
                    <param name="dy1" type="int"/>
                    <param name="dx2" type="int"/>
                    <param name="dy2" type="int"/>
                    <param name="sx1" type="int"/>
                    <param name="sy1" type="int"/>
                    <param name="sx2" type="int"/>
                    <param name="sy2" type="int"/>
                </params>
                <comment line="270">
                    PENDING: is this necessary, will G2D do it for me?                    
                </comment>
                <comment line="273">
                    Bogus location, nothing to paint                    
                </comment>
                <scope line="272"/>
            </method>
        </class>
    </source>