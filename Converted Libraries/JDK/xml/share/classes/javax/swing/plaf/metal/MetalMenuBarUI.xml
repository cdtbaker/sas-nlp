<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.metal">
        <import package="java.awt"/>
        <import package="javax.swing"/>
        <import package="javax.swing.plaf.ComponentUI"/>
        <import package="javax.swing.plaf.UIResource"/>
        <import package="javax.swing.plaf.basic"/>
        <class name="MetalMenuBarUI" line="7">
            <extends class="BasicMenuBarUI"/>
            <javadoc line="7">
                Metal implementation of &lt;code&gt;MenuBarUI&lt;/code&gt;. This class is responsible
                  for providing the metal look and feel for &lt;code&gt;JMenuBar&lt;/code&gt;s.                
                <see>
                    javax.swing.plaf.MenuBarUI                    
                </see>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <javadoc line="14">
                Creates the &lt;code&gt;ComponentUI&lt;/code&gt; implementation for the passed
                  in component.                
                <param>
                    x JComponent to create the ComponentUI implementation for                    
                </param>
                <return>
                    ComponentUI implementation for &lt;code&gt;x&lt;/code&gt;                    
                </return>
                <throws>
                    NullPointerException if &lt;code&gt;x&lt;/code&gt; is null                    
                </throws>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="21">
                <params>
                    <param name="x" type="JComponent"/>
                </params>
                <scope line="22"/>
            </method>
            <javadoc line="27">
                Configures the specified component appropriate for the metal look and
                  feel.                
                <param>
                    c the component where this UI delegate is being installed                    
                </param>
                <throws>
                    NullPointerException if &lt;code&gt;c&lt;/code&gt; is null.                    
                </throws>
            </javadoc>
            <method name="installUI" type="void" line="33">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="37">
                Reverses configuration which was done on the specified component during
                  &lt;code&gt;installUI&lt;/code&gt;.                
                <param>
                    c the component where this UI delegate is being installed                    
                </param>
                <throws>
                    NullPointerException if &lt;code&gt;c&lt;/code&gt; is null.                    
                </throws>
            </javadoc>
            <method name="uninstallUI" type="void" line="43">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="47">
                If necessary paints the background of the component, then
                  invokes &lt;code&gt;paint&lt;/code&gt;.                
                <param>
                    g Graphics to paint to                    
                </param>
                <param>
                    c JComponent painting on                    
                </param>
                <throws>
                    NullPointerException if &lt;code&gt;g&lt;/code&gt; or &lt;code&gt;c&lt;/code&gt; is
                      null                    
                </throws>
                <see>
                    javax.swing.plaf.ComponentUI#update                    
                </see>
                <see>
                    javax.swing.plaf.ComponentUI#paint                    
                </see>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="update" type="void" line="58">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="isOpaque" type="boolean" line="59"/>
                <scope line="60"/>
                <scope line="63">
                    <scope line="64">
                        <declaration name="tb" type="JToolBar" line="65"/>
                        <scope line="66"/>
                    </scope>
                </scope>
                <scope line="75"/>
            </method>
        </class>
    </source>