<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.multi">
        <import package="java.util.Vector"/>
        <import package="javax.swing.plaf.FileChooserUI"/>
        <import package="javax.swing.filechooser.FileFilter"/>
        <import package="javax.swing.JFileChooser"/>
        <import package="javax.swing.filechooser.FileView"/>
        <import package="java.lang.String"/>
        <import package="java.io.File"/>
        <import package="javax.swing.plaf.ComponentUI"/>
        <import package="javax.swing.JComponent"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Dimension"/>
        <import package="javax.accessibility.Accessible"/>
        <class name="MultiFileChooserUI" line="14">
            <extends class="FileChooserUI"/>
            <javadoc line="14">
                A multiplexing UI used to combine &lt;code&gt;FileChooserUI&lt;/code&gt;s.
                  &lt;p&gt;This file was automatically generated by AutoMulti.                
                <author>
                    Otto Multey                    
                </author>
            </javadoc>
            <declaration name="uis" type="Vector" line="20"/>
            <javadoc line="20">
                The vector containing the real UIs.  This is populated
                  in the call to &lt;code&gt;createUI&lt;/code&gt;, and can be obtained by calling
                  the &lt;code&gt;getUIs&lt;/code&gt; method.  The first element is guaranteed to be the real UI
                  obtained from the default look and feel.                
            </javadoc>
            <javadoc line="27">
                Returns the list of UIs associated with this multiplexing UI.  This
                  allows processing of the UIs by an application aware of multiplexing
                  UIs on components.                
            </javadoc>
            <method name="getUIs" type="ComponentUI[]" line="32"/>
            <javadoc line="35">
                Invokes the &lt;code&gt;getAcceptAllFileFilter&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default &lt;code&gt;LookAndFeel&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getAcceptAllFileFilter" type="FileFilter" line="40">
                <params>
                    <param name="a" type="JFileChooser"/>
                </params>
                <declaration name="returnValue" type="FileFilter" line="41"/>
                <scope line="42"/>
            </method>
            <javadoc line="47">
                Invokes the &lt;code&gt;getFileView&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default &lt;code&gt;LookAndFeel&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getFileView" type="FileView" line="52">
                <params>
                    <param name="a" type="JFileChooser"/>
                </params>
                <declaration name="returnValue" type="FileView" line="53"/>
                <scope line="54"/>
            </method>
            <javadoc line="59">
                Invokes the &lt;code&gt;getApproveButtonText&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default &lt;code&gt;LookAndFeel&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getApproveButtonText" type="String" line="64">
                <params>
                    <param name="a" type="JFileChooser"/>
                </params>
                <declaration name="returnValue" type="String" line="65"/>
                <scope line="66"/>
            </method>
            <javadoc line="71">
                Invokes the &lt;code&gt;getDialogTitle&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default &lt;code&gt;LookAndFeel&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getDialogTitle" type="String" line="76">
                <params>
                    <param name="a" type="JFileChooser"/>
                </params>
                <declaration name="returnValue" type="String" line="77"/>
                <scope line="78"/>
            </method>
            <javadoc line="83">
                Invokes the &lt;code&gt;rescanCurrentDirectory&lt;/code&gt; method on each UI handled by this object.                
            </javadoc>
            <method name="rescanCurrentDirectory" type="void" line="86">
                <params>
                    <param name="a" type="JFileChooser"/>
                </params>
                <scope line="87"/>
            </method>
            <javadoc line="91">
                Invokes the &lt;code&gt;ensureFileIsVisible&lt;/code&gt; method on each UI handled by this object.                
            </javadoc>
            <method name="ensureFileIsVisible" type="void" line="94">
                <params>
                    <param name="a" type="JFileChooser"/>
                    <param name="b" type="File"/>
                </params>
                <scope line="95"/>
            </method>
            <javadoc line="99">
                Invokes the &lt;code&gt;contains&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default &lt;code&gt;LookAndFeel&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="contains" type="boolean" line="104">
                <params>
                    <param name="a" type="JComponent"/>
                    <param name="b" type="int"/>
                    <param name="c" type="int"/>
                </params>
                <declaration name="returnValue" type="boolean" line="105"/>
                <scope line="106"/>
            </method>
            <javadoc line="111">
                Invokes the &lt;code&gt;update&lt;/code&gt; method on each UI handled by this object.                
            </javadoc>
            <method name="update" type="void" line="114">
                <params>
                    <param name="a" type="Graphics"/>
                    <param name="b" type="JComponent"/>
                </params>
                <scope line="115"/>
            </method>
            <javadoc line="119">
                Returns a multiplexing UI instance if any of the auxiliary
                  &lt;code&gt;LookAndFeel&lt;/code&gt;s supports this UI.  Otherwise, just returns the
                  UI object obtained from the default &lt;code&gt;LookAndFeel&lt;/code&gt;.                
            </javadoc>
            <method name="createUI" type="ComponentUI" line="124">
                <params>
                    <param name="a" type="JComponent"/>
                </params>
                <declaration name="mui" type="ComponentUI" line="125"/>
            </method>
            <javadoc line="128">
                Invokes the &lt;code&gt;installUI&lt;/code&gt; method on each UI handled by this object.                
            </javadoc>
            <method name="installUI" type="void" line="131">
                <params>
                    <param name="a" type="JComponent"/>
                </params>
                <scope line="132"/>
            </method>
            <javadoc line="136">
                Invokes the &lt;code&gt;uninstallUI&lt;/code&gt; method on each UI handled by this object.                
            </javadoc>
            <method name="uninstallUI" type="void" line="139">
                <params>
                    <param name="a" type="JComponent"/>
                </params>
                <scope line="140"/>
            </method>
            <javadoc line="144">
                Invokes the &lt;code&gt;paint&lt;/code&gt; method on each UI handled by this object.                
            </javadoc>
            <method name="paint" type="void" line="147">
                <params>
                    <param name="a" type="Graphics"/>
                    <param name="b" type="JComponent"/>
                </params>
                <scope line="148"/>
            </method>
            <javadoc line="152">
                Invokes the &lt;code&gt;getPreferredSize&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default &lt;code&gt;LookAndFeel&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getPreferredSize" type="Dimension" line="157">
                <params>
                    <param name="a" type="JComponent"/>
                </params>
                <declaration name="returnValue" type="Dimension" line="158"/>
                <scope line="159"/>
            </method>
            <javadoc line="164">
                Invokes the &lt;code&gt;getMinimumSize&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default &lt;code&gt;LookAndFeel&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getMinimumSize" type="Dimension" line="169">
                <params>
                    <param name="a" type="JComponent"/>
                </params>
                <declaration name="returnValue" type="Dimension" line="170"/>
                <scope line="171"/>
            </method>
            <javadoc line="176">
                Invokes the &lt;code&gt;getMaximumSize&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default &lt;code&gt;LookAndFeel&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getMaximumSize" type="Dimension" line="181">
                <params>
                    <param name="a" type="JComponent"/>
                </params>
                <declaration name="returnValue" type="Dimension" line="182"/>
                <scope line="183"/>
            </method>
            <javadoc line="188">
                Invokes the &lt;code&gt;getAccessibleChildrenCount&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default &lt;code&gt;LookAndFeel&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getAccessibleChildrenCount" type="int" line="193">
                <params>
                    <param name="a" type="JComponent"/>
                </params>
                <declaration name="returnValue" type="int" line="194"/>
                <scope line="195"/>
            </method>
            <javadoc line="200">
                Invokes the &lt;code&gt;getAccessibleChild&lt;/code&gt; method on each UI handled by this object.                
                <return>
                    the value obtained from the first UI, which is
                      the UI obtained from the default &lt;code&gt;LookAndFeel&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getAccessibleChild" type="Accessible" line="205">
                <params>
                    <param name="a" type="JComponent"/>
                    <param name="b" type="int"/>
                </params>
                <declaration name="returnValue" type="Accessible" line="206"/>
                <scope line="207"/>
            </method>
        </class>
    </source>