<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.basic">
        <import package="javax.swing"/>
        <import package="javax.swing.filechooser"/>
        <import package="javax.swing.filechooser.FileFilter"/>
        <import package="javax.swing.event"/>
        <import package="javax.swing.plaf"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.awt.datatransfer"/>
        <import package="java.beans"/>
        <import package="java.io"/>
        <import package="java.util"/>
        <import package="java.util.List"/>
        <import package="java.util.regex"/>
        <import package="sun.awt.shell.ShellFolder"/>
        <import package="sun.swing"/>
        <import package="sun.swing.SwingUtilities2"/>
        <class name="BasicFileChooserUI" line="18">
            <extends class="FileChooserUI"/>
            <javadoc line="18">
                Basic L&amp;F implementation of a FileChooser.                
                <author>
                    Jeff Dinkins                    
                </author>
            </javadoc>
            <declaration name="directoryIcon" type="Icon" line="23"/>
            <declaration name="fileIcon" type="Icon" line="24"/>
            <declaration name="computerIcon" type="Icon" line="25"/>
            <declaration name="hardDriveIcon" type="Icon" line="26"/>
            <declaration name="floppyDriveIcon" type="Icon" line="27"/>
            <declaration name="newFolderIcon" type="Icon" line="28"/>
            <declaration name="upFolderIcon" type="Icon" line="29"/>
            <declaration name="homeFolderIcon" type="Icon" line="30"/>
            <declaration name="listViewIcon" type="Icon" line="31"/>
            <declaration name="detailsViewIcon" type="Icon" line="32"/>
            <declaration name="viewMenuIcon" type="Icon" line="33"/>
            <declaration name="saveButtonMnemonic" type="int" line="34"/>
            <declaration name="openButtonMnemonic" type="int" line="35"/>
            <declaration name="cancelButtonMnemonic" type="int" line="36"/>
            <declaration name="updateButtonMnemonic" type="int" line="37"/>
            <declaration name="helpButtonMnemonic" type="int" line="38"/>
            <declaration name="directoryOpenButtonMnemonic" type="int" line="39"/>
            <javadoc line="39">
                The mnemonic keycode used for the approve button when a directory
                  is selected and the current selection mode is FILES_ONLY.                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="saveButtonText" type="String" line="45"/>
            <declaration name="openButtonText" type="String" line="46"/>
            <declaration name="cancelButtonText" type="String" line="47"/>
            <declaration name="updateButtonText" type="String" line="48"/>
            <declaration name="helpButtonText" type="String" line="49"/>
            <declaration name="directoryOpenButtonText" type="String" line="50"/>
            <javadoc line="50">
                The label text displayed on the approve button when a directory
                  is selected and the current selection mode is FILES_ONLY.                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="openDialogTitleText" type="String" line="56"/>
            <declaration name="saveDialogTitleText" type="String" line="57"/>
            <declaration name="saveButtonToolTipText" type="String" line="58"/>
            <declaration name="openButtonToolTipText" type="String" line="59"/>
            <declaration name="cancelButtonToolTipText" type="String" line="60"/>
            <declaration name="updateButtonToolTipText" type="String" line="61"/>
            <declaration name="helpButtonToolTipText" type="String" line="62"/>
            <declaration name="directoryOpenButtonToolTipText" type="String" line="63"/>
            <javadoc line="63">
                The tooltip text displayed on the approve button when a directory
                  is selected and the current selection mode is FILES_ONLY.                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="approveSelectionAction" type="Action" line="69"/>
            <declaration name="cancelSelectionAction" type="Action" line="70"/>
            <declaration name="updateAction" type="Action" line="71"/>
            <declaration name="newFolderAction" type="Action" line="72"/>
            <declaration name="goHomeAction" type="Action" line="73"/>
            <declaration name="changeToParentDirectoryAction" type="Action" line="74"/>
            <declaration name="newFolderErrorSeparator" type="String" line="75"/>
            <declaration name="newFolderErrorText" type="String" line="76"/>
            <declaration name="newFolderParentDoesntExistTitleText" type="String" line="77"/>
            <declaration name="newFolderParentDoesntExistText" type="String" line="78"/>
            <declaration name="fileDescriptionText" type="String" line="79"/>
            <declaration name="directoryDescriptionText" type="String" line="80"/>
            <declaration name="filechooser" type="JFileChooser" line="81"/>
            <declaration name="directorySelected" type="boolean" line="82"/>
            <declaration name="directory" type="File" line="83"/>
            <declaration name="propertyChangeListener" type="PropertyChangeListener" line="84"/>
            <declaration name="acceptAllFileFilter" type="AcceptAllFileFilter" line="85"/>
            <declaration name="actualFileFilter" type="FileFilter" line="86"/>
            <declaration name="globFilter" type="GlobFilter" line="87"/>
            <declaration name="model" type="BasicDirectoryModel" line="88"/>
            <declaration name="fileView" type="BasicFileView" line="89"/>
            <declaration name="usesSingleFilePane" type="boolean" line="90"/>
            <declaration name="readOnly" type="boolean" line="91"/>
            <declaration name="accessoryPanel" type="JPanel" line="92"/>
            <declaration name="handler" type="Handler" line="93"/>
            <javadoc line="94">
                Creates a {@code BasicFileChooserUI} implementation
                  for the specified component. By default
                  the {@code BasicLookAndFeel} class uses{@code createUI} methods of all basic UIs classes
                  to instantiate UIs.                
                <param>
                    c the {@code JFileChooser} which needs a UI                    
                </param>
                <return>
                    the {@code BasicFileChooserUI} object                    
                </return>
                <see>
                    UIDefaults#getUI(JComponent)                    
                </see>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="104">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="BasicFileChooserUI" type="constructor" line="107">
                <params>
                    <param name="b" type="JFileChooser"/>
                </params>
            </method>
            <method name="installUI" type="void" line="109">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="uninstallUI" type="void" line="119">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <scope line="123"/>
            </method>
            <method name="installComponents" type="void" line="130">
                <params>
                    <param name="fc" type="JFileChooser"/>
                </params>
            </method>
            <method name="uninstallComponents" type="void" line="132">
                <params>
                    <param name="fc" type="JFileChooser"/>
                </params>
            </method>
            <method name="installListeners" type="void" line="134">
                <params>
                    <param name="fc" type="JFileChooser"/>
                </params>
                <scope line="136"/>
                <declaration name="inputMap" type="InputMap" line="140"/>
                <declaration name="actionMap" type="ActionMap" line="142"/>
            </method>
            <method name="getInputMap" type="InputMap" line="145">
                <params>
                    <param name="condition" type="int"/>
                </params>
                <scope line="146"/>
            </method>
            <method name="getActionMap" type="ActionMap" line="151"/>
            <method name="createActionMap" type="ActionMap" line="154">
                <declaration name="map" type="ActionMap" line="155"/>
                <anonymous_class line="156">
                    <method name="actionPerformed" type="void" line="157">
                        <params>
                            <param name="evt" type="ActionEvent"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="refreshAction" type="Action" line="156"/>
            </method>
            <method name="uninstallListeners" type="void" line="168">
                <params>
                    <param name="fc" type="JFileChooser"/>
                </params>
                <scope line="169"/>
            </method>
            <method name="installDefaults" type="void" line="176">
                <params>
                    <param name="fc" type="JFileChooser"/>
                </params>
                <declaration name="th" type="TransferHandler" line="181"/>
                <scope line="182"/>
            </method>
            <method name="installIcons" type="void" line="187">
                <params>
                    <param name="fc" type="JFileChooser"/>
                </params>
            </method>
            <method name="installStrings" type="void" line="200">
                <params>
                    <param name="fc" type="JFileChooser"/>
                </params>
                <declaration name="l" type="Locale" line="201"/>
            </method>
            <method name="uninstallDefaults" type="void" line="229">
                <params>
                    <param name="fc" type="JFileChooser"/>
                </params>
                <scope line="232"/>
            </method>
            <method name="uninstallIcons" type="void" line="236">
                <params>
                    <param name="fc" type="JFileChooser"/>
                </params>
            </method>
            <method name="uninstallStrings" type="void" line="249">
                <params>
                    <param name="fc" type="JFileChooser"/>
                </params>
            </method>
            <method name="createModel" type="void" line="263">
                <scope line="264"/>
            </method>
            <method name="getModel" type="BasicDirectoryModel" line="269"/>
            <method name="createPropertyChangeListener" type="PropertyChangeListener" line="272">
                <params>
                    <param name="fc" type="JFileChooser"/>
                </params>
            </method>
            <method name="getFileName" type="String" line="275"/>
            <method name="getDirectoryName" type="String" line="278"/>
            <method name="setFileName" type="void" line="281">
                <params>
                    <param name="filename" type="String"/>
                </params>
            </method>
            <method name="setDirectoryName" type="void" line="283">
                <params>
                    <param name="dirname" type="String"/>
                </params>
            </method>
            <method name="rescanCurrentDirectory" type="void" line="285">
                <params>
                    <param name="fc" type="JFileChooser"/>
                </params>
            </method>
            <method name="ensureFileIsVisible" type="void" line="287">
                <params>
                    <param name="fc" type="JFileChooser"/>
                    <param name="f" type="File"/>
                </params>
            </method>
            <method name="getFileChooser" type="JFileChooser" line="289"/>
            <method name="getAccessoryPanel" type="JPanel" line="292"/>
            <method name="getApproveButton" type="JButton" line="295">
                <params>
                    <param name="fc" type="JFileChooser"/>
                </params>
            </method>
            <method name="getDefaultButton" type="JButton" line="298">
                <params>
                    <param name="fc" type="JFileChooser"/>
                </params>
            </method>
            <method name="getApproveButtonToolTipText" type="String" line="301">
                <params>
                    <param name="fc" type="JFileChooser"/>
                </params>
                <declaration name="tooltipText" type="String" line="302"/>
                <scope line="303"/>
                <scope line="306"/>
                <scope line="309"/>
            </method>
            <method name="clearIconCache" type="void" line="314"/>
            <method name="getHandler" type="Handler" line="317">
                <scope line="318"/>
            </method>
            <method name="createDoubleClickListener" type="MouseListener" line="323">
                <params>
                    <param name="fc" type="JFileChooser"/>
                    <param name="list" type="JList"/>
                </params>
            </method>
            <method name="createListSelectionListener" type="ListSelectionListener" line="326">
                <params>
                    <param name="fc" type="JFileChooser"/>
                </params>
            </method>
            <class name="Handler" line="329">
                <implements interface="MouseListener"/>
                <implements interface="ListSelectionListener"/>
                <declaration name="list" type="JList" line="330"/>
                <method name="Handler" type="constructor" line="331"/>
                <method name="Handler" type="constructor" line="333">
                    <params>
                        <param name="list" type="JList"/>
                    </params>
                </method>
                <method name="mouseClicked" type="void" line="336">
                    <params>
                        <param name="evt" type="MouseEvent"/>
                    </params>
                    <scope line="337">
                        <declaration name="index" type="int" line="338"/>
                        <scope line="339">
                            <declaration name="f" type="File" line="340"/>
                            <scope line="341"/>
                            <scope line="344"/>
                            <scope line="346"/>
                            <scope line="350"/>
                        </scope>
                    </scope>
                </method>
                <method name="mouseEntered" type="void" line="356">
                    <params>
                        <param name="evt" type="MouseEvent"/>
                    </params>
                    <scope line="357">
                        <declaration name="th1" type="TransferHandler" line="358"/>
                        <declaration name="th2" type="TransferHandler" line="359"/>
                        <scope line="360"/>
                        <scope line="363"/>
                    </scope>
                </method>
                <method name="mouseExited" type="void" line="368">
                    <params>
                        <param name="evt" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mousePressed" type="void" line="370">
                    <params>
                        <param name="evt" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseReleased" type="void" line="372">
                    <params>
                        <param name="evt" type="MouseEvent"/>
                    </params>
                </method>
                <method name="valueChanged" type="void" line="374">
                    <params>
                        <param name="evt" type="ListSelectionEvent"/>
                    </params>
                    <scope line="375">
                        <declaration name="chooser" type="JFileChooser" line="376"/>
                        <declaration name="fsv" type="FileSystemView" line="377"/>
                        <declaration name="list" type="JList" line="378"/>
                        <declaration name="fsm" type="int" line="379"/>
                        <declaration name="useSetDirectory" type="boolean" line="380"/>
                        <scope line="381">
                            <declaration name="files" type="File[]" line="382"/>
                            <declaration name="objects" type="Object[]" line="383"/>
                            <scope line="384">
                                <scope line="385"/>
                                <scope line="389">
                                    <declaration name="fList" type="ArrayList&amp;lt;File&amp;gt;" line="390"/>
                                    <scope line="391">
                                        <declaration name="f" type="File" line="392"/>
                                        <declaration name="isDir" type="boolean" line="393"/>
                                        <scope line="394"/>
                                    </scope>
                                    <scope line="398"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="406">
                            <declaration name="file" type="File" line="407"/>
                            <scope line="408">
                                <scope line="411"/>
                            </scope>
                            <scope line="415">
                                <scope line="417"/>
                            </scope>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="DoubleClickListener" line="425">
                <extends class="MouseAdapter"/>
                <declaration name="handler" type="Handler" line="426"/>
                <method name="DoubleClickListener" type="constructor" line="427">
                    <params>
                        <param name="list" type="JList"/>
                    </params>
                </method>
                <javadoc line="430">
                    The JList used for representing the files is created by subclasses, but the
                      selection is monitored in this class.  The TransferHandler installed in the
                      JFileChooser is also installed in the file list as it is used as the actual
                      transfer source.  The list is updated on a mouse enter to reflect the current
                      data transfer state of the file chooser.                    
                </javadoc>
                <method name="mouseEntered" type="void" line="437">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseClicked" type="void" line="440">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
            </class>
            <class name="SelectionListener" line="444">
                <implements interface="ListSelectionListener"/>
                <method name="valueChanged" type="void" line="445">
                    <params>
                        <param name="e" type="ListSelectionEvent"/>
                    </params>
                </method>
            </class>
            <javadoc line="449">
                Property to remember whether a directory is currently selected in the UI.                
                <return>
                    &lt;code&gt;true&lt;/code&gt; iff a directory is currently selected.                    
                </return>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="isDirectorySelected" type="boolean" line="454"/>
            <javadoc line="457">
                Property to remember whether a directory is currently selected in the UI.
                  This is normally called by the UI on a selection event.                
                <param>
                    b iff a directory is currently selected.                    
                </param>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="setDirectorySelected" type="void" line="463">
                <params>
                    <param name="b" type="boolean"/>
                </params>
            </method>
            <javadoc line="466">
                Property to remember the directory that is currently selected in the UI.                
                <return>
                    the value of the &lt;code&gt;directory&lt;/code&gt; property                    
                </return>
                <see>
                    #setDirectory                    
                </see>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="getDirectory" type="File" line="472"/>
            <javadoc line="475">
                Property to remember the directory that is currently selected in the UI.
                  This is normally called by the UI on a selection event.                
                <param>
                    f the &lt;code&gt;File&lt;/code&gt; object representing the directory that is
                      currently selected                    
                </param>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="setDirectory" type="void" line="482">
                <params>
                    <param name="f" type="File"/>
                </params>
            </method>
            <javadoc line="485">
                Returns the mnemonic for the given key.                
            </javadoc>
            <method name="getMnemonic" type="int" line="488">
                <params>
                    <param name="key" type="String"/>
                    <param name="l" type="Locale"/>
                </params>
            </method>
            <javadoc line="491">
                Returns the default accept all file filter                
            </javadoc>
            <method name="getAcceptAllFileFilter" type="FileFilter" line="494">
                <params>
                    <param name="fc" type="JFileChooser"/>
                </params>
            </method>
            <method name="getFileView" type="FileView" line="497">
                <params>
                    <param name="fc" type="JFileChooser"/>
                </params>
            </method>
            <javadoc line="500">
                Returns the title of this dialog                
            </javadoc>
            <method name="getDialogTitle" type="String" line="503">
                <params>
                    <param name="fc" type="JFileChooser"/>
                </params>
                <declaration name="dialogTitle" type="String" line="504"/>
                <scope line="505"/>
                <scope line="508"/>
                <scope line="511"/>
                <scope line="514"/>
            </method>
            <method name="getApproveButtonMnemonic" type="int" line="518">
                <params>
                    <param name="fc" type="JFileChooser"/>
                </params>
                <declaration name="mnemonic" type="int" line="519"/>
                <scope line="520"/>
                <scope line="523"/>
                <scope line="526"/>
                <scope line="529"/>
            </method>
            <method name="getApproveButtonText" type="String" line="533">
                <params>
                    <param name="fc" type="JFileChooser"/>
                </params>
                <declaration name="buttonText" type="String" line="534"/>
                <scope line="535"/>
                <scope line="538"/>
                <scope line="541"/>
                <scope line="544"/>
            </method>
            <method name="getNewFolderAction" type="Action" line="548">
                <scope line="549">
                    <scope line="551"/>
                </scope>
            </method>
            <method name="getGoHomeAction" type="Action" line="557"/>
            <method name="getChangeToParentDirectoryAction" type="Action" line="560"/>
            <method name="getApproveSelectionAction" type="Action" line="563"/>
            <method name="getCancelSelectionAction" type="Action" line="566"/>
            <method name="getUpdateAction" type="Action" line="569"/>
            <class name="NewFolderAction" line="572">
                <extends class="AbstractAction"/>
                <javadoc line="572">
                    Creates a new folder.                    
                </javadoc>
                <method name="NewFolderAction" type="constructor" line="576"/>
                <method name="actionPerformed" type="void" line="579">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                    <scope line="580"/>
                    <declaration name="fc" type="JFileChooser" line="583"/>
                    <declaration name="currentDirectory" type="File" line="584"/>
                    <scope line="585"/>
                    <declaration name="newFolder" type="File" line="589"/>
                    <scope line="590">
                        <scope line="592"/>
                        <scope line="595"/>
                    </scope>
                    <scope line="599"/>
                </method>
            </class>
            <class name="GoHomeAction" line="606">
                <extends class="AbstractAction"/>
                <javadoc line="606">
                    Acts on the &quot;home&quot; key event or equivalent event.                    
                </javadoc>
                <method name="GoHomeAction" type="constructor" line="610"/>
                <method name="actionPerformed" type="void" line="613">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                    <declaration name="fc" type="JFileChooser" line="614"/>
                </method>
            </class>
            <class name="ChangeToParentDirectoryAction" line="618">
                <extends class="AbstractAction"/>
                <method name="ChangeToParentDirectoryAction" type="constructor" line="619"/>
                <method name="actionPerformed" type="void" line="623">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                    <declaration name="focusOwner" type="Component" line="624"/>
                    <scope line="625"/>
                </method>
            </class>
            <class name="ApproveSelectionAction" line="630">
                <extends class="AbstractAction"/>
                <javadoc line="630">
                    Responds to an Open or Save request                    
                </javadoc>
                <method name="ApproveSelectionAction" type="constructor" line="634"/>
                <method name="actionPerformed" type="void" line="637">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                    <scope line="638">
                        <declaration name="dir" type="File" line="639"/>
                        <scope line="640">
                            <scope line="641"/>
                            <scope line="644"/>
                        </scope>
                    </scope>
                    <declaration name="chooser" type="JFileChooser" line="650"/>
                    <declaration name="filename" type="String" line="651"/>
                    <declaration name="fs" type="FileSystemView" line="652"/>
                    <declaration name="dir" type="File" line="653"/>
                    <scope line="654">
                        <declaration name="i" type="int" line="655"/>
                        <scope line="656"/>
                    </scope>
                    <scope line="661"/>
                    <declaration name="selectedFile" type="File" line="665"/>
                    <declaration name="selectedFiles" type="File[]" line="666"/>
                    <scope line="667">
                        <scope line="668"/>
                        <scope line="671"/>
                    </scope>
                    <scope line="675">
                        <declaration name="fList" type="List&amp;lt;File&amp;gt;" line="676"/>
                        <declaration name="files" type="String[]" line="677"/>
                        <declaration name="children" type="File[]" line="679"/>
                        <declaration name="childIndex" type="int" line="680"/>
                        <scope line="681">
                            <declaration name="file" type="File" line="682"/>
                            <scope line="683">
                                <scope line="684"/>
                                <scope line="688">
                                    <declaration name="l" type="int" line="689"/>
                                    <scope line="690"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="699"/>
                    </scope>
                    <scope line="704">
                        <scope line="706"/>
                        <declaration name="currentFilter" type="FileFilter" line="709"/>
                        <scope line="710">
                            <scope line="712"/>
                            <scope line="715">
                                <scope line="717"/>
                            </scope>
                            <scope line="724"/>
                        </scope>
                        <declaration name="isDir" type="boolean" line="728"/>
                        <declaration name="isTrav" type="boolean" line="729"/>
                        <declaration name="isDirSelEnabled" type="boolean" line="730"/>
                        <declaration name="isFileSelEnabled" type="boolean" line="731"/>
                        <declaration name="isCtrl" type="boolean" line="732"/>
                        <scope line="733"/>
                        <scope line="737"/>
                    </scope>
                    <scope line="741">
                        <scope line="742">
                            <scope line="743"/>
                        </scope>
                        <scope line="749"/>
                    </scope>
                    <scope line="754">
                        <scope line="755"/>
                        <scope line="758"/>
                    </scope>
                </method>
            </class>
            <method name="resetGlobFilter" type="void" line="765">
                <scope line="766">
                    <declaration name="chooser" type="JFileChooser" line="767"/>
                    <declaration name="currentFilter" type="FileFilter" line="768"/>
                    <scope line="769"/>
                </scope>
            </method>
            <method name="isGlobPattern" type="boolean" line="776">
                <params>
                    <param name="filename" type="String"/>
                </params>
            </method>
            <class name="GlobFilter" line="779">
                <extends class="FileFilter"/>
                <declaration name="pattern" type="Pattern" line="780"/>
                <declaration name="globPattern" type="String" line="781"/>
                <method name="setPattern" type="void" line="782">
                    <params>
                        <param name="globPattern" type="String"/>
                    </params>
                    <declaration name="gPat" type="char[]" line="783"/>
                    <declaration name="rPat" type="char[]" line="784"/>
                    <declaration name="isWin32" type="boolean" line="785"/>
                    <declaration name="inBrackets" type="boolean" line="786"/>
                    <declaration name="j" type="int" line="787"/>
                    <scope line="789">
                        <declaration name="len" type="int" line="790"/>
                        <scope line="791"/>
                        <scope line="794">
                            <scope line="808"/>
                        </scope>
                    </scope>
                    <scope line="816">
                        <scope line="817">
                            <scope line="820"/>
                            <scope line="831"/>
                            <scope line="849"/>
                            <scope line="852">
                                <scope line="854"/>
                                <scope line="857"/>
                            </scope>
                            <scope line="863"/>
                        </scope>
                    </scope>
                </method>
                <method name="accept" type="boolean" line="873">
                    <params>
                        <param name="f" type="File"/>
                    </params>
                    <scope line="874"/>
                    <scope line="877"/>
                </method>
                <method name="getDescription" type="String" line="882"/>
            </class>
            <class name="CancelSelectionAction" line="886">
                <extends class="AbstractAction"/>
                <javadoc line="886">
                    Responds to a cancel request.                    
                </javadoc>
                <method name="actionPerformed" type="void" line="890">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                </method>
            </class>
            <class name="UpdateAction" line="894">
                <extends class="AbstractAction"/>
                <javadoc line="894">
                    Rescans the files in the current directory                    
                </javadoc>
                <method name="actionPerformed" type="void" line="898">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                    <declaration name="fc" type="JFileChooser" line="899"/>
                </method>
            </class>
            <method name="changeDirectory" type="void" line="904">
                <params>
                    <param name="dir" type="File"/>
                </params>
                <declaration name="fc" type="JFileChooser" line="905"/>
                <scope line="906">
                    <scope line="907">
                        <declaration name="shellFolder" type="ShellFolder" line="908"/>
                        <scope line="909">
                            <declaration name="linkedTo" type="File" line="910"/>
                            <scope line="911"/>
                            <scope line="914"/>
                        </scope>
                    </scope>
                    <scope line="919"/>
                </scope>
                <scope line="924"/>
            </method>
            <class name="AcceptAllFileFilter" line="928">
                <extends class="FileFilter"/>
                <method name="AcceptAllFileFilter" type="constructor" line="929"/>
                <method name="accept" type="boolean" line="931">
                    <params>
                        <param name="f" type="File"/>
                    </params>
                </method>
                <method name="getDescription" type="String" line="934"/>
            </class>
            <class name="BasicFileView" line="938">
                <extends class="FileView"/>
                <declaration name="iconCache" type="Hashtable&amp;lt;File,Icon&amp;gt;" line="939"/>
                <method name="BasicFileView" type="constructor" line="940"/>
                <method name="clearIconCache" type="void" line="942"/>
                <method name="getName" type="String" line="945">
                    <params>
                        <param name="f" type="File"/>
                    </params>
                    <declaration name="fileName" type="String" line="946"/>
                    <scope line="947"/>
                </method>
                <method name="getDescription" type="String" line="952">
                    <params>
                        <param name="f" type="File"/>
                    </params>
                </method>
                <method name="getTypeDescription" type="String" line="955">
                    <params>
                        <param name="f" type="File"/>
                    </params>
                    <declaration name="type" type="String" line="956"/>
                    <scope line="957">
                        <scope line="958"/>
                        <scope line="961"/>
                    </scope>
                </method>
                <method name="getCachedIcon" type="Icon" line="967">
                    <params>
                        <param name="f" type="File"/>
                    </params>
                </method>
                <method name="cacheIcon" type="void" line="970">
                    <params>
                        <param name="f" type="File"/>
                        <param name="i" type="Icon"/>
                    </params>
                    <scope line="971"/>
                </method>
                <method name="getIcon" type="Icon" line="976">
                    <params>
                        <param name="f" type="File"/>
                    </params>
                    <declaration name="icon" type="Icon" line="977"/>
                    <scope line="978"/>
                    <scope line="982">
                        <declaration name="fsv" type="FileSystemView" line="983"/>
                        <scope line="984"/>
                        <scope line="987"/>
                        <scope line="990"/>
                        <scope line="993"/>
                    </scope>
                </method>
                <method name="isHidden" type="Boolean" line="1000">
                    <params>
                        <param name="f" type="File"/>
                    </params>
                    <declaration name="name" type="String" line="1001"/>
                    <scope line="1002"/>
                    <scope line="1005"/>
                </method>
            </class>
            <declaration name="defaultTransferHandler" type="TransferHandler" line="1010"/>
            <class name="FileTransferHandler" line="1011">
                <extends class="TransferHandler"/>
                <implements interface="UIResource"/>
                <javadoc line="1011">
                    Data transfer support for the file chooser.  Since files are currently presented
                      as a list, the list support is reused with the added flavor of DataFlavor.javaFileListFlavor                    
                </javadoc>
                <javadoc line="1016">
                    Create a Transferable to use as the source for a data transfer.                    
                    <param>
                        c  The component holding the data to be transfered.  This
                          argument is provided to enable sharing of TransferHandlers by
                          multiple components.                        
                    </param>
                    <return>
                        The representation of the data to be transfered.                        
                    </return>
                </javadoc>
                <method name="createTransferable" type="Transferable" line="1023">
                    <params>
                        <param name="c" type="JComponent"/>
                    </params>
                    <declaration name="values" type="Object[]" line="1024"/>
                    <scope line="1025"/>
                    <scope line="1028">
                        <declaration name="table" type="JTable" line="1029"/>
                        <declaration name="rows" type="int[]" line="1030"/>
                        <scope line="1031">
                            <scope line="1033"/>
                        </scope>
                    </scope>
                    <scope line="1038"/>
                    <declaration name="plainBuf" type="StringBuffer" line="1041"/>
                    <declaration name="htmlBuf" type="StringBuffer" line="1042"/>
                    <scope line="1044">
                        <declaration name="val" type="String" line="1045"/>
                    </scope>
                </method>
                <method name="getSourceActions" type="int" line="1053">
                    <params>
                        <param name="c" type="JComponent"/>
                    </params>
                </method>
                <class name="FileTransferable" line="1056">
                    <extends class="BasicTransferable"/>
                    <declaration name="fileData" type="Object[]" line="1057"/>
                    <method name="FileTransferable" type="constructor" line="1058">
                        <params>
                            <param name="plainData" type="String"/>
                            <param name="htmlData" type="String"/>
                            <param name="fileData" type="Object[]"/>
                        </params>
                    </method>
                    <javadoc line="1062">
                        Best format of the file chooser is DataFlavor.javaFileListFlavor.                        
                    </javadoc>
                    <method name="getRicherFlavors" type="DataFlavor[]" line="1065">
                        <declaration name="flavors" type="DataFlavor[]" line="1066"/>
                    </method>
                    <javadoc line="1070">
                        The only richer format supported is the file list flavor                        
                    </javadoc>
                    <method name="getRicherData" type="Object" line="1073">
                        <params>
                            <param name="flavor" type="DataFlavor"/>
                        </params>
                        <scope line="1074">
                            <declaration name="files" type="ArrayList&amp;lt;Object&amp;gt;" line="1075"/>
                            <scope line="1076"/>
                        </scope>
                    </method>
                </class>
            </class>
        </class>
    </source>