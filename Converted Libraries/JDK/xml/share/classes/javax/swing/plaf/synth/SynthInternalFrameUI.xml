<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.synth">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="javax.swing"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.plaf.basic.BasicInternalFrameUI"/>
        <import package="java.beans"/>
        <class name="SynthInternalFrameUI" line="8">
            <extends class="BasicInternalFrameUI"/>
            <implements interface="SynthUI"/>
            <implements interface="PropertyChangeListener"/>
            <javadoc line="8">
                Provides the Synth L&amp;F UI delegate for{@link javax.swing.JInternalFrame}.                
                <author>
                    David Kloba                    
                </author>
                <author>
                    Joshua Outwater                    
                </author>
                <author>
                    Rich Schiavi                    
                </author>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="style" type="SynthStyle" line="16"/>
            <javadoc line="17">
                Creates a new UI object for the given component.                
                <param>
                    b component to create UI object for                    
                </param>
                <return>
                    the UI object                    
                </return>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="22">
                <params>
                    <param name="b" type="JComponent"/>
                </params>
            </method>
            <method name="SynthInternalFrameUI" type="constructor" line="25">
                <params>
                    <param name="b" type="JInternalFrame"/>
                </params>
            </method>
            <javadoc line="28">
                @inheritDoc                
            </javadoc>
            <method name="installDefaults" type="void" line="31"/>
            <javadoc line="35">
                @inheritDoc                
            </javadoc>
            <method name="installListeners" type="void" line="38"/>
            <javadoc line="42">
                @inheritDoc                
            </javadoc>
            <method name="uninstallComponents" type="void" line="45">
                <scope line="46"/>
            </method>
            <javadoc line="51">
                @inheritDoc                
            </javadoc>
            <method name="uninstallListeners" type="void" line="54"/>
            <method name="updateStyle" type="void" line="58">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="59"/>
                <declaration name="oldStyle" type="SynthStyle" line="60"/>
                <scope line="62">
                    <declaration name="frameIcon" type="Icon" line="63"/>
                    <scope line="64"/>
                    <scope line="67"/>
                </scope>
            </method>
            <javadoc line="74">
                @inheritDoc                
            </javadoc>
            <method name="uninstallDefaults" type="void" line="77">
                <declaration name="context" type="SynthContext" line="78"/>
                <scope line="82"/>
            </method>
            <javadoc line="86">
                @inheritDoc                
            </javadoc>
            <method name="getContext" type="SynthContext" line="89">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="92">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="state" type="int"/>
                </params>
            </method>
            <method name="getComponentState" type="int" line="95">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="98">
                @inheritDoc                
            </javadoc>
            <method name="createNorthPane" type="JComponent" line="101">
                <params>
                    <param name="w" type="JInternalFrame"/>
                </params>
            </method>
            <javadoc line="106">
                @inheritDoc                
            </javadoc>
            <method name="createComponentListener" type="ComponentListener" line="109">
                <scope line="110">
                    <anonymous_class line="111">
                        <method name="componentResized" type="void" line="112">
                            <params>
                                <param name="e" type="ComponentEvent"/>
                            </params>
                            <scope line="113">
                                <declaration name="desktop" type="JDesktopPane" line="114"/>
                                <scope line="115">
                                    <scope line="116"/>
                                </scope>
                            </scope>
                            <declaration name="f" type="JInternalFrame" line="123"/>
                        </method>
                    </anonymous_class>
                </scope>
                <scope line="131"/>
            </method>
            <javadoc line="135">
                Notifies this UI delegate to repaint the specified component.
                  This method paints the component background, then calls
                  the {@link #paint(SynthContext,Graphics)} method.
                  &lt;p&gt;In general, this method does not need to be overridden by subclasses.
                  All Look and Feel rendering code should reside in the {@code paint} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="update" type="void" line="145">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="146"/>
            </method>
            <javadoc line="152">
                Paints the specified component according to the Look and Feel.
                  &lt;p&gt;This method is not used by Synth Look and Feel.
                  Painting is handled by the {@link #paint(SynthContext,Graphics)} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="160">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="161"/>
            </method>
            <javadoc line="165">
                Paints the specified component. This implementation does nothing.                
                <param>
                    context context for the component being painted                    
                </param>
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <see>
                    #update(Graphics,JComponent)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="171">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                </params>
            </method>
            <javadoc line="173">
                @inheritDoc                
            </javadoc>
            <method name="paintBorder" type="void" line="176">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <javadoc line="179">
                @inheritDoc                
            </javadoc>
            <method name="propertyChange" type="void" line="182">
                <params>
                    <param name="evt" type="PropertyChangeEvent"/>
                </params>
                <declaration name="oldStyle" type="SynthStyle" line="183"/>
                <declaration name="f" type="JInternalFrame" line="184"/>
                <declaration name="prop" type="String" line="185"/>
                <scope line="186"/>
                <scope line="189">
                    <declaration name="context" type="SynthContext" line="190"/>
                </scope>
            </method>
        </class>
    </source>