<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing.plaf.synth">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="javax.swing"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.plaf.basic.BasicInternalFrameUI"/>
        <import package="java.beans"/>
        <class name="SynthInternalFrameUI" line="36">
            <extends class="BasicInternalFrameUI"/>
            <implements interface="SynthUI"/>
            <implements interface="PropertyChangeListener"/>
            <javadoc line="36">
                Provides the Synth L&amp;F UI delegate for{@link javax.swing.JInternalFrame}.                
                <author>
                    David Kloba                    
                </author>
                <author>
                    Joshua Outwater                    
                </author>
                <author>
                    Rich Schiavi                    
                </author>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="style" type="SynthStyle" line="47"/>
            <javadoc line="49">
                Creates a new UI object for the given component.                
                <param>
                    b component to create UI object for                    
                </param>
                <return>
                    the UI object                    
                </return>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="55">
                <params>
                    <param name="b" type="JComponent"/>
                </params>
            </method>
            <method name="SynthInternalFrameUI" type="constructor" line="59">
                <params>
                    <param name="b" type="JInternalFrame"/>
                </params>
            </method>
            <javadoc line="63">
                @inheritDoc                
            </javadoc>
            <method name="installDefaults" type="void" line="67"/>
            <javadoc line="72">
                @inheritDoc                
            </javadoc>
            <method name="installListeners" type="void" line="76"/>
            <javadoc line="81">
                @inheritDoc                
            </javadoc>
            <method name="uninstallComponents" type="void" line="85">
                <scope line="86"/>
            </method>
            <javadoc line="92">
                @inheritDoc                
            </javadoc>
            <method name="uninstallListeners" type="void" line="96"/>
            <method name="updateStyle" type="void" line="101">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="102"/>
                <declaration name="oldStyle" type="SynthStyle" line="103"/>
                <scope line="106">
                    <declaration name="frameIcon" type="Icon" line="107"/>
                    <scope line="108"/>
                    <scope line="112"/>
                </scope>
            </method>
            <javadoc line="120">
                @inheritDoc                
            </javadoc>
            <method name="uninstallDefaults" type="void" line="124">
                <declaration name="context" type="SynthContext" line="125"/>
                <scope line="129"/>
            </method>
            <javadoc line="135">
                @inheritDoc                
            </javadoc>
            <method name="getContext" type="SynthContext" line="139">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="getContext" type="SynthContext" line="143">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="state" type="int"/>
                </params>
            </method>
            <method name="getComponentState" type="int" line="148">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="152">
                @inheritDoc                
            </javadoc>
            <method name="createNorthPane" type="JComponent" line="156">
                <params>
                    <param name="w" type="JInternalFrame"/>
                </params>
            </method>
            <javadoc line="162">
                @inheritDoc                
            </javadoc>
            <method name="createComponentListener" type="ComponentListener" line="166">
                <comment line="184">
                    Update the new parent bounds for next resize, but don&apos;t
                     let the super method touch this frame                    
                </comment>
                <scope line="167">
                    <anonymous_class line="168">
                        <method name="componentResized" type="void" line="169">
                            <params>
                                <param name="e" type="ComponentEvent"/>
                            </params>
                            <comment line="184">
                                Update the new parent bounds for next resize, but don&apos;t
                                 let the super method touch this frame                                
                            </comment>
                            <scope line="170">
                                <declaration name="desktop" type="JDesktopPane" line="171"/>
                                <scope line="172">
                                    <scope line="173"/>
                                </scope>
                            </scope>
                            <declaration name="f" type="JInternalFrame" line="185"/>
                        </method>
                    </anonymous_class>
                </scope>
                <scope line="191"/>
            </method>
            <javadoc line="196">
                Notifies this UI delegate to repaint the specified component.
                  This method paints the component background, then calls
                  the {@link #paint(SynthContext,Graphics)} method.
                  &lt;p&gt;In general, this method does not need to be overridden by subclasses.
                  All Look and Feel rendering code should reside in the {@code paint} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="update" type="void" line="209">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="210"/>
            </method>
            <javadoc line="219">
                Paints the specified component according to the Look and Feel.
                  &lt;p&gt;This method is not used by Synth Look and Feel.
                  Painting is handled by the {@link #paint(SynthContext,Graphics)} method.                
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <param>
                    c the component being painted                    
                </param>
                <see>
                    #paint(SynthContext,Graphics)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="229">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="context" type="SynthContext" line="230"/>
            </method>
            <javadoc line="236">
                Paints the specified component. This implementation does nothing.                
                <param>
                    context context for the component being painted                    
                </param>
                <param>
                    g the {@code Graphics} object used for painting                    
                </param>
                <see>
                    #update(Graphics,JComponent)                    
                </see>
            </javadoc>
            <method name="paint" type="void" line="243">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                </params>
            </method>
            <javadoc line="246">
                @inheritDoc                
            </javadoc>
            <method name="paintBorder" type="void" line="251">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <javadoc line="256">
                @inheritDoc                
            </javadoc>
            <method name="propertyChange" type="void" line="260">
                <params>
                    <param name="evt" type="PropertyChangeEvent"/>
                </params>
                <comment line="273">
                    Border (and other defaults) may need to change                    
                </comment>
                <declaration name="oldStyle" type="SynthStyle" line="261"/>
                <declaration name="f" type="JInternalFrame" line="262"/>
                <declaration name="prop" type="String" line="263"/>
                <scope line="265"/>
                <scope line="271">
                    <declaration name="context" type="SynthContext" line="273"/>
                </scope>
            </method>
        </class>
    </source>