<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.swing">
        <import package="java.awt"/>
        <import package="java.util"/>
        <import package="java.awt.event"/>
        <import package="javax.swing.event"/>
        <import package="sun.awt.AppContext"/>
        <class name="MenuSelectionManager" line="7">
            <javadoc line="7">
                A MenuSelectionManager owns the selection in menu hierarchy.                
                <author>
                    Arnaud Weber                    
                </author>
            </javadoc>
            <declaration name="selection" type="Vector&lt;MenuElement&gt;" line="12"/>
            <declaration name="TRACE" type="boolean" line="13"/>
            <declaration name="VERBOSE" type="boolean" line="14"/>
            <declaration name="DEBUG" type="boolean" line="15"/>
            <declaration name="MENU_SELECTION_MANAGER_KEY" type="StringBuilder" line="16"/>
            <javadoc line="17">
                Returns the default menu selection manager.                
                <return>
                    a MenuSelectionManager object                    
                </return>
            </javadoc>
            <method name="defaultManager" type="MenuSelectionManager" line="21">
                <scope line="22">
                    <declaration name="context" type="AppContext" line="23"/>
                    <declaration name="msm" type="MenuSelectionManager" line="24"/>
                    <scope line="25"/>
                </scope>
            </method>
            <declaration name="changeEvent" type="ChangeEvent" line="32"/>
            <javadoc line="32">
                Only one ChangeEvent is needed per button model instance since the
                  event&apos;s only state is the source property.  The source of events
                  generated is always &quot;this&quot;.                
            </javadoc>
            <declaration name="listenerList" type="EventListenerList" line="38"/>
            <javadoc line="39">
                Changes the selection in the menu hierarchy.  The elements
                  in the array are sorted in order from the root menu
                  element to the currently selected menu element.
                  &lt;p&gt;
                  Note that this method is public but is used by the look and
                  feel engine and should not be called by client applications.                
                <param>
                    path  an array of <code>MenuElement</code> objects specifying
                      the selected path                    
                </param>
            </javadoc>
            <method name="setSelectedPath" type="void" line="49">
                <params>
                    <param name="path" type="MenuElement[]"/>
                </params>
                <declaration name="i" type="int" line="50"/>
                <declaration name="currentSelectionCount" type="int" line="51"/>
                <declaration name="firstDifference" type="int" line="52"/>
                <scope line="53"/>
                <scope line="56"/>
                <scope line="62"/>
                <scope line="66">
                    <declaration name="me" type="MenuElement" line="67"/>
                </scope>
                <scope line="71">
                    <scope line="72"/>
                </scope>
            </method>
            <javadoc line="79">
                Returns the path to the currently selected menu item                
                <return>
                    an array of MenuElement objects representing the selected path                    
                </return>
            </javadoc>
            <method name="getSelectedPath" type="MenuElement[]" line="83">
                <declaration name="res" type="MenuElement" line="84"/>
                <declaration name="i" type="int" line="85"/>
            </method>
            <javadoc line="89">
                Tell the menu selection to close and unselect all the menu components. Call this method
                  when a choice has been made                
            </javadoc>
            <method name="clearSelectedPath" type="void" line="93">
                <scope line="94"/>
            </method>
            <javadoc line="98">
                Adds a ChangeListener to the button.                
                <param>
                    l the listener to add                    
                </param>
            </javadoc>
            <method name="addChangeListener" type="void" line="102">
                <params>
                    <param name="l" type="ChangeListener"/>
                </params>
            </method>
            <javadoc line="105">
                Removes a ChangeListener from the button.                
                <param>
                    l the listener to remove                    
                </param>
            </javadoc>
            <method name="removeChangeListener" type="void" line="109">
                <params>
                    <param name="l" type="ChangeListener"/>
                </params>
            </method>
            <javadoc line="112">
                Returns an array of all the &lt;code&gt;ChangeListener&lt;/code&gt;s added
                  to this MenuSelectionManager with addChangeListener().                
                <return>
                    all of the <code>ChangeListener</code>s added or an empty
                      array if no listeners have been added                    
                </return>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="getChangeListeners" type="ChangeListener[]" line="119"/>
            <javadoc line="122">
                Notifies all listeners that have registered interest for
                  notification on this event type.  The event instance
                  is created lazily.                
                <see>
                    EventListenerList                    
                </see>
            </javadoc>
            <method name="fireStateChanged" type="void" line="128">
                <declaration name="listeners" type="Object[]" line="129"/>
                <scope line="130">
                    <scope line="131"/>
                </scope>
            </method>
            <javadoc line="137">
                When a MenuElement receives an event from a MouseListener, it should never process the event
                  directly. Instead all MenuElements should call this method with the event.                
                <param>
                    event  a MouseEvent object                    
                </param>
            </javadoc>
            <method name="processMouseEvent" type="void" line="142">
                <params>
                    <param name="event" type="MouseEvent"/>
                </params>
                <declaration name="screenX" type="int" line="143"/>
                <declaration name="p" type="Point" line="144"/>
                <declaration name="i" type="int" line="145"/>
                <declaration name="mc" type="Component" line="146"/>
                <declaration name="r2" type="Rectangle" line="147"/>
                <declaration name="cWidth" type="int" line="148"/>
                <declaration name="menuElement" type="MenuElement" line="149"/>
                <declaration name="subElements" type="MenuElement" line="150"/>
                <declaration name="path" type="MenuElement" line="151"/>
                <declaration name="tmp" type="Vector" line="152"/>
                <declaration name="selectionSize" type="int" line="153"/>
                <declaration name="source" type="Component" line="155"/>
                <scope line="156"/>
                <declaration name="type" type="int" line="159"/>
                <declaration name="modifiers" type="int" line="160"/>
                <scope line="161"/>
                <scope line="164"/>
                <declaration name="success" type="boolean" line="171"/>
                <scope line="172">
                    <scope line="176">
                        <scope line="180"/>
                        <scope line="184"/>
                        <scope line="192">
                            <declaration name="k" type="int" line="193"/>
                            <scope line="194"/>
                            <declaration name="currentSelection" type="MenuElement" line="199"/>
                            <scope line="200">
                                <declaration name="oldMC" type="Component" line="201"/>
                                <declaration name="exitEvent" type="MouseEvent" line="202"/>
                                <declaration name="enterEvent" type="MouseEvent" line="204"/>
                            </scope>
                            <declaration name="mouseEvent" type="MouseEvent" line="207"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="printMenuElementArray" type="void" line="215">
                <params>
                    <param name="path" type="MenuElement"/>
                </params>
            </method>
            <method name="printMenuElementArray" type="void" line="218">
                <params>
                    <param name="path" type="MenuElement"/>
                    <param name="dumpStack" type="boolean"/>
                </params>
                <declaration name="i" type="int" line="220"/>
                <scope line="221">
                    <declaration name="me" type="MenuElement" line="223"/>
                    <scope line="224"/>
                    <scope line="227"/>
                    <scope line="230"/>
                    <scope line="233"/>
                    <scope line="236"/>
                </scope>
            </method>
            <javadoc line="243">
                Returns the component in the currently selected path
                  which contains sourcePoint.                
                <param>
                    source The component in whose coordinate space sourcePoint
                      is given                    
                </param>
                <param>
                    sourcePoint The point which is being tested                    
                </param>
                <return>
                    The component in the currently selected path which
                      contains sourcePoint (relative to the source component's
                      coordinate space.  If sourcePoint is not inside a component
                      on the currently selected path, null is returned.                    
                </return>
            </javadoc>
            <method name="componentForPoint" type="Component" line="254">
                <params>
                    <param name="source" type="Component"/>
                    <param name="sourcePoint" type="Point"/>
                </params>
                <declaration name="screenX" type="int" line="255"/>
                <declaration name="p" type="Point" line="256"/>
                <declaration name="i" type="int" line="257"/>
                <declaration name="mc" type="Component" line="258"/>
                <declaration name="r2" type="Rectangle" line="259"/>
                <declaration name="cWidth" type="int" line="260"/>
                <declaration name="menuElement" type="MenuElement" line="261"/>
                <declaration name="subElements" type="MenuElement" line="262"/>
                <declaration name="tmp" type="Vector" line="263"/>
                <declaration name="selectionSize" type="int" line="264"/>
                <scope line="270">
                    <scope line="273">
                        <scope line="277"/>
                        <scope line="281"/>
                        <scope line="289"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="296">
                When a MenuElement receives an event from a KeyListener, it should never process the event
                  directly. Instead all MenuElements should call this method with the event.                
                <param>
                    e  a KeyEvent object                    
                </param>
            </javadoc>
            <method name="processKeyEvent" type="void" line="301">
                <params>
                    <param name="e" type="KeyEvent"/>
                </params>
                <declaration name="sel2" type="MenuElement[]" line="302"/>
                <declaration name="selSize" type="int" line="304"/>
                <declaration name="path" type="MenuElement[]" line="305"/>
                <scope line="306"/>
                <scope line="309">
                    <declaration name="elem" type="MenuElement" line="310"/>
                    <declaration name="subs" type="MenuElement[]" line="311"/>
                    <scope line="313">
                        <scope line="314"/>
                        <scope line="317"/>
                        <scope line="323"/>
                    </scope>
                </scope>
                <scope line="331"/>
            </method>
            <javadoc line="335">
                Return true if c is part of the currently used menu                
            </javadoc>
            <method name="isComponentPartOfCurrentMenu" type="boolean" line="338">
                <params>
                    <param name="c" type="Component"/>
                </params>
                <scope line="339">
                    <declaration name="me" type="MenuElement" line="340"/>
                </scope>
            </method>
            <method name="isComponentPartOfCurrentMenu" type="boolean" line="345">
                <params>
                    <param name="root" type="MenuElement"/>
                    <param name="c" type="Component"/>
                </params>
                <declaration name="children" type="MenuElement" line="346"/>
                <declaration name="i" type="int" line="347"/>
                <scope line="350">
                    <scope line="352"/>
                </scope>
            </method>
        </class>
    </source>