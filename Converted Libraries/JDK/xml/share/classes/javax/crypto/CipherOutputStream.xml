<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.crypto">
        <import package="java.io"/>
        <class name="CipherOutputStream" line="3">
            <extends class="FilterOutputStream"/>
            <javadoc line="3">
                A CipherOutputStream is composed of an OutputStream and a Cipher so
                  that write() methods first process the data before writing them out
                  to the underlying OutputStream.  The cipher must be fully
                  initialized before being used by a CipherOutputStream.
                  &lt;p&gt; For example, if the cipher is initialized for encryption, the
                  CipherOutputStream will attempt to encrypt data before writing out the
                  encrypted data.
                  &lt;p&gt; This class adheres strictly to the semantics, especially the
                  failure semantics, of its ancestor classes
                  java.io.OutputStream and java.io.FilterOutputStream.  This class
                  has exactly those methods specified in its ancestor classes, and
                  overrides them all.  Moreover, this class catches all exceptions
                  that are not thrown by its ancestor classes.
                  &lt;p&gt; It is crucial for a programmer using this class not to use
                  methods that are not defined or overriden in this class (such as a
                  new method or constructor that is later added to one of the super
                  classes), because the design and implementation of those methods
                  are unlikely to have considered security impact with regard to
                  CipherOutputStream.                
                <author>
                    Li Gong                    
                </author>
                <see>
                    java.io.OutputStream                    
                </see>
                <see>
                    java.io.FilterOutputStream                    
                </see>
                <see>
                    javax.crypto.Cipher                    
                </see>
                <see>
                    javax.crypto.CipherInputStream                    
                </see>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="cipher" type="Cipher" line="31"/>
            <declaration name="output" type="OutputStream" line="32"/>
            <declaration name="ibuffer" type="byte[]" line="33"/>
            <declaration name="obuffer" type="byte[]" line="34"/>
            <javadoc line="35">
                Constructs a CipherOutputStream from an OutputStream and a
                  Cipher.
                  &lt;br&gt;Note: if the specified output stream or cipher is
                  null, a NullPointerException may be thrown later when
                  they are used.                
                <param>
                    os  the OutputStream object                    
                </param>
                <param>
                    c   an initialized Cipher object                    
                </param>
            </javadoc>
            <method name="CipherOutputStream" type="constructor" line="44">
                <params>
                    <param name="os" type="OutputStream"/>
                    <param name="c" type="Cipher"/>
                </params>
            </method>
            <javadoc line="49">
                Constructs a CipherOutputStream from an OutputStream without
                  specifying a Cipher. This has the effect of constructing a
                  CipherOutputStream using a NullCipher.
                  &lt;br&gt;Note: if the specified output stream is null, a
                  NullPointerException may be thrown later when it is used.                
                <param>
                    os  the OutputStream object                    
                </param>
            </javadoc>
            <method name="CipherOutputStream" type="constructor" line="57">
                <params>
                    <param name="os" type="OutputStream"/>
                </params>
            </method>
            <javadoc line="62">
                Writes the specified byte to this output stream.                
                <param>
                    b   the <code>byte</code>.                    
                </param>
                <exception>
                    IOException  if an I/O error occurs.                    
                </exception>
                <since>
                    JCE1.2                    
                </since>
            </javadoc>
            <method name="write" type="void" line="68">
                <params>
                    <param name="b" type="int"/>
                </params>
                <scope line="71"/>
            </method>
            <javadoc line="76">
                Writes &lt;code&gt;b.length&lt;/code&gt; bytes from the specified byte array
                  to this output stream.
                  &lt;p&gt;
                  The &lt;code&gt;write&lt;/code&gt; method of
                  &lt;code&gt;CipherOutputStream&lt;/code&gt; calls the &lt;code&gt;write&lt;/code&gt;
                  method of three arguments with the three arguments
                  &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;b.length&lt;/code&gt;.                
                <param>
                    b   the data.                    
                </param>
                <exception>
                    NullPointerException if <code>b</code> is null.                    
                </exception>
                <exception>
                    IOException  if an I/O error occurs.                    
                </exception>
                <see>
                    javax.crypto.CipherOutputStream#write(byte[],int,int)                    
                </see>
                <since>
                    JCE1.2                    
                </since>
            </javadoc>
            <method name="write" type="void" line="90">
                <params>
                    <param name="b" type="byte"/>
                </params>
            </method>
            <javadoc line="93">
                Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array
                  starting at offset &lt;code&gt;off&lt;/code&gt; to this output stream.                
                <param>
                    b     the data.                    
                </param>
                <param>
                    off   the start offset in the data.                    
                </param>
                <param>
                    len   the number of bytes to write.                    
                </param>
                <exception>
                    IOException  if an I/O error occurs.                    
                </exception>
                <since>
                    JCE1.2                    
                </since>
            </javadoc>
            <method name="write" type="void" line="102">
                <params>
                    <param name="b" type="byte"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="104"/>
            </method>
            <javadoc line="109">
                Flushes this output stream by forcing any buffered output bytes
                  that have already been processed by the encapsulated cipher object
                  to be written out.
                  &lt;p&gt;Any bytes buffered by the encapsulated cipher
                  and waiting to be processed by it will not be written out. For example,
                  if the encapsulated cipher is a block cipher, and the total number of
                  bytes written using one of the &lt;code&gt;write&lt;/code&gt; methods is less than
                  the cipher&apos;s block size, no bytes will be written out.                
                <exception>
                    IOException  if an I/O error occurs.                    
                </exception>
                <since>
                    JCE1.2                    
                </since>
            </javadoc>
            <method name="flush" type="void" line="121">
                <scope line="122"/>
            </method>
            <javadoc line="128">
                Closes this output stream and releases any system resources
                  associated with this stream.
                  &lt;p&gt;
                  This method invokes the &lt;code&gt;doFinal&lt;/code&gt; method of the encapsulated
                  cipher object, which causes any bytes buffered by the encapsulated
                  cipher to be processed. The result is written out by calling the
                  &lt;code&gt;flush&lt;/code&gt; method of this output stream.
                  &lt;p&gt;
                  This method resets the encapsulated cipher object to its initial state
                  and calls the &lt;code&gt;close&lt;/code&gt; method of the underlying output
                  stream.                
                <exception>
                    IOException  if an I/O error occurs.                    
                </exception>
                <since>
                    JCE1.2                    
                </since>
            </javadoc>
            <method name="close" type="void" line="143">
                <scope line="144"/>
                <scope line="147"/>
                <scope line="150"/>
                <scope line="153"/>
                <scope line="156"/>
            </method>
        </class>
    </source>