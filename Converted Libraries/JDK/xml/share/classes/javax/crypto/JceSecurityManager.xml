<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.crypto">
        <import package="java.security"/>
        <import package="java.net"/>
        <import package="java.util"/>
        <import package="java.util.jar"/>
        <class name="JceSecurityManager" line="33">
            <extends class="SecurityManager"/>
            <comment line="57">
                singleton instance                
            </comment>
            <comment line="224">
                See  bug 4341369 &amp; 4334690 for more info.                
            </comment>
            <javadoc line="33">
                The JCE security manager.
                  &lt;p&gt;The JCE security manager is responsible for determining the maximum
                  allowable cryptographic strength for a given applet/application, for a given
                  algorithm, by consulting the configured jurisdiction policy files and
                  the cryptographic permissions bundled with the applet/application.
                  &lt;p&gt;Note that this security manager is never installed, only instantiated.                
                <author>
                    Jan Luehe                    
                </author>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="defaultPolicy" type="CryptoPermissions" line="50"/>
            <declaration name="exemptPolicy" type="CryptoPermissions" line="51"/>
            <declaration name="allPerm" type="CryptoAllPermission" line="52"/>
            <declaration name="TrustedCallersCache" type="Vector" line="53"/>
            <declaration name="exemptCache" type="Map" line="54"/>
            <declaration name="INSTANCE" type="JceSecurityManager" line="57"/>
            <scope line="59">
                <anonymous_class line="64">
                    <method name="run" type="Object" line="65"/>
                </anonymous_class>
            </scope>
            <method name="JceSecurityManager" type="constructor" line="71">
                <comment line="73">
                    empty                    
                </comment>
            </method>
            <javadoc line="75">
                Returns the maximum allowable crypto strength for the given
                  applet/application, for the given algorithm.                
            </javadoc>
            <method name="getCryptoPermission" type="CryptoPermission" line="79">
                <params>
                    <param name="alg" type="String"/>
                </params>
                <comment line="81">
                    Need to convert to uppercase since the crypto perm
                     lookup is case sensitive.                    
                </comment>
                <comment line="85">
                    If CryptoAllPermission is granted by default, we return that.
                     Otherwise, this will be the permission we return if anything goes
                     wrong.                    
                </comment>
                <comment line="93">
                    Determine the codebase of the caller of the JCE API.
                     This is the codebase of the first class which is not in
                     javax.crypto.* packages.
                     NOTE: javax.crypto.* package maybe subject to package
                     insertion, so need to check its classloader as well.                    
                </comment>
                <comment line="108">
                    skip jce classes since they aren&apos;t the callers                    
                </comment>
                <comment line="111">
                    use default permission when the caller is system classes                    
                </comment>
                <comment line="134">
                    If the app was granted the special CryptoAllPermission, return that.                    
                </comment>
                <comment line="139">
                    Check if the crypto permissions granted to the app contain a
                     crypto permission for the requested algorithm that does not require
                     any exemption mechanism to be enforced.
                     Return that permission, if present.                    
                </comment>
                <comment line="155">
                    Check if the jurisdiction file for exempt applications contains
                     any entries for the requested algorithm.
                     If not, return the default permission.                    
                </comment>
                <comment line="164">
                    In the jurisdiction file for exempt applications, go through the
                     list of CryptoPermission entries for the requested algorithm, and
                     stop at the first entry:
                      - that is implied by the collection of crypto permissions granted
                        to the app, and
                      - whose exemption mechanism is available from one of the
                        registered CSPs                    
                </comment>
                <declaration name="defaultPerm" type="CryptoPermission" line="87"/>
                <scope line="88"/>
                <declaration name="context" type="Class[]" line="97"/>
                <declaration name="callerCodeBase" type="URL" line="98"/>
                <declaration name="i" type="int" line="99"/>
                <scope line="100">
                    <declaration name="cls" type="Class" line="101"/>
                    <scope line="103"/>
                    <scope line="105">
                        <scope line="106"/>
                    </scope>
                </scope>
                <scope line="115"/>
                <declaration name="appPerms" type="CryptoPermissions" line="119"/>
                <scope line="120">
                    <scope line="121"/>
                    <scope line="123"/>
                </scope>
                <scope line="129"/>
                <scope line="134"/>
                <declaration name="appPc" type="PermissionCollection" line="142"/>
                <scope line="143"/>
                <declaration name="enum_" type="Enumeration" line="146"/>
                <scope line="147">
                    <declaration name="cp" type="CryptoPermission" line="148"/>
                    <scope line="149"/>
                </scope>
                <declaration name="exemptPc" type="PermissionCollection" line="157"/>
                <scope line="159"/>
                <scope line="171">
                    <declaration name="cp" type="CryptoPermission" line="172"/>
                    <scope line="173">
                        <scope line="176">
                            <declaration name="newCp" type="CryptoPermission" line="177"/>
                            <scope line="178"/>
                            <scope line="183"/>
                            <scope line="188"/>
                        </scope>
                        <scope line="193"/>
                    </scope>
                    <scope line="196"/>
                </scope>
            </method>
            <method name="getAppPermissions" type="CryptoPermissions" line="203">
                <params>
                    <param name="callerCodeBase" type="URL"/>
                </params>
                <comment line="205">
                    Check if app is exempt, and retrieve the permissions bundled with it                    
                </comment>
                <comment line="209">
                    Jar verification fails                    
                </comment>
                <scope line="205"/>
                <scope line="207"/>
            </method>
            <javadoc line="214">
                Returns the default permission for the given algorithm.                
            </javadoc>
            <method name="getDefaultPermission" type="CryptoPermission" line="217">
                <params>
                    <param name="alg" type="String"/>
                </params>
                <declaration name="enum_" type="Enumeration" line="218"/>
            </method>
            <method name="isCallerTrusted" type="boolean" line="224">
                <comment line="226">
                    Get the caller and its codebase.                    
                </comment>
                <comment line="236">
                    The caller is in the JCE framework.                    
                </comment>
                <comment line="240">
                    The caller has been verified.                    
                </comment>
                <comment line="244">
                    Check whether the caller is a trusted provider.                    
                </comment>
                <declaration name="context" type="Class[]" line="226"/>
                <declaration name="callerCodeBase" type="URL" line="227"/>
                <declaration name="i" type="int" line="228"/>
                <scope line="229">
                    <scope line="231"/>
                </scope>
                <scope line="236"/>
                <scope line="240"/>
                <scope line="244"/>
                <scope line="246"/>
            </method>
        </class>
    </source>