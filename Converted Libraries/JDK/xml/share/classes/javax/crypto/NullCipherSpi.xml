<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.crypto">
        <import package="java.security"/>
        <import package="java.security.spec"/>
        <class name="NullCipherSpi" line="4">
            <extends class="CipherSpi"/>
            <javadoc line="4">
                This class provides a delegate for the identity cipher - one that does not
                  tranform the plaintext.                
                <author>
                    Li Gong                    
                </author>
                <see>
                    Nullcipher                    
                </see>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="NullCipherSpi" type="constructor" line="12"/>
            <method name="engineSetMode" type="void" line="14">
                <params>
                    <param name="mode" type="String"/>
                </params>
            </method>
            <method name="engineSetPadding" type="void" line="16">
                <params>
                    <param name="padding" type="String"/>
                </params>
            </method>
            <method name="engineGetBlockSize" type="int" line="18"/>
            <method name="engineGetOutputSize" type="int" line="21">
                <params>
                    <param name="inputLen" type="int"/>
                </params>
            </method>
            <method name="engineGetIV" type="byte[]" line="24">
                <declaration name="x" type="byte[]" line="25"/>
            </method>
            <method name="engineGetParameters" type="AlgorithmParameters" line="28"/>
            <method name="engineInit" type="void" line="31">
                <params>
                    <param name="mode" type="int"/>
                    <param name="key" type="Key"/>
                    <param name="random" type="SecureRandom"/>
                </params>
            </method>
            <method name="engineInit" type="void" line="33">
                <params>
                    <param name="mode" type="int"/>
                    <param name="key" type="Key"/>
                    <param name="params" type="AlgorithmParameterSpec"/>
                    <param name="random" type="SecureRandom"/>
                </params>
            </method>
            <method name="engineInit" type="void" line="35">
                <params>
                    <param name="mode" type="int"/>
                    <param name="key" type="Key"/>
                    <param name="params" type="AlgorithmParameters"/>
                    <param name="random" type="SecureRandom"/>
                </params>
            </method>
            <method name="engineUpdate" type="byte[]" line="37">
                <params>
                    <param name="input" type="byte[]"/>
                    <param name="inputOffset" type="int"/>
                    <param name="inputLen" type="int"/>
                </params>
                <declaration name="x" type="byte[]" line="39"/>
            </method>
            <method name="engineUpdate" type="int" line="43">
                <params>
                    <param name="input" type="byte[]"/>
                    <param name="inputOffset" type="int"/>
                    <param name="inputLen" type="int"/>
                    <param name="output" type="byte[]"/>
                    <param name="outputOffset" type="int"/>
                </params>
            </method>
            <method name="engineDoFinal" type="byte[]" line="48">
                <params>
                    <param name="input" type="byte[]"/>
                    <param name="inputOffset" type="int"/>
                    <param name="inputLen" type="int"/>
                </params>
            </method>
            <method name="engineDoFinal" type="int" line="51">
                <params>
                    <param name="input" type="byte[]"/>
                    <param name="inputOffset" type="int"/>
                    <param name="inputLen" type="int"/>
                    <param name="output" type="byte[]"/>
                    <param name="outputOffset" type="int"/>
                </params>
            </method>
            <method name="engineGetKeySize" type="int" line="54">
                <params>
                    <param name="key" type="Key"/>
                </params>
            </method>
        </class>
    </source>