<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.crypto">
        <import package="java.security"/>
        <import package="java.security.spec"/>
        <import package="java.nio.ByteBuffer"/>
        <class name="MacSpi" line="5">
            <javadoc line="5">
                This class defines the &lt;i&gt;Service Provider Interface&lt;/i&gt; (&lt;b&gt;SPI&lt;/b&gt;)
                  for the &lt;code&gt;Mac&lt;/code&gt; class.
                  All the abstract methods in this class must be implemented by each
                  cryptographic service provider who wishes to supply the implementation
                  of a particular MAC algorithm.
                  &lt;p&gt; Implementations are free to implement the Cloneable interface.                
                <author>
                    Jan Luehe                    
                </author>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="engineGetMacLength" type="int" line="16"/>
            <javadoc line="16">
                Returns the length of the MAC in bytes.                
                <return>
                    the MAC length in bytes.                    
                </return>
            </javadoc>
            <method name="engineInit" type="void" line="21"/>
            <javadoc line="21">
                Initializes the MAC with the given (secret) key and algorithm
                  parameters.                
                <param>
                    key the (secret) key.                    
                </param>
                <param>
                    params the algorithm parameters.                    
                </param>
                <exception>
                    InvalidKeyException if the given key is inappropriate for
                      initializing this MAC.                    
                </exception>
                <exception>
                    InvalidAlgorithmParameterException if the given algorithm
                      parameters are inappropriate for this MAC.                    
                </exception>
            </javadoc>
            <method name="engineUpdate" type="void" line="32"/>
            <javadoc line="32">
                Processes the given byte.                
                <param>
                    input the input byte to be processed.                    
                </param>
            </javadoc>
            <method name="engineUpdate" type="void" line="37"/>
            <javadoc line="37">
                Processes the first &lt;code&gt;len&lt;/code&gt; bytes in &lt;code&gt;input&lt;/code&gt;,
                  starting at &lt;code&gt;offset&lt;/code&gt; inclusive.                
                <param>
                    input the input buffer.                    
                </param>
                <param>
                    offset the offset in &lt;code&gt;input&lt;/code&gt; where the input starts.                    
                </param>
                <param>
                    len the number of bytes to process.                    
                </param>
            </javadoc>
            <javadoc line="45">
                Processes &lt;code&gt;input.remaining()&lt;/code&gt; bytes in the ByteBuffer
                  &lt;code&gt;input&lt;/code&gt;, starting at &lt;code&gt;input.position()&lt;/code&gt;.
                  Upon return, the buffer&apos;s position will be equal to its limit;
                  its limit will not have changed.
                  &lt;p&gt;Subclasses should consider overriding this method if they can
                  process ByteBuffers more efficiently than byte arrays.                
                <param>
                    input the ByteBuffer                    
                </param>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="engineUpdate" type="void" line="55">
                <params>
                    <param name="input" type="ByteBuffer"/>
                </params>
                <scope line="56"/>
                <scope line="59">
                    <declaration name="b" type="byte[]" line="60"/>
                    <declaration name="ofs" type="int" line="61"/>
                    <declaration name="pos" type="int" line="62"/>
                    <declaration name="lim" type="int" line="63"/>
                </scope>
                <scope line="67">
                    <declaration name="len" type="int" line="68"/>
                    <declaration name="b" type="byte[]" line="69"/>
                    <scope line="70">
                        <declaration name="chunk" type="int" line="71"/>
                    </scope>
                </scope>
            </method>
            <method name="engineDoFinal" type="byte[]" line="78"/>
            <javadoc line="78">
                Completes the MAC computation and resets the MAC for further use,
                  maintaining the secret key that the MAC was initialized with.                
                <return>
                    the MAC result.                    
                </return>
            </javadoc>
            <method name="engineReset" type="void" line="84"/>
            <javadoc line="84">
                Resets the MAC for further use, maintaining the secret key that the
                  MAC was initialized with.                
            </javadoc>
            <javadoc line="89">
                Returns a clone if the implementation is cloneable.                
                <return>
                    a clone if the implementation is cloneable.                    
                </return>
                <exception>
                    CloneNotSupportedException if this is called
                      on an implementation that does not support &lt;code&gt;Cloneable&lt;/code&gt;.                    
                </exception>
            </javadoc>
            <method name="clone" type="Object" line="95">
                <scope line="96"/>
                <scope line="99"/>
            </method>
        </class>
    </source>