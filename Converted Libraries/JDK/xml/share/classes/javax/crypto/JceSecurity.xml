<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.crypto">
        <import package="java.util"/>
        <import package="java.util.jar"/>
        <import package="java.io"/>
        <import package="java.net.URL"/>
        <import package="java.security"/>
        <import package="java.security.Provider.Service"/>
        <import package="sun.security.jca"/>
        <import package="sun.security.jca.GetInstance.Instance"/>
        <class name="JceSecurity" line="39">
            <comment line="53">
                The defaultPolicy and exemptPolicy will be set up                
            </comment>
            <comment line="54">
                in the static initializer.                
            </comment>
            <comment line="58">
                Map&lt;Provider,?&gt; of the providers we already have verified                
            </comment>
            <comment line="59">
                value == PROVIDER_VERIFIED is successfully verified                
            </comment>
            <comment line="60">
                value is failure cause Exception in error case                
            </comment>
            <comment line="63">
                Map&lt;Provider,?&gt; of the providers currently being verified                
            </comment>
            <comment line="66">
                Set the default value. May be changed in the static initializer.                
            </comment>
            <comment line="69">
                Don&apos;t let anyone instantiate this.                
            </comment>
            <comment line="167">
                Verify that the provider JAR files are signed properly, which
                 means the signer&apos;s certificate can be traced back to a
                 JCE trusted CA.
                 Return null if ok, failure Exception if verification failed.                
            </comment>
            <comment line="200">
                return whether this provider is properly signed and can be used by JCE                
            </comment>
            <comment line="205">
                dummy object to represent null                
            </comment>
            <comment line="216">
                reference to a Map we use as a cache for codebases                
            </comment>
            <comment line="219">
                Retuns the CodeBase for the given class.                
            </comment>
            <javadoc line="39">
                This class instantiates implementations of JCE engine classes from
                  providers registered with the java.security.Security object.                
                <author>
                    Jan Luehe                    
                </author>
                <author>
                    Sharon Liu                    
                </author>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="RANDOM" type="SecureRandom" line="50"/>
            <declaration name="defaultPolicy" type="CryptoPermissions" line="54"/>
            <declaration name="exemptPolicy" type="CryptoPermissions" line="55"/>
            <declaration name="verificationResults" type="Map" line="60"/>
            <declaration name="verifyingProviders" type="Map" line="63"/>
            <declaration name="isRestricted" type="boolean" line="66"/>
            <method name="JceSecurity" type="constructor" line="71"/>
            <scope line="74">
                <scope line="75">
                    <anonymous_class line="76">
                        <method name="run" type="Object" line="77"/>
                    </anonymous_class>
                </scope>
                <scope line="85">
                    <declaration name="se" type="SecurityException" line="86"/>
                </scope>
            </scope>
            <method name="getInstance" type="Instance" line="96">
                <params>
                    <param name="type" type="String"/>
                    <param name="clazz" type="Class"/>
                    <param name="algorithm" type="String"/>
                    <param name="provider" type="String"/>
                </params>
                <declaration name="s" type="Service" line="97"/>
                <declaration name="ve" type="Exception" line="98"/>
                <scope line="99">
                    <declaration name="msg" type="String" line="100"/>
                </scope>
            </method>
            <method name="getInstance" type="Instance" line="108">
                <params>
                    <param name="type" type="String"/>
                    <param name="clazz" type="Class"/>
                    <param name="algorithm" type="String"/>
                    <param name="provider" type="Provider"/>
                </params>
                <declaration name="s" type="Service" line="109"/>
                <declaration name="ve" type="Exception" line="110"/>
                <scope line="111">
                    <declaration name="msg" type="String" line="112"/>
                </scope>
            </method>
            <method name="getInstance" type="Instance" line="120">
                <params>
                    <param name="type" type="String"/>
                    <param name="clazz" type="Class"/>
                    <param name="algorithm" type="String"/>
                </params>
                <comment line="126">
                    allow only signed providers                    
                </comment>
                <declaration name="services" type="List" line="121"/>
                <declaration name="failure" type="NoSuchAlgorithmException" line="122"/>
                <scope line="123">
                    <declaration name="s" type="Service" line="124"/>
                    <scope line="125"/>
                    <scope line="129">
                        <declaration name="instance" type="Instance" line="130"/>
                    </scope>
                    <scope line="132"/>
                </scope>
            </method>
            <javadoc line="140">
                Verify if the JAR at URL codeBase is a signed exempt application
                  JAR file and returns the permissions bundled with the JAR.                
                <throws>
                    Exception on error                    
                </throws>
            </javadoc>
            <method name="verifyExemptJar" type="CryptoPermissions" line="146">
                <params>
                    <param name="codeBase" type="URL"/>
                </params>
                <declaration name="jv" type="JarVerifier" line="147"/>
            </method>
            <javadoc line="152">
                Verify if the JAR at URL codeBase is a signed provider JAR file.                
                <throws>
                    Exception on error                    
                </throws>
            </javadoc>
            <method name="verifyProviderJar" type="void" line="157">
                <params>
                    <param name="codeBase" type="URL"/>
                </params>
                <comment line="158">
                    Verify the provider JAR file and all                    
                </comment>
                <comment line="159">
                    supporting JAR files if there are any.                    
                </comment>
                <declaration name="jv" type="JarVerifier" line="160"/>
            </method>
            <declaration name="PROVIDER_VERIFIED" type="Object" line="164"/>
            <method name="getVerificationResult" type="Exception" line="172">
                <params>
                    <param name="p" type="Provider"/>
                </params>
                <comment line="180">
                    this method is static synchronized, must be recursion                    
                </comment>
                <comment line="181">
                    return failure now but do not save the result                    
                </comment>
                <comment line="188">
                    Verified ok, cache result                    
                </comment>
                <declaration name="o" type="Object" line="173"/>
                <scope line="174"/>
                <scope line="176"/>
                <scope line="179"/>
                <scope line="184">
                    <declaration name="providerURL" type="URL" line="186"/>
                </scope>
                <scope line="191"/>
                <scope line="194"/>
            </method>
            <method name="canUseProvider" type="boolean" line="200">
                <params>
                    <param name="p" type="Provider"/>
                </params>
            </method>
            <declaration name="NULL_URL" type="URL" line="205"/>
            <scope line="207">
                <scope line="208"/>
                <scope line="210"/>
            </scope>
            <declaration name="codeBaseCacheRef" type="Map" line="216"/>
            <method name="getCodeBase" type="URL" line="221">
                <params>
                    <param name="clazz" type="Class"/>
                </params>
                <declaration name="url" type="URL" line="222"/>
                <scope line="223">
                    <anonymous_class line="224">
                        <method name="run" type="Object" line="225">
                            <declaration name="pd" type="ProtectionDomain" line="226"/>
                            <scope line="227">
                                <declaration name="cs" type="CodeSource" line="228"/>
                                <scope line="229"/>
                            </scope>
                        </method>
                    </anonymous_class>
                </scope>
            </method>
            <method name="setupJurisdictionPolicies" type="void" line="241">
                <comment line="258">
                    Read jurisdiction policies.                    
                </comment>
                <comment line="267">
                    Merge the export and import policies for default applications.                    
                </comment>
                <comment line="274">
                    Merge the export and import policies for exempt applications.                    
                </comment>
                <declaration name="javaHomeDir" type="String" line="242"/>
                <declaration name="sep" type="String" line="243"/>
                <declaration name="pathToPolicyJar" type="String" line="244"/>
                <declaration name="exportJar" type="File" line="247"/>
                <declaration name="importJar" type="File" line="248"/>
                <declaration name="jceCipherURL" type="URL" line="249"/>
                <scope line="253"/>
                <declaration name="defaultExport" type="CryptoPermissions" line="259"/>
                <declaration name="exemptExport" type="CryptoPermissions" line="260"/>
                <declaration name="defaultImport" type="CryptoPermissions" line="263"/>
                <declaration name="exemptImport" type="CryptoPermissions" line="264"/>
                <scope line="268"/>
                <scope line="275"/>
                <scope line="277"/>
            </method>
            <javadoc line="282">
                Load the policies from the specified file. Also checks that the
                  policies are correctly signed.                
            </javadoc>
            <method name="loadPolicies" type="void" line="289">
                <params>
                    <param name="jarPathName" type="File"/>
                    <param name="defaultPolicy" type="CryptoPermissions"/>
                    <param name="exemptPolicy" type="CryptoPermissions"/>
                </params>
                <comment line="313">
                    Enforce the signer restraint, i.e. signer of JCE framework                    
                </comment>
                <comment line="314">
                    jar should also be the signer of the two jurisdiction policy                    
                </comment>
                <comment line="315">
                    jar files.                    
                </comment>
                <comment line="318">
                    Close and nullify the JarFile reference to help GC.                    
                </comment>
                <declaration name="jf" type="JarFile" line="291"/>
                <declaration name="entries" type="Enumeration" line="293"/>
                <scope line="294">
                    <declaration name="je" type="JarEntry" line="295"/>
                    <declaration name="is" type="InputStream" line="296"/>
                    <scope line="297">
                        <scope line="298"/>
                        <scope line="301"/>
                        <scope line="304"/>
                    </scope>
                    <scope line="307">
                        <scope line="308"/>
                    </scope>
                </scope>
            </method>
            <method name="getDefaultPolicy" type="CryptoPermissions" line="323"/>
            <method name="getExemptPolicy" type="CryptoPermissions" line="327"/>
            <method name="isRestricted" type="boolean" line="331"/>
        </class>
    </source>