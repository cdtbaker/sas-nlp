<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.crypto.spec">
        <import package="java.security.spec.AlgorithmParameterSpec"/>
        <class name="IvParameterSpec" line="3">
            <implements interface="AlgorithmParameterSpec"/>
            <javadoc line="3">
                This class specifies an &lt;i&gt;initialization vector&lt;/i&gt; (IV).
                  Examples which use IVs are ciphers in feedback mode,
                  e.g., DES in CBC mode and RSA ciphers with OAEP encoding
                  operation.                
                <author>
                    Jan Luehe                    
                </author>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="iv" type="byte[]" line="12"/>
            <javadoc line="13">
                Creates an IvParameterSpec object using the bytes in &lt;code&gt;iv&lt;/code&gt;
                  as the IV.                
                <param>
                    iv the buffer with the IV. The contents of the
                      buffer are copied to protect against subsequent modification.                    
                </param>
                <throws>
                    NullPointerException if <code>iv</code> is <code>null</code>                    
                </throws>
            </javadoc>
            <method name="IvParameterSpec" type="constructor" line="20">
                <params>
                    <param name="iv" type="byte[]"/>
                </params>
            </method>
            <javadoc line="23">
                Creates an IvParameterSpec object using the first &lt;code&gt;len&lt;/code&gt;
                  bytes in &lt;code&gt;iv&lt;/code&gt;, beginning at &lt;code&gt;offset&lt;/code&gt;
                  inclusive, as the IV.
                  &lt;p&gt; The bytes that constitute the IV are those between
                  &lt;code&gt;iv[offset]&lt;/code&gt; and &lt;code&gt;iv[offset+len-1]&lt;/code&gt; inclusive.                
                <param>
                    iv the buffer with the IV. The first <code>len</code>
                      bytes of the buffer beginning at <code>offset</code> inclusive
                      are copied to protect against subsequent modification.                    
                </param>
                <param>
                    offset the offset in <code>iv</code> where the IV
                      starts.                    
                </param>
                <param>
                    len the number of IV bytes.                    
                </param>
                <throws>
                    IllegalArgumentException if <code>iv</code> is <code>null</code>
                      or <code>(iv.length - offset < len)</code>                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException is thrown if <code>offset</code>
                      or <code>len</code> index bytes outside the <code>iv</code>.                    
                </throws>
            </javadoc>
            <method name="IvParameterSpec" type="constructor" line="40">
                <params>
                    <param name="iv" type="byte[]"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="41"/>
                <scope line="44"/>
                <scope line="47"/>
            </method>
            <javadoc line="53">
                Returns the initialization vector (IV).                
                <return>
                    the initialization vector (IV). Returns a new array
                      each time this method is called.                    
                </return>
            </javadoc>
            <method name="getIV" type="byte[]" line="58"/>
        </class>
    </source>