<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.crypto.spec">
        <import package="java.security.InvalidKeyException"/>
        <class name="DESedeKeySpec" line="30">
            <implements interface="java.security.spec.KeySpec"/>
            <javadoc line="30">
                This class specifies a DES-EDE (&quot;triple-DES&quot;) key.                
                <author>
                    Jan Luehe                    
                </author>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="DES_EDE_KEY_LEN" type="int" line="39"/>
            <javadoc line="39">
                The constant which defines the length of a DESede key in bytes.                
            </javadoc>
            <declaration name="key" type="byte[]" line="44"/>
            <javadoc line="46">
                Creates a DESedeKeySpec object using the first 24 bytes in
                  &lt;code&gt;key&lt;/code&gt; as the key material for the DES-EDE key.
                  &lt;p&gt; The bytes that constitute the DES-EDE key are those between
                  &lt;code&gt;key[0]&lt;/code&gt; and &lt;code&gt;key[23]&lt;/code&gt; inclusive                
                <param>
                    key the buffer with the DES-EDE key material. The first
                      24 bytes of the buffer are copied to protect against subsequent
                      modification.                    
                </param>
                <exception>
                    NullPointerException if &lt;code&gt;key&lt;/code&gt; is null.                    
                </exception>
                <exception>
                    InvalidKeyException if the given key material is shorter
                      than 24 bytes.                    
                </exception>
            </javadoc>
            <method name="DESedeKeySpec" type="constructor" line="61">
                <params>
                    <param name="key" type="byte[]"/>
                </params>
            </method>
            <javadoc line="65">
                Creates a DESedeKeySpec object using the first 24 bytes in
                  &lt;code&gt;key&lt;/code&gt;, beginning at &lt;code&gt;offset&lt;/code&gt; inclusive,
                  as the key material for the DES-EDE key.
                  &lt;p&gt; The bytes that constitute the DES-EDE key are those between
                  &lt;code&gt;key[offset]&lt;/code&gt; and &lt;code&gt;key[offset+23]&lt;/code&gt; inclusive.                
                <param>
                    key the buffer with the DES-EDE key material. The first
                      24 bytes of the buffer beginning at &lt;code&gt;offset&lt;/code&gt; inclusive
                      are copied to protect against subsequent modification.                    
                </param>
                <param>
                    offset the offset in &lt;code&gt;key&lt;/code&gt;, where the DES-EDE key
                      material starts.                    
                </param>
                <exception>
                    NullPointerException if &lt;code&gt;key&lt;/code&gt; is null.                    
                </exception>
                <exception>
                    InvalidKeyException if the given key material, starting at
                      &lt;code&gt;offset&lt;/code&gt; inclusive, is shorter than 24 bytes                    
                </exception>
            </javadoc>
            <method name="DESedeKeySpec" type="constructor" line="83">
                <params>
                    <param name="key" type="byte[]"/>
                    <param name="offset" type="int"/>
                </params>
                <scope line="84"/>
            </method>
            <javadoc line="91">
                Returns the DES-EDE key.                
                <return>
                    the DES-EDE key. Returns a new array
                      each time this method is called.                    
                </return>
            </javadoc>
            <method name="getKey" type="byte[]" line="97"/>
            <javadoc line="101">
                Checks if the given DES-EDE key, starting at &lt;code&gt;offset&lt;/code&gt;
                  inclusive, is parity-adjusted.                
                <param>
                    key    a byte array which holds the key value                    
                </param>
                <param>
                    offset the offset into the byte array                    
                </param>
                <return>
                    true if the given DES-EDE key is parity-adjusted, false
                      otherwise                    
                </return>
                <exception>
                    NullPointerException if &lt;code&gt;key&lt;/code&gt; is null.                    
                </exception>
                <exception>
                    InvalidKeyException if the given key material, starting at
                      &lt;code&gt;offset&lt;/code&gt; inclusive, is shorter than 24 bytes                    
                </exception>
            </javadoc>
            <method name="isParityAdjusted" type="boolean" line="115">
                <params>
                    <param name="key" type="byte[]"/>
                    <param name="offset" type="int"/>
                </params>
                <scope line="116"/>
                <scope line="121"/>
            </method>
        </class>
    </source>