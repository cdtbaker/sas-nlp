<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.crypto.spec">
        <import package="java.security.InvalidKeyException"/>
        <class name="DESKeySpec" line="30">
            <comment line="47">
                Weaksemi-weak keys copied from FIPS 74.
                
                 &quot;...The first 6 keys have duals different than themselves, hence
                 each is both a key and a dual giving 12 keys with duals. The last
                 four keys equal their duals, and are called self-dual keys...&quot;
                
                 1.   E001E001F101F101    01E001E001F101F1
                 2.   FE1FFE1FFEOEFEOE    1FFE1FFEOEFEOEFE
                 3.   E01FE01FF10EF10E    1FE01FEOOEF10EF1
                 4.   01FE01FE01FE01FE    FE01FE01FE01FE01
                 5.   011F011F010E010E    1F011F010E010E01
                 6.   E0FEE0FEF1FEF1FE    FEE0FEE0FEF1FEF1
                 7.   0101010101010101    0101010101010101
                 8.   FEFEFEFEFEFEFEFE    FEFEFEFEFEFEFEFE
                 9.   E0E0E0E0F1F1F1F1    E0E0E0E0F1F1F1F1
                 10.  1F1F1F1F0E0E0E0E    1F1F1F1F0E0E0E0E                
            </comment>
            <implements interface="java.security.spec.KeySpec"/>
            <javadoc line="30">
                This class specifies a DES key.                
                <author>
                    Jan Luehe                    
                </author>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="DES_KEY_LEN" type="int" line="39"/>
            <javadoc line="39">
                The constant which defines the length of a DES key in bytes.                
            </javadoc>
            <declaration name="key" type="byte[]" line="44"/>
            <declaration name="WEAK_KEYS" type="byte[][]" line="64"/>
            <javadoc line="115">
                Creates a DESKeySpec object using the first 8 bytes in
                  &lt;code&gt;key&lt;/code&gt; as the key material for the DES key.
                  &lt;p&gt; The bytes that constitute the DES key are those between
                  &lt;code&gt;key[0]&lt;/code&gt; and &lt;code&gt;key[7]&lt;/code&gt; inclusive.                
                <param>
                    key the buffer with the DES key material. The first 8 bytes
                      of the buffer are copied to protect against subsequent modification.                    
                </param>
                <exception>
                    NullPointerException if the given key material is
                      &lt;code&gt;null&lt;/code&gt;                    
                </exception>
                <exception>
                    InvalidKeyException if the given key material is shorter
                      than 8 bytes.                    
                </exception>
            </javadoc>
            <method name="DESKeySpec" type="constructor" line="130">
                <params>
                    <param name="key" type="byte[]"/>
                </params>
            </method>
            <javadoc line="134">
                Creates a DESKeySpec object using the first 8 bytes in
                  &lt;code&gt;key&lt;/code&gt;, beginning at &lt;code&gt;offset&lt;/code&gt; inclusive,
                  as the key material for the DES key.
                  &lt;p&gt; The bytes that constitute the DES key are those between
                  &lt;code&gt;key[offset]&lt;/code&gt; and &lt;code&gt;key[offset+7]&lt;/code&gt; inclusive.                
                <param>
                    key the buffer with the DES key material. The first 8 bytes
                      of the buffer beginning at &lt;code&gt;offset&lt;/code&gt; inclusive are copied
                      to protect against subsequent modification.                    
                </param>
                <param>
                    offset the offset in &lt;code&gt;key&lt;/code&gt;, where the DES key
                      material starts.                    
                </param>
                <exception>
                    NullPointerException if the given key material is
                      &lt;code&gt;null&lt;/code&gt;                    
                </exception>
                <exception>
                    InvalidKeyException if the given key material, starting at
                      &lt;code&gt;offset&lt;/code&gt; inclusive, is shorter than 8 bytes.                    
                </exception>
            </javadoc>
            <method name="DESKeySpec" type="constructor" line="153">
                <params>
                    <param name="key" type="byte[]"/>
                    <param name="offset" type="int"/>
                </params>
                <scope line="154"/>
            </method>
            <javadoc line="161">
                Returns the DES key material.                
                <return>
                    the DES key material. Returns a new array
                      each time this method is called.                    
                </return>
            </javadoc>
            <method name="getKey" type="byte[]" line="167"/>
            <javadoc line="171">
                Checks if the given DES key material, starting at &lt;code&gt;offset&lt;/code&gt;
                  inclusive, is parity-adjusted.                
                <param>
                    key the buffer with the DES key material.                    
                </param>
                <param>
                    offset the offset in &lt;code&gt;key&lt;/code&gt;, where the DES key
                      material starts.                    
                </param>
                <return>
                    true if the given DES key material is parity-adjusted, false
                      otherwise.                    
                </return>
                <exception>
                    InvalidKeyException if the given key material is
                      &lt;code&gt;null&lt;/code&gt;, or starting at &lt;code&gt;offset&lt;/code&gt; inclusive, is
                      shorter than 8 bytes.                    
                </exception>
            </javadoc>
            <method name="isParityAdjusted" type="boolean" line="187">
                <params>
                    <param name="key" type="byte[]"/>
                    <param name="offset" type="int"/>
                </params>
                <scope line="188"/>
                <scope line="191"/>
                <scope line="195">
                    <declaration name="k" type="int" line="196"/>
                    <scope line="197"/>
                </scope>
            </method>
            <javadoc line="205">
                Checks if the given DES key material is weak or semi-weak.                
                <param>
                    key the buffer with the DES key material.                    
                </param>
                <param>
                    offset the offset in &lt;code&gt;key&lt;/code&gt;, where the DES key
                      material starts.                    
                </param>
                <return>
                    true if the given DES key material is weak or semi-weak, false
                      otherwise.                    
                </return>
                <exception>
                    InvalidKeyException if the given key material is
                      &lt;code&gt;null&lt;/code&gt;, or starting at &lt;code&gt;offset&lt;/code&gt; inclusive, is
                      shorter than 8 bytes.                    
                </exception>
            </javadoc>
            <method name="isWeak" type="boolean" line="220">
                <params>
                    <param name="key" type="byte[]"/>
                    <param name="offset" type="int"/>
                </params>
                <scope line="221"/>
                <scope line="224"/>
                <scope line="227">
                    <declaration name="found" type="boolean" line="228"/>
                    <scope line="229">
                        <scope line="230"/>
                    </scope>
                    <scope line="234"/>
                </scope>
            </method>
        </class>
    </source>