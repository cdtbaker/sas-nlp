<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.crypto.spec">
        <import package="java.security.spec.AlgorithmParameterSpec"/>
        <class name="RC2ParameterSpec" line="30">
            <implements interface="AlgorithmParameterSpec"/>
            <javadoc line="30">
                This class specifies the parameters used with the
                  &lt;a href=&quot;http://www.ietf.org/rfc/rfc2268.txt&quot;&gt;&lt;i&gt;RC2&lt;/i&gt;&lt;/a&gt;
                  algorithm.
                  &lt;p&gt; The parameters consist of an effective key size and optionally
                  an 8-byte initialization vector (IV) (only in feedback mode).
                  &lt;p&gt; This class can be used to initialize a &lt;code&gt;Cipher&lt;/code&gt; object that
                  implements the &lt;i&gt;RC2&lt;/i&gt; algorithm.                
                <author>
                    Jan Luehe                    
                </author>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="iv" type="byte[]" line="47"/>
            <declaration name="effectiveKeyBits" type="int" line="48"/>
            <javadoc line="50">
                Constructs a parameter set for RC2 from the given effective key size
                  (in bits).                
                <param>
                    effectiveKeyBits the effective key size in bits.                    
                </param>
            </javadoc>
            <method name="RC2ParameterSpec" type="constructor" line="56">
                <params>
                    <param name="effectiveKeyBits" type="int"/>
                </params>
            </method>
            <javadoc line="60">
                Constructs a parameter set for RC2 from the given effective key size
                  (in bits) and an 8-byte IV.
                  &lt;p&gt; The bytes that constitute the IV are those between
                  &lt;code&gt;iv[0]&lt;/code&gt; and &lt;code&gt;iv[7]&lt;/code&gt; inclusive.                
                <param>
                    effectiveKeyBits the effective key size in bits.                    
                </param>
                <param>
                    iv the buffer with the 8-byte IV. The first 8 bytes of
                      the buffer are copied to protect against subsequent modification.                    
                </param>
                <exception>
                    IllegalArgumentException if <code>iv</code> is null.                    
                </exception>
            </javadoc>
            <method name="RC2ParameterSpec" type="constructor" line="72">
                <params>
                    <param name="effectiveKeyBits" type="int"/>
                    <param name="iv" type="byte[]"/>
                </params>
            </method>
            <javadoc line="76">
                Constructs a parameter set for RC2 from the given effective key size
                  (in bits) and IV.
                  &lt;p&gt; The IV is taken from &lt;code&gt;iv&lt;/code&gt;, starting at
                  &lt;code&gt;offset&lt;/code&gt; inclusive.
                  The bytes that constitute the IV are those between
                  &lt;code&gt;iv[offset]&lt;/code&gt; and &lt;code&gt;iv[offset+7]&lt;/code&gt; inclusive.                
                <param>
                    effectiveKeyBits the effective key size in bits.                    
                </param>
                <param>
                    iv the buffer with the IV. The first 8 bytes
                      of the buffer beginning at <code>offset</code> inclusive
                      are copied to protect against subsequent modification.                    
                </param>
                <param>
                    offset the offset in <code>iv</code> where the 8-byte IV
                      starts.                    
                </param>
                <exception>
                    IllegalArgumentException if <code>iv</code> is null.                    
                </exception>
            </javadoc>
            <method name="RC2ParameterSpec" type="constructor" line="93">
                <params>
                    <param name="effectiveKeyBits" type="int"/>
                    <param name="iv" type="byte[]"/>
                    <param name="offset" type="int"/>
                </params>
                <declaration name="blockSize" type="int" line="96"/>
                <scope line="97"/>
            </method>
            <javadoc line="104">
                Returns the effective key size in bits.                
                <return>
                    the effective key size in bits.                    
                </return>
            </javadoc>
            <method name="getEffectiveKeyBits" type="int" line="109"/>
            <javadoc line="113">
                Returns the IV or null if this parameter set does not contain an IV.                
                <return>
                    the IV or null if this parameter set does not contain an IV.
                      Returns a new array each time this method is called.                    
                </return>
            </javadoc>
            <method name="getIV" type="byte[]" line="119"/>
            <javadoc line="123">
                Tests for equality between the specified object and this
                  object. Two RC2ParameterSpec objects are considered equal if their
                  effective key sizes and IVs are equal.
                  (Two IV references are considered equal if both are &lt;tt&gt;null&lt;/tt&gt;.)                
                <param>
                    obj the object to test for equality with this object.                    
                </param>
                <return>
                    true if the objects are considered equal, false if
                      <code>obj</code> is null or otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="134">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="135"/>
                <scope line="138"/>
                <declaration name="other" type="RC2ParameterSpec" line="141"/>
            </method>
            <javadoc line="147">
                Calculates a hash code value for the object.
                  Objects that are equal will also have the same hashcode.                
            </javadoc>
            <method name="hashCode" type="int" line="151">
                <declaration name="retval" type="int" line="152"/>
                <scope line="153">
                    <scope line="154"/>
                </scope>
            </method>
        </class>
    </source>