<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.sql">
        <import package="java.sql.PreparedStatement"/>
        <import package="java.sql.SQLException"/>
        <import package="java.util.EventObject"/>
        <class name="StatementEvent" line="5">
            <extends class="EventObject"/>
            <javadoc line="5">
                A &lt;code&gt;StatementEvent&lt;/code&gt; is sent to all &lt;code&gt;StatementEventListener&lt;/code&gt;s which were
                  registered with a &lt;code&gt;PooledConnection&lt;/code&gt;. This occurs when the driver determines that a
                  &lt;code&gt;PreparedStatement&lt;/code&gt; that is associated with the &lt;code&gt;PooledConnection&lt;/code&gt; has been closed or the driver determines
                  is invalid.
                  &lt;p&gt;                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="exception" type="SQLException" line="14"/>
            <declaration name="statement" type="PreparedStatement" line="15"/>
            <javadoc line="16">
                Constructs a &lt;code&gt;StatementEvent&lt;/code&gt; with the specified &lt;code&gt;PooledConnection&lt;/code&gt; and
                  &lt;code&gt;PreparedStatement&lt;/code&gt;.  The &lt;code&gt;SQLException&lt;/code&gt; contained in the event defaults to
                  null.
                  &lt;p&gt;                
                <param>
                    con                   The &lt;code&gt;PooledConnection&lt;/code&gt; that the closed or invalid
                      &lt;code&gt;PreparedStatement&lt;/code&gt;is associated with.                    
                </param>
                <param>
                    statement             The &lt;code&gt;PreparedStatement&lt;/code&gt; that is bieng closed or is invalid
                      &lt;p&gt;                    
                </param>
                <throws>
                    IllegalArgumentException if &lt;code&gt;con&lt;/code&gt; is null.                    
                </throws>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="StatementEvent" type="constructor" line="28">
                <params>
                    <param name="con" type="PooledConnection"/>
                    <param name="statement" type="PreparedStatement"/>
                </params>
            </method>
            <javadoc line="33">
                Constructs a &lt;code&gt;StatementEvent&lt;/code&gt; with the specified &lt;code&gt;PooledConnection&lt;/code&gt;,
                  &lt;code&gt;PreparedStatement&lt;/code&gt; and &lt;code&gt;SQLException&lt;/code&gt;
                  &lt;p&gt;                
                <param>
                    con                   The &lt;code&gt;PooledConnection&lt;/code&gt; that the closed or invalid &lt;code&gt;PreparedStatement&lt;/code&gt;
                      is associated with.                    
                </param>
                <param>
                    statement             The &lt;code&gt;PreparedStatement&lt;/code&gt; that is being closed or is invalid                    
                </param>
                <param>
                    exception             The &lt;code&gt;SQLException &lt;/code&gt;the driver is about to throw to
                      the application                    
                </param>
                <throws>
                    IllegalArgumentException if &lt;code&gt;con&lt;/code&gt; is null.
                      &lt;p&gt;                    
                </throws>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="StatementEvent" type="constructor" line="46">
                <params>
                    <param name="con" type="PooledConnection"/>
                    <param name="statement" type="PreparedStatement"/>
                    <param name="exception" type="SQLException"/>
                </params>
            </method>
            <javadoc line="51">
                Returns the &lt;code&gt;PreparedStatement&lt;/code&gt; that is being closed or is invalid
                  &lt;p&gt;                
                <return>
                    The &lt;code&gt;PreparedStatement&lt;/code&gt; that is being closed or is invalid
                      &lt;p&gt;                    
                </return>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="getStatement" type="PreparedStatement" line="58"/>
            <javadoc line="61">
                Returns the &lt;code&gt;SQLException&lt;/code&gt; the driver is about to throw
                  &lt;p&gt;                
                <return>
                    The &lt;code&gt;SQLException&lt;/code&gt; the driver is about to throw
                      &lt;p&gt;                    
                </return>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="getSQLException" type="SQLException" line="68"/>
        </class>
    </source>