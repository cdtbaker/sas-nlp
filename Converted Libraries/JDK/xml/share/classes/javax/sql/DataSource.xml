<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.sql">
        <import package="java.sql.Connection"/>
        <import package="java.sql.SQLException"/>
        <import package="java.sql.Wrapper"/>
        <interface name="DataSource">
            <implements interface="CommonDataSource"/>
            <implements interface="Wrapper"/>
            <javadoc line="5">
                &lt;p&gt;A factory for connections to the physical data source that this
                  &lt;code&gt;DataSource&lt;/code&gt; object represents.  An alternative to the
                  &lt;code&gt;DriverManager&lt;/code&gt; facility, a &lt;code&gt;DataSource&lt;/code&gt; object
                  is the preferred means of getting a connection. An object that implements
                  the &lt;code&gt;DataSource&lt;/code&gt; interface will typically be
                  registered with a naming service based on the
                  Java&lt;sup&gt;&lt;font size=-2&gt;TM&lt;/font&gt;&lt;/sup&gt; Naming and Directory (JNDI) API.
                  &lt;P&gt;
                  The &lt;code&gt;DataSource&lt;/code&gt; interface is implemented by a driver vendor.
                  There are three types of implementations:
                  &lt;OL&gt;
                  &lt;LI&gt;Basic implementation -- produces a standard &lt;code&gt;Connection&lt;/code&gt;
                  object
                  &lt;LI&gt;Connection pooling implementation -- produces a &lt;code&gt;Connection&lt;/code&gt;
                  object that will automatically participate in connection pooling.  This
                  implementation works with a middle-tier connection pooling manager.
                  &lt;LI&gt;Distributed transaction implementation -- produces a
                  &lt;code&gt;Connection&lt;/code&gt; object that may be used for distributed
                  transactions and almost always participates in connection pooling.
                  This implementation works with a middle-tier
                  transaction manager and almost always with a connection
                  pooling manager.
                  &lt;/OL&gt;
                  &lt;P&gt;
                  A &lt;code&gt;DataSource&lt;/code&gt; object has properties that can be modified
                  when necessary.  For example, if the data source is moved to a different
                  server, the property for the server can be changed.  The benefit is that
                  because the data source&apos;s properties can be changed, any code accessing
                  that data source does not need to be changed.
                  &lt;P&gt;
                  A driver that is accessed via a &lt;code&gt;DataSource&lt;/code&gt; object does not
                  register itself with the &lt;code&gt;DriverManager&lt;/code&gt;.  Rather, a
                  &lt;code&gt;DataSource&lt;/code&gt; object is retrieved though a lookup operation
                  and then used to create a &lt;code&gt;Connection&lt;/code&gt; object.  With a basic
                  implementation, the connection obtained through a &lt;code&gt;DataSource&lt;/code&gt;
                  object is identical to a connection obtained through the
                  &lt;code&gt;DriverManager&lt;/code&gt; facility.                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="getConnection" type="Connection" line="46"/>
            <javadoc line="46">
                &lt;p&gt;Attempts to establish a connection with the data source that
                  this &lt;code&gt;DataSource&lt;/code&gt; object represents.                
                <return>
                    a connection to the data source                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
            </javadoc>
            <method name="getConnection" type="Connection" line="53"/>
            <javadoc line="53">
                &lt;p&gt;Attempts to establish a connection with the data source that
                  this &lt;code&gt;DataSource&lt;/code&gt; object represents.                
                <param>
                    username the database user on whose behalf the connection is
                      being made                    
                </param>
                <param>
                    password the user's password                    
                </param>
                <return>
                    a connection to the data source                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
                <since>
                    1.4                    
                </since>
            </javadoc>
        </interface>
    </source>