<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.sql.rowset.serial">
        <import package="java.sql"/>
        <import package="java.io"/>
        <import package="java.util"/>
        <class name="SerialRef" line="5">
            <implements interface="Ref"/>
            <implements interface="Serializable"/>
            <implements interface="Cloneable"/>
            <javadoc line="5">
                A serialized mapping of a &lt;code&gt;Ref&lt;/code&gt; object, which is the mapping in the
                  Java programming language of an SQL &lt;code&gt;REF&lt;/code&gt; value.
                  &lt;p&gt;
                  The &lt;code&gt;SerialRef&lt;/code&gt; class provides a constructor  for
                  creating a &lt;code&gt;SerialRef&lt;/code&gt; instance from a &lt;code&gt;Ref&lt;/code&gt;
                  object and provides methods for getting and setting the &lt;code&gt;Ref&lt;/code&gt; object.                
            </javadoc>
            <declaration name="baseTypeName" type="String" line="14"/>
            <javadoc line="14">
                String containing the base type name.                
                <serial>
                                        
                </serial>
            </javadoc>
            <declaration name="object" type="Object" line="19"/>
            <javadoc line="19">
                This will store the type &lt;code&gt;Ref&lt;/code&gt; as an &lt;code&gt;Object&lt;/code&gt;.                
            </javadoc>
            <declaration name="reference" type="Ref" line="23"/>
            <javadoc line="23">
                Private copy of the Ref reference.                
            </javadoc>
            <javadoc line="27">
                Constructs a &lt;code&gt;SerialRef&lt;/code&gt; object from the given &lt;code&gt;Ref&lt;/code&gt;
                  object.                
                <param>
                    ref a Ref object; cannot be &lt;code&gt;null&lt;/code&gt;                    
                </param>
                <throws>
                    SQLException if a database access occurs; if &lt;code&gt;ref&lt;/code&gt;
                      is &lt;code&gt;null&lt;/code&gt;; or if the &lt;code&gt;Ref&lt;/code&gt; object returns a
                      &lt;code&gt;null&lt;/code&gt; value base type name.                    
                </throws>
                <throws>
                    SerialException if an error occurs serializing the &lt;code&gt;Ref&lt;/code&gt;
                      object                    
                </throws>
            </javadoc>
            <method name="SerialRef" type="constructor" line="37">
                <params>
                    <param name="ref" type="Ref"/>
                </params>
                <scope line="38"/>
                <scope line="43"/>
                <scope line="46"/>
            </method>
            <javadoc line="50">
                Returns a string describing the base type name of the &lt;code&gt;Ref&lt;/code&gt;.                
                <return>
                    a string of the base type name of the Ref                    
                </return>
                <throws>
                    SerialException in no Ref object has been set                    
                </throws>
            </javadoc>
            <method name="getBaseTypeName" type="String" line="55"/>
            <javadoc line="58">
                Returns an &lt;code&gt;Object&lt;/code&gt; representing the SQL structured type
                  to which this &lt;code&gt;SerialRef&lt;/code&gt; object refers.  The attributes
                  of the structured type are mapped according to the given type map.                
                <param>
                    map a &lt;code&gt;java.util.Map&lt;/code&gt; object containing zero or
                      more entries, with each entry consisting of 1) a &lt;code&gt;String&lt;/code&gt;
                      giving the fully qualified name of a UDT and 2) the
                      &lt;code&gt;Class&lt;/code&gt; object for the &lt;code&gt;SQLData&lt;/code&gt; implementation
                      that defines how the UDT is to be mapped                    
                </param>
                <return>
                    an object instance resolved from the Ref reference and mapped
                      according to the supplied type map                    
                </return>
                <throws>
                    SerialException if an error is encountered in the reference
                      resolution                    
                </throws>
            </javadoc>
            <method name="getObject" type="Object" line="72">
                <params>
                    <param name="map" type="java.util.Map&lt;String,Class&lt;?&gt;&gt;"/>
                </params>
                <scope line="74"/>
                <scope line="77"/>
            </method>
            <javadoc line="81">
                Returns an &lt;code&gt;Object&lt;/code&gt; representing the SQL structured type
                  to which this &lt;code&gt;SerialRef&lt;/code&gt; object refers.                
                <return>
                    an object instance resolved from the Ref reference                    
                </return>
                <throws>
                    SerialException if an error is encountered in the reference
                      resolution                    
                </throws>
            </javadoc>
            <method name="getObject" type="Object" line="88">
                <scope line="89">
                    <scope line="90"/>
                    <scope line="93"/>
                </scope>
                <scope line="97"/>
            </method>
            <javadoc line="102">
                Sets the SQL structured type that this &lt;code&gt;SerialRef&lt;/code&gt; object
                  references to the given &lt;code&gt;Object&lt;/code&gt; object.                
                <param>
                    obj an &lt;code&gt;Object&lt;/code&gt; representing the SQL structured type
                      to be referenced                    
                </param>
                <throws>
                    SerialException if an error is encountered generating the
                      the structured type referenced by this &lt;code&gt;SerialRef&lt;/code&gt; object                    
                </throws>
            </javadoc>
            <method name="setObject" type="void" line="110">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="111"/>
                <scope line="114"/>
            </method>
            <declaration name="serialVersionUID" type="long" line="119"/>
            <javadoc line="119">
                The identifier that assists in the serialization of this &lt;code&gt;SerialRef&lt;/code&gt;
                  object.                
            </javadoc>
        </class>
    </source>