<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.sql.rowset.serial">
        <import package="java.sql"/>
        <import package="javax.sql"/>
        <import package="java.io"/>
        <import package="java.math"/>
        <import package="java.util.Map"/>
        <class name="SQLInputImpl" line="7">
            <implements interface="SQLInput"/>
            <javadoc line="7">
                An input stream used for custom mapping user-defined types (UDTs).
                  An &lt;code&gt;SQLInputImpl&lt;/code&gt; object is an input stream that contains a
                  stream of values that are the attributes of a UDT.
                  &lt;p&gt;
                  This class is used by the driver behind the scenes when the method
                  &lt;code&gt;getObject&lt;/code&gt; is called on an SQL structured or distinct type
                  that has a custom mapping; a programmer never invokes
                  &lt;code&gt;SQLInputImpl&lt;/code&gt; methods directly. They are provided here as a
                  convenience for those who write &lt;code&gt;RowSet&lt;/code&gt; implementations.
                  &lt;P&gt;
                  The &lt;code&gt;SQLInputImpl&lt;/code&gt; class provides a set of
                  reader methods analogous to the &lt;code&gt;ResultSet&lt;/code&gt; getter
                  methods.  These methods make it possible to read the values in an
                  &lt;code&gt;SQLInputImpl&lt;/code&gt; object.
                  &lt;P&gt;
                  The method &lt;code&gt;wasNull&lt;/code&gt; is used to determine whether the
                  the last value read was SQL &lt;code&gt;NULL&lt;/code&gt;.
                  &lt;P&gt;When the method &lt;code&gt;getObject&lt;/code&gt; is called with an
                  object of a class implementing the interface &lt;code&gt;SQLData&lt;/code&gt;,
                  the JDBC driver calls the method &lt;code&gt;SQLData.getSQLType&lt;/code&gt;
                  to determine the SQL type of the UDT being custom mapped. The driver
                  creates an instance of &lt;code&gt;SQLInputImpl&lt;/code&gt;, populating it with the
                  attributes of the UDT.  The driver then passes the input
                  stream to the method &lt;code&gt;SQLData.readSQL&lt;/code&gt;, which in turn
                  calls the &lt;code&gt;SQLInputImpl&lt;/code&gt; reader methods
                  to read the attributes from the input stream.                
                <see>
                    java.sql.SQLData                    
                </see>
            </javadoc>
            <declaration name="lastValueWasNull" type="boolean" line="37"/>
            <javadoc line="37">
                &lt;code&gt;true&lt;/code&gt; if the last value returned was &lt;code&gt;SQL NULL&lt;/code&gt;;
                  &lt;code&gt;false&lt;/code&gt; otherwise.                
            </javadoc>
            <declaration name="idx" type="int" line="42"/>
            <javadoc line="42">
                The current index into the array of SQL structured type attributes
                  that will be read from this &lt;code&gt;SQLInputImpl&lt;/code&gt; object and
                  mapped to the fields of a class in the Java programming language.                
            </javadoc>
            <declaration name="attrib" type="Object" line="48"/>
            <javadoc line="48">
                The array of attributes to be read from this stream.  The order
                  of the attributes is the same as the order in which they were
                  listed in the SQL definition of the UDT.                
            </javadoc>
            <declaration name="map" type="Map" line="54"/>
            <javadoc line="54">
                The type map to use when the method &lt;code&gt;readObject&lt;/code&gt;
                  is invoked. This is a &lt;code&gt;java.util.Map&lt;/code&gt; object in which
                  there may be zero or more entries.  Each entry consists of the
                  fully qualified name of a UDT (the value to be mapped) and the
                  &lt;code&gt;Class&lt;/code&gt; object for a class that implements
                  &lt;code&gt;SQLData&lt;/code&gt; (the Java class that defines how the UDT
                  will be mapped).                
            </javadoc>
            <javadoc line="64">
                Creates an &lt;code&gt;SQLInputImpl&lt;/code&gt; object initialized with the
                  given array of attributes and the given type map. If any of the
                  attributes is a UDT whose name is in an entry in the type map,
                  the attribute will be mapped according to the corresponding
                  &lt;code&gt;SQLData&lt;/code&gt; implementation.                
                <param>
                    attributes an array of &lt;code&gt;Object&lt;/code&gt; instances in which
                      each element is an attribute of a UDT. The order of the
                      attributes in the array is the same order in which
                      the attributes were defined in the UDT definition.                    
                </param>
                <param>
                    map a &lt;code&gt;java.util.Map&lt;/code&gt; object containing zero or more
                      entries, with each entry consisting of 1) a &lt;code&gt;String&lt;/code&gt;
                      giving the fully
                      qualified name of the UDT and 2) the &lt;code&gt;Class&lt;/code&gt; object
                      for the &lt;code&gt;SQLData&lt;/code&gt; implementation that defines how
                      the UDT is to be mapped                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;attributes&lt;/code&gt; or the &lt;code&gt;map&lt;/code&gt;
                      is a &lt;code&gt;null&lt;/code&gt; value                    
                </throws>
            </javadoc>
            <method name="SQLInputImpl" type="constructor" line="83">
                <params>
                    <param name="attributes" type="Object[]"/>
                    <param name="map" type="Map&lt;String,Class&lt;?&gt;&gt;"/>
                </params>
                <scope line="84"/>
            </method>
            <javadoc line="91">
                Retrieves the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object
                  as an &lt;code&gt;Object&lt;/code&gt; in the Java programming language.                
                <return>
                    the next value in the input stream
                      as an &lt;code&gt;Object&lt;/code&gt; in the Java programming language                    
                </return>
                <throws>
                    SQLException if the read position is located at an invalid
                      position or if there are no further values in the stream                    
                </throws>
            </javadoc>
            <method name="getNextAttribute" type="Object" line="99">
                <scope line="100"/>
                <scope line="103"/>
            </method>
            <javadoc line="107">
                Retrieves the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object as
                  a &lt;code&gt;String&lt;/code&gt; in the Java programming language.
                  &lt;p&gt;
                  This method does not perform type-safe checking to determine if the
                  returned type is the expected type; this responsibility is delegated
                  to the UDT mapping as defined by a &lt;code&gt;SQLData&lt;/code&gt;
                  implementation.
                  &lt;p&gt;                
                <return>
                    the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object;
                      if the value is &lt;code&gt;SQL NULL&lt;/code&gt;, return &lt;code&gt;null&lt;/code&gt;                    
                </return>
                <throws>
                    SQLException if the read position is located at an invalid
                      position or if there are no further values in the stream.                    
                </throws>
            </javadoc>
            <method name="readString" type="String" line="121">
                <declaration name="attrib" type="String" line="122"/>
                <scope line="123"/>
                <scope line="127"/>
            </method>
            <javadoc line="132">
                Retrieves the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object as
                  a &lt;code&gt;boolean&lt;/code&gt; in the Java programming language.
                  &lt;p&gt;
                  This method does not perform type-safe checking to determine if the
                  returned type is the expected type; this responsibility is delegated
                  to the UDT mapping as defined by a &lt;code&gt;SQLData&lt;/code&gt;
                  implementation.
                  &lt;p&gt;                
                <return>
                    the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object;
                      if the value is &lt;code&gt;SQL NULL&lt;/code&gt;, return &lt;code&gt;null&lt;/code&gt;                    
                </return>
                <throws>
                    SQLException if the read position is located at an invalid
                      position or if there are no further values in the stream.                    
                </throws>
            </javadoc>
            <method name="readBoolean" type="boolean" line="146">
                <declaration name="attrib" type="Boolean" line="147"/>
                <scope line="148"/>
                <scope line="152"/>
            </method>
            <javadoc line="157">
                Retrieves the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object as
                  a &lt;code&gt;byte&lt;/code&gt; in the Java programming language.
                  &lt;p&gt;
                  This method does not perform type-safe checking to determine if the
                  returned type is the expected type; this responsibility is delegated
                  to the UDT mapping as defined by a &lt;code&gt;SQLData&lt;/code&gt;
                  implementation.
                  &lt;p&gt;                
                <return>
                    the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object;
                      if the value is &lt;code&gt;SQL NULL&lt;/code&gt;, return &lt;code&gt;null&lt;/code&gt;                    
                </return>
                <throws>
                    SQLException if the read position is located at an invalid
                      position or if there are no further values in the stream                    
                </throws>
            </javadoc>
            <method name="readByte" type="byte" line="171">
                <declaration name="attrib" type="Byte" line="172"/>
                <scope line="173"/>
                <scope line="177"/>
            </method>
            <javadoc line="182">
                Retrieves the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object
                  as a &lt;code&gt;short&lt;/code&gt; in the Java programming language.
                  &lt;P&gt;
                  This method does not perform type-safe checking to determine if the
                  returned type is the expected type; this responsibility is delegated
                  to the UDT mapping as defined by a &lt;code&gt;SQLData&lt;/code&gt; implementation.
                  &lt;P&gt;                
                <return>
                    the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object;
                      if the value is &lt;code&gt;SQL NULL&lt;/code&gt;, return &lt;code&gt;null&lt;/code&gt;                    
                </return>
                <throws>
                    SQLException if the read position is located at an invalid
                      position or if there are no more values in the stream                    
                </throws>
            </javadoc>
            <method name="readShort" type="short" line="195">
                <declaration name="attrib" type="Short" line="196"/>
                <scope line="197"/>
                <scope line="201"/>
            </method>
            <javadoc line="206">
                Retrieves the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object
                  as an &lt;code&gt;int&lt;/code&gt; in the Java programming language.
                  &lt;P&gt;
                  This method does not perform type-safe checking to determine if the
                  returned type is the expected type; this responsibility is delegated
                  to the UDT mapping as defined by a &lt;code&gt;SQLData&lt;/code&gt; implementation.
                  &lt;P&gt;                
                <return>
                    the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object;
                      if the value is &lt;code&gt;SQL NULL&lt;/code&gt;, return &lt;code&gt;null&lt;/code&gt;                    
                </return>
                <throws>
                    SQLException if the read position is located at an invalid
                      position or if there are no more values in the stream                    
                </throws>
            </javadoc>
            <method name="readInt" type="int" line="219">
                <declaration name="attrib" type="Integer" line="220"/>
                <scope line="221"/>
                <scope line="225"/>
            </method>
            <javadoc line="230">
                Retrieves the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object
                  as a &lt;code&gt;long&lt;/code&gt; in the Java programming language.
                  &lt;P&gt;
                  This method does not perform type-safe checking to determine if the
                  returned type is the expected type; this responsibility is delegated
                  to the UDT mapping as defined by a &lt;code&gt;SQLData&lt;/code&gt; implementation.
                  &lt;P&gt;                
                <return>
                    the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object;
                      if the value is &lt;code&gt;SQL NULL&lt;/code&gt;, return &lt;code&gt;null&lt;/code&gt;                    
                </return>
                <throws>
                    SQLException if the read position is located at an invalid
                      position or if there are no more values in the stream                    
                </throws>
            </javadoc>
            <method name="readLong" type="long" line="243">
                <declaration name="attrib" type="Long" line="244"/>
                <scope line="245"/>
                <scope line="249"/>
            </method>
            <javadoc line="254">
                Retrieves the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object
                  as a &lt;code&gt;float&lt;/code&gt; in the Java programming language.
                  &lt;P&gt;
                  This method does not perform type-safe checking to determine if the
                  returned type is the expected type; this responsibility is delegated
                  to the UDT mapping as defined by a &lt;code&gt;SQLData&lt;/code&gt; implementation.
                  &lt;P&gt;                
                <return>
                    the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object;
                      if the value is &lt;code&gt;SQL NULL&lt;/code&gt;, return &lt;code&gt;null&lt;/code&gt;                    
                </return>
                <throws>
                    SQLException if the read position is located at an invalid
                      position or if there are no more values in the stream                    
                </throws>
            </javadoc>
            <method name="readFloat" type="float" line="267">
                <declaration name="attrib" type="Float" line="268"/>
                <scope line="269"/>
                <scope line="273"/>
            </method>
            <javadoc line="278">
                Retrieves the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object
                  as a &lt;code&gt;double&lt;/code&gt; in the Java programming language.
                  &lt;P&gt;
                  This method does not perform type-safe checking to determine if the
                  returned type is the expected type; this responsibility is delegated
                  to the UDT mapping as defined by a &lt;code&gt;SQLData&lt;/code&gt; implementation.
                  &lt;P&gt;                
                <return>
                    the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object;
                      if the value is &lt;code&gt;SQL NULL&lt;/code&gt;, return &lt;code&gt;null&lt;/code&gt;                    
                </return>
                <throws>
                    SQLException if the read position is located at an invalid
                      position or if there are no more values in the stream                    
                </throws>
            </javadoc>
            <method name="readDouble" type="double" line="291">
                <declaration name="attrib" type="Double" line="292"/>
                <scope line="293"/>
                <scope line="297"/>
            </method>
            <javadoc line="302">
                Retrieves the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object
                  as a &lt;code&gt;java.math.BigDecimal&lt;/code&gt;.
                  &lt;P&gt;
                  This method does not perform type-safe checking to determine if the
                  returned type is the expected type; this responsibility is delegated
                  to the UDT mapping as defined by a &lt;code&gt;SQLData&lt;/code&gt; implementation.
                  &lt;P&gt;                
                <return>
                    the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object;
                      if the value is &lt;code&gt;SQL NULL&lt;/code&gt;, return &lt;code&gt;null&lt;/code&gt;                    
                </return>
                <throws>
                    SQLException if the read position is located at an invalid
                      position or if there are no more values in the stream                    
                </throws>
            </javadoc>
            <method name="readBigDecimal" type="java.math.BigDecimal" line="315">
                <declaration name="attrib" type="java.math.BigDecimal" line="316"/>
                <scope line="317"/>
                <scope line="321"/>
            </method>
            <javadoc line="326">
                Retrieves the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object
                  as an array of bytes.
                  &lt;p&gt;
                  This method does not perform type-safe checking to determine if the
                  returned type is the expected type; this responsibility is delegated
                  to the UDT mapping as defined by a &lt;code&gt;SQLData&lt;/code&gt; implementation.
                  &lt;P&gt;                
                <return>
                    the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object;
                      if the value is &lt;code&gt;SQL NULL&lt;/code&gt;, return &lt;code&gt;null&lt;/code&gt;                    
                </return>
                <throws>
                    SQLException if the read position is located at an invalid
                      position or if there are no more values in the stream                    
                </throws>
            </javadoc>
            <method name="readBytes" type="byte[]" line="339">
                <declaration name="attrib" type="byte[]" line="340"/>
                <scope line="341"/>
                <scope line="345"/>
            </method>
            <javadoc line="350">
                Retrieves the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; as
                  a &lt;code&gt;java.sql.Date&lt;/code&gt; object.
                  &lt;P&gt;
                  This method does not perform type-safe checking to determine if the
                  returned type is the expected type; this responsibility is delegated
                  to the UDT mapping as defined by a &lt;code&gt;SQLData&lt;/code&gt; implementation.
                  &lt;P&gt;                
                <return>
                    the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object;
                      if the value is &lt;code&gt;SQL NULL&lt;/code&gt;, return &lt;code&gt;null&lt;/code&gt;                    
                </return>
                <throws>
                    SQLException if the read position is located at an invalid
                      position or if there are no more values in the stream                    
                </throws>
            </javadoc>
            <method name="readDate" type="java.sql.Date" line="363">
                <declaration name="attrib" type="java.sql.Date" line="364"/>
                <scope line="365"/>
                <scope line="369"/>
            </method>
            <javadoc line="374">
                Retrieves the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object as
                  a &lt;code&gt;java.sql.Time&lt;/code&gt; object.
                  &lt;P&gt;
                  This method does not perform type-safe checking to determine if the
                  returned type is the expected type as this responsibility is delegated
                  to the UDT mapping as implemented by a &lt;code&gt;SQLData&lt;/code&gt;
                  implementation.                
                <return>
                    the attribute; if the value is &lt;code&gt;SQL NULL&lt;/code&gt;, return
                      &lt;code&gt;null&lt;/code&gt;                    
                </return>
                <throws>
                    SQLException if the read position is located at an invalid
                      position; or if there are no further values in the stream.                    
                </throws>
            </javadoc>
            <method name="readTime" type="java.sql.Time" line="387">
                <declaration name="attrib" type="java.sql.Time" line="388"/>
                <scope line="389"/>
                <scope line="393"/>
            </method>
            <javadoc line="398">
                Retrieves the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object as
                  a &lt;code&gt;java.sql.Timestamp&lt;/code&gt; object.                
                <return>
                    the attribute; if the value is &lt;code&gt;SQL NULL&lt;/code&gt;, return
                      &lt;code&gt;null&lt;/code&gt;                    
                </return>
                <throws>
                    SQLException if the read position is located at an invalid
                      position; or if there are no further values in the stream.                    
                </throws>
            </javadoc>
            <method name="readTimestamp" type="java.sql.Timestamp" line="406">
                <declaration name="attrib" type="java.sql.Timestamp" line="407"/>
                <scope line="408"/>
                <scope line="412"/>
            </method>
            <javadoc line="417">
                Retrieves the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object
                  as a stream of Unicode characters.
                  &lt;P&gt;
                  This method does not perform type-safe checking to determine if the
                  returned type is the expected type as this responsibility is delegated
                  to the UDT mapping as implemented by a &lt;code&gt;SQLData&lt;/code&gt;
                  implementation.                
                <return>
                    the attribute; if the value is &lt;code&gt;SQL NULL&lt;/code&gt;, return &lt;code&gt;null&lt;/code&gt;                    
                </return>
                <throws>
                    SQLException if the read position is located at an invalid
                      position; or if there are no further values in the stream.                    
                </throws>
            </javadoc>
            <method name="readCharacterStream" type="java.io.Reader" line="429">
                <declaration name="attrib" type="java.io.Reader" line="430"/>
                <scope line="431"/>
                <scope line="435"/>
            </method>
            <javadoc line="440">
                Returns the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object
                  as a stream of ASCII characters.
                  &lt;P&gt;
                  This method does not perform type-safe checking to determine if the
                  returned type is the expected type as this responsibility is delegated
                  to the UDT mapping as implemented by a &lt;code&gt;SQLData&lt;/code&gt;
                  implementation.                
                <return>
                    the attribute; if the value is &lt;code&gt;SQL NULL&lt;/code&gt;,
                      return &lt;code&gt;null&lt;/code&gt;                    
                </return>
                <throws>
                    SQLException if the read position is located at an invalid
                      position; or if there are no further values in the stream.                    
                </throws>
            </javadoc>
            <method name="readAsciiStream" type="java.io.InputStream" line="453">
                <declaration name="attrib" type="java.io.InputStream" line="454"/>
                <scope line="455"/>
                <scope line="459"/>
            </method>
            <javadoc line="464">
                Returns the next attribute in this &lt;code&gt;SQLInputImpl&lt;/code&gt; object
                  as a stream of uninterpreted bytes.
                  &lt;P&gt;
                  This method does not perform type-safe checking to determine if the
                  returned type is the expected type as this responsibility is delegated
                  to the UDT mapping as implemented by a &lt;code&gt;SQLData&lt;/code&gt;
                  implementation.                
                <return>
                    the attribute; if the value is &lt;code&gt;SQL NULL&lt;/code&gt;, return
                      &lt;code&gt;null&lt;/code&gt;                    
                </return>
                <throws>
                    SQLException if the read position is located at an invalid
                      position; or if there are no further values in the stream.                    
                </throws>
            </javadoc>
            <method name="readBinaryStream" type="java.io.InputStream" line="477">
                <declaration name="attrib" type="java.io.InputStream" line="478"/>
                <scope line="479"/>
                <scope line="483"/>
            </method>
            <javadoc line="488">
                Retrieves the value at the head of this &lt;code&gt;SQLInputImpl&lt;/code&gt;
                  object as an &lt;code&gt;Object&lt;/code&gt; in the Java programming language.  The
                  actual type of the object returned is determined by the default
                  mapping of SQL types to types in the Java programming language unless
                  there is a custom mapping, in which case the type of the object
                  returned is determined by this stream&apos;s type map.
                  &lt;P&gt;
                  The JDBC technology-enabled driver registers a type map with the stream
                  before passing the stream to the application.
                  &lt;P&gt;
                  When the datum at the head of the stream is an SQL &lt;code&gt;NULL&lt;/code&gt;,
                  this method returns &lt;code&gt;null&lt;/code&gt;.  If the datum is an SQL
                  structured or distinct type with a custom mapping, this method
                  determines the SQL type of the datum at the head of the stream,
                  constructs an object of the appropriate class, and calls the method
                  &lt;code&gt;SQLData.readSQL&lt;/code&gt; on that object. The &lt;code&gt;readSQL&lt;/code&gt;
                  method then calls the appropriate &lt;code&gt;SQLInputImpl.readXXX&lt;/code&gt;
                  methods to retrieve the attribute values from the stream.                
                <return>
                    the value at the head of the stream as an &lt;code&gt;Object&lt;/code&gt;
                      in the Java programming language; &lt;code&gt;null&lt;/code&gt; if
                      the value is SQL &lt;code&gt;NULL&lt;/code&gt;                    
                </return>
                <throws>
                    SQLException if the read position is located at an invalid
                      position; or if there are no further values in the stream.                    
                </throws>
            </javadoc>
            <method name="readObject" type="Object" line="513">
                <declaration name="attrib" type="Object" line="514"/>
                <scope line="515"/>
                <scope line="519">
                    <scope line="521">
                        <declaration name="s" type="Struct" line="522"/>
                        <declaration name="c" type="Class" line="523"/>
                        <scope line="524">
                            <declaration name="obj" type="SQLData" line="525"/>
                            <scope line="526"/>
                            <scope line="529"/>
                            <scope line="532"/>
                            <declaration name="attribs" type="Object" line="535"/>
                            <declaration name="sqlInput" type="SQLInputImpl" line="536"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="544">
                Retrieves the value at the head of this &lt;code&gt;SQLInputImpl&lt;/code&gt; object
                  as a &lt;code&gt;Ref&lt;/code&gt; object in the Java programming language.                
                <return>
                    a &lt;code&gt;Ref&lt;/code&gt; object representing the SQL
                      &lt;code&gt;REF&lt;/code&gt; value at the head of the stream; if the value
                      is &lt;code&gt;SQL NULL&lt;/code&gt; return &lt;code&gt;null&lt;/code&gt;                    
                </return>
                <throws>
                    SQLException if the read position is located at an invalid
                      position; or if there are no further values in the stream.                    
                </throws>
            </javadoc>
            <method name="readRef" type="Ref" line="553">
                <declaration name="attrib" type="Ref" line="554"/>
                <scope line="555"/>
                <scope line="559"/>
            </method>
            <javadoc line="564">
                Retrieves the &lt;code&gt;BLOB&lt;/code&gt; value at the head of this
                  &lt;code&gt;SQLInputImpl&lt;/code&gt; object as a &lt;code&gt;Blob&lt;/code&gt; object
                  in the Java programming language.
                  &lt;P&gt;
                  This method does not perform type-safe checking to determine if the
                  returned type is the expected type as this responsibility is delegated
                  to the UDT mapping as implemented by a &lt;code&gt;SQLData&lt;/code&gt;
                  implementation.                
                <return>
                    a &lt;code&gt;Blob&lt;/code&gt; object representing the SQL
                      &lt;code&gt;BLOB&lt;/code&gt; value at the head of this stream;
                      if the value is &lt;code&gt;SQL NULL&lt;/code&gt;, return
                      &lt;code&gt;null&lt;/code&gt;                    
                </return>
                <throws>
                    SQLException if the read position is located at an invalid
                      position; or if there are no further values in the stream.                    
                </throws>
            </javadoc>
            <method name="readBlob" type="Blob" line="580">
                <declaration name="attrib" type="Blob" line="581"/>
                <scope line="582"/>
                <scope line="586"/>
            </method>
            <javadoc line="591">
                Retrieves the &lt;code&gt;CLOB&lt;/code&gt; value at the head of this
                  &lt;code&gt;SQLInputImpl&lt;/code&gt; object as a &lt;code&gt;Clob&lt;/code&gt; object
                  in the Java programming language.
                  &lt;P&gt;
                  This method does not perform type-safe checking to determine if the
                  returned type is the expected type as this responsibility is delegated
                  to the UDT mapping as implemented by a &lt;code&gt;SQLData&lt;/code&gt;
                  implementation.                
                <return>
                    a &lt;code&gt;Clob&lt;/code&gt; object representing the SQL
                      &lt;code&gt;CLOB&lt;/code&gt; value at the head of the stream;
                      if the value is &lt;code&gt;SQL NULL&lt;/code&gt;, return
                      &lt;code&gt;null&lt;/code&gt;                    
                </return>
                <throws>
                    SQLException if the read position is located at an invalid
                      position; or if there are no further values in the stream.                    
                </throws>
            </javadoc>
            <method name="readClob" type="Clob" line="607">
                <declaration name="attrib" type="Clob" line="608"/>
                <scope line="609"/>
                <scope line="613"/>
            </method>
            <javadoc line="618">
                Reads an SQL &lt;code&gt;ARRAY&lt;/code&gt; value from the stream and
                  returns it as an &lt;code&gt;Array&lt;/code&gt; object in the Java programming
                  language.
                  &lt;P&gt;
                  This method does not perform type-safe checking to determine if the
                  returned type is the expected type as this responsibility is delegated
                  to the UDT mapping as implemented by a &lt;code&gt;SQLData&lt;/code&gt;
                  implementation.                
                <return>
                    an &lt;code&gt;Array&lt;/code&gt; object representing the SQL
                      &lt;code&gt;ARRAY&lt;/code&gt; value at the head of the stream; 
                      if the value is &lt;code&gt;SQL NULL&lt;/code&gt;, return
                      &lt;code&gt;null&lt;/code&gt;                    
                </return>
                <throws>
                    SQLException if the read position is located at an invalid
                      position; or if there are no further values in the stream.                    
                </throws>
            </javadoc>
            <method name="readArray" type="Array" line="634">
                <declaration name="attrib" type="Array" line="635"/>
                <scope line="636"/>
                <scope line="640"/>
            </method>
            <javadoc line="645">
                Ascertains whether the last value read from this
                  &lt;code&gt;SQLInputImpl&lt;/code&gt; object was &lt;code&gt;null&lt;/code&gt;.                
                <return>
                    &lt;code&gt;true&lt;/code&gt; if the SQL value read most recently was
                      &lt;code&gt;null&lt;/code&gt;; otherwise, &lt;code&gt;false&lt;/code&gt;; by default it
                      will return false                    
                </return>
                <throws>
                    SQLException if an error occurs determining the last value
                      read was a &lt;code&gt;null&lt;/code&gt; value or not;                    
                </throws>
            </javadoc>
            <method name="wasNull" type="boolean" line="654"/>
            <javadoc line="657">
                Reads an SQL &lt;code&gt;DATALINK&lt;/code&gt; value from the stream and
                  returns it as an &lt;code&gt;URL&lt;/code&gt; object in the Java programming
                  language.
                  &lt;P&gt;
                  This method does not perform type-safe checking to determine if the
                  returned type is the expected type as this responsibility is delegated
                  to the UDT mapping as implemented by a &lt;code&gt;SQLData&lt;/code&gt;
                  implementation.                
                <return>
                    an &lt;code&gt;URL&lt;/code&gt; object representing the SQL
                      &lt;code&gt;DATALINK&lt;/code&gt; value at the head of the stream; 
                      if the value is &lt;code&gt;SQL NULL&lt;/code&gt;, return
                      &lt;code&gt;null&lt;/code&gt;                    
                </return>
                <throws>
                    SQLException if the read position is located at an invalid
                      position; or if there are no further values in the stream.                    
                </throws>
            </javadoc>
            <method name="readURL" type="java.net.URL" line="673"/>
            <javadoc line="676">
                Reads an SQL &lt;code&gt;NCLOB&lt;/code&gt; value from the stream and returns it as a
                  &lt;code&gt;Clob&lt;/code&gt; object in the Java programming language.                
                <return>
                    a &lt;code&gt;NClob&lt;/code&gt; object representing data of the SQL &lt;code&gt;NCLOB&lt;/code&gt; value
                      at the head of the stream; &lt;code&gt;null&lt;/code&gt; if the value read is
                      SQL &lt;code&gt;NULL&lt;/code&gt;                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
            </javadoc>
            <method name="readNClob" type="NClob" line="684"/>
            <javadoc line="687">
                Reads the next attribute in the stream and returns it as a &lt;code&gt;String&lt;/code&gt;
                  in the Java programming language. It is intended for use when
                  accessing  &lt;code&gt;NCHAR&lt;/code&gt;,&lt;code&gt;NVARCHAR&lt;/code&gt;
                  and &lt;code&gt;LONGNVARCHAR&lt;/code&gt; columns.                
                <return>
                    the attribute; if the value is SQL &lt;code&gt;NULL&lt;/code&gt;, returns &lt;code&gt;null&lt;/code&gt;                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
            </javadoc>
            <method name="readNString" type="String" line="695"/>
            <javadoc line="698">
                Reads an SQL &lt;code&gt;XML&lt;/code&gt; value from the stream and returns it as a
                  &lt;code&gt;SQLXML&lt;/code&gt; object in the Java programming language.                
                <return>
                    a &lt;code&gt;SQLXML&lt;/code&gt; object representing data of the SQL &lt;code&gt;XML&lt;/code&gt; value
                      at the head of the stream; &lt;code&gt;null&lt;/code&gt; if the value read is
                      SQL &lt;code&gt;NULL&lt;/code&gt;                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
            </javadoc>
            <method name="readSQLXML" type="SQLXML" line="706"/>
            <javadoc line="709">
                Reads an SQL &lt;code&gt;ROWID&lt;/code&gt; value from the stream and returns it as a
                  &lt;code&gt;RowId&lt;/code&gt; object in the Java programming language.                
                <return>
                    a &lt;code&gt;RowId&lt;/code&gt; object representing data of the SQL &lt;code&gt;ROWID&lt;/code&gt; value
                      at the head of the stream; &lt;code&gt;null&lt;/code&gt; if the value read is
                      SQL &lt;code&gt;NULL&lt;/code&gt;                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
            </javadoc>
            <method name="readRowId" type="RowId" line="717"/>
        </class>
    </source>