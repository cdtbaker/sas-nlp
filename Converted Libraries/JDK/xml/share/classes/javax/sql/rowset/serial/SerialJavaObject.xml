<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.sql.rowset.serial">
        <import package="java.io"/>
        <import package="java.lang.reflect"/>
        <import package="javax.sql.rowset.RowSetWarning"/>
        <class name="SerialJavaObject" line="5">
            <implements interface="Serializable"/>
            <implements interface="Cloneable"/>
            <javadoc line="5">
                A serializable mapping in the Java programming language of an SQL
                  &lt;code&gt;JAVA_OBJECT&lt;/code&gt; value. Assuming the Java object
                  implements the &lt;code&gt;Serializable&lt;/code&gt; interface, this class simply wraps the
                  serialization process.
                  &lt;P&gt;
                  If however, the serialization is not possible because
                  the Java object is not immediately serializable, this class will
                  attempt to serialize all non-static members to permit the object
                  state to be serialized.
                  Static or transient fields cannot be serialized; an attempt to serialize
                  them will result in a &lt;code&gt;SerialException&lt;/code&gt; object being thrown.                
                <author>
                    Jonathan Bruce                    
                </author>
            </javadoc>
            <declaration name="obj" type="Object" line="20"/>
            <javadoc line="20">
                Placeholder for object to be serialized.                
            </javadoc>
            <declaration name="fields" type="Field[]" line="24"/>
            <javadoc line="24">
                Placeholder for all fields in the &lt;code&gt;JavaObject&lt;/code&gt; being serialized.                
            </javadoc>
            <javadoc line="28">
                Constructor for &lt;code&gt;SerialJavaObject&lt;/code&gt; helper class.
                  &lt;p&gt;                
                <param>
                    obj the Java <code>Object</code> to be serialized                    
                </param>
                <throws>
                    SerialException if the object is found not to be serializable                    
                </throws>
            </javadoc>
            <method name="SerialJavaObject" type="constructor" line="34">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <declaration name="c" type="Class&lt;?&gt;" line="35"/>
                <scope line="36"/>
                <declaration name="anyStaticFields" type="boolean" line="39"/>
                <scope line="41">
                    <scope line="42"/>
                </scope>
                <scope line="46"/>
            </method>
            <javadoc line="51">
                Returns an &lt;code&gt;Object&lt;/code&gt; that is a copy of this &lt;code&gt;SerialJavaObject&lt;/code&gt;
                  object.                
                <return>
                    a copy of this <code>SerialJavaObject</code> object as an
                      <code>Object</code> in the Java programming language                    
                </return>
                <throws>
                    SerialException if the instance is corrupt                    
                </throws>
            </javadoc>
            <method name="getObject" type="Object" line="58"/>
            <javadoc line="61">
                Returns an array of &lt;code&gt;Field&lt;/code&gt; objects that contains each
                  field of the object that this helper class is serializing.                
                <return>
                    an array of <code>Field</code> objects                    
                </return>
                <throws>
                    SerialException if an error is encountered accessing
                      the serialized object                    
                </throws>
            </javadoc>
            <method name="getFields" type="Field[]" line="68">
                <scope line="69">
                    <declaration name="c" type="Class&lt;?&gt;" line="70"/>
                </scope>
                <scope line="73"/>
            </method>
            <declaration name="serialVersionUID" type="long" line="77"/>
            <javadoc line="77">
                The identifier that assists in the serialization of this
                  &lt;code&gt;SerialJavaObject&lt;/code&gt; object.                
            </javadoc>
            <declaration name="chain" type="java.util.Vector" line="82"/>
            <javadoc line="82">
                A container for the warnings issued on this &lt;code&gt;SerialJavaObject&lt;/code&gt;
                  object. When there are multiple warnings, each warning is chained to the
                  previous warning.                
            </javadoc>
            <javadoc line="88">
                Registers the given warning.                
            </javadoc>
            <method name="setWarning" type="void" line="91">
                <params>
                    <param name="e" type="RowSetWarning"/>
                </params>
                <scope line="92"/>
            </method>
        </class>
    </source>