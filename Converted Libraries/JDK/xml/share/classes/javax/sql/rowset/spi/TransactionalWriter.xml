<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.sql.rowset.spi">
        <import package="java.sql.SQLException"/>
        <import package="java.io.Reader"/>
        <import package="javax.sql.RowSetWriter"/>
        <import package="javax.sql.rowset"/>
        <import package="java.sql.Savepoint"/>
        <interface name="TransactionalWriter">
            <implements interface="RowSetWriter"/>
            <javadoc line="7">
                A specialized interface that facilitates an extension of the standard
                  &lt;code&gt;SyncProvider&lt;/code&gt; abstract class so that it has finer grained
                  transaction control.
                  &lt;p&gt;
                  If one or more disconnected &lt;code&gt;RowSet&lt;/code&gt; objects are particating
                  in a global transaction, they may wish to coordinate their synchronization
                  commits to preserve data integrity and reduce the number of
                  sychronization exceptions. If this is the case, an application should set
                  the &lt;code&gt;CachedRowSet&lt;/code&gt; constant &lt;code&gt;COMMIT_ON_ACCEPT_CHANGES&lt;/code&gt;
                  to &lt;code&gt;false&lt;/code&gt; and use the &lt;code&gt;commit&lt;/code&gt; and &lt;code&gt;rollback&lt;/code&gt;
                  methods defined in this interface to manage transaction boundaries.                
            </javadoc>
            <method name="commit" type="void" line="21"/>
            <javadoc line="21">
                Makes permanent all changes that have been performed by the
                  &lt;code&gt;acceptChanges&lt;/code&gt; method since the last call to either the
                  &lt;code&gt;commit&lt;/code&gt; or &lt;code&gt;rollback&lt;/code&gt; methods.
                  This method should be used only when auto-commit mode has been disabled.                
                <throws>
                    SQLException  if a database access error occurs or the
                      &lt;code&gt;Connection&lt;/code&gt; object within this &lt;code&gt;CachedRowSet&lt;/code&gt;
                      object is in auto-commit mode                    
                </throws>
            </javadoc>
            <method name="rollback" type="void" line="31"/>
            <javadoc line="31">
                Undoes all changes made in the current transaction. This method should be
                  used only when auto-commit mode has been disabled.                
                <throws>
                    SQLException if a database access error occurs or the &lt;code&gt;Connection&lt;/code&gt;
                      object within this &lt;code&gt;CachedRowSet&lt;/code&gt; object is in auto-commit mode                    
                </throws>
            </javadoc>
            <method name="rollback" type="void" line="38"/>
            <javadoc line="38">
                Undoes all changes made in the current transaction made prior to the given
                  &lt;code&gt;Savepoint&lt;/code&gt; object.  This method should be used only when auto-commit
                  mode has been disabled.                
                <param>
                    s a &lt;code&gt;Savepoint&lt;/code&gt; object marking a savepoint in the current
                      transaction.  All changes made before &lt;i&gt;s&lt;/i&gt; was set will be undone.
                      All changes made after &lt;i&gt;s&lt;/i&gt; was set will be made permanent.                    
                </param>
                <throws>
                    SQLException if a database access error occurs or the &lt;code&gt;Connection&lt;/code&gt;
                      object within this &lt;code&gt;CachedRowSet&lt;/code&gt; object is in auto-commit mode                    
                </throws>
            </javadoc>
        </interface>
    </source>