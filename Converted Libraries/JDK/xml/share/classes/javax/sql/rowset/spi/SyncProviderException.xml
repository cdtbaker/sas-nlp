<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.sql.rowset.spi">
        <import package="java.sql.SQLException"/>
        <import package="javax.sql.rowset"/>
        <class name="SyncProviderException" line="4">
            <extends class="java.sql.SQLException"/>
            <javadoc line="4">
                Indicates an error with the &lt;code&gt;SyncProvider&lt;/code&gt; mechanism. This exception
                  is created by a &lt;code&gt;SyncProvider&lt;/code&gt; abstract class extension if it
                  encounters violations in reading from or writing to the originating data source.
                  &lt;P&gt;
                  If it is implemented to do so, the &lt;code&gt;SyncProvider&lt;/code&gt; object may also create a
                  &lt;code&gt;SyncResolver&lt;/code&gt; object and either initialize the &lt;code&gt;SyncProviderException&lt;/code&gt;
                  object with it at construction time or set it with the &lt;code&gt;SyncProvider&lt;/code&gt; object at
                  a later time.
                  &lt;P&gt;
                  The method &lt;code&gt;acceptChanges&lt;/code&gt; will throw this exception after the writer
                  has finished checking for conflicts and has found one or more conflicts. An
                  application may catch a &lt;code&gt;SyncProviderException&lt;/code&gt; object and call its
                  &lt;code&gt;getSyncResolver&lt;/code&gt; method to get its &lt;code&gt;SyncResolver&lt;/code&gt; object.
                  See the code fragment in the interface comment for
                  &lt;a href=&quot;SyncResolver.html&quot;&gt;&lt;code&gt;SyncResolver&lt;/code&gt;&lt;/a&gt; for an example.
                  This &lt;code&gt;SyncResolver&lt;/code&gt; object will mirror the &lt;code&gt;RowSet&lt;/code&gt;
                  object that generated the exception, except that it will contain only the values
                  from the data source that are in conflict.  All other values in the &lt;code&gt;SyncResolver&lt;/code&gt;
                  object will be &lt;code&gt;null&lt;/code&gt;.
                  &lt;P&gt;
                  The &lt;code&gt;SyncResolver&lt;/code&gt; object may be used to examine and resolve
                  each conflict in a row and then go to the next row with a conflict to
                  repeat the procedure.
                  &lt;P&gt;
                  A &lt;code&gt;SyncProviderException&lt;/code&gt; object may or may not contain a description of the
                  condition causing the exception.  The inherited method &lt;code&gt;getMessage&lt;/code&gt; may be
                  called to retrieve the description if there is one.                
                <author>
                    Jonathan Bruce                    
                </author>
                <see>
                    javax.sql.rowset.spi.SyncFactory                    
                </see>
                <see>
                    javax.sql.rowset.spi.SyncResolver                    
                </see>
                <see>
                    javax.sql.rowset.spi.SyncFactoryException                    
                </see>
            </javadoc>
            <declaration name="syncResolver" type="SyncResolver" line="38"/>
            <javadoc line="38">
                The instance of &lt;code&gt;javax.sql.rowset.spi.SyncResolver&lt;/code&gt; that
                  this &lt;code&gt;SyncProviderException&lt;/code&gt; object will return when its
                  &lt;code&gt;getSyncResolver&lt;/code&gt; method is called.                
            </javadoc>
            <javadoc line="44">
                Creates a new &lt;code&gt;SyncProviderException&lt;/code&gt; object without a detail message.                
            </javadoc>
            <method name="SyncProviderException" type="constructor" line="47"/>
            <javadoc line="50">
                Constructs a &lt;code&gt;SyncProviderException&lt;/code&gt; object with the specified
                  detail message.                
                <param>
                    msg the detail message                    
                </param>
            </javadoc>
            <method name="SyncProviderException" type="constructor" line="55">
                <params>
                    <param name="msg" type="String"/>
                </params>
            </method>
            <javadoc line="58">
                Constructs a &lt;code&gt;SyncProviderException&lt;/code&gt; object with the specified
                  &lt;code&gt;SyncResolver&lt;/code&gt; instance.                
                <param>
                    syncResolver the <code>SyncResolver</code> instance used to
                      to process the synchronization conflicts                    
                </param>
                <throws>
                    IllegalArgumentException if the <code>SyncResolver</code> object
                      is <code>null</code>.                    
                </throws>
            </javadoc>
            <method name="SyncProviderException" type="constructor" line="66">
                <params>
                    <param name="syncResolver" type="SyncResolver"/>
                </params>
                <scope line="67"/>
                <scope line="70"/>
            </method>
            <javadoc line="74">
                Retrieves the &lt;code&gt;SyncResolver&lt;/code&gt; object that has been set for
                  this &lt;code&gt;SyncProviderException&lt;/code&gt; object, or
                  if none has been set, an instance of the default &lt;code&gt;SyncResolver&lt;/code&gt;
                  implementation included in the reference implementation.
                  &lt;P&gt;
                  If a &lt;code&gt;SyncProviderException&lt;/code&gt; object is thrown, an application
                  may use this method to generate a &lt;code&gt;SyncResolver&lt;/code&gt; object
                  with which to resolve the conflict or conflicts that caused the
                  exception to be thrown.                
                <return>
                    the <code>SyncResolver</code> object set for this
                      <code>SyncProviderException</code> object or, if none has
                      been set, an instance of the default <code>SyncResolver</code>
                      implementation. In addition, the default <code>SyncResolver</code>
                      implementation is also returned if the <code>SyncResolver()</code> or
                      <code>SyncResolver(String)</code> constructors are used to instantiate
                      the <code>SyncResolver</code> instance.                    
                </return>
            </javadoc>
            <method name="getSyncResolver" type="SyncResolver" line="92">
                <scope line="93"/>
                <scope line="96">
                    <scope line="97"/>
                    <scope line="100"/>
                </scope>
            </method>
            <javadoc line="105">
                Sets the &lt;code&gt;SyncResolver&lt;/code&gt; object for this
                  &lt;code&gt;SyncProviderException&lt;/code&gt; object to the one supplied.
                  If the argument supplied is &lt;code&gt;null&lt;/code&gt;, a call to the method
                  &lt;code&gt;getSyncResolver&lt;/code&gt; will return the default reference
                  implementation of the &lt;code&gt;SyncResolver&lt;/code&gt; interface.                
                <param>
                    syncResolver the <code>SyncResolver</code> object to be set;
                      cannot be <code>null</code>                    
                </param>
                <throws>
                    IllegalArgumentException if the <code>SyncResolver</code> object
                      is <code>null</code>.                    
                </throws>
                <see>
                    #getSyncResolver                    
                </see>
            </javadoc>
            <method name="setSyncResolver" type="void" line="117">
                <params>
                    <param name="syncResolver" type="SyncResolver"/>
                </params>
                <scope line="118"/>
                <scope line="121"/>
            </method>
            <declaration name="serialVersionUID" type="long" line="125"/>
        </class>
    </source>