<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.sql.rowset.serial">
        <import package="java.sql"/>
        <import package="javax.sql"/>
        <import package="java.io"/>
        <import package="java.lang.String"/>
        <import package="java.math"/>
        <import package="java.util.Map"/>
        <import package="java.util.Vector"/>
        <class name="SQLOutputImpl" line="9">
            <implements interface="SQLOutput"/>
            <javadoc line="9">
                The output stream for writing the attributes of a
                  custom-mapped user-defined type (UDT) back to the database.
                  The driver uses this interface internally, and its
                  methods are never directly invoked by an application programmer.
                  &lt;p&gt;
                  When an application calls the
                  method &lt;code&gt;PreparedStatement.setObject&lt;/code&gt;, the driver
                  checks to see whether the value to be written is a UDT with
                  a custom mapping.  If it is, there will be an entry in a
                  type map containing the &lt;code&gt;Class&lt;/code&gt; object for the
                  class that implements &lt;code&gt;SQLData&lt;/code&gt; for this UDT.
                  If the value to be written is an instance of &lt;code&gt;SQLData&lt;/code&gt;,
                  the driver will create an instance of &lt;code&gt;SQLOutputImpl&lt;/code&gt;
                  and pass it to the method &lt;code&gt;SQLData.writeSQL&lt;/code&gt;.
                  The method &lt;code&gt;writeSQL&lt;/code&gt; in turn calls the
                  appropriate &lt;code&gt;SQLOutputImpl.writeXXX&lt;/code&gt; methods
                  to write data from the &lt;code&gt;SQLData&lt;/code&gt; object to
                  the &lt;code&gt;SQLOutputImpl&lt;/code&gt; output stream as the
                  representation of an SQL user-defined type.                
            </javadoc>
            <declaration name="attribs" type="Vector" line="31"/>
            <javadoc line="31">
                A reference to an existing vector that
                  contains the attributes of a &lt;code&gt;Struct&lt;/code&gt; object.                
            </javadoc>
            <declaration name="map" type="Map" line="36"/>
            <javadoc line="36">
                The type map the driver supplies to a newly created
                  &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.  This type map
                  indicates the &lt;code&gt;SQLData&lt;/code&gt; class whose
                  &lt;code&gt;writeSQL&lt;/code&gt; method will be called.  This
                  method will in turn call the appropriate
                  &lt;code&gt;SQLOutputImpl&lt;/code&gt; writer methods.                
            </javadoc>
            <javadoc line="45">
                Creates a new &lt;code&gt;SQLOutputImpl&lt;/code&gt; object
                  initialized with the given vector of attributes and
                  type map.  The driver will use the type map to determine
                  which &lt;code&gt;SQLData.writeSQL&lt;/code&gt; method to invoke.
                  This method will then call the appropriate
                  &lt;code&gt;SQLOutputImpl&lt;/code&gt; writer methods in order and
                  thereby write the attributes to the new output stream.                
                <param>
                    attributes a &lt;code&gt;Vector&lt;/code&gt; object containing the attributes of
                      the UDT to be mapped to one or more objects in the Java
                      programming language                    
                </param>
                <param>
                    map a &lt;code&gt;java.util.Map&lt;/code&gt; object containing zero or
                      more entries, with each entry consisting of 1) a &lt;code&gt;String&lt;/code&gt;
                      giving the fully qualified name of a UDT and 2) the
                      &lt;code&gt;Class&lt;/code&gt; object for the &lt;code&gt;SQLData&lt;/code&gt; implementation
                      that defines how the UDT is to be mapped                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;attributes&lt;/code&gt; or the &lt;code&gt;map&lt;/code&gt;
                      is a &lt;code&gt;null&lt;/code&gt; value                    
                </throws>
            </javadoc>
            <method name="SQLOutputImpl" type="constructor" line="64">
                <params>
                    <param name="attributes" type="Vector&lt;?&gt;"/>
                    <param name="map" type="Map&lt;String,?&gt;"/>
                </params>
                <scope line="65"/>
            </method>
            <javadoc line="71">
                Writes a &lt;code&gt;String&lt;/code&gt; in the Java programming language
                  to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts
                  it to an SQL &lt;code&gt;CHAR&lt;/code&gt;, &lt;code&gt;VARCHAR&lt;/code&gt;, or
                  &lt;code&gt;LONGVARCHAR&lt;/code&gt; before returning it to the database.                
                <param>
                    x the value to pass to the database                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;SQLOutputImpl&lt;/code&gt; object is in
                      use by a &lt;code&gt;SQLData&lt;/code&gt; object attempting to write the attribute
                      values of a UDT to the database.                    
                </throws>
            </javadoc>
            <method name="writeString" type="void" line="81">
                <params>
                    <param name="x" type="String"/>
                </params>
            </method>
            <javadoc line="84">
                Writes a &lt;code&gt;boolean&lt;/code&gt; in the Java programming language
                  to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts
                  it to an SQL &lt;code&gt;BIT&lt;/code&gt; before returning it to the database.                
                <param>
                    x the value to pass to the database                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;SQLOutputImpl&lt;/code&gt; object is in
                      use by a &lt;code&gt;SQLData&lt;/code&gt; object attempting to write the attribute
                      values of a UDT to the database.                    
                </throws>
            </javadoc>
            <method name="writeBoolean" type="void" line="93">
                <params>
                    <param name="x" type="boolean"/>
                </params>
            </method>
            <javadoc line="96">
                Writes a &lt;code&gt;byte&lt;/code&gt; in the Java programming language
                  to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts
                  it to an SQL &lt;code&gt;BIT&lt;/code&gt; before returning it to the database.                
                <param>
                    x the value to pass to the database                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;SQLOutputImpl&lt;/code&gt; object is in
                      use by a &lt;code&gt;SQLData&lt;/code&gt; object attempting to write the attribute
                      values of a UDT to the database.                    
                </throws>
            </javadoc>
            <method name="writeByte" type="void" line="105">
                <params>
                    <param name="x" type="byte"/>
                </params>
            </method>
            <javadoc line="108">
                Writes a &lt;code&gt;short&lt;/code&gt; in the Java programming language
                  to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts
                  it to an SQL &lt;code&gt;SMALLINT&lt;/code&gt; before returning it to the database.                
                <param>
                    x the value to pass to the database                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;SQLOutputImpl&lt;/code&gt; object is in
                      use by a &lt;code&gt;SQLData&lt;/code&gt; object attempting to write the attribute
                      values of a UDT to the database.                    
                </throws>
            </javadoc>
            <method name="writeShort" type="void" line="117">
                <params>
                    <param name="x" type="short"/>
                </params>
            </method>
            <javadoc line="120">
                Writes an &lt;code&gt;int&lt;/code&gt; in the Java programming language
                  to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts
                  it to an SQL &lt;code&gt;INTEGER&lt;/code&gt; before returning it to the database.                
                <param>
                    x the value to pass to the database                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;SQLOutputImpl&lt;/code&gt; object is in
                      use by a &lt;code&gt;SQLData&lt;/code&gt; object attempting to write the attribute
                      values of a UDT to the database.                    
                </throws>
            </javadoc>
            <method name="writeInt" type="void" line="129">
                <params>
                    <param name="x" type="int"/>
                </params>
            </method>
            <javadoc line="132">
                Writes a &lt;code&gt;long&lt;/code&gt; in the Java programming language
                  to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts
                  it to an SQL &lt;code&gt;BIGINT&lt;/code&gt; before returning it to the database.                
                <param>
                    x the value to pass to the database                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;SQLOutputImpl&lt;/code&gt; object is in
                      use by a &lt;code&gt;SQLData&lt;/code&gt; object attempting to write the attribute
                      values of a UDT to the database.                    
                </throws>
            </javadoc>
            <method name="writeLong" type="void" line="141">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <javadoc line="144">
                Writes a &lt;code&gt;float&lt;/code&gt; in the Java programming language
                  to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts
                  it to an SQL &lt;code&gt;REAL&lt;/code&gt; before returning it to the database.                
                <param>
                    x the value to pass to the database                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;SQLOutputImpl&lt;/code&gt; object is in
                      use by a &lt;code&gt;SQLData&lt;/code&gt; object attempting to write the attribute
                      values of a UDT to the database.                    
                </throws>
            </javadoc>
            <method name="writeFloat" type="void" line="153">
                <params>
                    <param name="x" type="float"/>
                </params>
            </method>
            <javadoc line="156">
                Writes a &lt;code&gt;double&lt;/code&gt; in the Java programming language
                  to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts
                  it to an SQL &lt;code&gt;DOUBLE&lt;/code&gt; before returning it to the database.                
                <param>
                    x the value to pass to the database                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;SQLOutputImpl&lt;/code&gt; object is in
                      use by a &lt;code&gt;SQLData&lt;/code&gt; object attempting to write the attribute
                      values of a UDT to the database.                    
                </throws>
            </javadoc>
            <method name="writeDouble" type="void" line="165">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="168">
                Writes a &lt;code&gt;java.math.BigDecimal&lt;/code&gt; object in the Java programming
                  language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts
                  it to an SQL &lt;code&gt;NUMERIC&lt;/code&gt; before returning it to the database.                
                <param>
                    x the value to pass to the database                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;SQLOutputImpl&lt;/code&gt; object is in
                      use by a &lt;code&gt;SQLData&lt;/code&gt; object attempting to write the attribute
                      values of a UDT to the database.                    
                </throws>
            </javadoc>
            <method name="writeBigDecimal" type="void" line="177">
                <params>
                    <param name="x" type="java.math.BigDecimal"/>
                </params>
            </method>
            <javadoc line="180">
                Writes an array of &lt;code&gt;bytes&lt;/code&gt; in the Java programming language
                  to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts
                  it to an SQL &lt;code&gt;VARBINARY&lt;/code&gt; or &lt;code&gt;LONGVARBINARY&lt;/code&gt;
                  before returning it to the database.                
                <param>
                    x the value to pass to the database                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;SQLOutputImpl&lt;/code&gt; object is in
                      use by a &lt;code&gt;SQLData&lt;/code&gt; object attempting to write the attribute
                      values of a UDT to the database.                    
                </throws>
            </javadoc>
            <method name="writeBytes" type="void" line="190">
                <params>
                    <param name="x" type="byte[]"/>
                </params>
            </method>
            <javadoc line="193">
                Writes a &lt;code&gt;java.sql.Date&lt;/code&gt; object in the Java programming
                  language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts
                  it to an SQL &lt;code&gt;DATE&lt;/code&gt; before returning it to the database.                
                <param>
                    x the value to pass to the database                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;SQLOutputImpl&lt;/code&gt; object is in
                      use by a &lt;code&gt;SQLData&lt;/code&gt; object attempting to write the attribute
                      values of a UDT to the database.                    
                </throws>
            </javadoc>
            <method name="writeDate" type="void" line="202">
                <params>
                    <param name="x" type="java.sql.Date"/>
                </params>
            </method>
            <javadoc line="205">
                Writes a &lt;code&gt;java.sql.Time&lt;/code&gt; object in the Java programming
                  language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts
                  it to an SQL &lt;code&gt;TIME&lt;/code&gt; before returning it to the database.                
                <param>
                    x the value to pass to the database                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;SQLOutputImpl&lt;/code&gt; object is in
                      use by a &lt;code&gt;SQLData&lt;/code&gt; object attempting to write the attribute
                      values of a UDT to the database.                    
                </throws>
            </javadoc>
            <method name="writeTime" type="void" line="214">
                <params>
                    <param name="x" type="java.sql.Time"/>
                </params>
            </method>
            <javadoc line="217">
                Writes a &lt;code&gt;java.sql.Timestamp&lt;/code&gt; object in the Java programming
                  language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver converts
                  it to an SQL &lt;code&gt;TIMESTAMP&lt;/code&gt; before returning it to the database.                
                <param>
                    x the value to pass to the database                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;SQLOutputImpl&lt;/code&gt; object is in
                      use by a &lt;code&gt;SQLData&lt;/code&gt; object attempting to write the attribute
                      values of a UDT to the database.                    
                </throws>
            </javadoc>
            <method name="writeTimestamp" type="void" line="226">
                <params>
                    <param name="x" type="java.sql.Timestamp"/>
                </params>
            </method>
            <javadoc line="229">
                Writes a stream of Unicode characters to this
                  &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver will do any necessary
                  conversion from Unicode to the database &lt;code&gt;CHAR&lt;/code&gt; format.                
                <param>
                    x the value to pass to the database                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;SQLOutputImpl&lt;/code&gt; object is in
                      use by a &lt;code&gt;SQLData&lt;/code&gt; object attempting to write the attribute
                      values of a UDT to the database.                    
                </throws>
            </javadoc>
            <method name="writeCharacterStream" type="void" line="238">
                <params>
                    <param name="x" type="java.io.Reader"/>
                </params>
                <declaration name="bufReader" type="BufferedReader" line="239"/>
                <scope line="240">
                    <declaration name="i" type="int" line="241"/>
                    <scope line="242">
                        <declaration name="ch" type="char" line="243"/>
                        <declaration name="strBuf" type="StringBuffer" line="244"/>
                        <declaration name="str" type="String" line="246"/>
                        <declaration name="strLine" type="String" line="247"/>
                    </scope>
                </scope>
                <scope line="251"/>
            </method>
            <javadoc line="254">
                Writes a stream of ASCII characters to this
                  &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The driver will do any necessary
                  conversion from ASCII to the database &lt;code&gt;CHAR&lt;/code&gt; format.                
                <param>
                    x the value to pass to the database                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;SQLOutputImpl&lt;/code&gt; object is in
                      use by a &lt;code&gt;SQLData&lt;/code&gt; object attempting to write the attribute
                      values of a UDT to the database.                    
                </throws>
            </javadoc>
            <method name="writeAsciiStream" type="void" line="263">
                <params>
                    <param name="x" type="java.io.InputStream"/>
                </params>
                <declaration name="bufReader" type="BufferedReader" line="264"/>
                <scope line="265">
                    <declaration name="i" type="int" line="266"/>
                    <scope line="267">
                        <declaration name="ch" type="char" line="268"/>
                        <declaration name="strBuf" type="StringBuffer" line="269"/>
                        <declaration name="str" type="String" line="271"/>
                        <declaration name="strLine" type="String" line="272"/>
                    </scope>
                </scope>
                <scope line="276"/>
            </method>
            <javadoc line="280">
                Writes a stream of uninterpreted bytes to this &lt;code&gt;SQLOutputImpl&lt;/code&gt;
                  object.                
                <param>
                    x the value to pass to the database                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;SQLOutputImpl&lt;/code&gt; object is in
                      use by a &lt;code&gt;SQLData&lt;/code&gt; object attempting to write the attribute
                      values of a UDT to the database.                    
                </throws>
            </javadoc>
            <method name="writeBinaryStream" type="void" line="288">
                <params>
                    <param name="x" type="java.io.InputStream"/>
                </params>
                <declaration name="bufReader" type="BufferedReader" line="289"/>
                <scope line="290">
                    <declaration name="i" type="int" line="291"/>
                    <scope line="292">
                        <declaration name="ch" type="char" line="293"/>
                        <declaration name="strBuf" type="StringBuffer" line="294"/>
                        <declaration name="str" type="String" line="296"/>
                        <declaration name="strLine" type="String" line="297"/>
                    </scope>
                </scope>
                <scope line="301"/>
            </method>
            <javadoc line="305">
                Writes to the stream the data contained in the given
                  &lt;code&gt;SQLData&lt;/code&gt; object.
                  When the &lt;code&gt;SQLData&lt;/code&gt; object is &lt;code&gt;null&lt;/code&gt;, this
                  method writes an SQL &lt;code&gt;NULL&lt;/code&gt; to the stream.
                  Otherwise, it calls the &lt;code&gt;SQLData.writeSQL&lt;/code&gt;
                  method of the given object, which
                  writes the object&apos;s attributes to the stream.
                  &lt;P&gt;
                  The implementation of the method &lt;code&gt;SQLData.writeSQ&lt;/code&gt;
                  calls the appropriate &lt;code&gt;SQLOutputImpl.writeXXX&lt;/code&gt; method(s)
                  for writing each of the object&apos;s attributes in order.
                  The attributes must be read from an &lt;code&gt;SQLInput&lt;/code&gt;
                  input stream and written to an &lt;code&gt;SQLOutputImpl&lt;/code&gt;
                  output stream in the same order in which they were
                  listed in the SQL definition of the user-defined type.                
                <param>
                    x the object representing data of an SQL structured or
                      distinct type                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;SQLOutputImpl&lt;/code&gt; object is in
                      use by a &lt;code&gt;SQLData&lt;/code&gt; object attempting to write the attribute
                      values of a UDT to the database.                    
                </throws>
            </javadoc>
            <method name="writeObject" type="void" line="327">
                <params>
                    <param name="x" type="SQLData"/>
                </params>
                <scope line="328"/>
            </method>
            <javadoc line="334">
                Writes a &lt;code&gt;Ref&lt;/code&gt; object in the Java programming language
                  to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.  The driver converts
                  it to a serializable &lt;code&gt;SerialRef&lt;/code&gt; SQL &lt;code&gt;REF&lt;/code&gt; value
                  before returning it to the database.                
                <param>
                    x an object representing an SQL &lt;code&gt;REF&lt;/code&gt; value                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;SQLOutputImpl&lt;/code&gt; object is in
                      use by a &lt;code&gt;SQLData&lt;/code&gt; object attempting to write the attribute
                      values of a UDT to the database.                    
                </throws>
            </javadoc>
            <method name="writeRef" type="void" line="344">
                <params>
                    <param name="x" type="Ref"/>
                </params>
                <scope line="345"/>
            </method>
            <javadoc line="351">
                Writes a &lt;code&gt;Blob&lt;/code&gt; object in the Java programming language
                  to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.  The driver converts
                  it to a serializable &lt;code&gt;SerialBlob&lt;/code&gt; SQL &lt;code&gt;BLOB&lt;/code&gt; value
                  before returning it to the database.                
                <param>
                    x an object representing an SQL &lt;code&gt;BLOB&lt;/code&gt; value                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;SQLOutputImpl&lt;/code&gt; object is in
                      use by a &lt;code&gt;SQLData&lt;/code&gt; object attempting to write the attribute
                      values of a UDT to the database.                    
                </throws>
            </javadoc>
            <method name="writeBlob" type="void" line="361">
                <params>
                    <param name="x" type="Blob"/>
                </params>
                <scope line="362"/>
            </method>
            <javadoc line="368">
                Writes a &lt;code&gt;Clob&lt;/code&gt; object in the Java programming language
                  to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object.  The driver converts
                  it to a serializable &lt;code&gt;SerialClob&lt;/code&gt; SQL &lt;code&gt;CLOB&lt;/code&gt; value
                  before returning it to the database.                
                <param>
                    x an object representing an SQL &lt;code&gt;CLOB&lt;/code&gt; value                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;SQLOutputImpl&lt;/code&gt; object is in
                      use by a &lt;code&gt;SQLData&lt;/code&gt; object attempting to write the attribute
                      values of a UDT to the database.                    
                </throws>
            </javadoc>
            <method name="writeClob" type="void" line="378">
                <params>
                    <param name="x" type="Clob"/>
                </params>
                <scope line="379"/>
            </method>
            <javadoc line="385">
                Writes a &lt;code&gt;Struct&lt;/code&gt; object in the Java
                  programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt;
                  object. The driver converts this value to an SQL structured type
                  before returning it to the database.
                  &lt;P&gt;
                  This method should be used when an SQL structured type has been
                  mapped to a &lt;code&gt;Struct&lt;/code&gt; object in the Java programming
                  language (the standard mapping).  The method
                  &lt;code&gt;writeObject&lt;/code&gt; should be used if an SQL structured type
                  has been custom mapped to a class in the Java programming language.                
                <param>
                    x an object representing the attributes of an SQL structured type                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;SQLOutputImpl&lt;/code&gt; object is in
                      use by a &lt;code&gt;SQLData&lt;/code&gt; object attempting to write the attribute
                      values of a UDT to the database.                    
                </throws>
            </javadoc>
            <method name="writeStruct" type="void" line="401">
                <params>
                    <param name="x" type="Struct"/>
                </params>
                <declaration name="s" type="SerialStruct" line="402"/>
            </method>
            <javadoc line="406">
                Writes an &lt;code&gt;Array&lt;/code&gt; object in the Java
                  programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt;
                  object. The driver converts this value to a serializable
                  &lt;code&gt;SerialArray&lt;/code&gt; SQL &lt;code&gt;ARRAY&lt;/code&gt;
                  value before returning it to the database.                
                <param>
                    x an object representing an SQL &lt;code&gt;ARRAY&lt;/code&gt; value                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;SQLOutputImpl&lt;/code&gt; object is in
                      use by a &lt;code&gt;SQLData&lt;/code&gt; object attempting to write the attribute
                      values of a UDT to the database.                    
                </throws>
            </javadoc>
            <method name="writeArray" type="void" line="417">
                <params>
                    <param name="x" type="Array"/>
                </params>
                <scope line="418"/>
            </method>
            <javadoc line="424">
                Writes an &lt;code&gt;java.sql.Type.DATALINK&lt;/code&gt; object in the Java
                  programming language to this &lt;code&gt;SQLOutputImpl&lt;/code&gt; object. The
                  driver converts this value to a serializable &lt;code&gt;SerialDatalink&lt;/code&gt;
                  SQL &lt;code&gt;DATALINK&lt;/code&gt; value before return it to the database.                
                <param>
                    url an object representing a SQL &lt;code&gt;DATALINK&lt;/code&gt; value                    
                </param>
                <throws>
                    SQLException if the &lt;code&gt;SQLOutputImpl&lt;/code&gt; object is in
                      use by a &lt;code&gt;SQLData&lt;/code&gt; object attempting to write the attribute
                      values of a UDT to the database.                    
                </throws>
            </javadoc>
            <method name="writeURL" type="void" line="434">
                <params>
                    <param name="url" type="java.net.URL"/>
                </params>
                <scope line="435"/>
            </method>
            <javadoc line="441">
                Writes the next attribute to the stream as a &lt;code&gt;String&lt;/code&gt;
                  in the Java programming language. The driver converts this to a
                  SQL &lt;code&gt;NCHAR&lt;/code&gt; or
                  &lt;code&gt;NVARCHAR&lt;/code&gt; or &lt;code&gt;LONGNVARCHAR&lt;/code&gt; value
                  (depending on the argument&apos;s
                  size relative to the driver&apos;s limits on &lt;code&gt;NVARCHAR&lt;/code&gt; values)
                  when it sends it to the stream.                
                <param>
                    x the value to pass to the database                    
                </param>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="writeNString" type="void" line="453">
                <params>
                    <param name="x" type="String"/>
                </params>
            </method>
            <javadoc line="456">
                Writes an SQL &lt;code&gt;NCLOB&lt;/code&gt; value to the stream.                
                <param>
                    x a &lt;code&gt;NClob&lt;/code&gt; object representing data of an SQL
                      &lt;code&gt;NCLOB&lt;/code&gt; value                    
                </param>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="writeNClob" type="void" line="463">
                <params>
                    <param name="x" type="NClob"/>
                </params>
            </method>
            <javadoc line="466">
                Writes an SQL &lt;code&gt;ROWID&lt;/code&gt; value to the stream.                
                <param>
                    x a &lt;code&gt;RowId&lt;/code&gt; object representing data of an SQL
                      &lt;code&gt;ROWID&lt;/code&gt; value                    
                </param>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="writeRowId" type="void" line="473">
                <params>
                    <param name="x" type="RowId"/>
                </params>
            </method>
            <javadoc line="476">
                Writes an SQL &lt;code&gt;XML&lt;/code&gt; value to the stream.                
                <param>
                    x a &lt;code&gt;SQLXML&lt;/code&gt; object representing data of an SQL
                      &lt;code&gt;XML&lt;/code&gt; value                    
                </param>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="writeSQLXML" type="void" line="483">
                <params>
                    <param name="x" type="SQLXML"/>
                </params>
            </method>
        </class>
    </source>