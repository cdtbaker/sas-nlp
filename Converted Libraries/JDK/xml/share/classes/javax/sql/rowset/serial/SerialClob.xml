<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.sql.rowset.serial">
        <import package="java.sql"/>
        <import package="java.io"/>
        <class name="SerialClob" line="31">
            <implements interface="Clob"/>
            <implements interface="Serializable"/>
            <implements interface="Cloneable"/>
            <javadoc line="31">
                A serialized mapping in the Java programming language of an SQL
                  &lt;code&gt;CLOB&lt;/code&gt; value.
                  &lt;P&gt;
                  The &lt;code&gt;SerialClob&lt;/code&gt; class provides a constructor for creating
                  an instance from a &lt;code&gt;Clob&lt;/code&gt; object.  Note that the &lt;code&gt;Clob&lt;/code&gt;
                  object should have brought the SQL &lt;code&gt;CLOB&lt;/code&gt; value&apos;s data over
                  to the client before a &lt;code&gt;SerialClob&lt;/code&gt; object
                  is constructed from it.  The data of an SQL &lt;code&gt;CLOB&lt;/code&gt; value can
                  be materialized on the client as a stream of Unicode characters.
                  &lt;P&gt;
                  &lt;code&gt;SerialClob&lt;/code&gt; methods make it possible to get a substring
                  from a &lt;code&gt;SerialClob&lt;/code&gt; object or to locate the start of
                  a pattern of characters.                
                <author>
                    Jonathan Bruce                    
                </author>
            </javadoc>
            <declaration name="buf" type="char" line="50"/>
            <javadoc line="50">
                A serialized array of characters containing the data of the SQL
                  &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;SerialClob&lt;/code&gt; object
                  represents.                
                <serial>
                                        
                </serial>
            </javadoc>
            <declaration name="clob" type="Clob" line="59"/>
            <javadoc line="59">
                Internal Clob representation if SerialClob is initialized with a
                  Clob. Null if SerialClob is initialized with a char[].                
            </javadoc>
            <declaration name="len" type="long" line="65"/>
            <javadoc line="65">
                The length in characters of this &lt;code&gt;SerialClob&lt;/code&gt; object&apos;s
                  internal array of characters.                
                <serial>
                                        
                </serial>
            </javadoc>
            <declaration name="origLen" type="long" line="73"/>
            <javadoc line="73">
                The original length in characters of this &lt;code&gt;SerialClob&lt;/code&gt;
                  object&apos;s internal array of characters.                
                <serial>
                                        
                </serial>
            </javadoc>
            <javadoc line="81">
                Constructs a &lt;code&gt;SerialClob&lt;/code&gt; object that is a serialized version of
                  the given &lt;code&gt;char&lt;/code&gt; array.
                  &lt;p&gt;
                  The new &lt;code&gt;SerialClob&lt;/code&gt; object is initialized with the data from the
                  &lt;code&gt;char&lt;/code&gt; array, thus allowing disconnected &lt;code&gt;RowSet&lt;/code&gt;
                  objects to establish a serialized &lt;code&gt;Clob&lt;/code&gt; object without touching
                  the data source.                
                <param>
                    ch the char array representing the &lt;code&gt;Clob&lt;/code&gt; object to be
                      serialized                    
                </param>
                <throws>
                    SerialException if an error occurs during serialization                    
                </throws>
                <throws>
                    SQLException if a SQL error occurs                    
                </throws>
            </javadoc>
            <method name="SerialClob" type="constructor" line="95">
                <params>
                    <param name="ch" type="char"/>
                </params>
                <comment line="98">
                    %%% JMB. Agreed. Add code here to throw a SQLException if no
                     support is available for locatorsUpdateCopy=false
                     Serializing locators is not supported.                    
                </comment>
                <scope line="103"/>
            </method>
            <javadoc line="110">
                Constructs a &lt;code&gt;SerialClob&lt;/code&gt; object that is a serialized
                  version of the given &lt;code&gt;Clob&lt;/code&gt; object.
                  &lt;P&gt;
                  The new &lt;code&gt;SerialClob&lt;/code&gt; object is initialized with the
                  data from the &lt;code&gt;Clob&lt;/code&gt; object; therefore, the
                  &lt;code&gt;Clob&lt;/code&gt; object should have previously brought the
                  SQL &lt;code&gt;CLOB&lt;/code&gt; value&apos;s data over to the client from
                  the database. Otherwise, the new &lt;code&gt;SerialClob&lt;/code&gt; object
                  object will contain no data.
                  &lt;p&gt;
                  Note: The &lt;code&gt;Clob&lt;/code&gt; object supplied to this constructor must
                  return non-null for both the &lt;code&gt;Clob.getCharacterStream()&lt;/code&gt;
                  and &lt;code&gt;Clob.getAsciiStream&lt;/code&gt; methods. This &lt;code&gt;SerialClob&lt;/code&gt;
                  constructor cannot serialize a &lt;code&gt;Clob&lt;/code&gt; object in this instance
                  and will throw an &lt;code&gt;SQLException&lt;/code&gt; object.                
                <param>
                    clob the &lt;code&gt;Clob&lt;/code&gt; object from which this
                      &lt;code&gt;SerialClob&lt;/code&gt; object is to be constructed; cannot be null                    
                </param>
                <throws>
                    SerialException if an error occurs during serialization                    
                </throws>
                <throws>
                    SQLException if a SQL error occurs in capturing the CLOB;
                      if the &lt;code&gt;Clob&lt;/code&gt; object is a null; or if either of the
                      &lt;code&gt;Clob.getCharacterStream()&lt;/code&gt; and &lt;code&gt;Clob.getAsciiStream()&lt;/code&gt;
                      methods on the &lt;code&gt;Clob&lt;/code&gt; returns a null                    
                </throws>
                <see>
                    java.sql.Clob                    
                </see>
            </javadoc>
            <method name="SerialClob" type="constructor" line="136">
                <params>
                    <param name="clob" type="Clob"/>
                </params>
                <comment line="155">
                    Note: get an ASCII stream in order to null-check it,
                     even though we don&apos;t do anything with it.                    
                </comment>
                <scope line="138"/>
                <declaration name="read" type="int" line="145"/>
                <declaration name="offset" type="int" line="146"/>
                <scope line="148">
                    <scope line="149"/>
                    <scope line="156">
                        <scope line="157"/>
                    </scope>
                    <scope line="163">
                        <scope line="164"/>
                    </scope>
                </scope>
                <scope line="169"/>
            </method>
            <javadoc line="176">
                Retrieves the number of characters in this &lt;code&gt;SerialClob&lt;/code&gt;
                  object&apos;s array of characters.                
                <return>
                    a &lt;code&gt;long&lt;/code&gt; indicating the length in characters of this
                      &lt;code&gt;SerialClob&lt;/code&gt; object&apos;s array of character                    
                </return>
                <throws>
                    SerialException if an error occurs                    
                </throws>
            </javadoc>
            <method name="length" type="long" line="184"/>
            <javadoc line="188">
                Returns this &lt;code&gt;SerialClob&lt;/code&gt; object&apos;s data as a stream
                  of Unicode characters. Unlike the related method, &lt;code&gt;getAsciiStream&lt;/code&gt;,
                  a stream is produced regardless of whether the &lt;code&gt;SerialClob&lt;/code&gt; object
                  was created with a &lt;code&gt;Clob&lt;/code&gt; object or a &lt;code&gt;char&lt;/code&gt; array.                
                <return>
                    a &lt;code&gt;java.io.Reader&lt;/code&gt; object containing this
                      &lt;code&gt;SerialClob&lt;/code&gt; object&apos;s data                    
                </return>
                <throws>
                    SerialException if an error occurs                    
                </throws>
            </javadoc>
            <method name="getCharacterStream" type="java.io.Reader" line="198"/>
            <javadoc line="202">
                Retrieves the &lt;code&gt;CLOB&lt;/code&gt; value designated by this &lt;code&gt;SerialClob&lt;/code&gt;
                  object as an ascii stream. This method forwards the &lt;code&gt;getAsciiStream&lt;/code&gt;
                  call to the underlying &lt;code&gt;Clob&lt;/code&gt; object in the event that this
                  &lt;code&gt;SerialClob&lt;/code&gt; object is instantiated with a &lt;code&gt;Clob&lt;/code&gt;
                  object. If this &lt;code&gt;SerialClob&lt;/code&gt; object is instantiated with
                  a &lt;code&gt;char&lt;/code&gt; array, a &lt;code&gt;SerialException&lt;/code&gt; object is thrown.                
                <return>
                    a &lt;code&gt;java.io.InputStream&lt;/code&gt; object containing
                      this &lt;code&gt;SerialClob&lt;/code&gt; object&apos;s data                    
                </return>
                <throws>
                    SerialException if this &lt;code&gt;SerialClob&lt;/code&gt; object was not instantiated
                      with a &lt;code&gt;Clob&lt;/code&gt; object                    
                </throws>
                <throws>
                    SQLException if there is an error accessing the
                      &lt;code&gt;CLOB&lt;/code&gt; value represented by the &lt;code&gt;Clob&lt;/code&gt; object that was
                      used to create this &lt;code&gt;SerialClob&lt;/code&gt; object                    
                </throws>
            </javadoc>
            <method name="getAsciiStream" type="java.io.InputStream" line="218">
                <scope line="219"/>
                <scope line="221"/>
            </method>
            <javadoc line="228">
                Returns a copy of the substring contained in this
                  &lt;code&gt;SerialClob&lt;/code&gt; object, starting at the given position
                  and continuing for the specified number or characters.                
                <param>
                    pos the position of the first character in the substring
                      to be copied; the first character of the
                      &lt;code&gt;SerialClob&lt;/code&gt; object is at position
                      &lt;code&gt;1&lt;/code&gt;; must not be less than &lt;code&gt;1&lt;/code&gt;,
                      and the sum of the starting position and the length
                      of the substring must be less than the length of this
                      &lt;code&gt;SerialClob&lt;/code&gt; object                    
                </param>
                <param>
                    length the number of characters in the substring to be
                      returned; must not be greater than the length of
                      this &lt;code&gt;SerialClob&lt;/code&gt; object, and the
                      sum of the starting position and the length
                      of the substring must be less than the length of this
                      &lt;code&gt;SerialClob&lt;/code&gt; object                    
                </param>
                <return>
                    a &lt;code&gt;String&lt;/code&gt; object containing a substring of
                      this &lt;code&gt;SerialClob&lt;/code&gt; object beginning at the
                      given position and containing the specified number of
                      consecutive characters                    
                </return>
                <throws>
                    SerialException if either of the arguments is out of bounds                    
                </throws>
            </javadoc>
            <method name="getSubString" type="String" line="252">
                <params>
                    <param name="pos" type="long"/>
                    <param name="length" type="int"/>
                </params>
                <scope line="254"/>
                <scope line="258"/>
                <scope line="262"/>
                <scope line="265"/>
            </method>
            <javadoc line="272">
                Returns the position in this &lt;code&gt;SerialClob&lt;/code&gt; object
                  where the given &lt;code&gt;String&lt;/code&gt; object begins, starting
                  the search at the specified position. This method returns
                  &lt;code&gt;-1&lt;/code&gt; if the pattern is not found.                
                <param>
                    searchStr the &lt;code&gt;String&lt;/code&gt; object for which to
                      search                    
                </param>
                <param>
                    start the position in this &lt;code&gt;SerialClob&lt;/code&gt; object
                      at which to start the search; the first position is
                      &lt;code&gt;1&lt;/code&gt;; must not be less than &lt;code&gt;1&lt;/code&gt; nor
                      greater than the length of this &lt;code&gt;SerialClob&lt;/code&gt; object                    
                </param>
                <return>
                    the position at which the given &lt;code&gt;String&lt;/code&gt; object
                      begins, starting the search at the specified position;
                      &lt;code&gt;-1&lt;/code&gt; if the given &lt;code&gt;String&lt;/code&gt; object is
                      not found or the starting position is out of bounds; position
                      numbering for the return value starts at &lt;code&gt;1&lt;/code&gt;                    
                </return>
                <throws>
                    SerialException if an error occurs locating the String signature                    
                </throws>
                <throws>
                    SQLException if there is an error accessing the Blob value
                      from the database.                    
                </throws>
            </javadoc>
            <method name="position" type="long" line="294">
                <params>
                    <param name="searchStr" type="String"/>
                    <param name="start" type="long"/>
                </params>
                <comment line="312">
                    increment pos, and i                    
                </comment>
                <comment line="315">
                    increment pos only                    
                </comment>
                <comment line="318">
                    not found                    
                </comment>
                <scope line="296"/>
                <declaration name="pattern" type="char" line="300"/>
                <declaration name="pos" type="int" line="302"/>
                <declaration name="i" type="int" line="303"/>
                <declaration name="patlen" type="long" line="304"/>
                <scope line="306">
                    <scope line="307">
                        <scope line="308"/>
                    </scope>
                    <scope line="313"/>
                </scope>
            </method>
            <javadoc line="320">
                Returns the position in this &lt;code&gt;SerialClob&lt;/code&gt; object
                  where the given &lt;code&gt;Clob&lt;/code&gt; signature begins, starting
                  the search at the specified position. This method returns
                  &lt;code&gt;-1&lt;/code&gt; if the pattern is not found.                
                <param>
                    searchStr the &lt;code&gt;Clob&lt;/code&gt; object for which to search                    
                </param>
                <param>
                    start the position in this &lt;code&gt;SerialClob&lt;/code&gt; object
                      at which to begin the search; the first position is
                      &lt;code&gt;1&lt;/code&gt;; must not be less than &lt;code&gt;1&lt;/code&gt; nor
                      greater than the length of this &lt;code&gt;SerialClob&lt;/code&gt; object                    
                </param>
                <return>
                    the position at which the given &lt;code&gt;Clob&lt;/code&gt;
                      object begins in this &lt;code&gt;SerialClob&lt;/code&gt; object,
                      at or after the specified starting position                    
                </return>
                <throws>
                    SerialException if an error occurs locating the Clob signature                    
                </throws>
                <throws>
                    SQLException if there is an error accessing the Blob value
                      from the database                    
                </throws>
            </javadoc>
            <method name="position" type="long" line="339">
                <params>
                    <param name="searchStr" type="Clob"/>
                    <param name="start" type="long"/>
                </params>
            </method>
            <javadoc line="344">
                Writes the given Java &lt;code&gt;String&lt;/code&gt; to the &lt;code&gt;CLOB&lt;/code&gt;
                  value that this &lt;code&gt;SerialClob&lt;/code&gt; object represents, at the position
                  &lt;code&gt;pos&lt;/code&gt;.                
                <param>
                    pos the position at which to start writing to the &lt;code&gt;CLOB&lt;/code&gt;
                      value that this &lt;code&gt;SerialClob&lt;/code&gt; object represents; the first
                      position is &lt;code&gt;1&lt;/code&gt;; must not be less than &lt;code&gt;1&lt;/code&gt; nor
                      greater than the length of this &lt;code&gt;SerialClob&lt;/code&gt; object                    
                </param>
                <param>
                    str the string to be written to the &lt;code&gt;CLOB&lt;/code&gt;
                      value that this &lt;code&gt;SerialClob&lt;/code&gt; object represents                    
                </param>
                <return>
                    the number of characters written                    
                </return>
                <throws>
                    SerialException if there is an error accessing the
                      &lt;code&gt;CLOB&lt;/code&gt; value; if an invalid position is set; if an
                      invalid offset value is set; if number of bytes to be written
                      is greater than the &lt;code&gt;SerialClob&lt;/code&gt; length; or the combined
                      values of the length and offset is greater than the Clob buffer                    
                </throws>
            </javadoc>
            <method name="setString" type="int" line="362">
                <params>
                    <param name="pos" type="long"/>
                    <param name="str" type="String"/>
                </params>
            </method>
            <javadoc line="366">
                Writes &lt;code&gt;len&lt;/code&gt; characters of &lt;code&gt;str&lt;/code&gt;, starting
                  at character &lt;code&gt;offset&lt;/code&gt;, to the &lt;code&gt;CLOB&lt;/code&gt; value
                  that this &lt;code&gt;Clob&lt;/code&gt; represents.                
                <param>
                    pos the position at which to start writing to the &lt;code&gt;CLOB&lt;/code&gt;
                      value that this &lt;code&gt;SerialClob&lt;/code&gt; object represents; the first
                      position is &lt;code&gt;1&lt;/code&gt;; must not be less than &lt;code&gt;1&lt;/code&gt; nor
                      greater than the length of this &lt;code&gt;SerialClob&lt;/code&gt; object                    
                </param>
                <param>
                    str the string to be written to the &lt;code&gt;CLOB&lt;/code&gt;
                      value that this &lt;code&gt;Clob&lt;/code&gt; object represents                    
                </param>
                <param>
                    offset the offset into &lt;code&gt;str&lt;/code&gt; to start reading
                      the characters to be written                    
                </param>
                <param>
                    length the number of characters to be written                    
                </param>
                <return>
                    the number of characters written                    
                </return>
                <throws>
                    SerialException if there is an error accessing the
                      &lt;code&gt;CLOB&lt;/code&gt; value; if an invalid position is set; if an
                      invalid offset value is set; if number of bytes to be written
                      is greater than the &lt;code&gt;SerialClob&lt;/code&gt; length; or the combined
                      values of the length and offset is greater than the Clob buffer                    
                </throws>
            </javadoc>
            <method name="setString" type="int" line="388">
                <params>
                    <param name="pos" type="long"/>
                    <param name="str" type="String"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                </params>
                <comment line="406">
                    need check to ensure length + offset !&gt; bytes.length                    
                </comment>
                <comment line="412">
                    values in the array are at position one less                    
                </comment>
                <declaration name="temp" type="String" line="389"/>
                <declaration name="cPattern" type="char" line="390"/>
                <scope line="392"/>
                <scope line="396"/>
                <scope line="400"/>
                <scope line="404"/>
                <declaration name="i" type="int" line="410"/>
                <scope line="412"/>
            </method>
            <javadoc line="419">
                Retrieves a stream to be used to write Ascii characters to the
                  &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;SerialClob&lt;/code&gt; object represents,
                  starting at position &lt;code&gt;pos&lt;/code&gt;. This method forwards the
                  &lt;code&gt;setAsciiStream()&lt;/code&gt; call to the underlying &lt;code&gt;Clob&lt;/code&gt; object in
                  the event that this &lt;code&gt;SerialClob&lt;/code&gt; object is instantiated with a
                  &lt;code&gt;Clob&lt;/code&gt; object. If this &lt;code&gt;SerialClob&lt;/code&gt; object is instantiated
                  with a &lt;code&gt;char&lt;/code&gt; array, a &lt;code&gt;SerialException&lt;/code&gt; object is thrown.                
                <param>
                    pos the position at which to start writing to the
                      &lt;code&gt;CLOB&lt;/code&gt; object                    
                </param>
                <return>
                    the stream to which ASCII encoded characters can be written                    
                </return>
                <throws>
                    SerialException if SerialClob is not instantiated with a
                      Clob object that supports &lt;code&gt;setAsciiStream&lt;/code&gt;                    
                </throws>
                <throws>
                    SQLException if there is an error accessing the
                      &lt;code&gt;CLOB&lt;/code&gt; value                    
                </throws>
                <see>
                    #getAsciiStream                    
                </see>
            </javadoc>
            <method name="setAsciiStream" type="java.io.OutputStream" line="438">
                <params>
                    <param name="pos" type="long"/>
                </params>
                <scope line="439"/>
                <scope line="441"/>
            </method>
            <javadoc line="448">
                Retrieves a stream to be used to write a stream of Unicode characters
                  to the &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;SerialClob&lt;/code&gt; object
                  represents, at position &lt;code&gt;pos&lt;/code&gt;. This method forwards the
                  &lt;code&gt;setCharacterStream()&lt;/code&gt; call to the underlying &lt;code&gt;Clob&lt;/code&gt;
                  object in the event that this &lt;code&gt;SerialClob&lt;/code&gt; object is instantiated with a
                  &lt;code&gt;Clob&lt;/code&gt; object. If this &lt;code&gt;SerialClob&lt;/code&gt; object is instantiated with
                  a &lt;code&gt;char&lt;/code&gt; array, a &lt;code&gt;SerialException&lt;/code&gt; is thrown.                
                <param>
                    pos the position at which to start writing to the
                      &lt;code&gt;CLOB&lt;/code&gt; value                    
                </param>
                <return>
                    a stream to which Unicode encoded characters can be written                    
                </return>
                <throws>
                    SerialException if the SerialClob is not instantiated with
                      a Clob object that supports &lt;code&gt;setCharacterStream&lt;/code&gt;                    
                </throws>
                <throws>
                    SQLException if there is an error accessing the
                      &lt;code&gt;CLOB&lt;/code&gt; value                    
                </throws>
                <see>
                    #getCharacterStream                    
                </see>
            </javadoc>
            <method name="setCharacterStream" type="java.io.Writer" line="468">
                <params>
                    <param name="pos" type="long"/>
                </params>
                <scope line="469"/>
                <scope line="471"/>
            </method>
            <javadoc line="478">
                Truncates the &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;SerialClob&lt;/code&gt;
                  object represents so that it has a length of &lt;code&gt;len&lt;/code&gt;
                  characters.
                  &lt;p&gt;
                  Truncating a &lt;code&gt;SerialClob&lt;/code&gt; object to length 0 has the effect of
                  clearing its contents.                
                <param>
                    length the length, in bytes, to which the &lt;code&gt;CLOB&lt;/code&gt;
                      value should be truncated                    
                </param>
                <throws>
                    SQLException if there is an error accessing the
                      &lt;code&gt;CLOB&lt;/code&gt; value                    
                </throws>
            </javadoc>
            <method name="truncate" type="void" line="491">
                <params>
                    <param name="length" type="long"/>
                </params>
                <comment line="498">
                    re-size the buffer                    
                </comment>
                <scope line="492"/>
                <scope line="495">
                    <scope line="499"/>
                    <scope line="501"/>
                </scope>
            </method>
            <method name="getCharacterStream" type="Reader" line="509">
                <params>
                    <param name="pos" type="long"/>
                    <param name="length" type="long"/>
                </params>
            </method>
            <method name="free" type="void" line="513"/>
            <declaration name="serialVersionUID" type="long" line="517"/>
            <javadoc line="517">
                The identifier that assists in the serialization of this &lt;code&gt;SerialClob&lt;/code&gt;
                  object.                
            </javadoc>
        </class>
    </source>