<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.sound.sampled">
        <class name="Control" line="28">
            <comment line="48">
                INSTANCE VARIABLES                
            </comment>
            <comment line="57">
                CONSTRUCTORS                
            </comment>
            <comment line="68">
                METHODS                
            </comment>
            <comment line="79">
                ABSTRACT METHODS                
            </comment>
            <comment line="145">
                class Type                
            </comment>
            <javadoc line="28">
                {@link Line Lines} often have a set of controls, such as gain and pan, that affect
                  the audio signal passing through the line.  Java Sound&apos;s &lt;code&gt;Line&lt;/code&gt; objects
                  let you obtain a particular control object by passing its class as the
                  argument to a {@link Line#getControl(Control.Type) getControl} method.
                  &lt;p&gt;
                  Because the various types of controls have different purposes and features,
                  all of their functionality is accessed from the subclasses that define
                  each kind of control.                
                <author>
                    Kara Kytle                    
                </author>
                <see>
                    Line#getControls                    
                </see>
                <see>
                    Line#isControlSupported                    
                </see>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <declaration name="type" type="Type" line="49"/>
            <javadoc line="49">
                The control type.                
            </javadoc>
            <javadoc line="58">
                Constructs a Control with the specified type.                
                <param>
                    type the kind of control desired                    
                </param>
            </javadoc>
            <method name="Control" type="constructor" line="62">
                <params>
                    <param name="type" type="Type"/>
                </params>
            </method>
            <javadoc line="69">
                Obtains the control&apos;s type.                
                <return>
                    the control's type.                    
                </return>
            </javadoc>
            <method name="getType" type="Type" line="73"/>
            <javadoc line="80">
                Obtains a String describing the control type and its current state.                
                <return>
                    a String representation of the Control.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="84"/>
            <class name="Type" line="89">
                <comment line="97">
                    CONTROL TYPE DEFINES                    
                </comment>
                <comment line="99">
                    INSTANCE VARIABLES                    
                </comment>
                <comment line="107">
                    CONSTRUCTOR                    
                </comment>
                <comment line="120">
                    METHODS                    
                </comment>
                <javadoc line="89">
                    An instance of the &lt;code&gt;Type&lt;/code&gt; class represents the type of
                      the control.  Static instances are provided for the
                      common types.                    
                </javadoc>
                <declaration name="name" type="String" line="100"/>
                <javadoc line="100">
                    Type name.                    
                </javadoc>
                <javadoc line="108">
                    Constructs a new control type with the name specified.
                      The name should be a descriptive string appropriate for
                      labelling the control in an application, such as &quot;Gain&quot; or &quot;Balance.&quot;                    
                    <param>
                        name  the name of the new control type.                        
                    </param>
                </javadoc>
                <method name="Type" type="constructor" line="114">
                    <params>
                        <param name="name" type="String"/>
                    </params>
                </method>
                <javadoc line="121">
                    Finalizes the equals method                    
                </javadoc>
                <method name="equals" type="boolean" line="124">
                    <params>
                        <param name="obj" type="Object"/>
                    </params>
                </method>
                <javadoc line="128">
                    Finalizes the hashCode method                    
                </javadoc>
                <method name="hashCode" type="int" line="131"/>
                <javadoc line="135">
                    Provides the &lt;code&gt;String&lt;/code&gt; representation of the control type.  This &lt;code&gt;String&lt;/code&gt; is
                      the same name that was passed to the constructor.                    
                    <return>
                        the control type name                        
                    </return>
                </javadoc>
                <method name="toString" type="String" line="141"/>
            </class>
        </class>
    </source>