<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.sound.sampled">
        <class name="BooleanControl" line="28">
            <extends class="Control"/>
            <comment line="49">
                INSTANCE VARIABLES                
            </comment>
            <comment line="67">
                CONSTRUCTORS                
            </comment>
            <comment line="102">
                METHODS                
            </comment>
            <comment line="138">
                ABSTRACT METHOD IMPLEMENTATIONS: CONTROL                
            </comment>
            <comment line="150">
                INNER CLASSES                
            </comment>
            <comment line="192">
                class Type                
            </comment>
            <javadoc line="28">
                A &lt;code&gt;BooleanControl&lt;/code&gt; provides the ability to switch between
                  two possible settings that affect a line&apos;s audio.  The settings are boolean
                  values (&lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;).  A graphical user interface
                  might represent the control by a two-state button, an on/off switch, two
                  mutually exclusive buttons, or a checkbox (among other possibilities).
                  For example, depressing a button might activate a
                  &lt;code&gt;{@link BooleanControl.Type#MUTE MUTE}&lt;/code&gt; control to silence
                  the line&apos;s audio.
                  &lt;p&gt;
                  As with other &lt;code&gt;{@link Control}&lt;/code&gt; subclasses, a method is
                  provided that returns string labels for the values, suitable for
                  display in the user interface.                
                <author>
                    Kara Kytle                    
                </author>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <declaration name="trueStateLabel" type="String" line="50"/>
            <javadoc line="50">
                The &lt;code&gt;true&lt;/code&gt; state label, such as &quot;true&quot; or &quot;on.&quot;                
            </javadoc>
            <declaration name="falseStateLabel" type="String" line="55"/>
            <javadoc line="55">
                The &lt;code&gt;false&lt;/code&gt; state label, such as &quot;false&quot; or &quot;off.&quot;                
            </javadoc>
            <declaration name="value" type="boolean" line="60"/>
            <javadoc line="60">
                The current value.                
            </javadoc>
            <javadoc line="69">
                Constructs a new boolean control object with the given parameters.                
                <param>
                    type the type of control represented this float control object                    
                </param>
                <param>
                    initialValue the initial control value                    
                </param>
                <param>
                    trueStateLabel the label for the state represented by <code>true</code>,
                      such as "true" or "on."                    
                </param>
                <param>
                    falseStateLabel the label for the state represented by <code>false</code>,
                      such as "false" or "off."                    
                </param>
            </javadoc>
            <method name="BooleanControl" type="constructor" line="79">
                <params>
                    <param name="type" type="Type"/>
                    <param name="initialValue" type="boolean"/>
                    <param name="trueStateLabel" type="String"/>
                    <param name="falseStateLabel" type="String"/>
                </params>
            </method>
            <javadoc line="88">
                Constructs a new boolean control object with the given parameters.
                  The labels for the &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; states
                  default to &quot;true&quot; and &quot;false.&quot;                
                <param>
                    type the type of control represented by this float control object                    
                </param>
                <param>
                    initialValue the initial control value                    
                </param>
            </javadoc>
            <method name="BooleanControl" type="constructor" line="96">
                <params>
                    <param name="type" type="Type"/>
                    <param name="initialValue" type="boolean"/>
                </params>
            </method>
            <javadoc line="104">
                Sets the current value for the control.  The default
                  implementation simply sets the value as indicated.
                  Some controls require that their line be open before they can be affected
                  by setting a value.                
                <param>
                    value desired new value.                    
                </param>
            </javadoc>
            <method name="setValue" type="void" line="111">
                <params>
                    <param name="value" type="boolean"/>
                </params>
            </method>
            <javadoc line="117">
                Obtains this control&apos;s current value.                
                <return>
                    current value.                    
                </return>
            </javadoc>
            <method name="getValue" type="boolean" line="121"/>
            <javadoc line="126">
                Obtains the label for the specified state.                
                <return>
                    the label for the specified state, such as "true" or "on"
                      for <code>true</code>, or "false" or "off" for <code>false</code>.                    
                </return>
            </javadoc>
            <method name="getStateLabel" type="String" line="131">
                <params>
                    <param name="state" type="boolean"/>
                </params>
            </method>
            <javadoc line="140">
                Provides a string representation of the control                
                <return>
                    a string description                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="144"/>
            <class name="Type" line="152">
                <extends class="Control.Type"/>
                <comment line="164">
                    TYPE DEFINES                    
                </comment>
                <comment line="182">
                    CONSTRUCTOR                    
                </comment>
                <javadoc line="152">
                    An instance of the &lt;code&gt;BooleanControl.Type&lt;/code&gt; class identifies one kind of
                      boolean control.  Static instances are provided for the
                      common types.                    
                    <author>
                        Kara Kytle                        
                    </author>
                    <since>
                        1.3                        
                    </since>
                </javadoc>
                <declaration name="MUTE" type="Type" line="166"/>
                <javadoc line="166">
                    Represents a control for the mute status of a line.
                      Note that mute status does not affect gain.                    
                </javadoc>
                <declaration name="APPLY_REVERB" type="Type" line="172"/>
                <javadoc line="172">
                    Represents a control for whether reverberation is applied
                      to a line.  Note that the status of this control not affect
                      the reverberation settings for a line, but does affect whether
                      these settings are used.                    
                </javadoc>
                <javadoc line="184">
                    Constructs a new boolean control type.                    
                    <param>
                        name  the name of the new boolean control type                        
                    </param>
                </javadoc>
                <method name="Type" type="constructor" line="188">
                    <params>
                        <param name="name" type="String"/>
                    </params>
                </method>
            </class>
        </class>
    </source>