<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.sound.sampled">
        <interface name="Port">
            <implements interface="Line"/>
            <comment line="43">
                INNER CLASSES                
            </comment>
            <comment line="208">
                class Info                
            </comment>
            <javadoc line="29">
                Ports are simple lines for input or output of audio to or from audio devices.
                  Common examples of ports that act as source lines (mixer inputs) include the microphone,
                  line input, and CD-ROM drive.  Ports that act as target lines (mixer outputs) include the
                  speaker, headphone, and line output.  You can access port using a &lt;code&gt;{@link Port.Info}&lt;/code&gt;
                  object.                
                <author>
                    Kara Kytle                    
                </author>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <class name="Info" line="45">
                <extends class="Line.Info"/>
                <comment line="66">
                    AUDIO PORT TYPE DEFINES                    
                </comment>
                <comment line="69">
                    SOURCE PORTS                    
                </comment>
                <comment line="87">
                    TARGET PORTS                    
                </comment>
                <comment line="105">
                    FUTURE DIRECTIONS...                    
                </comment>
                <comment line="107">
                    telephone                    
                </comment>
                <comment line="108">
                    DAT                    
                </comment>
                <comment line="109">
                    DVD                    
                </comment>
                <comment line="112">
                    INSTANCE VARIABLES                    
                </comment>
                <comment line="118">
                    CONSTRUCTOR                    
                </comment>
                <comment line="139">
                    METHODS                    
                </comment>
                <javadoc line="45">
                    The &lt;code&gt;Port.Info&lt;/code&gt; class extends &lt;code&gt;{@link Line.Info}&lt;/code&gt;
                      with additional information specific to ports, including the port&apos;s name
                      and whether it is a source or a target for its mixer.
                      By definition, a port acts as either a source or a target to its mixer,
                      but not both.  (Audio input ports are sources; audio output ports are targets.)
                      &lt;p&gt;
                      To learn what ports are available, you can retrieve port info objects through the
                      &lt;code&gt;{@link Mixer#getSourceLineInfo getSourceLineInfo}&lt;/code&gt; and
                      &lt;code&gt;{@link Mixer#getTargetLineInfo getTargetLineInfo}&lt;/code&gt;
                      methods of the &lt;code&gt;Mixer&lt;/code&gt; interface.  Instances of the
                      &lt;code&gt;Port.Info&lt;/code&gt; class may also be constructed and used to obtain
                      lines matching the parameters specified in the &lt;code&gt;Port.Info&lt;/code&gt; object.                    
                    <author>
                        Kara Kytle                        
                    </author>
                    <since>
                        1.3                        
                    </since>
                </javadoc>
                <declaration name="MICROPHONE" type="Info" line="70"/>
                <javadoc line="70">
                    A type of port that gets audio from a built-in microphone or a microphone jack.                    
                </javadoc>
                <declaration name="LINE_IN" type="Info" line="75"/>
                <javadoc line="75">
                    A type of port that gets audio from a line-level audio input jack.                    
                </javadoc>
                <declaration name="COMPACT_DISC" type="Info" line="80"/>
                <javadoc line="80">
                    A type of port that gets audio from a CD-ROM drive.                    
                </javadoc>
                <declaration name="SPEAKER" type="Info" line="88"/>
                <javadoc line="88">
                    A type of port that sends audio to a built-in speaker or a speaker jack.                    
                </javadoc>
                <declaration name="HEADPHONE" type="Info" line="93"/>
                <javadoc line="93">
                    A type of port that sends audio to a headphone jack.                    
                </javadoc>
                <declaration name="LINE_OUT" type="Info" line="98"/>
                <javadoc line="98">
                    A type of port that sends audio to a line-level audio output jack.                    
                </javadoc>
                <declaration name="name" type="String" line="113"/>
                <declaration name="isSource" type="boolean" line="114"/>
                <javadoc line="119">
                    Constructs a port&apos;s info object from the information given.
                      This constructor is typically used by an implementation
                      of Java Sound to describe a supported line.                    
                    <param>
                        lineClass the class of the port described by the info object.                        
                    </param>
                    <param>
                        name the string that names the port                        
                    </param>
                    <param>
                        isSource <code>true</code> if the port is a source port (such
                          as a microphone), <code>false</code> if the port is a target port
                          (such as a speaker).                        
                    </param>
                </javadoc>
                <method name="Info" type="constructor" line="130">
                    <params>
                        <param name="lineClass" type="Class<?>"/>
                        <param name="name" type="String"/>
                        <param name="isSource" type="boolean"/>
                    </params>
                </method>
                <javadoc line="140">
                    Obtains the name of the port.                    
                    <return>
                        the string that names the port                        
                    </return>
                </javadoc>
                <method name="getName" type="String" line="144"/>
                <javadoc line="148">
                    Indicates whether the port is a source or a target for its mixer.                    
                    <return>
                        <code>true</code> if the port is a source port (such
                          as a microphone), <code>false</code> if the port is a target port
                          (such as a speaker).                        
                    </return>
                </javadoc>
                <method name="isSource" type="boolean" line="154"/>
                <javadoc line="158">
                    Indicates whether this info object specified matches this one.
                      To match, the match requirements of the superclass must be
                      met and the types must be equal.                    
                    <param>
                        info the info object for which the match is queried                        
                    </param>
                </javadoc>
                <method name="matches" type="boolean" line="164">
                    <params>
                        <param name="info" type="Line.Info"/>
                    </params>
                    <scope line="166"/>
                    <scope line="170"/>
                    <scope line="174"/>
                </method>
                <javadoc line="182">
                    Finalizes the equals method                    
                </javadoc>
                <method name="equals" type="boolean" line="185">
                    <params>
                        <param name="obj" type="Object"/>
                    </params>
                </method>
                <javadoc line="189">
                    Finalizes the hashCode method                    
                </javadoc>
                <method name="hashCode" type="int" line="192"/>
                <javadoc line="198">
                    Provides a &lt;code&gt;String&lt;/code&gt; representation
                      of the port.                    
                    <return>
                        a string that describes the port                        
                    </return>
                </javadoc>
                <method name="toString" type="String" line="203"/>
            </class>
        </interface>
    </source>