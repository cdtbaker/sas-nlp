<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.sound.sampled">
        <import package="java.io.File"/>
        <import package="java.io.OutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.util.Collections"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Map"/>
        <class name="AudioFileFormat" line="8">
            <javadoc line="8">
                An instance of the &lt;code&gt;AudioFileFormat&lt;/code&gt; class describes
                  an audio file, including the file type, the file&apos;s length in bytes,
                  the length in sample frames of the audio data contained in the file,
                  and the format of the audio data.
                  &lt;p&gt;
                  The &lt;code&gt;{@link AudioSystem}&lt;/code&gt; class includes methods for determining the format
                  of an audio file, obtaining an audio input stream from an audio file, and
                  writing an audio file from an audio input stream.
                  &lt;p&gt;An &lt;code&gt;AudioFileFormat&lt;/code&gt; object can
                  include a set of properties. A property is a pair of key and value:
                  the key is of type &lt;code&gt;String&lt;/code&gt;, the associated property
                  value is an arbitrary object.
                  Properties specify additional informational
                  meta data (like a author, copyright, or file duration).
                  Properties are optional information, and file reader and file
                  writer implementations are not required to provide or
                  recognize properties.
                  &lt;p&gt;The following table lists some common properties that should
                  be used in implementations:
                  &lt;table border=1&gt;
                  &lt;tr&gt;
                  &lt;th&gt;Property key&lt;/th&gt;
                  &lt;th&gt;Value type&lt;/th&gt;
                  &lt;th&gt;Description&lt;/th&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;&amp;quot;duration&amp;quot;&lt;/td&gt;
                  &lt;td&gt;{@link java.lang.Long Long}&lt;/td&gt;
                  &lt;td&gt;playback duration of the file in microseconds&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;&amp;quot;author&amp;quot;&lt;/td&gt;
                  &lt;td&gt;{@link java.lang.String String}&lt;/td&gt;
                  &lt;td&gt;name of the author of this file&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;&amp;quot;title&amp;quot;&lt;/td&gt;
                  &lt;td&gt;{@link java.lang.String String}&lt;/td&gt;
                  &lt;td&gt;title of this file&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;&amp;quot;copyright&amp;quot;&lt;/td&gt;
                  &lt;td&gt;{@link java.lang.String String}&lt;/td&gt;
                  &lt;td&gt;copyright message&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;&amp;quot;date&amp;quot;&lt;/td&gt;
                  &lt;td&gt;{@link java.util.Date Date}&lt;/td&gt;
                  &lt;td&gt;date of the recording or release&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;&amp;quot;comment&amp;quot;&lt;/td&gt;
                  &lt;td&gt;{@link java.lang.String String}&lt;/td&gt;
                  &lt;td&gt;an arbitrary text&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;/table&gt;                
                <author>
                    David Rivas                    
                </author>
                <author>
                    Kara Kytle                    
                </author>
                <author>
                    Florian Bomers                    
                </author>
                <see>
                    AudioInputStream                    
                </see>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <declaration name="type" type="Type" line="72"/>
            <javadoc line="72">
                File type.                
            </javadoc>
            <declaration name="byteLength" type="int" line="76"/>
            <javadoc line="76">
                File length in bytes                
            </javadoc>
            <declaration name="format" type="AudioFormat" line="80"/>
            <javadoc line="80">
                Format of the audio data contained in the file.                
            </javadoc>
            <declaration name="frameLength" type="int" line="84"/>
            <javadoc line="84">
                Audio data length in sample frames                
            </javadoc>
            <declaration name="properties" type="HashMap&amp;lt;String,Object&amp;gt;" line="88"/>
            <javadoc line="88">
                The set of properties                
            </javadoc>
            <javadoc line="92">
                Constructs an audio file format object.
                  This protected constructor is intended for use by providers of file-reading
                  services when returning information about an audio file or about supported audio file
                  formats.                
                <param>
                    type the type of the audio file                    
                </param>
                <param>
                    byteLength the length of the file in bytes, or &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt;                    
                </param>
                <param>
                    format the format of the audio data contained in the file                    
                </param>
                <param>
                    frameLength the audio data length in sample frames, or &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt;                    
                </param>
                <see>
                    #getType                    
                </see>
            </javadoc>
            <method name="AudioFileFormat" type="constructor" line="103">
                <params>
                    <param name="type" type="Type"/>
                    <param name="byteLength" type="int"/>
                    <param name="format" type="AudioFormat"/>
                    <param name="frameLength" type="int"/>
                </params>
            </method>
            <javadoc line="110">
                Constructs an audio file format object.
                  This public constructor may be used by applications to describe the
                  properties of a requested audio file.                
                <param>
                    type the type of the audio file                    
                </param>
                <param>
                    format the format of the audio data contained in the file                    
                </param>
                <param>
                    frameLength the audio data length in sample frames, or &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt;                    
                </param>
            </javadoc>
            <method name="AudioFileFormat" type="constructor" line="118">
                <params>
                    <param name="type" type="Type"/>
                    <param name="format" type="AudioFormat"/>
                    <param name="frameLength" type="int"/>
                </params>
            </method>
            <javadoc line="121">
                Construct an audio file format object with a set of
                  defined properties.
                  This public constructor may be used by applications to describe the
                  properties of a requested audio file. The properties map
                  will be copied to prevent any changes to it.                
                <param>
                    type        the type of the audio file                    
                </param>
                <param>
                    format      the format of the audio data contained in the file                    
                </param>
                <param>
                    frameLength the audio data length in sample frames, or
                      &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt;                    
                </param>
                <param>
                    properties  a &lt;code&gt;Map&amp;lt;String,Object&amp;gt;&lt;/code&gt; object
                      with properties                    
                </param>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="AudioFileFormat" type="constructor" line="135">
                <params>
                    <param name="type" type="Type"/>
                    <param name="format" type="AudioFormat"/>
                    <param name="frameLength" type="int"/>
                    <param name="properties" type="Map&lt;String,Object&gt;"/>
                </params>
            </method>
            <javadoc line="139">
                Obtains the audio file type, such as &lt;code&gt;WAVE&lt;/code&gt; or &lt;code&gt;AU&lt;/code&gt;.                
                <return>
                    the audio file type                    
                </return>
                <see>
                    Type#WAVE                    
                </see>
                <see>
                    Type#AU                    
                </see>
                <see>
                    Type#AIFF                    
                </see>
                <see>
                    Type#AIFC                    
                </see>
                <see>
                    Type#SND                    
                </see>
            </javadoc>
            <method name="getType" type="Type" line="148"/>
            <javadoc line="151">
                Obtains the size in bytes of the entire audio file (not just its audio data).                
                <return>
                    the audio file length in bytes                    
                </return>
                <see>
                    AudioSystem#NOT_SPECIFIED                    
                </see>
            </javadoc>
            <method name="getByteLength" type="int" line="156"/>
            <javadoc line="159">
                Obtains the format of the audio data contained in the audio file.                
                <return>
                    the audio data format                    
                </return>
            </javadoc>
            <method name="getFormat" type="AudioFormat" line="163"/>
            <javadoc line="166">
                Obtains the length of the audio data contained in the file, expressed in sample frames.                
                <return>
                    the number of sample frames of audio data in the file                    
                </return>
                <see>
                    AudioSystem#NOT_SPECIFIED                    
                </see>
            </javadoc>
            <method name="getFrameLength" type="int" line="171"/>
            <javadoc line="174">
                Obtain an unmodifiable map of properties.
                  The concept of properties is further explained in
                  the {@link AudioFileFormat class description}.                
                <return>
                    a &lt;code&gt;Map&amp;lt;String,Object&amp;gt;&lt;/code&gt; object containing
                      all properties. If no properties are recognized, an empty map is
                      returned.                    
                </return>
                <see>
                    #getProperty(String)                    
                </see>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="properties" type="Map&lt;String,Object&gt;" line="184">
                <declaration name="ret" type="Map&amp;lt;String,Object&amp;gt;" line="185"/>
                <scope line="186"/>
                <scope line="189"/>
            </method>
            <javadoc line="194">
                Obtain the property value specified by the key.
                  The concept of properties is further explained in
                  the {@link AudioFileFormat class description}.
                  &lt;p&gt;If the specified property is not defined for a
                  particular file format, this method returns
                  &lt;code&gt;null&lt;/code&gt;.                
                <param>
                    key the key of the desired property                    
                </param>
                <return>
                    the value of the property with the specified key,
                      or &lt;code&gt;null&lt;/code&gt; if the property does not exist.                    
                </return>
                <see>
                    #properties()                    
                </see>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="getProperty" type="Object" line="207">
                <params>
                    <param name="key" type="String"/>
                </params>
                <scope line="208"/>
            </method>
            <javadoc line="213">
                Provides a string representation of the file format.                
                <return>
                    the file format as a string                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="217">
                <declaration name="buf" type="StringBuffer" line="218"/>
                <scope line="219"/>
                <scope line="222"/>
                <scope line="225"/>
                <scope line="229"/>
            </method>
            <class name="Type" line="234">
                <javadoc line="234">
                    An instance of the &lt;code&gt;Type&lt;/code&gt; class represents one of the
                      standard types of audio file.  Static instances are provided for the
                      common types.                    
                </javadoc>
                <declaration name="WAVE" type="Type" line="240"/>
                <javadoc line="240">
                    Specifies a WAVE file.                    
                </javadoc>
                <declaration name="AU" type="Type" line="244"/>
                <javadoc line="244">
                    Specifies an AU file.                    
                </javadoc>
                <declaration name="AIFF" type="Type" line="248"/>
                <javadoc line="248">
                    Specifies an AIFF file.                    
                </javadoc>
                <declaration name="AIFC" type="Type" line="252"/>
                <javadoc line="252">
                    Specifies an AIFF-C file.                    
                </javadoc>
                <declaration name="SND" type="Type" line="256"/>
                <javadoc line="256">
                    Specifies a SND file.                    
                </javadoc>
                <declaration name="name" type="String" line="260"/>
                <javadoc line="260">
                    File type name.                    
                </javadoc>
                <declaration name="extension" type="String" line="264"/>
                <javadoc line="264">
                    File type extension.                    
                </javadoc>
                <javadoc line="268">
                    Constructs a file type.                    
                    <param>
                        name the string that names the file type                        
                    </param>
                    <param>
                        extension the string that commonly marks the file type
                          without leading dot.                        
                    </param>
                </javadoc>
                <method name="Type" type="constructor" line="274">
                    <params>
                        <param name="name" type="String"/>
                        <param name="extension" type="String"/>
                    </params>
                </method>
                <javadoc line="278">
                    Finalizes the equals method                    
                </javadoc>
                <method name="equals" type="boolean" line="281">
                    <params>
                        <param name="obj" type="Object"/>
                    </params>
                    <scope line="282"/>
                    <scope line="285"/>
                </method>
                <javadoc line="290">
                    Finalizes the hashCode method                    
                </javadoc>
                <method name="hashCode" type="int" line="293">
                    <scope line="294"/>
                </method>
                <javadoc line="299">
                    Provides the file type&apos;s name as the &lt;code&gt;String&lt;/code&gt; representation
                      of the file type.                    
                    <return>
                        the file type&apos;s name                        
                    </return>
                </javadoc>
                <method name="toString" type="String" line="304"/>
                <javadoc line="307">
                    Obtains the common file name extension for this file type.                    
                    <return>
                        file type extension                        
                    </return>
                </javadoc>
                <method name="getExtension" type="String" line="311"/>
            </class>
        </class>
    </source>