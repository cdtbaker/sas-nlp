<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.sound.sampled">
        <import package="java.security.BasicPermission"/>
        <class name="AudioPermission" line="3">
            <extends class="BasicPermission"/>
            <javadoc line="3">
                The &lt;code&gt;AudioPermission&lt;/code&gt; class represents access rights to the audio
                  system resources.  An &lt;code&gt;AudioPermission&lt;/code&gt; contains a target name
                  but no actions list; you either have the named permission or you don&apos;t.
                  &lt;p&gt;
                  The target name is the name of the audio permission (see the table below).
                  The names follow the hierarchical property-naming convention. Also, an asterisk
                  can be used to represent all the audio permissions.
                  &lt;p&gt;
                  The following table lists the possible &lt;code&gt;AudioPermission&lt;/code&gt; target names.
                  For each name, the table provides a description of exactly what that permission
                  allows, as well as a discussion of the risks of granting code the permission.
                  &lt;p&gt;
                  &lt;table border=1 cellpadding=5 summary=&quot;permission target name, what the permission allows, and associated risks&quot;&gt;
                  &lt;tr&gt;
                  &lt;th&gt;Permission Target Name&lt;/th&gt;
                  &lt;th&gt;What the Permission Allows&lt;/th&gt;
                  &lt;th&gt;Risks of Allowing this Permission&lt;/th&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;play&lt;/td&gt;
                  &lt;td&gt;Audio playback through the audio device or devices on the system.
                  Allows the application to obtain and manipulate lines and mixers for
                  audio playback (rendering).&lt;/td&gt;
                  &lt;td&gt;In some cases use of this permission may affect other
                  applications because the audio from one line may be mixed with other audio
                  being played on the system, or because manipulation of a mixer affects the
                  audio for all lines using that mixer.&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;record&lt;/td&gt;
                  &lt;td&gt;Audio recording through the audio device or devices on the system.
                  Allows the application to obtain and manipulate lines and mixers for
                  audio recording (capture).&lt;/td&gt;
                  &lt;td&gt;In some cases use of this permission may affect other
                  applications because manipulation of a mixer affects the audio for all lines
                  using that mixer.
                  This permission can enable an applet or application to eavesdrop on a user.&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;/table&gt;
                  &lt;p&gt;                
                <author>
                    Kara Kytle                    
                </author>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <javadoc line="48">
                Creates a new &lt;code&gt;AudioPermission&lt;/code&gt; object that has the specified
                  symbolic name, such as &quot;play&quot; or &quot;record&quot;. An asterisk can be used to indicate
                  all audio permissions.                
                <param>
                    name the name of the new &lt;code&gt;AudioPermission&lt;/code&gt;                    
                </param>
                <throws>
                    NullPointerException if &lt;code&gt;name&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.                    
                </throws>
                <throws>
                    IllegalArgumentException if &lt;code&gt;name&lt;/code&gt; is empty.                    
                </throws>
            </javadoc>
            <method name="AudioPermission" type="constructor" line="56">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="59">
                Creates a new &lt;code&gt;AudioPermission&lt;/code&gt; object that has the specified
                  symbolic name, such as &quot;play&quot; or &quot;record&quot;.  The &lt;code&gt;actions&lt;/code&gt;
                  parameter is currently unused and should be &lt;code&gt;null&lt;/code&gt;.                
                <param>
                    name the name of the new &lt;code&gt;AudioPermission&lt;/code&gt;                    
                </param>
                <param>
                    actions (unused; should be &lt;code&gt;null&lt;/code&gt;)                    
                </param>
                <throws>
                    NullPointerException if &lt;code&gt;name&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.                    
                </throws>
                <throws>
                    IllegalArgumentException if &lt;code&gt;name&lt;/code&gt; is empty.                    
                </throws>
            </javadoc>
            <method name="AudioPermission" type="constructor" line="68">
                <params>
                    <param name="name" type="String"/>
                    <param name="actions" type="String"/>
                </params>
            </method>
        </class>
    </source>