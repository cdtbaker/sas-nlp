<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.sound.midi">
        <class name="InvalidMidiDataException" line="2">
            <extends class="Exception"/>
            <javadoc line="2">
                An &lt;code&gt;InvalidMidiDataException&lt;/code&gt; indicates that inappropriate MIDI
                  data was encountered. This often means that the data is invalid in and of
                  itself, from the perspective of the MIDI specification.  An example would
                  be an undefined status byte.  However, the exception might simply
                  mean that the data was invalid in the context it was used, or that
                  the object to which the data was given was unable to parse or use it.
                  For example, a file reader might not be able to parse a Type 2 MIDI file, even
                  though that format is defined in the MIDI specification.                
                <author>
                    Kara Kytle                    
                </author>
            </javadoc>
            <javadoc line="14">
                Constructs an &lt;code&gt;InvalidMidiDataException&lt;/code&gt; with
                  &lt;code&gt;null&lt;/code&gt; for its error detail message.                
            </javadoc>
            <method name="InvalidMidiDataException" type="constructor" line="18"/>
            <javadoc line="21">
                Constructs an &lt;code&gt;InvalidMidiDataException&lt;/code&gt; with the
                  specified detail message.                
                <param>
                    message the string to display as an error detail message                    
                </param>
            </javadoc>
            <method name="InvalidMidiDataException" type="constructor" line="26">
                <params>
                    <param name="message" type="String"/>
                </params>
            </method>
        </class>
    </source>