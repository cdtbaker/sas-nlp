<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.sound.midi.spi">
        <import package="java.io.File"/>
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="javax.sound.midi.Sequence"/>
        <import package="javax.sound.midi.MidiFileFormat"/>
        <class name="MidiFileWriter" line="35">
            <javadoc line="35">
                A &lt;code&gt;MidiFileWriter&lt;/code&gt; supplies MIDI file-writing services.  Classes
                  that implement this interface can write one or more types of MIDI file from
                  a &lt;code&gt;{@link Sequence}&lt;/code&gt; object.                
                <author>
                    Kara Kytle                    
                </author>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="getMidiFileTypes" type="int[]" line="46"/>
            <javadoc line="46">
                Obtains the set of MIDI file types for which file writing support is
                  provided by this file writer.                
                <return>
                    array of file types.  If no file types are supported,
                      an array of length 0 is returned.                    
                </return>
            </javadoc>
            <method name="getMidiFileTypes" type="int[]" line="55"/>
            <javadoc line="55">
                Obtains the file types that this file writer can write from the
                  sequence specified.                
                <param>
                    sequence the sequence for which MIDI file type support
                      is queried                    
                </param>
                <return>
                    array of file types.  If no file types are supported,
                      returns an array of length 0.                    
                </return>
            </javadoc>
            <javadoc line="66">
                Indicates whether file writing support for the specified MIDI file type
                  is provided by this file writer.                
                <param>
                    fileType the file type for which write capabilities are queried                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if the file type is supported,
                      otherwise &lt;code&gt;false&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="isFileTypeSupported" type="boolean" line="73">
                <params>
                    <param name="fileType" type="int"/>
                </params>
                <declaration name="types" type="int" line="75"/>
                <scope line="76">
                    <scope line="77"/>
                </scope>
            </method>
            <javadoc line="85">
                Indicates whether a MIDI file of the file type specified can be written
                  from the sequence indicated.                
                <param>
                    fileType the file type for which write capabilities are queried                    
                </param>
                <param>
                    sequence  the sequence for which file writing support is queried                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if the file type is supported for this sequence,
                      otherwise &lt;code&gt;false&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="isFileTypeSupported" type="boolean" line="93">
                <params>
                    <param name="fileType" type="int"/>
                    <param name="sequence" type="Sequence"/>
                </params>
                <declaration name="types" type="int" line="95"/>
                <scope line="96">
                    <scope line="97"/>
                </scope>
            </method>
            <method name="write" type="int" line="105"/>
            <javadoc line="105">
                Writes a stream of bytes representing a MIDI file of the file type
                  indicated to the output stream provided.                
                <param>
                    in sequence containing MIDI data to be written to the file                    
                </param>
                <param>
                    fileType type of the file to be written to the output stream                    
                </param>
                <param>
                    out stream to which the file data should be written                    
                </param>
                <return>
                    the number of bytes written to the output stream                    
                </return>
                <throws>
                    IOException if an I/O exception occurs                    
                </throws>
                <throws>
                    IllegalArgumentException if the file type is not supported by
                      this file writer                    
                </throws>
                <see>
                    #isFileTypeSupported(int,Sequence)                    
                </see>
                <see>
                    #getMidiFileTypes(Sequence)                    
                </see>
            </javadoc>
            <method name="write" type="int" line="121"/>
            <javadoc line="121">
                Writes a stream of bytes representing a MIDI file of the file type
                  indicated to the external file provided.                
                <param>
                    in sequence containing MIDI data to be written to the external file                    
                </param>
                <param>
                    fileType type of the file to be written to the external file                    
                </param>
                <param>
                    out external file to which the file data should be written                    
                </param>
                <return>
                    the number of bytes written to the file                    
                </return>
                <throws>
                    IOException if an I/O exception occurs                    
                </throws>
                <throws>
                    IllegalArgumentException if the file type is not supported by
                      this file writer                    
                </throws>
                <see>
                    #isFileTypeSupported(int,Sequence)                    
                </see>
                <see>
                    #getMidiFileTypes(Sequence)                    
                </see>
            </javadoc>
        </class>
    </source>