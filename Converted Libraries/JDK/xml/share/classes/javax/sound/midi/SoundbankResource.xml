<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.sound.midi">
        <class name="SoundbankResource" line="2">
            <javadoc line="2">
                A &lt;code&gt;SoundbankResource&lt;/code&gt; represents any audio resource stored
                  in a &lt;code&gt;{@link Soundbank}&lt;/code&gt;.  Common soundbank resources include:
                  &lt;ul&gt;
                  &lt;li&gt;Instruments.  An instrument may be specified in a variety of
                  ways.  However, all soundbanks have some mechanism for defining
                  instruments.  In doing so, they may reference other resources
                  stored in the soundbank.  Each instrument has a &lt;code&gt;Patch&lt;/code&gt;
                  which specifies the MIDI program and bank by which it may be
                  referenced in MIDI messages.  Instrument information may be
                  stored in &lt;code&gt;{@link Instrument}&lt;/code&gt; objects.
                  &lt;li&gt;Audio samples.  A sample typically is a sampled audio waveform
                  which contains a short sound recording whose duration is a fraction of
                  a second, or at most a few seconds.  These audio samples may be
                  used by a &lt;code&gt;{@link Synthesizer}&lt;/code&gt; to synthesize sound in response to MIDI
                  commands, or extracted for use by an application.
                  (The terminology reflects musicians&apos; use of the word &quot;sample&quot; to refer
                  collectively to a series of contiguous audio samples or frames, rather than
                  to a single, instantaneous sample.)
                  The data class for an audio sample will be an object
                  that encapsulates the audio sample data itself and information
                  about how to interpret it (the format of the audio data), such
                  as an &lt;code&gt;{@link javax.sound.sampled.AudioInputStream}&lt;/code&gt;.     &lt;/li&gt;
                  &lt;li&gt;Embedded sequences.  A sound bank may contain built-in
                  song data stored in a data object such as a &lt;code&gt;{@link Sequence}&lt;/code&gt;.
                  &lt;/ul&gt;
                  &lt;p&gt;
                  Synthesizers that use wavetable synthesis or related
                  techniques play back the audio in a sample when
                  synthesizing notes, often when emulating the real-world instrument that
                  was originally recorded.  However, there is not necessarily a one-to-one
                  correspondence between the &lt;code&gt;Instruments&lt;/code&gt; and samples
                  in a &lt;code&gt;Soundbank&lt;/code&gt;.  A single &lt;code&gt;Instrument&lt;/code&gt; can use
                  multiple SoundbankResources (typically for notes of dissimilar pitch or
                  brightness).  Also, more than one &lt;code&gt;Instrument&lt;/code&gt; can use the same
                  sample.                
                <author>
                    Kara Kytle                    
                </author>
            </javadoc>
            <declaration name="soundBank" type="Soundbank" line="41"/>
            <javadoc line="41">
                The sound bank that contains the &lt;code&gt;SoundbankResources&lt;/code&gt;                
            </javadoc>
            <declaration name="name" type="String" line="45"/>
            <javadoc line="45">
                The name of the &lt;code&gt;SoundbankResource&lt;/code&gt;                
            </javadoc>
            <declaration name="dataClass" type="Class" line="49"/>
            <javadoc line="49">
                The class used to represent the sample&apos;s data.                
            </javadoc>
            <javadoc line="53">
                Constructs a new &lt;code&gt;SoundbankResource&lt;/code&gt; from the given sound bank
                  and wavetable index.  (Setting the &lt;code&gt;SoundbankResource&apos;s&lt;/code&gt; name,
                  sampled audio data, and instruments is a subclass responsibility.)                
                <param>
                    soundBank the sound bank containing this &lt;code&gt;SoundbankResource&lt;/code&gt;                    
                </param>
                <param>
                    name the name of the sample                    
                </param>
                <param>
                    dataClass the class used to represent the sample&apos;s data                    
                </param>
                <see>
                    #getSoundbank                    
                </see>
                <see>
                    #getName                    
                </see>
                <see>
                    #getDataClass                    
                </see>
                <see>
                    #getData                    
                </see>
            </javadoc>
            <method name="SoundbankResource" type="constructor" line="65">
                <params>
                    <param name="soundBank" type="Soundbank"/>
                    <param name="name" type="String"/>
                    <param name="dataClass" type="Class&lt;?&gt;"/>
                </params>
            </method>
            <javadoc line="70">
                Obtains the sound bank that contains this &lt;code&gt;SoundbankResource&lt;/code&gt;.                
                <return>
                    the sound bank in which this &lt;code&gt;SoundbankResource&lt;/code&gt; is stored                    
                </return>
            </javadoc>
            <method name="getSoundbank" type="Soundbank" line="74"/>
            <javadoc line="77">
                Obtains the name of the resource.  This should generally be a string
                  descriptive of the resource.                
                <return>
                    the instrument&apos;s name                    
                </return>
            </javadoc>
            <method name="getName" type="String" line="82"/>
            <javadoc line="85">
                Obtains the class used by this sample to represent its data.
                  The object returned by &lt;code&gt;getData&lt;/code&gt; will be of this
                  class.  If this &lt;code&gt;SoundbankResource&lt;/code&gt; object does not support
                  direct access to its data, returns &lt;code&gt;null&lt;/code&gt;.                
                <return>
                    the class used to represent the sample&apos;s data, or
                      null if the data is not accessible                    
                </return>
            </javadoc>
            <method name="getDataClass" type="Class&lt;?&gt;" line="93"/>
            <method name="getData" type="Object" line="96"/>
            <javadoc line="96">
                Obtains the sampled audio that is stored in this &lt;code&gt;SoundbankResource&lt;/code&gt;.
                  The type of object returned depends on the implementation of the
                  concrete class, and may be queried using &lt;code&gt;getDataClass&lt;/code&gt;.                
                <return>
                    an object containing the sampled audio data                    
                </return>
                <see>
                    #getDataClass                    
                </see>
            </javadoc>
        </class>
    </source>