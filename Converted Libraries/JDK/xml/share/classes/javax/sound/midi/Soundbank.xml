<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.sound.midi">
        <import package="java.net.URL"/>
        <interface name="Soundbank">
            <javadoc line="3">
                A &lt;code&gt;Soundbank&lt;/code&gt; contains a set of &lt;code&gt;Instruments&lt;/code&gt;
                  that can be loaded into a &lt;code&gt;Synthesizer&lt;/code&gt;.
                  Note that a Java Sound &lt;code&gt;Soundbank&lt;/code&gt; is different from a MIDI bank.
                  MIDI permits up to 16383 banks, each containing up to 128 instruments
                  (also sometimes called programs, patches, or timbres).
                  However, a &lt;code&gt;Soundbank&lt;/code&gt; can contain 16383 times 128 instruments,
                  because the instruments within a &lt;code&gt;Soundbank&lt;/code&gt; are indexed by both
                  a MIDI program number and a MIDI bank number (via a &lt;code&gt;Patch&lt;/code&gt;
                  object). Thus, a &lt;code&gt;Soundbank&lt;/code&gt; can be thought of as a collection
                  of MIDI banks.
                  &lt;p&gt;
                  &lt;code&gt;Soundbank&lt;/code&gt; includes methods that return &lt;code&gt;String&lt;/code&gt;
                  objects containing the sound bank&apos;s name, manufacturer, version number, and
                  description.  The precise content and format of these strings is left
                  to the implementor.
                  &lt;p&gt;
                  Different synthesizers use a variety of synthesis techniques.  A common
                  one is wavetable synthesis, in which a segment of recorded sound is
                  played back, often with looping and pitch change.  The Downloadable Sound
                  (DLS) format uses segments of recorded sound, as does the Headspace Engine.
                  &lt;code&gt;Soundbanks&lt;/code&gt; and &lt;code&gt;Instruments&lt;/code&gt; that are based on
                  wavetable synthesis (or other uses of stored sound recordings) should
                  typically implement the &lt;code&gt;getResources()&lt;/code&gt;
                  method to provide access to these recorded segments.  This is optional,
                  however; the method can return an zero-length array if the synthesis technique
                  doesn&apos;t use sampled sound (FM synthesis and physical modeling are examples
                  of such techniques), or if it does but the implementor chooses not to make the
                  samples accessible.                
                <see>
                    Synthesizer#getDefaultSoundbank                    
                </see>
                <see>
                    Synthesizer#isSoundbankSupported                    
                </see>
                <see>
                    Synthesizer#loadInstruments(Soundbank,Patch[])                    
                </see>
                <see>
                    Patch                    
                </see>
                <see>
                    Instrument                    
                </see>
                <see>
                    SoundbankResource                    
                </see>
                <author>
                    David Rivas                    
                </author>
                <author>
                    Kara Kytle                    
                </author>
            </javadoc>
            <method name="getName" type="String" line="42"/>
            <javadoc line="42">
                Obtains the name of the sound bank.                
                <return>
                    a <code>String</code> naming the sound bank                    
                </return>
            </javadoc>
            <method name="getVersion" type="String" line="47"/>
            <javadoc line="47">
                Obtains the version string for the sound bank.                
                <return>
                    a <code>String</code> that indicates the sound bank's version                    
                </return>
            </javadoc>
            <method name="getVendor" type="String" line="52"/>
            <javadoc line="52">
                Obtains a &lt;code&gt;string&lt;/code&gt; naming the company that provides the
                  sound bank                
                <return>
                    the vendor string                    
                </return>
            </javadoc>
            <method name="getDescription" type="String" line="58"/>
            <javadoc line="58">
                Obtains a textual description of the sound bank, suitable for display.                
                <return>
                    a <code>String</code> that describes the sound bank                    
                </return>
            </javadoc>
            <method name="getResources" type="SoundbankResource[]" line="63"/>
            <javadoc line="63">
                Extracts a list of non-Instrument resources contained in the sound bank.                
                <return>
                    an array of resources, exclusing instruments.  If the sound bank contains
                      no resources (other than instruments), returns an array of length 0.                    
                </return>
            </javadoc>
            <method name="getInstruments" type="Instrument[]" line="69"/>
            <javadoc line="69">
                Obtains a list of instruments contained in this sound bank.                
                <return>
                    an array of the <code>Instruments</code> in this
                      <code>SoundBank</code>
                      If the sound bank contains no instruments, returns an array of length 0.                    
                </return>
                <see>
                    Synthesizer#getLoadedInstruments                    
                </see>
                <see>
                    #getInstrument(Patch)                    
                </see>
            </javadoc>
            <method name="getInstrument" type="Instrument" line="78"/>
            <javadoc line="78">
                Obtains an &lt;code&gt;Instrument&lt;/code&gt; from the given &lt;code&gt;Patch&lt;/code&gt;.                
                <param>
                    patch a <code>Patch</code> object specifying the bank index
                      and program change number                    
                </param>
                <return>
                    the requested instrument, or <code>null</code> if the
                      sound bank doesn't contain that instrument                    
                </return>
                <see>
                    #getInstruments                    
                </see>
                <see>
                    Synthesizer#loadInstruments(Soundbank,Patch[])                    
                </see>
            </javadoc>
        </interface>
    </source>