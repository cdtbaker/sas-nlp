<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.sound.midi">
        <interface name="Receiver">
            <implements interface="AutoCloseable"/>
            <javadoc line="2">
                A &lt;code&gt;Receiver&lt;/code&gt; receives &lt;code&gt;{@link MidiEvent}&lt;/code&gt; objects and
                  typically does something useful in response, such as interpreting them to
                  generate sound or raw MIDI output.  Common MIDI receivers include
                  synthesizers and MIDI Out ports.                
                <see>
                    MidiDevice                    
                </see>
                <see>
                    Synthesizer                    
                </see>
                <see>
                    Transmitter                    
                </see>
                <author>
                    Kara Kytle                    
                </author>
            </javadoc>
            <method name="send" type="void" line="13"/>
            <javadoc line="13">
                Sends a MIDI message and time-stamp to this receiver.
                  If time-stamping is not supported by this receiver, the time-stamp
                  value should be -1.                
                <param>
                    message the MIDI message to send                    
                </param>
                <param>
                    timeStamp the time-stamp for the message, in microseconds.                    
                </param>
                <throws>
                    IllegalStateException if the receiver is closed                    
                </throws>
            </javadoc>
            <method name="close" type="void" line="22"/>
            <javadoc line="22">
                Indicates that the application has finished using the receiver, and
                  that limited resources it requires may be released or made available.
                  &lt;p&gt;If the creation of this &lt;code&gt;Receiver&lt;/code&gt; resulted in
                  implicitly opening the underlying device, the device is
                  implicitly closed by this method. This is true unless the device is
                  kept open by other &lt;code&gt;Receiver&lt;/code&gt; or &lt;code&gt;Transmitter&lt;/code&gt;
                  instances that opened the device implicitly, and unless the device
                  has been opened explicitly. If the device this
                  &lt;code&gt;Receiver&lt;/code&gt; is retrieved from is closed explicitly by
                  calling {@link MidiDevice#close MidiDevice.close}, the
                  &lt;code&gt;Receiver&lt;/code&gt; is closed, too.  For a detailed
                  description of open/close behaviour see the class description
                  of {@link javax.sound.midi.MidiDevice MidiDevice}.                
                <see>
                    javax.sound.midi.MidiSystem#getReceiver                    
                </see>
            </javadoc>
        </interface>
    </source>