<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.sound.midi">
        <import package="java.net.URL"/>
        <class name="Instrument" line="32">
            <extends class="SoundbankResource"/>
            <javadoc line="32">
                An instrument is a sound-synthesis algorithm with certain parameter
                  settings, usually designed to emulate a specific real-world
                  musical instrument or to achieve a specific sort of sound effect.
                  Instruments are typically stored in collections called soundbanks.
                  Before the instrument can be used to play notes, it must first be loaded
                  onto a synthesizer, and then it must be selected for use on
                  one or more channels, via a program-change command.  MIDI notes
                  that are subsequently received on those channels will be played using
                  the sound of the selected instrument.                
                <see>
                    Soundbank                    
                </see>
                <see>
                    Soundbank#getInstruments                    
                </see>
                <see>
                    Patch                    
                </see>
                <see>
                    Synthesizer#loadInstrument(Instrument)                    
                </see>
                <see>
                    MidiChannel#programChange(int,int)                    
                </see>
                <author>
                    Kara Kytle                    
                </author>
            </javadoc>
            <declaration name="patch" type="Patch" line="54"/>
            <javadoc line="54">
                Instrument patch                
            </javadoc>
            <javadoc line="60">
                Constructs a new MIDI instrument from the specified &lt;code&gt;Patch&lt;/code&gt;.
                  When a subsequent request is made to load the
                  instrument, the sound bank will search its contents for this instrument&apos;s &lt;code&gt;Patch&lt;/code&gt;,
                  and the instrument will be loaded into the synthesizer at the
                  bank and program location indicated by the &lt;code&gt;Patch&lt;/code&gt; object.                
                <param>
                    soundbank sound bank containing the instrument                    
                </param>
                <param>
                    patch the patch of this instrument                    
                </param>
                <param>
                    name the name of this instrument                    
                </param>
                <param>
                    dataClass the class used to represent the sample's data.                    
                </param>
                <see>
                    Synthesizer#loadInstrument(Instrument)                    
                </see>
            </javadoc>
            <method name="Instrument" type="constructor" line="73">
                <params>
                    <param name="soundbank" type="Soundbank"/>
                    <param name="patch" type="Patch"/>
                    <param name="name" type="String"/>
                    <param name="dataClass" type="Class<?>"/>
                </params>
            </method>
            <javadoc line="80">
                Obtains the &lt;code&gt;Patch&lt;/code&gt; object that indicates the bank and program
                  numbers where this instrument is to be stored in the synthesizer.                
                <return>
                    this instrument's patch                    
                </return>
            </javadoc>
            <method name="getPatch" type="Patch" line="85"/>
        </class>
    </source>