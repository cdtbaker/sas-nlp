<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.script">
        <interface name="Invocable">
            <javadoc line="28">
                The optional interface implemented by ScriptEngines whose methods allow the invocation of
                  procedures in scripts that have previously been executed.                
                <author>
                    Mike Grogan                    
                </author>
                <author>
                    A. Sundararajan                    
                </author>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="invokeMethod" type="Object" line="37"/>
            <javadoc line="37">
                Calls a method on a script object compiled during a previous script execution,
                  which is retained in the state of the &lt;code&gt;ScriptEngine&lt;/code&gt;.                
                <param>
                    name The name of the procedure to be called.                    
                </param>
                <param>
                    thiz If the procedure is a member  of a class
                      defined in the script and thiz is an instance of that class
                      returned by a previous execution or invocation, the named method is
                      called through that instance.                    
                </param>
                <param>
                    args Arguments to pass to the procedure.  The rules for converting
                      the arguments to scripting variables are implementation-specific.                    
                </param>
                <return>
                    The value returned by the procedure.  The rules for converting the scripting
                      variable returned by the script method to a Java Object are implementation-specific.                    
                </return>
                <throws>
                    ScriptException if an error occurrs during invocation of the method.                    
                </throws>
                <throws>
                    NoSuchMethodException if method with given name or matching argument types cannot be found.                    
                </throws>
                <throws>
                    NullPointerException if the method name is null.                    
                </throws>
                <throws>
                    IllegalArgumentException if the specified thiz is null or the specified Object is
                      does not represent a scripting object.                    
                </throws>
            </javadoc>
            <method name="invokeFunction" type="Object" line="63"/>
            <javadoc line="63">
                Used to call top-level procedures and functions defined in scripts.                
                <param>
                    args Arguments to pass to the procedure or function                    
                </param>
                <return>
                    The value returned by the procedure or function                    
                </return>
                <throws>
                    ScriptException if an error occurrs during invocation of the method.                    
                </throws>
                <throws>
                    NoSuchMethodException if method with given name or matching argument types cannot be found.                    
                </throws>
                <throws>
                    NullPointerException if method name is null.                    
                </throws>
            </javadoc>
            <method name="getInterface" type="T" line="77"/>
            <javadoc line="77">
                Returns an implementation of an interface using functions compiled in
                  the interpreter. The methods of the interface
                  may be implemented using the &lt;code&gt;invokeFunction&lt;/code&gt; method.                
                <param>
                    clasz The &lt;code&gt;Class&lt;/code&gt; object of the interface to return.                    
                </param>
                <return>
                    An instance of requested interface - null if the requested interface is unavailable,
                      i. e. if compiled functions in the &lt;code&gt;ScriptEngine&lt;/code&gt; cannot be found matching
                      the ones in the requested interface.                    
                </return>
                <throws>
                    IllegalArgumentException if the specified &lt;code&gt;Class&lt;/code&gt; object
                      is null or is not an interface.                    
                </throws>
            </javadoc>
            <method name="getInterface" type="T" line="93"/>
            <javadoc line="93">
                Returns an implementation of an interface using member functions of
                  a scripting object compiled in the interpreter. The methods of the
                  interface may be implemented using the &lt;code&gt;invokeMethod&lt;/code&gt; method.                
                <param>
                    thiz The scripting object whose member functions are used to implement the methods of the interface.                    
                </param>
                <param>
                    clasz The &lt;code&gt;Class&lt;/code&gt; object of the interface to return.                    
                </param>
                <return>
                    An instance of requested interface - null if the requested interface is unavailable,
                      i. e. if compiled methods in the &lt;code&gt;ScriptEngine&lt;/code&gt; cannot be found matching
                      the ones in the requested interface.                    
                </return>
                <throws>
                    IllegalArgumentException if the specified &lt;code&gt;Class&lt;/code&gt; object
                      is null or is not an interface, or if the specified Object is
                      null or does not represent a scripting object.                    
                </throws>
            </javadoc>
        </interface>
    </source>