<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.accessibility">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <interface name="AccessibleComponent">
            <javadoc line="4">
                The AccessibleComponent interface should be supported by any object
                  that is rendered on the screen.  This interface provides the standard
                  mechanism for an assistive technology to determine and set the
                  graphical representation of an object.  Applications can determine
                  if an object supports the AccessibleComponent interface by first
                  obtaining its AccessibleContext
                  and then calling the{@link AccessibleContext#getAccessibleComponent} method.
                  If the return value is not null, the object supports this interface.                
                <see>
                    Accessible                    
                </see>
                <see>
                    Accessible#getAccessibleContext                    
                </see>
                <see>
                    AccessibleContext                    
                </see>
                <see>
                    AccessibleContext#getAccessibleComponent                    
                </see>
                <author>
                    Peter Korn                    
                </author>
                <author>
                    Hans Muller                    
                </author>
                <author>
                    Willie Walker                    
                </author>
            </javadoc>
            <method name="getBackground" type="Color" line="22"/>
            <javadoc line="22">
                Gets the background color of this object.                
                <return>
                    the background color, if supported, of the object;
                      otherwise, null                    
                </return>
                <see>
                    #setBackground                    
                </see>
            </javadoc>
            <method name="setBackground" type="void" line="29"/>
            <javadoc line="29">
                Sets the background color of this object.                
                <param>
                    c the new Color for the background                    
                </param>
                <see>
                    #setBackground                    
                </see>
            </javadoc>
            <method name="getForeground" type="Color" line="35"/>
            <javadoc line="35">
                Gets the foreground color of this object.                
                <return>
                    the foreground color, if supported, of the object;
                      otherwise, null                    
                </return>
                <see>
                    #setForeground                    
                </see>
            </javadoc>
            <method name="setForeground" type="void" line="42"/>
            <javadoc line="42">
                Sets the foreground color of this object.                
                <param>
                    c the new Color for the foreground                    
                </param>
                <see>
                    #getForeground                    
                </see>
            </javadoc>
            <method name="getCursor" type="Cursor" line="48"/>
            <javadoc line="48">
                Gets the Cursor of this object.                
                <return>
                    the Cursor, if supported, of the object; otherwise, null                    
                </return>
                <see>
                    #setCursor                    
                </see>
            </javadoc>
            <method name="setCursor" type="void" line="54"/>
            <javadoc line="54">
                Sets the Cursor of this object.                
                <param>
                    cursor  the new Cursor for the object                    
                </param>
                <see>
                    #getCursor                    
                </see>
            </javadoc>
            <method name="getFont" type="Font" line="60"/>
            <javadoc line="60">
                Gets the Font of this object.                
                <return>
                    the Font,if supported, for the object; otherwise, null                    
                </return>
                <see>
                    #setFont                    
                </see>
            </javadoc>
            <method name="setFont" type="void" line="66"/>
            <javadoc line="66">
                Sets the Font of this object.                
                <param>
                    f the new Font for the object                    
                </param>
                <see>
                    #getFont                    
                </see>
            </javadoc>
            <method name="getFontMetrics" type="FontMetrics" line="72"/>
            <javadoc line="72">
                Gets the FontMetrics of this object.                
                <param>
                    f the Font                    
                </param>
                <return>
                    the FontMetrics, if supported, the object; otherwise, null                    
                </return>
                <see>
                    #getFont                    
                </see>
            </javadoc>
            <method name="isEnabled" type="boolean" line="79"/>
            <javadoc line="79">
                Determines if the object is enabled.  Objects that are enabled
                  will also have the AccessibleState.ENABLED state set in their
                  AccessibleStateSets.                
                <return>
                    true if object is enabled; otherwise, false                    
                </return>
                <see>
                    #setEnabled                    
                </see>
                <see>
                    AccessibleContext#getAccessibleStateSet                    
                </see>
                <see>
                    AccessibleState#ENABLED                    
                </see>
                <see>
                    AccessibleStateSet                    
                </see>
            </javadoc>
            <method name="setEnabled" type="void" line="90"/>
            <javadoc line="90">
                Sets the enabled state of the object.                
                <param>
                    b if true, enables this object; otherwise, disables it                    
                </param>
                <see>
                    #isEnabled                    
                </see>
            </javadoc>
            <method name="isVisible" type="boolean" line="96"/>
            <javadoc line="96">
                Determines if the object is visible.  Note: this means that the
                  object intends to be visible; however, it may not be
                  showing on the screen because one of the objects that this object
                  is contained by is currently not visible.  To determine if an object is
                  showing on the screen, use isShowing().
                  &lt;p&gt;Objects that are visible will also have the
                  AccessibleState.VISIBLE state set in their AccessibleStateSets.                
                <return>
                    true if object is visible; otherwise, false                    
                </return>
                <see>
                    #setVisible                    
                </see>
                <see>
                    AccessibleContext#getAccessibleStateSet                    
                </see>
                <see>
                    AccessibleState#VISIBLE                    
                </see>
                <see>
                    AccessibleStateSet                    
                </see>
            </javadoc>
            <method name="setVisible" type="void" line="111"/>
            <javadoc line="111">
                Sets the visible state of the object.                
                <param>
                    b if true, shows this object; otherwise, hides it                    
                </param>
                <see>
                    #isVisible                    
                </see>
            </javadoc>
            <method name="isShowing" type="boolean" line="117"/>
            <javadoc line="117">
                Determines if the object is showing.  This is determined by checking
                  the visibility of the object and its ancestors.
                  Note: this
                  will return true even if the object is obscured by another (for example,
                  it is underneath a menu that was pulled down).                
                <return>
                    true if object is showing; otherwise, false                    
                </return>
            </javadoc>
            <method name="contains" type="boolean" line="126"/>
            <javadoc line="126">
                Checks whether the specified point is within this object&apos;s bounds,
                  where the point&apos;s x and y coordinates are defined to be relative to the
                  coordinate system of the object.                
                <param>
                    p the Point relative to the coordinate system of the object                    
                </param>
                <return>
                    true if object contains Point; otherwise false                    
                </return>
                <see>
                    #getBounds                    
                </see>
            </javadoc>
            <method name="getLocationOnScreen" type="Point" line="135"/>
            <javadoc line="135">
                Returns the location of the object on the screen.                
                <return>
                    the location of the object on screen; null if this object
                      is not on the screen                    
                </return>
                <see>
                    #getBounds                    
                </see>
                <see>
                    #getLocation                    
                </see>
            </javadoc>
            <method name="getLocation" type="Point" line="143"/>
            <javadoc line="143">
                Gets the location of the object relative to the parent in the form
                  of a point specifying the object&apos;s top-left corner in the screen&apos;s
                  coordinate space.                
                <return>
                    An instance of Point representing the top-left corner of the
                      object's bounds in the coordinate space of the screen; null if
                      this object or its parent are not on the screen                    
                </return>
                <see>
                    #getBounds                    
                </see>
                <see>
                    #getLocationOnScreen                    
                </see>
            </javadoc>
            <method name="setLocation" type="void" line="154"/>
            <javadoc line="154">
                Sets the location of the object relative to the parent.                
                <param>
                    p the new position for the top-left corner                    
                </param>
                <see>
                    #getLocation                    
                </see>
            </javadoc>
            <method name="getBounds" type="Rectangle" line="160"/>
            <javadoc line="160">
                Gets the bounds of this object in the form of a Rectangle object.
                  The bounds specify this object&apos;s width, height, and location
                  relative to its parent.                
                <return>
                    A rectangle indicating this component's bounds; null if
                      this object is not on the screen.                    
                </return>
                <see>
                    #contains                    
                </see>
            </javadoc>
            <method name="setBounds" type="void" line="169"/>
            <javadoc line="169">
                Sets the bounds of this object in the form of a Rectangle object.
                  The bounds specify this object&apos;s width, height, and location
                  relative to its parent.                
                <param>
                    r rectangle indicating this component's bounds                    
                </param>
                <see>
                    #getBounds                    
                </see>
            </javadoc>
            <method name="getSize" type="Dimension" line="177"/>
            <javadoc line="177">
                Returns the size of this object in the form of a Dimension object.
                  The height field of the Dimension object contains this object&apos;s
                  height, and the width field of the Dimension object contains this
                  object&apos;s width.                
                <return>
                    A Dimension object that indicates the size of this component;
                      null if this object is not on the screen                    
                </return>
                <see>
                    #setSize                    
                </see>
            </javadoc>
            <method name="setSize" type="void" line="187"/>
            <javadoc line="187">
                Resizes this object so that it has width and height.                
                <param>
                    d The dimension specifying the new size of the object.                    
                </param>
                <see>
                    #getSize                    
                </see>
            </javadoc>
            <method name="getAccessibleAt" type="Accessible" line="193"/>
            <javadoc line="193">
                Returns the Accessible child, if one exists, contained at the local
                  coordinate Point.                
                <param>
                    p The point relative to the coordinate system of this object.                    
                </param>
                <return>
                    the Accessible, if it exists, at the specified location;
                      otherwise null                    
                </return>
            </javadoc>
            <method name="isFocusTraversable" type="boolean" line="201"/>
            <javadoc line="201">
                Returns whether this object can accept focus or not.   Objects that
                  can accept focus will also have the AccessibleState.FOCUSABLE state
                  set in their AccessibleStateSets.                
                <return>
                    true if object can accept focus; otherwise false                    
                </return>
                <see>
                    AccessibleContext#getAccessibleStateSet                    
                </see>
                <see>
                    AccessibleState#FOCUSABLE                    
                </see>
                <see>
                    AccessibleState#FOCUSED                    
                </see>
                <see>
                    AccessibleStateSet                    
                </see>
            </javadoc>
            <method name="requestFocus" type="void" line="212"/>
            <javadoc line="212">
                Requests focus for this object.  If this object cannot accept focus,
                  nothing will happen.  Otherwise, the object will attempt to take
                  focus.                
                <see>
                    #isFocusTraversable                    
                </see>
            </javadoc>
            <method name="addFocusListener" type="void" line="219"/>
            <javadoc line="219">
                Adds the specified focus listener to receive focus events from this
                  component.                
                <param>
                    l the focus listener                    
                </param>
                <see>
                    #removeFocusListener                    
                </see>
            </javadoc>
            <method name="removeFocusListener" type="void" line="226"/>
            <javadoc line="226">
                Removes the specified focus listener so it no longer receives focus
                  events from this component.                
                <param>
                    l the focus listener                    
                </param>
                <see>
                    #addFocusListener                    
                </see>
            </javadoc>
        </interface>
    </source>