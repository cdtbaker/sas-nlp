<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.accessibility">
        <interface name="AccessibleSelection">
            <javadoc line="2">
                This AccessibleSelection interface
                  provides the standard mechanism for an assistive technology to determine
                  what the current selected children are, as well as modify the selection set.
                  Any object that has children that can be selected should support
                  the AccessibleSelection interface.  Applications can determine if an object supports the
                  AccessibleSelection interface by first obtaining its AccessibleContext (see{@link Accessible}) and then calling the{@link AccessibleContext#getAccessibleSelection} method.
                  If the return value is not null, the object supports this interface.                
                <see>
                    Accessible                    
                </see>
                <see>
                    Accessible#getAccessibleContext                    
                </see>
                <see>
                    AccessibleContext                    
                </see>
                <see>
                    AccessibleContext#getAccessibleSelection                    
                </see>
                <author>
                    Peter Korn                    
                </author>
                <author>
                    Hans Muller                    
                </author>
                <author>
                    Willie Walker                    
                </author>
            </javadoc>
            <method name="getAccessibleSelectionCount" type="int" line="19"/>
            <javadoc line="19">
                Returns the number of Accessible children currently selected.
                  If no children are selected, the return value will be 0.                
                <return>
                    the number of items currently selected.                    
                </return>
            </javadoc>
            <method name="getAccessibleSelection" type="Accessible" line="25"/>
            <javadoc line="25">
                Returns an Accessible representing the specified selected child
                  of the object.  If there isn&apos;t a selection, or there are
                  fewer children selected than the integer passed in, the return
                  value will be null.
                  &lt;p&gt;Note that the index represents the i-th selected child, which
                  is different from the i-th child.                
                <param>
                    i the zero-based index of selected children                    
                </param>
                <return>
                    the i-th selected child                    
                </return>
                <see>
                    #getAccessibleSelectionCount                    
                </see>
            </javadoc>
            <method name="isAccessibleChildSelected" type="boolean" line="37"/>
            <javadoc line="37">
                Determines if the current child of this object is selected.                
                <return>
                    true if the current child of this object is selected; else false.                    
                </return>
                <param>
                    i the zero-based index of the child in this Accessible object.                    
                </param>
                <see>
                    AccessibleContext#getAccessibleChild                    
                </see>
            </javadoc>
            <method name="addAccessibleSelection" type="void" line="44"/>
            <javadoc line="44">
                Adds the specified Accessible child of the object to the object&apos;s
                  selection.  If the object supports multiple selections,
                  the specified child is added to any existing selection, otherwise
                  it replaces any existing selection in the object.  If the
                  specified child is already selected, this method has no effect.                
                <param>
                    i the zero-based index of the child                    
                </param>
                <see>
                    AccessibleContext#getAccessibleChild                    
                </see>
            </javadoc>
            <method name="removeAccessibleSelection" type="void" line="54"/>
            <javadoc line="54">
                Removes the specified child of the object from the object&apos;s
                  selection.  If the specified item isn&apos;t currently selected, this
                  method has no effect.                
                <param>
                    i the zero-based index of the child                    
                </param>
                <see>
                    AccessibleContext#getAccessibleChild                    
                </see>
            </javadoc>
            <method name="clearAccessibleSelection" type="void" line="62"/>
            <javadoc line="62">
                Clears the selection in the object, so that no children in the
                  object are selected.                
            </javadoc>
            <method name="selectAllAccessibleSelection" type="void" line="67"/>
            <javadoc line="67">
                Causes every child of the object to be selected
                  if the object supports multiple selections.                
            </javadoc>
        </interface>
    </source>