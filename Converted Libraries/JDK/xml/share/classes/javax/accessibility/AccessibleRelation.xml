<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.accessibility">
        <import package="java.util.Vector"/>
        <import package="java.util.Locale"/>
        <import package="java.util.MissingResourceException"/>
        <import package="java.util.ResourceBundle"/>
        <class name="AccessibleRelation" line="33">
            <extends class="AccessibleBundle"/>
            <comment line="53">
                The group of objects that participate in the relation.
                 The relation may be one-to-one or one-to-many.  For
                 example, in the case of a LABEL_FOR relation, the target
                 vector would contain a list of objects labeled by the object
                 that implements this AccessibleRelation.  In the case of a
                 MEMBER_OF relation, the target vector would contain all
                 of the components that are members of the same group as the
                 object that implements this AccessibleRelation.                
            </comment>
            <javadoc line="33">
                &lt;P&gt;Class AccessibleRelation describes a relation between the
                  object that implements the AccessibleRelation and one or more other
                  objects.  The actual relations that an object has with other
                  objects are defined as an AccessibleRelationSet, which is a composed
                  set of AccessibleRelations.
                  &lt;p&gt;The toDisplayString method allows you to obtain the localized string
                  for a locale independent key from a predefined ResourceBundle for the
                  keys defined in this class.
                  &lt;p&gt;The constants in this class present a strongly typed enumeration
                  of common object roles. If the constants in this class are not sufficient
                  to describe the role of an object, a subclass should be generated
                  from this class and it should provide constants in a similar manner.                
                <author>
                    Lynn Monsanto                    
                </author>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <declaration name="target" type="Object[]" line="62"/>
            <declaration name="LABEL_FOR" type="String" line="64"/>
            <javadoc line="64">
                Indicates an object is a label for one or more target objects.                
                <see>
                    #getTarget                    
                </see>
                <see>
                    #CONTROLLER_FOR                    
                </see>
                <see>
                    #CONTROLLED_BY                    
                </see>
                <see>
                    #LABELED_BY                    
                </see>
                <see>
                    #MEMBER_OF                    
                </see>
            </javadoc>
            <declaration name="LABELED_BY" type="String" line="75"/>
            <javadoc line="75">
                Indicates an object is labeled by one or more target objects.                
                <see>
                    #getTarget                    
                </see>
                <see>
                    #CONTROLLER_FOR                    
                </see>
                <see>
                    #CONTROLLED_BY                    
                </see>
                <see>
                    #LABEL_FOR                    
                </see>
                <see>
                    #MEMBER_OF                    
                </see>
            </javadoc>
            <declaration name="MEMBER_OF" type="String" line="86"/>
            <javadoc line="86">
                Indicates an object is a member of a group of one or more
                  target objects.                
                <see>
                    #getTarget                    
                </see>
                <see>
                    #CONTROLLER_FOR                    
                </see>
                <see>
                    #CONTROLLED_BY                    
                </see>
                <see>
                    #LABEL_FOR                    
                </see>
                <see>
                    #LABELED_BY                    
                </see>
            </javadoc>
            <declaration name="CONTROLLER_FOR" type="String" line="98"/>
            <javadoc line="98">
                Indicates an object is a controller for one or more target
                  objects.                
                <see>
                    #getTarget                    
                </see>
                <see>
                    #CONTROLLED_BY                    
                </see>
                <see>
                    #LABEL_FOR                    
                </see>
                <see>
                    #LABELED_BY                    
                </see>
                <see>
                    #MEMBER_OF                    
                </see>
            </javadoc>
            <declaration name="CONTROLLED_BY" type="String" line="110"/>
            <javadoc line="110">
                Indicates an object is controlled by one or more target
                  objects.                
                <see>
                    #getTarget                    
                </see>
                <see>
                    #CONTROLLER_FOR                    
                </see>
                <see>
                    #LABEL_FOR                    
                </see>
                <see>
                    #LABELED_BY                    
                </see>
                <see>
                    #MEMBER_OF                    
                </see>
            </javadoc>
            <declaration name="FLOWS_TO" type="String" line="122"/>
            <javadoc line="122">
                Indicates an object is logically contiguous with a second
                  object where the second object occurs after the object.
                  An example is a paragraph of text that runs to the end of
                  a page and continues on the next page with an intervening
                  text footer and/or text header.  The two parts of
                  the paragraph are separate text elements but are related
                  in that the second element is a continuation
                  of the first
                  element.  In other words, the first element &quot;flows to&quot;
                  the second element.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="FLOWS_FROM" type="String" line="138"/>
            <javadoc line="138">
                Indicates an object is logically contiguous with a second
                  object where the second object occurs before the object.
                  An example is a paragraph of text that runs to the end of
                  a page and continues on the next page with an intervening
                  text footer and/or text header.  The two parts of
                  the paragraph are separate text elements but are related
                  in that the second element is a continuation of the first
                  element.  In other words, the second element &quot;flows from&quot;
                  the second element.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="SUBWINDOW_OF" type="String" line="153"/>
            <javadoc line="153">
                Indicates that an object is a subwindow of one or more
                  objects.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="PARENT_WINDOW_OF" type="String" line="161"/>
            <javadoc line="161">
                Indicates that an object is a parent window of one or more
                  objects.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="EMBEDS" type="String" line="169"/>
            <javadoc line="169">
                Indicates that an object has one or more objects
                  embedded in it.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="EMBEDDED_BY" type="String" line="177"/>
            <javadoc line="177">
                Indicates that an object is embedded in one or more
                  objects.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="CHILD_NODE_OF" type="String" line="185"/>
            <javadoc line="185">
                Indicates that an object is a child node of one
                  or more objects.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="LABEL_FOR_PROPERTY" type="String" line="193"/>
            <javadoc line="193">
                Identifies that the target group for a label has changed                
            </javadoc>
            <declaration name="LABELED_BY_PROPERTY" type="String" line="198"/>
            <javadoc line="198">
                Identifies that the objects that are doing the labeling have changed                
            </javadoc>
            <declaration name="MEMBER_OF_PROPERTY" type="String" line="203"/>
            <javadoc line="203">
                Identifies that group membership has changed.                
            </javadoc>
            <declaration name="CONTROLLER_FOR_PROPERTY" type="String" line="208"/>
            <javadoc line="208">
                Identifies that the controller for the target object has changed                
            </javadoc>
            <declaration name="CONTROLLED_BY_PROPERTY" type="String" line="213"/>
            <javadoc line="213">
                Identifies that the target object that is doing the controlling has
                  changed                
            </javadoc>
            <declaration name="FLOWS_TO_PROPERTY" type="String" line="219"/>
            <javadoc line="219">
                Indicates the FLOWS_TO relation between two objects
                  has changed.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="FLOWS_FROM_PROPERTY" type="String" line="227"/>
            <javadoc line="227">
                Indicates the FLOWS_FROM relation between two objects
                  has changed.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="SUBWINDOW_OF_PROPERTY" type="String" line="235"/>
            <javadoc line="235">
                Indicates the SUBWINDOW_OF relation between two or more objects
                  has changed.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="PARENT_WINDOW_OF_PROPERTY" type="String" line="243"/>
            <javadoc line="243">
                Indicates the PARENT_WINDOW_OF relation between two or more objects
                  has changed.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="EMBEDS_PROPERTY" type="String" line="251"/>
            <javadoc line="251">
                Indicates the EMBEDS relation between two or more objects
                  has changed.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="EMBEDDED_BY_PROPERTY" type="String" line="259"/>
            <javadoc line="259">
                Indicates the EMBEDDED_BY relation between two or more objects
                  has changed.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="CHILD_NODE_OF_PROPERTY" type="String" line="267"/>
            <javadoc line="267">
                Indicates the CHILD_NODE_OF relation between two or more objects
                  has changed.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <javadoc line="275">
                Create a new AccessibleRelation using the given locale independent key.
                  The key String should be a locale independent key for the relation.
                  It is not intended to be used as the actual String to display
                  to the user.  To get the localized string, use toDisplayString.                
                <param>
                    key the locale independent name of the relation.                    
                </param>
                <see>
                    AccessibleBundle#toDisplayString                    
                </see>
            </javadoc>
            <method name="AccessibleRelation" type="constructor" line="284">
                <params>
                    <param name="key" type="String"/>
                </params>
            </method>
            <javadoc line="289">
                Creates a new AccessibleRelation using the given locale independent key.
                  The key String should be a locale independent key for the relation.
                  It is not intended to be used as the actual String to display
                  to the user.  To get the localized string, use toDisplayString.                
                <param>
                    key the locale independent name of the relation.                    
                </param>
                <param>
                    target the target object for this relation                    
                </param>
                <see>
                    AccessibleBundle#toDisplayString                    
                </see>
            </javadoc>
            <method name="AccessibleRelation" type="constructor" line="299">
                <params>
                    <param name="key" type="String"/>
                    <param name="target" type="Object"/>
                </params>
            </method>
            <javadoc line="305">
                Creates a new AccessibleRelation using the given locale independent key.
                  The key String should be a locale independent key for the relation.
                  It is not intended to be used as the actual String to display
                  to the user.  To get the localized string, use toDisplayString.                
                <param>
                    key the locale independent name of the relation.                    
                </param>
                <param>
                    target the target object(s) for this relation                    
                </param>
                <see>
                    AccessibleBundle#toDisplayString                    
                </see>
            </javadoc>
            <method name="AccessibleRelation" type="constructor" line="315">
                <params>
                    <param name="key" type="String"/>
                    <param name="target" type="Object[]"/>
                </params>
            </method>
            <javadoc line="320">
                Returns the key for this relation                
                <return>
                    the key for this relation                    
                </return>
                <see>
                    #CONTROLLER_FOR                    
                </see>
                <see>
                    #CONTROLLED_BY                    
                </see>
                <see>
                    #LABEL_FOR                    
                </see>
                <see>
                    #LABELED_BY                    
                </see>
                <see>
                    #MEMBER_OF                    
                </see>
            </javadoc>
            <method name="getKey" type="String" line="331"/>
            <javadoc line="335">
                Returns the target objects for this relation                
                <return>
                    an array containing the target objects for this relation                    
                </return>
            </javadoc>
            <method name="getTarget" type="Object[]" line="340">
                <scope line="341"/>
                <declaration name="retval" type="Object[]" line="344"/>
                <scope line="345"/>
            </method>
            <javadoc line="351">
                Sets the target object for this relation                
                <param>
                    target the target object for this relation                    
                </param>
            </javadoc>
            <method name="setTarget" type="void" line="356">
                <params>
                    <param name="target" type="Object"/>
                </params>
            </method>
            <javadoc line="361">
                Sets the target objects for this relation                
                <param>
                    target an array containing the target objects for this relation                    
                </param>
            </javadoc>
            <method name="setTarget" type="void" line="366">
                <params>
                    <param name="target" type="Object[]"/>
                </params>
            </method>
        </class>
    </source>