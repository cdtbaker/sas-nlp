<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.accessibility">
        <import package="java.util"/>
        <import package="java.awt"/>
        <import package="javax.swing.text"/>
        <interface name="AccessibleText">
            <javadoc line="34">
                &lt;P&gt;The AccessibleText interface should be implemented by all
                  classes that present textual information on the display.  This interface
                  provides the standard mechanism for an assistive technology to access
                  that text via its content, attributes, and spatial location.
                  Applications can determine if an object supports the AccessibleText
                  interface by first obtaining its AccessibleContext (see {@link Accessible})
                  and then calling the {@link AccessibleContext#getAccessibleText} method of
                  AccessibleContext.  If the return value is not null, the object supports this
                  interface.                
                <see>
                    Accessible                    
                </see>
                <see>
                    Accessible#getAccessibleContext                    
                </see>
                <see>
                    AccessibleContext                    
                </see>
                <see>
                    AccessibleContext#getAccessibleText                    
                </see>
                <author>
                    Peter Korn                    
                </author>
            </javadoc>
            <declaration name="CHARACTER" type="int" line="54"/>
            <javadoc line="54">
                Constant used to indicate that the part of the text that should be
                  retrieved is a character.                
                <see>
                    #getAtIndex                    
                </see>
                <see>
                    #getAfterIndex                    
                </see>
                <see>
                    #getBeforeIndex                    
                </see>
            </javadoc>
            <declaration name="WORD" type="int" line="64"/>
            <javadoc line="64">
                Constant used to indicate that the part of the text that should be
                  retrieved is a word.                
                <see>
                    #getAtIndex                    
                </see>
                <see>
                    #getAfterIndex                    
                </see>
                <see>
                    #getBeforeIndex                    
                </see>
            </javadoc>
            <declaration name="SENTENCE" type="int" line="74"/>
            <javadoc line="74">
                Constant used to indicate that the part of the text that should be
                  retrieved is a sentence.
                  A sentence is a string of words which expresses an assertion,
                  a question, a command, a wish, an exclamation, or the performance
                  of an action. In English locales, the string usually begins with
                  a capital letter and concludes with appropriate end punctuation;
                  such as a period, question or exclamation mark. Other locales may
                  use different capitalization and/or punctuation.                
                <see>
                    #getAtIndex                    
                </see>
                <see>
                    #getAfterIndex                    
                </see>
                <see>
                    #getBeforeIndex                    
                </see>
            </javadoc>
            <method name="getIndexAtPoint" type="int" line="91"/>
            <javadoc line="91">
                Given a point in local coordinates, return the zero-based index
                  of the character under that Point.  If the point is invalid,
                  this method returns -1.                
                <param>
                    p the Point in local coordinates                    
                </param>
                <return>
                    the zero-based index of the character under Point p; if
                      Point is invalid return -1.                    
                </return>
            </javadoc>
            <method name="getCharacterBounds" type="Rectangle" line="102"/>
            <javadoc line="102">
                Determines the bounding box of the character at the given
                  index into the string.  The bounds are returned in local
                  coordinates.  If the index is invalid an empty rectangle is returned.                
                <param>
                    i the index into the String                    
                </param>
                <return>
                    the screen coordinates of the character&apos;s bounding box,
                      if index is invalid return an empty rectangle.                    
                </return>
            </javadoc>
            <method name="getCharCount" type="int" line="113"/>
            <javadoc line="113">
                Returns the number of characters (valid indicies)                
                <return>
                    the number of characters                    
                </return>
            </javadoc>
            <method name="getCaretPosition" type="int" line="120"/>
            <javadoc line="120">
                Returns the zero-based offset of the caret.
                  Note: That to the right of the caret will have the same index
                  value as the offset (the caret is between two characters).                
                <return>
                    the zero-based offset of the caret.                    
                </return>
            </javadoc>
            <method name="getAtIndex" type="String" line="129"/>
            <javadoc line="129">
                Returns the String at a given index.                
                <param>
                    part the CHARACTER, WORD, or SENTENCE to retrieve                    
                </param>
                <param>
                    index an index within the text                    
                </param>
                <return>
                    the letter, word, or sentence                    
                </return>
            </javadoc>
            <method name="getAfterIndex" type="String" line="138"/>
            <javadoc line="138">
                Returns the String after a given index.                
                <param>
                    part the CHARACTER, WORD, or SENTENCE to retrieve                    
                </param>
                <param>
                    index an index within the text                    
                </param>
                <return>
                    the letter, word, or sentence                    
                </return>
            </javadoc>
            <method name="getBeforeIndex" type="String" line="147"/>
            <javadoc line="147">
                Returns the String before a given index.                
                <param>
                    part the CHARACTER, WORD, or SENTENCE to retrieve                    
                </param>
                <param>
                    index an index within the text                    
                </param>
                <return>
                    the letter, word, or sentence                    
                </return>
            </javadoc>
            <method name="getCharacterAttribute" type="AttributeSet" line="156"/>
            <javadoc line="156">
                Returns the AttributeSet for a given character at a given index                
                <param>
                    i the zero-based index into the text                    
                </param>
                <return>
                    the AttributeSet of the character                    
                </return>
            </javadoc>
            <method name="getSelectionStart" type="int" line="164"/>
            <javadoc line="164">
                Returns the start offset within the selected text.
                  If there is no selection, but there is
                  a caret, the start and end offsets will be the same.                
                <return>
                    the index into the text of the start of the selection                    
                </return>
            </javadoc>
            <method name="getSelectionEnd" type="int" line="173"/>
            <javadoc line="173">
                Returns the end offset within the selected text.
                  If there is no selection, but there is
                  a caret, the start and end offsets will be the same.                
                <return>
                    the index into teh text of the end of the selection                    
                </return>
            </javadoc>
            <method name="getSelectedText" type="String" line="182"/>
            <javadoc line="182">
                Returns the portion of the text that is selected.                
                <return>
                    the String portion of the text that is selected                    
                </return>
            </javadoc>
        </interface>
    </source>