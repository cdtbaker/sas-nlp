<?xml version="1.0" encoding="UTF-8"?>
    <source package="javax.accessibility">
        <import package="java.util.Vector"/>
        <import package="java.util.Locale"/>
        <import package="java.util.MissingResourceException"/>
        <import package="java.util.ResourceBundle"/>
        <class name="AccessibleStateSet" line="6">
            <javadoc line="6">
                Class AccessibleStateSet determines a component&apos;s state set.  The state set
                  of a component is a set of AccessibleState objects and descriptions. E.G., The
                  current overall state of the object, such as whether it is enabled,
                  has focus, etc.                
                <see>
                    AccessibleState                    
                </see>
                <author>
                    Willie Walker                    
                </author>
            </javadoc>
            <declaration name="states" type="Vector&amp;lt;AccessibleState&amp;gt;" line="15"/>
            <javadoc line="15">
                Each entry in the Vector represents an AccessibleState.                
                <see>
                    #add                    
                </see>
                <see>
                    #addAll                    
                </see>
                <see>
                    #remove                    
                </see>
                <see>
                    #contains                    
                </see>
                <see>
                    #toArray                    
                </see>
                <see>
                    #clear                    
                </see>
            </javadoc>
            <javadoc line="25">
                Creates a new empty state set.                
            </javadoc>
            <method name="AccessibleStateSet" type="constructor" line="28"/>
            <javadoc line="31">
                Creates a new state with the initial set of states contained in
                  the array of states passed in.  Duplicate entries are ignored.                
                <param>
                    states an array of AccessibleState describing the state set.                    
                </param>
            </javadoc>
            <method name="AccessibleStateSet" type="constructor" line="36">
                <params>
                    <param name="states" type="AccessibleState[]"/>
                </params>
                <scope line="37">
                    <scope line="39">
                        <scope line="40"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="46">
                Adds a new state to the current state set if it is not already
                  present.  If the state is already in the state set, the state
                  set is unchanged and the return value is false.  Otherwise,
                  the state is added to the state set and the return value is
                  true.                
                <param>
                    state the state to add to the state set                    
                </param>
                <return>
                    true if state is added to the state set; false if the state set
                      is unchanged                    
                </return>
            </javadoc>
            <method name="add" type="boolean" line="56">
                <params>
                    <param name="state" type="AccessibleState"/>
                </params>
                <scope line="57"/>
                <scope line="60"/>
                <scope line="64"/>
            </method>
            <javadoc line="68">
                Adds all of the states to the existing state set.  Duplicate entries
                  are ignored.                
                <param>
                    states  AccessibleState array describing the state set.                    
                </param>
            </javadoc>
            <method name="addAll" type="void" line="73">
                <params>
                    <param name="states" type="AccessibleState[]"/>
                </params>
                <scope line="74">
                    <scope line="75"/>
                    <scope line="78">
                        <scope line="79"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="85">
                Removes a state from the current state set.  If the state is not
                  in the set, the state set will be unchanged and the return value
                  will be false.  If the state is in the state set, it will be removed
                  from the set and the return value will be true.                
                <param>
                    state the state to remove from the state set                    
                </param>
                <return>
                    true if the state is in the state set; false if the state set
                      will be unchanged                    
                </return>
            </javadoc>
            <method name="remove" type="boolean" line="94">
                <params>
                    <param name="state" type="AccessibleState"/>
                </params>
                <scope line="95"/>
                <scope line="98"/>
            </method>
            <javadoc line="102">
                Removes all the states from the current state set.                
            </javadoc>
            <method name="clear" type="void" line="105">
                <scope line="106"/>
            </method>
            <javadoc line="110">
                Checks if the current state is in the state set.                
                <param>
                    state the state                    
                </param>
                <return>
                    true if the state is in the state set; otherwise false                    
                </return>
            </javadoc>
            <method name="contains" type="boolean" line="115">
                <params>
                    <param name="state" type="AccessibleState"/>
                </params>
                <scope line="116"/>
                <scope line="119"/>
            </method>
            <javadoc line="123">
                Returns the current state set as an array of AccessibleState                
                <return>
                    AccessibleState array containing the current state.                    
                </return>
            </javadoc>
            <method name="toArray" type="AccessibleState[]" line="127">
                <scope line="128"/>
                <scope line="131">
                    <declaration name="stateArray" type="AccessibleState[]" line="132"/>
                    <scope line="133"/>
                </scope>
            </method>
            <javadoc line="139">
                Creates a localized String representing all the states in the set
                  using the default locale.                
                <return>
                    comma separated localized String                    
                </return>
                <see>
                    AccessibleBundle#toDisplayString                    
                </see>
            </javadoc>
            <method name="toString" type="String" line="145">
                <declaration name="ret" type="String" line="146"/>
                <scope line="147">
                    <scope line="149"/>
                </scope>
            </method>
        </class>
    </source>