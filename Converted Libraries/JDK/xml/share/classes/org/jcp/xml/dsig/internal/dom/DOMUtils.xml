<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.jcp.xml.dsig.internal.dom">
        <import package="java.util"/>
        <import package="java.security.spec.AlgorithmParameterSpec"/>
        <import package="org.w3c.dom.Attr"/>
        <import package="org.w3c.dom.Document"/>
        <import package="org.w3c.dom.Element"/>
        <import package="org.w3c.dom.Node"/>
        <import package="org.w3c.dom.NodeList"/>
        <import package="javax.xml.crypto"/>
        <import package="javax.xml.crypto.dsig.dom.DOMSignContext"/>
        <import package="javax.xml.crypto.dsig"/>
        <import package="javax.xml.crypto.dsig.spec"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.IdResolver"/>
        <class name="DOMUtils" line="43">
            <comment line="51">
                class cannot be instantiated                
            </comment>
            <javadoc line="43">
                Useful static DOM utility methods.                
                <author>
                    Sean Mullan                    
                </author>
            </javadoc>
            <method name="DOMUtils" type="constructor" line="51"/>
            <javadoc line="53">
                Returns the owner document of the specified node.                
                <param>
                    node the node                    
                </param>
                <return>
                    the owner document                    
                </return>
            </javadoc>
            <method name="getOwnerDocument" type="Document" line="59">
                <params>
                    <param name="node" type="Node"/>
                </params>
                <scope line="60"/>
                <scope line="62"/>
            </method>
            <javadoc line="67">
                Creates an element in the specified namespace, with the specified tag
                  and namespace prefix.                
                <param>
                    doc the owner document                    
                </param>
                <param>
                    tag the tag                    
                </param>
                <param>
                    nsURI the namespace URI                    
                </param>
                <param>
                    prefix the namespace prefix                    
                </param>
                <return>
                    the newly created element                    
                </return>
            </javadoc>
            <method name="createElement" type="Element" line="78">
                <params>
                    <param name="doc" type="Document"/>
                    <param name="tag" type="String"/>
                    <param name="nsURI" type="String"/>
                    <param name="prefix" type="String"/>
                </params>
                <declaration name="qName" type="String" line="79"/>
            </method>
            <javadoc line="84">
                Sets an element&apos;s attribute (using DOM level 2) with the
                  specified value and namespace prefix.                
                <param>
                    elem the element to set the attribute on                    
                </param>
                <param>
                    name the name of the attribute                    
                </param>
                <param>
                    value the attribute value. If null, no attribute is set.                    
                </param>
            </javadoc>
            <method name="setAttribute" type="void" line="92">
                <params>
                    <param name="elem" type="Element"/>
                    <param name="name" type="String"/>
                    <param name="value" type="String"/>
                </params>
            </method>
            <javadoc line="97">
                Sets an element&apos;s attribute (using DOM level 2) with the
                  specified value and namespace prefix AND registers the ID value with
                  the specified element. This is for resolving same-document
                  ID references.                
                <param>
                    elem the element to set the attribute on                    
                </param>
                <param>
                    name the name of the attribute                    
                </param>
                <param>
                    value the attribute value. If null, no attribute is set.                    
                </param>
            </javadoc>
            <method name="setAttributeID" type="void" line="107">
                <params>
                    <param name="elem" type="Element"/>
                    <param name="name" type="String"/>
                    <param name="value" type="String"/>
                </params>
            </method>
            <javadoc line="113">
                Returns the first child element of the specified node, or null if there
                  is no such element.                
                <param>
                    node the node                    
                </param>
                <return>
                    the first child element of the specified node, or null if there
                      is no such element                    
                </return>
                <throws>
                    NullPointerException if <code>node == null</code>                    
                </throws>
            </javadoc>
            <method name="getFirstChildElement" type="Element" line="122">
                <params>
                    <param name="node" type="Node"/>
                </params>
                <declaration name="child" type="Node" line="123"/>
                <scope line="124"/>
            </method>
            <javadoc line="130">
                Returns the last child element of the specified node, or null if there
                  is no such element.                
                <param>
                    node the node                    
                </param>
                <return>
                    the last child element of the specified node, or null if there
                      is no such element                    
                </return>
                <throws>
                    NullPointerException if <code>node == null</code>                    
                </throws>
            </javadoc>
            <method name="getLastChildElement" type="Element" line="139">
                <params>
                    <param name="node" type="Node"/>
                </params>
                <declaration name="child" type="Node" line="140"/>
                <scope line="141"/>
            </method>
            <javadoc line="147">
                Returns the next sibling element of the specified node, or null if there
                  is no such element.                
                <param>
                    node the node                    
                </param>
                <return>
                    the next sibling element of the specified node, or null if there
                      is no such element                    
                </return>
                <throws>
                    NullPointerException if <code>node == null</code>                    
                </throws>
            </javadoc>
            <method name="getNextSiblingElement" type="Element" line="156">
                <params>
                    <param name="node" type="Node"/>
                </params>
                <declaration name="sibling" type="Node" line="157"/>
                <scope line="158"/>
            </method>
            <javadoc line="164">
                Returns the attribute value for the attribute with the specified name.
                  Returns null if there is no such attribute, or
                  the empty string if the attribute value is empty.
                  &lt;p&gt;This works around a limitation of the DOM
                  &lt;code&gt;Element.getAttributeNode&lt;/code&gt; method, which does not distinguish
                  between an unspecified attribute and an attribute with a value of
                  &quot;&quot; (it returns &quot;&quot; for both cases).                
                <param>
                    elem the element containing the attribute                    
                </param>
                <param>
                    name the name of the attribute                    
                </param>
                <return>
                    the attribute value (may be null if unspecified)                    
                </return>
            </javadoc>
            <method name="getAttributeValue" type="String" line="178">
                <params>
                    <param name="elem" type="Element"/>
                    <param name="name" type="String"/>
                </params>
                <declaration name="attr" type="Attr" line="179"/>
            </method>
            <javadoc line="183">
                Returns a Set of &lt;code&gt;Node&lt;/code&gt;s, backed by the specified
                  &lt;code&gt;NodeList&lt;/code&gt;.                
                <param>
                    nl the NodeList                    
                </param>
                <return>
                    a Set of Nodes                    
                </return>
            </javadoc>
            <method name="nodeSet" type="Set" line="190">
                <params>
                    <param name="nl" type="NodeList"/>
                </params>
            </method>
            <class name="NodeSet" line="194">
                <extends class="AbstractSet"/>
                <declaration name="nl" type="NodeList" line="195"/>
                <method name="NodeSet" type="constructor" line="196">
                    <params>
                        <param name="nl" type="NodeList"/>
                    </params>
                </method>
                <method name="size" type="int" line="200"/>
                <method name="iterator" type="Iterator" line="201">
                    <anonymous_class line="202">
                        <declaration name="index" type="int" line="203"/>
                        <method name="remove" type="void" line="205"/>
                        <method name="next" type="Object" line="208">
                            <scope line="209"/>
                        </method>
                        <method name="hasNext" type="boolean" line="214"/>
                    </anonymous_class>
                </method>
            </class>
            <javadoc line="221">
                Returns the prefix associated with the specified namespace URI                
                <param>
                    context contains the namespace map                    
                </param>
                <param>
                    nsURI the namespace URI                    
                </param>
                <return>
                    the prefix associated with the specified namespace URI, or
                      null if not set                    
                </return>
            </javadoc>
            <method name="getNSPrefix" type="String" line="229">
                <params>
                    <param name="context" type="XMLCryptoContext"/>
                    <param name="nsURI" type="String"/>
                </params>
                <scope line="230"/>
                <scope line="233"/>
            </method>
            <javadoc line="238">
                Returns the prefix associated with the XML Signature namespace URI                
                <param>
                    context contains the namespace map                    
                </param>
                <return>
                    the prefix associated with the specified namespace URI, or
                      null if not set                    
                </return>
            </javadoc>
            <method name="getSignaturePrefix" type="String" line="245">
                <params>
                    <param name="context" type="XMLCryptoContext"/>
                </params>
            </method>
            <javadoc line="249">
                Removes all children nodes from the specified node.                
                <param>
                    node the parent node whose children are to be removed                    
                </param>
            </javadoc>
            <method name="removeAllChildren" type="void" line="254">
                <params>
                    <param name="node" type="Node"/>
                </params>
                <declaration name="children" type="NodeList" line="255"/>
                <scope line="256"/>
            </method>
            <javadoc line="261">
                Compares 2 nodes for equality. Implementation is not complete.                
            </javadoc>
            <method name="nodesEqual" type="boolean" line="264">
                <params>
                    <param name="thisNode" type="Node"/>
                    <param name="otherNode" type="Node"/>
                </params>
                <comment line="271">
                    FIXME - test content, etc                    
                </comment>
                <scope line="265"/>
                <scope line="268"/>
            </method>
            <javadoc line="275">
                Checks if child element has same owner document before
                  appending to the parent, and imports it to the parent&apos;s document
                  if necessary.                
            </javadoc>
            <method name="appendChild" type="void" line="280">
                <params>
                    <param name="parent" type="Node"/>
                    <param name="child" type="Node"/>
                </params>
                <declaration name="ownerDoc" type="Document" line="281"/>
                <scope line="282"/>
                <scope line="284"/>
            </method>
            <method name="paramsEqual" type="boolean" line="290">
                <params>
                    <param name="spec1" type="AlgorithmParameterSpec"/>
                    <param name="spec2" type="AlgorithmParameterSpec"/>
                </params>
                <scope line="291"/>
                <scope line="295"/>
                <scope line="300"/>
                <scope line="305"/>
                <scope line="310"/>
            </method>
            <method name="paramsEqual" type="boolean" line="318">
                <params>
                    <param name="spec1" type="XPathFilter2ParameterSpec"/>
                    <param name="spec2" type="XPathFilter2ParameterSpec"/>
                </params>
                <declaration name="types" type="List" line="320"/>
                <declaration name="otypes" type="List" line="321"/>
                <declaration name="size" type="int" line="322"/>
                <scope line="323"/>
                <scope line="326">
                    <declaration name="type" type="XPathType" line="327"/>
                    <declaration name="otype" type="XPathType" line="328"/>
                    <scope line="331"/>
                </scope>
            </method>
            <method name="paramsEqual" type="boolean" line="339">
                <params>
                    <param name="spec1" type="ExcC14NParameterSpec"/>
                    <param name="spec2" type="ExcC14NParameterSpec"/>
                </params>
            </method>
            <method name="paramsEqual" type="boolean" line="344">
                <params>
                    <param name="spec1" type="XPathFilterParameterSpec"/>
                    <param name="spec2" type="XPathFilterParameterSpec"/>
                </params>
            </method>
            <method name="paramsEqual" type="boolean" line="350">
                <params>
                    <param name="spec1" type="XSLTTransformParameterSpec"/>
                    <param name="spec2" type="XSLTTransformParameterSpec"/>
                </params>
                <declaration name="ostylesheet" type="XMLStructure" line="352"/>
                <scope line="353"/>
                <declaration name="ostylesheetElem" type="Node" line="356"/>
                <declaration name="stylesheet" type="XMLStructure" line="358"/>
                <declaration name="stylesheetElem" type="Node" line="359"/>
            </method>
        </class>
    </source>