<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.jcp.xml.dsig.internal.dom">
        <import package="java.io.OutputStream"/>
        <import package="java.security.InvalidAlgorithmParameterException"/>
        <import package="java.security.Provider"/>
        <import package="org.w3c.dom.Element"/>
        <import package="javax.xml.crypto"/>
        <import package="javax.xml.crypto.dsig"/>
        <class name="DOMCanonicalizationMethod" line="38">
            <extends class="DOMTransform"/>
            <implements interface="CanonicalizationMethod"/>
            <javadoc line="38">
                DOM-based abstract implementation of CanonicalizationMethod.                
                <author>
                    Sean Mullan                    
                </author>
            </javadoc>
            <javadoc line="46">
                Creates a &lt;code&gt;DOMCanonicalizationMethod&lt;/code&gt;.                
                <param>
                    spi TransformService                    
                </param>
            </javadoc>
            <method name="DOMCanonicalizationMethod" type="constructor" line="52">
                <params>
                    <param name="spi" type="TransformService"/>
                </params>
            </method>
            <javadoc line="56">
                Creates a &lt;code&gt;DOMCanonicalizationMethod&lt;/code&gt; from an element. This
                  ctor invokes the abstract {@link #unmarshalParams unmarshalParams}method to unmarshal any algorithm-specific input parameters.                
                <param>
                    cmElem a CanonicalizationMethod element                    
                </param>
            </javadoc>
            <method name="DOMCanonicalizationMethod" type="constructor" line="64">
                <params>
                    <param name="cmElem" type="Element"/>
                    <param name="context" type="XMLCryptoContext"/>
                    <param name="provider" type="Provider"/>
                </params>
            </method>
            <javadoc line="68">
                Canonicalizes the specified data using the underlying canonicalization
                  algorithm. This is a convenience method that is equivalent to invoking
                  the {@link #transform transform} method.                
                <param>
                    data the data to be canonicalized                    
                </param>
                <param>
                    xc the &lt;code&gt;XMLCryptoContext&lt;/code&gt; containing
                      additional context (may be &lt;code&gt;null&lt;/code&gt; if not applicable)                    
                </param>
                <return>
                    the canonicalized data                    
                </return>
                <throws>
                    NullPointerException if &lt;code&gt;data&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;                    
                </throws>
                <throws>
                    TransformException if an unexpected error occurs while
                      canonicalizing the data                    
                </throws>
            </javadoc>
            <method name="canonicalize" type="Data" line="82">
                <params>
                    <param name="data" type="Data"/>
                    <param name="xc" type="XMLCryptoContext"/>
                </params>
            </method>
            <method name="canonicalize" type="Data" line="87">
                <params>
                    <param name="data" type="Data"/>
                    <param name="xc" type="XMLCryptoContext"/>
                    <param name="os" type="OutputStream"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="91">
                <params>
                    <param name="o" type="Object"/>
                </params>
                <scope line="92"/>
                <scope line="96"/>
                <declaration name="ocm" type="CanonicalizationMethod" line="99"/>
            </method>
        </class>
    </source>