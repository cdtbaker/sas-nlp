<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.jcp.xml.dsig.internal.dom">
        <import package="javax.xml.crypto"/>
        <import package="javax.xml.crypto.dom.DOMCryptoContext"/>
        <import package="javax.xml.crypto.dsig"/>
        <import package="java.util"/>
        <import package="org.w3c.dom.Document"/>
        <import package="org.w3c.dom.Element"/>
        <import package="org.w3c.dom.Node"/>
        <import package="org.w3c.dom.NodeList"/>
        <class name="DOMSignatureProperty" line="39">
            <extends class="DOMStructure"/>
            <implements interface="SignatureProperty"/>
            <javadoc line="39">
                DOM-based implementation of SignatureProperty.                
                <author>
                    Sean Mullan                    
                </author>
            </javadoc>
            <declaration name="id" type="String" line="47"/>
            <declaration name="target" type="String" line="48"/>
            <declaration name="content" type="List" line="49"/>
            <javadoc line="51">
                Creates a &lt;code&gt;SignatureProperty&lt;/code&gt; from the specified parameters.                
                <param>
                    content a list of one or more {@link XMLStructure}s. The list
                      is defensively copied to protect against subsequent modification.                    
                </param>
                <param>
                    target the target URI                    
                </param>
                <param>
                    id the Id (may be <code>null</code>)                    
                </param>
                <return>
                    a <code>SignatureProperty</code>                    
                </return>
                <throws>
                    ClassCastException if <code>content</code> contains any
                      entries that are not of type {@link XMLStructure}                    
                </throws>
                <throws>
                    IllegalArgumentException if <code>content</code> is empty                    
                </throws>
                <throws>
                    NullPointerException if <code>content</code> or
                      <code>target</code> is <code>null</code>                    
                </throws>
            </javadoc>
            <method name="DOMSignatureProperty" type="constructor" line="65">
                <params>
                    <param name="content" type="List"/>
                    <param name="target" type="String"/>
                    <param name="id" type="String"/>
                </params>
                <scope line="66"/>
                <scope line="68"/>
                <scope line="70"/>
                <scope line="72">
                    <declaration name="contentCopy" type="List" line="73"/>
                    <scope line="74">
                        <scope line="75"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="86">
                Creates a &lt;code&gt;DOMSignatureProperty&lt;/code&gt; from an element.                
                <param>
                    propElem a SignatureProperty element                    
                </param>
            </javadoc>
            <method name="DOMSignatureProperty" type="constructor" line="91">
                <params>
                    <param name="propElem" type="Element"/>
                </params>
                <comment line="92">
                    unmarshal attributes                    
                </comment>
                <scope line="94"/>
                <declaration name="nodes" type="NodeList" line="99"/>
                <declaration name="length" type="int" line="100"/>
                <declaration name="content" type="List" line="101"/>
                <scope line="102"/>
                <scope line="105"/>
                <scope line="107"/>
            </method>
            <method name="getContent" type="List" line="112"/>
            <method name="getId" type="String" line="116"/>
            <method name="getTarget" type="String" line="120"/>
            <method name="marshal" type="void" line="125">
                <params>
                    <param name="parent" type="Node"/>
                    <param name="dsPrefix" type="String"/>
                    <param name="context" type="DOMCryptoContext"/>
                </params>
                <comment line="131">
                    set attributes                    
                </comment>
                <comment line="135">
                    create and append any elements and mixed content                    
                </comment>
                <declaration name="ownerDoc" type="Document" line="126"/>
                <declaration name="propElem" type="Element" line="128"/>
                <scope line="136">
                    <declaration name="property" type="javax.xml.crypto.dom.DOMStructure" line="137"/>
                </scope>
            </method>
            <method name="equals" type="boolean" line="145">
                <params>
                    <param name="o" type="Object"/>
                </params>
                <scope line="146"/>
                <scope line="150"/>
                <declaration name="osp" type="SignatureProperty" line="153"/>
                <declaration name="idsEqual" type="boolean" line="155"/>
            </method>
            <method name="equalsContent" type="boolean" line="162">
                <params>
                    <param name="otherContent" type="List"/>
                </params>
                <declaration name="osize" type="int" line="163"/>
                <scope line="164"/>
                <scope line="167">
                    <declaration name="oxs" type="XMLStructure" line="168"/>
                    <declaration name="xs" type="XMLStructure" line="169"/>
                    <scope line="170">
                        <scope line="171"/>
                        <declaration name="onode" type="Node" line="174"/>
                        <declaration name="node" type="Node" line="176"/>
                        <scope line="178"/>
                    </scope>
                    <scope line="181">
                        <scope line="182"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>