<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.jcp.xml.dsig.internal.dom">
        <import package="javax.xml.crypto"/>
        <import package="javax.xml.crypto.dom"/>
        <import package="javax.xml.crypto.dsig"/>
        <import package="javax.xml.crypto.dsig.dom.DOMSignContext"/>
        <import package="javax.xml.crypto.dsig.dom.DOMValidateContext"/>
        <import package="javax.xml.crypto.dsig.keyinfo.KeyInfo"/>
        <import package="java.io"/>
        <import package="java.security.InvalidKeyException"/>
        <import package="java.security.Key"/>
        <import package="java.security.Provider"/>
        <import package="java.util.Collections"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.List"/>
        <import package="java.util.logging.Level"/>
        <import package="java.util.logging.Logger"/>
        <import package="org.w3c.dom.Document"/>
        <import package="org.w3c.dom.Element"/>
        <import package="org.w3c.dom.Node"/>
        <import package="com.sun.org.apache.xml.internal.security.exceptions.Base64DecodingException"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.Base64"/>
        <class name="DOMXMLSignature" line="60">
            <extends class="DOMStructure"/>
            <implements interface="XMLSignature"/>
            <javadoc line="60">
                DOM-based implementation of XMLSignature.                
                <author>
                    Sean Mullan                    
                </author>
                <author>
                    Joyce Leung                    
                </author>
            </javadoc>
            <declaration name="log" type="Logger" line="69"/>
            <declaration name="id" type="String" line="70"/>
            <declaration name="sv" type="SignatureValue" line="71"/>
            <declaration name="ki" type="KeyInfo" line="72"/>
            <declaration name="objects" type="List" line="73"/>
            <declaration name="si" type="SignedInfo" line="74"/>
            <declaration name="ownerDoc" type="Document" line="75"/>
            <declaration name="localSigElem" type="Element" line="76"/>
            <declaration name="sigElem" type="Element" line="77"/>
            <declaration name="validationStatus" type="boolean" line="78"/>
            <declaration name="validated" type="boolean" line="79"/>
            <declaration name="ksr" type="KeySelectorResult" line="80"/>
            <declaration name="signatureIdMap" type="HashMap" line="81"/>
            <scope line="83"/>
            <javadoc line="87">
                Creates a &lt;code&gt;DOMXMLSignature&lt;/code&gt; from the specified components.                
                <param>
                    si the <code>SignedInfo</code>                    
                </param>
                <param>
                    ki the <code>KeyInfo</code>, or <code>null</code> if not specified                    
                </param>
                <param>
                    objs a list of <code>XMLObject</code>s or <code>null</code>
                      if not specified. The list is copied to protect against subsequent
                      modification.                    
                </param>
                <param>
                    id an optional id (specify <code>null</code> to omit)                    
                </param>
                <param>
                    signatureValueId an optional id (specify <code>null</code> to
                      omit)                    
                </param>
                <throws>
                    NullPointerException if <code>si</code> is <code>null</code>                    
                </throws>
            </javadoc>
            <method name="DOMXMLSignature" type="constructor" line="102">
                <params>
                    <param name="si" type="SignedInfo"/>
                    <param name="ki" type="KeyInfo"/>
                    <param name="objs" type="List"/>
                    <param name="id" type="String"/>
                    <param name="signatureValueId" type="String"/>
                </params>
                <scope line="103"/>
                <scope line="109"/>
                <scope line="111">
                    <declaration name="objsCopy" type="List" line="112"/>
                    <scope line="113">
                        <scope line="114"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="124">
                Creates a &lt;code&gt;DOMXMLSignature&lt;/code&gt; from XML.                
                <param>
                    sigElem Signature element                    
                </param>
                <throws>
                    MarshalException if XMLSignature cannot be unmarshalled                    
                </throws>
            </javadoc>
            <method name="DOMXMLSignature" type="constructor" line="131">
                <params>
                    <param name="sigElem" type="Element"/>
                    <param name="context" type="XMLCryptoContext"/>
                    <param name="provider" type="Provider"/>
                </params>
                <comment line="135">
                    get Id attribute, if specified                    
                </comment>
                <comment line="138">
                    unmarshal SignedInfo                    
                </comment>
                <comment line="142">
                    unmarshal SignatureValue                    
                </comment>
                <comment line="146">
                    unmarshal KeyInfo, if specified                    
                </comment>
                <comment line="153">
                    unmarshal Objects, if specified                    
                </comment>
                <declaration name="siElem" type="Element" line="139"/>
                <declaration name="sigValElem" type="Element" line="143"/>
                <declaration name="nextSibling" type="Element" line="147"/>
                <scope line="148"/>
                <scope line="154"/>
                <scope line="156">
                    <declaration name="tempObjects" type="List" line="157"/>
                    <scope line="158"/>
                </scope>
            </method>
            <method name="getId" type="String" line="167"/>
            <method name="getKeyInfo" type="KeyInfo" line="171"/>
            <method name="getSignedInfo" type="SignedInfo" line="175"/>
            <method name="getObjects" type="List" line="179"/>
            <method name="getSignatureValue" type="SignatureValue" line="183"/>
            <method name="getKeySelectorResult" type="KeySelectorResult" line="187"/>
            <method name="marshal" type="void" line="192">
                <params>
                    <param name="parent" type="Node"/>
                    <param name="dsPrefix" type="String"/>
                    <param name="context" type="DOMCryptoContext"/>
                </params>
            </method>
            <method name="marshal" type="void" line="197">
                <params>
                    <param name="parent" type="Node"/>
                    <param name="nextSibling" type="Node"/>
                    <param name="dsPrefix" type="String"/>
                    <param name="context" type="DOMCryptoContext"/>
                </params>
                <comment line="203">
                    append xmlns attribute                    
                </comment>
                <comment line="213">
                    create and append SignedInfo element                    
                </comment>
                <comment line="216">
                    create and append SignatureValue element                    
                </comment>
                <comment line="219">
                    create and append KeyInfo element if necessary                    
                </comment>
                <comment line="224">
                    create and append Object elements if necessary                    
                </comment>
                <comment line="229">
                    append Id attribute                    
                </comment>
                <scope line="204"/>
                <scope line="207"/>
                <scope line="220"/>
                <scope line="225"/>
            </method>
            <method name="validate" type="boolean" line="236">
                <params>
                    <param name="vc" type="XMLValidateContext"/>
                </params>
                <comment line="251">
                    validate the signature                    
                </comment>
                <comment line="259">
                    validate all References                    
                </comment>
                <comment line="280">
                    validate Manifests, if property set                    
                </comment>
                <scope line="238"/>
                <scope line="242"/>
                <scope line="247"/>
                <declaration name="sigValidity" type="boolean" line="252"/>
                <scope line="253"/>
                <declaration name="refs" type="List" line="260"/>
                <declaration name="validateRefs" type="boolean" line="261"/>
                <scope line="262">
                    <declaration name="ref" type="Reference" line="263"/>
                    <declaration name="refValid" type="boolean" line="264"/>
                    <scope line="265"/>
                </scope>
                <scope line="271">
                    <scope line="272"/>
                </scope>
                <declaration name="validateMans" type="boolean" line="281"/>
                <scope line="283">
                    <scope line="285">
                        <declaration name="xo" type="XMLObject" line="286"/>
                        <declaration name="content" type="List" line="287"/>
                        <declaration name="csize" type="int" line="288"/>
                        <scope line="289">
                            <declaration name="xs" type="XMLStructure" line="290"/>
                            <scope line="291">
                                <scope line="292"/>
                                <declaration name="man" type="Manifest" line="295"/>
                                <declaration name="manRefs" type="List" line="296"/>
                                <declaration name="rsize" type="int" line="297"/>
                                <scope line="298">
                                    <declaration name="ref" type="Reference" line="299"/>
                                    <declaration name="refValid" type="boolean" line="300"/>
                                    <scope line="301"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="sign" type="void" line="318">
                <params>
                    <param name="signContext" type="XMLSignContext"/>
                </params>
                <comment line="328">
                    generate references and signature value                    
                </comment>
                <comment line="331">
                    traverse the Signature and register all objects with IDs that                    
                </comment>
                <comment line="332">
                    may contain References                    
                </comment>
                <comment line="359">
                    always add SignedInfo references after Manifest references so                    
                </comment>
                <comment line="360">
                    that Manifest reference are digested first                    
                </comment>
                <comment line="363">
                    generate/digest each reference                    
                </comment>
                <comment line="369">
                    do final sweep to digest any references that were skipped or missed                    
                </comment>
                <comment line="393">
                    calculate signature value                    
                </comment>
                <scope line="319"/>
                <declaration name="context" type="DOMSignContext" line="322"/>
                <scope line="323"/>
                <declaration name="allReferences" type="List" line="329"/>
                <declaration name="refs" type="List" line="336"/>
                <scope line="337">
                    <declaration name="ref" type="Reference" line="338"/>
                </scope>
                <scope line="341">
                    <declaration name="obj" type="XMLObject" line="342"/>
                    <declaration name="content" type="List" line="344"/>
                    <scope line="345">
                        <declaration name="xs" type="XMLStructure" line="346"/>
                        <scope line="347">
                            <declaration name="man" type="Manifest" line="348"/>
                            <declaration name="manRefs" type="List" line="350"/>
                            <scope line="351">
                                <declaration name="ref" type="Reference" line="352"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="364">
                    <declaration name="ref" type="DOMReference" line="365"/>
                </scope>
                <scope line="370">
                    <declaration name="ref" type="DOMReference" line="371"/>
                    <scope line="372"/>
                </scope>
                <declaration name="signingKey" type="Key" line="378"/>
                <declaration name="ksr" type="KeySelectorResult" line="379"/>
                <scope line="380">
                    <scope line="385"/>
                </scope>
                <scope line="389"/>
                <declaration name="val" type="byte[]" line="394"/>
                <scope line="395"/>
                <scope line="398"/>
                <scope line="402"/>
            </method>
            <method name="equals" type="boolean" line="411">
                <params>
                    <param name="o" type="Object"/>
                </params>
                <scope line="412"/>
                <scope line="416"/>
                <declaration name="osig" type="XMLSignature" line="419"/>
                <declaration name="idEqual" type="boolean" line="421"/>
                <declaration name="keyInfoEqual" type="boolean" line="423"/>
            </method>
            <method name="digestReference" type="void" line="434">
                <params>
                    <param name="ref" type="DOMReference"/>
                    <param name="signContext" type="XMLSignContext"/>
                </params>
                <comment line="438">
                    check dependencies                    
                </comment>
                <comment line="455">
                    if uri=&quot;&quot; and there are XPath Transforms, there may be                    
                </comment>
                <comment line="456">
                    reference dependencies in the XPath Transform - so be on                    
                </comment>
                <comment line="457">
                    the safe side, and skip and do at end in the final sweep                    
                </comment>
                <scope line="435"/>
                <declaration name="uri" type="String" line="439"/>
                <scope line="440">
                    <declaration name="id" type="String" line="441"/>
                    <scope line="442">
                        <declaration name="obj" type="Object" line="443"/>
                        <scope line="444"/>
                        <scope line="446">
                            <declaration name="man" type="Manifest" line="447"/>
                            <declaration name="manRefs" type="List" line="448"/>
                            <scope line="449"/>
                        </scope>
                    </scope>
                    <scope line="458">
                        <declaration name="transforms" type="List" line="459"/>
                        <scope line="460">
                            <declaration name="transform" type="Transform" line="461"/>
                            <declaration name="transformAlg" type="String" line="462"/>
                            <scope line="464"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <class name="DOMSignatureValue" line="473">
                <extends class="DOMStructure"/>
                <implements interface="SignatureValue"/>
                <declaration name="id" type="String" line="476"/>
                <declaration name="value" type="byte[]" line="477"/>
                <declaration name="valueBase64" type="String" line="478"/>
                <declaration name="sigValueElem" type="Element" line="479"/>
                <declaration name="validated" type="boolean" line="480"/>
                <declaration name="validationStatus" type="boolean" line="481"/>
                <method name="DOMSignatureValue" type="constructor" line="483">
                    <params>
                        <param name="id" type="String"/>
                    </params>
                </method>
                <method name="DOMSignatureValue" type="constructor" line="487">
                    <params>
                        <param name="sigValueElem" type="Element"/>
                    </params>
                    <comment line="489">
                        base64 decode signatureValue                        
                    </comment>
                    <scope line="488"/>
                    <scope line="491"/>
                </method>
                <method name="getId" type="String" line="499"/>
                <method name="getValue" type="byte[]" line="503"/>
                <method name="validate" type="boolean" line="508">
                    <params>
                        <param name="validateContext" type="XMLValidateContext"/>
                    </params>
                    <comment line="518">
                        get validating key                        
                    </comment>
                    <comment line="535">
                        canonicalize SignedInfo and verify signature                        
                    </comment>
                    <scope line="510"/>
                    <scope line="514"/>
                    <declaration name="sm" type="SignatureMethod" line="519"/>
                    <declaration name="validationKey" type="Key" line="520"/>
                    <declaration name="ksResult" type="KeySelectorResult" line="521"/>
                    <scope line="522">
                        <scope line="526"/>
                    </scope>
                    <scope line="530"/>
                    <scope line="536"/>
                    <scope line="539"/>
                </method>
                <method name="equals" type="boolean" line="548">
                    <params>
                        <param name="o" type="Object"/>
                    </params>
                    <comment line="561">
                        XXX compare signature values?                        
                    </comment>
                    <scope line="549"/>
                    <scope line="553"/>
                    <declaration name="osv" type="SignatureValue" line="556"/>
                    <declaration name="idEqual" type="boolean" line="558"/>
                </method>
                <method name="marshal" type="void" line="566">
                    <params>
                        <param name="parent" type="Node"/>
                        <param name="dsPrefix" type="String"/>
                        <param name="context" type="DOMCryptoContext"/>
                    </params>
                    <comment line="568">
                        create SignatureValue element                        
                    </comment>
                    <comment line="575">
                        append Id attribute, if specified                        
                    </comment>
                    <scope line="571"/>
                </method>
                <method name="setValue" type="void" line="580">
                    <params>
                        <param name="value" type="byte[]"/>
                    </params>
                </method>
            </class>
        </class>
    </source>