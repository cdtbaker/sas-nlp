<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.jcp.xml.dsig.internal.dom">
        <import package="javax.xml.crypto"/>
        <import package="javax.xml.crypto.dom"/>
        <import package="javax.xml.crypto.dsig"/>
        <import package="javax.xml.crypto.dsig.dom.DOMSignContext"/>
        <import package="javax.xml.crypto.dsig.dom.DOMValidateContext"/>
        <import package="javax.xml.crypto.dsig.keyinfo.KeyInfo"/>
        <import package="java.io"/>
        <import package="java.security.InvalidKeyException"/>
        <import package="java.security.Key"/>
        <import package="java.security.Provider"/>
        <import package="java.util.Collections"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.List"/>
        <import package="java.util.logging.Level"/>
        <import package="java.util.logging.Logger"/>
        <import package="org.w3c.dom.Document"/>
        <import package="org.w3c.dom.Element"/>
        <import package="org.w3c.dom.Node"/>
        <import package="com.sun.org.apache.xml.internal.security.exceptions.Base64DecodingException"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.Base64"/>
        <class name="DOMXMLSignature" line="23">
            <extends class="DOMStructure"/>
            <implements interface="XMLSignature"/>
            <javadoc line="23">
                DOM-based implementation of XMLSignature.                
                <author>
                    Sean Mullan                    
                </author>
                <author>
                    Joyce Leung                    
                </author>
            </javadoc>
            <declaration name="log" type="Logger" line="29"/>
            <declaration name="id" type="String" line="30"/>
            <declaration name="sv" type="SignatureValue" line="31"/>
            <declaration name="ki" type="KeyInfo" line="32"/>
            <declaration name="objects" type="List" line="33"/>
            <declaration name="si" type="SignedInfo" line="34"/>
            <declaration name="ownerDoc" type="Document" line="35"/>
            <declaration name="localSigElem" type="Element" line="36"/>
            <declaration name="sigElem" type="Element" line="37"/>
            <declaration name="validationStatus" type="boolean" line="38"/>
            <declaration name="validated" type="boolean" line="39"/>
            <declaration name="ksr" type="KeySelectorResult" line="40"/>
            <declaration name="signatureIdMap" type="HashMap" line="41"/>
            <scope line="42"/>
            <javadoc line="45">
                Creates a &lt;code&gt;DOMXMLSignature&lt;/code&gt; from the specified components.                
                <param>
                    si the &lt;code&gt;SignedInfo&lt;/code&gt;                    
                </param>
                <param>
                    ki the &lt;code&gt;KeyInfo&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if not specified                    
                </param>
                <param>
                    objs a list of &lt;code&gt;XMLObject&lt;/code&gt;s or &lt;code&gt;null&lt;/code&gt;
                      if not specified. The list is copied to protect against subsequent
                      modification.                    
                </param>
                <param>
                    id an optional id (specify &lt;code&gt;null&lt;/code&gt; to omit)                    
                </param>
                <param>
                    signatureValueId an optional id (specify &lt;code&gt;null&lt;/code&gt; to
                      omit)                    
                </param>
                <throws>
                    NullPointerException if &lt;code&gt;si&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;                    
                </throws>
            </javadoc>
            <method name="DOMXMLSignature" type="constructor" line="57">
                <params>
                    <param name="si" type="SignedInfo"/>
                    <param name="ki" type="KeyInfo"/>
                    <param name="objs" type="List"/>
                    <param name="id" type="String"/>
                    <param name="signatureValueId" type="String"/>
                </params>
                <scope line="58"/>
                <scope line="64"/>
                <scope line="67">
                    <declaration name="objsCopy" type="List" line="68"/>
                    <scope line="69">
                        <scope line="70"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="78">
                Creates a &lt;code&gt;DOMXMLSignature&lt;/code&gt; from XML.                
                <param>
                    sigElem Signature element                    
                </param>
                <throws>
                    MarshalException if XMLSignature cannot be unmarshalled                    
                </throws>
            </javadoc>
            <method name="DOMXMLSignature" type="constructor" line="83">
                <params>
                    <param name="sigElem" type="Element"/>
                    <param name="context" type="XMLCryptoContext"/>
                    <param name="provider" type="Provider"/>
                </params>
                <declaration name="siElem" type="Element" line="87"/>
                <declaration name="sigValElem" type="Element" line="89"/>
                <declaration name="nextSibling" type="Element" line="91"/>
                <scope line="92"/>
                <scope line="96"/>
                <scope line="99">
                    <declaration name="tempObjects" type="List" line="100"/>
                    <scope line="101"/>
                </scope>
            </method>
            <method name="getId" type="String" line="108"/>
            <method name="getKeyInfo" type="KeyInfo" line="111"/>
            <method name="getSignedInfo" type="SignedInfo" line="114"/>
            <method name="getObjects" type="List" line="117"/>
            <method name="getSignatureValue" type="SignatureValue" line="120"/>
            <method name="getKeySelectorResult" type="KeySelectorResult" line="123"/>
            <method name="marshal" type="void" line="126">
                <params>
                    <param name="parent" type="Node"/>
                    <param name="dsPrefix" type="String"/>
                    <param name="context" type="DOMCryptoContext"/>
                </params>
            </method>
            <method name="marshal" type="void" line="129">
                <params>
                    <param name="parent" type="Node"/>
                    <param name="nextSibling" type="Node"/>
                    <param name="dsPrefix" type="String"/>
                    <param name="context" type="DOMCryptoContext"/>
                </params>
                <scope line="132"/>
                <scope line="135"/>
                <scope line="140"/>
                <scope line="143"/>
            </method>
            <method name="validate" type="boolean" line="149">
                <params>
                    <param name="vc" type="XMLValidateContext"/>
                </params>
                <scope line="150"/>
                <scope line="153"/>
                <scope line="156"/>
                <declaration name="sigValidity" type="boolean" line="159"/>
                <scope line="160"/>
                <declaration name="refs" type="List" line="165"/>
                <declaration name="validateRefs" type="boolean" line="166"/>
                <scope line="167">
                    <declaration name="ref" type="Reference" line="168"/>
                    <declaration name="refValid" type="boolean" line="169"/>
                    <scope line="170"/>
                </scope>
                <scope line="175">
                    <scope line="176"/>
                </scope>
                <declaration name="validateMans" type="boolean" line="183"/>
                <scope line="184">
                    <scope line="185">
                        <declaration name="xo" type="XMLObject" line="186"/>
                        <declaration name="content" type="List" line="187"/>
                        <declaration name="csize" type="int" line="188"/>
                        <scope line="189">
                            <declaration name="xs" type="XMLStructure" line="190"/>
                            <scope line="191">
                                <scope line="192"/>
                                <declaration name="man" type="Manifest" line="195"/>
                                <declaration name="manRefs" type="List" line="196"/>
                                <declaration name="rsize" type="int" line="197"/>
                                <scope line="198">
                                    <declaration name="ref" type="Reference" line="199"/>
                                    <declaration name="refValid" type="boolean" line="200"/>
                                    <scope line="201"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="sign" type="void" line="214">
                <params>
                    <param name="signContext" type="XMLSignContext"/>
                </params>
                <scope line="215"/>
                <declaration name="context" type="DOMSignContext" line="218"/>
                <scope line="219"/>
                <declaration name="allReferences" type="List" line="222"/>
                <declaration name="refs" type="List" line="226"/>
                <scope line="227">
                    <declaration name="ref" type="Reference" line="228"/>
                </scope>
                <scope line="231">
                    <declaration name="obj" type="XMLObject" line="232"/>
                    <declaration name="content" type="List" line="234"/>
                    <scope line="235">
                        <declaration name="xs" type="XMLStructure" line="236"/>
                        <scope line="237">
                            <declaration name="man" type="Manifest" line="238"/>
                            <declaration name="manRefs" type="List" line="240"/>
                            <scope line="241">
                                <declaration name="ref" type="Reference" line="242"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="250">
                    <declaration name="ref" type="DOMReference" line="251"/>
                </scope>
                <scope line="254">
                    <declaration name="ref" type="DOMReference" line="255"/>
                    <scope line="256"/>
                </scope>
                <declaration name="signingKey" type="Key" line="261"/>
                <declaration name="ksr" type="KeySelectorResult" line="262"/>
                <scope line="263">
                    <scope line="266"/>
                </scope>
                <scope line="270"/>
                <declaration name="val" type="byte[]" line="273"/>
                <scope line="274"/>
                <scope line="277"/>
                <scope line="280"/>
            </method>
            <method name="equals" type="boolean" line="287">
                <params>
                    <param name="o" type="Object"/>
                </params>
                <scope line="288"/>
                <scope line="291"/>
                <declaration name="osig" type="XMLSignature" line="294"/>
                <declaration name="idEqual" type="boolean" line="295"/>
                <declaration name="keyInfoEqual" type="boolean" line="296"/>
            </method>
            <method name="digestReference" type="void" line="299">
                <params>
                    <param name="ref" type="DOMReference"/>
                    <param name="signContext" type="XMLSignContext"/>
                </params>
                <scope line="300"/>
                <declaration name="uri" type="String" line="303"/>
                <scope line="304">
                    <declaration name="id" type="String" line="305"/>
                    <scope line="306">
                        <declaration name="obj" type="Object" line="307"/>
                        <scope line="308"/>
                        <scope line="311">
                            <declaration name="man" type="Manifest" line="312"/>
                            <declaration name="manRefs" type="List" line="313"/>
                            <scope line="314"/>
                        </scope>
                    </scope>
                    <scope line="319">
                        <declaration name="transforms" type="List" line="320"/>
                        <scope line="321">
                            <declaration name="transform" type="Transform" line="322"/>
                            <declaration name="transformAlg" type="String" line="323"/>
                            <scope line="324"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <class name="DOMSignatureValue" line="332">
                <extends class="DOMStructure"/>
                <implements interface="SignatureValue"/>
                <declaration name="id" type="String" line="333"/>
                <declaration name="value" type="byte[]" line="334"/>
                <declaration name="valueBase64" type="String" line="335"/>
                <declaration name="sigValueElem" type="Element" line="336"/>
                <declaration name="validated" type="boolean" line="337"/>
                <declaration name="validationStatus" type="boolean" line="338"/>
                <method name="DOMSignatureValue" type="constructor" line="339">
                    <params>
                        <param name="id" type="String"/>
                    </params>
                </method>
                <method name="DOMSignatureValue" type="constructor" line="342">
                    <params>
                        <param name="sigValueElem" type="Element"/>
                    </params>
                    <scope line="343"/>
                    <scope line="346"/>
                </method>
                <method name="getId" type="String" line="352"/>
                <method name="getValue" type="byte[]" line="355"/>
                <method name="validate" type="boolean" line="358">
                    <params>
                        <param name="validateContext" type="XMLValidateContext"/>
                    </params>
                    <scope line="359"/>
                    <scope line="362"/>
                    <declaration name="sm" type="SignatureMethod" line="365"/>
                    <declaration name="validationKey" type="Key" line="366"/>
                    <declaration name="ksResult" type="KeySelectorResult" line="367"/>
                    <scope line="368">
                        <scope line="371"/>
                    </scope>
                    <scope line="375"/>
                    <scope line="378"/>
                    <scope line="381"/>
                </method>
                <method name="equals" type="boolean" line="388">
                    <params>
                        <param name="o" type="Object"/>
                    </params>
                    <scope line="389"/>
                    <scope line="392"/>
                    <declaration name="osv" type="SignatureValue" line="395"/>
                    <declaration name="idEqual" type="boolean" line="396"/>
                </method>
                <method name="marshal" type="void" line="399">
                    <params>
                        <param name="parent" type="Node"/>
                        <param name="dsPrefix" type="String"/>
                        <param name="context" type="DOMCryptoContext"/>
                    </params>
                    <scope line="401"/>
                </method>
                <method name="setValue" type="void" line="407">
                    <params>
                        <param name="value" type="byte[]"/>
                    </params>
                </method>
            </class>
        </class>
    </source>