<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.jcp.xml.dsig.internal.dom">
        <import package="java.io.ByteArrayInputStream"/>
        <import package="java.security.cert"/>
        <import package="java.util"/>
        <import package="javax.xml.crypto"/>
        <import package="javax.xml.crypto.dom.DOMCryptoContext"/>
        <import package="javax.xml.crypto.dsig"/>
        <import package="javax.xml.crypto.dsig.keyinfo.X509IssuerSerial"/>
        <import package="javax.xml.crypto.dsig.keyinfo.X509Data"/>
        <import package="javax.security.auth.x500.X500Principal"/>
        <import package="org.w3c.dom.Document"/>
        <import package="org.w3c.dom.Element"/>
        <import package="org.w3c.dom.Node"/>
        <import package="org.w3c.dom.NodeList"/>
        <import package="com.sun.org.apache.xml.internal.security.exceptions.Base64DecodingException"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.Base64"/>
        <class name="DOMX509Data" line="17">
            <extends class="DOMStructure"/>
            <implements interface="X509Data"/>
            <javadoc line="17">
                DOM-based implementation of X509Data.                
                <author>
                    Sean Mullan                    
                </author>
            </javadoc>
            <declaration name="content" type="List" line="22"/>
            <declaration name="cf" type="CertificateFactory" line="23"/>
            <javadoc line="24">
                Creates a DOMX509Data.                
                <param>
                    content a list of one or more X.509 data types. Valid types are{@link String} (subject names), <code>byte[]</code> (subject key ids),{@link java.security.cert.X509Certificate}, {@link X509CRL},
                      or {@link javax.xml.dsig.XMLStructure} ({@link X509IssuerSerial}objects or elements from an external namespace). The list is
                      defensively copied to protect against subsequent modification.                    
                </param>
                <return>
                    a <code>X509Data</code>                    
                </return>
                <throws>
                    NullPointerException if <code>content</code> is <code>null</code>                    
                </throws>
                <throws>
                    IllegalArgumentException if <code>content</code> is empty                    
                </throws>
                <throws>
                    ClassCastException if <code>content</code> contains any entries
                      that are not of one of the valid types mentioned above                    
                </throws>
            </javadoc>
            <method name="DOMX509Data" type="constructor" line="35">
                <params>
                    <param name="content" type="List"/>
                </params>
                <scope line="36"/>
                <declaration name="contentCopy" type="List" line="39"/>
                <scope line="40"/>
                <scope line="43">
                    <declaration name="x509Type" type="Object" line="44"/>
                    <scope line="45"/>
                    <scope line="48"/>
                </scope>
            </method>
            <javadoc line="54">
                Creates a &lt;code&gt;DOMX509Data&lt;/code&gt; from an element.                
                <param>
                    xdElem an X509Data element                    
                </param>
                <throws>
                    MarshalException if there is an error while unmarshalling                    
                </throws>
            </javadoc>
            <method name="DOMX509Data" type="constructor" line="59">
                <params>
                    <param name="xdElem" type="Element"/>
                </params>
                <declaration name="nl" type="NodeList" line="60"/>
                <declaration name="length" type="int" line="61"/>
                <declaration name="content" type="List" line="62"/>
                <scope line="63">
                    <declaration name="child" type="Node" line="64"/>
                    <scope line="65"/>
                    <declaration name="childElem" type="Element" line="68"/>
                    <declaration name="localName" type="String" line="69"/>
                    <scope line="70"/>
                    <scope line="73"/>
                    <scope line="76"/>
                    <scope line="79">
                        <scope line="80"/>
                        <scope line="83"/>
                    </scope>
                    <scope line="87"/>
                    <scope line="90"/>
                </scope>
            </method>
            <method name="getContent" type="List" line="96"/>
            <method name="marshal" type="void" line="99">
                <params>
                    <param name="parent" type="Node"/>
                    <param name="dsPrefix" type="String"/>
                    <param name="context" type="DOMCryptoContext"/>
                </params>
                <declaration name="ownerDoc" type="Document" line="100"/>
                <declaration name="xdElem" type="Element" line="101"/>
                <scope line="102">
                    <declaration name="object" type="Object" line="103"/>
                    <scope line="104"/>
                    <scope line="107">
                        <scope line="108"/>
                        <scope line="111">
                            <declaration name="domContent" type="javax.xml.crypto.dom.DOMStructure" line="112"/>
                        </scope>
                    </scope>
                    <scope line="116"/>
                    <scope line="119"/>
                    <scope line="122"/>
                </scope>
            </method>
            <method name="marshalSKI" type="void" line="128">
                <params>
                    <param name="skid" type="byte[]"/>
                    <param name="parent" type="Node"/>
                    <param name="doc" type="Document"/>
                    <param name="dsPrefix" type="String"/>
                </params>
                <declaration name="skidElem" type="Element" line="129"/>
            </method>
            <method name="marshalSubjectName" type="void" line="133">
                <params>
                    <param name="name" type="String"/>
                    <param name="parent" type="Node"/>
                    <param name="doc" type="Document"/>
                    <param name="dsPrefix" type="String"/>
                </params>
                <declaration name="snElem" type="Element" line="134"/>
            </method>
            <method name="marshalCert" type="void" line="138">
                <params>
                    <param name="cert" type="X509Certificate"/>
                    <param name="parent" type="Node"/>
                    <param name="doc" type="Document"/>
                    <param name="dsPrefix" type="String"/>
                </params>
                <declaration name="certElem" type="Element" line="139"/>
                <scope line="140"/>
                <scope line="143"/>
            </method>
            <method name="marshalCRL" type="void" line="148">
                <params>
                    <param name="crl" type="X509CRL"/>
                    <param name="parent" type="Node"/>
                    <param name="doc" type="Document"/>
                    <param name="dsPrefix" type="String"/>
                </params>
                <declaration name="crlElem" type="Element" line="149"/>
                <scope line="150"/>
                <scope line="153"/>
            </method>
            <method name="unmarshalX509Certificate" type="X509Certificate" line="158">
                <params>
                    <param name="elem" type="Element"/>
                </params>
                <scope line="159">
                    <declaration name="bs" type="ByteArrayInputStream" line="160"/>
                </scope>
                <scope line="163"/>
            </method>
            <method name="unmarshalX509CRL" type="X509CRL" line="167">
                <params>
                    <param name="elem" type="Element"/>
                </params>
                <scope line="168">
                    <declaration name="bs" type="ByteArrayInputStream" line="169"/>
                </scope>
                <scope line="172"/>
            </method>
            <method name="unmarshalBase64Binary" type="ByteArrayInputStream" line="176">
                <params>
                    <param name="elem" type="Element"/>
                </params>
                <scope line="177">
                    <scope line="178"/>
                </scope>
                <scope line="183"/>
                <scope line="186"/>
            </method>
            <method name="equals" type="boolean" line="190">
                <params>
                    <param name="o" type="Object"/>
                </params>
                <scope line="191"/>
                <scope line="194"/>
                <declaration name="oxd" type="X509Data" line="197"/>
                <declaration name="ocontent" type="List" line="198"/>
                <declaration name="size" type="int" line="199"/>
                <scope line="200"/>
                <scope line="203">
                    <declaration name="x" type="Object" line="204"/>
                    <declaration name="ox" type="Object" line="205"/>
                    <scope line="206">
                        <scope line="207"/>
                    </scope>
                    <scope line="211">
                        <scope line="212"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>