<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.jcp.xml.dsig.internal.dom">
        <import package="java.io.ByteArrayInputStream"/>
        <import package="java.security.cert"/>
        <import package="java.util"/>
        <import package="javax.xml.crypto"/>
        <import package="javax.xml.crypto.dom.DOMCryptoContext"/>
        <import package="javax.xml.crypto.dsig"/>
        <import package="javax.xml.crypto.dsig.keyinfo.X509IssuerSerial"/>
        <import package="javax.xml.crypto.dsig.keyinfo.X509Data"/>
        <import package="javax.security.auth.x500.X500Principal"/>
        <import package="org.w3c.dom.Document"/>
        <import package="org.w3c.dom.Element"/>
        <import package="org.w3c.dom.Node"/>
        <import package="org.w3c.dom.NodeList"/>
        <import package="com.sun.org.apache.xml.internal.security.exceptions.Base64DecodingException"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.Base64"/>
        <class name="DOMX509Data" line="46">
            <extends class="DOMStructure"/>
            <comment line="52">
                @@@ check for illegal combinations of data violating MUSTs in W3c spec                
            </comment>
            <implements interface="X509Data"/>
            <javadoc line="46">
                DOM-based implementation of X509Data.                
                <author>
                    Sean Mullan                    
                </author>
            </javadoc>
            <declaration name="content" type="List" line="54"/>
            <declaration name="cf" type="CertificateFactory" line="55"/>
            <javadoc line="57">
                Creates a DOMX509Data.                
                <param>
                    content a list of one or more X.509 data types. Valid types are{@link String} (subject names), &lt;code&gt;byte[]&lt;/code&gt; (subject key ids),{@link java.security.cert.X509Certificate}, {@link X509CRL},
                      or {@link javax.xml.dsig.XMLStructure} ({@link X509IssuerSerial}objects or elements from an external namespace). The list is
                      defensively copied to protect against subsequent modification.                    
                </param>
                <return>
                    a &lt;code&gt;X509Data&lt;/code&gt;                    
                </return>
                <throws>
                    NullPointerException if &lt;code&gt;content&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;                    
                </throws>
                <throws>
                    IllegalArgumentException if &lt;code&gt;content&lt;/code&gt; is empty                    
                </throws>
                <throws>
                    ClassCastException if &lt;code&gt;content&lt;/code&gt; contains any entries
                      that are not of one of the valid types mentioned above                    
                </throws>
            </javadoc>
            <method name="DOMX509Data" type="constructor" line="72">
                <params>
                    <param name="content" type="List"/>
                </params>
                <scope line="73"/>
                <declaration name="contentCopy" type="List" line="76"/>
                <scope line="77"/>
                <scope line="80">
                    <declaration name="x509Type" type="Object" line="81"/>
                    <scope line="82"/>
                    <scope line="87"/>
                </scope>
            </method>
            <javadoc line="95">
                Creates a &lt;code&gt;DOMX509Data&lt;/code&gt; from an element.                
                <param>
                    xdElem an X509Data element                    
                </param>
                <throws>
                    MarshalException if there is an error while unmarshalling                    
                </throws>
            </javadoc>
            <method name="DOMX509Data" type="constructor" line="101">
                <params>
                    <param name="xdElem" type="Element"/>
                </params>
                <comment line="103">
                    get all children nodes                    
                </comment>
                <comment line="109">
                    ignore all non-Element nodes                    
                </comment>
                <declaration name="nl" type="NodeList" line="103"/>
                <declaration name="length" type="int" line="104"/>
                <declaration name="content" type="List" line="105"/>
                <scope line="106">
                    <declaration name="child" type="Node" line="107"/>
                    <scope line="109"/>
                    <declaration name="childElem" type="Element" line="113"/>
                    <declaration name="localName" type="String" line="114"/>
                    <scope line="115"/>
                    <scope line="117"/>
                    <scope line="119"/>
                    <scope line="121">
                        <scope line="122"/>
                        <scope line="124"/>
                    </scope>
                    <scope line="127"/>
                    <scope line="129"/>
                </scope>
            </method>
            <method name="getContent" type="List" line="136"/>
            <method name="marshal" type="void" line="141">
                <params>
                    <param name="parent" type="Node"/>
                    <param name="dsPrefix" type="String"/>
                    <param name="context" type="DOMCryptoContext"/>
                </params>
                <comment line="148">
                    append children and preserve order                    
                </comment>
                <declaration name="ownerDoc" type="Document" line="142"/>
                <declaration name="xdElem" type="Element" line="144"/>
                <scope line="148">
                    <declaration name="object" type="Object" line="149"/>
                    <scope line="150"/>
                    <scope line="152">
                        <scope line="153"/>
                        <scope line="156">
                            <declaration name="domContent" type="javax.xml.crypto.dom.DOMStructure" line="157"/>
                        </scope>
                    </scope>
                    <scope line="161"/>
                    <scope line="163"/>
                    <scope line="165"/>
                </scope>
            </method>
            <method name="marshalSKI" type="void" line="174">
                <params>
                    <param name="skid" type="byte[]"/>
                    <param name="parent" type="Node"/>
                    <param name="doc" type="Document"/>
                    <param name="dsPrefix" type="String"/>
                </params>
                <declaration name="skidElem" type="Element" line="176"/>
            </method>
            <method name="marshalSubjectName" type="void" line="183">
                <params>
                    <param name="name" type="String"/>
                    <param name="parent" type="Node"/>
                    <param name="doc" type="Document"/>
                    <param name="dsPrefix" type="String"/>
                </params>
                <declaration name="snElem" type="Element" line="185"/>
            </method>
            <method name="marshalCert" type="void" line="192">
                <params>
                    <param name="cert" type="X509Certificate"/>
                    <param name="parent" type="Node"/>
                    <param name="doc" type="Document"/>
                    <param name="dsPrefix" type="String"/>
                </params>
                <declaration name="certElem" type="Element" line="194"/>
                <scope line="196"/>
                <scope line="199"/>
            </method>
            <method name="marshalCRL" type="void" line="206">
                <params>
                    <param name="crl" type="X509CRL"/>
                    <param name="parent" type="Node"/>
                    <param name="doc" type="Document"/>
                    <param name="dsPrefix" type="String"/>
                </params>
                <declaration name="crlElem" type="Element" line="208"/>
                <scope line="210"/>
                <scope line="213"/>
            </method>
            <method name="unmarshalX509Certificate" type="X509Certificate" line="220">
                <params>
                    <param name="elem" type="Element"/>
                </params>
                <scope line="221">
                    <declaration name="bs" type="ByteArrayInputStream" line="222"/>
                </scope>
                <scope line="224"/>
            </method>
            <method name="unmarshalX509CRL" type="X509CRL" line="229">
                <params>
                    <param name="elem" type="Element"/>
                </params>
                <scope line="230">
                    <declaration name="bs" type="ByteArrayInputStream" line="231"/>
                </scope>
                <scope line="233"/>
            </method>
            <method name="unmarshalBase64Binary" type="ByteArrayInputStream" line="239">
                <params>
                    <param name="elem" type="Element"/>
                </params>
                <scope line="240">
                    <scope line="241"/>
                </scope>
                <scope line="245"/>
                <scope line="247"/>
            </method>
            <method name="equals" type="boolean" line="252">
                <params>
                    <param name="o" type="Object"/>
                </params>
                <scope line="253"/>
                <scope line="257"/>
                <declaration name="oxd" type="X509Data" line="260"/>
                <declaration name="ocontent" type="List" line="262"/>
                <declaration name="size" type="int" line="263"/>
                <scope line="264"/>
                <scope line="268">
                    <declaration name="x" type="Object" line="269"/>
                    <declaration name="ox" type="Object" line="270"/>
                    <scope line="271">
                        <scope line="273"/>
                    </scope>
                    <scope line="276">
                        <scope line="277"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>