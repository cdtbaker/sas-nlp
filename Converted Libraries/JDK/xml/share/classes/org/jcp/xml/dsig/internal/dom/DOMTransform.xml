<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.jcp.xml.dsig.internal.dom">
        <import package="java.io.OutputStream"/>
        <import package="java.security.InvalidAlgorithmParameterException"/>
        <import package="java.security.NoSuchAlgorithmException"/>
        <import package="java.security.Provider"/>
        <import package="java.security.spec.AlgorithmParameterSpec"/>
        <import package="org.w3c.dom.Document"/>
        <import package="org.w3c.dom.Element"/>
        <import package="org.w3c.dom.Node"/>
        <import package="org.w3c.dom.NodeList"/>
        <import package="javax.xml.crypto"/>
        <import package="javax.xml.crypto.dsig"/>
        <import package="javax.xml.crypto.dom.DOMCryptoContext"/>
        <import package="javax.xml.crypto.dsig.dom.DOMSignContext"/>
        <import package="javax.xml.crypto.dsig.spec.TransformParameterSpec"/>
        <class name="DOMTransform" line="16">
            <extends class="DOMStructure"/>
            <implements interface="Transform"/>
            <javadoc line="16">
                DOM-based abstract implementation of Transform.                
                <author>
                    Sean Mullan                    
                </author>
            </javadoc>
            <declaration name="spi" type="TransformService" line="21"/>
            <javadoc line="22">
                Creates a &lt;code&gt;DOMTransform&lt;/code&gt;.                
                <param>
                    spi the TransformService                    
                </param>
            </javadoc>
            <method name="DOMTransform" type="constructor" line="26">
                <params>
                    <param name="spi" type="TransformService"/>
                </params>
            </method>
            <javadoc line="29">
                Creates a &lt;code&gt;DOMTransform&lt;/code&gt; from an element. This constructor
                  invokes the abstract {@link #unmarshalParams unmarshalParams} method to
                  unmarshal any algorithm-specific input parameters.                
                <param>
                    transElem a Transform element                    
                </param>
            </javadoc>
            <method name="DOMTransform" type="constructor" line="35">
                <params>
                    <param name="transElem" type="Element"/>
                    <param name="context" type="XMLCryptoContext"/>
                    <param name="provider" type="Provider"/>
                </params>
                <declaration name="algorithm" type="String" line="36"/>
                <scope line="37"/>
                <scope line="40">
                    <scope line="41"/>
                    <scope line="44"/>
                </scope>
                <scope line="48"/>
                <scope line="51"/>
            </method>
            <method name="getParameterSpec" type="AlgorithmParameterSpec" line="55"/>
            <method name="getAlgorithm" type="String" line="58"/>
            <javadoc line="61">
                This method invokes the abstract {@link #marshalParams marshalParams}method to marshal any algorithm-specific parameters.                
            </javadoc>
            <method name="marshal" type="void" line="64">
                <params>
                    <param name="parent" type="Node"/>
                    <param name="dsPrefix" type="String"/>
                    <param name="context" type="DOMCryptoContext"/>
                </params>
                <declaration name="ownerDoc" type="Document" line="65"/>
                <declaration name="transformElem" type="Element" line="66"/>
                <scope line="67"/>
                <scope line="70"/>
            </method>
            <javadoc line="77">
                Transforms the specified data using the underlying transform algorithm.                
                <param>
                    data the data to be transformed                    
                </param>
                <param>
                    sc the <code>XMLCryptoContext</code> containing
                      additional context (may be <code>null</code> if not applicable)                    
                </param>
                <return>
                    the transformed data                    
                </return>
                <throws>
                    NullPointerException if <code>data</code> is <code>null</code>                    
                </throws>
                <throws>
                    XMLSignatureException if an unexpected error occurs while
                      executing the transform                    
                </throws>
            </javadoc>
            <method name="transform" type="Data" line="87">
                <params>
                    <param name="data" type="Data"/>
                    <param name="xc" type="XMLCryptoContext"/>
                </params>
            </method>
            <javadoc line="90">
                Transforms the specified data using the underlying transform algorithm.                
                <param>
                    data the data to be transformed                    
                </param>
                <param>
                    sc the <code>XMLCryptoContext</code> containing
                      additional context (may be <code>null</code> if not applicable)                    
                </param>
                <param>
                    os the <code>OutputStream</code> that should be used to write
                      the transformed data to                    
                </param>
                <return>
                    the transformed data                    
                </return>
                <throws>
                    NullPointerException if <code>data</code> is <code>null</code>                    
                </throws>
                <throws>
                    XMLSignatureException if an unexpected error occurs while
                      executing the transform                    
                </throws>
            </javadoc>
            <method name="transform" type="Data" line="102">
                <params>
                    <param name="data" type="Data"/>
                    <param name="xc" type="XMLCryptoContext"/>
                    <param name="os" type="OutputStream"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="105">
                <params>
                    <param name="o" type="Object"/>
                </params>
                <scope line="106"/>
                <scope line="109"/>
                <declaration name="otransform" type="Transform" line="112"/>
            </method>
            <javadoc line="115">
                Transforms the specified data using the underlying transform algorithm.
                  This method invokes the {@link #marshal marshal} method and passes it
                  the specified &lt;code&gt;DOMSignContext&lt;/code&gt; before transforming the data.                
                <param>
                    data the data to be transformed                    
                </param>
                <param>
                    sc the <code>XMLCryptoContext</code> containing
                      additional context (may be <code>null</code> if not applicable)                    
                </param>
                <param>
                    context the marshalling context                    
                </param>
                <return>
                    the transformed data                    
                </return>
                <throws>
                    MarshalException if an exception occurs while marshalling                    
                </throws>
                <throws>
                    NullPointerException if <code>data</code> or <code>context</code>
                      is <code>null</code>                    
                </throws>
                <throws>
                    XMLSignatureException if an unexpected error occurs while
                      executing the transform                    
                </throws>
            </javadoc>
            <method name="transform" type="Data" line="130">
                <params>
                    <param name="data" type="Data"/>
                    <param name="xc" type="XMLCryptoContext"/>
                    <param name="context" type="DOMSignContext"/>
                </params>
            </method>
        </class>
    </source>