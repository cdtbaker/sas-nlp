<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.jcp.xml.dsig.internal.dom">
        <import package="java.util"/>
        <import package="javax.xml.crypto"/>
        <import package="javax.xml.crypto.dom.DOMCryptoContext"/>
        <import package="javax.xml.crypto.dsig"/>
        <import package="javax.xml.crypto.dsig.keyinfo.PGPData"/>
        <import package="org.w3c.dom.Document"/>
        <import package="org.w3c.dom.Element"/>
        <import package="org.w3c.dom.Node"/>
        <import package="org.w3c.dom.NodeList"/>
        <import package="com.sun.org.apache.xml.internal.security.exceptions.Base64DecodingException"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.Base64"/>
        <class name="DOMPGPData" line="42">
            <extends class="DOMStructure"/>
            <implements interface="PGPData"/>
            <javadoc line="42">
                DOM-based implementation of PGPData.                
                <author>
                    Sean Mullan                    
                </author>
            </javadoc>
            <declaration name="keyId" type="byte[]" line="49"/>
            <declaration name="keyPacket" type="byte[]" line="50"/>
            <declaration name="externalElements" type="List" line="51"/>
            <javadoc line="53">
                Creates a &lt;code&gt;DOMPGPData&lt;/code&gt; containing the specified key packet.
                  and optional list of external elements.                
                <param>
                    keyPacket a PGP Key Material Packet as defined in section 5.5 of
                      &lt;a href=&quot;http://www.ietf.org/rfc/rfc2440.txt&quot;/&gt;RFC 2440&lt;/a&gt;. The
                      array is cloned to prevent subsequent modification.                    
                </param>
                <param>
                    other a list of {@link XMLStructure}s representing elements from
                      an external namespace. The list is defensively copied to prevent
                      subsequent modification. May be &lt;code&gt;null&lt;/code&gt; or empty.                    
                </param>
                <throws>
                    NullPointerException if &lt;code&gt;keyPacket&lt;/code&gt; is
                      &lt;code&gt;null&lt;/code&gt;                    
                </throws>
                <throws>
                    IllegalArgumentException if the key packet is not in the
                      correct format                    
                </throws>
                <throws>
                    ClassCastException if &lt;code&gt;other&lt;/code&gt; contains any
                      entries that are not of type {@link XMLStructure}                    
                </throws>
            </javadoc>
            <method name="DOMPGPData" type="constructor" line="70">
                <params>
                    <param name="keyPacket" type="byte[]"/>
                    <param name="other" type="List"/>
                </params>
                <scope line="71"/>
                <scope line="74"/>
                <scope line="76">
                    <declaration name="otherCopy" type="List" line="77"/>
                    <scope line="78">
                        <scope line="79"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="91">
                Creates a &lt;code&gt;DOMPGPData&lt;/code&gt; containing the specified key id and
                  optional key packet and list of external elements.                
                <param>
                    keyId a PGP public key id as defined in section 11.2 of
                      &lt;a href=&quot;http://www.ietf.org/rfc/rfc2440.txt&quot;/&gt;RFC 2440&lt;/a&gt;. The
                      array is cloned to prevent subsequent modification.                    
                </param>
                <param>
                    keyPacket a PGP Key Material Packet as defined in section 5.5 of
                      &lt;a href=&quot;http://www.ietf.org/rfc/rfc2440.txt&quot;/&gt;RFC 2440&lt;/a&gt; (may
                      be &lt;code&gt;null&lt;/code&gt;). The array is cloned to prevent subsequent
                      modification.                    
                </param>
                <param>
                    other a list of {@link XMLStructure}s representing elements from
                      an external namespace. The list is defensively copied to prevent
                      subsequent modification. May be &lt;code&gt;null&lt;/code&gt; or empty.                    
                </param>
                <throws>
                    NullPointerException if &lt;code&gt;keyId&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;                    
                </throws>
                <throws>
                    IllegalArgumentException if the key id or packet is not in the
                      correct format                    
                </throws>
                <throws>
                    ClassCastException if &lt;code&gt;other&lt;/code&gt; contains any
                      entries that are not of type {@link XMLStructure}                    
                </throws>
            </javadoc>
            <method name="DOMPGPData" type="constructor" line="111">
                <params>
                    <param name="keyId" type="byte[]"/>
                    <param name="keyPacket" type="byte[]"/>
                    <param name="other" type="List"/>
                </params>
                <comment line="116">
                    key ids must be 8 bytes                    
                </comment>
                <scope line="112"/>
                <scope line="116"/>
                <scope line="119"/>
                <scope line="121">
                    <declaration name="otherCopy" type="List" line="122"/>
                    <scope line="123">
                        <scope line="124"/>
                    </scope>
                </scope>
                <scope line="133"/>
            </method>
            <javadoc line="138">
                Creates a &lt;code&gt;DOMPGPData&lt;/code&gt; from an element.                
                <param>
                    pdElem a PGPData element                    
                </param>
            </javadoc>
            <method name="DOMPGPData" type="constructor" line="143">
                <params>
                    <param name="pdElem" type="Element"/>
                </params>
                <comment line="145">
                    get all children nodes                    
                </comment>
                <declaration name="keyId" type="byte[]" line="145"/>
                <declaration name="keyPacket" type="byte[]" line="146"/>
                <declaration name="nl" type="NodeList" line="147"/>
                <declaration name="length" type="int" line="148"/>
                <declaration name="other" type="List" line="149"/>
                <scope line="150">
                    <declaration name="n" type="Node" line="151"/>
                    <scope line="152">
                        <declaration name="childElem" type="Element" line="153"/>
                        <declaration name="localName" type="String" line="154"/>
                        <scope line="155">
                            <scope line="156"/>
                            <scope line="158"/>
                            <scope line="160"/>
                        </scope>
                        <scope line="164"/>
                    </scope>
                </scope>
            </method>
            <method name="getKeyId" type="byte[]" line="174"/>
            <method name="getKeyPacket" type="byte[]" line="178"/>
            <method name="getExternalElements" type="List" line="182"/>
            <method name="marshal" type="void" line="187">
                <params>
                    <param name="parent" type="Node"/>
                    <param name="dsPrefix" type="String"/>
                    <param name="context" type="DOMCryptoContext"/>
                </params>
                <comment line="194">
                    create and append PGPKeyID element                    
                </comment>
                <comment line="203">
                    create and append PGPKeyPacket element                    
                </comment>
                <comment line="212">
                    create and append any elements                    
                </comment>
                <declaration name="ownerDoc" type="Document" line="188"/>
                <declaration name="pdElem" type="Element" line="190"/>
                <scope line="194">
                    <declaration name="keyIdElem" type="Element" line="195"/>
                </scope>
                <scope line="203">
                    <declaration name="keyPktElem" type="Element" line="204"/>
                </scope>
                <scope line="212"/>
            </method>
            <javadoc line="220">
                We assume packets use the new format packet syntax, as specified in
                  section 4 of RFC 2440.
                  This method only checks if the packet contains a valid tag. The
                  contents of the packet should be checked by the application.                
            </javadoc>
            <method name="checkKeyPacket" type="void" line="227">
                <params>
                    <param name="keyPacket" type="byte[]"/>
                </params>
                <comment line="229">
                    length must be at least 3 (one byte for tag, one byte for length,
                     and minimally one byte of content                    
                </comment>
                <comment line="237">
                    first bit must be set                    
                </comment>
                <comment line="242">
                    make sure using new format                    
                </comment>
                <comment line="248">
                    tag value must be 6, 14, 5 or 7                    
                </comment>
                <scope line="230"/>
                <declaration name="tag" type="int" line="235"/>
                <scope line="237"/>
                <scope line="242"/>
                <scope line="249"/>
            </method>
        </class>
    </source>