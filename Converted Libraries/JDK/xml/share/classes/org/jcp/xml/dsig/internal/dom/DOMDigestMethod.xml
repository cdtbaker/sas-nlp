<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.jcp.xml.dsig.internal.dom">
        <import package="javax.xml.crypto"/>
        <import package="javax.xml.crypto.dom.DOMCryptoContext"/>
        <import package="javax.xml.crypto.dsig"/>
        <import package="javax.xml.crypto.dsig.spec.DigestMethodParameterSpec"/>
        <import package="java.security.InvalidAlgorithmParameterException"/>
        <import package="java.security.spec.AlgorithmParameterSpec"/>
        <import package="org.w3c.dom.Document"/>
        <import package="org.w3c.dom.Element"/>
        <import package="org.w3c.dom.Node"/>
        <class name="DOMDigestMethod" line="11">
            <extends class="DOMStructure"/>
            <implements interface="DigestMethod"/>
            <javadoc line="11">
                DOM-based abstract implementation of DigestMethod.                
                <author>
                    Sean Mullan                    
                </author>
            </javadoc>
            <declaration name="SHA384" type="String" line="16"/>
            <declaration name="params" type="DigestMethodParameterSpec" line="17"/>
            <javadoc line="18">
                Creates a &lt;code&gt;DOMDigestMethod&lt;/code&gt;.                
                <param>
                    params the algorithm-specific params (may be <code>null</code>)                    
                </param>
                <throws>
                    InvalidAlgorithmParameterException if the parameters are not
                      appropriate for this digest method                    
                </throws>
            </javadoc>
            <method name="DOMDigestMethod" type="constructor" line="24">
                <params>
                    <param name="params" type="AlgorithmParameterSpec"/>
                </params>
                <scope line="25"/>
            </method>
            <javadoc line="31">
                Creates a &lt;code&gt;DOMDigestMethod&lt;/code&gt; from an element. This constructor
                  invokes the abstract {@link #unmarshalParams unmarshalParams} method to
                  unmarshal any algorithm-specific input parameters.                
                <param>
                    dmElem a DigestMethod element                    
                </param>
            </javadoc>
            <method name="DOMDigestMethod" type="constructor" line="37">
                <params>
                    <param name="dmElem" type="Element"/>
                </params>
                <declaration name="paramsElem" type="Element" line="38"/>
                <scope line="39"/>
                <scope line="42"/>
                <scope line="45"/>
            </method>
            <method name="unmarshal" type="DigestMethod" line="49">
                <params>
                    <param name="dmElem" type="Element"/>
                </params>
                <declaration name="alg" type="String" line="50"/>
                <scope line="51"/>
                <scope line="54"/>
                <scope line="57"/>
                <scope line="60"/>
                <scope line="63"/>
            </method>
            <javadoc line="67">
                Checks if the specified parameters are valid for this algorithm. By
                  default, this method throws an exception if parameters are specified
                  since most DigestMethod algorithms do not have parameters. Subclasses
                  should override it if they have parameters.                
                <param>
                    params the algorithm-specific params (may be <code>null</code>)                    
                </param>
                <throws>
                    InvalidAlgorithmParameterException if the parameters are not
                      appropriate for this digest method                    
                </throws>
            </javadoc>
            <method name="checkParams" type="void" line="76">
                <params>
                    <param name="params" type="DigestMethodParameterSpec"/>
                </params>
                <scope line="77"/>
            </method>
            <method name="getParameterSpec" type="AlgorithmParameterSpec" line="81"/>
            <javadoc line="84">
                Unmarshals &lt;code&gt;DigestMethodParameterSpec&lt;/code&gt; from the specified
                  &lt;code&gt;Element&lt;/code&gt;.  By default, this method throws an exception since
                  most DigestMethod algorithms do not have parameters. Subclasses should
                  override it if they have parameters.                
                <param>
                    paramsElem the <code>Element</code> holding the input params                    
                </param>
                <return>
                    the algorithm-specific <code>DigestMethodParameterSpec</code>                    
                </return>
                <throws>
                    MarshalException if the parameters cannot be unmarshalled                    
                </throws>
            </javadoc>
            <method name="unmarshalParams" type="DigestMethodParameterSpec" line="93">
                <params>
                    <param name="paramsElem" type="Element"/>
                </params>
            </method>
            <javadoc line="96">
                This method invokes the abstract {@link #marshalParams marshalParams}method to marshal any algorithm-specific parameters.                
            </javadoc>
            <method name="marshal" type="void" line="99">
                <params>
                    <param name="parent" type="Node"/>
                    <param name="prefix" type="String"/>
                    <param name="context" type="DOMCryptoContext"/>
                </params>
                <declaration name="ownerDoc" type="Document" line="100"/>
                <declaration name="dmElem" type="Element" line="101"/>
                <scope line="103"/>
            </method>
            <method name="equals" type="boolean" line="108">
                <params>
                    <param name="o" type="Object"/>
                </params>
                <scope line="109"/>
                <scope line="112"/>
                <declaration name="odm" type="DigestMethod" line="115"/>
                <declaration name="paramsEqual" type="boolean" line="116"/>
            </method>
            <javadoc line="119">
                Marshals the algorithm-specific parameters to an Element and
                  appends it to the specified parent element. By default, this method
                  throws an exception since most DigestMethod algorithms do not have
                  parameters. Subclasses should override it if they have parameters.                
                <param>
                    parent the parent element to append the parameters to                    
                </param>
                <param>
                    the namespace prefix to use                    
                </param>
                <throws>
                    MarshalException if the parameters cannot be marshalled                    
                </throws>
            </javadoc>
            <method name="marshalParams" type="void" line="128">
                <params>
                    <param name="parent" type="Element"/>
                    <param name="prefix" type="String"/>
                </params>
            </method>
            <method name="getMessageDigestAlgorithm" type="String" line="131"/>
            <javadoc line="131">
                Returns the MessageDigest standard algorithm name.                
            </javadoc>
            <class name="SHA1" line="135">
                <extends class="DOMDigestMethod"/>
                <method name="SHA1" type="constructor" line="136">
                    <params>
                        <param name="params" type="AlgorithmParameterSpec"/>
                    </params>
                </method>
                <method name="SHA1" type="constructor" line="139">
                    <params>
                        <param name="dmElem" type="Element"/>
                    </params>
                </method>
                <method name="getAlgorithm" type="String" line="142"/>
                <method name="getMessageDigestAlgorithm" type="String" line="145"/>
            </class>
            <class name="SHA256" line="149">
                <extends class="DOMDigestMethod"/>
                <method name="SHA256" type="constructor" line="150">
                    <params>
                        <param name="params" type="AlgorithmParameterSpec"/>
                    </params>
                </method>
                <method name="SHA256" type="constructor" line="153">
                    <params>
                        <param name="dmElem" type="Element"/>
                    </params>
                </method>
                <method name="getAlgorithm" type="String" line="156"/>
                <method name="getMessageDigestAlgorithm" type="String" line="159"/>
            </class>
            <class name="SHA384" line="163">
                <extends class="DOMDigestMethod"/>
                <method name="SHA384" type="constructor" line="164">
                    <params>
                        <param name="params" type="AlgorithmParameterSpec"/>
                    </params>
                </method>
                <method name="SHA384" type="constructor" line="167">
                    <params>
                        <param name="dmElem" type="Element"/>
                    </params>
                </method>
                <method name="getAlgorithm" type="String" line="170"/>
                <method name="getMessageDigestAlgorithm" type="String" line="173"/>
            </class>
            <class name="SHA512" line="177">
                <extends class="DOMDigestMethod"/>
                <method name="SHA512" type="constructor" line="178">
                    <params>
                        <param name="params" type="AlgorithmParameterSpec"/>
                    </params>
                </method>
                <method name="SHA512" type="constructor" line="181">
                    <params>
                        <param name="dmElem" type="Element"/>
                    </params>
                </method>
                <method name="getAlgorithm" type="String" line="184"/>
                <method name="getMessageDigestAlgorithm" type="String" line="187"/>
            </class>
        </class>
    </source>