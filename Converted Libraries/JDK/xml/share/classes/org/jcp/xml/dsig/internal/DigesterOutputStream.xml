<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.jcp.xml.dsig.internal">
        <import package="java.io.ByteArrayInputStream"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.security.MessageDigest"/>
        <import package="java.util.logging.Logger"/>
        <import package="java.util.logging.Level"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.UnsyncByteArrayOutputStream"/>
        <class name="DigesterOutputStream" line="9">
            <extends class="OutputStream"/>
            <javadoc line="9">
                This class has been modified slightly to use java.security.MessageDigest
                  objects as input, rather than
                  com.sun.org.apache.xml.internal.security.algorithms.MessageDigestAlgorithm objects.
                  It also optionally caches the input bytes.                
                <author>
                    raul                    
                </author>
                <author>
                    Sean Mullan                    
                </author>
            </javadoc>
            <declaration name="buffer" type="boolean" line="18"/>
            <declaration name="bos" type="UnsyncByteArrayOutputStream" line="19"/>
            <declaration name="md" type="MessageDigest" line="20"/>
            <declaration name="log" type="Logger" line="21"/>
            <javadoc line="22">
                Creates a DigesterOutputStream.                
                <param>
                    md the MessageDigest                    
                </param>
            </javadoc>
            <method name="DigesterOutputStream" type="constructor" line="26">
                <params>
                    <param name="md" type="MessageDigest"/>
                </params>
            </method>
            <javadoc line="29">
                Creates a DigesterOutputStream.                
                <param>
                    md the MessageDigest                    
                </param>
                <param>
                    buffer if true, caches the input bytes                    
                </param>
            </javadoc>
            <method name="DigesterOutputStream" type="constructor" line="34">
                <params>
                    <param name="md" type="MessageDigest"/>
                    <param name="buffer" type="boolean"/>
                </params>
                <scope line="37"/>
            </method>
            <javadoc line="41">
                @inheritDoc                
            </javadoc>
            <method name="write" type="void" line="44">
                <params>
                    <param name="input" type="byte[]"/>
                </params>
            </method>
            <javadoc line="47">
                @inheritDoc                
            </javadoc>
            <method name="write" type="void" line="50">
                <params>
                    <param name="input" type="int"/>
                </params>
                <scope line="51"/>
            </method>
            <javadoc line="56">
                @inheritDoc                
            </javadoc>
            <method name="write" type="void" line="59">
                <params>
                    <param name="input" type="byte[]"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="60"/>
                <scope line="63">
                    <declaration name="sb" type="StringBuffer" line="65"/>
                    <scope line="66"/>
                </scope>
            </method>
            <javadoc line="73">
                @return the digest value                
            </javadoc>
            <method name="getDigestValue" type="byte[]" line="76"/>
            <javadoc line="79">
                @return an input stream containing the cached bytes, or
                  null if not cached                
            </javadoc>
            <method name="getInputStream" type="InputStream" line="83">
                <scope line="84"/>
                <scope line="87"/>
            </method>
        </class>
    </source>