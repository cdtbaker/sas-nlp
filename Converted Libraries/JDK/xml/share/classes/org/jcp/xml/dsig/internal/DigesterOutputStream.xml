<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.jcp.xml.dsig.internal">
        <import package="java.io.ByteArrayInputStream"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.security.MessageDigest"/>
        <import package="java.util.logging.Logger"/>
        <import package="java.util.logging.Level"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.UnsyncByteArrayOutputStream"/>
        <class name="DigesterOutputStream" line="38">
            <extends class="OutputStream"/>
            <javadoc line="38">
                This class has been modified slightly to use java.security.MessageDigest
                  objects as input, rather than
                  com.sun.org.apache.xml.internal.security.algorithms.MessageDigestAlgorithm objects.
                  It also optionally caches the input bytes.                
                <author>
                    raul                    
                </author>
                <author>
                    Sean Mullan                    
                </author>
            </javadoc>
            <declaration name="buffer" type="boolean" line="48"/>
            <declaration name="bos" type="UnsyncByteArrayOutputStream" line="49"/>
            <declaration name="md" type="MessageDigest" line="50"/>
            <declaration name="log" type="Logger" line="51"/>
            <javadoc line="53">
                Creates a DigesterOutputStream.                
                <param>
                    md the MessageDigest                    
                </param>
            </javadoc>
            <method name="DigesterOutputStream" type="constructor" line="58">
                <params>
                    <param name="md" type="MessageDigest"/>
                </params>
            </method>
            <javadoc line="62">
                Creates a DigesterOutputStream.                
                <param>
                    md the MessageDigest                    
                </param>
                <param>
                    buffer if true, caches the input bytes                    
                </param>
            </javadoc>
            <method name="DigesterOutputStream" type="constructor" line="68">
                <params>
                    <param name="md" type="MessageDigest"/>
                    <param name="buffer" type="boolean"/>
                </params>
                <scope line="71"/>
            </method>
            <javadoc line="76">
                @inheritDoc                
            </javadoc>
            <method name="write" type="void" line="77">
                <params>
                    <param name="input" type="byte[]"/>
                </params>
            </method>
            <javadoc line="81">
                @inheritDoc                
            </javadoc>
            <method name="write" type="void" line="82">
                <params>
                    <param name="input" type="int"/>
                </params>
                <scope line="83"/>
            </method>
            <javadoc line="89">
                @inheritDoc                
            </javadoc>
            <method name="write" type="void" line="90">
                <params>
                    <param name="input" type="byte[]"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="91"/>
                <scope line="94">
                    <declaration name="sb" type="StringBuffer" line="96"/>
                    <scope line="97"/>
                </scope>
            </method>
            <javadoc line="105">
                @return the digest value                
            </javadoc>
            <method name="getDigestValue" type="byte[]" line="108"/>
            <javadoc line="112">
                @return an input stream containing the cached bytes, or
                  null if not cached                
            </javadoc>
            <method name="getInputStream" type="InputStream" line="116">
                <scope line="117"/>
                <scope line="119"/>
            </method>
        </class>
    </source>