<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ietf.jgss">
        <class name="MessageProp" line="2">
            <javadoc line="2">
                This is a utility class used within the per-message GSSContext
                  methods to convey per-message properties.&lt;p&gt;
                  When used with the GSSContext interface&apos;s wrap and getMIC methods, an
                  instance of this class is used to indicate the desired
                  Quality-of-Protection (QOP) and to request if confidentiality services
                  are to be applied to caller supplied data (wrap only).  To request
                  default QOP, the value of 0 should be used for QOP.&lt;p&gt;
                  When used with the unwrap and verifyMIC methods of the GSSContext
                  interface, an instance of this class will be used to indicate the
                  applied QOP and confidentiality services over the supplied message.
                  In the case of verifyMIC, the confidentiality state will always be
                  &lt;code&gt;false&lt;/code&gt;.  Upon return from these methods, this object will also
                  contain any supplementary status values applicable to the processed
                  token.  The supplementary status values can indicate old tokens, out
                  of sequence tokens, gap tokens or duplicate tokens.&lt;p&gt;                
                <see>
                    GSSContext#wrap                    
                </see>
                <see>
                    GSSContext#unwrap                    
                </see>
                <see>
                    GSSContext#getMIC                    
                </see>
                <see>
                    GSSContext#verifyMIC                    
                </see>
                <author>
                    Mayank Upadhyay                    
                </author>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="privacyState" type="boolean" line="26"/>
            <declaration name="qop" type="int" line="27"/>
            <declaration name="dupToken" type="boolean" line="28"/>
            <declaration name="oldToken" type="boolean" line="29"/>
            <declaration name="unseqToken" type="boolean" line="30"/>
            <declaration name="gapToken" type="boolean" line="31"/>
            <declaration name="minorStatus" type="int" line="32"/>
            <declaration name="minorString" type="String" line="33"/>
            <javadoc line="34">
                Constructor which sets the desired privacy state. The QOP value used
                  is 0.                
                <param>
                    privState the privacy (i.e. confidentiality) state                    
                </param>
            </javadoc>
            <method name="MessageProp" type="constructor" line="39">
                <params>
                    <param name="privState" type="boolean"/>
                </params>
            </method>
            <javadoc line="42">
                Constructor which sets the values for the qop and privacy state.                
                <param>
                    qop the QOP value                    
                </param>
                <param>
                    privState the privacy (i.e. confidentiality) state                    
                </param>
            </javadoc>
            <method name="MessageProp" type="constructor" line="47">
                <params>
                    <param name="qop" type="int"/>
                    <param name="privState" type="boolean"/>
                </params>
            </method>
            <javadoc line="52">
                Retrieves the QOP value.                
                <return>
                    an int representing the QOP value                    
                </return>
                <see>
                    #setQOP                    
                </see>
            </javadoc>
            <method name="getQOP" type="int" line="57"/>
            <javadoc line="60">
                Retrieves the privacy state.                
                <return>
                    true if the privacy (i.e., confidentiality) state is true,
                      false otherwise.                    
                </return>
                <see>
                    #setPrivacy                    
                </see>
            </javadoc>
            <method name="getPrivacy" type="boolean" line="66"/>
            <javadoc line="69">
                Sets the QOP value.                
                <param>
                    qop the int value to set the QOP to                    
                </param>
                <see>
                    #getQOP                    
                </see>
            </javadoc>
            <method name="setQOP" type="void" line="74">
                <params>
                    <param name="qop" type="int"/>
                </params>
            </method>
            <javadoc line="77">
                Sets the privacy state.                
                <param>
                    privState true is the privacy (i.e., confidentiality) state
                      is true, false otherwise.                    
                </param>
                <see>
                    #getPrivacy                    
                </see>
            </javadoc>
            <method name="setPrivacy" type="void" line="83">
                <params>
                    <param name="privState" type="boolean"/>
                </params>
            </method>
            <javadoc line="86">
                Tests if this is a duplicate of an earlier token.                
                <return>
                    true if this is a duplicate, false otherwise.                    
                </return>
            </javadoc>
            <method name="isDuplicateToken" type="boolean" line="90"/>
            <javadoc line="93">
                Tests if this token&apos;s validity period has expired, i.e., the token
                  is too old to be checked for duplication.                
                <return>
                    true if the token&apos;s validity period has expired, false
                      otherwise.                    
                </return>
            </javadoc>
            <method name="isOldToken" type="boolean" line="99"/>
            <javadoc line="102">
                Tests if a later token had already been processed.                
                <return>
                    true if a later token had already been processed, false otherwise.                    
                </return>
            </javadoc>
            <method name="isUnseqToken" type="boolean" line="106"/>
            <javadoc line="109">
                Tests if an expected token was not received, i.e., one or more
                  predecessor tokens have not yet been successfully processed.                
                <return>
                    true if an expected per-message token was not received,
                      false otherwise.                    
                </return>
            </javadoc>
            <method name="isGapToken" type="boolean" line="115"/>
            <javadoc line="118">
                Retrieves the minor status code that the underlying mechanism might
                  have set for this per-message operation.                
                <return>
                    the int minor status                    
                </return>
            </javadoc>
            <method name="getMinorStatus" type="int" line="123"/>
            <javadoc line="126">
                Retrieves a string explaining the minor status code.                
                <return>
                    a String corresponding to the minor status
                      code. &lt;code&gt;null&lt;/code&gt; will be returned when no minor status code
                      has been set.                    
                </return>
            </javadoc>
            <method name="getMinorString" type="String" line="132"/>
            <javadoc line="135">
                This method sets the state for the supplementary information flags
                  and the minor status in MessageProp.  It is not used by the
                  application but by the GSS implementation to return this information
                  to the caller of a per-message context method.                
                <param>
                    duplicate true if the token was a duplicate of an earlier
                      token, false otherwise                    
                </param>
                <param>
                    old true if the token&apos;s validity period has expired, false
                      otherwise                    
                </param>
                <param>
                    unseq true if a later token has already been processed, false
                      otherwise                    
                </param>
                <param>
                    gap true if one or more predecessor tokens have not yet been
                      successfully processed, false otherwise                    
                </param>
                <param>
                    minorStatus the int minor status code for the per-message
                      operation                    
                </param>
                <param>
                    minorString the textual representation of the minorStatus value                    
                </param>
            </javadoc>
            <method name="setSupplementaryStates" type="void" line="152">
                <params>
                    <param name="duplicate" type="boolean"/>
                    <param name="old" type="boolean"/>
                    <param name="unseq" type="boolean"/>
                    <param name="gap" type="boolean"/>
                    <param name="minorStatus" type="int"/>
                    <param name="minorString" type="String"/>
                </params>
            </method>
            <javadoc line="160">
                Resets the supplementary status values to false.                
            </javadoc>
            <method name="resetStatusValues" type="void" line="163"/>
        </class>
    </source>