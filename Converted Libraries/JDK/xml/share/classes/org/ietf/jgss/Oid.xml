<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ietf.jgss">
        <import package="java.io.InputStream"/>
        <import package="java.io.IOException"/>
        <import package="sun.security.util.DerValue"/>
        <import package="sun.security.util.DerOutputStream"/>
        <import package="sun.security.util.ObjectIdentifier"/>
        <class name="Oid" line="34">
            <javadoc line="34">
                This class represents Universal Object Identifiers (Oids) and their
                  associated operations.&lt;p&gt;
                  Oids are hierarchically globally-interpretable identifiers used
                  within the GSS-API framework to identify mechanisms and name formats.&lt;p&gt;
                  The structure and encoding of Oids is defined in ISOIEC-8824 and
                  ISOIEC-8825.  For example the Oid representation of Kerberos V5
                  mechanism is &quot;1.2.840.113554.1.2.2&quot;&lt;p&gt;
                  The GSSName name class contains public static Oid objects
                  representing the standard name types defined in GSS-API.                
                <author>
                    Mayank Upadhyay                    
                </author>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="oid" type="ObjectIdentifier" line="53"/>
            <declaration name="derEncoding" type="byte[]" line="54"/>
            <javadoc line="56">
                Constructs an Oid object from a string representation of its
                  integer components.                
                <param>
                    strOid the dot separated string representation of the oid.
                      For instance, "1.2.840.113554.1.2.2".                    
                </param>
                <exception>
                    GSSException may be thrown when the string is incorrectly
                      formatted                    
                </exception>
            </javadoc>
            <method name="Oid" type="constructor" line="65">
                <params>
                    <param name="strOid" type="String"/>
                </params>
                <scope line="67"/>
                <scope line="70"/>
            </method>
            <javadoc line="77">
                Creates an Oid object from its ASN.1 DER encoding.  This refers to
                  the full encoding including tag and length.  The structure and
                  encoding of Oids is defined in ISOIEC-8824 and ISOIEC-8825.  This
                  method is identical in functionality to its byte array counterpart.                
                <param>
                    derOid stream containing the DER encoded oid                    
                </param>
                <exception>
                    GSSException may be thrown when the DER encoding does not
                      follow the prescribed format.                    
                </exception>
            </javadoc>
            <method name="Oid" type="constructor" line="87">
                <params>
                    <param name="derOid" type="InputStream"/>
                </params>
                <scope line="88">
                    <declaration name="derVal" type="DerValue" line="89"/>
                </scope>
                <scope line="92"/>
            </method>
            <javadoc line="99">
                Creates an Oid object from its ASN.1 DER encoding.  This refers to
                  the full encoding including tag and length.  The structure and
                  encoding of Oids is defined in ISOIEC-8824 and ISOIEC-8825.  This
                  method is identical in functionality to its InputStream conterpart.                
                <param>
                    data byte array containing the DER encoded oid                    
                </param>
                <exception>
                    GSSException may be thrown when the DER encoding does not
                      follow the prescribed format.                    
                </exception>
            </javadoc>
            <method name="Oid" type="constructor" line="109">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
                <scope line="110">
                    <declaration name="derVal" type="DerValue" line="111"/>
                </scope>
                <scope line="114"/>
            </method>
            <javadoc line="120">
                Only for calling by initializators used with declarations.                
                <param>
                    strOid                    
                </param>
            </javadoc>
            <method name="getInstance" type="Oid" line="125">
                <params>
                    <param name="strOid" type="String"/>
                </params>
                <comment line="130">
                    squelch it!                    
                </comment>
                <declaration name="retVal" type="Oid" line="126"/>
                <scope line="127"/>
                <scope line="129"/>
            </method>
            <javadoc line="135">
                Returns a string representation of the oid&apos;s integer components
                  in dot separated notation.                
                <return>
                    string representation in the following format: "1.2.3.4.5"                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="141"/>
            <javadoc line="145">
                Tests if two Oid objects represent the same Object identifier
                  value.                
                <return>
                    <code>true</code> if the two Oid objects represent the same
                      value, <code>false</code> otherwise.                    
                </return>
                <param>
                    other the Oid object that has to be compared to this one                    
                </param>
            </javadoc>
            <method name="equals" type="boolean" line="153">
                <params>
                    <param name="other" type="Object"/>
                </params>
                <comment line="155">
                    check if both reference the same object                    
                </comment>
            </method>
            <javadoc line="168">
                Returns the full ASN.1 DER encoding for this oid object, which
                  includes the tag and length.                
                <return>
                    byte array containing the DER encoding of this oid object.                    
                </return>
                <exception>
                    GSSException may be thrown when the oid can't be encoded                    
                </exception>
            </javadoc>
            <method name="getDER" type="byte[]" line="175">
                <scope line="177">
                    <declaration name="dout" type="DerOutputStream" line="178"/>
                    <scope line="179"/>
                    <scope line="181"/>
                </scope>
            </method>
            <javadoc line="190">
                A utility method to test if this Oid value is contained within the
                  supplied Oid array.                
                <param>
                    oids the array of Oid's to search                    
                </param>
                <return>
                    true if the array contains this Oid value, false otherwise                    
                </return>
            </javadoc>
            <method name="containedIn" type="boolean" line="197">
                <params>
                    <param name="oids" type="Oid[]"/>
                </params>
                <scope line="199"/>
            </method>
            <javadoc line="208">
                Returns a hashcode value for this Oid.                
                <return>
                    a hashCode value                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="213"/>
        </class>
    </source>