<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ietf.jgss">
        <class name="GSSException" line="2">
            <extends class="Exception"/>
            <javadoc line="2">
                This exception is thrown whenever a GSS-API error occurs, including
                  any mechanism specific error.  It may contain both the major and the
                  minor GSS-API status codes.  Major error codes are those defined at the
                  GSS-API level in this class. Minor error codes are mechanism specific
                  error codes that can provide additional information. The underlying
                  mechanism implementation is responsible for setting appropriate minor
                  status codes when throwing this exception.  Aside from delivering the
                  numeric error codes to the caller, this class performs the mapping from
                  their numeric values to textual representations. &lt;p&gt;                
                <author>
                    Mayank Upadhyay                    
                </author>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="16"/>
            <declaration name="BAD_BINDINGS" type="int" line="17"/>
            <javadoc line="17">
                Channel bindings mismatch.                
            </javadoc>
            <declaration name="BAD_MECH" type="int" line="21"/>
            <javadoc line="21">
                Unsupported mechanism requested.                
            </javadoc>
            <declaration name="BAD_NAME" type="int" line="25"/>
            <javadoc line="25">
                Invalid name provided.                
            </javadoc>
            <declaration name="BAD_NAMETYPE" type="int" line="29"/>
            <javadoc line="29">
                Name of unsupported type provided.                
            </javadoc>
            <declaration name="BAD_STATUS" type="int" line="33"/>
            <javadoc line="33">
                Invalid status code.                
            </javadoc>
            <declaration name="BAD_MIC" type="int" line="37"/>
            <javadoc line="37">
                Token had invalid integrity check.                
            </javadoc>
            <declaration name="CONTEXT_EXPIRED" type="int" line="41"/>
            <javadoc line="41">
                Security context expired.                
            </javadoc>
            <declaration name="CREDENTIALS_EXPIRED" type="int" line="45"/>
            <javadoc line="45">
                Expired credentials.                
            </javadoc>
            <declaration name="DEFECTIVE_CREDENTIAL" type="int" line="49"/>
            <javadoc line="49">
                Defective credentials.                
            </javadoc>
            <declaration name="DEFECTIVE_TOKEN" type="int" line="53"/>
            <javadoc line="53">
                Defective token.                
            </javadoc>
            <declaration name="FAILURE" type="int" line="57"/>
            <javadoc line="57">
                General failure, unspecified at GSS-API level.                
            </javadoc>
            <declaration name="NO_CONTEXT" type="int" line="61"/>
            <javadoc line="61">
                Invalid security context.                
            </javadoc>
            <declaration name="NO_CRED" type="int" line="65"/>
            <javadoc line="65">
                Invalid credentials.                
            </javadoc>
            <declaration name="BAD_QOP" type="int" line="69"/>
            <javadoc line="69">
                Unsupported QOP value.                
            </javadoc>
            <declaration name="UNAUTHORIZED" type="int" line="73"/>
            <javadoc line="73">
                Operation unauthorized.                
            </javadoc>
            <declaration name="UNAVAILABLE" type="int" line="77"/>
            <javadoc line="77">
                Operation unavailable.                
            </javadoc>
            <declaration name="DUPLICATE_ELEMENT" type="int" line="81"/>
            <javadoc line="81">
                Duplicate credential element requested.                
            </javadoc>
            <declaration name="NAME_NOT_MN" type="int" line="85"/>
            <javadoc line="85">
                Name contains multi-mechanism elements.                
            </javadoc>
            <declaration name="DUPLICATE_TOKEN" type="int" line="89"/>
            <javadoc line="89">
                The token was a duplicate of an earlier token.
                  This is a fatal error code that may occur during
                  context establishment.  It is not used to indicate
                  supplementary status values. The MessageProp object is
                  used for that purpose.                
            </javadoc>
            <declaration name="OLD_TOKEN" type="int" line="97"/>
            <javadoc line="97">
                The token&apos;s validity period has expired.  This is a
                  fatal error code that may occur during context establishment.
                  It is not used to indicate supplementary status values.
                  The MessageProp object is used for that purpose.                
            </javadoc>
            <declaration name="UNSEQ_TOKEN" type="int" line="104"/>
            <javadoc line="104">
                A later token has already been processed.  This is a
                  fatal error code that may occur during context establishment.
                  It is not used to indicate supplementary status values.
                  The MessageProp object is used for that purpose.                
            </javadoc>
            <declaration name="GAP_TOKEN" type="int" line="111"/>
            <javadoc line="111">
                An expected per-message token was not received.  This is a
                  fatal error code that may occur during context establishment.
                  It is not used to indicate supplementary status values.
                  The MessageProp object is used for that purpose.                
            </javadoc>
            <declaration name="messages" type="String[]" line="118"/>
            <declaration name="major" type="int" line="119"/>
            <javadoc line="119">
                The major code for this exception                
                <serial>
                                        
                </serial>
            </javadoc>
            <declaration name="minor" type="int" line="124"/>
            <javadoc line="124">
                The minor code for this exception                
                <serial>
                                        
                </serial>
            </javadoc>
            <declaration name="minorMessage" type="String" line="129"/>
            <javadoc line="129">
                The text string for minor code                
                <serial>
                                        
                </serial>
            </javadoc>
            <declaration name="majorString" type="String" line="134"/>
            <javadoc line="134">
                Alternate text string for major code                
                <serial>
                                        
                </serial>
            </javadoc>
            <javadoc line="139">
                Creates a GSSException object with a specified major code.                
                <param>
                    majorCode the The GSS error code for the problem causing this
                      exception to be thrown.                    
                </param>
            </javadoc>
            <method name="GSSException" type="constructor" line="144">
                <params>
                    <param name="majorCode" type="int"/>
                </params>
            </method>
            <javadoc line="148">
                Construct a GSSException object with a specified major code and a
                  specific major string for it.                
                <param>
                    majorCode the fatal error code causing this exception.                    
                </param>
                <param>
                    majorString an expicit message to be included in this exception                    
                </param>
            </javadoc>
            <method name="GSSException" type="constructor" line="154">
                <params>
                    <param name="majorCode" type="int"/>
                    <param name="majorString" type="String"/>
                </params>
            </method>
            <javadoc line="159">
                Creates a GSSException object with the specified major code, minor
                  code, and minor code textual explanation.  This constructor is to be
                  used when the exception is originating from the underlying mechanism
                  level. It allows the setting of both the GSS code and the mechanism
                  code.                
                <param>
                    majorCode the GSS error code for the problem causing this
                      exception to be thrown.                    
                </param>
                <param>
                    minorCode the mechanism level error code for the problem
                      causing this exception to be thrown.                    
                </param>
                <param>
                    minorString the textual explanation of the mechanism error
                      code.                    
                </param>
            </javadoc>
            <method name="GSSException" type="constructor" line="172">
                <params>
                    <param name="majorCode" type="int"/>
                    <param name="minorCode" type="int"/>
                    <param name="minorString" type="String"/>
                </params>
            </method>
            <javadoc line="178">
                Returns the GSS-API level major error code for the problem causing
                  this exception to be thrown. Major error codes are
                  defined at the mechanism independent GSS-API level in this
                  class. Mechanism specific error codes that might provide more
                  information aer set as the minor error code.                
                <return>
                    int the GSS-API level major error code causing this exception                    
                </return>
                <see>
                    #getMajorString                    
                </see>
                <see>
                    #getMinor                    
                </see>
                <see>
                    #getMinorString                    
                </see>
            </javadoc>
            <method name="getMajor" type="int" line="189"/>
            <javadoc line="192">
                Returns the mechanism level error code for the problem causing this
                  exception to be thrown. The minor code is set by the underlying
                  mechanism.                
                <return>
                    int the mechanism error code; 0 indicates that it has not
                      been set.                    
                </return>
                <see>
                    #getMinorString                    
                </see>
                <see>
                    #setMinor                    
                </see>
            </javadoc>
            <method name="getMinor" type="int" line="201"/>
            <javadoc line="204">
                Returns a string explaining the GSS-API level major error code in
                  this exception.                
                <return>
                    String explanation string for the major error code                    
                </return>
                <see>
                    #getMajor                    
                </see>
                <see>
                    #toString                    
                </see>
            </javadoc>
            <method name="getMajorString" type="String" line="211"/>
            <javadoc line="215">
                Returns a string explaining the mechanism specific error code.
                  If the minor status code is 0, then no mechanism level error details
                  will be available.                
                <return>
                    String a textual explanation of mechanism error code                    
                </return>
                <see>
                    #getMinor                    
                </see>
                <see>
                    #getMajorString                    
                </see>
                <see>
                    #toString                    
                </see>
            </javadoc>
            <method name="getMinorString" type="String" line="224"/>
            <javadoc line="227">
                Used by the exception thrower to set the mechanism
                  level minor error code and its string explanation.  This is used by
                  mechanism providers to indicate error details.                
                <param>
                    minorCode the mechanism specific error code                    
                </param>
                <param>
                    message textual explanation of the mechanism error code                    
                </param>
                <see>
                    #getMinor                    
                </see>
            </javadoc>
            <method name="setMinor" type="void" line="235">
                <params>
                    <param name="minorCode" type="int"/>
                    <param name="message" type="String"/>
                </params>
            </method>
            <javadoc line="239">
                Returns a textual representation of both the major and the minor
                  status codes.                
                <return>
                    a String with the error descriptions                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="244"/>
            <javadoc line="247">
                Returns a textual representation of both the major and the minor
                  status codes.                
                <return>
                    a String with the error descriptions                    
                </return>
            </javadoc>
            <method name="getMessage" type="String" line="252"/>
            <method name="validateMajor" type="boolean" line="256">
                <params>
                    <param name="major" type="int"/>
                </params>
            </method>
        </class>
    </source>