<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.nio.channels">
        <import package="java.io.IOException"/>
        <import package="java.io.Closeable"/>
        <interface name="Channel">
            <implements interface="Closeable"/>
            <javadoc line="4">
                A nexus for I/O operations.
                  &lt;p&gt; A channel represents an open connection to an entity such as a hardware
                  device, a file, a network socket, or a program component that is capable of
                  performing one or more distinct I/O operations, for example reading or
                  writing.
                  &lt;p&gt; A channel is either open or closed.  A channel is open upon creation,
                  and once closed it remains closed.  Once a channel is closed, any attempt to
                  invoke an I/O operation upon it will cause a {@link ClosedChannelException}to be thrown.  Whether or not a channel is open may be tested by invoking
                  its {@link #isOpen isOpen} method.
                  &lt;p&gt; Channels are, in general, intended to be safe for multithreaded access
                  as described in the specifications of the interfaces and classes that extend
                  and implement this interface.                
                <author>
                    Mark Reinhold                    
                </author>
                <author>
                    JSR-51 Expert Group                    
                </author>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="isOpen" type="boolean" line="22"/>
            <javadoc line="22">
                Tells whether or not this channel is open.  &lt;/p&gt;                
                <return>
                    <tt>true</tt> if, and only if, this channel is open                    
                </return>
            </javadoc>
            <method name="close" type="void" line="27"/>
            <javadoc line="27">
                Closes this channel.
                  &lt;p&gt; After a channel is closed, any further attempt to invoke I/O
                  operations upon it will cause a {@link ClosedChannelException} to be
                  thrown.
                  &lt;p&gt; If this channel is already closed then invoking this method has no
                  effect.
                  &lt;p&gt; This method may be invoked at any time.  If some other thread has
                  already invoked it, however, then another invocation will block until
                  the first invocation is complete, after which it will return without
                  effect. &lt;/p&gt;                
                <throws>
                    IOException  If an I/O error occurs                    
                </throws>
            </javadoc>
        </interface>
    </source>