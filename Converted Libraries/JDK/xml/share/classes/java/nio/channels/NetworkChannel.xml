<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.nio.channels">
        <import package="java.net.SocketOption"/>
        <import package="java.net.SocketAddress"/>
        <import package="java.util.Set"/>
        <import package="java.io.IOException"/>
        <interface name="NetworkChannel">
            <implements interface="Channel"/>
            <javadoc line="33">
                A channel to a network socket.
                  &lt;p&gt; A channel that implements this interface is a channel to a network
                  socket. The {@link #bind(SocketAddress) bind} method is used to bind the
                  socket to a local {@link SocketAddress address}, the {@link #getLocalAddress()getLocalAddress} method returns the address that the socket is bound to, and
                  the {@link #setOption(SocketOption,Object) setOption} and {@link #getOption(SocketOption) getOption} methods are used to set and query socket
                  options.  An implementation of this interface should specify the socket options
                  that it supports.
                  &lt;p&gt; The {@link #bind bind} and {@link #setOption setOption} methods that do
                  not otherwise have a value to return are specified to return the network
                  channel upon which they are invoked. This allows method invocations to be
                  chained. Implementations of this interface should specialize the return type
                  so that method invocations on the implementation class can be chained.                
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="bind" type="NetworkChannel" line="57"/>
            <javadoc line="57">
                Binds the channel&apos;s socket to a local address.
                  &lt;p&gt; This method is used to establish an association between the socket and
                  a local address. Once an association is established then the socket remains
                  bound until the channel is closed. If the {@code local} parameter has the
                  value {@code null} then the socket will be bound to an address that is
                  assigned automatically.                
                <param>
                    localThe address to bind the socket, or {@code null} to bind the socket
                      to an automatically assigned socket address                    
                </param>
                <return>
                    This channel                    
                </return>
                <throws>
                    AlreadyBoundExceptionIf the socket is already bound                    
                </throws>
                <throws>
                    UnsupportedAddressTypeExceptionIf the type of the given address is not supported                    
                </throws>
                <throws>
                    ClosedChannelExceptionIf the channel is closed                    
                </throws>
                <throws>
                    IOExceptionIf some other I/O error occurs                    
                </throws>
                <throws>
                    SecurityExceptionIf a security manager is installed and it denies an unspecified
                      permission. An implementation of this interface should specify
                      any required permissions.                    
                </throws>
                <see>
                    #getLocalAddress                    
                </see>
            </javadoc>
            <method name="getLocalAddress" type="SocketAddress" line="89"/>
            <javadoc line="89">
                Returns the socket address that this channel&apos;s socket is bound to, or{@code null} if the socket is not bound.
                  &lt;p&gt; Where the channel is {@link #bind bound} to an Internet Protocol
                  socket address then the return value from this method is of type {@link java.net.InetSocketAddress}.                
                <return>
                    The socket address that the socket is bound to, or {@code null}if the channel's socket is not bound                    
                </return>
                <throws>
                    ClosedChannelExceptionIf the channel is closed                    
                </throws>
                <throws>
                    IOExceptionIf an I/O error occurs                    
                </throws>
            </javadoc>
            <method name="setOption" type="NetworkChannel" line="107"/>
            <javadoc line="107">
                Sets the value of a socket option.                
                <param>
                    nameThe socket option                    
                </param>
                <param>
                    valueThe value of the socket option. A value of {@code null} may be
                      a valid value for some socket options.                    
                </param>
                <return>
                    This channel                    
                </return>
                <throws>
                    UnsupportedOperationExceptionIf the socket option is not supported by this channel                    
                </throws>
                <throws>
                    IllegalArgumentExceptionIf the value is not a valid value for this socket option                    
                </throws>
                <throws>
                    ClosedChannelExceptionIf this channel is closed                    
                </throws>
                <throws>
                    IOExceptionIf an I/O error occurs                    
                </throws>
                <see>
                    java.net.StandardSocketOptions                    
                </see>
            </javadoc>
            <method name="getOption" type="T" line="131"/>
            <javadoc line="131">
                Returns the value of a socket option.                
                <param>
                    nameThe socket option                    
                </param>
                <return>
                    The value of the socket option. A value of {@code null} may be
                      a valid value for some socket options.                    
                </return>
                <throws>
                    UnsupportedOperationExceptionIf the socket option is not supported by this channel                    
                </throws>
                <throws>
                    ClosedChannelExceptionIf this channel is closed                    
                </throws>
                <throws>
                    IOExceptionIf an I/O error occurs                    
                </throws>
                <see>
                    java.net.StandardSocketOptions                    
                </see>
            </javadoc>
            <method name="supportedOptions" type="Set<SocketOption<?>>" line="151"/>
            <javadoc line="151">
                Returns a set of the socket options supported by this channel.
                  &lt;p&gt; This method will continue to return the set of options even after the
                  channel has been closed.                
                <return>
                    A set of the socket options supported by this channel                    
                </return>
            </javadoc>
        </interface>
    </source>