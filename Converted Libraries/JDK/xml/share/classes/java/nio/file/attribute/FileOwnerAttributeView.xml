<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.nio.file.attribute">
        <import package="java.io.IOException"/>
        <interface name="FileOwnerAttributeView">
            <implements interface="FileAttributeView"/>
            <javadoc line="30">
                A file attribute view that supports reading or updating the owner of a file.
                  This file attribute view is intended for file system implementations that
                  support a file attribute that represents an identity that is the owner of
                  the file. Often the owner of a file is the identity of the entity that
                  created the file.
                  &lt;p&gt; The {@link #getOwner getOwner} or {@link #setOwner setOwner} methods may
                  be used to read or update the owner of the file.
                  &lt;p&gt; The {@link java.nio.file.Files#getAttribute getAttribute} and{@link java.nio.file.Files#setAttribute setAttribute} methods may also be
                  used to read or update the owner. In that case, the owner attribute is
                  identified by the name {@code &quot;owner&quot;}, and the value of the attribute is
                  a {@link UserPrincipal}.                
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="name" type="String" line="52"/>
            <javadoc line="52">
                Returns the name of the attribute view. Attribute views of this type
                  have the name {@code &quot;owner&quot;}.                
            </javadoc>
            <method name="getOwner" type="UserPrincipal" line="59"/>
            <javadoc line="59">
                Read the file owner.
                  &lt;p&gt; It it implementation specific if the file owner can be a {@link GroupPrincipal group}.                
                <return>
                    the file owner                    
                </return>
                <throws>
                    IOExceptionif an I/O error occurs                    
                </throws>
                <throws>
                    SecurityExceptionIn the case of the default provider, a security manager is
                      installed, and it denies {@link RuntimePermission}&lt;tt&gt;(&quot;accessUserInformation&quot;)&lt;/tt&gt; or its{@link SecurityManager#checkRead(String) checkRead} method
                      denies read access to the file.                    
                </throws>
            </javadoc>
            <method name="setOwner" type="void" line="78"/>
            <javadoc line="78">
                Updates the file owner.
                  &lt;p&gt; It it implementation specific if the file owner can be a {@link GroupPrincipal group}. To ensure consistent and correct behavior
                  across platforms it is recommended that this method should only be used
                  to set the file owner to a user principal that is not a group.                
                <param>
                    ownerthe new file owner                    
                </param>
                <throws>
                    IOExceptionif an I/O error occurs, or the {@code owner} parameter is a
                      group and this implementation does not support setting the owner
                      to a group                    
                </throws>
                <throws>
                    SecurityExceptionIn the case of the default provider, a security manager is
                      installed, and it denies {@link RuntimePermission}&lt;tt&gt;(&quot;accessUserInformation&quot;)&lt;/tt&gt; or its{@link SecurityManager#checkWrite(String) checkWrite} method
                      denies write access to the file.                    
                </throws>
            </javadoc>
        </interface>
    </source>