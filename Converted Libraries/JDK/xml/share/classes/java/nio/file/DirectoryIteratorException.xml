<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.nio.file">
        <import package="java.util.ConcurrentModificationException"/>
        <import package="java.util.Objects"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.InvalidObjectException"/>
        <class name="DirectoryIteratorException" line="7">
            <extends class="ConcurrentModificationException"/>
            <javadoc line="7">
                Runtime exception thrown if an I/O error is encountered when iterating over
                  the entries in a directory. The I/O error is retrieved as an {@link IOException} using the {@link #getCause() getCause()} method.                
                <since>
                    1.7                    
                </since>
                <see>
                    DirectoryStream                    
                </see>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="14"/>
            <javadoc line="15">
                Constructs an instance of this class.                
                <param>
                    causethe {@code IOException} that caused the directory iteration
                      to fail                    
                </param>
                <throws>
                    NullPointerExceptionif the cause is {@code null}                    
                </throws>
            </javadoc>
            <method name="DirectoryIteratorException" type="constructor" line="21">
                <params>
                    <param name="cause" type="IOException"/>
                </params>
            </method>
            <javadoc line="24">
                Returns the cause of this exception.                
                <return>
                    the cause                    
                </return>
            </javadoc>
            <method name="getCause" type="IOException" line="28"/>
            <javadoc line="31">
                Called to read the object from a stream.                
                <throws>
                    InvalidObjectExceptionif the object is invalid or has a cause that is not
                      an {@code IOException}                    
                </throws>
            </javadoc>
            <method name="readObject" type="void" line="36">
                <params>
                    <param name="s" type="ObjectInputStream"/>
                </params>
                <declaration name="cause" type="Throwable" line="38"/>
            </method>
        </class>
    </source>