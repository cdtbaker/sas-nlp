<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.nio.file">
        <import package="java.security.BasicPermission"/>
        <class name="LinkPermission" line="3">
            <extends class="BasicPermission"/>
            <javadoc line="3">
                The {@code Permission} class for link creation operations.
                  &lt;p&gt; The following table provides a summary description of what the permission
                  allows, and discusses the risks of granting code the permission.
                  &lt;table border=1 cellpadding=5
                  summary=&quot;Table shows permission target name, what the permission allows, and associated risks&quot;&gt;
                  &lt;tr&gt;
                  &lt;th&gt;Permission Target Name&lt;/th&gt;
                  &lt;th&gt;What the Permission Allows&lt;/th&gt;
                  &lt;th&gt;Risks of Allowing this Permission&lt;/th&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;hard&lt;/td&gt;
                  &lt;td&gt; Ability to add an existing file to a directory. This is sometimes
                  known as creating a link, or hard link. &lt;/td&gt;
                  &lt;td&gt; Extreme care should be taken when granting this permission. It allows
                  linking to any file or directory in the file system thus allowing the
                  attacker access to all files. &lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;symbolic&lt;/td&gt;
                  &lt;td&gt; Ability to create symbolic links. &lt;/td&gt;
                  &lt;td&gt; Extreme care should be taken when granting this permission. It allows
                  linking to any file or directory in the file system thus allowing the
                  attacker to access to all files. &lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;/table&gt;                
                <since>
                    1.7                    
                </since>
                <see>
                    Files#createLink                    
                </see>
                <see>
                    Files#createSymbolicLink                    
                </see>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="35"/>
            <method name="checkName" type="void" line="36">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="37"/>
            </method>
            <javadoc line="41">
                Constructs a {@code LinkPermission} with the specified name.                
                <param>
                    namethe name of the permission. It must be "hard" or "symbolic".                    
                </param>
                <throws>
                    IllegalArgumentExceptionif name is empty or invalid                    
                </throws>
            </javadoc>
            <method name="LinkPermission" type="constructor" line="46">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="50">
                Constructs a {@code LinkPermission} with the specified name.                
                <param>
                    namethe name of the permission; must be "hard" or "symbolic".                    
                </param>
                <param>
                    actionsthe actions for the permission; must be the empty string or{@code null}                    
                </param>
                <throws>
                    IllegalArgumentExceptionif name is empty or invalid, or actions is a non-empty string                    
                </throws>
            </javadoc>
            <method name="LinkPermission" type="constructor" line="56">
                <params>
                    <param name="name" type="String"/>
                    <param name="actions" type="String"/>
                </params>
                <scope line="59"/>
            </method>
        </class>
    </source>