<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.nio.file">
        <import package="java.nio.file.attribute"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.IOException"/>
        <class name="CopyMoveHelper" line="32">
            <javadoc line="32">
                Helper class to support copying or moving files when the source and target
                  are associated with different providers.                
            </javadoc>
            <method name="CopyMoveHelper" type="constructor" line="38"/>
            <class name="CopyOptions" line="40">
                <javadoc line="40">
                    Parses the arguments for a file copy operation.                    
                </javadoc>
                <declaration name="replaceExisting" type="boolean" line="44"/>
                <declaration name="copyAttributes" type="boolean" line="45"/>
                <declaration name="followLinks" type="boolean" line="46"/>
                <method name="CopyOptions" type="constructor" line="48"/>
                <method name="parse" type="CopyOptions" line="50">
                    <params>
                        <param name="options" type="CopyOption"/>
                    </params>
                    <declaration name="result" type="CopyOptions" line="51"/>
                    <scope line="52">
                        <scope line="53"/>
                        <scope line="57"/>
                        <scope line="61"/>
                    </scope>
                </method>
            </class>
            <javadoc line="74">
                Converts the given array of options for moving a file to options suitable
                  for copying the file when a move is implemented as copy + delete.                
            </javadoc>
            <method name="convertMoveToCopyOptions" type="CopyOption[]" line="80">
                <params>
                    <param name="options" type="CopyOption"/>
                </params>
                <declaration name="len" type="int" line="81"/>
                <declaration name="newOptions" type="CopyOption[]" line="82"/>
                <scope line="83">
                    <declaration name="option" type="CopyOption" line="84"/>
                    <scope line="85"/>
                </scope>
            </method>
            <javadoc line="96">
                Simple copy for use when source and target are associated with different
                  providers                
            </javadoc>
            <method name="copyToForeignTarget" type="void" line="103">
                <params>
                    <param name="source" type="Path"/>
                    <param name="target" type="Path"/>
                    <param name="options" type="CopyOption"/>
                </params>
                <comment line="108">
                    attributes of source file                    
                </comment>
                <comment line="115">
                    delete target if it exists and REPLACE_EXISTING is specified                    
                </comment>
                <comment line="121">
                    create directory or copy file                    
                </comment>
                <comment line="130">
                    copy basic attributes to target                    
                </comment>
                <comment line="139">
                    rollback                    
                </comment>
                <declaration name="opts" type="CopyOptions" line="104"/>
                <declaration name="linkOptions" type="LinkOption[]" line="105"/>
                <declaration name="attrs" type="BasicFileAttributes" line="109"/>
                <scope line="116"/>
                <scope line="122"/>
                <scope line="124">
                    <scope line="125"/>
                </scope>
                <scope line="131">
                    <declaration name="view" type="BasicFileAttributeView" line="132"/>
                    <scope line="134"/>
                    <scope line="138">
                        <scope line="140"/>
                        <scope line="142"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="150">
                Simple move implements as copy+delete for use when source and target are
                  associated with different providers                
            </javadoc>
            <method name="moveToForeignTarget" type="void" line="156">
                <params>
                    <param name="source" type="Path"/>
                    <param name="target" type="Path"/>
                    <param name="options" type="CopyOption"/>
                </params>
            </method>
        </class>
    </source>