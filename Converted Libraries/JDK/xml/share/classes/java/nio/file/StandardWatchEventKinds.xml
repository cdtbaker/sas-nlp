<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.nio.file">
        <class name="StandardWatchEventKinds" line="2">
            <javadoc line="2">
                Defines the &lt;em&gt;standard&lt;/em&gt; event kinds.                
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="StandardWatchEventKinds" type="constructor" line="7"/>
            <declaration name="OVERFLOW" type="WatchEvent.Kind&lt;Object&gt;" line="9"/>
            <javadoc line="9">
                A special event to indicate that events may have been lost or
                  discarded.
                  &lt;p&gt; The {@link WatchEvent#context context} for this event is
                  implementation specific and may be {@code null}. The event {@link WatchEvent#count count} may be greater than {@code 1}.                
                <see>
                    WatchService                    
                </see>
            </javadoc>
            <declaration name="ENTRY_CREATE" type="WatchEvent.Kind&lt;Path&gt;" line="17"/>
            <javadoc line="17">
                Directory entry created.
                  &lt;p&gt; When a directory is registered for this event then the {@link WatchKey}is queued when it is observed that an entry is created in the directory
                  or renamed into the directory. The event {@link WatchEvent#count count}for this event is always {@code 1}.                
            </javadoc>
            <declaration name="ENTRY_DELETE" type="WatchEvent.Kind&lt;Path&gt;" line="23"/>
            <javadoc line="23">
                Directory entry deleted.
                  &lt;p&gt; When a directory is registered for this event then the {@link WatchKey}is queued when it is observed that an entry is deleted or renamed out of
                  the directory. The event {@link WatchEvent#count count} for this event
                  is always {@code 1}.                
            </javadoc>
            <declaration name="ENTRY_MODIFY" type="WatchEvent.Kind&lt;Path&gt;" line="30"/>
            <javadoc line="30">
                Directory entry modified.
                  &lt;p&gt; When a directory is registered for this event then the {@link WatchKey}is queued when it is observed that an entry in the directory has been
                  modified. The event {@link WatchEvent#count count} for this event is{@code 1} or greater.                
            </javadoc>
            <class name="StdWatchEventKind" line="36">
                <type_params>
                    <type_param name="T"/>
                </type_params>
                <implements interface="WatchEvent.Kind">
                    <type_params>
                        <type_param name="T"/>
                    </type_params>
                </implements>
                <declaration name="name" type="String" line="37"/>
                <declaration name="type" type="Class&lt;T&gt;" line="38"/>
                <method name="StdWatchEventKind" type="constructor" line="39">
                    <params>
                        <param name="name" type="String"/>
                        <param name="type" type="Class<T>"/>
                    </params>
                </method>
                <method name="name" type="String" line="43"/>
                <method name="type" type="Class<T>" line="46"/>
                <method name="toString" type="String" line="49"/>
            </class>
        </class>
    </source>