<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.nio.file">
        <import package="java.io.IOException"/>
        <class name="FileSystemException" line="3">
            <extends class="IOException"/>
            <javadoc line="3">
                Thrown when a file system operation fails on one or two files. This class is
                  the general class for file system exceptions.                
                <since>
                    1.7                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="9"/>
            <declaration name="file" type="String" line="10"/>
            <declaration name="other" type="String" line="11"/>
            <javadoc line="12">
                Constructs an instance of this class. This constructor should be used
                  when an operation involving one file fails and there isn&apos;t any additional
                  information to explain the reason.                
                <param>
                    filea string identifying the file or {@code null} if not known.                    
                </param>
            </javadoc>
            <method name="FileSystemException" type="constructor" line="18">
                <params>
                    <param name="file" type="String"/>
                </params>
            </method>
            <javadoc line="23">
                Constructs an instance of this class. This constructor should be used
                  when an operation involving two files fails, or there is additional
                  information to explain the reason.                
                <param>
                    filea string identifying the file or {@code null} if not known.                    
                </param>
                <param>
                    othera string identifying the other file or {@code null} if there
                      isn't another file or if not known                    
                </param>
                <param>
                    reasona reason message with additional information or {@code null}                    
                </param>
            </javadoc>
            <method name="FileSystemException" type="constructor" line="32">
                <params>
                    <param name="file" type="String"/>
                    <param name="other" type="String"/>
                    <param name="reason" type="String"/>
                </params>
            </method>
            <javadoc line="37">
                Returns the file used to create this exception.                
                <return>
                    the file (can be {@code null})                    
                </return>
            </javadoc>
            <method name="getFile" type="String" line="41"/>
            <javadoc line="44">
                Returns the other file used to create this exception.                
                <return>
                    the other file (can be {@code null})                    
                </return>
            </javadoc>
            <method name="getOtherFile" type="String" line="48"/>
            <javadoc line="51">
                Returns the string explaining why the file system operation failed.                
                <return>
                    the string explaining why the file system operation failed                    
                </return>
            </javadoc>
            <method name="getReason" type="String" line="55"/>
            <javadoc line="58">
                Returns the detail message string.                
            </javadoc>
            <method name="getMessage" type="String" line="61">
                <declaration name="sb" type="StringBuilder" line="63"/>
                <scope line="65"/>
                <scope line="69"/>
            </method>
        </class>
    </source>