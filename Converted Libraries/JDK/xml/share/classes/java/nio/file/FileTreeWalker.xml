<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.nio.file">
        <import package="java.nio.file.attribute"/>
        <import package="java.io.IOException"/>
        <import package="java.util"/>
        <import package="sun.nio.fs.BasicFileAttributesHolder"/>
        <class name="FileTreeWalker" line="33">
            <javadoc line="33">
                Simple file tree walker that works in a similar manner to nftw(3C).                
                <see>
                    Files#walkFileTree                    
                </see>
            </javadoc>
            <declaration name="followLinks" type="boolean" line="40"/>
            <declaration name="linkOptions" type="LinkOption[]" line="41"/>
            <declaration name="visitor" type="FileVisitor&lt;? super Path&gt;" line="42"/>
            <declaration name="maxDepth" type="int" line="43"/>
            <method name="FileTreeWalker" type="constructor" line="48">
                <params>
                    <param name="options" type="Set<FileVisitOption>"/>
                    <param name="visitor" type="FileVisitor<? super Path>"/>
                    <param name="maxDepth" type="int"/>
                </params>
                <comment line="51">
                    will throw NPE if options contains null                    
                </comment>
                <declaration name="fl" type="boolean" line="49"/>
                <scope line="50"/>
            </method>
            <javadoc line="65">
                Walk file tree starting at the given file                
            </javadoc>
            <method name="walk" type="void" line="68">
                <params>
                    <param name="start" type="Path"/>
                </params>
                <declaration name="result" type="FileVisitResult" line="69"/>
            </method>
            <javadoc line="75">
                @param filethe directory to visit                
                <param>
                    depthdepth remaining                    
                </param>
                <param>
                    ancestorsuse when cycle detection is enabled                    
                </param>
            </javadoc>
            <method name="walk" type="FileVisitResult" line="87">
                <params>
                    <param name="file" type="Path"/>
                    <param name="depth" type="int"/>
                    <param name="ancestors" type="List<AncestorDirectory>"/>
                </params>
                <comment line="88">
                    if attributes are cached then use them if possible                    
                </comment>
                <comment line="100">
                    attempt to get attributes of file. If fails and we are following                    
                </comment>
                <comment line="101">
                    links then a link target might not exist so get attributes of link                    
                </comment>
                <comment line="120">
                    If access to starting file is denied then SecurityException                    
                </comment>
                <comment line="121">
                    is thrown, otherwise the file is ignored.                    
                </comment>
                <comment line="128">
                    unable to get attributes of file                    
                </comment>
                <comment line="133">
                    at maximum depth or file is not a directory                    
                </comment>
                <comment line="138">
                    check for cycles when following links                    
                </comment>
                <comment line="142">
                    if this directory and ancestor has a file key then we compare                    
                </comment>
                <comment line="143">
                    them; otherwise we use less efficient isSameFile test.                    
                </comment>
                <comment line="148">
                    cycle detected                    
                </comment>
                <comment line="157">
                    ignore                    
                </comment>
                <comment line="159">
                    ignore                    
                </comment>
                <comment line="162">
                    cycle detected                    
                </comment>
                <comment line="172">
                    visit directory                    
                </comment>
                <comment line="177">
                    open the directory                    
                </comment>
                <comment line="183">
                    ignore, as per spec                    
                </comment>
                <comment line="187">
                    the exception notified to the postVisitDirectory method                    
                </comment>
                <comment line="190">
                    invoke preVisitDirectory and then visit each entry                    
                </comment>
                <comment line="201">
                    returning null will cause NPE to be thrown                    
                </comment>
                <comment line="205">
                    skip remaining siblings in this directory                    
                </comment>
                <comment line="210">
                    IOException will be notified to postVisitDirectory                    
                </comment>
                <comment line="217">
                    IOException will be notified to postVisitDirectory                    
                </comment>
                <comment line="223">
                    invoke postVisitDirectory last                    
                </comment>
                <comment line="227">
                    remove key from trail if doing cycle detection                    
                </comment>
                <declaration name="attrs" type="BasicFileAttributes" line="89"/>
                <scope line="93">
                    <declaration name="cached" type="BasicFileAttributes" line="94"/>
                </scope>
                <declaration name="exc" type="IOException" line="98"/>
                <scope line="102">
                    <scope line="103">
                        <scope line="104"/>
                        <scope line="106">
                            <scope line="107">
                                <scope line="108"/>
                                <scope line="112"/>
                            </scope>
                            <scope line="115"/>
                        </scope>
                    </scope>
                    <scope line="119"/>
                </scope>
                <scope line="129"/>
                <scope line="134"/>
                <scope line="139">
                    <declaration name="key" type="Object" line="140"/>
                    <scope line="144">
                        <declaration name="ancestorKey" type="Object" line="145"/>
                        <scope line="146">
                            <scope line="147"/>
                        </scope>
                        <scope line="152">
                            <declaration name="isSameFile" type="boolean" line="153"/>
                            <scope line="154"/>
                            <scope line="156"/>
                            <scope line="158"/>
                            <scope line="161"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="173">
                    <declaration name="stream" type="DirectoryStream&lt;Path&gt;" line="174"/>
                    <declaration name="result" type="FileVisitResult" line="175"/>
                    <scope line="178"/>
                    <scope line="180"/>
                    <scope line="182"/>
                    <declaration name="ioe" type="IOException" line="188"/>
                    <scope line="191">
                        <scope line="193"/>
                        <scope line="197">
                            <scope line="198"/>
                        </scope>
                        <scope line="209"/>
                    </scope>
                    <scope line="213">
                        <scope line="214"/>
                        <scope line="216"/>
                    </scope>
                </scope>
                <scope line="226">
                    <scope line="228"/>
                </scope>
            </method>
            <class name="AncestorDirectory" line="234">
                <declaration name="dir" type="Path" line="235"/>
                <declaration name="key" type="Object" line="236"/>
                <method name="AncestorDirectory" type="constructor" line="237">
                    <params>
                        <param name="dir" type="Path"/>
                        <param name="key" type="Object"/>
                    </params>
                </method>
                <method name="file" type="Path" line="241"/>
                <method name="fileKey" type="Object" line="244"/>
            </class>
        </class>
    </source>