<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.nio.file.spi">
        <import package="java.nio.file.Path"/>
        <import package="java.io.IOException"/>
        <class name="FileTypeDetector" line="31">
            <javadoc line="31">
                A file type detector for probing a file to guess its file type.
                  &lt;p&gt; A file type detector is a concrete implementation of this class, has a
                  zero-argument constructor, and implements the abstract methods specified
                  below.
                  &lt;p&gt; The means by which a file type detector determines the file type is
                  highly implementation specific. A simple implementation might examine the
                  &lt;em&gt;file extension&lt;/em&gt; (a convention used in some platforms) and map it to
                  a file type. In other cases, the file type may be stored as a file &lt;a
                  href=&quot;../attribute/package-summary.html&quot;&gt; attribute&lt;/a&gt; or the bytes in a
                  file may be examined to guess its file type.                
                <see>
                    java.nio.file.Files#probeContentType(Path)                    
                </see>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="checkPermission" type="Void" line="52">
                <declaration name="sm" type="SecurityManager" line="53"/>
            </method>
            <method name="FileTypeDetector" type="constructor" line="58">
                <params>
                    <param name="ignore" type="Void"/>
                </params>
            </method>
            <javadoc line="60">
                Initializes a new instance of this class.                
                <throws>
                    SecurityExceptionIf a security manager has been installed and it denies{@link RuntimePermission}&lt;tt&gt;(&quot;fileTypeDetector&quot;)&lt;/tt&gt;                    
                </throws>
            </javadoc>
            <method name="FileTypeDetector" type="constructor" line="67"/>
            <method name="probeContentType" type="String" line="71"/>
            <javadoc line="71">
                Probes the given file to guess its content type.
                  &lt;p&gt; The means by which this method determines the file type is highly
                  implementation specific. It may simply examine the file name, it may use
                  a file &lt;a href=&quot;../attribute/package-summary.html&quot;&gt;attribute&lt;/a&gt;,
                  or it may examines bytes in the file.
                  &lt;p&gt; The probe result is the string form of the value of a
                  Multipurpose Internet Mail Extension (MIME) content type as
                  defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;&lt;i&gt;RFC&amp;nbsp;2045:
                  Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet
                  Message Bodies&lt;/i&gt;&lt;/a&gt;. The string must be parsable according to the
                  grammar in the RFC 2045.                
                <param>
                    paththe path to the file to probe                    
                </param>
                <return>
                    The content type or {@code null} if the file type is not
                      recognized                    
                </return>
                <throws>
                    IOExceptionAn I/O error occurs                    
                </throws>
                <throws>
                    SecurityExceptionIf the implementation requires to access the file, and a
                      security manager is installed, and it denies an unspecified
                      permission required by a file system provider implementation.
                      If the file reference is associated with the default file system
                      provider then the {@link SecurityManager#checkRead(String)} method
                      is invoked to check read access to the file.                    
                </throws>
                <see>
                    java.nio.file.Files#probeContentType                    
                </see>
            </javadoc>
        </class>
    </source>