<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.nio.charset.spi">
        <import package="java.nio.charset.Charset"/>
        <import package="java.util.Iterator"/>
        <class name="CharsetProvider" line="32">
            <javadoc line="32">
                Charset service-provider class.
                  &lt;p&gt; A charset provider is a concrete subclass of this class that has a
                  zero-argument constructor and some number of associated charset
                  implementation classes.  Charset providers may be installed in an instance
                  of the Java platform as extensions, that is, jar files placed into any of
                  the usual extension directories.  Providers may also be made available by
                  adding them to the applet or application class path or by some other
                  platform-specific means.  Charset providers are looked up via the current
                  thread&apos;s {@link java.lang.Thread#getContextClassLoader() &lt;/code&gt;context
                  class loader&lt;code&gt;}.
                  &lt;p&gt; A charset provider identifies itself with a provider-configuration file
                  named &lt;tt&gt;java.nio.charset.spi.CharsetProvider&lt;/tt&gt; in the resource
                  directory &lt;tt&gt;META-INF/services&lt;/tt&gt;.  The file should contain a list of
                  fully-qualified concrete charset-provider class names, one per line.  A line
                  is terminated by any one of a line feed (&lt;tt&gt;&apos;\n&apos;&lt;/tt&gt;), a carriage return
                  (&lt;tt&gt;&apos;\r&apos;&lt;/tt&gt;), or a carriage return followed immediately by a line feed.
                  Space and tab characters surrounding each name, as well as blank lines, are
                  ignored.  The comment character is &lt;tt&gt;&apos;#&apos;&lt;/tt&gt; (&lt;tt&gt;&apos;&amp;#92;u0023&apos;&lt;/tt&gt;); on
                  each line all characters following the first comment character are ignored.
                  The file must be encoded in UTF-8.
                  &lt;p&gt; If a particular concrete charset provider class is named in more than
                  one configuration file, or is named in the same configuration file more than
                  once, then the duplicates will be ignored.  The configuration file naming a
                  particular provider need not be in the same jar file or other distribution
                  unit as the provider itself.  The provider must be accessible from the same
                  class loader that was initially queried to locate the configuration file;
                  this is not necessarily the class loader that loaded the file. &lt;/p&gt;                
                <author>
                    Mark Reinhold                    
                </author>
                <author>
                    JSR-51 Expert Group                    
                </author>
                <since>
                    1.4                    
                </since>
                <see>
                    java.nio.charset.Charset                    
                </see>
            </javadoc>
            <javadoc line="74">
                Initializes a new charset provider. &lt;/p&gt;                
                <throws>
                    SecurityExceptionIf a security manager has been installed and it denies{@link RuntimePermission}&lt;tt&gt;(&quot;charsetProvider&quot;)&lt;/tt&gt;                    
                </throws>
            </javadoc>
            <method name="CharsetProvider" type="constructor" line="81">
                <declaration name="sm" type="SecurityManager" line="82"/>
            </method>
            <method name="charsets" type="Iterator<Charset>" line="87"/>
            <javadoc line="87">
                Creates an iterator that iterates over the charsets supported by this
                  provider.  This method is used in the implementation of the {@link java.nio.charset.Charset#availableCharsets Charset.availableCharsets}method. &lt;/p&gt;                
                <return>
                    The new iterator                    
                </return>
            </javadoc>
            <method name="charsetForName" type="Charset" line="97"/>
            <javadoc line="97">
                Retrieves a charset for the given charset name. &lt;/p&gt;                
                <param>
                    charsetNameThe name of the requested charset; may be either
                      a canonical name or an alias                    
                </param>
                <return>
                    A charset object for the named charset,
                      or &lt;tt&gt;null&lt;/tt&gt; if the named charset
                      is not supported by this provider                    
                </return>
            </javadoc>
        </class>
    </source>