<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.nio">
        <import package="java.security.AccessController"/>
        <import package="sun.misc.Unsafe"/>
        <import package="sun.misc.VM"/>
        <class name="Bits" line="32">
            <comment line="37">
                package-private                
            </comment>
            <comment line="42">
                -- Swapping --                
            </comment>
            <comment line="61">
                -- get/put char --                
            </comment>
            <comment line="133">
                -- get/put short --                
            </comment>
            <comment line="205">
                -- get/put int --                
            </comment>
            <comment line="298">
                -- get/put long --                
            </comment>
            <comment line="433">
                -- get/put float --                
            </comment>
            <comment line="490">
                -- get/put double --                
            </comment>
            <comment line="547">
                -- Unsafe access --                
            </comment>
            <comment line="564">
                -- Processor and memory-system properties --                
            </comment>
            <comment line="619">
                -- Direct memory management --                
            </comment>
            <comment line="621">
                A user-settable upper limit on the maximum amount of allocatable
                 direct buffer memory.  This value may be changed during VM
                 initialization if it is launched with &quot;-XX:MaxDirectMemorySize=&lt;size&gt;&quot;.                
            </comment>
            <comment line="630">
                These methods should be called whenever direct memory is allocated or
                 freed.  They allow the user to control the amount of direct memory
                 which a process may access.  All sizes are specified in bytes.                
            </comment>
            <comment line="676">
                -- Monitoring of direct buffer usage --                
            </comment>
            <comment line="706">
                -- Bulk get/put acceleration --                
            </comment>
            <comment line="708">
                These numbers represent the point at which we have empirically
                 determined that the average cost of a JNI call exceeds the expense
                 of an element by element copy.  These numbers may change over time.                
            </comment>
            <comment line="714">
                This number limits the number of bytes to copy per call to Unsafe&apos;s
                 copyMemory method. A limit is imposed to allow for safepoint polling
                 during a large copy                
            </comment>
            <comment line="719">
                These methods do no bounds checking.  Verification that the copy will not
                 result in memory corruption should be done prior to invocation.
                 All positions and lengths are specified in bytes.                
            </comment>
            <javadoc line="32">
                Access to bits, native and otherwise.                
            </javadoc>
            <method name="Bits" type="constructor" line="38"/>
            <method name="swap" type="short" line="43">
                <params>
                    <param name="x" type="short"/>
                </params>
            </method>
            <method name="swap" type="char" line="47">
                <params>
                    <param name="x" type="char"/>
                </params>
            </method>
            <method name="swap" type="int" line="51">
                <params>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="swap" type="long" line="55">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <method name="makeChar" type="char" line="62">
                <params>
                    <param name="b1" type="byte"/>
                    <param name="b0" type="byte"/>
                </params>
            </method>
            <method name="getCharL" type="char" line="66">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                </params>
            </method>
            <method name="getCharL" type="char" line="71">
                <params>
                    <param name="a" type="long"/>
                </params>
            </method>
            <method name="getCharB" type="char" line="76">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                </params>
            </method>
            <method name="getCharB" type="char" line="81">
                <params>
                    <param name="a" type="long"/>
                </params>
            </method>
            <method name="getChar" type="char" line="86">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
            </method>
            <method name="getChar" type="char" line="90">
                <params>
                    <param name="a" type="long"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
            </method>
            <method name="char1" type="byte" line="94">
                <params>
                    <param name="x" type="char"/>
                </params>
            </method>
            <method name="char0" type="byte" line="95">
                <params>
                    <param name="x" type="char"/>
                </params>
            </method>
            <method name="putCharL" type="void" line="97">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                    <param name="x" type="char"/>
                </params>
            </method>
            <method name="putCharL" type="void" line="102">
                <params>
                    <param name="a" type="long"/>
                    <param name="x" type="char"/>
                </params>
            </method>
            <method name="putCharB" type="void" line="107">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                    <param name="x" type="char"/>
                </params>
            </method>
            <method name="putCharB" type="void" line="112">
                <params>
                    <param name="a" type="long"/>
                    <param name="x" type="char"/>
                </params>
            </method>
            <method name="putChar" type="void" line="117">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                    <param name="x" type="char"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
            </method>
            <method name="putChar" type="void" line="124">
                <params>
                    <param name="a" type="long"/>
                    <param name="x" type="char"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
            </method>
            <method name="makeShort" type="short" line="134">
                <params>
                    <param name="b1" type="byte"/>
                    <param name="b0" type="byte"/>
                </params>
            </method>
            <method name="getShortL" type="short" line="138">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                </params>
            </method>
            <method name="getShortL" type="short" line="143">
                <params>
                    <param name="a" type="long"/>
                </params>
            </method>
            <method name="getShortB" type="short" line="148">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                </params>
            </method>
            <method name="getShortB" type="short" line="153">
                <params>
                    <param name="a" type="long"/>
                </params>
            </method>
            <method name="getShort" type="short" line="158">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
            </method>
            <method name="getShort" type="short" line="162">
                <params>
                    <param name="a" type="long"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
            </method>
            <method name="short1" type="byte" line="166">
                <params>
                    <param name="x" type="short"/>
                </params>
            </method>
            <method name="short0" type="byte" line="167">
                <params>
                    <param name="x" type="short"/>
                </params>
            </method>
            <method name="putShortL" type="void" line="169">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                    <param name="x" type="short"/>
                </params>
            </method>
            <method name="putShortL" type="void" line="174">
                <params>
                    <param name="a" type="long"/>
                    <param name="x" type="short"/>
                </params>
            </method>
            <method name="putShortB" type="void" line="179">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                    <param name="x" type="short"/>
                </params>
            </method>
            <method name="putShortB" type="void" line="184">
                <params>
                    <param name="a" type="long"/>
                    <param name="x" type="short"/>
                </params>
            </method>
            <method name="putShort" type="void" line="189">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                    <param name="x" type="short"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
            </method>
            <method name="putShort" type="void" line="196">
                <params>
                    <param name="a" type="long"/>
                    <param name="x" type="short"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
            </method>
            <method name="makeInt" type="int" line="206">
                <params>
                    <param name="b3" type="byte"/>
                    <param name="b2" type="byte"/>
                    <param name="b1" type="byte"/>
                    <param name="b0" type="byte"/>
                </params>
            </method>
            <method name="getIntL" type="int" line="213">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                </params>
            </method>
            <method name="getIntL" type="int" line="220">
                <params>
                    <param name="a" type="long"/>
                </params>
            </method>
            <method name="getIntB" type="int" line="227">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                </params>
            </method>
            <method name="getIntB" type="int" line="234">
                <params>
                    <param name="a" type="long"/>
                </params>
            </method>
            <method name="getInt" type="int" line="241">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
            </method>
            <method name="getInt" type="int" line="245">
                <params>
                    <param name="a" type="long"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
            </method>
            <method name="int3" type="byte" line="249">
                <params>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="int2" type="byte" line="250">
                <params>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="int1" type="byte" line="251">
                <params>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="int0" type="byte" line="252">
                <params>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="putIntL" type="void" line="254">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="putIntL" type="void" line="261">
                <params>
                    <param name="a" type="long"/>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="putIntB" type="void" line="268">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="putIntB" type="void" line="275">
                <params>
                    <param name="a" type="long"/>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="putInt" type="void" line="282">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                    <param name="x" type="int"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
            </method>
            <method name="putInt" type="void" line="289">
                <params>
                    <param name="a" type="long"/>
                    <param name="x" type="int"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
            </method>
            <method name="makeLong" type="long" line="301">
                <params>
                    <param name="b7" type="byte"/>
                    <param name="b6" type="byte"/>
                    <param name="b5" type="byte"/>
                    <param name="b4" type="byte"/>
                    <param name="b3" type="byte"/>
                    <param name="b2" type="byte"/>
                    <param name="b1" type="byte"/>
                    <param name="b0" type="byte"/>
                </params>
            </method>
            <method name="getLongL" type="long" line="312">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                </params>
            </method>
            <method name="getLongL" type="long" line="323">
                <params>
                    <param name="a" type="long"/>
                </params>
            </method>
            <method name="getLongB" type="long" line="334">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                </params>
            </method>
            <method name="getLongB" type="long" line="345">
                <params>
                    <param name="a" type="long"/>
                </params>
            </method>
            <method name="getLong" type="long" line="356">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
            </method>
            <method name="getLong" type="long" line="360">
                <params>
                    <param name="a" type="long"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
            </method>
            <method name="long7" type="byte" line="364">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <method name="long6" type="byte" line="365">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <method name="long5" type="byte" line="366">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <method name="long4" type="byte" line="367">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <method name="long3" type="byte" line="368">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <method name="long2" type="byte" line="369">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <method name="long1" type="byte" line="370">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <method name="long0" type="byte" line="371">
                <params>
                    <param name="x" type="long"/>
                </params>
            </method>
            <method name="putLongL" type="void" line="373">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                    <param name="x" type="long"/>
                </params>
            </method>
            <method name="putLongL" type="void" line="384">
                <params>
                    <param name="a" type="long"/>
                    <param name="x" type="long"/>
                </params>
            </method>
            <method name="putLongB" type="void" line="395">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                    <param name="x" type="long"/>
                </params>
            </method>
            <method name="putLongB" type="void" line="406">
                <params>
                    <param name="a" type="long"/>
                    <param name="x" type="long"/>
                </params>
            </method>
            <method name="putLong" type="void" line="417">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                    <param name="x" type="long"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
            </method>
            <method name="putLong" type="void" line="424">
                <params>
                    <param name="a" type="long"/>
                    <param name="x" type="long"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
            </method>
            <method name="getFloatL" type="float" line="434">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                </params>
            </method>
            <method name="getFloatL" type="float" line="438">
                <params>
                    <param name="a" type="long"/>
                </params>
            </method>
            <method name="getFloatB" type="float" line="442">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                </params>
            </method>
            <method name="getFloatB" type="float" line="446">
                <params>
                    <param name="a" type="long"/>
                </params>
            </method>
            <method name="getFloat" type="float" line="450">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
            </method>
            <method name="getFloat" type="float" line="454">
                <params>
                    <param name="a" type="long"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
            </method>
            <method name="putFloatL" type="void" line="458">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                    <param name="x" type="float"/>
                </params>
            </method>
            <method name="putFloatL" type="void" line="462">
                <params>
                    <param name="a" type="long"/>
                    <param name="x" type="float"/>
                </params>
            </method>
            <method name="putFloatB" type="void" line="466">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                    <param name="x" type="float"/>
                </params>
            </method>
            <method name="putFloatB" type="void" line="470">
                <params>
                    <param name="a" type="long"/>
                    <param name="x" type="float"/>
                </params>
            </method>
            <method name="putFloat" type="void" line="474">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                    <param name="x" type="float"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
            </method>
            <method name="putFloat" type="void" line="481">
                <params>
                    <param name="a" type="long"/>
                    <param name="x" type="float"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
            </method>
            <method name="getDoubleL" type="double" line="491">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                </params>
            </method>
            <method name="getDoubleL" type="double" line="495">
                <params>
                    <param name="a" type="long"/>
                </params>
            </method>
            <method name="getDoubleB" type="double" line="499">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                </params>
            </method>
            <method name="getDoubleB" type="double" line="503">
                <params>
                    <param name="a" type="long"/>
                </params>
            </method>
            <method name="getDouble" type="double" line="507">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
            </method>
            <method name="getDouble" type="double" line="511">
                <params>
                    <param name="a" type="long"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
            </method>
            <method name="putDoubleL" type="void" line="515">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                    <param name="x" type="double"/>
                </params>
            </method>
            <method name="putDoubleL" type="void" line="519">
                <params>
                    <param name="a" type="long"/>
                    <param name="x" type="double"/>
                </params>
            </method>
            <method name="putDoubleB" type="void" line="523">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                    <param name="x" type="double"/>
                </params>
            </method>
            <method name="putDoubleB" type="void" line="527">
                <params>
                    <param name="a" type="long"/>
                    <param name="x" type="double"/>
                </params>
            </method>
            <method name="putDouble" type="void" line="531">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="bi" type="int"/>
                    <param name="x" type="double"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
            </method>
            <method name="putDouble" type="void" line="538">
                <params>
                    <param name="a" type="long"/>
                    <param name="x" type="double"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
            </method>
            <declaration name="unsafe" type="Unsafe" line="548"/>
            <method name="_get" type="byte" line="550">
                <params>
                    <param name="a" type="long"/>
                </params>
            </method>
            <method name="_put" type="void" line="554">
                <params>
                    <param name="a" type="long"/>
                    <param name="b" type="byte"/>
                </params>
            </method>
            <method name="unsafe" type="Unsafe" line="558"/>
            <declaration name="byteOrder" type="ByteOrder" line="565"/>
            <method name="byteOrder" type="ByteOrder" line="567"/>
            <scope line="573">
                <declaration name="a" type="long" line="574"/>
                <scope line="575">
                    <declaration name="b" type="byte" line="577"/>
                </scope>
                <scope line="585"/>
            </scope>
            <declaration name="pageSize" type="int" line="591"/>
            <method name="pageSize" type="int" line="593"/>
            <method name="pageCount" type="int" line="599">
                <params>
                    <param name="size" type="long"/>
                </params>
            </method>
            <declaration name="unaligned" type="boolean" line="603"/>
            <declaration name="unalignedKnown" type="boolean" line="604"/>
            <method name="unaligned" type="boolean" line="606">
                <declaration name="arch" type="String" line="609"/>
            </method>
            <declaration name="maxMemory" type="long" line="623"/>
            <declaration name="reservedMemory" type="long" line="624"/>
            <declaration name="totalCapacity" type="long" line="625"/>
            <declaration name="count" type="long" line="626"/>
            <declaration name="memoryLimitSet" type="boolean" line="627"/>
            <method name="reserveMemory" type="void" line="632">
                <params>
                    <param name="size" type="long"/>
                    <param name="cap" type="int"/>
                </params>
                <comment line="639">
                    -XX:MaxDirectMemorySize limits the total capacity rather than the
                     actual memory usage, which will differ when buffers are page
                     aligned.                    
                </comment>
                <comment line="654">
                    Restore interrupt status                    
                </comment>
                <scope line="633">
                    <scope line="634"/>
                    <scope line="641"/>
                </scope>
                <scope line="650"/>
                <scope line="652"/>
                <scope line="656"/>
            </method>
            <method name="unreserveMemory" type="void" line="666">
                <params>
                    <param name="size" type="long"/>
                    <param name="cap" type="int"/>
                </params>
                <scope line="667"/>
            </method>
            <scope line="677">
                <anonymous_class line="680">
                    <method name="getDirectBufferPool" type="sun.misc.JavaNioAccess.BufferPool" line="682">
                        <anonymous_class line="683">
                            <method name="getName" type="String" line="685"/>
                            <method name="getCount" type="long" line="689"/>
                            <method name="getTotalCapacity" type="long" line="693"/>
                            <method name="getMemoryUsed" type="long" line="697"/>
                        </anonymous_class>
                    </method>
                </anonymous_class>
            </scope>
            <declaration name="JNI_COPY_TO_ARRAY_THRESHOLD" type="int" line="710"/>
            <declaration name="JNI_COPY_FROM_ARRAY_THRESHOLD" type="int" line="711"/>
            <declaration name="UNSAFE_COPY_THRESHOLD" type="long" line="716"/>
            <javadoc line="722">
                Copy from given source array to destination address.                
                <param>
                    srcsource array                    
                </param>
                <param>
                    srcBaseOffsetoffset of first element of storage in source array                    
                </param>
                <param>
                    srcPosoffset within source array of the first element to read                    
                </param>
                <param>
                    dstAddrdestination address                    
                </param>
                <param>
                    lengthnumber of bytes to copy                    
                </param>
            </javadoc>
            <method name="copyFromArray" type="void" line="738">
                <params>
                    <param name="src" type="Object"/>
                    <param name="srcBaseOffset" type="long"/>
                    <param name="srcPos" type="long"/>
                    <param name="dstAddr" type="long"/>
                    <param name="length" type="long"/>
                </params>
                <declaration name="offset" type="long" line="739"/>
                <scope line="740">
                    <declaration name="size" type="long" line="741"/>
                </scope>
            </method>
            <javadoc line="749">
                Copy from source address into given destination array.                
                <param>
                    srcAddrsource address                    
                </param>
                <param>
                    dstdestination array                    
                </param>
                <param>
                    dstBaseOffsetoffset of first element of storage in destination array                    
                </param>
                <param>
                    dstPosoffset within destination array of the first element to write                    
                </param>
                <param>
                    lengthnumber of bytes to copy                    
                </param>
            </javadoc>
            <method name="copyToArray" type="void" line="765">
                <params>
                    <param name="srcAddr" type="long"/>
                    <param name="dst" type="Object"/>
                    <param name="dstBaseOffset" type="long"/>
                    <param name="dstPos" type="long"/>
                    <param name="length" type="long"/>
                </params>
                <declaration name="offset" type="long" line="766"/>
                <scope line="767">
                    <declaration name="size" type="long" line="768"/>
                </scope>
            </method>
            <method name="copyFromCharArray" type="void" line="778">
                <params>
                    <param name="src" type="Object"/>
                    <param name="srcPos" type="long"/>
                    <param name="dstAddr" type="long"/>
                    <param name="length" type="long"/>
                </params>
            </method>
            <method name="copyToCharArray" type="void" line="784">
                <params>
                    <param name="srcAddr" type="long"/>
                    <param name="dst" type="Object"/>
                    <param name="dstPos" type="long"/>
                    <param name="length" type="long"/>
                </params>
            </method>
            <method name="copyFromShortArray" type="void" line="788"/>
            <method name="copyToShortArray" type="void" line="790"/>
            <method name="copyFromIntArray" type="void" line="793"/>
            <method name="copyToIntArray" type="void" line="795"/>
            <method name="copyFromLongArray" type="void" line="798"/>
            <method name="copyToLongArray" type="void" line="800"/>
        </class>
    </source>