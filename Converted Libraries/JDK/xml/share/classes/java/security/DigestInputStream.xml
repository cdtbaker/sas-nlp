<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.security">
        <import package="java.io.IOException"/>
        <import package="java.io.EOFException"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.FilterInputStream"/>
        <import package="java.io.PrintStream"/>
        <import package="java.io.ByteArrayInputStream"/>
        <class name="DigestInputStream" line="35">
            <extends class="FilterInputStream"/>
            <comment line="67">
                                
            </comment>
            <comment line="69">
                                
            </comment>
            <javadoc line="35">
                A transparent stream that updates the associated message digest using
                  the bits going through the stream.
                  &lt;p&gt;To complete the message digest computation, call one of the
                  &lt;code&gt;digest&lt;/code&gt; methods on the associated message
                  digest after your calls to one of this digest input stream&apos;s{@link #read() read} methods.
                  &lt;p&gt;It is possible to turn this stream on or off (see{@link #on(boolean) on}). When it is on, a call to one of the
                  &lt;code&gt;read&lt;/code&gt; methods
                  results in an update on the message digest.  But when it is off,
                  the message digest is not updated. The default is for the stream
                  to be on.
                  &lt;p&gt;Note that digest objects can compute only one digest (see{@link MessageDigest}),
                  so that in order to compute intermediate digests, a caller should
                  retain a handle onto the digest object, and clone it for each
                  digest to be computed, leaving the orginal digest untouched.                
                <see>
                    MessageDigest                    
                </see>
                <see>
                    DigestOutputStream                    
                </see>
                <author>
                    Benjamin Renaud                    
                </author>
            </javadoc>
            <declaration name="on" type="boolean" line="69"/>
            <declaration name="digest" type="MessageDigest" line="71"/>
            <javadoc line="71">
                The message digest associated with this stream.                
            </javadoc>
            <javadoc line="76">
                Creates a digest input stream, using the specified input stream
                  and message digest.                
                <param>
                    stream the input stream.                    
                </param>
                <param>
                    digest the message digest to associate with this stream.                    
                </param>
            </javadoc>
            <method name="DigestInputStream" type="constructor" line="84">
                <params>
                    <param name="stream" type="InputStream"/>
                    <param name="digest" type="MessageDigest"/>
                </params>
            </method>
            <javadoc line="89">
                Returns the message digest associated with this stream.                
                <return>
                    the message digest associated with this stream.                    
                </return>
                <see>
                    #setMessageDigest(java.security.MessageDigest)                    
                </see>
            </javadoc>
            <method name="getMessageDigest" type="MessageDigest" line="95"/>
            <javadoc line="99">
                Associates the specified message digest with this stream.                
                <param>
                    digest the message digest to be associated with this stream.                    
                </param>
                <see>
                    #getMessageDigest()                    
                </see>
            </javadoc>
            <method name="setMessageDigest" type="void" line="105">
                <params>
                    <param name="digest" type="MessageDigest"/>
                </params>
            </method>
            <javadoc line="109">
                Reads a byte, and updates the message digest (if the digest
                  function is on).  That is, this method reads a byte from the
                  input stream, blocking until the byte is actually read. If the
                  digest function is on (see {@link #on(boolean) on}), this method
                  will then call &lt;code&gt;update&lt;/code&gt; on the message digest associated
                  with this stream, passing it the byte read.                
                <return>
                    the byte read.                    
                </return>
                <exception>
                    IOException if an I/O error occurs.                    
                </exception>
                <see>
                    MessageDigest#update(byte)                    
                </see>
            </javadoc>
            <method name="read" type="int" line="123">
                <declaration name="ch" type="int" line="124"/>
                <scope line="125"/>
            </method>
            <javadoc line="131">
                Reads into a byte array, and updates the message digest (if the
                  digest function is on).  That is, this method reads up to
                  &lt;code&gt;len&lt;/code&gt; bytes from the input stream into the array
                  &lt;code&gt;b&lt;/code&gt;, starting at offset &lt;code&gt;off&lt;/code&gt;. This method
                  blocks until the data is actually
                  read. If the digest function is on (see{@link #on(boolean) on}), this method will then call &lt;code&gt;update&lt;/code&gt;
                  on the message digest associated with this stream, passing it
                  the data.                
                <param>
                    b the array into which the data is read.                    
                </param>
                <param>
                    off the starting offset into <code>b</code> of where the
                      data should be placed.                    
                </param>
                <param>
                    len the maximum number of bytes to be read from the input
                      stream into b, starting at offset <code>off</code>.                    
                </param>
                <return>
                    the actual number of bytes read. This is less than
                      <code>len</code> if the end of the stream is reached prior to
                      reading <code>len</code> bytes. -1 is returned if no bytes were
                      read because the end of the stream had already been reached when
                      the call was made.                    
                </return>
                <exception>
                    IOException if an I/O error occurs.                    
                </exception>
                <see>
                    MessageDigest#update(byte[],int,int)                    
                </see>
            </javadoc>
            <method name="read" type="int" line="160">
                <params>
                    <param name="b" type="byte[]"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <declaration name="result" type="int" line="161"/>
                <scope line="162"/>
            </method>
            <javadoc line="168">
                Turns the digest function on or off. The default is on.  When
                  it is on, a call to one of the &lt;code&gt;read&lt;/code&gt; methods results in an
                  update on the message digest.  But when it is off, the message
                  digest is not updated.                
                <param>
                    on true to turn the digest function on, false to turn
                      it off.                    
                </param>
            </javadoc>
            <method name="on" type="void" line="177">
                <params>
                    <param name="on" type="boolean"/>
                </params>
            </method>
            <javadoc line="181">
                Prints a string representation of this digest input stream and
                  its associated message digest object.                
            </javadoc>
            <method name="toString" type="String" line="185"/>
        </class>
    </source>