<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.security">
        <class name="InvalidKeyException" line="29">
            <extends class="KeyException"/>
            <javadoc line="29">
                This is the exception for invalid Keys (invalid encoding, wrong
                  length, uninitialized, etc).                
                <author>
                    Benjamin Renaud                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="38"/>
            <javadoc line="40">
                Constructs an InvalidKeyException with no detail message. A
                  detail message is a String that describes this particular
                  exception.                
            </javadoc>
            <method name="InvalidKeyException" type="constructor" line="45"/>
            <javadoc line="49">
                Constructs an InvalidKeyException with the specified detail
                  message. A detail message is a String that describes this
                  particular exception.                
                <param>
                    msg the detail message.                    
                </param>
            </javadoc>
            <method name="InvalidKeyException" type="constructor" line="56">
                <params>
                    <param name="msg" type="String"/>
                </params>
            </method>
            <javadoc line="60">
                Creates a &lt;code&gt;InvalidKeyException&lt;/code&gt; with the specified
                  detail message and cause.                
                <param>
                    message the detail message (which is saved for later retrieval
                      by the {@link #getMessage()} method).                    
                </param>
                <param>
                    cause the cause (which is saved for later retrieval by the{@link #getCause()} method).  (A &lt;tt&gt;null&lt;/tt&gt; value is permitted,
                      and indicates that the cause is nonexistent or unknown.)                    
                </param>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="InvalidKeyException" type="constructor" line="71">
                <params>
                    <param name="message" type="String"/>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
            <javadoc line="75">
                Creates a &lt;code&gt;InvalidKeyException&lt;/code&gt; with the specified cause
                  and a detail message of &lt;tt&gt;(cause==null ? null : cause.toString())&lt;/tt&gt;
                  (which typically contains the class and detail message of
                  &lt;tt&gt;cause&lt;/tt&gt;).                
                <param>
                    cause the cause (which is saved for later retrieval by the{@link #getCause()} method).  (A &lt;tt&gt;null&lt;/tt&gt; value is permitted,
                      and indicates that the cause is nonexistent or unknown.)                    
                </param>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="InvalidKeyException" type="constructor" line="86">
                <params>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
        </class>
    </source>