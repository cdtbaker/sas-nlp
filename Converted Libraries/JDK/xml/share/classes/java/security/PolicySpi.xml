<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.security">
        <class name="PolicySpi" line="2">
            <javadoc line="2">
                This class defines the &lt;i&gt;Service Provider Interface&lt;/i&gt; (&lt;b&gt;SPI&lt;/b&gt;)
                  for the &lt;code&gt;Policy&lt;/code&gt; class.
                  All the abstract methods in this class must be implemented by each
                  service provider who wishes to supply a Policy implementation.
                  &lt;p&gt; Subclass implementations of this abstract class must provide
                  a public constructor that takes a &lt;code&gt;Policy.Parameters&lt;/code&gt;
                  object as an input parameter.  This constructor also must throw
                  an IllegalArgumentException if it does not understand the
                  &lt;code&gt;Policy.Parameters&lt;/code&gt; input.                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="engineImplies" type="boolean" line="15"/>
            <javadoc line="15">
                Check whether the policy has granted a Permission to a ProtectionDomain.                
                <param>
                    domain the ProtectionDomain to check.                    
                </param>
                <param>
                    permission check whether this permission is granted to the
                      specified domain.                    
                </param>
                <return>
                    boolean true if the permission is granted to the domain.                    
                </return>
            </javadoc>
            <javadoc line="23">
                Refreshes/reloads the policy configuration. The behavior of this method
                  depends on the implementation. For example, calling &lt;code&gt;refresh&lt;/code&gt;
                  on a file-based policy will cause the file to be re-read.
                  &lt;p&gt; The default implementation of this method does nothing.
                  This method should be overridden if a refresh operation is supported
                  by the policy implementation.                
            </javadoc>
            <method name="engineRefresh" type="void" line="31"/>
            <javadoc line="33">
                Return a PermissionCollection object containing the set of
                  permissions granted to the specified CodeSource.
                  &lt;p&gt; The default implementation of this method returns
                  Policy.UNSUPPORTED_EMPTY_COLLECTION object.  This method can be
                  overridden if the policy implementation can return a set of
                  permissions granted to a CodeSource.                
                <param>
                    codesource the CodeSource to which the returned
                      PermissionCollection has been granted.                    
                </param>
                <return>
                    a set of permissions granted to the specified CodeSource.
                      If this operation is supported, the returned
                      set of permissions must be a new mutable instance
                      and it must support heterogeneous Permission types.
                      If this operation is not supported,
                      Policy.UNSUPPORTED_EMPTY_COLLECTION is returned.                    
                </return>
            </javadoc>
            <method name="engineGetPermissions" type="PermissionCollection" line="49">
                <params>
                    <param name="codesource" type="CodeSource"/>
                </params>
            </method>
            <javadoc line="52">
                Return a PermissionCollection object containing the set of
                  permissions granted to the specified ProtectionDomain.
                  &lt;p&gt; The default implementation of this method returns
                  Policy.UNSUPPORTED_EMPTY_COLLECTION object.  This method can be
                  overridden if the policy implementation can return a set of
                  permissions granted to a ProtectionDomain.                
                <param>
                    domain the ProtectionDomain to which the returned
                      PermissionCollection has been granted.                    
                </param>
                <return>
                    a set of permissions granted to the specified ProtectionDomain.
                      If this operation is supported, the returned
                      set of permissions must be a new mutable instance
                      and it must support heterogeneous Permission types.
                      If this operation is not supported,
                      Policy.UNSUPPORTED_EMPTY_COLLECTION is returned.                    
                </return>
            </javadoc>
            <method name="engineGetPermissions" type="PermissionCollection" line="68">
                <params>
                    <param name="domain" type="ProtectionDomain"/>
                </params>
            </method>
        </class>
    </source>