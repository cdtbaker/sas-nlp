<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.security">
        <import package="javax.security.auth.Subject"/>
        <import package="javax.security.auth.login.LoginException"/>
        <import package="javax.security.auth.callback.CallbackHandler"/>
        <class name="AuthProvider" line="32">
            <extends class="Provider"/>
            <javadoc line="32">
                This class defines login and logout methods for a provider.
                  &lt;p&gt; While callers may invoke &lt;code&gt;login&lt;/code&gt; directly,
                  the provider may also invoke &lt;code&gt;login&lt;/code&gt; on behalf of callers
                  if it determines that a login must be performed
                  prior to certain operations.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <javadoc line="44">
                Constructs a provider with the specified name, version number,
                  and information.                
                <param>
                    name the provider name.                    
                </param>
                <param>
                    version the provider version number.                    
                </param>
                <param>
                    info a description of the provider and its services.                    
                </param>
            </javadoc>
            <method name="AuthProvider" type="constructor" line="52">
                <params>
                    <param name="name" type="String"/>
                    <param name="version" type="double"/>
                    <param name="info" type="String"/>
                </params>
            </method>
            <method name="login" type="void" line="56"/>
            <javadoc line="56">
                Log in to this provider.
                  &lt;p&gt; The provider relies on a &lt;code&gt;CallbackHandler&lt;/code&gt;
                  to obtain authentication information from the caller
                  (a PIN, for example).  If the caller passes a &lt;code&gt;null&lt;/code&gt;
                  handler to this method, the provider uses the handler set in the
                  &lt;code&gt;setCallbackHandler&lt;/code&gt; method.
                  If no handler was set in that method, the provider queries the
                  &lt;i&gt;auth.login.defaultCallbackHandler&lt;/i&gt; security property
                  for the fully qualified class name of a default handler implementation.
                  If the security property is not set,
                  the provider is assumed to have alternative means
                  for obtaining authentication information.                
                <param>
                    subject the <code>Subject</code> which may contain
                      principals/credentials used for authentication,
                      or may be populated with additional principals/credentials
                      after successful authentication has completed.
                      This parameter may be <code>null</code>.                    
                </param>
                <param>
                    handler the <code>CallbackHandler</code> used by
                      this provider to obtain authentication information
                      from the caller, which may be <code>null</code>                    
                </param>
                <exception>
                    LoginException if the login operation fails                    
                </exception>
                <exception>
                    SecurityException if the caller does not pass a
                      security check for
                      <code>SecurityPermission("authProvider.<i>name</i>")</code>,
                      where <i>name</i> is the value returned by
                      this provider's <code>getName</code> method                    
                </exception>
            </javadoc>
            <method name="logout" type="void" line="90"/>
            <javadoc line="90">
                Log out from this provider.                
                <exception>
                    LoginException if the logout operation fails                    
                </exception>
                <exception>
                    SecurityException if the caller does not pass a
                      security check for
                      <code>SecurityPermission("authProvider.<i>name</i>")</code>,
                      where <i>name</i> is the value returned by
                      this provider's <code>getName</code> method                    
                </exception>
            </javadoc>
            <method name="setCallbackHandler" type="void" line="102"/>
            <javadoc line="102">
                Set a &lt;code&gt;CallbackHandler&lt;/code&gt;.
                  &lt;p&gt; The provider uses this handler if one is not passed to the
                  &lt;code&gt;login&lt;/code&gt; method.  The provider also uses this handler
                  if it invokes &lt;code&gt;login&lt;/code&gt; on behalf of callers.
                  In either case if a handler is not set via this method,
                  the provider queries the
                  &lt;i&gt;auth.login.defaultCallbackHandler&lt;/i&gt; security property
                  for the fully qualified class name of a default handler implementation.
                  If the security property is not set,
                  the provider is assumed to have alternative means
                  for obtaining authentication information.                
                <param>
                    handler a <code>CallbackHandler</code> for obtaining
                      authentication information, which may be <code>null</code>                    
                </param>
                <exception>
                    SecurityException if the caller does not pass a
                      security check for
                      <code>SecurityPermission("authProvider.<i>name</i>")</code>,
                      where <i>name</i> is the value returned by
                      this provider's <code>getName</code> method                    
                </exception>
            </javadoc>
        </class>
    </source>