<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.security.acl">
        <import package="java.util.Enumeration"/>
        <import package="java.security.Principal"/>
        <interface name="Acl">
            <implements interface="Owner"/>
            <javadoc line="4">
                Interface representing an Access Control List (ACL).  An Access
                  Control List is a data structure used to guard access to
                  resources.&lt;p&gt;
                  An ACL can be thought of as a data structure with multiple ACL
                  entries.  Each ACL entry, of interface type AclEntry, contains a
                  set of permissions associated with a particular principal. (A
                  principal represents an entity such as an individual user or a
                  group). Additionally, each ACL entry is specified as being either
                  positive or negative. If positive, the permissions are to be
                  granted to the associated principal. If negative, the permissions
                  are to be denied.&lt;p&gt;
                  The ACL Entries in each ACL observe the following rules:&lt;p&gt;
                  &lt;ul&gt; &lt;li&gt;Each principal can have at most one positive ACL entry and
                  one negative entry; that is, multiple positive or negative ACL
                  entries are not allowed for any principal.  Each entry specifies
                  the set of permissions that are to be granted (if positive) or
                  denied (if negative). &lt;p&gt;
                  &lt;li&gt;If there is no entry for a particular principal, then the
                  principal is considered to have a null (empty) permission set.&lt;p&gt;
                  &lt;li&gt;If there is a positive entry that grants a principal a
                  particular permission, and a negative entry that denies the
                  principal the same permission, the result is as though the
                  permission was never granted or denied. &lt;p&gt;
                  &lt;li&gt;Individual permissions always override permissions of the
                  group(s) to which the individual belongs. That is, individual
                  negative permissions (specific denial of permissions) override the
                  groups&apos; positive permissions. And individual positive permissions
                  override the groups&apos; negative permissions.&lt;p&gt;
                  &lt;/ul&gt;
                  The &lt;code&gt; java.security.acl &lt;/code&gt; package provides the
                  interfaces to the ACL and related data structures (ACL entries,
                  groups, permissions, etc.), and the &lt;code&gt; sun.security.acl &lt;/code&gt;
                  classes provide a default implementation of the interfaces. For
                  example, &lt;code&gt; java.security.acl.Acl &lt;/code&gt; provides the
                  interface to an ACL and the &lt;code&gt; sun.security.acl.AclImpl &lt;/code&gt;
                  class provides the default implementation of the interface.&lt;p&gt;
                  The &lt;code&gt; java.security.acl.Acl &lt;/code&gt; interface extends the
                  &lt;code&gt; java.security.acl.Owner &lt;/code&gt; interface. The Owner
                  interface is used to maintain a list of owners for each ACL.  Only
                  owners are allowed to modify an ACL. For example, only an owner can
                  call the ACL&apos;s &lt;code&gt;addEntry&lt;/code&gt; method to add a new ACL entry
                  to the ACL.                
                <see>
                    java.security.acl.AclEntry                    
                </see>
                <see>
                    java.security.acl.Owner                    
                </see>
                <see>
                    java.security.acl.Acl#getPermissions                    
                </see>
                <author>
                    Satish Dharmaraj                    
                </author>
            </javadoc>
            <method name="setName" type="void" line="53"/>
            <javadoc line="53">
                Sets the name of this ACL.                
                <param>
                    caller the principal invoking this method. It must be an
                      owner of this ACL.                    
                </param>
                <param>
                    name the name to be given to this ACL.                    
                </param>
                <exception>
                    NotOwnerException if the caller principal
                      is not an owner of this ACL.                    
                </exception>
                <see>
                    #getName                    
                </see>
            </javadoc>
            <method name="getName" type="String" line="63"/>
            <javadoc line="63">
                Returns the name of this ACL.                
                <return>
                    the name of this ACL.                    
                </return>
                <see>
                    #setName                    
                </see>
            </javadoc>
            <method name="addEntry" type="boolean" line="69"/>
            <javadoc line="69">
                Adds an ACL entry to this ACL. An entry associates a principal
                  (e.g., an individual or a group) with a set of
                  permissions. Each principal can have at most one positive ACL
                  entry (specifying permissions to be granted to the principal)
                  and one negative ACL entry (specifying permissions to be
                  denied). If there is already an ACL entry of the same type
                  (negative or positive) already in the ACL, false is returned.                
                <param>
                    caller the principal invoking this method. It must be an
                      owner of this ACL.                    
                </param>
                <param>
                    entry the ACL entry to be added to this ACL.                    
                </param>
                <return>
                    true on success, false if an entry of the same type
                      (positive or negative) for the same principal is already
                      present in this ACL.                    
                </return>
                <exception>
                    NotOwnerException if the caller principal
                      is not an owner of this ACL.                    
                </exception>
            </javadoc>
            <method name="removeEntry" type="boolean" line="87"/>
            <javadoc line="87">
                Removes an ACL entry from this ACL.                
                <param>
                    caller the principal invoking this method. It must be an
                      owner of this ACL.                    
                </param>
                <param>
                    entry the ACL entry to be removed from this ACL.                    
                </param>
                <return>
                    true on success, false if the entry is not part of this ACL.                    
                </return>
                <exception>
                    NotOwnerException if the caller principal is not
                      an owner of this Acl.                    
                </exception>
            </javadoc>
            <method name="getPermissions" type="Enumeration<Permission>" line="97"/>
            <javadoc line="97">
                Returns an enumeration for the set of allowed permissions for the
                  specified principal (representing an entity such as an individual or
                  a group). This set of allowed permissions is calculated as
                  follows:&lt;p&gt;
                  &lt;ul&gt;
                  &lt;li&gt;If there is no entry in this Access Control List for the
                  specified principal, an empty permission set is returned.&lt;p&gt;
                  &lt;li&gt;Otherwise, the principal&apos;s group permission sets are determined.
                  (A principal can belong to one or more groups, where a group is a
                  group of principals, represented by the Group interface.)
                  The group positive permission set is the union of all
                  the positive permissions of each group that the principal belongs to.
                  The group negative permission set is the union of all
                  the negative permissions of each group that the principal belongs to.
                  If there is a specific permission that occurs in both
                  the positive permission set and the negative permission set,
                  it is removed from both.&lt;p&gt;
                  The individual positive and negative permission sets are also
                  determined. The positive permission set contains the permissions
                  specified in the positive ACL entry (if any) for the principal.
                  Similarly, the negative permission set contains the permissions
                  specified in the negative ACL entry (if any) for the principal.
                  The individual positive (or negative) permission set is considered
                  to be null if there is not a positive (negative) ACL entry for the
                  principal in this ACL.&lt;p&gt;
                  The set of permissions granted to the principal is then calculated
                  using the simple rule that individual permissions always override
                  the group permissions. That is, the principal&apos;s individual negative
                  permission set (specific denial of permissions) overrides the group
                  positive permission set, and the principal&apos;s individual positive
                  permission set overrides the group negative permission set.
                  &lt;/ul&gt;                
                <param>
                    user the principal whose permission set is to be returned.                    
                </param>
                <return>
                    the permission set specifying the permissions the principal
                      is allowed.                    
                </return>
            </javadoc>
            <method name="entries" type="Enumeration<AclEntry>" line="135"/>
            <javadoc line="135">
                Returns an enumeration of the entries in this ACL. Each element in
                  the enumeration is of type AclEntry.                
                <return>
                    an enumeration of the entries in this ACL.                    
                </return>
            </javadoc>
            <method name="checkPermission" type="boolean" line="141"/>
            <javadoc line="141">
                Checks whether or not the specified principal has the specified
                  permission. If it does, true is returned, otherwise false is returned.
                  More specifically, this method checks whether the passed permission
                  is a member of the allowed permission set of the specified principal.
                  The allowed permission set is determined by the same algorithm as is
                  used by the &lt;code&gt;getPermissions&lt;/code&gt; method.                
                <param>
                    principal the principal, assumed to be a valid authenticated
                      Principal.                    
                </param>
                <param>
                    permission the permission to be checked for.                    
                </param>
                <return>
                    true if the principal has the specified permission, false
                      otherwise.                    
                </return>
                <see>
                    #getPermissions                    
                </see>
            </javadoc>
            <method name="toString" type="String" line="156"/>
            <javadoc line="156">
                Returns a string representation of the
                  ACL contents.                
                <return>
                    a string representation of the ACL contents.                    
                </return>
            </javadoc>
        </interface>
    </source>