<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.security.acl">
        <import package="java.security.Principal"/>
        <interface name="Owner">
            <javadoc line="30">
                Interface for managing owners of Access Control Lists (ACLs) or ACL
                  configurations. (Note that the Acl interface in the
                  &lt;code&gt; java.security.acl &lt;/code&gt; package extends this Owner
                  interface.) The initial owner Principal should be specified as an
                  argument to the constructor of the class implementing this interface.                
                <see>
                    java.security.acl.Acl                    
                </see>
            </javadoc>
            <method name="addOwner" type="boolean" line="42"/>
            <javadoc line="42">
                Adds an owner. Only owners can modify ACL contents. The caller
                  principal must be an owner of the ACL in order to invoke this method.
                  That is, only an owner can add another owner. The initial owner is
                  configured at ACL construction time.                
                <param>
                    caller the principal invoking this method. It must be an owner
                      of the ACL.                    
                </param>
                <param>
                    owner the owner that should be added to the list of owners.                    
                </param>
                <return>
                    true if successful, false if owner is already an owner.                    
                </return>
                <exception>
                    NotOwnerException if the caller principal is not an owner
                      of the ACL.                    
                </exception>
            </javadoc>
            <method name="deleteOwner" type="boolean" line="60"/>
            <javadoc line="60">
                Deletes an owner. If this is the last owner in the ACL, an exception is
                  raised.&lt;p&gt;
                  The caller principal must be an owner of the ACL in order to invoke
                  this method.                
                <param>
                    caller the principal invoking this method. It must be an owner
                      of the ACL.                    
                </param>
                <param>
                    owner the owner to be removed from the list of owners.                    
                </param>
                <return>
                    true if the owner is removed, false if the owner is not part
                      of the list of owners.                    
                </return>
                <exception>
                    NotOwnerException if the caller principal is not an owner
                      of the ACL.                    
                </exception>
                <exception>
                    LastOwnerException if there is only one owner left, so that
                      deleteOwner would leave the ACL owner-less.                    
                </exception>
            </javadoc>
            <method name="isOwner" type="boolean" line="84"/>
            <javadoc line="84">
                Returns true if the given principal is an owner of the ACL.                
                <param>
                    owner the principal to be checked to determine whether or not
                      it is an owner.                    
                </param>
                <return>
                    true if the passed principal is in the list of owners, false
                      if not.                    
                </return>
            </javadoc>
        </interface>
    </source>