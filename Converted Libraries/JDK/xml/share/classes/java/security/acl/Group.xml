<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.security.acl">
        <import package="java.util.Enumeration"/>
        <import package="java.security.Principal"/>
        <interface name="Group">
            <implements interface="Principal"/>
            <javadoc line="4">
                This interface is used to represent a group of principals. (A principal
                  represents an entity such as an individual user or a company). &lt;p&gt;
                  Note that Group extends Principal. Thus, either a Principal or a Group can
                  be passed as an argument to methods containing a Principal parameter. For
                  example, you can add either a Principal or a Group to a Group object by
                  calling the object&apos;s &lt;code&gt;addMember&lt;/code&gt; method, passing it the
                  Principal or Group.                
                <author>
                    Satish Dharmaraj                    
                </author>
            </javadoc>
            <method name="addMember" type="boolean" line="15"/>
            <javadoc line="15">
                Adds the specified member to the group.                
                <param>
                    user the principal to add to this group.                    
                </param>
                <return>
                    true if the member was successfully added,
                      false if the principal was already a member.                    
                </return>
            </javadoc>
            <method name="removeMember" type="boolean" line="22"/>
            <javadoc line="22">
                Removes the specified member from the group.                
                <param>
                    user the principal to remove from this group.                    
                </param>
                <return>
                    true if the principal was removed, or
                      false if the principal was not a member.                    
                </return>
            </javadoc>
            <method name="isMember" type="boolean" line="29"/>
            <javadoc line="29">
                Returns true if the passed principal is a member of the group.
                  This method does a recursive search, so if a principal belongs to a
                  group which is a member of this group, true is returned.                
                <param>
                    member the principal whose membership is to be checked.                    
                </param>
                <return>
                    true if the principal is a member of this group,
                      false otherwise.                    
                </return>
            </javadoc>
            <method name="members" type="Enumeration<? extends Principal>" line="38"/>
            <javadoc line="38">
                Returns an enumeration of the members in the group.
                  The returned objects can be instances of either Principal
                  or Group (which is a subclass of Principal).                
                <return>
                    an enumeration of the group members.                    
                </return>
            </javadoc>
        </interface>
    </source>