<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.security.spec">
        <import package="java.math.BigInteger"/>
        <class name="ECPoint" line="29">
            <comment line="50">
                private constructor for constructing point at infinity                
            </comment>
            <javadoc line="29">
                This immutable class represents a point on an elliptic curve (EC)
                  in affine coordinates. Other coordinate systems can
                  extend this class to represent this point in other
                  coordinates.                
                <author>
                    Valerie Peng                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="x" type="BigInteger" line="41"/>
            <declaration name="y" type="BigInteger" line="42"/>
            <declaration name="POINT_INFINITY" type="ECPoint" line="44"/>
            <javadoc line="44">
                This defines the point at infinity.                
            </javadoc>
            <method name="ECPoint" type="constructor" line="50"/>
            <javadoc line="55">
                Creates an ECPoint from the specified affine x-coordinate
                  &lt;code&gt;x&lt;/code&gt; and affine y-coordinate &lt;code&gt;y&lt;/code&gt;.                
                <param>
                    x the affine x-coordinate.                    
                </param>
                <param>
                    y the affine y-coordinate.                    
                </param>
                <exception>
                    NullPointerException if <code>x</code> or
                      <code>y</code> is null.                    
                </exception>
            </javadoc>
            <method name="ECPoint" type="constructor" line="63">
                <params>
                    <param name="x" type="BigInteger"/>
                    <param name="y" type="BigInteger"/>
                </params>
                <scope line="64"/>
            </method>
            <javadoc line="71">
                Returns the affine x-coordinate &lt;code&gt;x&lt;/code&gt;.
                  Note: POINT_INFINITY has a null affine x-coordinate.                
                <return>
                    the affine x-coordinate.                    
                </return>
            </javadoc>
            <method name="getAffineX" type="BigInteger" line="76"/>
            <javadoc line="80">
                Returns the affine y-coordinate &lt;code&gt;y&lt;/code&gt;.
                  Note: POINT_INFINITY has a null affine y-coordinate.                
                <return>
                    the affine y-coordinate.                    
                </return>
            </javadoc>
            <method name="getAffineY" type="BigInteger" line="85"/>
            <javadoc line="89">
                Compares this elliptic curve point for equality with
                  the specified object.                
                <param>
                    obj the object to be compared.                    
                </param>
                <return>
                    true if <code>obj</code> is an instance of
                      ECPoint and the affine coordinates match, false otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="96">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="99"/>
            </method>
            <javadoc line="106">
                Returns a hash code value for this elliptic curve point.                
                <return>
                    a hash code value.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="110"/>
        </class>
    </source>