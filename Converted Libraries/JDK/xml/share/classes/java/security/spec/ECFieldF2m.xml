<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.security.spec">
        <import package="java.math.BigInteger"/>
        <import package="java.util.Arrays"/>
        <class name="ECFieldF2m" line="4">
            <implements interface="ECField"/>
            <javadoc line="4">
                This immutable class defines an elliptic curve (EC)
                  characteristic 2 finite field.                
                <see>
                    ECField                    
                </see>
                <author>
                    Valerie Peng                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="m" type="int" line="12"/>
            <declaration name="ks" type="int[]" line="13"/>
            <declaration name="rp" type="BigInteger" line="14"/>
            <javadoc line="15">
                Creates an elliptic curve characteristic 2 finite
                  field which has 2^&lt;code&gt;m&lt;/code&gt; elements with normal basis.                
                <param>
                    m with 2^<code>m</code> being the number of elements.                    
                </param>
                <exception>
                    IllegalArgumentException if <code>m</code>
                      is not positive.                    
                </exception>
            </javadoc>
            <method name="ECFieldF2m" type="constructor" line="22">
                <params>
                    <param name="m" type="int"/>
                </params>
                <scope line="23"/>
            </method>
            <javadoc line="30">
                Creates an elliptic curve characteristic 2 finite
                  field which has 2^&lt;code&gt;m&lt;/code&gt; elements with
                  polynomial basis.
                  The reduction polynomial for this field is based
                  on &lt;code&gt;rp&lt;/code&gt; whose i-th bit correspondes to
                  the i-th coefficient of the reduction polynomial.&lt;p&gt;
                  Note: A valid reduction polynomial is either a
                  trinomial (X^&lt;code&gt;m&lt;/code&gt; + X^&lt;code&gt;k&lt;/code&gt; + 1
                  with &lt;code&gt;m&lt;/code&gt; &gt; &lt;code&gt;k&lt;/code&gt; &gt;= 1) or a
                  pentanomial (X^&lt;code&gt;m&lt;/code&gt; + X^&lt;code&gt;k3&lt;/code&gt;
                  + X^&lt;code&gt;k2&lt;/code&gt; + X^&lt;code&gt;k1&lt;/code&gt; + 1 with
                  &lt;code&gt;m&lt;/code&gt; &gt; &lt;code&gt;k3&lt;/code&gt; &gt; &lt;code&gt;k2&lt;/code&gt;
                  &gt; &lt;code&gt;k1&lt;/code&gt; &gt;= 1).                
                <param>
                    m with 2^<code>m</code> being the number of elements.                    
                </param>
                <param>
                    rp the BigInteger whose i-th bit corresponds to
                      the i-th coefficient of the reduction polynomial.                    
                </param>
                <exception>
                    NullPointerException if <code>rp</code> is null.                    
                </exception>
                <exception>
                    IllegalArgumentException if <code>m</code>
                      is not positive, or <code>rp</code> does not represent
                      a valid reduction polynomial.                    
                </exception>
            </javadoc>
            <method name="ECFieldF2m" type="constructor" line="52">
                <params>
                    <param name="m" type="int"/>
                    <param name="rp" type="BigInteger"/>
                </params>
                <scope line="55"/>
                <declaration name="bitCount" type="int" line="58"/>
                <scope line="59"/>
                <declaration name="temp" type="BigInteger" line="62"/>
                <scope line="64">
                    <declaration name="index" type="int" line="65"/>
                </scope>
            </method>
            <javadoc line="70">
                Creates an elliptic curve characteristic 2 finite
                  field which has 2^&lt;code&gt;m&lt;/code&gt; elements with
                  polynomial basis. The reduction polynomial for this
                  field is based on &lt;code&gt;ks&lt;/code&gt; whose content
                  contains the order of the middle term(s) of the
                  reduction polynomial.
                  Note: A valid reduction polynomial is either a
                  trinomial (X^&lt;code&gt;m&lt;/code&gt; + X^&lt;code&gt;k&lt;/code&gt; + 1
                  with &lt;code&gt;m&lt;/code&gt; &gt; &lt;code&gt;k&lt;/code&gt; &gt;= 1) or a
                  pentanomial (X^&lt;code&gt;m&lt;/code&gt; + X^&lt;code&gt;k3&lt;/code&gt;
                  + X^&lt;code&gt;k2&lt;/code&gt; + X^&lt;code&gt;k1&lt;/code&gt; + 1 with
                  &lt;code&gt;m&lt;/code&gt; &gt; &lt;code&gt;k3&lt;/code&gt; &gt; &lt;code&gt;k2&lt;/code&gt;
                  &gt; &lt;code&gt;k1&lt;/code&gt; &gt;= 1), so &lt;code&gt;ks&lt;/code&gt; should
                  have length 1 or 3.                
                <param>
                    m with 2^<code>m</code> being the number of elements.                    
                </param>
                <param>
                    ks the order of the middle term(s) of the
                      reduction polynomial. Contents of this array are copied
                      to protect against subsequent modification.                    
                </param>
                <exception>
                    NullPointerException if <code>ks</code> is null.                    
                </exception>
                <exception>
                    IllegalArgumentException if<code>m</code>
                      is not positive, or the length of <code>ks</code>
                      is neither 1 nor 3, or values in <code>ks</code>
                      are not between <code>m</code>-1 and 1 (inclusive)
                      and in descending order.                    
                </exception>
            </javadoc>
            <method name="ECFieldF2m" type="constructor" line="96">
                <params>
                    <param name="m" type="int"/>
                    <param name="ks" type="int[]"/>
                </params>
                <scope line="99"/>
                <scope line="102"/>
                <scope line="105">
                    <scope line="106"/>
                    <scope line="109"/>
                </scope>
                <scope line="115"/>
            </method>
            <javadoc line="119">
                Returns the field size in bits which is &lt;code&gt;m&lt;/code&gt;
                  for this characteristic 2 finite field.                
                <return>
                    the field size in bits.                    
                </return>
            </javadoc>
            <method name="getFieldSize" type="int" line="124"/>
            <javadoc line="127">
                Returns the value &lt;code&gt;m&lt;/code&gt; of this characteristic
                  2 finite field.                
                <return>
                    <code>m</code> with 2^<code>m</code> being the
                      number of elements.                    
                </return>
            </javadoc>
            <method name="getM" type="int" line="133"/>
            <javadoc line="136">
                Returns a BigInteger whose i-th bit corresponds to the
                  i-th coefficient of the reduction polynomial for polynomial
                  basis or null for normal basis.                
                <return>
                    a BigInteger whose i-th bit corresponds to the
                      i-th coefficient of the reduction polynomial for polynomial
                      basis or null for normal basis.                    
                </return>
            </javadoc>
            <method name="getReductionPolynomial" type="BigInteger" line="144"/>
            <javadoc line="147">
                Returns an integer array which contains the order of the
                  middle term(s) of the reduction polynomial for polynomial
                  basis or null for normal basis.                
                <return>
                    an integer array which contains the order of the
                      middle term(s) of the reduction polynomial for polynomial
                      basis or null for normal basis. A new array is returned
                      each time this method is called.                    
                </return>
            </javadoc>
            <method name="getMidTermsOfReductionPolynomial" type="int[]" line="156">
                <scope line="157"/>
                <scope line="160"/>
            </method>
            <javadoc line="164">
                Compares this finite field for equality with the
                  specified object.                
                <param>
                    obj the object to be compared.                    
                </param>
                <return>
                    true if <code>obj</code> is an instance
                      of ECFieldF2m and both <code>m</code> and the reduction
                      polynomial match, false otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="172">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="174"/>
            </method>
            <javadoc line="179">
                Returns a hash code value for this characteristic 2
                  finite field.                
                <return>
                    a hash code value.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="184">
                <declaration name="value" type="int" line="185"/>
            </method>
        </class>
    </source>