<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.security.cert">
        <import package="java.security.AccessController"/>
        <import package="java.security.InvalidAlgorithmParameterException"/>
        <import package="java.security.NoSuchAlgorithmException"/>
        <import package="java.security.NoSuchProviderException"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.security.Provider"/>
        <import package="java.security.Security"/>
        <import package="sun.security.util.Debug"/>
        <import package="sun.security.jca"/>
        <import package="sun.security.jca.GetInstance.Instance"/>
        <class name="CertPathBuilder" line="12">
            <javadoc line="12">
                A class for building certification paths (also known as certificate chains).
                  &lt;p&gt;
                  This class uses a provider-based architecture.
                  To create a &lt;code&gt;CertPathBuilder&lt;/code&gt;, call
                  one of the static &lt;code&gt;getInstance&lt;/code&gt; methods, passing in the
                  algorithm name of the &lt;code&gt;CertPathBuilder&lt;/code&gt; desired and optionally
                  the name of the provider desired.
                  &lt;p&gt;
                  Once a &lt;code&gt;CertPathBuilder&lt;/code&gt; object has been created, certification
                  paths can be constructed by calling the {@link #build build} method and
                  passing it an algorithm-specific set of parameters. If successful, the
                  result (including the &lt;code&gt;CertPath&lt;/code&gt; that was built) is returned
                  in an object that implements the &lt;code&gt;CertPathBuilderResult&lt;/code&gt;
                  interface.
                  &lt;p&gt; Every implementation of the Java platform is required to support the
                  following standard &lt;code&gt;CertPathBuilder&lt;/code&gt; algorithm:
                  &lt;ul&gt;
                  &lt;li&gt;&lt;tt&gt;PKIX&lt;/tt&gt;&lt;/li&gt;
                  &lt;/ul&gt;
                  This algorithm is described in the &lt;a href=
                  &quot;{@docRoot}/../technotes/guides/security/StandardNames.html#CertPathBuilder&quot;&gt;
                  CertPathBuilder section&lt;/a&gt; of the
                  Java Cryptography Architecture Standard Algorithm Name Documentation.
                  Consult the release documentation for your implementation to see if any
                  other algorithms are supported.
                  &lt;p&gt;
                  &lt;b&gt;Concurrent Access&lt;/b&gt;
                  &lt;p&gt;
                  The static methods of this class are guaranteed to be thread-safe.
                  Multiple threads may concurrently invoke the static methods defined in
                  this class with no ill effects.
                  &lt;p&gt;
                  However, this is not true for the non-static methods defined by this class.
                  Unless otherwise documented by a specific provider, threads that need to
                  access a single &lt;code&gt;CertPathBuilder&lt;/code&gt; instance concurrently should
                  synchronize amongst themselves and provide the necessary locking. Multiple
                  threads each manipulating a different &lt;code&gt;CertPathBuilder&lt;/code&gt; instance
                  need not synchronize.                
                <see>
                    CertPath                    
                </see>
                <since>
                    1.4                    
                </since>
                <author>
                    Sean Mullan                    
                </author>
                <author>
                    Yassir Elley                    
                </author>
            </javadoc>
            <declaration name="CPB_TYPE" type="String" line="57"/>
            <declaration name="debug" type="Debug" line="58"/>
            <declaration name="builderSpi" type="CertPathBuilderSpi" line="59"/>
            <declaration name="provider" type="Provider" line="60"/>
            <declaration name="algorithm" type="String" line="61"/>
            <javadoc line="62">
                Creates a &lt;code&gt;CertPathBuilder&lt;/code&gt; object of the given algorithm,
                  and encapsulates the given provider implementation (SPI object) in it.                
                <param>
                    builderSpi the provider implementation                    
                </param>
                <param>
                    provider the provider                    
                </param>
                <param>
                    algorithm the algorithm name                    
                </param>
            </javadoc>
            <method name="CertPathBuilder" type="constructor" line="69">
                <params>
                    <param name="builderSpi" type="CertPathBuilderSpi"/>
                    <param name="provider" type="Provider"/>
                    <param name="algorithm" type="String"/>
                </params>
            </method>
            <javadoc line="74">
                Returns a &lt;code&gt;CertPathBuilder&lt;/code&gt; object that implements the
                  specified algorithm.
                  &lt;p&gt; This method traverses the list of registered security Providers,
                  starting with the most preferred Provider.
                  A new CertPathBuilder object encapsulating the
                  CertPathBuilderSpi implementation from the first
                  Provider that supports the specified algorithm is returned.
                  &lt;p&gt; Note that the list of registered providers may be retrieved via
                  the {@link Security#getProviders() Security.getProviders()} method.                
                <param>
                    algorithm the name of the requested &lt;code&gt;CertPathBuilder&lt;/code&gt;
                      algorithm.  See the CertPathBuilder section in the &lt;a href=
                      &quot;{@docRoot}/../technotes/guides/security/StandardNames.html#CertPathBuilder&quot;&gt;
                      Java Cryptography Architecture Standard Algorithm Name Documentation&lt;/a&gt;
                      for information about standard algorithm names.                    
                </param>
                <return>
                    a &lt;code&gt;CertPathBuilder&lt;/code&gt; object that implements the
                      specified algorithm.                    
                </return>
                <throws>
                    NoSuchAlgorithmException if no Provider supports a
                      CertPathBuilderSpi implementation for the
                      specified algorithm.                    
                </throws>
                <see>
                    java.security.Provider                    
                </see>
            </javadoc>
            <method name="getInstance" type="CertPathBuilder" line="96">
                <params>
                    <param name="algorithm" type="String"/>
                </params>
                <declaration name="instance" type="Instance" line="97"/>
            </method>
            <javadoc line="100">
                Returns a &lt;code&gt;CertPathBuilder&lt;/code&gt; object that implements the
                  specified algorithm.
                  &lt;p&gt; A new CertPathBuilder object encapsulating the
                  CertPathBuilderSpi implementation from the specified provider
                  is returned.  The specified provider must be registered
                  in the security provider list.
                  &lt;p&gt; Note that the list of registered providers may be retrieved via
                  the {@link Security#getProviders() Security.getProviders()} method.                
                <param>
                    algorithm the name of the requested &lt;code&gt;CertPathBuilder&lt;/code&gt;
                      algorithm.  See the CertPathBuilder section in the &lt;a href=
                      &quot;{@docRoot}/../technotes/guides/security/StandardNames.html#CertPathBuilder&quot;&gt;
                      Java Cryptography Architecture Standard Algorithm Name Documentation&lt;/a&gt;
                      for information about standard algorithm names.                    
                </param>
                <param>
                    provider the name of the provider.                    
                </param>
                <return>
                    a &lt;code&gt;CertPathBuilder&lt;/code&gt; object that implements the
                      specified algorithm.                    
                </return>
                <throws>
                    NoSuchAlgorithmException if a CertPathBuilderSpi
                      implementation for the specified algorithm is not
                      available from the specified provider.                    
                </throws>
                <throws>
                    NoSuchProviderException if the specified provider is not
                      registered in the security provider list.                    
                </throws>
                <exception>
                    IllegalArgumentException if the &lt;code&gt;provider&lt;/code&gt; is
                      null or empty.                    
                </exception>
                <see>
                    java.security.Provider                    
                </see>
            </javadoc>
            <method name="getInstance" type="CertPathBuilder" line="126">
                <params>
                    <param name="algorithm" type="String"/>
                    <param name="provider" type="String"/>
                </params>
                <declaration name="instance" type="Instance" line="127"/>
            </method>
            <javadoc line="130">
                Returns a &lt;code&gt;CertPathBuilder&lt;/code&gt; object that implements the
                  specified algorithm.
                  &lt;p&gt; A new CertPathBuilder object encapsulating the
                  CertPathBuilderSpi implementation from the specified Provider
                  object is returned.  Note that the specified Provider object
                  does not have to be registered in the provider list.                
                <param>
                    algorithm the name of the requested &lt;code&gt;CertPathBuilder&lt;/code&gt;
                      algorithm.  See the CertPathBuilder section in the &lt;a href=
                      &quot;{@docRoot}/../technotes/guides/security/StandardNames.html#CertPathBuilder&quot;&gt;
                      Java Cryptography Architecture Standard Algorithm Name Documentation&lt;/a&gt;
                      for information about standard algorithm names.                    
                </param>
                <param>
                    provider the provider.                    
                </param>
                <return>
                    a &lt;code&gt;CertPathBuilder&lt;/code&gt; object that implements the
                      specified algorithm.                    
                </return>
                <exception>
                    NoSuchAlgorithmException if a CertPathBuilderSpi
                      implementation for the specified algorithm is not available
                      from the specified Provider object.                    
                </exception>
                <exception>
                    IllegalArgumentException if the &lt;code&gt;provider&lt;/code&gt; is
                      null.                    
                </exception>
                <see>
                    java.security.Provider                    
                </see>
            </javadoc>
            <method name="getInstance" type="CertPathBuilder" line="152">
                <params>
                    <param name="algorithm" type="String"/>
                    <param name="provider" type="Provider"/>
                </params>
                <declaration name="instance" type="Instance" line="153"/>
            </method>
            <javadoc line="156">
                Returns the provider of this &lt;code&gt;CertPathBuilder&lt;/code&gt;.                
                <return>
                    the provider of this &lt;code&gt;CertPathBuilder&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getProvider" type="Provider" line="160"/>
            <javadoc line="163">
                Returns the name of the algorithm of this &lt;code&gt;CertPathBuilder&lt;/code&gt;.                
                <return>
                    the name of the algorithm of this &lt;code&gt;CertPathBuilder&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getAlgorithm" type="String" line="167"/>
            <javadoc line="170">
                Attempts to build a certification path using the specified algorithm
                  parameter set.                
                <param>
                    params the algorithm parameters                    
                </param>
                <return>
                    the result of the build algorithm                    
                </return>
                <throws>
                    CertPathBuilderException if the builder is unable to construct
                      a certification path that satisfies the specified parameters                    
                </throws>
                <throws>
                    InvalidAlgorithmParameterException if the specified parameters
                      are inappropriate for this &lt;code&gt;CertPathBuilder&lt;/code&gt;                    
                </throws>
            </javadoc>
            <method name="build" type="CertPathBuilderResult" line="180">
                <params>
                    <param name="params" type="CertPathParameters"/>
                </params>
            </method>
            <javadoc line="183">
                Returns the default &lt;code&gt;CertPathBuilder&lt;/code&gt; type as specified in
                  the Java security properties file, or the string &amp;quot;PKIX&amp;quot;
                  if no such property exists. The Java security properties file is
                  located in the file named &amp;lt;JAVA_HOME&amp;gt;/lib/security/java.security.
                  &amp;lt;JAVA_HOME&amp;gt; refers to the value of the java.home system property,
                  and specifies the directory where the JRE is installed.
                  &lt;p&gt;The default &lt;code&gt;CertPathBuilder&lt;/code&gt; type can be used by
                  applications that do not want to use a hard-coded type when calling one
                  of the &lt;code&gt;getInstance&lt;/code&gt; methods, and want to provide a default
                  type in case a user does not specify its own.
                  &lt;p&gt;The default &lt;code&gt;CertPathBuilder&lt;/code&gt; type can be changed by
                  setting the value of the &quot;certpathbuilder.type&quot; security property
                  (in the Java security properties file) to the desired type.                
                <return>
                    the default &lt;code&gt;CertPathBuilder&lt;/code&gt; type as specified
                      in the Java security properties file, or the string &amp;quot;PKIX&amp;quot;
                      if no such property exists.                    
                </return>
            </javadoc>
            <method name="getDefaultType" type="String" line="201">
                <declaration name="cpbtype" type="String" line="202"/>
                <anonymous_class line="203">
                    <method name="run" type="String" line="204"/>
                </anonymous_class>
                <scope line="209"/>
            </method>
        </class>
    </source>