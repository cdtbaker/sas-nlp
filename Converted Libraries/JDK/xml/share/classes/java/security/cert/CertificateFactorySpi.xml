<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.security.cert">
        <import package="java.io.InputStream"/>
        <import package="java.util.Collection"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="java.security.Provider"/>
        <import package="java.security.NoSuchAlgorithmException"/>
        <import package="java.security.NoSuchProviderException"/>
        <class name="CertificateFactorySpi" line="9">
            <javadoc line="9">
                This class defines the &lt;i&gt;Service Provider Interface&lt;/i&gt; (&lt;b&gt;SPI&lt;/b&gt;)
                  for the &lt;code&gt;CertificateFactory&lt;/code&gt; class.
                  All the abstract methods in this class must be implemented by each
                  cryptographic service provider who wishes to supply the implementation
                  of a certificate factory for a particular certificate type, e.g., X.509.
                  &lt;p&gt;Certificate factories are used to generate certificate, certification path
                  (&lt;code&gt;CertPath&lt;/code&gt;) and certificate revocation list (CRL) objects from
                  their encodings.
                  &lt;p&gt;A certificate factory for X.509 must return certificates that are an
                  instance of &lt;code&gt;java.security.cert.X509Certificate&lt;/code&gt;, and CRLs
                  that are an instance of &lt;code&gt;java.security.cert.X509CRL&lt;/code&gt;.                
                <author>
                    Hemma Prafullchandra                    
                </author>
                <author>
                    Jan Luehe                    
                </author>
                <author>
                    Sean Mullan                    
                </author>
                <see>
                    CertificateFactory                    
                </see>
                <see>
                    Certificate                    
                </see>
                <see>
                    X509Certificate                    
                </see>
                <see>
                    CertPath                    
                </see>
                <see>
                    CRL                    
                </see>
                <see>
                    X509CRL                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="engineGenerateCertificate" type="Certificate" line="33"/>
            <javadoc line="33">
                Generates a certificate object and initializes it with
                  the data read from the input stream &lt;code&gt;inStream&lt;/code&gt;.
                  &lt;p&gt;In order to take advantage of the specialized certificate format
                  supported by this certificate factory,
                  the returned certificate object can be typecast to the corresponding
                  certificate class. For example, if this certificate
                  factory implements X.509 certificates, the returned certificate object
                  can be typecast to the &lt;code&gt;X509Certificate&lt;/code&gt; class.
                  &lt;p&gt;In the case of a certificate factory for X.509 certificates, the
                  certificate provided in &lt;code&gt;inStream&lt;/code&gt; must be DER-encoded and
                  may be supplied in binary or printable (Base64) encoding. If the
                  certificate is provided in Base64 encoding, it must be bounded at
                  the beginning by -----BEGIN CERTIFICATE-----, and must be bounded at
                  the end by -----END CERTIFICATE-----.
                  &lt;p&gt;Note that if the given input stream does not support{@link java.io.InputStream#mark(int) mark} and{@link java.io.InputStream#reset() reset}, this method will
                  consume the entire input stream. Otherwise, each call to this
                  method consumes one certificate and the read position of the input stream
                  is positioned to the next available byte after the inherent
                  end-of-certificate marker. If the data in the
                  input stream does not contain an inherent end-of-certificate marker (other
                  than EOF) and there is trailing data after the certificate is parsed, a
                  &lt;code&gt;CertificateException&lt;/code&gt; is thrown.                
                <param>
                    inStream an input stream with the certificate data.                    
                </param>
                <return>
                    a certificate object initialized with the data
                      from the input stream.                    
                </return>
                <exception>
                    CertificateException on parsing errors.                    
                </exception>
            </javadoc>
            <javadoc line="62">
                Generates a &lt;code&gt;CertPath&lt;/code&gt; object and initializes it with
                  the data read from the &lt;code&gt;InputStream&lt;/code&gt; inStream. The data
                  is assumed to be in the default encoding.
                  &lt;p&gt; This method was added to version 1.4 of the Java 2 Platform
                  Standard Edition. In order to maintain backwards compatibility with
                  existing service providers, this method cannot be &lt;code&gt;abstract&lt;/code&gt;
                  and by default throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.                
                <param>
                    inStream an <code>InputStream</code> containing the data                    
                </param>
                <return>
                    a <code>CertPath</code> initialized with the data from the
                      <code>InputStream</code>                    
                </return>
                <exception>
                    CertificateException if an exception occurs while decoding                    
                </exception>
                <exception>
                    UnsupportedOperationException if the method is not supported                    
                </exception>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="engineGenerateCertPath" type="CertPath" line="77">
                <params>
                    <param name="inStream" type="InputStream"/>
                </params>
            </method>
            <javadoc line="80">
                Generates a &lt;code&gt;CertPath&lt;/code&gt; object and initializes it with
                  the data read from the &lt;code&gt;InputStream&lt;/code&gt; inStream. The data
                  is assumed to be in the specified encoding.
                  &lt;p&gt; This method was added to version 1.4 of the Java 2 Platform
                  Standard Edition. In order to maintain backwards compatibility with
                  existing service providers, this method cannot be &lt;code&gt;abstract&lt;/code&gt;
                  and by default throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.                
                <param>
                    inStream an <code>InputStream</code> containing the data                    
                </param>
                <param>
                    encoding the encoding used for the data                    
                </param>
                <return>
                    a <code>CertPath</code> initialized with the data from the
                      <code>InputStream</code>                    
                </return>
                <exception>
                    CertificateException if an exception occurs while decoding or
                      the encoding requested is not supported                    
                </exception>
                <exception>
                    UnsupportedOperationException if the method is not supported                    
                </exception>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="engineGenerateCertPath" type="CertPath" line="97">
                <params>
                    <param name="inStream" type="InputStream"/>
                    <param name="encoding" type="String"/>
                </params>
            </method>
            <javadoc line="100">
                Generates a &lt;code&gt;CertPath&lt;/code&gt; object and initializes it with
                  a &lt;code&gt;List&lt;/code&gt; of &lt;code&gt;Certificate&lt;/code&gt;s.
                  &lt;p&gt;
                  The certificates supplied must be of a type supported by the
                  &lt;code&gt;CertificateFactory&lt;/code&gt;. They will be copied out of the supplied
                  &lt;code&gt;List&lt;/code&gt; object.
                  &lt;p&gt; This method was added to version 1.4 of the Java 2 Platform
                  Standard Edition. In order to maintain backwards compatibility with
                  existing service providers, this method cannot be &lt;code&gt;abstract&lt;/code&gt;
                  and by default throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.                
                <param>
                    certificates a <code>List</code> of <code>Certificate</code>s                    
                </param>
                <return>
                    a <code>CertPath</code> initialized with the supplied list of
                      certificates                    
                </return>
                <exception>
                    CertificateException if an exception occurs                    
                </exception>
                <exception>
                    UnsupportedOperationException if the method is not supported                    
                </exception>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="engineGenerateCertPath" type="CertPath" line="118">
                <params>
                    <param name="certificates" type="List<? extends Certificate>"/>
                </params>
            </method>
            <javadoc line="121">
                Returns an iteration of the &lt;code&gt;CertPath&lt;/code&gt; encodings supported
                  by this certificate factory, with the default encoding first. See
                  the CertPath Encodings section in the &lt;a href=
                  &quot;{@docRoot}/../technotes/guides/security/StandardNames.html#CertPathEncodings&quot;&gt;
                  Java Cryptography Architecture Standard Algorithm Name Documentation&lt;/a&gt;
                  for information about standard encoding names.
                  &lt;p&gt;
                  Attempts to modify the returned &lt;code&gt;Iterator&lt;/code&gt; via its
                  &lt;code&gt;remove&lt;/code&gt; method result in an
                  &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.
                  &lt;p&gt; This method was added to version 1.4 of the Java 2 Platform
                  Standard Edition. In order to maintain backwards compatibility with
                  existing service providers, this method cannot be &lt;code&gt;abstract&lt;/code&gt;
                  and by default throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.                
                <return>
                    an <code>Iterator</code> over the names of the supported
                      <code>CertPath</code> encodings (as <code>String</code>s)                    
                </return>
                <exception>
                    UnsupportedOperationException if the method is not supported                    
                </exception>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="engineGetCertPathEncodings" type="Iterator<String>" line="141"/>
            <method name="engineGenerateCertificates" type="Collection<? extends Certificate>" line="144"/>
            <javadoc line="144">
                Returns a (possibly empty) collection view of the certificates read
                  from the given input stream &lt;code&gt;inStream&lt;/code&gt;.
                  &lt;p&gt;In order to take advantage of the specialized certificate format
                  supported by this certificate factory, each element in
                  the returned collection view can be typecast to the corresponding
                  certificate class. For example, if this certificate
                  factory implements X.509 certificates, the elements in the returned
                  collection can be typecast to the &lt;code&gt;X509Certificate&lt;/code&gt; class.
                  &lt;p&gt;In the case of a certificate factory for X.509 certificates,
                  &lt;code&gt;inStream&lt;/code&gt; may contain a single DER-encoded certificate
                  in the formats described for{@link CertificateFactory#generateCertificate(java.io.InputStream)generateCertificate}.
                  In addition, &lt;code&gt;inStream&lt;/code&gt; may contain a PKCS#7 certificate
                  chain. This is a PKCS#7 &lt;i&gt;SignedData&lt;/i&gt; object, with the only
                  significant field being &lt;i&gt;certificates&lt;/i&gt;. In particular, the
                  signature and the contents are ignored. This format allows multiple
                  certificates to be downloaded at once. If no certificates are present,
                  an empty collection is returned.
                  &lt;p&gt;Note that if the given input stream does not support{@link java.io.InputStream#mark(int) mark} and{@link java.io.InputStream#reset() reset}, this method will
                  consume the entire input stream.                
                <param>
                    inStream the input stream with the certificates.                    
                </param>
                <return>
                    a (possibly empty) collection view of
                      java.security.cert.Certificate objects
                      initialized with the data from the input stream.                    
                </return>
                <exception>
                    CertificateException on parsing errors.                    
                </exception>
            </javadoc>
            <method name="engineGenerateCRL" type="CRL" line="171"/>
            <javadoc line="171">
                Generates a certificate revocation list (CRL) object and initializes it
                  with the data read from the input stream &lt;code&gt;inStream&lt;/code&gt;.
                  &lt;p&gt;In order to take advantage of the specialized CRL format
                  supported by this certificate factory,
                  the returned CRL object can be typecast to the corresponding
                  CRL class. For example, if this certificate
                  factory implements X.509 CRLs, the returned CRL object
                  can be typecast to the &lt;code&gt;X509CRL&lt;/code&gt; class.
                  &lt;p&gt;Note that if the given input stream does not support{@link java.io.InputStream#mark(int) mark} and{@link java.io.InputStream#reset() reset}, this method will
                  consume the entire input stream. Otherwise, each call to this
                  method consumes one CRL and the read position of the input stream
                  is positioned to the next available byte after the inherent
                  end-of-CRL marker. If the data in the
                  input stream does not contain an inherent end-of-CRL marker (other
                  than EOF) and there is trailing data after the CRL is parsed, a
                  &lt;code&gt;CRLException&lt;/code&gt; is thrown.                
                <param>
                    inStream an input stream with the CRL data.                    
                </param>
                <return>
                    a CRL object initialized with the data
                      from the input stream.                    
                </return>
                <exception>
                    CRLException on parsing errors.                    
                </exception>
            </javadoc>
            <method name="engineGenerateCRLs" type="Collection<? extends CRL>" line="194"/>
            <javadoc line="194">
                Returns a (possibly empty) collection view of the CRLs read
                  from the given input stream &lt;code&gt;inStream&lt;/code&gt;.
                  &lt;p&gt;In order to take advantage of the specialized CRL format
                  supported by this certificate factory, each element in
                  the returned collection view can be typecast to the corresponding
                  CRL class. For example, if this certificate
                  factory implements X.509 CRLs, the elements in the returned
                  collection can be typecast to the &lt;code&gt;X509CRL&lt;/code&gt; class.
                  &lt;p&gt;In the case of a certificate factory for X.509 CRLs,
                  &lt;code&gt;inStream&lt;/code&gt; may contain a single DER-encoded CRL.
                  In addition, &lt;code&gt;inStream&lt;/code&gt; may contain a PKCS#7 CRL
                  set. This is a PKCS#7 &lt;i&gt;SignedData&lt;/i&gt; object, with the only
                  significant field being &lt;i&gt;crls&lt;/i&gt;. In particular, the
                  signature and the contents are ignored. This format allows multiple
                  CRLs to be downloaded at once. If no CRLs are present,
                  an empty collection is returned.
                  &lt;p&gt;Note that if the given input stream does not support{@link java.io.InputStream#mark(int) mark} and{@link java.io.InputStream#reset() reset}, this method will
                  consume the entire input stream.                
                <param>
                    inStream the input stream with the CRLs.                    
                </param>
                <return>
                    a (possibly empty) collection view of
                      java.security.cert.CRL objects initialized with the data from the input
                      stream.                    
                </return>
                <exception>
                    CRLException on parsing errors.                    
                </exception>
            </javadoc>
        </class>
    </source>