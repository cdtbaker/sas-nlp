<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.security.cert">
        <import package="java.security.InvalidAlgorithmParameterException"/>
        <class name="CertPathValidatorSpi" line="3">
            <javadoc line="3">
                The &lt;i&gt;Service Provider Interface&lt;/i&gt; (&lt;b&gt;SPI&lt;/b&gt;)
                  for the {@link CertPathValidator CertPathValidator} class. All
                  &lt;code&gt;CertPathValidator&lt;/code&gt; implementations must include a class (the
                  SPI class) that extends this class (&lt;code&gt;CertPathValidatorSpi&lt;/code&gt;)
                  and implements all of its methods. In general, instances of this class
                  should only be accessed through the &lt;code&gt;CertPathValidator&lt;/code&gt; class.
                  For details, see the Java Cryptography Architecture.
                  &lt;p&gt;
                  &lt;b&gt;Concurrent Access&lt;/b&gt;
                  &lt;p&gt;
                  Instances of this class need not be protected against concurrent
                  access from multiple threads. Threads that need to access a single
                  &lt;code&gt;CertPathValidatorSpi&lt;/code&gt; instance concurrently should synchronize
                  amongst themselves and provide the necessary locking before calling the
                  wrapping &lt;code&gt;CertPathValidator&lt;/code&gt; object.
                  &lt;p&gt;
                  However, implementations of &lt;code&gt;CertPathValidatorSpi&lt;/code&gt; may still
                  encounter concurrency issues, since multiple threads each
                  manipulating a different &lt;code&gt;CertPathValidatorSpi&lt;/code&gt; instance need not
                  synchronize.                
                <since>
                    1.4                    
                </since>
                <author>
                    Yassir Elley                    
                </author>
            </javadoc>
            <javadoc line="28">
                The default constructor.                
            </javadoc>
            <method name="CertPathValidatorSpi" type="constructor" line="31"/>
            <method name="engineValidate" type="CertPathValidatorResult" line="33"/>
            <javadoc line="33">
                Validates the specified certification path using the specified
                  algorithm parameter set.
                  &lt;p&gt;
                  The &lt;code&gt;CertPath&lt;/code&gt; specified must be of a type that is
                  supported by the validation algorithm, otherwise an
                  &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; will be thrown. For
                  example, a &lt;code&gt;CertPathValidator&lt;/code&gt; that implements the PKIX
                  algorithm validates &lt;code&gt;CertPath&lt;/code&gt; objects of type X.509.                
                <param>
                    certPath the &lt;code&gt;CertPath&lt;/code&gt; to be validated                    
                </param>
                <param>
                    params the algorithm parameters                    
                </param>
                <return>
                    the result of the validation algorithm                    
                </return>
                <exception>
                    CertPathValidatorException if the &lt;code&gt;CertPath&lt;/code&gt;
                      does not validate                    
                </exception>
                <exception>
                    InvalidAlgorithmParameterException if the specified
                      parameters or the type of the specified &lt;code&gt;CertPath&lt;/code&gt; are
                      inappropriate for this &lt;code&gt;CertPathValidator&lt;/code&gt;                    
                </exception>
            </javadoc>
        </class>
    </source>