<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.security.cert">
        <interface name="CertStoreParameters">
            <implements interface="Cloneable"/>
            <javadoc line="2">
                A specification of &lt;code&gt;CertStore&lt;/code&gt; parameters.
                  &lt;p&gt;
                  The purpose of this interface is to group (and provide type safety for)
                  all &lt;code&gt;CertStore&lt;/code&gt; parameter specifications. All
                  &lt;code&gt;CertStore&lt;/code&gt; parameter specifications must implement this
                  interface.
                  &lt;p&gt;
                  Typically, a &lt;code&gt;CertStoreParameters&lt;/code&gt; object is passed as a parameter
                  to one of the {@link CertStore#getInstance CertStore.getInstance} methods.
                  The &lt;code&gt;getInstance&lt;/code&gt; method returns a &lt;code&gt;CertStore&lt;/code&gt; that
                  is used for retrieving &lt;code&gt;Certificate&lt;/code&gt;s and &lt;code&gt;CRL&lt;/code&gt;s. The
                  &lt;code&gt;CertStore&lt;/code&gt; that is returned is initialized with the specified
                  parameters. The type of parameters needed may vary between different types
                  of &lt;code&gt;CertStore&lt;/code&gt;s.                
                <see>
                    CertStore#getInstance                    
                </see>
                <since>
                    1.4                    
                </since>
                <author>
                    Steve Hanna                    
                </author>
            </javadoc>
            <method name="clone" type="Object" line="22"/>
            <javadoc line="22">
                Makes a copy of this &lt;code&gt;CertStoreParameters&lt;/code&gt;.
                  &lt;p&gt;
                  The precise meaning of &quot;copy&quot; may depend on the class of
                  the &lt;code&gt;CertStoreParameters&lt;/code&gt; object. A typical implementation
                  performs a &quot;deep copy&quot; of this object, but this is not an absolute
                  requirement. Some implementations may perform a &quot;shallow copy&quot; of some
                  or all of the fields of this object.
                  &lt;p&gt;
                  Note that the &lt;code&gt;CertStore.getInstance&lt;/code&gt; methods make a copy
                  of the specified &lt;code&gt;CertStoreParameters&lt;/code&gt;. A deep copy
                  implementation of &lt;code&gt;clone&lt;/code&gt; is safer and more robust, as it
                  prevents the caller from corrupting a shared &lt;code&gt;CertStore&lt;/code&gt; by
                  subsequently modifying the contents of its initialization parameters.
                  However, a shallow copy implementation of &lt;code&gt;clone&lt;/code&gt; is more
                  appropriate for applications that need to hold a reference to a
                  parameter contained in the &lt;code&gt;CertStoreParameters&lt;/code&gt;. For example,
                  a shallow copy clone allows an application to release the resources of
                  a particular &lt;code&gt;CertStore&lt;/code&gt; initialization parameter immediately,
                  rather than waiting for the garbage collection mechanism. This should
                  be done with the utmost care, since the &lt;code&gt;CertStore&lt;/code&gt; may still
                  be in use by other threads.
                  &lt;p&gt;
                  Each subclass should state the precise behavior of this method so
                  that users and developers know what to expect.                
                <return>
                    a copy of this &lt;code&gt;CertStoreParameters&lt;/code&gt;                    
                </return>
            </javadoc>
        </interface>
    </source>