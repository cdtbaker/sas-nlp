<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.security.cert">
        <import package="java.security.AccessController"/>
        <import package="java.security.InvalidAlgorithmParameterException"/>
        <import package="java.security.NoSuchAlgorithmException"/>
        <import package="java.security.NoSuchProviderException"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.security.Provider"/>
        <import package="java.security.Security"/>
        <import package="java.util.Collection"/>
        <import package="sun.security.jca"/>
        <import package="sun.security.jca.GetInstance.Instance"/>
        <class name="CertStore" line="12">
            <javadoc line="12">
                A class for retrieving &lt;code&gt;Certificate&lt;/code&gt;s and &lt;code&gt;CRL&lt;/code&gt;s
                  from a repository.
                  &lt;p&gt;
                  This class uses a provider-based architecture.
                  To create a &lt;code&gt;CertStore&lt;/code&gt;, call one of the static
                  &lt;code&gt;getInstance&lt;/code&gt; methods, passing in the type of
                  &lt;code&gt;CertStore&lt;/code&gt; desired, any applicable initialization parameters
                  and optionally the name of the provider desired.
                  &lt;p&gt;
                  Once the &lt;code&gt;CertStore&lt;/code&gt; has been created, it can be used to
                  retrieve &lt;code&gt;Certificate&lt;/code&gt;s and &lt;code&gt;CRL&lt;/code&gt;s by calling its{@link #getCertificates(CertSelector selector) getCertificates} and{@link #getCRLs(CRLSelector selector) getCRLs} methods.
                  &lt;p&gt;
                  Unlike a {@link java.security.KeyStore KeyStore}, which provides access
                  to a cache of private keys and trusted certificates, a
                  &lt;code&gt;CertStore&lt;/code&gt; is designed to provide access to a potentially
                  vast repository of untrusted certificates and CRLs. For example, an LDAP
                  implementation of &lt;code&gt;CertStore&lt;/code&gt; provides access to certificates
                  and CRLs stored in one or more directories using the LDAP protocol and the
                  schema as defined in the RFC service attribute.
                  &lt;p&gt; Every implementation of the Java platform is required to support the
                  following standard &lt;code&gt;CertStore&lt;/code&gt; type:
                  &lt;ul&gt;
                  &lt;li&gt;&lt;tt&gt;Collection&lt;/tt&gt;&lt;/li&gt;
                  &lt;/ul&gt;
                  This type is described in the &lt;a href=
                  &quot;{@docRoot}/../technotes/guides/security/StandardNames.html#CertStore&quot;&gt;
                  CertStore section&lt;/a&gt; of the
                  Java Cryptography Architecture Standard Algorithm Name Documentation.
                  Consult the release documentation for your implementation to see if any
                  other types are supported.
                  &lt;p&gt;
                  &lt;b&gt;Concurrent Access&lt;/b&gt;
                  &lt;p&gt;
                  All public methods of &lt;code&gt;CertStore&lt;/code&gt; objects must be thread-safe.
                  That is, multiple threads may concurrently invoke these methods on a
                  single &lt;code&gt;CertStore&lt;/code&gt; object (or more than one) with no
                  ill effects. This allows a &lt;code&gt;CertPathBuilder&lt;/code&gt; to search for a
                  CRL while simultaneously searching for further certificates, for instance.
                  &lt;p&gt;
                  The static methods of this class are also guaranteed to be thread-safe.
                  Multiple threads may concurrently invoke the static methods defined in
                  this class with no ill effects.                
                <since>
                    1.4                    
                </since>
                <author>
                    Sean Mullan, Steve Hanna                    
                </author>
            </javadoc>
            <declaration name="CERTSTORE_TYPE" type="String" line="59"/>
            <declaration name="storeSpi" type="CertStoreSpi" line="60"/>
            <declaration name="provider" type="Provider" line="61"/>
            <declaration name="type" type="String" line="62"/>
            <declaration name="params" type="CertStoreParameters" line="63"/>
            <javadoc line="64">
                Creates a &lt;code&gt;CertStore&lt;/code&gt; object of the given type, and
                  encapsulates the given provider implementation (SPI object) in it.                
                <param>
                    storeSpi the provider implementation                    
                </param>
                <param>
                    provider the provider                    
                </param>
                <param>
                    type the type                    
                </param>
                <param>
                    params the initialization parameters (may be &lt;code&gt;null&lt;/code&gt;)                    
                </param>
            </javadoc>
            <method name="CertStore" type="constructor" line="72">
                <params>
                    <param name="storeSpi" type="CertStoreSpi"/>
                    <param name="provider" type="Provider"/>
                    <param name="type" type="String"/>
                    <param name="params" type="CertStoreParameters"/>
                </params>
            </method>
            <javadoc line="78">
                Returns a &lt;code&gt;Collection&lt;/code&gt; of &lt;code&gt;Certificate&lt;/code&gt;s that
                  match the specified selector. If no &lt;code&gt;Certificate&lt;/code&gt;s
                  match the selector, an empty &lt;code&gt;Collection&lt;/code&gt; will be returned.
                  &lt;p&gt;
                  For some &lt;code&gt;CertStore&lt;/code&gt; types, the resulting
                  &lt;code&gt;Collection&lt;/code&gt; may not contain &lt;b&gt;all&lt;/b&gt; of the
                  &lt;code&gt;Certificate&lt;/code&gt;s that match the selector. For instance,
                  an LDAP &lt;code&gt;CertStore&lt;/code&gt; may not search all entries in the
                  directory. Instead, it may just search entries that are likely to
                  contain the &lt;code&gt;Certificate&lt;/code&gt;s it is looking for.
                  &lt;p&gt;
                  Some &lt;code&gt;CertStore&lt;/code&gt; implementations (especially LDAP
                  &lt;code&gt;CertStore&lt;/code&gt;s) may throw a &lt;code&gt;CertStoreException&lt;/code&gt;
                  unless a non-null &lt;code&gt;CertSelector&lt;/code&gt; is provided that
                  includes specific criteria that can be used to find the certificates.
                  Issuer and/or subject names are especially useful criteria.                
                <param>
                    selector A &lt;code&gt;CertSelector&lt;/code&gt; used to select which
                      &lt;code&gt;Certificate&lt;/code&gt;s should be returned. Specify &lt;code&gt;null&lt;/code&gt;
                      to return all &lt;code&gt;Certificate&lt;/code&gt;s (if supported).                    
                </param>
                <return>
                    A &lt;code&gt;Collection&lt;/code&gt; of &lt;code&gt;Certificate&lt;/code&gt;s that
                      match the specified selector (never &lt;code&gt;null&lt;/code&gt;)                    
                </return>
                <throws>
                    CertStoreException if an exception occurs                    
                </throws>
            </javadoc>
            <method name="getCertificates" type="Collection&lt;? extends Certificate&gt;" line="102">
                <params>
                    <param name="selector" type="CertSelector"/>
                </params>
            </method>
            <javadoc line="105">
                Returns a &lt;code&gt;Collection&lt;/code&gt; of &lt;code&gt;CRL&lt;/code&gt;s that
                  match the specified selector. If no &lt;code&gt;CRL&lt;/code&gt;s
                  match the selector, an empty &lt;code&gt;Collection&lt;/code&gt; will be returned.
                  &lt;p&gt;
                  For some &lt;code&gt;CertStore&lt;/code&gt; types, the resulting
                  &lt;code&gt;Collection&lt;/code&gt; may not contain &lt;b&gt;all&lt;/b&gt; of the
                  &lt;code&gt;CRL&lt;/code&gt;s that match the selector. For instance,
                  an LDAP &lt;code&gt;CertStore&lt;/code&gt; may not search all entries in the
                  directory. Instead, it may just search entries that are likely to
                  contain the &lt;code&gt;CRL&lt;/code&gt;s it is looking for.
                  &lt;p&gt;
                  Some &lt;code&gt;CertStore&lt;/code&gt; implementations (especially LDAP
                  &lt;code&gt;CertStore&lt;/code&gt;s) may throw a &lt;code&gt;CertStoreException&lt;/code&gt;
                  unless a non-null &lt;code&gt;CRLSelector&lt;/code&gt; is provided that
                  includes specific criteria that can be used to find the CRLs.
                  Issuer names and/or the certificate to be checked are especially useful.                
                <param>
                    selector A &lt;code&gt;CRLSelector&lt;/code&gt; used to select which
                      &lt;code&gt;CRL&lt;/code&gt;s should be returned. Specify &lt;code&gt;null&lt;/code&gt;
                      to return all &lt;code&gt;CRL&lt;/code&gt;s (if supported).                    
                </param>
                <return>
                    A &lt;code&gt;Collection&lt;/code&gt; of &lt;code&gt;CRL&lt;/code&gt;s that
                      match the specified selector (never &lt;code&gt;null&lt;/code&gt;)                    
                </return>
                <throws>
                    CertStoreException if an exception occurs                    
                </throws>
            </javadoc>
            <method name="getCRLs" type="Collection&lt;? extends CRL&gt;" line="129">
                <params>
                    <param name="selector" type="CRLSelector"/>
                </params>
            </method>
            <javadoc line="132">
                Returns a &lt;code&gt;CertStore&lt;/code&gt; object that implements the specified
                  &lt;code&gt;CertStore&lt;/code&gt; type and is initialized with the specified
                  parameters.
                  &lt;p&gt; This method traverses the list of registered security Providers,
                  starting with the most preferred Provider.
                  A new CertStore object encapsulating the
                  CertStoreSpi implementation from the first
                  Provider that supports the specified type is returned.
                  &lt;p&gt; Note that the list of registered providers may be retrieved via
                  the {@link Security#getProviders() Security.getProviders()} method.
                  &lt;p&gt;The &lt;code&gt;CertStore&lt;/code&gt; that is returned is initialized with the
                  specified &lt;code&gt;CertStoreParameters&lt;/code&gt;. The type of parameters
                  needed may vary between different types of &lt;code&gt;CertStore&lt;/code&gt;s.
                  Note that the specified &lt;code&gt;CertStoreParameters&lt;/code&gt; object is
                  cloned.                
                <param>
                    type the name of the requested &lt;code&gt;CertStore&lt;/code&gt; type.
                      See the CertStore section in the &lt;a href=
                      &quot;{@docRoot}/../technotes/guides/security/StandardNames.html#CertStore&quot;&gt;
                      Java Cryptography Architecture Standard Algorithm Name Documentation&lt;/a&gt;
                      for information about standard types.                    
                </param>
                <param>
                    params the initialization parameters (may be &lt;code&gt;null&lt;/code&gt;).                    
                </param>
                <return>
                    a &lt;code&gt;CertStore&lt;/code&gt; object that implements the specified
                      &lt;code&gt;CertStore&lt;/code&gt; type.                    
                </return>
                <throws>
                    NoSuchAlgorithmException if no Provider supports a
                      CertStoreSpi implementation for the specified type.                    
                </throws>
                <throws>
                    InvalidAlgorithmParameterException if the specified
                      initialization parameters are inappropriate for this
                      &lt;code&gt;CertStore&lt;/code&gt;.                    
                </throws>
                <see>
                    java.security.Provider                    
                </see>
            </javadoc>
            <method name="getInstance" type="CertStore" line="163">
                <params>
                    <param name="type" type="String"/>
                    <param name="params" type="CertStoreParameters"/>
                </params>
                <scope line="164">
                    <declaration name="instance" type="Instance" line="165"/>
                </scope>
                <scope line="168"/>
            </method>
            <method name="handleException" type="CertStore" line="172">
                <params>
                    <param name="e" type="NoSuchAlgorithmException"/>
                </params>
                <declaration name="cause" type="Throwable" line="173"/>
                <scope line="174"/>
            </method>
            <javadoc line="179">
                Returns a &lt;code&gt;CertStore&lt;/code&gt; object that implements the specified
                  &lt;code&gt;CertStore&lt;/code&gt; type.
                  &lt;p&gt; A new CertStore object encapsulating the
                  CertStoreSpi implementation from the specified provider
                  is returned.  The specified provider must be registered
                  in the security provider list.
                  &lt;p&gt; Note that the list of registered providers may be retrieved via
                  the {@link Security#getProviders() Security.getProviders()} method.
                  &lt;p&gt;The &lt;code&gt;CertStore&lt;/code&gt; that is returned is initialized with the
                  specified &lt;code&gt;CertStoreParameters&lt;/code&gt;. The type of parameters
                  needed may vary between different types of &lt;code&gt;CertStore&lt;/code&gt;s.
                  Note that the specified &lt;code&gt;CertStoreParameters&lt;/code&gt; object is
                  cloned.                
                <param>
                    type the requested &lt;code&gt;CertStore&lt;/code&gt; type.
                      See the CertStore section in the &lt;a href=
                      &quot;{@docRoot}/../technotes/guides/security/StandardNames.html#CertStore&quot;&gt;
                      Java Cryptography Architecture Standard Algorithm Name Documentation&lt;/a&gt;
                      for information about standard types.                    
                </param>
                <param>
                    params the initialization parameters (may be &lt;code&gt;null&lt;/code&gt;).                    
                </param>
                <param>
                    provider the name of the provider.                    
                </param>
                <return>
                    a &lt;code&gt;CertStore&lt;/code&gt; object that implements the
                      specified type.                    
                </return>
                <throws>
                    NoSuchAlgorithmException if a CertStoreSpi
                      implementation for the specified type is not
                      available from the specified provider.                    
                </throws>
                <throws>
                    InvalidAlgorithmParameterException if the specified
                      initialization parameters are inappropriate for this
                      &lt;code&gt;CertStore&lt;/code&gt;.                    
                </throws>
                <throws>
                    NoSuchProviderException if the specified provider is not
                      registered in the security provider list.                    
                </throws>
                <exception>
                    IllegalArgumentException if the &lt;code&gt;provider&lt;/code&gt; is
                      null or empty.                    
                </exception>
                <see>
                    java.security.Provider                    
                </see>
            </javadoc>
            <method name="getInstance" type="CertStore" line="214">
                <params>
                    <param name="type" type="String"/>
                    <param name="params" type="CertStoreParameters"/>
                    <param name="provider" type="String"/>
                </params>
                <scope line="215">
                    <declaration name="instance" type="Instance" line="216"/>
                </scope>
                <scope line="219"/>
            </method>
            <javadoc line="223">
                Returns a &lt;code&gt;CertStore&lt;/code&gt; object that implements the specified
                  &lt;code&gt;CertStore&lt;/code&gt; type.
                  &lt;p&gt; A new CertStore object encapsulating the
                  CertStoreSpi implementation from the specified Provider
                  object is returned.  Note that the specified Provider object
                  does not have to be registered in the provider list.
                  &lt;p&gt;The &lt;code&gt;CertStore&lt;/code&gt; that is returned is initialized with the
                  specified &lt;code&gt;CertStoreParameters&lt;/code&gt;. The type of parameters
                  needed may vary between different types of &lt;code&gt;CertStore&lt;/code&gt;s.
                  Note that the specified &lt;code&gt;CertStoreParameters&lt;/code&gt; object is
                  cloned.                
                <param>
                    type the requested &lt;code&gt;CertStore&lt;/code&gt; type.
                      See the CertStore section in the &lt;a href=
                      &quot;{@docRoot}/../technotes/guides/security/StandardNames.html#CertStore&quot;&gt;
                      Java Cryptography Architecture Standard Algorithm Name Documentation&lt;/a&gt;
                      for information about standard types.                    
                </param>
                <param>
                    params the initialization parameters (may be &lt;code&gt;null&lt;/code&gt;).                    
                </param>
                <param>
                    provider the provider.                    
                </param>
                <return>
                    a &lt;code&gt;CertStore&lt;/code&gt; object that implements the
                      specified type.                    
                </return>
                <exception>
                    NoSuchAlgorithmException if a CertStoreSpi
                      implementation for the specified type is not available
                      from the specified Provider object.                    
                </exception>
                <throws>
                    InvalidAlgorithmParameterException if the specified
                      initialization parameters are inappropriate for this
                      &lt;code&gt;CertStore&lt;/code&gt;                    
                </throws>
                <exception>
                    IllegalArgumentException if the &lt;code&gt;provider&lt;/code&gt; is
                      null.                    
                </exception>
                <see>
                    java.security.Provider                    
                </see>
            </javadoc>
            <method name="getInstance" type="CertStore" line="254">
                <params>
                    <param name="type" type="String"/>
                    <param name="params" type="CertStoreParameters"/>
                    <param name="provider" type="Provider"/>
                </params>
                <scope line="255">
                    <declaration name="instance" type="Instance" line="256"/>
                </scope>
                <scope line="259"/>
            </method>
            <javadoc line="263">
                Returns the parameters used to initialize this &lt;code&gt;CertStore&lt;/code&gt;.
                  Note that the &lt;code&gt;CertStoreParameters&lt;/code&gt; object is cloned before
                  it is returned.                
                <return>
                    the parameters used to initialize this &lt;code&gt;CertStore&lt;/code&gt;
                      (may be &lt;code&gt;null&lt;/code&gt;)                    
                </return>
            </javadoc>
            <method name="getCertStoreParameters" type="CertStoreParameters" line="270"/>
            <javadoc line="273">
                Returns the type of this &lt;code&gt;CertStore&lt;/code&gt;.                
                <return>
                    the type of this &lt;code&gt;CertStore&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getType" type="String" line="277"/>
            <javadoc line="280">
                Returns the provider of this &lt;code&gt;CertStore&lt;/code&gt;.                
                <return>
                    the provider of this &lt;code&gt;CertStore&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getProvider" type="Provider" line="284"/>
            <javadoc line="287">
                Returns the default &lt;code&gt;CertStore&lt;/code&gt; type as specified in the
                  Java security properties file, or the string &amp;quot;LDAP&amp;quot; if no
                  such property exists. The Java security properties file is located in
                  the file named &amp;lt;JAVA_HOME&amp;gt;/lib/security/java.security.
                  &amp;lt;JAVA_HOME&amp;gt; refers to the value of the java.home system property,
                  and specifies the directory where the JRE is installed.
                  &lt;p&gt;The default &lt;code&gt;CertStore&lt;/code&gt; type can be used by applications
                  that do not want to use a hard-coded type when calling one of the
                  &lt;code&gt;getInstance&lt;/code&gt; methods, and want to provide a default
                  &lt;code&gt;CertStore&lt;/code&gt; type in case a user does not specify its own.
                  &lt;p&gt;The default &lt;code&gt;CertStore&lt;/code&gt; type can be changed by setting
                  the value of the &quot;certstore.type&quot; security property (in the Java
                  security properties file) to the desired type.                
                <return>
                    the default &lt;code&gt;CertStore&lt;/code&gt; type as specified in the
                      Java security properties file, or the string &amp;quot;LDAP&amp;quot;
                      if no such property exists.                    
                </return>
            </javadoc>
            <method name="getDefaultType" type="String" line="305">
                <declaration name="cstype" type="String" line="306"/>
                <anonymous_class line="307">
                    <method name="run" type="String" line="308"/>
                </anonymous_class>
                <scope line="313"/>
            </method>
        </class>
    </source>