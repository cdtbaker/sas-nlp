<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.security.cert">
        <import package="java.io.Serializable"/>
        <import package="java.util.Collection"/>
        <import package="java.util.Collections"/>
        <class name="CollectionCertStoreParameters" line="32">
            <implements interface="CertStoreParameters"/>
            <javadoc line="32">
                Parameters used as input for the Collection &lt;code&gt;CertStore&lt;/code&gt;
                  algorithm.
                  &lt;p&gt;
                  This class is used to provide necessary configuration parameters
                  to implementations of the Collection &lt;code&gt;CertStore&lt;/code&gt;
                  algorithm. The only parameter included in this class is the
                  &lt;code&gt;Collection&lt;/code&gt; from which the &lt;code&gt;CertStore&lt;/code&gt; will
                  retrieve certificates and CRLs.
                  &lt;p&gt;
                  &lt;b&gt;Concurrent Access&lt;/b&gt;
                  &lt;p&gt;
                  Unless otherwise specified, the methods defined in this class are not
                  thread-safe. Multiple threads that need to access a single
                  object concurrently should synchronize amongst themselves and
                  provide the necessary locking. Multiple threads each manipulating
                  separate objects need not synchronize.                
                <since>
                    1.4                    
                </since>
                <author>
                    Steve Hanna                    
                </author>
                <see>
                    java.util.Collection                    
                </see>
                <see>
                    CertStore                    
                </see>
            </javadoc>
            <declaration name="coll" type="Collection&lt;?&gt;" line="58"/>
            <javadoc line="60">
                Creates an instance of &lt;code&gt;CollectionCertStoreParameters&lt;/code&gt;
                  which will allow certificates and CRLs to be retrieved from the
                  specified &lt;code&gt;Collection&lt;/code&gt;. If the specified
                  &lt;code&gt;Collection&lt;/code&gt; contains an object that is not a
                  &lt;code&gt;Certificate&lt;/code&gt; or &lt;code&gt;CRL&lt;/code&gt;, that object will be
                  ignored by the Collection &lt;code&gt;CertStore&lt;/code&gt;.
                  &lt;p&gt;
                  The &lt;code&gt;Collection&lt;/code&gt; is &lt;b&gt;not&lt;/b&gt; copied. Instead, a
                  reference is used. This allows the caller to subsequently add or
                  remove &lt;code&gt;Certificates&lt;/code&gt; or &lt;code&gt;CRL&lt;/code&gt;s from the
                  &lt;code&gt;Collection&lt;/code&gt;, thus changing the set of
                  &lt;code&gt;Certificates&lt;/code&gt; or &lt;code&gt;CRL&lt;/code&gt;s available to the
                  Collection &lt;code&gt;CertStore&lt;/code&gt;. The Collection &lt;code&gt;CertStore&lt;/code&gt;
                  will not modify the contents of the &lt;code&gt;Collection&lt;/code&gt;.
                  &lt;p&gt;
                  If the &lt;code&gt;Collection&lt;/code&gt; will be modified by one thread while
                  another thread is calling a method of a Collection &lt;code&gt;CertStore&lt;/code&gt;
                  that has been initialized with this &lt;code&gt;Collection&lt;/code&gt;, the
                  &lt;code&gt;Collection&lt;/code&gt; must have fail-fast iterators.                
                <param>
                    collection a &lt;code&gt;Collection&lt;/code&gt; of
                      &lt;code&gt;Certificate&lt;/code&gt;s and &lt;code&gt;CRL&lt;/code&gt;s                    
                </param>
                <exception>
                    NullPointerException if &lt;code&gt;collection&lt;/code&gt; is
                      &lt;code&gt;null&lt;/code&gt;                    
                </exception>
            </javadoc>
            <method name="CollectionCertStoreParameters" type="constructor" line="86">
                <params>
                    <param name="collection" type="Collection<?>"/>
                </params>
            </method>
            <javadoc line="92">
                Creates an instance of &lt;code&gt;CollectionCertStoreParameters&lt;/code&gt; with
                  the default parameter values (an empty and immutable
                  &lt;code&gt;Collection&lt;/code&gt;).                
            </javadoc>
            <method name="CollectionCertStoreParameters" type="constructor" line="97"/>
            <javadoc line="101">
                Returns the &lt;code&gt;Collection&lt;/code&gt; from which &lt;code&gt;Certificate&lt;/code&gt;s
                  and &lt;code&gt;CRL&lt;/code&gt;s are retrieved. This is &lt;b&gt;not&lt;/b&gt; a copy of the
                  &lt;code&gt;Collection&lt;/code&gt;, it is a reference. This allows the caller to
                  subsequently add or remove &lt;code&gt;Certificates&lt;/code&gt; or
                  &lt;code&gt;CRL&lt;/code&gt;s from the &lt;code&gt;Collection&lt;/code&gt;.                
                <return>
                    the &lt;code&gt;Collection&lt;/code&gt; (never null)                    
                </return>
            </javadoc>
            <method name="getCollection" type="Collection<?>" line="110"/>
            <javadoc line="114">
                Returns a copy of this object. Note that only a reference to the
                  &lt;code&gt;Collection&lt;/code&gt; is copied, and not the contents.                
                <return>
                    the copy                    
                </return>
            </javadoc>
            <method name="clone" type="Object" line="120">
                <comment line="125">
                                        
                </comment>
                <scope line="121"/>
                <scope line="123"/>
            </method>
            <javadoc line="129">
                Returns a formatted string describing the parameters.                
                <return>
                    a formatted string describing the parameters                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="134">
                <declaration name="sb" type="StringBuffer" line="135"/>
            </method>
        </class>
    </source>