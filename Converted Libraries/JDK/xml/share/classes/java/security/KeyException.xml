<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.security">
        <class name="KeyException" line="2">
            <extends class="GeneralSecurityException"/>
            <javadoc line="2">
                This is the basic key exception.                
                <see>
                    Key                    
                </see>
                <see>
                    InvalidKeyException                    
                </see>
                <see>
                    KeyManagementException                    
                </see>
                <author>
                    Benjamin Renaud                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="10"/>
            <javadoc line="11">
                Constructs a KeyException with no detail message. A detail
                  message is a String that describes this particular exception.                
            </javadoc>
            <method name="KeyException" type="constructor" line="15"/>
            <javadoc line="18">
                Constructs a KeyException with the specified detail message.
                  A detail message is a String that describes this particular
                  exception.                
                <param>
                    msg the detail message.                    
                </param>
            </javadoc>
            <method name="KeyException" type="constructor" line="24">
                <params>
                    <param name="msg" type="String"/>
                </params>
            </method>
            <javadoc line="27">
                Creates a &lt;code&gt;KeyException&lt;/code&gt; with the specified
                  detail message and cause.                
                <param>
                    message the detail message (which is saved for later retrieval
                      by the {@link #getMessage()} method).                    
                </param>
                <param>
                    cause the cause (which is saved for later retrieval by the{@link #getCause()} method).  (A <tt>null</tt> value is permitted,
                      and indicates that the cause is nonexistent or unknown.)                    
                </param>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="KeyException" type="constructor" line="36">
                <params>
                    <param name="message" type="String"/>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
            <javadoc line="39">
                Creates a &lt;code&gt;KeyException&lt;/code&gt; with the specified cause
                  and a detail message of &lt;tt&gt;(cause==null ? null : cause.toString())&lt;/tt&gt;
                  (which typically contains the class and detail message of
                  &lt;tt&gt;cause&lt;/tt&gt;).                
                <param>
                    cause the cause (which is saved for later retrieval by the{@link #getCause()} method).  (A <tt>null</tt> value is permitted,
                      and indicates that the cause is nonexistent or unknown.)                    
                </param>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="KeyException" type="constructor" line="48">
                <params>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
        </class>
    </source>