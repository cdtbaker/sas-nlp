<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.security">
        <import package="java.io"/>
        <import package="java.security.spec.AlgorithmParameterSpec"/>
        <import package="java.security.spec.InvalidParameterSpecException"/>
        <class name="AlgorithmParameters" line="5">
            <javadoc line="5">
                This class is used as an opaque representation of cryptographic parameters.
                  &lt;p&gt;An &lt;code&gt;AlgorithmParameters&lt;/code&gt; object for managing the parameters
                  for a particular algorithm can be obtained by
                  calling one of the &lt;code&gt;getInstance&lt;/code&gt; factory methods
                  (static methods that return instances of a given class).
                  &lt;p&gt;Once an &lt;code&gt;AlgorithmParameters&lt;/code&gt; object is obtained, it must be
                  initialized via a call to &lt;code&gt;init&lt;/code&gt;, using an appropriate parameter
                  specification or parameter encoding.
                  &lt;p&gt;A transparent parameter specification is obtained from an
                  &lt;code&gt;AlgorithmParameters&lt;/code&gt; object via a call to
                  &lt;code&gt;getParameterSpec&lt;/code&gt;, and a byte encoding of the parameters is
                  obtained via a call to &lt;code&gt;getEncoded&lt;/code&gt;.
                  &lt;p&gt; Every implementation of the Java platform is required to support the
                  following standard &lt;code&gt;AlgorithmParameters&lt;/code&gt; algorithms:
                  &lt;ul&gt;
                  &lt;li&gt;&lt;tt&gt;AES&lt;/tt&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;tt&gt;DES&lt;/tt&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;tt&gt;DESede&lt;/tt&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;tt&gt;DiffieHellman&lt;/tt&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;tt&gt;DSA&lt;/tt&gt;&lt;/li&gt;
                  &lt;/ul&gt;
                  These algorithms are described in the &lt;a href=
                  &quot;{@docRoot}/../technotes/guides/security/StandardNames.html#AlgorithmParameters&quot;&gt;
                  AlgorithmParameters section&lt;/a&gt; of the
                  Java Cryptography Architecture Standard Algorithm Name Documentation.
                  Consult the release documentation for your implementation to see if any
                  other algorithms are supported.                
                <author>
                    Jan Luehe                    
                </author>
                <see>
                    java.security.spec.AlgorithmParameterSpec                    
                </see>
                <see>
                    java.security.spec.DSAParameterSpec                    
                </see>
                <see>
                    KeyPairGenerator                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <declaration name="provider" type="Provider" line="40"/>
            <declaration name="paramSpi" type="AlgorithmParametersSpi" line="41"/>
            <declaration name="algorithm" type="String" line="42"/>
            <declaration name="initialized" type="boolean" line="43"/>
            <javadoc line="44">
                Creates an AlgorithmParameters object.                
                <param>
                    paramSpi the delegate                    
                </param>
                <param>
                    provider the provider                    
                </param>
                <param>
                    algorithm the algorithm                    
                </param>
            </javadoc>
            <method name="AlgorithmParameters" type="constructor" line="50">
                <params>
                    <param name="paramSpi" type="AlgorithmParametersSpi"/>
                    <param name="provider" type="Provider"/>
                    <param name="algorithm" type="String"/>
                </params>
            </method>
            <javadoc line="55">
                Returns the name of the algorithm associated with this parameter object.                
                <return>
                    the algorithm name.                    
                </return>
            </javadoc>
            <method name="getAlgorithm" type="String" line="59"/>
            <javadoc line="62">
                Returns a parameter object for the specified algorithm.
                  &lt;p&gt; This method traverses the list of registered security Providers,
                  starting with the most preferred Provider.
                  A new AlgorithmParameters object encapsulating the
                  AlgorithmParametersSpi implementation from the first
                  Provider that supports the specified algorithm is returned.
                  &lt;p&gt; Note that the list of registered providers may be retrieved via
                  the {@link Security#getProviders() Security.getProviders()} method.
                  &lt;p&gt; The returned parameter object must be initialized via a call to
                  &lt;code&gt;init&lt;/code&gt;, using an appropriate parameter specification or
                  parameter encoding.                
                <param>
                    algorithm the name of the algorithm requested.
                      See the AlgorithmParameters section in the <a href=
                      "{@docRoot}/../technotes/guides/security/StandardNames.html#AlgorithmParameters">
                      Java Cryptography Architecture Standard Algorithm Name Documentation</a>
                      for information about standard algorithm names.                    
                </param>
                <return>
                    the new parameter object.                    
                </return>
                <exception>
                    NoSuchAlgorithmException if no Provider supports an
                      AlgorithmParametersSpi implementation for the
                      specified algorithm.                    
                </exception>
                <see>
                    Provider                    
                </see>
            </javadoc>
            <method name="getInstance" type="AlgorithmParameters" line="85">
                <params>
                    <param name="algorithm" type="String"/>
                </params>
                <scope line="86">
                    <declaration name="objs" type="Object[]" line="87"/>
                </scope>
                <scope line="90"/>
            </method>
            <javadoc line="94">
                Returns a parameter object for the specified algorithm.
                  &lt;p&gt; A new AlgorithmParameters object encapsulating the
                  AlgorithmParametersSpi implementation from the specified provider
                  is returned.  The specified provider must be registered
                  in the security provider list.
                  &lt;p&gt; Note that the list of registered providers may be retrieved via
                  the {@link Security#getProviders() Security.getProviders()} method.
                  &lt;p&gt;The returned parameter object must be initialized via a call to
                  &lt;code&gt;init&lt;/code&gt;, using an appropriate parameter specification or
                  parameter encoding.                
                <param>
                    algorithm the name of the algorithm requested.
                      See the AlgorithmParameters section in the <a href=
                      "{@docRoot}/../technotes/guides/security/StandardNames.html#AlgorithmParameters">
                      Java Cryptography Architecture Standard Algorithm Name Documentation</a>
                      for information about standard algorithm names.                    
                </param>
                <param>
                    provider the name of the provider.                    
                </param>
                <return>
                    the new parameter object.                    
                </return>
                <exception>
                    NoSuchAlgorithmException if an AlgorithmParametersSpi
                      implementation for the specified algorithm is not
                      available from the specified provider.                    
                </exception>
                <exception>
                    NoSuchProviderException if the specified provider is not
                      registered in the security provider list.                    
                </exception>
                <exception>
                    IllegalArgumentException if the provider name is null
                      or empty.                    
                </exception>
                <see>
                    Provider                    
                </see>
            </javadoc>
            <method name="getInstance" type="AlgorithmParameters" line="121">
                <params>
                    <param name="algorithm" type="String"/>
                    <param name="provider" type="String"/>
                </params>
                <declaration name="objs" type="Object[]" line="123"/>
            </method>
            <javadoc line="126">
                Returns a parameter object for the specified algorithm.
                  &lt;p&gt; A new AlgorithmParameters object encapsulating the
                  AlgorithmParametersSpi implementation from the specified Provider
                  object is returned.  Note that the specified Provider object
                  does not have to be registered in the provider list.
                  &lt;p&gt;The returned parameter object must be initialized via a call to
                  &lt;code&gt;init&lt;/code&gt;, using an appropriate parameter specification or
                  parameter encoding.                
                <param>
                    algorithm the name of the algorithm requested.
                      See the AlgorithmParameters section in the <a href=
                      "{@docRoot}/../technotes/guides/security/StandardNames.html#AlgorithmParameters">
                      Java Cryptography Architecture Standard Algorithm Name Documentation</a>
                      for information about standard algorithm names.                    
                </param>
                <param>
                    provider the name of the provider.                    
                </param>
                <return>
                    the new parameter object.                    
                </return>
                <exception>
                    NoSuchAlgorithmException if an AlgorithmParameterGeneratorSpi
                      implementation for the specified algorithm is not available
                      from the specified Provider object.                    
                </exception>
                <exception>
                    IllegalArgumentException if the provider is null.                    
                </exception>
                <see>
                    Provider                    
                </see>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="getInstance" type="AlgorithmParameters" line="149">
                <params>
                    <param name="algorithm" type="String"/>
                    <param name="provider" type="Provider"/>
                </params>
                <declaration name="objs" type="Object[]" line="151"/>
            </method>
            <javadoc line="154">
                Returns the provider of this parameter object.                
                <return>
                    the provider of this parameter object                    
                </return>
            </javadoc>
            <method name="getProvider" type="Provider" line="158"/>
            <javadoc line="161">
                Initializes this parameter object using the parameters
                  specified in &lt;code&gt;paramSpec&lt;/code&gt;.                
                <param>
                    paramSpec the parameter specification.                    
                </param>
                <exception>
                    InvalidParameterSpecException if the given parameter
                      specification is inappropriate for the initialization of this parameter
                      object, or if this parameter object has already been initialized.                    
                </exception>
            </javadoc>
            <method name="init" type="void" line="169">
                <params>
                    <param name="paramSpec" type="AlgorithmParameterSpec"/>
                </params>
            </method>
            <javadoc line="174">
                Imports the specified parameters and decodes them according to the
                  primary decoding format for parameters. The primary decoding
                  format for parameters is ASN.1, if an ASN.1 specification for this type
                  of parameters exists.                
                <param>
                    params the encoded parameters.                    
                </param>
                <exception>
                    IOException on decoding errors, or if this parameter object
                      has already been initialized.                    
                </exception>
            </javadoc>
            <method name="init" type="void" line="183">
                <params>
                    <param name="params" type="byte[]"/>
                </params>
            </method>
            <javadoc line="188">
                Imports the parameters from &lt;code&gt;params&lt;/code&gt; and decodes them
                  according to the specified decoding scheme.
                  If &lt;code&gt;format&lt;/code&gt; is null, the
                  primary decoding format for parameters is used. The primary decoding
                  format is ASN.1, if an ASN.1 specification for these parameters
                  exists.                
                <param>
                    params the encoded parameters.                    
                </param>
                <param>
                    format the name of the decoding scheme.                    
                </param>
                <exception>
                    IOException on decoding errors, or if this parameter object
                      has already been initialized.                    
                </exception>
            </javadoc>
            <method name="init" type="void" line="200">
                <params>
                    <param name="params" type="byte[]"/>
                    <param name="format" type="String"/>
                </params>
            </method>
            <javadoc line="205">
                Returns a (transparent) specification of this parameter object.
                  &lt;code&gt;paramSpec&lt;/code&gt; identifies the specification class in which
                  the parameters should be returned. It could, for example, be
                  &lt;code&gt;DSAParameterSpec.class&lt;/code&gt;, to indicate that the
                  parameters should be returned in an instance of the
                  &lt;code&gt;DSAParameterSpec&lt;/code&gt; class.                
                <param>
                    paramSpec the specification class in which
                      the parameters should be returned.                    
                </param>
                <return>
                    the parameter specification.                    
                </return>
                <exception>
                    InvalidParameterSpecException if the requested parameter
                      specification is inappropriate for this parameter object, or if this
                      parameter object has not been initialized.                    
                </exception>
            </javadoc>
            <method name="getParameterSpec" type="T" line="219">
                <params>
                    <param name="paramSpec" type="Class<T>"/>
                </params>
                <scope line="220"/>
            </method>
            <javadoc line="225">
                Returns the parameters in their primary encoding format.
                  The primary encoding format for parameters is ASN.1, if an ASN.1
                  specification for this type of parameters exists.                
                <return>
                    the parameters encoded using their primary encoding format.                    
                </return>
                <exception>
                    IOException on encoding errors, or if this parameter object
                      has not been initialized.                    
                </exception>
            </javadoc>
            <method name="getEncoded" type="byte[]" line="233">
                <scope line="234"/>
            </method>
            <javadoc line="239">
                Returns the parameters encoded in the specified scheme.
                  If &lt;code&gt;format&lt;/code&gt; is null, the
                  primary encoding format for parameters is used. The primary encoding
                  format is ASN.1, if an ASN.1 specification for these parameters
                  exists.                
                <param>
                    format the name of the encoding format.                    
                </param>
                <return>
                    the parameters encoded using the specified encoding scheme.                    
                </return>
                <exception>
                    IOException on encoding errors, or if this parameter object
                      has not been initialized.                    
                </exception>
            </javadoc>
            <method name="getEncoded" type="byte[]" line="250">
                <params>
                    <param name="format" type="String"/>
                </params>
                <scope line="251"/>
            </method>
            <javadoc line="256">
                Returns a formatted string describing the parameters.                
                <return>
                    a formatted string describing the parameters, or null if this
                      parameter object has not been initialized.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="261">
                <scope line="262"/>
            </method>
        </class>
    </source>