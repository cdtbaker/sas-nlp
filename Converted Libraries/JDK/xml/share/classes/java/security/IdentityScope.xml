<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.security">
        <import package="java.io.Serializable"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.Properties"/>
        <class name="IdentityScope" line="5">
            <extends class="Identity"/>
            <javadoc line="5">
                &lt;p&gt;This class represents a scope for identities. It is an Identity
                  itself, and therefore has a name and can have a scope. It can also
                  optionally have a public key and associated certificates.
                  &lt;p&gt;An IdentityScope can contain Identity objects of all kinds, including
                  Signers. All types of Identity objects can be retrieved, added, and
                  removed using the same methods. Note that it is possible, and in fact
                  expected, that different types of identity scopes will
                  apply different policies for their various operations on the
                  various types of Identities.
                  &lt;p&gt;There is a one-to-one mapping between keys and identities, and
                  there can only be one copy of one key per scope. For example, suppose
                  &lt;b&gt;Acme Software, Inc&lt;/b&gt; is a software publisher known to a user.
                  Suppose it is an Identity, that is, it has a public key, and a set of
                  associated certificates. It is named in the scope using the name
                  &quot;Acme Software&quot;. No other named Identity in the scope has the same
                  public  key. Of course, none has the same name as well.                
                <see>
                    Identity                    
                </see>
                <see>
                    Signer                    
                </see>
                <see>
                    Principal                    
                </see>
                <see>
                    Key                    
                </see>
                <author>
                    Benjamin Renaud                    
                </author>
                <deprecated>
                    This class is no longer used. Its functionality has been
                      replaced by &lt;code&gt;java.security.KeyStore&lt;/code&gt;, the
                      &lt;code&gt;java.security.cert&lt;/code&gt; package, and
                      &lt;code&gt;java.security.Principal&lt;/code&gt;.                    
                </deprecated>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="33"/>
            <declaration name="scope" type="IdentityScope" line="34"/>
            <method name="initializeSystemScope" type="void" line="35">
                <anonymous_class line="36">
                    <method name="run" type="String" line="37"/>
                </anonymous_class>
                <declaration name="classname" type="String" line="36"/>
                <scope line="42"/>
                <scope line="45">
                    <scope line="46"/>
                    <scope line="49"/>
                </scope>
            </method>
            <javadoc line="54">
                This constructor is used for serialization only and should not
                  be used by subclasses.                
            </javadoc>
            <method name="IdentityScope" type="constructor" line="58"/>
            <javadoc line="61">
                Constructs a new identity scope with the specified name.                
                <param>
                    name the scope name.                    
                </param>
            </javadoc>
            <method name="IdentityScope" type="constructor" line="65">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="68">
                Constructs a new identity scope with the specified name and scope.                
                <param>
                    name the scope name.                    
                </param>
                <param>
                    scope the scope for the new identity scope.                    
                </param>
                <exception>
                    KeyManagementException if there is already an identity
                      with the same name in the scope.                    
                </exception>
            </javadoc>
            <method name="IdentityScope" type="constructor" line="75">
                <params>
                    <param name="name" type="String"/>
                    <param name="scope" type="IdentityScope"/>
                </params>
            </method>
            <javadoc line="78">
                Returns the system&apos;s identity scope.                
                <return>
                    the system&apos;s identity scope, or {@code null} if none has been
                      set.                    
                </return>
                <see>
                    #setSystemScope                    
                </see>
            </javadoc>
            <method name="getSystemScope" type="IdentityScope" line="84">
                <scope line="85"/>
            </method>
            <javadoc line="90">
                Sets the system&apos;s identity scope.
                  &lt;p&gt;First, if there is a security manager, its
                  &lt;code&gt;checkSecurityAccess&lt;/code&gt;
                  method is called with &lt;code&gt;&quot;setSystemScope&quot;&lt;/code&gt;
                  as its argument to see if it&apos;s ok to set the identity scope.                
                <param>
                    scope the scope to set.                    
                </param>
                <exception>
                    SecurityException  if a security manager exists and its
                      &lt;code&gt;checkSecurityAccess&lt;/code&gt; method doesn&apos;t allow
                      setting the identity scope.                    
                </exception>
                <see>
                    #getSystemScope                    
                </see>
                <see>
                    SecurityManager#checkSecurityAccess                    
                </see>
            </javadoc>
            <method name="setSystemScope" type="void" line="103">
                <params>
                    <param name="scope" type="IdentityScope"/>
                </params>
            </method>
            <method name="size" type="int" line="107"/>
            <javadoc line="107">
                Returns the number of identities within this identity scope.                
                <return>
                    the number of identities within this identity scope.                    
                </return>
            </javadoc>
            <method name="getIdentity" type="Identity" line="112"/>
            <javadoc line="112">
                Returns the identity in this scope with the specified name (if any).                
                <param>
                    name the name of the identity to be retrieved.                    
                </param>
                <return>
                    the identity named &lt;code&gt;name&lt;/code&gt;, or null if there are
                      no identities named &lt;code&gt;name&lt;/code&gt; in this scope.                    
                </return>
            </javadoc>
            <javadoc line="119">
                Retrieves the identity whose name is the same as that of the
                  specified principal. (Note: Identity implements Principal.)                
                <param>
                    principal the principal corresponding to the identity
                      to be retrieved.                    
                </param>
                <return>
                    the identity whose name is the same as that of the
                      principal, or null if there are no identities of the same name
                      in this scope.                    
                </return>
            </javadoc>
            <method name="getIdentity" type="Identity" line="128">
                <params>
                    <param name="principal" type="Principal"/>
                </params>
            </method>
            <method name="getIdentity" type="Identity" line="131"/>
            <javadoc line="131">
                Retrieves the identity with the specified public key.                
                <param>
                    key the public key for the identity to be returned.                    
                </param>
                <return>
                    the identity with the given key, or null if there are
                      no identities in this scope with that key.                    
                </return>
            </javadoc>
            <method name="addIdentity" type="void" line="138"/>
            <javadoc line="138">
                Adds an identity to this identity scope.                
                <param>
                    identity the identity to be added.                    
                </param>
                <exception>
                    KeyManagementException if the identity is not
                      valid, a name conflict occurs, another identity has the same
                      public key as the identity being added, or another exception
                      occurs.                    
                </exception>
            </javadoc>
            <method name="removeIdentity" type="void" line="147"/>
            <javadoc line="147">
                Removes an identity from this identity scope.                
                <param>
                    identity the identity to be removed.                    
                </param>
                <exception>
                    KeyManagementException if the identity is missing,
                      or another exception occurs.                    
                </exception>
            </javadoc>
            <method name="identities" type="Enumeration&lt;Identity&gt;" line="154"/>
            <javadoc line="154">
                Returns an enumeration of all identities in this identity scope.                
                <return>
                    an enumeration of all identities in this identity scope.                    
                </return>
            </javadoc>
            <javadoc line="159">
                Returns a string representation of this identity scope, including
                  its name, its scope name, and the number of identities in this
                  identity scope.                
                <return>
                    a string representation of this identity scope.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="165"/>
            <method name="check" type="void" line="168">
                <params>
                    <param name="directive" type="String"/>
                </params>
                <declaration name="security" type="SecurityManager" line="169"/>
                <scope line="170"/>
            </method>
        </class>
    </source>