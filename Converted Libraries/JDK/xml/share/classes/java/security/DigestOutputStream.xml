<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.security">
        <import package="java.io.IOException"/>
        <import package="java.io.EOFException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.io.FilterOutputStream"/>
        <import package="java.io.PrintStream"/>
        <import package="java.io.ByteArrayOutputStream"/>
        <class name="DigestOutputStream" line="35">
            <extends class="FilterOutputStream"/>
            <javadoc line="35">
                A transparent stream that updates the associated message digest using
                  the bits going through the stream.
                  &lt;p&gt;To complete the message digest computation, call one of the
                  &lt;code&gt;digest&lt;/code&gt; methods on the associated message
                  digest after your calls to one of this digest ouput stream&apos;s{@link #write(int) write} methods.
                  &lt;p&gt;It is possible to turn this stream on or off (see{@link #on(boolean) on}). When it is on, a call to one of the
                  &lt;code&gt;write&lt;/code&gt; methods results in
                  an update on the message digest.  But when it is off, the message
                  digest is not updated. The default is for the stream to be on.                
                <see>
                    MessageDigest                    
                </see>
                <see>
                    DigestInputStream                    
                </see>
                <author>
                    Benjamin Renaud                    
                </author>
            </javadoc>
            <declaration name="on" type="boolean" line="57"/>
            <declaration name="digest" type="MessageDigest" line="59"/>
            <javadoc line="59">
                The message digest associated with this stream.                
            </javadoc>
            <javadoc line="64">
                Creates a digest output stream, using the specified output stream
                  and message digest.                
                <param>
                    stream the output stream.                    
                </param>
                <param>
                    digest the message digest to associate with this stream.                    
                </param>
            </javadoc>
            <method name="DigestOutputStream" type="constructor" line="72">
                <params>
                    <param name="stream" type="OutputStream"/>
                    <param name="digest" type="MessageDigest"/>
                </params>
            </method>
            <javadoc line="77">
                Returns the message digest associated with this stream.                
                <return>
                    the message digest associated with this stream.                    
                </return>
                <see>
                    #setMessageDigest(java.security.MessageDigest)                    
                </see>
            </javadoc>
            <method name="getMessageDigest" type="MessageDigest" line="83"/>
            <javadoc line="87">
                Associates the specified message digest with this stream.                
                <param>
                    digest the message digest to be associated with this stream.                    
                </param>
                <see>
                    #getMessageDigest()                    
                </see>
            </javadoc>
            <method name="setMessageDigest" type="void" line="93">
                <params>
                    <param name="digest" type="MessageDigest"/>
                </params>
            </method>
            <javadoc line="97">
                Updates the message digest (if the digest function is on) using
                  the specified byte, and in any case writes the byte
                  to the output stream. That is, if the digest function is on
                  (see {@link #on(boolean) on}), this method calls
                  &lt;code&gt;update&lt;/code&gt; on the message digest associated with this
                  stream, passing it the byte &lt;code&gt;b&lt;/code&gt;. This method then
                  writes the byte to the output stream, blocking until the byte
                  is actually written.                
                <param>
                    b the byte to be used for updating and writing to the
                      output stream.                    
                </param>
                <exception>
                    IOException if an I/O error occurs.                    
                </exception>
                <see>
                    MessageDigest#update(byte)                    
                </see>
            </javadoc>
            <method name="write" type="void" line="114">
                <params>
                    <param name="b" type="int"/>
                </params>
                <scope line="115"/>
            </method>
            <javadoc line="121">
                Updates the message digest (if the digest function is on) using
                  the specified subarray, and in any case writes the subarray to
                  the output stream. That is, if the digest function is on (see{@link #on(boolean) on}), this method calls &lt;code&gt;update&lt;/code&gt;
                  on the message digest associated with this stream, passing it
                  the subarray specifications. This method then writes the subarray
                  bytes to the output stream, blocking until the bytes are actually
                  written.                
                <param>
                    b the array containing the subarray to be used for updating
                      and writing to the output stream.                    
                </param>
                <param>
                    off the offset into <code>b</code> of the first byte to
                      be updated and written.                    
                </param>
                <param>
                    len the number of bytes of data to be updated and written
                      from <code>b</code>, starting at offset <code>off</code>.                    
                </param>
                <exception>
                    IOException if an I/O error occurs.                    
                </exception>
                <see>
                    MessageDigest#update(byte[],int,int)                    
                </see>
            </javadoc>
            <method name="write" type="void" line="144">
                <params>
                    <param name="b" type="byte[]"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="145"/>
            </method>
            <javadoc line="151">
                Turns the digest function on or off. The default is on.  When
                  it is on, a call to one of the &lt;code&gt;write&lt;/code&gt; methods results in an
                  update on the message digest.  But when it is off, the message
                  digest is not updated.                
                <param>
                    on true to turn the digest function on, false to turn it
                      off.                    
                </param>
            </javadoc>
            <method name="on" type="void" line="160">
                <params>
                    <param name="on" type="boolean"/>
                </params>
            </method>
            <javadoc line="164">
                Prints a string representation of this digest output stream and
                  its associated message digest object.                
            </javadoc>
            <method name="toString" type="String" line="168"/>
        </class>
    </source>