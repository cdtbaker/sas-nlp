<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.security">
        <import package="java.security.spec.KeySpec"/>
        <import package="java.security.spec.InvalidKeySpecException"/>
        <class name="KeyFactorySpi" line="31">
            <javadoc line="31">
                This class defines the &lt;i&gt;Service Provider Interface&lt;/i&gt; (&lt;b&gt;SPI&lt;/b&gt;)
                  for the &lt;code&gt;KeyFactory&lt;/code&gt; class.
                  All the abstract methods in this class must be implemented by each
                  cryptographic service provider who wishes to supply the implementation
                  of a key factory for a particular algorithm.
                  &lt;P&gt; Key factories are used to convert &lt;I&gt;keys&lt;/I&gt; (opaque
                  cryptographic keys of type &lt;code&gt;Key&lt;/code&gt;) into &lt;I&gt;key specifications&lt;/I&gt;
                  (transparent representations of the underlying key material), and vice
                  versa.
                  &lt;P&gt; Key factories are bi-directional. That is, they allow you to build an
                  opaque key object from a given key specification (key material), or to
                  retrieve the underlying key material of a key object in a suitable format.
                  &lt;P&gt; Multiple compatible key specifications may exist for the same key.
                  For example, a DSA public key may be specified using
                  &lt;code&gt;DSAPublicKeySpec&lt;/code&gt; or
                  &lt;code&gt;X509EncodedKeySpec&lt;/code&gt;. A key factory can be used to translate
                  between compatible key specifications.
                  &lt;P&gt; A provider should document all the key specifications supported by its
                  key factory.                
                <author>
                    Jan Luehe                    
                </author>
                <see>
                    KeyFactory                    
                </see>
                <see>
                    Key                    
                </see>
                <see>
                    PublicKey                    
                </see>
                <see>
                    PrivateKey                    
                </see>
                <see>
                    java.security.spec.KeySpec                    
                </see>
                <see>
                    java.security.spec.DSAPublicKeySpec                    
                </see>
                <see>
                    java.security.spec.X509EncodedKeySpec                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="engineGeneratePublic" type="PublicKey" line="72"/>
            <javadoc line="72">
                Generates a public key object from the provided key
                  specification (key material).                
                <param>
                    keySpec the specification (key material) of the public key.                    
                </param>
                <return>
                    the public key.                    
                </return>
                <exception>
                    InvalidKeySpecException if the given key specification
                      is inappropriate for this key factory to produce a public key.                    
                </exception>
            </javadoc>
            <method name="engineGeneratePrivate" type="PrivateKey" line="86"/>
            <javadoc line="86">
                Generates a private key object from the provided key
                  specification (key material).                
                <param>
                    keySpec the specification (key material) of the private key.                    
                </param>
                <return>
                    the private key.                    
                </return>
                <exception>
                    InvalidKeySpecException if the given key specification
                      is inappropriate for this key factory to produce a private key.                    
                </exception>
            </javadoc>
            <method name="engineGetKeySpec" type="T" line="100"/>
            <javadoc line="100">
                Returns a specification (key material) of the given key
                  object.
                  &lt;code&gt;keySpec&lt;/code&gt; identifies the specification class in which
                  the key material should be returned. It could, for example, be
                  &lt;code&gt;DSAPublicKeySpec.class&lt;/code&gt;, to indicate that the
                  key material should be returned in an instance of the
                  &lt;code&gt;DSAPublicKeySpec&lt;/code&gt; class.                
                <param>
                    key the key.                    
                </param>
                <param>
                    keySpec the specification class in which
                      the key material should be returned.                    
                </param>
                <return>
                    the underlying key specification (key material) in an instance
                      of the requested specification class.                    
                </return>
                <exception>
                    InvalidKeySpecException if the requested key specification is
                      inappropriate for the given key, or the given key cannot be dealt with
                      (e.g., the given key has an unrecognized format).                    
                </exception>
            </javadoc>
            <method name="engineTranslateKey" type="Key" line="125"/>
            <javadoc line="125">
                Translates a key object, whose provider may be unknown or
                  potentially untrusted, into a corresponding key object of this key
                  factory.                
                <param>
                    key the key whose provider is unknown or untrusted.                    
                </param>
                <return>
                    the translated key.                    
                </return>
                <exception>
                    InvalidKeyException if the given key cannot be processed
                      by this key factory.                    
                </exception>
            </javadoc>
        </class>
    </source>