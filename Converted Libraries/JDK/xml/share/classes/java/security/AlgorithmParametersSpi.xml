<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.security">
        <import package="java.io"/>
        <import package="java.security.spec.AlgorithmParameterSpec"/>
        <import package="java.security.spec.InvalidParameterSpecException"/>
        <class name="AlgorithmParametersSpi" line="5">
            <javadoc line="5">
                This class defines the &lt;i&gt;Service Provider Interface&lt;/i&gt; (&lt;b&gt;SPI&lt;/b&gt;)
                  for the &lt;code&gt;AlgorithmParameters&lt;/code&gt; class, which is used to manage
                  algorithm parameters.
                  &lt;p&gt; All the abstract methods in this class must be implemented by each
                  cryptographic service provider who wishes to supply parameter management
                  for a particular algorithm.                
                <author>
                    Jan Luehe                    
                </author>
                <see>
                    AlgorithmParameters                    
                </see>
                <see>
                    java.security.spec.AlgorithmParameterSpec                    
                </see>
                <see>
                    java.security.spec.DSAParameterSpec                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="engineInit" type="void" line="19"/>
            <javadoc line="19">
                Initializes this parameters object using the parameters
                  specified in &lt;code&gt;paramSpec&lt;/code&gt;.                
                <param>
                    paramSpec the parameter specification.                    
                </param>
                <exception>
                    InvalidParameterSpecException if the given parameter
                      specification is inappropriate for the initialization of this parameter
                      object.                    
                </exception>
            </javadoc>
            <method name="engineInit" type="void" line="28"/>
            <javadoc line="28">
                Imports the specified parameters and decodes them
                  according to the primary decoding format for parameters.
                  The primary decoding format for parameters is ASN.1, if an ASN.1
                  specification for this type of parameters exists.                
                <param>
                    params the encoded parameters.                    
                </param>
                <exception>
                    IOException on decoding errors                    
                </exception>
            </javadoc>
            <method name="engineInit" type="void" line="37"/>
            <javadoc line="37">
                Imports the parameters from &lt;code&gt;params&lt;/code&gt; and
                  decodes them according to the specified decoding format.
                  If &lt;code&gt;format&lt;/code&gt; is null, the
                  primary decoding format for parameters is used. The primary decoding
                  format is ASN.1, if an ASN.1 specification for these parameters
                  exists.                
                <param>
                    params the encoded parameters.                    
                </param>
                <param>
                    format the name of the decoding format.                    
                </param>
                <exception>
                    IOException on decoding errors                    
                </exception>
            </javadoc>
            <method name="engineGetParameterSpec" type="T" line="49"/>
            <javadoc line="49">
                Returns a (transparent) specification of this parameters
                  object.
                  &lt;code&gt;paramSpec&lt;/code&gt; identifies the specification class in which
                  the parameters should be returned. It could, for example, be
                  &lt;code&gt;DSAParameterSpec.class&lt;/code&gt;, to indicate that the
                  parameters should be returned in an instance of the
                  &lt;code&gt;DSAParameterSpec&lt;/code&gt; class.                
                <param>
                    paramSpec the specification class in which
                      the parameters should be returned.                    
                </param>
                <return>
                    the parameter specification.                    
                </return>
                <exception>
                    InvalidParameterSpecException if the requested parameter
                      specification is inappropriate for this parameter object.                    
                </exception>
            </javadoc>
            <method name="engineGetEncoded" type="byte[]" line="64"/>
            <javadoc line="64">
                Returns the parameters in their primary encoding format.
                  The primary encoding format for parameters is ASN.1, if an ASN.1
                  specification for this type of parameters exists.                
                <return>
                    the parameters encoded using their primary encoding format.                    
                </return>
                <exception>
                    IOException on encoding errors.                    
                </exception>
            </javadoc>
            <method name="engineGetEncoded" type="byte[]" line="72"/>
            <javadoc line="72">
                Returns the parameters encoded in the specified format.
                  If &lt;code&gt;format&lt;/code&gt; is null, the
                  primary encoding format for parameters is used. The primary encoding
                  format is ASN.1, if an ASN.1 specification for these parameters
                  exists.                
                <param>
                    format the name of the encoding format.                    
                </param>
                <return>
                    the parameters encoded using the specified encoding scheme.                    
                </return>
                <exception>
                    IOException on encoding errors.                    
                </exception>
            </javadoc>
            <method name="engineToString" type="String" line="83"/>
            <javadoc line="83">
                Returns a formatted string describing the parameters.                
                <return>
                    a formatted string describing the parameters.                    
                </return>
            </javadoc>
        </class>
    </source>