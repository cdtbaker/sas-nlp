<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.sql">
        <class name="SQLRecoverableException" line="2">
            <extends class="java.sql.SQLException"/>
            <javadoc line="2">
                The subclass of {@link SQLException} thrown in situations where a
                  previously failed operation might be able to succeed if the application performs
                  some recovery steps and retries the entire transaction or in the case of a
                  distributed transaction, the transaction branch.  At a minimum,
                  the recovery operation must include closing the current connection and getting
                  a new connection.
                  &lt;p&gt;                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <javadoc line="13">
                Constructs a &lt;code&gt;SQLRecoverableException&lt;/code&gt; object.
                  The &lt;code&gt;reason&lt;/code&gt;, &lt;code&gt;SQLState&lt;/code&gt; are initialized
                  to &lt;code&gt;null&lt;/code&gt; and the vendor code is initialized to 0.
                  The &lt;code&gt;cause&lt;/code&gt; is not initialized, and may subsequently be
                  initialized by a call to the{@link Throwable#initCause(java.lang.Throwable)} method.
                  &lt;p&gt;                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="SQLRecoverableException" type="constructor" line="22"/>
            <javadoc line="25">
                Constructs a &lt;code&gt;SQLRecoverableException&lt;/code&gt; object
                  with a given &lt;code&gt;reason&lt;/code&gt;. The &lt;code&gt;SQLState&lt;/code&gt;
                  is initialized to &lt;code&gt;null&lt;/code&gt; and the vender code is initialized
                  to 0.
                  The &lt;code&gt;cause&lt;/code&gt; is not initialized, and may subsequently be
                  initialized by a call to the{@link Throwable#initCause(java.lang.Throwable)} method.
                  &lt;p&gt;                
                <param>
                    reason a description of the exception                    
                </param>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="SQLRecoverableException" type="constructor" line="36">
                <params>
                    <param name="reason" type="String"/>
                </params>
            </method>
            <javadoc line="39">
                Constructs a &lt;code&gt;SQLRecoverableException&lt;/code&gt; object
                  with a given &lt;code&gt;reason&lt;/code&gt; and &lt;code&gt;SQLState&lt;/code&gt;.
                  The &lt;code&gt;cause&lt;/code&gt; is not initialized, and may subsequently be
                  initialized by a call to the{@link Throwable#initCause(java.lang.Throwable)} method. The vendor code
                  is initialized to 0.
                  &lt;p&gt;                
                <param>
                    reason a description of the exception                    
                </param>
                <param>
                    SQLState an XOPEN or SQL:2003 code identifying the exception                    
                </param>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="SQLRecoverableException" type="constructor" line="50">
                <params>
                    <param name="reason" type="String"/>
                    <param name="SQLState" type="String"/>
                </params>
            </method>
            <javadoc line="53">
                Constructs a &lt;code&gt;SQLRecoverableException&lt;/code&gt; object
                  with a given &lt;code&gt;reason&lt;/code&gt;, &lt;code&gt;SQLState&lt;/code&gt;  and
                  &lt;code&gt;vendorCode&lt;/code&gt;.
                  The &lt;code&gt;cause&lt;/code&gt; is not initialized, and may subsequently be
                  initialized by a call to the{@link Throwable#initCause(java.lang.Throwable)} method.
                  &lt;p&gt;                
                <param>
                    reason a description of the exception                    
                </param>
                <param>
                    SQLState an XOPEN or SQL:2003 code identifying the exception                    
                </param>
                <param>
                    vendorCode a database vendor specific exception code                    
                </param>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="SQLRecoverableException" type="constructor" line="65">
                <params>
                    <param name="reason" type="String"/>
                    <param name="SQLState" type="String"/>
                    <param name="vendorCode" type="int"/>
                </params>
            </method>
            <javadoc line="68">
                Constructs a &lt;code&gt;SQLRecoverableException&lt;/code&gt; object
                  with a given  &lt;code&gt;cause&lt;/code&gt;.
                  The &lt;code&gt;SQLState&lt;/code&gt; is initialized
                  to &lt;code&gt;null&lt;/code&gt; and the vendor code is initialized to 0.
                  The &lt;code&gt;reason&lt;/code&gt;  is initialized to &lt;code&gt;null&lt;/code&gt; if
                  &lt;code&gt;cause==null&lt;/code&gt; or to &lt;code&gt;cause.toString()&lt;/code&gt; if
                  &lt;code&gt;cause!=null&lt;/code&gt;.
                  &lt;p&gt;                
                <param>
                    cause the underlying reason for this <code>SQLException</code> (which is saved for later retrieval by the <code>getCause()</code> method); may be null indicating
                      the cause is non-existent or unknown.                    
                </param>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="SQLRecoverableException" type="constructor" line="81">
                <params>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
            <javadoc line="84">
                Constructs a &lt;code&gt;SQLRecoverableException&lt;/code&gt; object
                  with a given
                  &lt;code&gt;reason&lt;/code&gt; and  &lt;code&gt;cause&lt;/code&gt;.
                  The &lt;code&gt;SQLState&lt;/code&gt; is  initialized to &lt;code&gt;null&lt;/code&gt;
                  and the vendor code is initialized to 0.
                  &lt;p&gt;                
                <param>
                    reason a description of the exception.                    
                </param>
                <param>
                    cause the underlying reason for this <code>SQLException</code> (which is saved for later retrieval by the <code>getCause()</code> method); may be null indicating
                      the cause is non-existent or unknown.                    
                </param>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="SQLRecoverableException" type="constructor" line="96">
                <params>
                    <param name="reason" type="String"/>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
            <javadoc line="99">
                Constructs a &lt;code&gt;SQLRecoverableException&lt;/code&gt; object
                  with a given
                  &lt;code&gt;reason&lt;/code&gt;, &lt;code&gt;SQLState&lt;/code&gt; and  &lt;code&gt;cause&lt;/code&gt;.
                  The vendor code is initialized to 0.
                  &lt;p&gt;                
                <param>
                    reason a description of the exception.                    
                </param>
                <param>
                    SQLState an XOPEN or SQL:2003 code identifying the exception                    
                </param>
                <param>
                    cause the underlying reason for this <code>SQLException</code> (which is saved for later retrieval by the <code>getCause()</code> method); may be null indicating
                      the cause is non-existent or unknown.                    
                </param>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="SQLRecoverableException" type="constructor" line="111">
                <params>
                    <param name="reason" type="String"/>
                    <param name="SQLState" type="String"/>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
            <javadoc line="114">
                Constructs a &lt;code&gt;SQLRecoverableException&lt;/code&gt; object
                  with a given
                  &lt;code&gt;reason&lt;/code&gt;, &lt;code&gt;SQLState&lt;/code&gt;, &lt;code&gt;vendorCode&lt;/code&gt;
                  and  &lt;code&gt;cause&lt;/code&gt;.
                  &lt;p&gt;                
                <param>
                    reason a description of the exception                    
                </param>
                <param>
                    SQLState an XOPEN or SQL:2003 code identifying the exception                    
                </param>
                <param>
                    vendorCode a database vendor-specific exception code                    
                </param>
                <param>
                    cause the underlying reason for this <code>SQLException</code> (which is saved for later retrieval by the <code>getCause()</code> method); may be null indicating
                      the cause is non-existent or unknown.                    
                </param>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="SQLRecoverableException" type="constructor" line="127">
                <params>
                    <param name="reason" type="String"/>
                    <param name="SQLState" type="String"/>
                    <param name="vendorCode" type="int"/>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
            <declaration name="serialVersionUID" type="long" line="130"/>
        </class>
    </source>