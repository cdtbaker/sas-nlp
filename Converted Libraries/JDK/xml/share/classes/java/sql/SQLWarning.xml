<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.sql">
        <class name="SQLWarning" line="28">
            <extends class="SQLException"/>
            <javadoc line="28">
                &lt;P&gt;An exception that provides information on  database access
                  warnings. Warnings are silently chained to the object whose method
                  caused it to be reported.
                  &lt;P&gt;
                  Warnings may be retrieved from &lt;code&gt;Connection&lt;/code&gt;, &lt;code&gt;Statement&lt;/code&gt;,
                  and &lt;code&gt;ResultSet&lt;/code&gt; objects.  Trying to retrieve a warning on a
                  connection after it has been closed will cause an exception to be thrown.
                  Similarly, trying to retrieve a warning on a statement after it has been
                  closed or on a result set after it has been closed will cause
                  an exception to be thrown. Note that closing a statement also
                  closes a result set that it might have produced.                
                <see>
                    Connection#getWarnings                    
                </see>
                <see>
                    Statement#getWarnings                    
                </see>
                <see>
                    ResultSet#getWarnings                    
                </see>
            </javadoc>
            <javadoc line="47">
                Constructs a  &lt;code&gt;SQLWarning&lt;/code&gt; object
                  with a given &lt;code&gt;reason&lt;/code&gt;, &lt;code&gt;SQLState&lt;/code&gt;  and
                  &lt;code&gt;vendorCode&lt;/code&gt;.
                  The &lt;code&gt;cause&lt;/code&gt; is not initialized, and may subsequently be
                  initialized by a call to the{@link Throwable#initCause(java.lang.Throwable)} method.
                  &lt;p&gt;                
                <param>
                    reason a description of the warning                    
                </param>
                <param>
                    SQLState an XOPEN or SQL:2003 code identifying the warning                    
                </param>
                <param>
                    vendorCode a database vendor-specific warning code                    
                </param>
            </javadoc>
            <method name="SQLWarning" type="constructor" line="60">
                <params>
                    <param name="reason" type="String"/>
                    <param name="SQLState" type="String"/>
                    <param name="vendorCode" type="int"/>
                </params>
            </method>
            <javadoc line="68">
                Constructs a &lt;code&gt;SQLWarning&lt;/code&gt; object
                  with a given &lt;code&gt;reason&lt;/code&gt; and &lt;code&gt;SQLState&lt;/code&gt;.
                  The &lt;code&gt;cause&lt;/code&gt; is not initialized, and may subsequently be
                  initialized by a call to the{@link Throwable#initCause(java.lang.Throwable)} method. The vendor code
                  is initialized to 0.
                  &lt;p&gt;                
                <param>
                    reason a description of the warning                    
                </param>
                <param>
                    SQLState an XOPEN or SQL:2003 code identifying the warning                    
                </param>
            </javadoc>
            <method name="SQLWarning" type="constructor" line="80">
                <params>
                    <param name="reason" type="String"/>
                    <param name="SQLState" type="String"/>
                </params>
            </method>
            <javadoc line="86">
                Constructs a &lt;code&gt;SQLWarning&lt;/code&gt; object
                  with a given &lt;code&gt;reason&lt;/code&gt;. The &lt;code&gt;SQLState&lt;/code&gt;
                  is initialized to &lt;code&gt;null&lt;/code&gt; and the vender code is initialized
                  to 0.
                  The &lt;code&gt;cause&lt;/code&gt; is not initialized, and may subsequently be
                  initialized by a call to the{@link Throwable#initCause(java.lang.Throwable)} method.
                  &lt;p&gt;                
                <param>
                    reason a description of the warning                    
                </param>
            </javadoc>
            <method name="SQLWarning" type="constructor" line="98">
                <params>
                    <param name="reason" type="String"/>
                </params>
            </method>
            <javadoc line="103">
                Constructs a  &lt;code&gt;SQLWarning&lt;/code&gt; object.
                  The &lt;code&gt;reason&lt;/code&gt;, &lt;code&gt;SQLState&lt;/code&gt; are initialized
                  to &lt;code&gt;null&lt;/code&gt; and the vendor code is initialized to 0.
                  The &lt;code&gt;cause&lt;/code&gt; is not initialized, and may subsequently be
                  initialized by a call to the{@link Throwable#initCause(java.lang.Throwable)} method.
                  &lt;p&gt;                
            </javadoc>
            <method name="SQLWarning" type="constructor" line="113"/>
            <javadoc line="118">
                Constructs a &lt;code&gt;SQLWarning&lt;/code&gt; object
                  with a given  &lt;code&gt;cause&lt;/code&gt;.
                  The &lt;code&gt;SQLState&lt;/code&gt; is initialized
                  to &lt;code&gt;null&lt;/code&gt; and the vendor code is initialized to 0.
                  The &lt;code&gt;reason&lt;/code&gt;  is initialized to &lt;code&gt;null&lt;/code&gt; if
                  &lt;code&gt;cause==null&lt;/code&gt; or to &lt;code&gt;cause.toString()&lt;/code&gt; if
                  &lt;code&gt;cause!=null&lt;/code&gt;.
                  &lt;p&gt;                
                <param>
                    cause the underlying reason for this &lt;code&gt;SQLWarning&lt;/code&gt; (which is saved for later retrieval by the &lt;code&gt;getCause()&lt;/code&gt; method); may be null indicating
                      the cause is non-existent or unknown.                    
                </param>
            </javadoc>
            <method name="SQLWarning" type="constructor" line="130">
                <params>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
            <javadoc line="135">
                Constructs a &lt;code&gt;SQLWarning&lt;/code&gt; object
                  with a given
                  &lt;code&gt;reason&lt;/code&gt; and  &lt;code&gt;cause&lt;/code&gt;.
                  The &lt;code&gt;SQLState&lt;/code&gt; is  initialized to &lt;code&gt;null&lt;/code&gt;
                  and the vendor code is initialized to 0.
                  &lt;p&gt;                
                <param>
                    reason a description of the warning                    
                </param>
                <param>
                    cause  the underlying reason for this &lt;code&gt;SQLWarning&lt;/code&gt;
                      (which is saved for later retrieval by the &lt;code&gt;getCause()&lt;/code&gt; method);
                      may be null indicating the cause is non-existent or unknown.                    
                </param>
            </javadoc>
            <method name="SQLWarning" type="constructor" line="147">
                <params>
                    <param name="reason" type="String"/>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
            <javadoc line="152">
                Constructs a &lt;code&gt;SQLWarning&lt;/code&gt; object
                  with a given
                  &lt;code&gt;reason&lt;/code&gt;, &lt;code&gt;SQLState&lt;/code&gt; and  &lt;code&gt;cause&lt;/code&gt;.
                  The vendor code is initialized to 0.
                  &lt;p&gt;                
                <param>
                    reason a description of the warning                    
                </param>
                <param>
                    SQLState an XOPEN or SQL:2003 code identifying the warning                    
                </param>
                <param>
                    cause the underlying reason for this &lt;code&gt;SQLWarning&lt;/code&gt; (which is saved for later retrieval by the &lt;code&gt;getCause()&lt;/code&gt; method); may be null indicating
                      the cause is non-existent or unknown.                    
                </param>
            </javadoc>
            <method name="SQLWarning" type="constructor" line="163">
                <params>
                    <param name="reason" type="String"/>
                    <param name="SQLState" type="String"/>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
            <javadoc line="169">
                Constructs a&lt;code&gt;SQLWarning&lt;/code&gt; object
                  with a given
                  &lt;code&gt;reason&lt;/code&gt;, &lt;code&gt;SQLState&lt;/code&gt;, &lt;code&gt;vendorCode&lt;/code&gt;
                  and  &lt;code&gt;cause&lt;/code&gt;.
                  &lt;p&gt;                
                <param>
                    reason a description of the warning                    
                </param>
                <param>
                    SQLState an XOPEN or SQL:2003 code identifying the warning                    
                </param>
                <param>
                    vendorCode a database vendor-specific warning code                    
                </param>
                <param>
                    cause the underlying reason for this &lt;code&gt;SQLWarning&lt;/code&gt; (which is saved for later retrieval by the &lt;code&gt;getCause()&lt;/code&gt; method); may be null indicating
                      the cause is non-existent or unknown.                    
                </param>
            </javadoc>
            <method name="SQLWarning" type="constructor" line="181">
                <params>
                    <param name="reason" type="String"/>
                    <param name="SQLState" type="String"/>
                    <param name="vendorCode" type="int"/>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
            <javadoc line="188">
                Retrieves the warning chained to this &lt;code&gt;SQLWarning&lt;/code&gt; object by
                  &lt;code&gt;setNextWarning&lt;/code&gt;.                
                <return>
                    the next &lt;code&gt;SQLException&lt;/code&gt; in the chain; &lt;code&gt;null&lt;/code&gt; if none                    
                </return>
                <see>
                    #setNextWarning                    
                </see>
            </javadoc>
            <method name="getNextWarning" type="SQLWarning" line="195">
                <comment line="200">
                    The chained value isn&apos;t a SQLWarning.
                     This is a programming error by whoever added it to
                     the SQLWarning chain.  We throw a Java &quot;Error&quot;.                    
                </comment>
                <scope line="196"/>
                <scope line="198"/>
            </method>
            <javadoc line="206">
                Adds a &lt;code&gt;SQLWarning&lt;/code&gt; object to the end of the chain.                
                <param>
                    w the new end of the &lt;code&gt;SQLException&lt;/code&gt; chain                    
                </param>
                <see>
                    #getNextWarning                    
                </see>
            </javadoc>
            <method name="setNextWarning" type="void" line="212">
                <params>
                    <param name="w" type="SQLWarning"/>
                </params>
            </method>
            <declaration name="serialVersionUID" type="long" line="216"/>
        </class>
    </source>