<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.sql">
        <class name="Time" line="28">
            <extends class="java.util.Date"/>
            <comment line="145">
                Override all the date operations inherited from java.util.Date;                
            </comment>
            <javadoc line="28">
                &lt;P&gt;A thin wrapper around the &lt;code&gt;java.util.Date&lt;/code&gt; class that allows the JDBC
                  API to identify this as an SQL &lt;code&gt;TIME&lt;/code&gt; value. The &lt;code&gt;Time&lt;/code&gt;
                  class adds formatting and
                  parsing operations to support the JDBC escape syntax for time
                  values.
                  &lt;p&gt;The date components should be set to the &quot;zero epoch&quot;
                  value of January 1, 1970 and should not be accessed.                
            </javadoc>
            <javadoc line="39">
                Constructs a &lt;code&gt;Time&lt;/code&gt; object initialized with the
                  given values for the hour, minute, and second.
                  The driver sets the date components to January 1, 1970.
                  Any method that attempts to access the date components of a
                  &lt;code&gt;Time&lt;/code&gt; object will throw a
                  &lt;code&gt;java.lang.IllegalArgumentException&lt;/code&gt;.
                  &lt;P&gt;
                  The result is undefined if a given argument is out of bounds.                
                <param>
                    hour 0 to 23                    
                </param>
                <param>
                    minute 0 to 59                    
                </param>
                <param>
                    second 0 to 59                    
                </param>
                <deprecated>
                    Use the constructor that takes a milliseconds value
                      in place of this constructor                    
                </deprecated>
            </javadoc>
            <method name="Time" type="constructor" line="57">
                <params>
                    <param name="hour" type="int"/>
                    <param name="minute" type="int"/>
                    <param name="second" type="int"/>
                </params>
            </method>
            <javadoc line="61">
                Constructs a &lt;code&gt;Time&lt;/code&gt; object using a milliseconds time value.                
                <param>
                    time milliseconds since January 1, 1970, 00:00:00 GMT;
                      a negative number is milliseconds before
                      January 1, 1970, 00:00:00 GMT                    
                </param>
            </javadoc>
            <method name="Time" type="constructor" line="68">
                <params>
                    <param name="time" type="long"/>
                </params>
            </method>
            <javadoc line="72">
                Sets a &lt;code&gt;Time&lt;/code&gt; object using a milliseconds time value.                
                <param>
                    time milliseconds since January 1, 1970, 00:00:00 GMT;
                      a negative number is milliseconds before
                      January 1, 1970, 00:00:00 GMT                    
                </param>
            </javadoc>
            <method name="setTime" type="void" line="79">
                <params>
                    <param name="time" type="long"/>
                </params>
            </method>
            <javadoc line="83">
                Converts a string in JDBC time escape format to a &lt;code&gt;Time&lt;/code&gt; value.                
                <param>
                    s time in format &quot;hh:mm:ss&quot;                    
                </param>
                <return>
                    a corresponding &lt;code&gt;Time&lt;/code&gt; object                    
                </return>
            </javadoc>
            <method name="valueOf" type="Time" line="89">
                <params>
                    <param name="s" type="String"/>
                </params>
                <declaration name="hour" type="int" line="90"/>
                <declaration name="minute" type="int" line="91"/>
                <declaration name="second" type="int" line="92"/>
                <declaration name="firstColon" type="int" line="93"/>
                <declaration name="secondColon" type="int" line="94"/>
                <scope line="101"/>
                <scope line="106"/>
            </method>
            <javadoc line="113">
                Formats a time in JDBC time escape format.                
                <return>
                    a &lt;code&gt;String&lt;/code&gt; in hh:mm:ss format                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="118">
                <declaration name="hour" type="int" line="119"/>
                <declaration name="minute" type="int" line="120"/>
                <declaration name="second" type="int" line="121"/>
                <declaration name="hourString" type="String" line="122"/>
                <declaration name="minuteString" type="String" line="123"/>
                <declaration name="secondString" type="String" line="124"/>
                <scope line="126"/>
                <scope line="128"/>
                <scope line="131"/>
                <scope line="133"/>
                <scope line="136"/>
                <scope line="138"/>
            </method>
            <javadoc line="146">
                This method is deprecated and should not be used because SQL &lt;code&gt;TIME&lt;/code&gt;
                  values do not have a year component.                
                <deprecated>
                                        
                </deprecated>
                <exception>
                    java.lang.IllegalArgumentException if this
                      method is invoked                    
                </exception>
                <see>
                    #setYear                    
                </see>
            </javadoc>
            <method name="getYear" type="int" line="156"/>
            <javadoc line="160">
                This method is deprecated and should not be used because SQL &lt;code&gt;TIME&lt;/code&gt;
                  values do not have a month component.                
                <deprecated>
                                        
                </deprecated>
                <exception>
                    java.lang.IllegalArgumentException if this
                      method is invoked                    
                </exception>
                <see>
                    #setMonth                    
                </see>
            </javadoc>
            <method name="getMonth" type="int" line="170"/>
            <javadoc line="174">
                This method is deprecated and should not be used because SQL &lt;code&gt;TIME&lt;/code&gt;
                  values do not have a day component.                
                <deprecated>
                                        
                </deprecated>
                <exception>
                    java.lang.IllegalArgumentException if this
                      method is invoked                    
                </exception>
            </javadoc>
            <method name="getDay" type="int" line="183"/>
            <javadoc line="187">
                This method is deprecated and should not be used because SQL &lt;code&gt;TIME&lt;/code&gt;
                  values do not have a date component.                
                <deprecated>
                                        
                </deprecated>
                <exception>
                    java.lang.IllegalArgumentException if this
                      method is invoked                    
                </exception>
                <see>
                    #setDate                    
                </see>
            </javadoc>
            <method name="getDate" type="int" line="197"/>
            <javadoc line="201">
                This method is deprecated and should not be used because SQL &lt;code&gt;TIME&lt;/code&gt;
                  values do not have a year component.                
                <deprecated>
                                        
                </deprecated>
                <exception>
                    java.lang.IllegalArgumentException if this
                      method is invoked                    
                </exception>
                <see>
                    #getYear                    
                </see>
            </javadoc>
            <method name="setYear" type="void" line="211">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <javadoc line="215">
                This method is deprecated and should not be used because SQL &lt;code&gt;TIME&lt;/code&gt;
                  values do not have a month component.                
                <deprecated>
                                        
                </deprecated>
                <exception>
                    java.lang.IllegalArgumentException if this
                      method is invoked                    
                </exception>
                <see>
                    #getMonth                    
                </see>
            </javadoc>
            <method name="setMonth" type="void" line="225">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <javadoc line="229">
                This method is deprecated and should not be used because SQL &lt;code&gt;TIME&lt;/code&gt;
                  values do not have a date component.                
                <deprecated>
                                        
                </deprecated>
                <exception>
                    java.lang.IllegalArgumentException if this
                      method is invoked                    
                </exception>
                <see>
                    #getDate                    
                </see>
            </javadoc>
            <method name="setDate" type="void" line="239">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <declaration name="serialVersionUID" type="long" line="243"/>
            <javadoc line="243">
                Private serial version unique ID to ensure serialization
                  compatibility.                
            </javadoc>
        </class>
    </source>