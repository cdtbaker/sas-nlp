<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.sql">
        <class name="Date" line="28">
            <extends class="java.util.Date"/>
            <comment line="172">
                Override all the time operations inherited from java.util.Date;                
            </comment>
            <javadoc line="28">
                &lt;P&gt;A thin wrapper around a millisecond value that allows
                  JDBC to identify this as an SQL &lt;code&gt;DATE&lt;/code&gt; value.  A
                  milliseconds value represents the number of milliseconds that
                  have passed since January 1, 1970 00:00:00.000 GMT.
                  &lt;p&gt;
                  To conform with the definition of SQL &lt;code&gt;DATE&lt;/code&gt;, the
                  millisecond values wrapped by a &lt;code&gt;java.sql.Date&lt;/code&gt; instance
                  must be &apos;normalized&apos; by setting the
                  hours, minutes, seconds, and milliseconds to zero in the particular
                  time zone with which the instance is associated.                
            </javadoc>
            <javadoc line="42">
                Constructs a &lt;code&gt;Date&lt;/code&gt; object initialized with the given
                  year, month, and day.
                  &lt;P&gt;
                  The result is undefined if a given argument is out of bounds.                
                <param>
                    year the year minus 1900; must be 0 to 8099. (Note that
                      8099 is 9999 minus 1900.)                    
                </param>
                <param>
                    month 0 to 11                    
                </param>
                <param>
                    day 1 to 31                    
                </param>
                <deprecated>
                    instead use the constructor <code>Date(long date)</code>                    
                </deprecated>
            </javadoc>
            <method name="Date" type="constructor" line="54">
                <params>
                    <param name="year" type="int"/>
                    <param name="month" type="int"/>
                    <param name="day" type="int"/>
                </params>
            </method>
            <javadoc line="58">
                Constructs a &lt;code&gt;Date&lt;/code&gt; object using the given milliseconds
                  time value.  If the given milliseconds value contains time
                  information, the driver will set the time components to the
                  time in the default time zone (the time zone of the Java virtual
                  machine running the application) that corresponds to zero GMT.                
                <param>
                    date milliseconds since January 1, 1970, 00:00:00 GMT not
                      to exceed the milliseconds representation for the year 8099.
                      A negative number indicates the number of milliseconds
                      before January 1, 1970, 00:00:00 GMT.                    
                </param>
            </javadoc>
            <method name="Date" type="constructor" line="70">
                <params>
                    <param name="date" type="long"/>
                </params>
                <comment line="72">
                    If the millisecond date value contains time info, mask it out.                    
                </comment>
            </method>
            <javadoc line="76">
                Sets an existing &lt;code&gt;Date&lt;/code&gt; object
                  using the given milliseconds time value.
                  If the given milliseconds value contains time information,
                  the driver will set the time components to the
                  time in the default time zone (the time zone of the Java virtual
                  machine running the application) that corresponds to zero GMT.                
                <param>
                    date milliseconds since January 1, 1970, 00:00:00 GMT not
                      to exceed the milliseconds representation for the year 8099.
                      A negative number indicates the number of milliseconds
                      before January 1, 1970, 00:00:00 GMT.                    
                </param>
            </javadoc>
            <method name="setTime" type="void" line="89">
                <params>
                    <param name="date" type="long"/>
                </params>
                <comment line="91">
                    If the millisecond date value contains time info, mask it out.                    
                </comment>
            </method>
            <javadoc line="94">
                Converts a string in JDBC date escape format to
                  a &lt;code&gt;Date&lt;/code&gt; value.                
                <param>
                    s a <code>String</code> object representing a date in
                      in the format "yyyy-[m]m-[d]d". The leading zero for <code>mm</code>
                      and <code>dd</code> may also be omitted.                    
                </param>
                <return>
                    a <code>java.sql.Date</code> object representing the
                      given date                    
                </return>
                <throws>
                    IllegalArgumentException if the date given is not in the
                      JDBC date escape format (yyyy-[m]m-[d]d)                    
                </throws>
            </javadoc>
            <method name="valueOf" type="Date" line="106">
                <params>
                    <param name="s" type="String"/>
                </params>
                <declaration name="YEAR_LENGTH" type="int" line="107"/>
                <declaration name="MONTH_LENGTH" type="int" line="108"/>
                <declaration name="DAY_LENGTH" type="int" line="109"/>
                <declaration name="MAX_MONTH" type="int" line="110"/>
                <declaration name="MAX_DAY" type="int" line="111"/>
                <declaration name="firstDash" type="int" line="112"/>
                <declaration name="secondDash" type="int" line="113"/>
                <declaration name="d" type="Date" line="114"/>
                <scope line="116"/>
                <scope line="123">
                    <declaration name="yyyy" type="String" line="124"/>
                    <declaration name="mm" type="String" line="125"/>
                    <declaration name="dd" type="String" line="126"/>
                    <scope line="129">
                        <declaration name="year" type="int" line="130"/>
                        <declaration name="month" type="int" line="131"/>
                        <declaration name="day" type="int" line="132"/>
                        <scope line="134"/>
                    </scope>
                </scope>
                <scope line="139"/>
            </method>
            <javadoc line="148">
                Formats a date in the date escape format yyyy-mm-dd.
                  &lt;P&gt;                
                <return>
                    a String in yyyy-mm-dd format                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="153">
                <declaration name="year" type="int" line="154"/>
                <declaration name="month" type="int" line="155"/>
                <declaration name="day" type="int" line="156"/>
                <declaration name="buf" type="char" line="158"/>
            </method>
            <javadoc line="173">
                This method is deprecated and should not be used because SQL Date
                  values do not have a time component.                
                <deprecated>
                                        
                </deprecated>
                <exception>
                    java.lang.IllegalArgumentException if this method is invoked                    
                </exception>
                <see>
                    #setHours                    
                </see>
            </javadoc>
            <method name="getHours" type="int" line="181"/>
            <javadoc line="185">
                This method is deprecated and should not be used because SQL Date
                  values do not have a time component.                
                <deprecated>
                                        
                </deprecated>
                <exception>
                    java.lang.IllegalArgumentException if this method is invoked                    
                </exception>
                <see>
                    #setMinutes                    
                </see>
            </javadoc>
            <method name="getMinutes" type="int" line="193"/>
            <javadoc line="197">
                This method is deprecated and should not be used because SQL Date
                  values do not have a time component.                
                <deprecated>
                                        
                </deprecated>
                <exception>
                    java.lang.IllegalArgumentException if this method is invoked                    
                </exception>
                <see>
                    #setSeconds                    
                </see>
            </javadoc>
            <method name="getSeconds" type="int" line="205"/>
            <javadoc line="209">
                This method is deprecated and should not be used because SQL Date
                  values do not have a time component.                
                <deprecated>
                                        
                </deprecated>
                <exception>
                    java.lang.IllegalArgumentException if this method is invoked                    
                </exception>
                <see>
                    #getHours                    
                </see>
            </javadoc>
            <method name="setHours" type="void" line="217">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <javadoc line="221">
                This method is deprecated and should not be used because SQL Date
                  values do not have a time component.                
                <deprecated>
                                        
                </deprecated>
                <exception>
                    java.lang.IllegalArgumentException if this method is invoked                    
                </exception>
                <see>
                    #getMinutes                    
                </see>
            </javadoc>
            <method name="setMinutes" type="void" line="229">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <javadoc line="233">
                This method is deprecated and should not be used because SQL Date
                  values do not have a time component.                
                <deprecated>
                                        
                </deprecated>
                <exception>
                    java.lang.IllegalArgumentException if this method is invoked                    
                </exception>
                <see>
                    #getSeconds                    
                </see>
            </javadoc>
            <method name="setSeconds" type="void" line="241">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <declaration name="serialVersionUID" type="long" line="245"/>
            <javadoc line="245">
                Private serial version unique ID to ensure serialization
                  compatibility.                
            </javadoc>
        </class>
    </source>