<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.sql">
        <import package="java.io.Reader"/>
        <interface name="Clob">
            <javadoc line="3">
                The mapping in the Java&lt;sup&gt;&lt;font size=-2&gt;TM&lt;/font&gt;&lt;/sup&gt; programming language
                  for the SQL &lt;code&gt;CLOB&lt;/code&gt; type.
                  An SQL &lt;code&gt;CLOB&lt;/code&gt; is a built-in type
                  that stores a Character Large Object as a column value in a row of
                  a database table.
                  By default drivers implement a &lt;code&gt;Clob&lt;/code&gt; object using an SQL
                  &lt;code&gt;locator(CLOB)&lt;/code&gt;, which means that a &lt;code&gt;Clob&lt;/code&gt; object
                  contains a logical pointer to the SQL &lt;code&gt;CLOB&lt;/code&gt; data rather than
                  the data itself. A &lt;code&gt;Clob&lt;/code&gt; object is valid for the duration
                  of the transaction in which it was created.
                  &lt;P&gt;The &lt;code&gt;Clob&lt;/code&gt; interface provides methods for getting the
                  length of an SQL &lt;code&gt;CLOB&lt;/code&gt; (Character Large Object) value,
                  for materializing a &lt;code&gt;CLOB&lt;/code&gt; value on the client, and for
                  searching for a substring or &lt;code&gt;CLOB&lt;/code&gt; object within a
                  &lt;code&gt;CLOB&lt;/code&gt; value.
                  Methods in the interfaces {@link ResultSet},{@link CallableStatement}, and {@link PreparedStatement}, such as
                  &lt;code&gt;getClob&lt;/code&gt; and &lt;code&gt;setClob&lt;/code&gt; allow a programmer to
                  access an SQL &lt;code&gt;CLOB&lt;/code&gt; value.  In addition, this interface
                  has methods for updating a &lt;code&gt;CLOB&lt;/code&gt; value.
                  &lt;p&gt;
                  All methods on the &lt;code&gt;Clob&lt;/code&gt; interface must be fully implemented if the
                  JDBC driver supports the data type.                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="length" type="long" line="29"/>
            <javadoc line="29">
                Retrieves the number of characters
                  in the &lt;code&gt;CLOB&lt;/code&gt; value
                  designated by this &lt;code&gt;Clob&lt;/code&gt; object.                
                <return>
                    length of the <code>CLOB</code> in characters                    
                </return>
                <exception>
                    SQLException if there is an error accessing the
                      length of the <code>CLOB</code> value                    
                </exception>
                <exception>
                    SQLFeatureNotSupportedException if the JDBC driver does not support
                      this method                    
                </exception>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="getSubString" type="String" line="41"/>
            <javadoc line="41">
                Retrieves a copy of the specified substring
                  in the &lt;code&gt;CLOB&lt;/code&gt; value
                  designated by this &lt;code&gt;Clob&lt;/code&gt; object.
                  The substring begins at position
                  &lt;code&gt;pos&lt;/code&gt; and has up to &lt;code&gt;length&lt;/code&gt; consecutive
                  characters.                
                <param>
                    pos the first character of the substring to be extracted.
                      The first character is at position 1.                    
                </param>
                <param>
                    length the number of consecutive characters to be copied;
                      the value for length must be 0 or greater                    
                </param>
                <return>
                    a <code>String</code> that is the specified substring in
                      the <code>CLOB</code> value designated by this <code>Clob</code> object                    
                </return>
                <exception>
                    SQLException if there is an error accessing the
                      <code>CLOB</code> value; if pos is less than 1 or length is
                      less than 0                    
                </exception>
                <exception>
                    SQLFeatureNotSupportedException if the JDBC driver does not support
                      this method                    
                </exception>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="getCharacterStream" type="java.io.Reader" line="62"/>
            <javadoc line="62">
                Retrieves the &lt;code&gt;CLOB&lt;/code&gt; value designated by this &lt;code&gt;Clob&lt;/code&gt;
                  object as a &lt;code&gt;java.io.Reader&lt;/code&gt; object (or as a stream of
                  characters).                
                <return>
                    a <code>java.io.Reader</code> object containing the
                      <code>CLOB</code> data                    
                </return>
                <exception>
                    SQLException if there is an error accessing the
                      <code>CLOB</code> value                    
                </exception>
                <exception>
                    SQLFeatureNotSupportedException if the JDBC driver does not support
                      this method                    
                </exception>
                <see>
                    #setCharacterStream                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="getAsciiStream" type="java.io.InputStream" line="76"/>
            <javadoc line="76">
                Retrieves the &lt;code&gt;CLOB&lt;/code&gt; value designated by this &lt;code&gt;Clob&lt;/code&gt;
                  object as an ascii stream.                
                <return>
                    a <code>java.io.InputStream</code> object containing the
                      <code>CLOB</code> data                    
                </return>
                <exception>
                    SQLException if there is an error accessing the
                      <code>CLOB</code> value                    
                </exception>
                <exception>
                    SQLFeatureNotSupportedException if the JDBC driver does not support
                      this method                    
                </exception>
                <see>
                    #setAsciiStream                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="position" type="long" line="89"/>
            <javadoc line="89">
                Retrieves the character position at which the specified substring
                  &lt;code&gt;searchstr&lt;/code&gt; appears in the SQL &lt;code&gt;CLOB&lt;/code&gt; value
                  represented by this &lt;code&gt;Clob&lt;/code&gt; object.  The search
                  begins at position &lt;code&gt;start&lt;/code&gt;.                
                <param>
                    searchstr the substring for which to search                    
                </param>
                <param>
                    start the position at which to begin searching; the first position
                      is 1                    
                </param>
                <return>
                    the position at which the substring appears or -1 if it is not
                      present; the first position is 1                    
                </return>
                <exception>
                    SQLException if there is an error accessing the
                      <code>CLOB</code> value or if pos is less than 1                    
                </exception>
                <exception>
                    SQLFeatureNotSupportedException if the JDBC driver does not support
                      this method                    
                </exception>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="position" type="long" line="106"/>
            <javadoc line="106">
                Retrieves the character position at which the specified
                  &lt;code&gt;Clob&lt;/code&gt; object &lt;code&gt;searchstr&lt;/code&gt; appears in this
                  &lt;code&gt;Clob&lt;/code&gt; object.  The search begins at position
                  &lt;code&gt;start&lt;/code&gt;.                
                <param>
                    searchstr the <code>Clob</code> object for which to search                    
                </param>
                <param>
                    start the position at which to begin searching; the first
                      position is 1                    
                </param>
                <return>
                    the position at which the <code>Clob</code> object appears
                      or -1 if it is not present; the first position is 1                    
                </return>
                <exception>
                    SQLException if there is an error accessing the
                      <code>CLOB</code> value or if start is less than 1                    
                </exception>
                <exception>
                    SQLFeatureNotSupportedException if the JDBC driver does not support
                      this method                    
                </exception>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="setString" type="int" line="123"/>
            <javadoc line="123">
                Writes the given Java &lt;code&gt;String&lt;/code&gt; to the &lt;code&gt;CLOB&lt;/code&gt;
                  value that this &lt;code&gt;Clob&lt;/code&gt; object designates at the position
                  &lt;code&gt;pos&lt;/code&gt;. The string will overwrite the existing characters
                  in the &lt;code&gt;Clob&lt;/code&gt; object starting at the position
                  &lt;code&gt;pos&lt;/code&gt;.  If the end of the &lt;code&gt;Clob&lt;/code&gt; value is reached
                  while writing the given string, then the length of the &lt;code&gt;Clob&lt;/code&gt;
                  value will be increased to accomodate the extra characters.
                  &lt;p&gt;
                  &lt;b&gt;Note:&lt;/b&gt; If the value specified for &lt;code&gt;pos&lt;/code&gt;
                  is greater then the length+1 of the &lt;code&gt;CLOB&lt;/code&gt; value then the
                  behavior is undefined. Some JDBC drivers may throw a
                  &lt;code&gt;SQLException&lt;/code&gt; while other drivers may support this
                  operation.                
                <param>
                    pos the position at which to start writing to the <code>CLOB</code>
                      value that this <code>Clob</code> object represents;
                      The first position is 1                    
                </param>
                <param>
                    str the string to be written to the <code>CLOB</code>
                      value that this <code>Clob</code> designates                    
                </param>
                <return>
                    the number of characters written                    
                </return>
                <exception>
                    SQLException if there is an error accessing the
                      <code>CLOB</code> value or if pos is less than 1                    
                </exception>
                <exception>
                    SQLFeatureNotSupportedException if the JDBC driver does not support
                      this method                    
                </exception>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="setString" type="int" line="150"/>
            <javadoc line="150">
                Writes &lt;code&gt;len&lt;/code&gt; characters of &lt;code&gt;str&lt;/code&gt;, starting
                  at character &lt;code&gt;offset&lt;/code&gt;, to the &lt;code&gt;CLOB&lt;/code&gt; value
                  that this &lt;code&gt;Clob&lt;/code&gt; represents.  The string will overwrite the existing characters
                  in the &lt;code&gt;Clob&lt;/code&gt; object starting at the position
                  &lt;code&gt;pos&lt;/code&gt;.  If the end of the &lt;code&gt;Clob&lt;/code&gt; value is reached
                  while writing the given string, then the length of the &lt;code&gt;Clob&lt;/code&gt;
                  value will be increased to accomodate the extra characters.
                  &lt;p&gt;
                  &lt;b&gt;Note:&lt;/b&gt; If the value specified for &lt;code&gt;pos&lt;/code&gt;
                  is greater then the length+1 of the &lt;code&gt;CLOB&lt;/code&gt; value then the
                  behavior is undefined. Some JDBC drivers may throw a
                  &lt;code&gt;SQLException&lt;/code&gt; while other drivers may support this
                  operation.                
                <param>
                    pos the position at which to start writing to this
                      <code>CLOB</code> object; The first position  is 1                    
                </param>
                <param>
                    str the string to be written to the <code>CLOB</code>
                      value that this <code>Clob</code> object represents                    
                </param>
                <param>
                    offset the offset into <code>str</code> to start reading
                      the characters to be written                    
                </param>
                <param>
                    len the number of characters to be written                    
                </param>
                <return>
                    the number of characters written                    
                </return>
                <exception>
                    SQLException if there is an error accessing the
                      <code>CLOB</code> value or if pos is less than 1                    
                </exception>
                <exception>
                    SQLFeatureNotSupportedException if the JDBC driver does not support
                      this method                    
                </exception>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="setAsciiStream" type="java.io.OutputStream" line="179"/>
            <javadoc line="179">
                Retrieves a stream to be used to write Ascii characters to the
                  &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;Clob&lt;/code&gt; object represents,
                  starting at position &lt;code&gt;pos&lt;/code&gt;.  Characters written to the stream
                  will overwrite the existing characters
                  in the &lt;code&gt;Clob&lt;/code&gt; object starting at the position
                  &lt;code&gt;pos&lt;/code&gt;.  If the end of the &lt;code&gt;Clob&lt;/code&gt; value is reached
                  while writing characters to the stream, then the length of the &lt;code&gt;Clob&lt;/code&gt;
                  value will be increased to accomodate the extra characters.
                  &lt;p&gt;
                  &lt;b&gt;Note:&lt;/b&gt; If the value specified for &lt;code&gt;pos&lt;/code&gt;
                  is greater then the length+1 of the &lt;code&gt;CLOB&lt;/code&gt; value then the
                  behavior is undefined. Some JDBC drivers may throw a
                  &lt;code&gt;SQLException&lt;/code&gt; while other drivers may support this
                  operation.                
                <param>
                    pos the position at which to start writing to this
                      <code>CLOB</code> object; The first position is 1                    
                </param>
                <return>
                    the stream to which ASCII encoded characters can be written                    
                </return>
                <exception>
                    SQLException if there is an error accessing the
                      <code>CLOB</code> value or if pos is less than 1                    
                </exception>
                <exception>
                    SQLFeatureNotSupportedException if the JDBC driver does not support
                      this method                    
                </exception>
                <see>
                    #getAsciiStream                    
                </see>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="setCharacterStream" type="java.io.Writer" line="205"/>
            <javadoc line="205">
                Retrieves a stream to be used to write a stream of Unicode characters
                  to the &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;Clob&lt;/code&gt; object
                  represents, at position &lt;code&gt;pos&lt;/code&gt;. Characters written to the stream
                  will overwrite the existing characters
                  in the &lt;code&gt;Clob&lt;/code&gt; object starting at the position
                  &lt;code&gt;pos&lt;/code&gt;.  If the end of the &lt;code&gt;Clob&lt;/code&gt; value is reached
                  while writing characters to the stream, then the length of the &lt;code&gt;Clob&lt;/code&gt;
                  value will be increased to accomodate the extra characters.
                  &lt;p&gt;
                  &lt;b&gt;Note:&lt;/b&gt; If the value specified for &lt;code&gt;pos&lt;/code&gt;
                  is greater then the length+1 of the &lt;code&gt;CLOB&lt;/code&gt; value then the
                  behavior is undefined. Some JDBC drivers may throw a
                  &lt;code&gt;SQLException&lt;/code&gt; while other drivers may support this
                  operation.                
                <param>
                    pos the position at which to start writing to the
                      <code>CLOB</code> value; The first position is 1                    
                </param>
                <return>
                    a stream to which Unicode encoded characters can be written                    
                </return>
                <exception>
                    SQLException if there is an error accessing the
                      <code>CLOB</code> value or if pos is less than 1                    
                </exception>
                <exception>
                    SQLFeatureNotSupportedException if the JDBC driver does not support
                      this method                    
                </exception>
                <see>
                    #getCharacterStream                    
                </see>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="truncate" type="void" line="231"/>
            <javadoc line="231">
                Truncates the &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;Clob&lt;/code&gt;
                  designates to have a length of &lt;code&gt;len&lt;/code&gt;
                  characters.
                  &lt;p&gt;
                  &lt;b&gt;Note:&lt;/b&gt; If the value specified for &lt;code&gt;pos&lt;/code&gt;
                  is greater then the length+1 of the &lt;code&gt;CLOB&lt;/code&gt; value then the
                  behavior is undefined. Some JDBC drivers may throw a
                  &lt;code&gt;SQLException&lt;/code&gt; while other drivers may support this
                  operation.                
                <param>
                    len the length, in characters, to which the <code>CLOB</code> value
                      should be truncated                    
                </param>
                <exception>
                    SQLException if there is an error accessing the
                      <code>CLOB</code> value or if len is less than 0                    
                </exception>
                <exception>
                    SQLFeatureNotSupportedException if the JDBC driver does not support
                      this method                    
                </exception>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="free" type="void" line="250"/>
            <javadoc line="250">
                This method frees the &lt;code&gt;Clob&lt;/code&gt; object and releases the resources the resources
                  that it holds.  The object is invalid once the &lt;code&gt;free&lt;/code&gt; method
                  is called.
                  &lt;p&gt;
                  After &lt;code&gt;free&lt;/code&gt; has been called, any attempt to invoke a
                  method other than &lt;code&gt;free&lt;/code&gt; will result in a &lt;code&gt;SQLException&lt;/code&gt;
                  being thrown.  If &lt;code&gt;free&lt;/code&gt; is called multiple times, the subsequent
                  calls to &lt;code&gt;free&lt;/code&gt; are treated as a no-op.
                  &lt;p&gt;                
                <throws>
                    SQLException if an error occurs releasing
                      the Clob's resources                    
                </throws>
                <exception>
                    SQLFeatureNotSupportedException if the JDBC driver does not support
                      this method                    
                </exception>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="getCharacterStream" type="Reader" line="267"/>
            <javadoc line="267">
                Returns a &lt;code&gt;Reader&lt;/code&gt; object that contains a partial &lt;code&gt;Clob&lt;/code&gt; value, starting
                  with the character specified by pos, which is length characters in length.                
                <param>
                    pos the offset to the first character of the partial value to
                      be retrieved.  The first character in the Clob is at position 1.                    
                </param>
                <param>
                    length the length in characters of the partial value to be retrieved.                    
                </param>
                <return>
                    <code>Reader</code> through which the partial <code>Clob</code> value can be read.                    
                </return>
                <throws>
                    SQLException if pos is less than 1 or if pos is greater than the number of
                      characters in the <code>Clob</code> or if pos + length is greater than the number of
                      characters in the <code>Clob</code>                    
                </throws>
                <exception>
                    SQLFeatureNotSupportedException if the JDBC driver does not support
                      this method                    
                </exception>
                <since>
                    1.6                    
                </since>
            </javadoc>
        </interface>
    </source>