<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.sql">
        <interface name="ResultSetMetaData">
            <implements interface="Wrapper"/>
            <javadoc line="2">
                An object that can be used to get information about the types
                  and properties of the columns in a &lt;code&gt;ResultSet&lt;/code&gt; object.
                  The following code fragment creates the &lt;code&gt;ResultSet&lt;/code&gt; object rs,
                  creates the &lt;code&gt;ResultSetMetaData&lt;/code&gt; object rsmd, and uses rsmd
                  to find out how many columns rs has and whether the first column in rs
                  can be used in a &lt;code&gt;WHERE&lt;/code&gt; clause.
                  &lt;PRE&gt;
                  ResultSet rs = stmt.executeQuery(&quot;SELECT a, b, c FROM TABLE2&quot;);
                  ResultSetMetaData rsmd = rs.getMetaData();
                  int numberOfColumns = rsmd.getColumnCount();
                  boolean b = rsmd.isSearchable(1);
                  &lt;/PRE&gt;                
            </javadoc>
            <method name="getColumnCount" type="int" line="17"/>
            <javadoc line="17">
                Returns the number of columns in this &lt;code&gt;ResultSet&lt;/code&gt; object.                
                <return>
                    the number of columns                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
            </javadoc>
            <method name="isAutoIncrement" type="boolean" line="23"/>
            <javadoc line="23">
                Indicates whether the designated column is automatically numbered.                
                <param>
                    column the first column is 1, the second is 2, ...                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if so; &lt;code&gt;false&lt;/code&gt; otherwise                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
            </javadoc>
            <method name="isCaseSensitive" type="boolean" line="30"/>
            <javadoc line="30">
                Indicates whether a column&apos;s case matters.                
                <param>
                    column the first column is 1, the second is 2, ...                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if so; &lt;code&gt;false&lt;/code&gt; otherwise                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
            </javadoc>
            <method name="isSearchable" type="boolean" line="37"/>
            <javadoc line="37">
                Indicates whether the designated column can be used in a where clause.                
                <param>
                    column the first column is 1, the second is 2, ...                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if so; &lt;code&gt;false&lt;/code&gt; otherwise                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
            </javadoc>
            <method name="isCurrency" type="boolean" line="44"/>
            <javadoc line="44">
                Indicates whether the designated column is a cash value.                
                <param>
                    column the first column is 1, the second is 2, ...                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if so; &lt;code&gt;false&lt;/code&gt; otherwise                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
            </javadoc>
            <method name="isNullable" type="int" line="51"/>
            <javadoc line="51">
                Indicates the nullability of values in the designated column.                
                <param>
                    column the first column is 1, the second is 2, ...                    
                </param>
                <return>
                    the nullability status of the given column; one of &lt;code&gt;columnNoNulls&lt;/code&gt;,
                      &lt;code&gt;columnNullable&lt;/code&gt; or &lt;code&gt;columnNullableUnknown&lt;/code&gt;                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
            </javadoc>
            <declaration name="columnNoNulls" type="int" line="59"/>
            <javadoc line="59">
                The constant indicating that a
                  column does not allow &lt;code&gt;NULL&lt;/code&gt; values.                
            </javadoc>
            <declaration name="columnNullable" type="int" line="64"/>
            <javadoc line="64">
                The constant indicating that a
                  column allows &lt;code&gt;NULL&lt;/code&gt; values.                
            </javadoc>
            <declaration name="columnNullableUnknown" type="int" line="69"/>
            <javadoc line="69">
                The constant indicating that the
                  nullability of a column&apos;s values is unknown.                
            </javadoc>
            <method name="isSigned" type="boolean" line="74"/>
            <javadoc line="74">
                Indicates whether values in the designated column are signed numbers.                
                <param>
                    column the first column is 1, the second is 2, ...                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if so; &lt;code&gt;false&lt;/code&gt; otherwise                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
            </javadoc>
            <method name="getColumnDisplaySize" type="int" line="81"/>
            <javadoc line="81">
                Indicates the designated column&apos;s normal maximum width in characters.                
                <param>
                    column the first column is 1, the second is 2, ...                    
                </param>
                <return>
                    the normal maximum number of characters allowed as the width
                      of the designated column                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
            </javadoc>
            <method name="getColumnLabel" type="String" line="89"/>
            <javadoc line="89">
                Gets the designated column&apos;s suggested title for use in printouts and
                  displays. The suggested title is usually specified by the SQL &lt;code&gt;AS&lt;/code&gt;
                  clause.  If a SQL &lt;code&gt;AS&lt;/code&gt; is not specified, the value returned from
                  &lt;code&gt;getColumnLabel&lt;/code&gt; will be the same as the value returned by the
                  &lt;code&gt;getColumnName&lt;/code&gt; method.                
                <param>
                    column the first column is 1, the second is 2, ...                    
                </param>
                <return>
                    the suggested column title                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
            </javadoc>
            <method name="getColumnName" type="String" line="100"/>
            <javadoc line="100">
                Get the designated column&apos;s name.                
                <param>
                    column the first column is 1, the second is 2, ...                    
                </param>
                <return>
                    column name                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
            </javadoc>
            <method name="getSchemaName" type="String" line="107"/>
            <javadoc line="107">
                Get the designated column&apos;s table&apos;s schema.                
                <param>
                    column the first column is 1, the second is 2, ...                    
                </param>
                <return>
                    schema name or &quot;&quot; if not applicable                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
            </javadoc>
            <method name="getPrecision" type="int" line="114"/>
            <javadoc line="114">
                Get the designated column&apos;s specified column size.
                  For numeric data, this is the maximum precision.  For character data, this is the length in characters.
                  For datetime datatypes, this is the length in characters of the String representation (assuming the
                  maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes.  For the ROWID datatype,
                  this is the length in bytes. 0 is returned for data types where the
                  column size is not applicable.                
                <param>
                    column the first column is 1, the second is 2, ...                    
                </param>
                <return>
                    precision                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
            </javadoc>
            <method name="getScale" type="int" line="126"/>
            <javadoc line="126">
                Gets the designated column&apos;s number of digits to right of the decimal point.
                  0 is returned for data types where the scale is not applicable.                
                <param>
                    column the first column is 1, the second is 2, ...                    
                </param>
                <return>
                    scale                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
            </javadoc>
            <method name="getTableName" type="String" line="134"/>
            <javadoc line="134">
                Gets the designated column&apos;s table name.                
                <param>
                    column the first column is 1, the second is 2, ...                    
                </param>
                <return>
                    table name or &quot;&quot; if not applicable                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
            </javadoc>
            <method name="getCatalogName" type="String" line="141"/>
            <javadoc line="141">
                Gets the designated column&apos;s table&apos;s catalog name.                
                <param>
                    column the first column is 1, the second is 2, ...                    
                </param>
                <return>
                    the name of the catalog for the table in which the given column
                      appears or &quot;&quot; if not applicable                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
            </javadoc>
            <method name="getColumnType" type="int" line="149"/>
            <javadoc line="149">
                Retrieves the designated column&apos;s SQL type.                
                <param>
                    column the first column is 1, the second is 2, ...                    
                </param>
                <return>
                    SQL type from java.sql.Types                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
                <see>
                    Types                    
                </see>
            </javadoc>
            <method name="getColumnTypeName" type="String" line="157"/>
            <javadoc line="157">
                Retrieves the designated column&apos;s database-specific type name.                
                <param>
                    column the first column is 1, the second is 2, ...                    
                </param>
                <return>
                    type name used by the database. If the column type is
                      a user-defined type, then a fully-qualified type name is returned.                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
            </javadoc>
            <method name="isReadOnly" type="boolean" line="165"/>
            <javadoc line="165">
                Indicates whether the designated column is definitely not writable.                
                <param>
                    column the first column is 1, the second is 2, ...                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if so; &lt;code&gt;false&lt;/code&gt; otherwise                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
            </javadoc>
            <method name="isWritable" type="boolean" line="172"/>
            <javadoc line="172">
                Indicates whether it is possible for a write on the designated column to succeed.                
                <param>
                    column the first column is 1, the second is 2, ...                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if so; &lt;code&gt;false&lt;/code&gt; otherwise                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
            </javadoc>
            <method name="isDefinitelyWritable" type="boolean" line="179"/>
            <javadoc line="179">
                Indicates whether a write on the designated column will definitely succeed.                
                <param>
                    column the first column is 1, the second is 2, ...                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if so; &lt;code&gt;false&lt;/code&gt; otherwise                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
            </javadoc>
            <method name="getColumnClassName" type="String" line="186"/>
            <javadoc line="186">
                &lt;p&gt;Returns the fully-qualified name of the Java class whose instances
                  are manufactured if the method &lt;code&gt;ResultSet.getObject&lt;/code&gt;
                  is called to retrieve a value
                  from the column.  &lt;code&gt;ResultSet.getObject&lt;/code&gt; may return a subclass of the
                  class returned by this method.                
                <param>
                    column the first column is 1, the second is 2, ...                    
                </param>
                <return>
                    the fully-qualified name of the class in the Java programming
                      language that would be used by the method
                      &lt;code&gt;ResultSet.getObject&lt;/code&gt; to retrieve the value in the specified
                      column. This is the class name used for custom mapping.                    
                </return>
                <exception>
                    SQLException if a database access error occurs                    
                </exception>
                <since>
                    1.2                    
                </since>
            </javadoc>
        </interface>
    </source>