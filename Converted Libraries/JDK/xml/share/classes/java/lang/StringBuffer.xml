<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.lang">
        <class name="StringBuffer" line="29">
            <extends class="AbstractStringBuilder"/>
            <implements interface="java.io.Serializable"/>
            <implements interface="CharSequence"/>
            <javadoc line="29">
                A thread-safe, mutable sequence of characters.
                  A string buffer is like a {@link String}, but can be modified. At any
                  point in time it contains some particular sequence of characters, but
                  the length and content of the sequence can be changed through certain
                  method calls.
                  &lt;p&gt;
                  String buffers are safe for use by multiple threads. The methods
                  are synchronized where necessary so that all the operations on any
                  particular instance behave as if they occur in some serial order
                  that is consistent with the order of the method calls made by each of
                  the individual threads involved.
                  &lt;p&gt;
                  The principal operations on a &lt;code&gt;StringBuffer&lt;/code&gt; are the
                  &lt;code&gt;append&lt;/code&gt; and &lt;code&gt;insert&lt;/code&gt; methods, which are
                  overloaded so as to accept data of any type. Each effectively
                  converts a given datum to a string and then appends or inserts the
                  characters of that string to the string buffer. The
                  &lt;code&gt;append&lt;/code&gt; method always adds these characters at the end
                  of the buffer; the &lt;code&gt;insert&lt;/code&gt; method adds the characters at
                  a specified point.
                  &lt;p&gt;
                  For example, if &lt;code&gt;z&lt;/code&gt; refers to a string buffer object
                  whose current contents are &quot;&lt;code&gt;start&lt;/code&gt;&quot;, then
                  the method call &lt;code&gt;z.append(&quot;le&quot;)&lt;/code&gt; would cause the string
                  buffer to contain &quot;&lt;code&gt;startle&lt;/code&gt;&quot;, whereas
                  &lt;code&gt;z.insert(4, &quot;le&quot;)&lt;/code&gt; would alter the string buffer to
                  contain &quot;&lt;code&gt;starlet&lt;/code&gt;&quot;.
                  &lt;p&gt;
                  In general, if sb refers to an instance of a &lt;code&gt;StringBuffer&lt;/code&gt;,
                  then &lt;code&gt;sb.append(x)&lt;/code&gt; has the same effect as
                  &lt;code&gt;sb.insert(sb.length(),&amp;nbsp;x)&lt;/code&gt;.
                  &lt;p&gt;
                  Whenever an operation occurs involving a source sequence (such as
                  appending or inserting from a source sequence) this class synchronizes
                  only on the string buffer performing the operation, not on the source.
                  &lt;p&gt;
                  Every string buffer has a capacity. As long as the length of the
                  character sequence contained in the string buffer does not exceed
                  the capacity, it is not necessary to allocate a new internal
                  buffer array. If the internal buffer overflows, it is
                  automatically made larger.
                  As of  release JDK 5, this class has been supplemented with an equivalent
                  class designed for use by a single thread, {@link StringBuilder}.  The
                  &lt;tt&gt;StringBuilder&lt;/tt&gt; class should generally be used in preference to
                  this one, as it supports all of the same operations but it is faster, as
                  it performs no synchronization.                
                <author>
                    Arthur van Hoff                    
                </author>
                <see>
                    java.lang.StringBuilder                    
                </see>
                <see>
                    java.lang.String                    
                </see>
                <since>
                    JDK1.0                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="88"/>
            <javadoc line="88">
                use serialVersionUID from JDK 1.0.2 for interoperability                
            </javadoc>
            <javadoc line="91">
                Constructs a string buffer with no characters in it and an
                  initial capacity of 16 characters.                
            </javadoc>
            <method name="StringBuffer" type="constructor" line="95"/>
            <javadoc line="99">
                Constructs a string buffer with no characters in it and
                  the specified initial capacity.                
                <param>
                    capacity  the initial capacity.                    
                </param>
                <exception>
                    NegativeArraySizeException  if the &lt;code&gt;capacity&lt;/code&gt;
                      argument is less than &lt;code&gt;0&lt;/code&gt;.                    
                </exception>
            </javadoc>
            <method name="StringBuffer" type="constructor" line="107">
                <params>
                    <param name="capacity" type="int"/>
                </params>
            </method>
            <javadoc line="111">
                Constructs a string buffer initialized to the contents of the
                  specified string. The initial capacity of the string buffer is
                  &lt;code&gt;16&lt;/code&gt; plus the length of the string argument.                
                <param>
                    str   the initial contents of the buffer.                    
                </param>
                <exception>
                    NullPointerException if &lt;code&gt;str&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;                    
                </exception>
            </javadoc>
            <method name="StringBuffer" type="constructor" line="119">
                <params>
                    <param name="str" type="String"/>
                </params>
            </method>
            <javadoc line="124">
                Constructs a string buffer that contains the same characters
                  as the specified &lt;code&gt;CharSequence&lt;/code&gt;. The initial capacity of
                  the string buffer is &lt;code&gt;16&lt;/code&gt; plus the length of the
                  &lt;code&gt;CharSequence&lt;/code&gt; argument.
                  &lt;p&gt;
                  If the length of the specified &lt;code&gt;CharSequence&lt;/code&gt; is
                  less than or equal to zero, then an empty buffer of capacity
                  &lt;code&gt;16&lt;/code&gt; is returned.                
                <param>
                    seq   the sequence to copy.                    
                </param>
                <exception>
                    NullPointerException if &lt;code&gt;seq&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;                    
                </exception>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="StringBuffer" type="constructor" line="138">
                <params>
                    <param name="seq" type="CharSequence"/>
                </params>
            </method>
            <method name="length" type="int" line="143"/>
            <method name="capacity" type="int" line="147"/>
            <method name="ensureCapacity" type="void" line="152">
                <params>
                    <param name="minimumCapacity" type="int"/>
                </params>
                <scope line="153"/>
            </method>
            <javadoc line="158">
                @since      1.5                
            </javadoc>
            <method name="trimToSize" type="void" line="161"/>
            <javadoc line="165">
                @throws IndexOutOfBoundsException {@inheritDoc}                
                <see>
                    #length()                    
                </see>
            </javadoc>
            <method name="setLength" type="void" line="169">
                <params>
                    <param name="newLength" type="int"/>
                </params>
            </method>
            <javadoc line="173">
                @throws IndexOutOfBoundsException {@inheritDoc}                
                <see>
                    #length()                    
                </see>
            </javadoc>
            <method name="charAt" type="char" line="177">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <javadoc line="183">
                @since      1.5                
            </javadoc>
            <method name="codePointAt" type="int" line="186">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <javadoc line="190">
                @since     1.5                
            </javadoc>
            <method name="codePointBefore" type="int" line="193">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <javadoc line="197">
                @since     1.5                
            </javadoc>
            <method name="codePointCount" type="int" line="200">
                <params>
                    <param name="beginIndex" type="int"/>
                    <param name="endIndex" type="int"/>
                </params>
            </method>
            <javadoc line="204">
                @since     1.5                
            </javadoc>
            <method name="offsetByCodePoints" type="int" line="207">
                <params>
                    <param name="index" type="int"/>
                    <param name="codePointOffset" type="int"/>
                </params>
            </method>
            <javadoc line="211">
                @throws NullPointerException {@inheritDoc}                
                <throws>
                    IndexOutOfBoundsException {@inheritDoc}                    
                </throws>
            </javadoc>
            <method name="getChars" type="void" line="217">
                <params>
                    <param name="srcBegin" type="int"/>
                    <param name="srcEnd" type="int"/>
                    <param name="dst" type="char[]"/>
                    <param name="dstBegin" type="int"/>
                </params>
            </method>
            <javadoc line="221">
                @throws IndexOutOfBoundsException {@inheritDoc}                
                <see>
                    #length()                    
                </see>
            </javadoc>
            <method name="setCharAt" type="void" line="225">
                <params>
                    <param name="index" type="int"/>
                    <param name="ch" type="char"/>
                </params>
            </method>
            <method name="append" type="StringBuffer" line="231">
                <params>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <method name="append" type="StringBuffer" line="236">
                <params>
                    <param name="str" type="String"/>
                </params>
            </method>
            <javadoc line="241">
                Appends the specified &lt;tt&gt;StringBuffer&lt;/tt&gt; to this sequence.
                  &lt;p&gt;
                  The characters of the &lt;tt&gt;StringBuffer&lt;/tt&gt; argument are appended,
                  in order, to the contents of this &lt;tt&gt;StringBuffer&lt;/tt&gt;, increasing the
                  length of this &lt;tt&gt;StringBuffer&lt;/tt&gt; by the length of the argument.
                  If &lt;tt&gt;sb&lt;/tt&gt; is &lt;tt&gt;null&lt;/tt&gt;, then the four characters
                  &lt;tt&gt;&quot;null&quot;&lt;/tt&gt; are appended to this &lt;tt&gt;StringBuffer&lt;/tt&gt;.
                  &lt;p&gt;
                  Let &lt;i&gt;n&lt;/i&gt; be the length of the old character sequence, the one
                  contained in the &lt;tt&gt;StringBuffer&lt;/tt&gt; just prior to execution of the
                  &lt;tt&gt;append&lt;/tt&gt; method. Then the character at index &lt;i&gt;k&lt;/i&gt; in
                  the new character sequence is equal to the character at index &lt;i&gt;k&lt;/i&gt;
                  in the old character sequence, if &lt;i&gt;k&lt;/i&gt; is less than &lt;i&gt;n&lt;/i&gt;;
                  otherwise, it is equal to the character at index &lt;i&gt;k-n&lt;/i&gt; in the
                  argument &lt;code&gt;sb&lt;/code&gt;.
                  &lt;p&gt;
                  This method synchronizes on &lt;code&gt;this&lt;/code&gt; (the destination)
                  object but does not synchronize on the source (&lt;code&gt;sb&lt;/code&gt;).                
                <param>
                    sb   the &lt;tt&gt;StringBuffer&lt;/tt&gt; to append.                    
                </param>
                <return>
                    a reference to this object.                    
                </return>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="append" type="StringBuffer" line="265">
                <params>
                    <param name="sb" type="StringBuffer"/>
                </params>
            </method>
            <javadoc line="271">
                Appends the specified &lt;code&gt;CharSequence&lt;/code&gt; to this
                  sequence.
                  &lt;p&gt;
                  The characters of the &lt;code&gt;CharSequence&lt;/code&gt; argument are appended,
                  in order, increasing the length of this sequence by the length of the
                  argument.
                  &lt;p&gt;The result of this method is exactly the same as if it were an
                  invocation of this.append(s, 0, s.length());
                  &lt;p&gt;This method synchronizes on this (the destination)
                  object but does not synchronize on the source (&lt;code&gt;s&lt;/code&gt;).
                  &lt;p&gt;If &lt;code&gt;s&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters
                  &lt;code&gt;&quot;null&quot;&lt;/code&gt; are appended.                
                <param>
                    s the &lt;code&gt;CharSequence&lt;/code&gt; to append.                    
                </param>
                <return>
                    a reference to this object.                    
                </return>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="append" type="StringBuffer" line="292">
                <params>
                    <param name="s" type="CharSequence"/>
                </params>
                <comment line="294">
                    Note, synchronization achieved via other invocations                    
                </comment>
            </method>
            <javadoc line="303">
                @throws IndexOutOfBoundsException {@inheritDoc}                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="append" type="StringBuffer" line="308">
                <params>
                    <param name="s" type="CharSequence"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
            </method>
            <method name="append" type="StringBuffer" line="313">
                <params>
                    <param name="str" type="char[]"/>
                </params>
            </method>
            <javadoc line="318">
                @throws IndexOutOfBoundsException {@inheritDoc}                
            </javadoc>
            <method name="append" type="StringBuffer" line="321">
                <params>
                    <param name="str" type="char[]"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <method name="append" type="StringBuffer" line="326">
                <params>
                    <param name="b" type="boolean"/>
                </params>
            </method>
            <method name="append" type="StringBuffer" line="331">
                <params>
                    <param name="c" type="char"/>
                </params>
            </method>
            <method name="append" type="StringBuffer" line="336">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <javadoc line="341">
                @since 1.5                
            </javadoc>
            <method name="appendCodePoint" type="StringBuffer" line="344">
                <params>
                    <param name="codePoint" type="int"/>
                </params>
            </method>
            <method name="append" type="StringBuffer" line="349">
                <params>
                    <param name="lng" type="long"/>
                </params>
            </method>
            <method name="append" type="StringBuffer" line="354">
                <params>
                    <param name="f" type="float"/>
                </params>
            </method>
            <method name="append" type="StringBuffer" line="359">
                <params>
                    <param name="d" type="double"/>
                </params>
            </method>
            <javadoc line="364">
                @throws StringIndexOutOfBoundsException {@inheritDoc}                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="delete" type="StringBuffer" line="368">
                <params>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
            </method>
            <javadoc line="373">
                @throws StringIndexOutOfBoundsException {@inheritDoc}                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="deleteCharAt" type="StringBuffer" line="377">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <javadoc line="382">
                @throws StringIndexOutOfBoundsException {@inheritDoc}                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="replace" type="StringBuffer" line="386">
                <params>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                    <param name="str" type="String"/>
                </params>
            </method>
            <javadoc line="391">
                @throws StringIndexOutOfBoundsException {@inheritDoc}                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="substring" type="String" line="395">
                <params>
                    <param name="start" type="int"/>
                </params>
            </method>
            <javadoc line="399">
                @throws IndexOutOfBoundsException {@inheritDoc}                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="subSequence" type="CharSequence" line="403">
                <params>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
            </method>
            <javadoc line="407">
                @throws StringIndexOutOfBoundsException {@inheritDoc}                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="substring" type="String" line="411">
                <params>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
            </method>
            <javadoc line="415">
                @throws StringIndexOutOfBoundsException {@inheritDoc}                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="insert" type="StringBuffer" line="421">
                <params>
                    <param name="index" type="int"/>
                    <param name="str" type="char[]"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <javadoc line="426">
                @throws StringIndexOutOfBoundsException {@inheritDoc}                
            </javadoc>
            <method name="insert" type="StringBuffer" line="429">
                <params>
                    <param name="offset" type="int"/>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <javadoc line="434">
                @throws StringIndexOutOfBoundsException {@inheritDoc}                
            </javadoc>
            <method name="insert" type="StringBuffer" line="437">
                <params>
                    <param name="offset" type="int"/>
                    <param name="str" type="String"/>
                </params>
            </method>
            <javadoc line="442">
                @throws StringIndexOutOfBoundsException {@inheritDoc}                
            </javadoc>
            <method name="insert" type="StringBuffer" line="445">
                <params>
                    <param name="offset" type="int"/>
                    <param name="str" type="char[]"/>
                </params>
            </method>
            <javadoc line="450">
                @throws IndexOutOfBoundsException {@inheritDoc}                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="insert" type="StringBuffer" line="454">
                <params>
                    <param name="dstOffset" type="int"/>
                    <param name="s" type="CharSequence"/>
                </params>
                <comment line="456">
                    Note, synchronization achieved via other invocations                    
                </comment>
            </method>
            <javadoc line="463">
                @throws IndexOutOfBoundsException {@inheritDoc}                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="insert" type="StringBuffer" line="469">
                <params>
                    <param name="dstOffset" type="int"/>
                    <param name="s" type="CharSequence"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
            </method>
            <javadoc line="474">
                @throws StringIndexOutOfBoundsException {@inheritDoc}                
            </javadoc>
            <method name="insert" type="StringBuffer" line="477">
                <params>
                    <param name="offset" type="int"/>
                    <param name="b" type="boolean"/>
                </params>
            </method>
            <javadoc line="481">
                @throws IndexOutOfBoundsException {@inheritDoc}                
            </javadoc>
            <method name="insert" type="StringBuffer" line="484">
                <params>
                    <param name="offset" type="int"/>
                    <param name="c" type="char"/>
                </params>
            </method>
            <javadoc line="489">
                @throws StringIndexOutOfBoundsException {@inheritDoc}                
            </javadoc>
            <method name="insert" type="StringBuffer" line="492">
                <params>
                    <param name="offset" type="int"/>
                    <param name="i" type="int"/>
                </params>
            </method>
            <javadoc line="496">
                @throws StringIndexOutOfBoundsException {@inheritDoc}                
            </javadoc>
            <method name="insert" type="StringBuffer" line="499">
                <params>
                    <param name="offset" type="int"/>
                    <param name="l" type="long"/>
                </params>
            </method>
            <javadoc line="503">
                @throws StringIndexOutOfBoundsException {@inheritDoc}                
            </javadoc>
            <method name="insert" type="StringBuffer" line="506">
                <params>
                    <param name="offset" type="int"/>
                    <param name="f" type="float"/>
                </params>
            </method>
            <javadoc line="510">
                @throws StringIndexOutOfBoundsException {@inheritDoc}                
            </javadoc>
            <method name="insert" type="StringBuffer" line="513">
                <params>
                    <param name="offset" type="int"/>
                    <param name="d" type="double"/>
                </params>
            </method>
            <javadoc line="517">
                @throws NullPointerException {@inheritDoc}                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="indexOf" type="int" line="521">
                <params>
                    <param name="str" type="String"/>
                </params>
            </method>
            <javadoc line="525">
                @throws NullPointerException {@inheritDoc}                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="indexOf" type="int" line="529">
                <params>
                    <param name="str" type="String"/>
                    <param name="fromIndex" type="int"/>
                </params>
            </method>
            <javadoc line="534">
                @throws NullPointerException {@inheritDoc}                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="lastIndexOf" type="int" line="538">
                <params>
                    <param name="str" type="String"/>
                </params>
                <comment line="540">
                    Note, synchronization achieved via other invocations                    
                </comment>
            </method>
            <javadoc line="543">
                @throws NullPointerException {@inheritDoc}                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="lastIndexOf" type="int" line="547">
                <params>
                    <param name="str" type="String"/>
                    <param name="fromIndex" type="int"/>
                </params>
            </method>
            <javadoc line="552">
                @since   JDK1.0.2                
            </javadoc>
            <method name="reverse" type="StringBuffer" line="555"/>
            <method name="toString" type="String" line="560"/>
            <declaration name="serialPersistentFields" type="java.io.ObjectStreamField[]" line="564"/>
            <javadoc line="564">
                Serializable fields for StringBuffer.                
                <serialField>
                    value  char[]
                      The backing character array of this StringBuffer.                    
                </serialField>
                <serialField>
                    count int
                      The number of characters in this StringBuffer.                    
                </serialField>
                <serialField>
                    shared  boolean
                      A flag indicating whether the backing array is shared.
                      The value is ignored upon deserialization.                    
                </serialField>
            </javadoc>
            <javadoc line="582">
                readObject is called to restore the state of the StringBuffer from
                  a stream.                
            </javadoc>
            <method name="writeObject" type="void" line="587">
                <params>
                    <param name="s" type="java.io.ObjectOutputStream"/>
                </params>
                <declaration name="fields" type="java.io.ObjectOutputStream.PutField" line="588"/>
            </method>
            <javadoc line="595">
                readObject is called to restore the state of the StringBuffer from
                  a stream.                
            </javadoc>
            <method name="readObject" type="void" line="600">
                <params>
                    <param name="s" type="java.io.ObjectInputStream"/>
                </params>
                <declaration name="fields" type="java.io.ObjectInputStream.GetField" line="601"/>
            </method>
        </class>
    </source>