<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.lang.reflect">
        <class name="UndeclaredThrowableException" line="28">
            <extends class="RuntimeException"/>
            <javadoc line="28">
                Thrown by a method invocation on a proxy instance if its invocation
                  handler&apos;s {@link InvocationHandler#invoke invoke} method throws a
                  checked exception (a {@code Throwable} that is not assignable
                  to {@code RuntimeException} or {@code Error}) that
                  is not assignable to any of the exception types declared in the{@code throws} clause of the method that was invoked on the
                  proxy instance and dispatched to the invocation handler.
                  &lt;p&gt;An {@code UndeclaredThrowableException} instance contains
                  the undeclared checked exception that was thrown by the invocation
                  handler, and it can be retrieved with the{@code getUndeclaredThrowable()} method.{@code UndeclaredThrowableException} extends{@code RuntimeException}, so it is an unchecked exception
                  that wraps a checked exception.
                  &lt;p&gt;As of release 1.4, this exception has been retrofitted to
                  conform to the general purpose exception-chaining mechanism.  The
                  &quot;undeclared checked exception that was thrown by the invocation
                  handler&quot; that may be provided at construction time and accessed via
                  the {@link #getUndeclaredThrowable()} method is now known as the
                  &lt;i&gt;cause&lt;/i&gt;, and may be accessed via the {@link Throwable#getCause()} method, as well as the aforementioned &quot;legacy
                  method.&quot;                
                <author>
                    Peter Jones                    
                </author>
                <see>
                    InvocationHandler                    
                </see>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="59"/>
            <declaration name="undeclaredThrowable" type="Throwable" line="61"/>
            <javadoc line="61">
                the undeclared checked exception that was thrown                
                <serial>
                                        
                </serial>
            </javadoc>
            <javadoc line="67">
                Constructs an {@code UndeclaredThrowableException} with the
                  specified {@code Throwable}.                
                <param>
                    undeclaredThrowable the undeclared checked exception
                      that was thrown                    
                </param>
            </javadoc>
            <method name="UndeclaredThrowableException" type="constructor" line="74">
                <params>
                    <param name="undeclaredThrowable" type="Throwable"/>
                </params>
                <comment line="76">
                    Disallow initCause                    
                </comment>
            </method>
            <javadoc line="79">
                Constructs an {@code UndeclaredThrowableException} with the
                  specified {@code Throwable} and a detail message.                
                <param>
                    undeclaredThrowable the undeclared checked exception
                      that was thrown                    
                </param>
                <param>
                    s the detail message                    
                </param>
            </javadoc>
            <method name="UndeclaredThrowableException" type="constructor" line="89">
                <params>
                    <param name="undeclaredThrowable" type="Throwable"/>
                    <param name="s" type="String"/>
                </params>
                <comment line="91">
                    Disallow initCause                    
                </comment>
            </method>
            <javadoc line="94">
                Returns the {@code Throwable} instance wrapped in this{@code UndeclaredThrowableException}, which may be {@code null}.
                  &lt;p&gt;This method predates the general-purpose exception chaining facility.
                  The {@link Throwable#getCause()} method is now the preferred means of
                  obtaining this information.                
                <return>
                    the undeclared checked exception that was thrown                    
                </return>
            </javadoc>
            <method name="getUndeclaredThrowable" type="Throwable" line="104"/>
            <javadoc line="108">
                Returns the cause of this exception (the {@code Throwable}instance wrapped in this {@code UndeclaredThrowableException},
                  which may be {@code null}).                
                <return>
                    the cause of this exception.                    
                </return>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="getCause" type="Throwable" line="116"/>
        </class>
    </source>