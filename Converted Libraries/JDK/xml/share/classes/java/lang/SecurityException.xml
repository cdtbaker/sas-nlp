<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.lang">
        <class name="SecurityException" line="2">
            <extends class="RuntimeException"/>
            <javadoc line="2">
                Thrown by the security manager to indicate a security violation.                
                <author>
                    unascribed                    
                </author>
                <see>
                    java.lang.SecurityManager                    
                </see>
                <since>
                    JDK1.0                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="9"/>
            <javadoc line="10">
                Constructs a &lt;code&gt;SecurityException&lt;/code&gt; with no detail  message.                
            </javadoc>
            <method name="SecurityException" type="constructor" line="13"/>
            <javadoc line="16">
                Constructs a &lt;code&gt;SecurityException&lt;/code&gt; with the specified
                  detail message.                
                <param>
                    s   the detail message.                    
                </param>
            </javadoc>
            <method name="SecurityException" type="constructor" line="21">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <javadoc line="24">
                Creates a &lt;code&gt;SecurityException&lt;/code&gt; with the specified
                  detail message and cause.                
                <param>
                    message the detail message (which is saved for later retrieval
                      by the {@link #getMessage()} method).                    
                </param>
                <param>
                    cause the cause (which is saved for later retrieval by the{@link #getCause()} method).  (A <tt>null</tt> value is permitted,
                      and indicates that the cause is nonexistent or unknown.)                    
                </param>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="SecurityException" type="constructor" line="33">
                <params>
                    <param name="message" type="String"/>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
            <javadoc line="36">
                Creates a &lt;code&gt;SecurityException&lt;/code&gt; with the specified cause
                  and a detail message of &lt;tt&gt;(cause==null ? null : cause.toString())&lt;/tt&gt;
                  (which typically contains the class and detail message of
                  &lt;tt&gt;cause&lt;/tt&gt;).                
                <param>
                    cause the cause (which is saved for later retrieval by the{@link #getCause()} method).  (A <tt>null</tt> value is permitted,
                      and indicates that the cause is nonexistent or unknown.)                    
                </param>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="SecurityException" type="constructor" line="45">
                <params>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
        </class>
    </source>