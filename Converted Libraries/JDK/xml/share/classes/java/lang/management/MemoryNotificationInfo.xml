<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.lang.management">
        <import package="javax.management.openmbean.CompositeData"/>
        <import package="sun.management.MemoryNotifInfoCompositeData"/>
        <class name="MemoryNotificationInfo" line="30">
            <javadoc line="30">
                The information about a memory notification.
                  &lt;p&gt;
                  A memory notification is emitted by {@link MemoryMXBean}when the Java virtual machine detects that the memory usage
                  of a memory pool is exceeding a threshold value.
                  The notification emitted will contain the memory notification
                  information about the detected condition:
                  &lt;ul&gt;
                  &lt;li&gt;The name of the memory pool.&lt;/li&gt;
                  &lt;li&gt;The memory usage of the memory pool when the notification
                  was constructed.&lt;/li&gt;
                  &lt;li&gt;The number of times that the memory usage has crossed
                  a threshold when the notification was constructed.
                  For usage threshold notifications, this count will be the{@link MemoryPoolMXBean#getUsageThresholdCount usage threshold
                  count}.  For collection threshold notifications,
                  this count will be the{@link MemoryPoolMXBean#getCollectionUsageThresholdCountcollection usage threshold count}.
                  &lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;p&gt;
                  A {@link CompositeData CompositeData} representing
                  the &lt;tt&gt;MemoryNotificationInfo&lt;/tt&gt; object
                  is stored in the{@link javax.management.Notification#setUserData user data}of a {@link javax.management.Notification notification}.
                  The {@link #from from} method is provided to convert from
                  a &lt;tt&gt;CompositeData&lt;/tt&gt; to a &lt;tt&gt;MemoryNotificationInfo&lt;/tt&gt;
                  object. For example:
                  &lt;blockquote&gt;&lt;pre&gt;
                  Notification notif;
                  // receive the notification emitted by MemoryMXBean and set to notif
                  ...
                  String notifType = notif.getType();
                  if (notifType.equals(MemoryNotificationInfo.MEMORY_THRESHOLD_EXCEEDED) ||
                  notifType.equals(MemoryNotificationInfo.MEMORY_COLLECTION_THRESHOLD_EXCEEDED)) {
                  // retrieve the memory notification information
                  CompositeData cd = (CompositeData) notif.getUserData();
                  MemoryNotificationInfo info = MemoryNotificationInfo.from(cd);
                  ....
                  }
                  &lt;/pre&gt;&lt;/blockquote&gt;
                  &lt;p&gt;
                  The types of notifications emitted by &lt;tt&gt;MemoryMXBean&lt;/tt&gt; are:
                  &lt;ul&gt;
                  &lt;li&gt;A {@link #MEMORY_THRESHOLD_EXCEEDEDusage threshold exceeded notification}.
                  &lt;br&gt;This notification will be emitted when
                  the memory usage of a memory pool is increased and has reached
                  or exceeded its
                  &lt;a href=&quot;MemoryPoolMXBean.html#UsageThreshold&quot;&gt; usage threshold&lt;/a&gt; value.
                  Subsequent crossing of the usage threshold value does not cause
                  further notification until the memory usage has returned
                  to become less than the usage threshold value.
                  &lt;p&gt;&lt;/li&gt;
                  &lt;li&gt;A {@link #MEMORY_COLLECTION_THRESHOLD_EXCEEDEDcollection usage threshold exceeded notification}.
                  &lt;br&gt;This notification will be emitted when
                  the memory usage of a memory pool is greater than or equal to its
                  &lt;a href=&quot;MemoryPoolMXBean.html#CollectionThreshold&quot;&gt;
                  collection usage threshold&lt;/a&gt; after the Java virtual machine
                  has expended effort in recycling unused objects in that
                  memory pool.&lt;/li&gt;
                  &lt;/ul&gt;                
                <author>
                    Mandy Chung                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="poolName" type="String" line="108"/>
            <declaration name="usage" type="MemoryUsage" line="109"/>
            <declaration name="count" type="long" line="110"/>
            <declaration name="MEMORY_THRESHOLD_EXCEEDED" type="String" line="112"/>
            <javadoc line="112">
                Notification type denoting that
                  the memory usage of a memory pool has
                  reached or exceeded its
                  &lt;a href=&quot;MemoryPoolMXBean.html#UsageThreshold&quot;&gt; usage threshold&lt;/a&gt; value.
                  This notification is emitted by {@link MemoryMXBean}.
                  Subsequent crossing of the usage threshold value does not cause
                  further notification until the memory usage has returned
                  to become less than the usage threshold value.
                  The value of this notification type is
                  &lt;tt&gt;java.management.memory.threshold.exceeded&lt;/tt&gt;.                
            </javadoc>
            <declaration name="MEMORY_COLLECTION_THRESHOLD_EXCEEDED" type="String" line="127"/>
            <javadoc line="127">
                Notification type denoting that
                  the memory usage of a memory pool is greater than or equal to its
                  &lt;a href=&quot;MemoryPoolMXBean.html#CollectionThreshold&quot;&gt;
                  collection usage threshold&lt;/a&gt; after the Java virtual machine
                  has expended effort in recycling unused objects in that
                  memory pool.
                  This notification is emitted by {@link MemoryMXBean}.
                  The value of this notification type is
                  &lt;tt&gt;java.management.memory.collection.threshold.exceeded&lt;/tt&gt;.                
            </javadoc>
            <javadoc line="141">
                Constructs a &lt;tt&gt;MemoryNotificationInfo&lt;/tt&gt; object.                
                <param>
                    poolName The name of the memory pool which triggers this notification.                    
                </param>
                <param>
                    usage Memory usage of the memory pool.                    
                </param>
                <param>
                    count The threshold crossing count.                    
                </param>
            </javadoc>
            <method name="MemoryNotificationInfo" type="constructor" line="150">
                <params>
                    <param name="poolName" type="String"/>
                    <param name="usage" type="MemoryUsage"/>
                    <param name="count" type="long"/>
                </params>
                <scope line="151"/>
                <scope line="154"/>
            </method>
            <method name="MemoryNotificationInfo" type="constructor" line="163">
                <params>
                    <param name="cd" type="CompositeData"/>
                </params>
            </method>
            <javadoc line="171">
                Returns the name of the memory pool that triggers this notification.
                  The memory pool usage has crossed a threshold.                
                <return>
                    the name of the memory pool that triggers this notification.                    
                </return>
            </javadoc>
            <method name="getPoolName" type="String" line="177"/>
            <javadoc line="181">
                Returns the memory usage of the memory pool
                  when this notification was constructed.                
                <return>
                    the memory usage of the memory pool
                      when this notification was constructed.                    
                </return>
            </javadoc>
            <method name="getUsage" type="MemoryUsage" line="188"/>
            <javadoc line="192">
                Returns the number of times that the memory usage has crossed
                  a threshold when the notification was constructed.
                  For usage threshold notifications, this count will be the{@link MemoryPoolMXBean#getUsageThresholdCount threshold
                  count}.  For collection threshold notifications,
                  this count will be the{@link MemoryPoolMXBean#getCollectionUsageThresholdCountcollection usage threshold count}.                
                <return>
                    the number of times that the memory usage has crossed
                      a threshold when the notification was constructed.                    
                </return>
            </javadoc>
            <method name="getCount" type="long" line="205"/>
            <javadoc line="209">
                Returns a &lt;tt&gt;MemoryNotificationInfo&lt;/tt&gt; object represented by the
                  given &lt;tt&gt;CompositeData&lt;/tt&gt;.
                  The given &lt;tt&gt;CompositeData&lt;/tt&gt; must contain
                  the following attributes:
                  &lt;blockquote&gt;
                  &lt;table border&gt;
                  &lt;tr&gt;
                  &lt;th align=left&gt;Attribute Name&lt;/th&gt;
                  &lt;th align=left&gt;Type&lt;/th&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;poolName&lt;/td&gt;
                  &lt;td&gt;&lt;tt&gt;java.lang.String&lt;/tt&gt;&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;usage&lt;/td&gt;
                  &lt;td&gt;&lt;tt&gt;javax.management.openmbean.CompositeData&lt;/tt&gt;&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;count&lt;/td&gt;
                  &lt;td&gt;&lt;tt&gt;java.lang.Long&lt;/tt&gt;&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;/table&gt;
                  &lt;/blockquote&gt;                
                <param>
                    cd <tt>CompositeData</tt> representing a
                      <tt>MemoryNotificationInfo</tt>                    
                </param>
                <throws>
                    IllegalArgumentException if <tt>cd</tt> does not
                      represent a <tt>MemoryNotificationInfo</tt> object.                    
                </throws>
                <return>
                    a <tt>MemoryNotificationInfo</tt> object represented
                      by <tt>cd</tt> if <tt>cd</tt> is not <tt>null</tt>;
                      <tt>null</tt> otherwise.                    
                </return>
            </javadoc>
            <method name="from" type="MemoryNotificationInfo" line="245">
                <params>
                    <param name="cd" type="CompositeData"/>
                </params>
                <scope line="246"/>
                <scope line="250"/>
                <scope line="252"/>
            </method>
        </class>
    </source>