<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.lang.management">
        <class name="ManagementPermission" line="28">
            <extends class="java.security.BasicPermission"/>
            <javadoc line="28">
                The permission which the SecurityManager will check when code
                  that is running with a SecurityManager calls methods defined
                  in the management interface for the Java platform.
                  &lt;P&gt;
                  The following table
                  provides a summary description of what the permission allows,
                  and discusses the risks of granting code the permission.
                  &lt;P&gt;
                  &lt;table border=1 cellpadding=5 summary=&quot;Table shows permission target name, wh
                  at the permission allows, and associated risks&quot;&gt;
                  &lt;tr&gt;
                  &lt;th&gt;Permission Target Name&lt;/th&gt;
                  &lt;th&gt;What the Permission Allows&lt;/th&gt;
                  &lt;th&gt;Risks of Allowing this Permission&lt;/th&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;control&lt;/td&gt;
                  &lt;td&gt;Ability to control the runtime characteristics of the Java virtual
                  machine, for example, setting the -verbose:gc and -verbose:class flag,
                  setting the threshold of a memory pool, and enabling and disabling
                  the thread contention monitoring support.
                  &lt;/td&gt;
                  &lt;td&gt;This allows an attacker to control the runtime characteristics
                  of the Java virtual machine and cause the system to misbehave.
                  &lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;monitor&lt;/td&gt;
                  &lt;td&gt;Ability to retrieve runtime information about
                  the Java virtual machine such as thread
                  stack trace, a list of all loaded class names, and input arguments
                  to the Java virtual machine.&lt;/td&gt;
                  &lt;td&gt;This allows malicious code to monitor runtime information and
                  uncover vulnerabilities.&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;/table&gt;
                  &lt;p&gt;
                  Programmers do not normally create ManagementPermission objects directly.
                  Instead they are created by the security policy code based on reading
                  the security policy file.                
                <author>
                    Mandy Chung                    
                </author>
                <since>
                    1.5                    
                </since>
                <see>
                    java.security.BasicPermission                    
                </see>
                <see>
                    java.security.Permission                    
                </see>
                <see>
                    java.security.Permissions                    
                </see>
                <see>
                    java.security.PermissionCollection                    
                </see>
                <see>
                    java.lang.SecurityManager                    
                </see>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="86"/>
            <javadoc line="88">
                Constructs a ManagementPermission with the specified name.                
                <param>
                    name Permission name. Must be either &quot;monitor&quot; or &quot;control&quot;.                    
                </param>
                <throws>
                    NullPointerException if &lt;code&gt;name&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.                    
                </throws>
                <throws>
                    IllegalArgumentException if &lt;code&gt;name&lt;/code&gt; is empty or invalid.                    
                </throws>
            </javadoc>
            <method name="ManagementPermission" type="constructor" line="96">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="98"/>
            </method>
            <javadoc line="103">
                Constructs a new ManagementPermission object.                
                <param>
                    name Permission name. Must be either &quot;monitor&quot; or &quot;control&quot;.                    
                </param>
                <param>
                    actions Must be either null or the empty string.                    
                </param>
                <throws>
                    NullPointerException if &lt;code&gt;name&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.                    
                </throws>
                <throws>
                    IllegalArgumentException if &lt;code&gt;name&lt;/code&gt; is empty or
                      if arguments are invalid.                    
                </throws>
            </javadoc>
            <method name="ManagementPermission" type="constructor" line="114">
                <params>
                    <param name="name" type="String"/>
                    <param name="actions" type="String"/>
                </params>
                <scope line="116"/>
                <scope line="119"/>
            </method>
        </class>
    </source>