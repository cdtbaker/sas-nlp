<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.lang.management">
        <import package="javax.management.openmbean.CompositeData"/>
        <import package="sun.management.MonitorInfoCompositeData"/>
        <class name="MonitorInfo" line="4">
            <extends class="LockInfo"/>
            <javadoc line="4">
                Information about an object monitor lock.  An object monitor is locked
                  when entering a synchronization block or method on that object.
                  &lt;h4&gt;MXBean Mapping&lt;/h4&gt;
                  &lt;tt&gt;MonitorInfo&lt;/tt&gt; is mapped to a {@link CompositeData CompositeData}with attributes as specified in
                  the {@link #from from} method.                
                <author>
                    Mandy Chung                    
                </author>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="stackDepth" type="int" line="14"/>
            <declaration name="stackFrame" type="StackTraceElement" line="15"/>
            <javadoc line="16">
                Construct a &lt;tt&gt;MonitorInfo&lt;/tt&gt; object.                
                <param>
                    className the fully qualified name of the class of the lock object.                    
                </param>
                <param>
                    identityHashCode the {@link System#identityHashCodeidentity hash code} of the lock object.                    
                </param>
                <param>
                    stackDepth the depth in the stack trace where the object monitor
                      was locked.                    
                </param>
                <param>
                    stackFrame the stack frame that locked the object monitor.                    
                </param>
                <throws>
                    IllegalArgumentException if
                      <tt>stackDepth</tt> &ge; 0 but <tt>stackFrame</tt> is <tt>null</tt>,
                      or <tt>stackDepth</tt> &lt; 0 but <tt>stackFrame</tt> is not
                      <tt>null</tt>.                    
                </throws>
            </javadoc>
            <method name="MonitorInfo" type="constructor" line="28">
                <params>
                    <param name="className" type="String"/>
                    <param name="identityHashCode" type="int"/>
                    <param name="stackDepth" type="int"/>
                    <param name="stackFrame" type="StackTraceElement"/>
                </params>
                <scope line="30"/>
                <scope line="33"/>
            </method>
            <javadoc line="39">
                Returns the depth in the stack trace where the object monitor
                  was locked.  The depth is the index to the &lt;tt&gt;StackTraceElement&lt;/tt&gt;
                  array returned in the {@link ThreadInfo#getStackTrace} method.                
                <return>
                    the depth in the stack trace where the object monitor
                      was locked, or a negative number if not available.                    
                </return>
            </javadoc>
            <method name="getLockedStackDepth" type="int" line="46"/>
            <javadoc line="49">
                Returns the stack frame that locked the object monitor.                
                <return>
                    <tt>StackTraceElement</tt> that locked the object monitor,
                      or <tt>null</tt> if not available.                    
                </return>
            </javadoc>
            <method name="getLockedStackFrame" type="StackTraceElement" line="54"/>
            <javadoc line="57">
                Returns a &lt;tt&gt;MonitorInfo&lt;/tt&gt; object represented by the
                  given &lt;tt&gt;CompositeData&lt;/tt&gt;.
                  The given &lt;tt&gt;CompositeData&lt;/tt&gt; must contain the following attributes
                  as well as the attributes specified in the
                  &lt;a href=&quot;LockInfo.html#MappedType&quot;&gt;
                  mapped type&lt;/a&gt; for the {@link LockInfo} class:
                  &lt;blockquote&gt;
                  &lt;table border&gt;
                  &lt;tr&gt;
                  &lt;th align=left&gt;Attribute Name&lt;/th&gt;
                  &lt;th align=left&gt;Type&lt;/th&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;lockedStackFrame&lt;/td&gt;
                  &lt;td&gt;&lt;tt&gt;CompositeData as specified in the
                  &lt;a href=&quot;ThreadInfo.html#StackTrace&quot;&gt;stackTrace&lt;/a&gt;
                  attribute defined in the {@link ThreadInfo#fromThreadInfo} method.
                  &lt;/tt&gt;&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;lockedStackDepth&lt;/td&gt;
                  &lt;td&gt;&lt;tt&gt;java.lang.Integer&lt;/tt&gt;&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;/table&gt;
                  &lt;/blockquote&gt;                
                <param>
                    cd <tt>CompositeData</tt> representing a <tt>MonitorInfo</tt>                    
                </param>
                <throws>
                    IllegalArgumentException if <tt>cd</tt> does not
                      represent a <tt>MonitorInfo</tt> with the attributes described
                      above.                    
                </throws>
                <return>
                    a <tt>MonitorInfo</tt> object represented
                      by <tt>cd</tt> if <tt>cd</tt> is not <tt>null</tt>;
                      <tt>null</tt> otherwise.                    
                </return>
            </javadoc>
            <method name="from" type="MonitorInfo" line="91">
                <params>
                    <param name="cd" type="CompositeData"/>
                </params>
                <scope line="92"/>
                <scope line="95"/>
                <scope line="98">
                    <declaration name="className" type="String" line="100"/>
                    <declaration name="identityHashCode" type="int" line="101"/>
                    <declaration name="stackDepth" type="int" line="102"/>
                    <declaration name="stackFrame" type="StackTraceElement" line="103"/>
                </scope>
            </method>
        </class>
    </source>