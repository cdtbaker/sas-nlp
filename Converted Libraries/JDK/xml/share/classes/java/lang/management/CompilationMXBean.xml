<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.lang.management">
        <interface name="CompilationMXBean">
            <implements interface="PlatformManagedObject"/>
            <javadoc line="28">
                The management interface for the compilation system of
                  the Java virtual machine.
                  &lt;p&gt; A Java virtual machine has a single instance of the implementation
                  class of this interface.  This instance implementing this interface is
                  an &lt;a href=&quot;ManagementFactory.html#MXBean&quot;&gt;MXBean&lt;/a&gt;
                  that can be obtained by calling
                  the {@link ManagementFactory#getCompilationMXBean} method or
                  from the {@link ManagementFactory#getPlatformMBeanServerplatform &lt;tt&gt;MBeanServer&lt;/tt&gt;} method.
                  &lt;p&gt;The &lt;tt&gt;ObjectName&lt;/tt&gt; for uniquely identifying the MXBean for
                  the compilation system within an MBeanServer is:
                  &lt;blockquote&gt;{@link ManagementFactory#COMPILATION_MXBEAN_NAME&lt;tt&gt;java.lang:type=Compilation&lt;/tt&gt;}&lt;/blockquote&gt;
                  It can be obtained by calling the{@link PlatformManagedObject#getObjectName} method.                
                <see>
                    ManagementFactory#getPlatformMXBeans(Class)                    
                </see>
                <see>
                    <a href="../../../javax/management/package-summary.html">
                           JMX Specification.</a>                    
                </see>
                <see>
                    <a href="package-summary.html#examples">
                           Ways to Access MXBeans</a>                    
                </see>
                <author>
                    Mandy Chung                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="getName" type="java.lang.String" line="60"/>
            <javadoc line="60">
                Returns the name of the Just-in-time (JIT) compiler.                
                <return>
                    the name of the JIT compiler.                    
                </return>
            </javadoc>
            <method name="isCompilationTimeMonitoringSupported" type="boolean" line="67"/>
            <javadoc line="67">
                Tests if the Java virtual machine supports the monitoring of
                  compilation time.                
                <return>
                    <tt>true</tt> if the monitoring of compilation time is
                      supported ; <tt>false</tt> otherwise.                    
                </return>
            </javadoc>
            <method name="getTotalCompilationTime" type="long" line="76"/>
            <javadoc line="76">
                Returns the approximate accumlated elapsed time (in milliseconds)
                  spent in compilation.
                  If multiple threads are used for compilation, this value is
                  summation of the approximate time that each thread spent in compilation.
                  &lt;p&gt;This method is optionally supported by the platform.
                  A Java virtual machine implementation may not support the compilation
                  time monitoring. The {@link #isCompilationTimeMonitoringSupported}method can be used to determine if the Java virtual machine
                  supports this operation.
                  &lt;p&gt; This value does not indicate the level of performance of
                  the Java virtual machine and is not intended for performance comparisons
                  of different virtual machine implementations.
                  The implementations may have different definitions and different
                  measurements of the compilation time.                
                <return>
                    Compilation time in milliseconds                    
                </return>
                <throws>
                    java.lang.UnsupportedOperationException if the Java
                      virtual machine does not support
                      this operation.                    
                </throws>
            </javadoc>
        </interface>
    </source>