<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.lang">
        <import package="java.lang.ref"/>
        <class name="InheritableThreadLocal" line="3">
            <type_params>
                <type_param name="T"/>
            </type_params>
            <extends class="ThreadLocal">
                <type_params>
                    <type_param name="T"/>
                </type_params>
            </extends>
            <javadoc line="3">
                This class extends &lt;tt&gt;ThreadLocal&lt;/tt&gt; to provide inheritance of values
                  from parent thread to child thread: when a child thread is created, the
                  child receives initial values for all inheritable thread-local variables
                  for which the parent has values.  Normally the child&apos;s values will be
                  identical to the parent&apos;s; however, the child&apos;s value can be made an
                  arbitrary function of the parent&apos;s by overriding the &lt;tt&gt;childValue&lt;/tt&gt;
                  method in this class.
                  &lt;p&gt;Inheritable thread-local variables are used in preference to
                  ordinary thread-local variables when the per-thread-attribute being
                  maintained in the variable (e.g., User ID, Transaction ID) must be
                  automatically transmitted to any child threads that are created.                
                <author>
                    Josh Bloch and Doug Lea                    
                </author>
                <see>
                    ThreadLocal                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <javadoc line="20">
                Computes the child&apos;s initial value for this inheritable thread-local
                  variable as a function of the parent&apos;s value at the time the child
                  thread is created.  This method is called from within the parent
                  thread before the child is started.
                  &lt;p&gt;
                  This method merely returns its input argument, and should be overridden
                  if a different behavior is desired.                
                <param>
                    parentValue the parent thread's value                    
                </param>
                <return>
                    the child thread's initial value                    
                </return>
            </javadoc>
            <method name="childValue" type="T" line="31">
                <params>
                    <param name="parentValue" type="T"/>
                </params>
            </method>
            <javadoc line="34">
                Get the map associated with a ThreadLocal.                
                <param>
                    t the current thread                    
                </param>
            </javadoc>
            <method name="getMap" type="ThreadLocalMap" line="38">
                <params>
                    <param name="t" type="Thread"/>
                </params>
            </method>
            <javadoc line="41">
                Create the map associated with a ThreadLocal.                
                <param>
                    t the current thread                    
                </param>
                <param>
                    firstValue value for the initial entry of the table.                    
                </param>
                <param>
                    map the map to store.                    
                </param>
            </javadoc>
            <method name="createMap" type="void" line="47">
                <params>
                    <param name="t" type="Thread"/>
                    <param name="firstValue" type="T"/>
                </params>
            </method>
        </class>
    </source>