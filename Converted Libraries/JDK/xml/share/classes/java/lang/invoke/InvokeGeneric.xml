<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.lang.invoke">
        <import package="sun.invoke.util"/>
        <import package="java.lang.invoke.MethodHandles.Lookup.IMPL_LOOKUP"/>
        <class name="InvokeGeneric" line="4">
            <javadoc line="4">
                Adapters which manage inexact MethodHandle.invoke calls.
                  The JVM calls one of these when the exact type match fails.                
                <author>
                    jrose                    
                </author>
            </javadoc>
            <declaration name="erasedCallerType" type="MethodType" line="10"/>
            <declaration name="initialInvoker" type="MethodHandle" line="11"/>
            <javadoc line="12">
                Compute and cache information for this adapter, so that it can
                  call out to targets of the erasure-family of the given erased type.                
            </javadoc>
            <method name="InvokeGeneric" type="constructor" line="16">
                <params>
                    <param name="erasedCallerType" type="MethodType"/>
                </params>
            </method>
            <method name="lookup" type="MethodHandles.Lookup" line="22"/>
            <javadoc line="25">
                Return the adapter information for this type&apos;s erasure.                
            </javadoc>
            <method name="generalInvokerOf" type="MethodHandle" line="28">
                <params>
                    <param name="erasedCallerType" type="MethodType"/>
                </params>
                <declaration name="gen" type="InvokeGeneric" line="29"/>
            </method>
            <method name="makeInitialInvoker" type="MethodHandle" line="32">
                <declaration name="postDispatch" type="MethodHandle" line="33"/>
                <declaration name="invoker" type="MethodHandle" line="34"/>
                <scope line="35"/>
                <scope line="38"/>
            </method>
            <declaration name="EXTRA_ARGS" type="Class&lt;?&gt;[]" line="43"/>
            <method name="makePostDispatchInvoker" type="MethodHandle" line="44">
                <declaration name="invokerType" type="MethodType" line="45"/>
            </method>
            <method name="dropDispatchArguments" type="MethodHandle" line="48">
                <params>
                    <param name="targetInvoker" type="MethodHandle"/>
                </params>
            </method>
            <method name="dispatcher" type="MethodHandle" line="52">
                <params>
                    <param name="dispatchName" type="String"/>
                </params>
            </method>
            <declaration name="USE_AS_TYPE_PATH" type="boolean" line="55"/>
            <javadoc line="56">
                Return a method handle to invoke on the callerType, target, and remaining arguments.
                  The method handle must finish the call.
                  This is the first look at the caller type and target.                
            </javadoc>
            <method name="dispatch" type="MethodHandle" line="61">
                <params>
                    <param name="callerType" type="MethodType"/>
                    <param name="target" type="MethodHandle"/>
                </params>
                <declaration name="targetType" type="MethodType" line="62"/>
                <scope line="63">
                    <declaration name="newTarget" type="MethodHandle" line="64"/>
                    <declaration name="invokers" type="Invokers" line="66"/>
                    <declaration name="invoker" type="MethodHandle" line="67"/>
                    <scope line="68"/>
                </scope>
            </method>
            <method name="dispatchWithConversion" type="MethodHandle" line="75">
                <params>
                    <param name="callerType" type="MethodType"/>
                    <param name="target" type="MethodHandle"/>
                </params>
                <declaration name="finisher" type="MethodHandle" line="76"/>
            </method>
            <method name="returnConversionPossible" type="boolean" line="80">
                <declaration name="needType" type="Class&lt;?&gt;" line="81"/>
            </method>
            <method name="returnConversionNeeded" type="boolean" line="84">
                <params>
                    <param name="callerType" type="MethodType"/>
                    <param name="target" type="MethodHandle"/>
                </params>
                <declaration name="needType" type="Class&lt;?&gt;" line="85"/>
                <declaration name="haveType" type="Class&lt;?&gt;" line="87"/>
            </method>
            <method name="addReturnConversion" type="MethodHandle" line="91">
                <params>
                    <param name="finisher" type="MethodHandle"/>
                    <param name="type" type="Class<?>"/>
                </params>
                <declaration name="finisherType" type="MethodType" line="92"/>
                <declaration name="caster" type="MethodHandle" line="93"/>
            </method>
            <method name="toString" type="String" line="98"/>
        </class>
    </source>