<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.lang.invoke">
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <class name="MethodHandleStatics" line="31">
            <comment line="38">
                                
            </comment>
            <comment line="40">
                do not instantiate                
            </comment>
            <comment line="54">
                                
            </comment>
            <comment line="65">
                                
            </comment>
            <comment line="69">
                                
            </comment>
            <comment line="73">
                                
            </comment>
            <comment line="95">
                handy shared exception makers (they simplify the common case code)                
            </comment>
            <comment line="96">
                                
            </comment>
            <comment line="99">
                                
            </comment>
            <comment line="102">
                                
            </comment>
            <comment line="105">
                                
            </comment>
            <comment line="108">
                                
            </comment>
            <comment line="111">
                                
            </comment>
            <javadoc line="31">
                This class consists exclusively of static names internal to the
                  method handle implementation.
                  Usage:  {@code import static java.lang.invoke.MethodHandleStatics.}                
                <author>
                    John Rose, JSR 292 EG                    
                </author>
            </javadoc>
            <method name="MethodHandleStatics" type="constructor" line="39"/>
            <declaration name="DEBUG_METHOD_HANDLE_NAMES" type="boolean" line="41"/>
            <scope line="42">
                <declaration name="values" type="Object[]" line="43"/>
                <anonymous_class line="44">
                    <method name="run" type="Void" line="45"/>
                </anonymous_class>
            </scope>
            <method name="getNameString" type="String" line="53">
                <params>
                    <param name="target" type="MethodHandle"/>
                    <param name="type" type="MethodType"/>
                </params>
                <declaration name="name" type="MemberName" line="56"/>
            </method>
            <method name="getNameString" type="String" line="64">
                <params>
                    <param name="target" type="MethodHandle"/>
                    <param name="typeHolder" type="MethodHandle"/>
                </params>
            </method>
            <method name="getNameString" type="String" line="68">
                <params>
                    <param name="target" type="MethodHandle"/>
                </params>
            </method>
            <method name="addTypeString" type="String" line="72">
                <params>
                    <param name="obj" type="Object"/>
                    <param name="target" type="MethodHandle"/>
                </params>
                <declaration name="str" type="String" line="73"/>
                <declaration name="paren" type="int" line="75"/>
            </method>
            <method name="checkSpreadArgument" type="void" line="80">
                <params>
                    <param name="av" type="Object"/>
                    <param name="n" type="int"/>
                </params>
                <comment line="91">
                    fall through to error:                    
                </comment>
                <scope line="81"/>
                <scope line="83">
                    <declaration name="len" type="int" line="84"/>
                </scope>
                <scope line="86">
                    <declaration name="len" type="int" line="87"/>
                </scope>
            </method>
            <method name="newIllegalStateException" type="RuntimeException" line="95">
                <params>
                    <param name="message" type="String"/>
                </params>
            </method>
            <method name="newIllegalStateException" type="RuntimeException" line="98">
                <params>
                    <param name="message" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <method name="newIllegalArgumentException" type="RuntimeException" line="101">
                <params>
                    <param name="message" type="String"/>
                </params>
            </method>
            <method name="newIllegalArgumentException" type="RuntimeException" line="104">
                <params>
                    <param name="message" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <method name="newIllegalArgumentException" type="RuntimeException" line="107">
                <params>
                    <param name="message" type="String"/>
                    <param name="obj" type="Object"/>
                    <param name="obj2" type="Object"/>
                </params>
            </method>
            <method name="uncaughtException" type="Error" line="110">
                <params>
                    <param name="ex" type="Exception"/>
                </params>
                <declaration name="err" type="Error" line="111"/>
            </method>
            <method name="message" type="String" line="115">
                <params>
                    <param name="message" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <method name="message" type="String" line="119">
                <params>
                    <param name="message" type="String"/>
                    <param name="obj" type="Object"/>
                    <param name="obj2" type="Object"/>
                </params>
            </method>
        </class>
    </source>