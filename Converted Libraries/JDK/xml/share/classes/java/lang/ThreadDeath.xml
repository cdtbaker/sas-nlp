<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.lang">
        <class name="ThreadDeath" line="2">
            <extends class="Error"/>
            <javadoc line="2">
                An instance of {@code ThreadDeath} is thrown in the victim thread
                  when the (deprecated) {@link Thread#stop()} method is invoked.
                  &lt;p&gt;An application should catch instances of this class only if it
                  must clean up after being terminated asynchronously.  If{@code ThreadDeath} is caught by a method, it is important that it
                  be rethrown so that the thread actually dies.
                  &lt;p&gt;The {@linkplain ThreadGroup#uncaughtException top-level error
                  handler} does not print out a message if {@code ThreadDeath} is
                  never caught.
                  &lt;p&gt;The class {@code ThreadDeath} is specifically a subclass of{@code Error} rather than {@code Exception}, even though it is a
                  &quot;normal occurrence&quot;, because many applications catch all
                  occurrences of {@code Exception} and then discard the exception.                
                <since>
                    JDK1.0                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="17"/>
        </class>
    </source>