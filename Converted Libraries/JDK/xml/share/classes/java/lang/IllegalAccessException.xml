<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.lang">
        <class name="IllegalAccessException" line="2">
            <extends class="ReflectiveOperationException"/>
            <javadoc line="2">
                An IllegalAccessException is thrown when an application tries
                  to reflectively create an instance (other than an array),
                  set or get a field, or invoke a method, but the currently
                  executing method does not have access to the definition of
                  the specified class, field, method or constructor.                
                <author>
                    unascribed                    
                </author>
                <see>
                    Class#newInstance()                    
                </see>
                <see>
                    java.lang.reflect.Field#set(Object,Object)                    
                </see>
                <see>
                    java.lang.reflect.Field#setBoolean(Object,boolean)                    
                </see>
                <see>
                    java.lang.reflect.Field#setByte(Object,byte)                    
                </see>
                <see>
                    java.lang.reflect.Field#setShort(Object,short)                    
                </see>
                <see>
                    java.lang.reflect.Field#setChar(Object,char)                    
                </see>
                <see>
                    java.lang.reflect.Field#setInt(Object,int)                    
                </see>
                <see>
                    java.lang.reflect.Field#setLong(Object,long)                    
                </see>
                <see>
                    java.lang.reflect.Field#setFloat(Object,float)                    
                </see>
                <see>
                    java.lang.reflect.Field#setDouble(Object,double)                    
                </see>
                <see>
                    java.lang.reflect.Field#get(Object)                    
                </see>
                <see>
                    java.lang.reflect.Field#getBoolean(Object)                    
                </see>
                <see>
                    java.lang.reflect.Field#getByte(Object)                    
                </see>
                <see>
                    java.lang.reflect.Field#getShort(Object)                    
                </see>
                <see>
                    java.lang.reflect.Field#getChar(Object)                    
                </see>
                <see>
                    java.lang.reflect.Field#getInt(Object)                    
                </see>
                <see>
                    java.lang.reflect.Field#getLong(Object)                    
                </see>
                <see>
                    java.lang.reflect.Field#getFloat(Object)                    
                </see>
                <see>
                    java.lang.reflect.Field#getDouble(Object)                    
                </see>
                <see>
                    java.lang.reflect.Method#invoke(Object,Object[])                    
                </see>
                <see>
                    java.lang.reflect.Constructor#newInstance(Object[])                    
                </see>
                <since>
                    JDK1.0                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="33"/>
            <javadoc line="34">
                Constructs an &lt;code&gt;IllegalAccessException&lt;/code&gt; without a
                  detail message.                
            </javadoc>
            <method name="IllegalAccessException" type="constructor" line="38"/>
            <javadoc line="41">
                Constructs an &lt;code&gt;IllegalAccessException&lt;/code&gt; with a detail message.                
                <param>
                    s   the detail message.                    
                </param>
            </javadoc>
            <method name="IllegalAccessException" type="constructor" line="45">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
        </class>
    </source>