<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.lang">
        <class name="Shutdown" line="2">
            <javadoc line="2">
                Package-private utility class containing data structures and logic
                  governing the virtual-machine shutdown sequence.                
                <author>
                    Mark Reinhold                    
                </author>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <declaration name="RUNNING" type="int" line="9"/>
            <declaration name="HOOKS" type="int" line="10"/>
            <declaration name="FINALIZERS" type="int" line="11"/>
            <declaration name="state" type="int" line="12"/>
            <declaration name="runFinalizersOnExit" type="boolean" line="13"/>
            <declaration name="MAX_SYSTEM_HOOKS" type="int" line="14"/>
            <declaration name="hooks" type="Runnable[]" line="15"/>
            <declaration name="currentRunningHook" type="int" line="16"/>
            <class name="Lock" line="17"/>
            <declaration name="lock" type="Object" line="19"/>
            <declaration name="haltLock" type="Object" line="20"/>
            <method name="setRunFinalizersOnExit" type="void" line="21">
                <params>
                    <param name="run" type="boolean"/>
                </params>
                <scope line="22"/>
            </method>
            <javadoc line="26">
                Add a new shutdown hook.  Checks the shutdown state and the hook itself,
                  but does not do any security checks.
                  The registerShutdownInProgress parameter should be false except
                  registering the DeleteOnExitHook since the first file may
                  be added to the delete on exit list by the application shutdown
                  hooks.                
                <params>
                    slot  the slot in the shutdown hook array, whose element
                      will be invoked in order during shutdown                    
                </params>
                <params>
                    registerShutdownInProgress true to allow the hook
                      to be registered even if the shutdown is in progress.                    
                </params>
                <params>
                    hook  the hook to be registered                    
                </params>
                <throw>
                    IllegalStateException
                      if registerShutdownInProgress is false and shutdown is in progress; or
                      if registerShutdownInProgress is true and the shutdown process
                      already passes the given slot                    
                </throw>
            </javadoc>
            <method name="add" type="void" line="43">
                <params>
                    <param name="slot" type="int"/>
                    <param name="registerShutdownInProgress" type="boolean"/>
                    <param name="hook" type="Runnable"/>
                </params>
                <scope line="44">
                    <scope line="46"/>
                    <scope line="49"/>
                </scope>
            </method>
            <method name="runHooks" type="void" line="55">
                <scope line="56">
                    <scope line="57">
                        <declaration name="hook" type="Runnable" line="58"/>
                        <scope line="59"/>
                    </scope>
                    <scope line="65">
                        <scope line="66">
                            <declaration name="td" type="ThreadDeath" line="67"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="halt" type="void" line="73">
                <params>
                    <param name="status" type="int"/>
                </params>
                <scope line="74"/>
            </method>
            <method name="halt0" type="void" line="78"/>
            <method name="runAllFinalizers" type="void" line="79"/>
            <method name="sequence" type="void" line="80">
                <scope line="81"/>
                <declaration name="rfoe" type="boolean" line="85"/>
                <scope line="86"/>
            </method>
            <method name="exit" type="void" line="92">
                <params>
                    <param name="status" type="int"/>
                </params>
                <declaration name="runMoreFinalizers" type="boolean" line="93"/>
                <scope line="94">
                    <scope line="103"/>
                    <scope line="106"/>
                </scope>
                <scope line="112"/>
                <scope line="116"/>
            </method>
            <method name="shutdown" type="void" line="121">
                <scope line="122"/>
                <scope line="132"/>
            </method>
        </class>
    </source>