<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.lang.ref">
        <import package="java.security.PrivilegedAction"/>
        <import package="java.security.AccessController"/>
        <class name="Finalizer" line="32">
            <extends class="FinalReference"/>
            <comment line="33">
                final class Finalizer extends FinalReference {  Package-private; must be in
                same package as the Reference                
            </comment>
            <comment line="37">
                A native method that invokes an arbitrary object&apos;s finalize method is
                required since the finalize method is protected                
            </comment>
            <comment line="89">
                                
            </comment>
            <comment line="111">
                Create a privileged secondary finalizer thread in the system thread
                group for the given Runnable, and wait for it to complete.
                
                This method is used by both runFinalization and runFinalizersOnExit.
                The former method invokes all pending finalizers, while the latter
                invokes all uninvoked finalizers if on-exit finalization has been
                enabled.
                
                These two methods could have been implemented by offloading their work
                to the regular finalizer thread and waiting for that thread to finish.
                The advantage of creating a fresh thread, however, is that it insulates
                invokers of these methods from a stalled or deadlocked finalizer thread.                
            </comment>
            <comment line="143">
                                
            </comment>
            <comment line="156">
                                
            </comment>
            <method name="invokeFinalizeMethod" type="void" line="39"/>
            <declaration name="queue" type="ReferenceQueue" line="41"/>
            <declaration name="unfinalized" type="Finalizer" line="42"/>
            <declaration name="lock" type="Object" line="43"/>
            <declaration name="next" type="Finalizer" line="45"/>
            <method name="hasBeenFinalized" type="boolean" line="49"/>
            <method name="add" type="void" line="53">
                <scope line="54">
                    <scope line="55"/>
                </scope>
            </method>
            <method name="remove" type="void" line="63">
                <comment line="78">
                                        
                </comment>
                <scope line="64">
                    <scope line="65">
                        <scope line="66"/>
                        <scope line="68"/>
                    </scope>
                    <scope line="72"/>
                    <scope line="75"/>
                </scope>
            </method>
            <method name="Finalizer" type="constructor" line="83">
                <params>
                    <param name="finalizee" type="Object"/>
                </params>
            </method>
            <method name="register" type="void" line="89">
                <params>
                    <param name="finalizee" type="Object"/>
                </params>
            </method>
            <method name="runFinalizer" type="void" line="93">
                <comment line="102">
                    Clear stack slot containing this variable, to decrease                    
                </comment>
                <scope line="94"/>
                <scope line="98">
                    <declaration name="finalizee" type="Object" line="99"/>
                    <scope line="100"/>
                </scope>
                <scope line="106"/>
            </method>
            <method name="forkSecondaryFinalizer" type="void" line="123">
                <params>
                    <param name="proc" type="Runnable"/>
                </params>
                <comment line="136">
                                        
                </comment>
                <anonymous_class line="125">
                    <method name="run" type="Void" line="126">
                        <comment line="136">
                                                        
                        </comment>
                        <declaration name="tg" type="ThreadGroup" line="127"/>
                        <declaration name="sft" type="Thread" line="131"/>
                        <scope line="133"/>
                        <scope line="135"/>
                    </method>
                </anonymous_class>
            </method>
            <method name="runFinalization" type="void" line="143">
                <anonymous_class line="144">
                    <method name="run" type="void" line="145">
                        <scope line="146">
                            <declaration name="f" type="Finalizer" line="147"/>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <method name="runAllFinalizers" type="void" line="156">
                <anonymous_class line="157">
                    <method name="run" type="void" line="158">
                        <scope line="159">
                            <declaration name="f" type="Finalizer" line="160"/>
                            <scope line="161"/>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <class name="FinalizerThread" line="170">
                <extends class="Thread"/>
                <method name="FinalizerThread" type="constructor" line="171">
                    <params>
                        <param name="g" type="ThreadGroup"/>
                    </params>
                </method>
                <method name="run" type="void" line="174">
                    <scope line="175">
                        <scope line="176">
                            <declaration name="f" type="Finalizer" line="177"/>
                        </scope>
                        <scope line="179"/>
                    </scope>
                </method>
            </class>
            <scope line="186">
                <declaration name="tg" type="ThreadGroup" line="187"/>
                <declaration name="finalizer" type="Thread" line="191"/>
            </scope>
        </class>
    </source>