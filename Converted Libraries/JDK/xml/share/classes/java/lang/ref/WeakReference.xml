<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.lang.ref">
        <class name="WeakReference" line="2">
            <type_params>
                <type_param name="T"/>
            </type_params>
            <extends class="Reference">
                <type_params>
                    <type_param name="T"/>
                </type_params>
            </extends>
            <javadoc line="2">
                Weak reference objects, which do not prevent their referents from being
                  made finalizable, finalized, and then reclaimed.  Weak references are most
                  often used to implement canonicalizing mappings.
                  &lt;p&gt; Suppose that the garbage collector determines at a certain point in time
                  that an object is &lt;a href=&quot;package-summary.html#reachability&quot;&gt;weakly
                  reachable&lt;/a&gt;.  At that time it will atomically clear all weak references to
                  that object and all weak references to any other weakly-reachable objects
                  from which that object is reachable through a chain of strong and soft
                  references.  At the same time it will declare all of the formerly
                  weakly-reachable objects to be finalizable.  At the same time or at some
                  later time it will enqueue those newly-cleared weak references that are
                  registered with reference queues.                
                <author>
                    Mark Reinhold                    
                </author>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <javadoc line="19">
                Creates a new weak reference that refers to the given object.  The new
                  reference is not registered with any queue.                
                <param>
                    referent object the new weak reference will refer to                    
                </param>
            </javadoc>
            <method name="WeakReference" type="constructor" line="24">
                <params>
                    <param name="referent" type="T"/>
                </params>
            </method>
            <javadoc line="27">
                Creates a new weak reference that refers to the given object and is
                  registered with the given queue.                
                <param>
                    referent object the new weak reference will refer to                    
                </param>
                <param>
                    q the queue with which the reference is to be registered,
                      or &lt;tt&gt;null&lt;/tt&gt; if registration is not required                    
                </param>
            </javadoc>
            <method name="WeakReference" type="constructor" line="34">
                <params>
                    <param name="referent" type="T"/>
                    <param name="q" type="ReferenceQueue&lt;? super T&gt;"/>
                </params>
            </method>
        </class>
    </source>