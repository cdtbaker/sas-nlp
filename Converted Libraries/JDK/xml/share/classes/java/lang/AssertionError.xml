<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.lang">
        <class name="AssertionError" line="28">
            <extends class="Error"/>
            <javadoc line="28">
                Thrown to indicate that an assertion has failed.
                  &lt;p&gt;The seven one-argument public constructors provided by this
                  class ensure that the assertion error returned by the invocation:
                  &lt;pre&gt;
                  new AssertionError(&lt;i&gt;expression&lt;/i&gt;)
                  &lt;/pre&gt;
                  has as its detail message the &lt;i&gt;string conversion&lt;/i&gt; of
                  &lt;i&gt;expression&lt;/i&gt; (as defined in section 15.18.1.1 of
                  &lt;cite&gt;The Java&amp;trade; Language Specification&lt;/cite&gt;),
                  regardless of the type of &lt;i&gt;expression&lt;/i&gt;.                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="44"/>
            <javadoc line="46">
                Constructs an AssertionError with no detail message.                
            </javadoc>
            <method name="AssertionError" type="constructor" line="49"/>
            <javadoc line="52">
                This internal constructor does no processing on its string argument,
                  even if it is a null reference.  The public constructors will
                  never call this constructor with a null argument.                
            </javadoc>
            <method name="AssertionError" type="constructor" line="57">
                <params>
                    <param name="detailMessage" type="String"/>
                </params>
            </method>
            <javadoc line="61">
                Constructs an AssertionError with its detail message derived
                  from the specified object, which is converted to a string as
                  defined in section 15.18.1.1 of
                  &lt;cite&gt;The Java&amp;trade; Language Specification&lt;/cite&gt;.
                  &lt;p&gt;
                  If the specified object is an instance of {@code Throwable}, it
                  becomes the &lt;i&gt;cause&lt;/i&gt; of the newly constructed assertion error.                
                <param>
                    detailMessage value to be used in constructing detail message                    
                </param>
                <see>
                    Throwable#getCause()                    
                </see>
            </javadoc>
            <method name="AssertionError" type="constructor" line="73">
                <params>
                    <param name="detailMessage" type="Object"/>
                </params>
            </method>
            <javadoc line="79">
                Constructs an AssertionError with its detail message derived
                  from the specified &lt;code&gt;boolean&lt;/code&gt;, which is converted to
                  a string as defined in section 15.18.1.1 of
                  &lt;cite&gt;The Java&amp;trade; Language Specification&lt;/cite&gt;.                
                <param>
                    detailMessage value to be used in constructing detail message                    
                </param>
            </javadoc>
            <method name="AssertionError" type="constructor" line="87">
                <params>
                    <param name="detailMessage" type="boolean"/>
                </params>
            </method>
            <javadoc line="91">
                Constructs an AssertionError with its detail message derived
                  from the specified &lt;code&gt;char&lt;/code&gt;, which is converted to a
                  string as defined in section 15.18.1.1 of
                  &lt;cite&gt;The Java&amp;trade; Language Specification&lt;/cite&gt;.                
                <param>
                    detailMessage value to be used in constructing detail message                    
                </param>
            </javadoc>
            <method name="AssertionError" type="constructor" line="99">
                <params>
                    <param name="detailMessage" type="char"/>
                </params>
            </method>
            <javadoc line="103">
                Constructs an AssertionError with its detail message derived
                  from the specified &lt;code&gt;int&lt;/code&gt;, which is converted to a
                  string as defined in section 15.18.1.1 of
                  &lt;cite&gt;The Java&amp;trade; Language Specification&lt;/cite&gt;.                
                <param>
                    detailMessage value to be used in constructing detail message                    
                </param>
            </javadoc>
            <method name="AssertionError" type="constructor" line="111">
                <params>
                    <param name="detailMessage" type="int"/>
                </params>
            </method>
            <javadoc line="115">
                Constructs an AssertionError with its detail message derived
                  from the specified &lt;code&gt;long&lt;/code&gt;, which is converted to a
                  string as defined in section 15.18.1.1 of
                  &lt;cite&gt;The Java&amp;trade; Language Specification&lt;/cite&gt;.                
                <param>
                    detailMessage value to be used in constructing detail message                    
                </param>
            </javadoc>
            <method name="AssertionError" type="constructor" line="123">
                <params>
                    <param name="detailMessage" type="long"/>
                </params>
            </method>
            <javadoc line="127">
                Constructs an AssertionError with its detail message derived
                  from the specified &lt;code&gt;float&lt;/code&gt;, which is converted to a
                  string as defined in section 15.18.1.1 of
                  &lt;cite&gt;The Java&amp;trade; Language Specification&lt;/cite&gt;.                
                <param>
                    detailMessage value to be used in constructing detail message                    
                </param>
            </javadoc>
            <method name="AssertionError" type="constructor" line="135">
                <params>
                    <param name="detailMessage" type="float"/>
                </params>
            </method>
            <javadoc line="139">
                Constructs an AssertionError with its detail message derived
                  from the specified &lt;code&gt;double&lt;/code&gt;, which is converted to a
                  string as defined in section 15.18.1.1 of
                  &lt;cite&gt;The Java&amp;trade; Language Specification&lt;/cite&gt;.                
                <param>
                    detailMessage value to be used in constructing detail message                    
                </param>
            </javadoc>
            <method name="AssertionError" type="constructor" line="147">
                <params>
                    <param name="detailMessage" type="double"/>
                </params>
            </method>
            <javadoc line="151">
                Constructs a new {@code AssertionError} with the specified
                  detail message and cause.
                  &lt;p&gt;Note that the detail message associated with{@code cause} is &lt;i&gt;not&lt;/i&gt; automatically incorporated in
                  this error&apos;s detail message.                
                <param>
                    message the detail message, may be {@code null}                    
                </param>
                <param>
                    cause the cause, may be {@code null}                    
                </param>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="AssertionError" type="constructor" line="164">
                <params>
                    <param name="message" type="String"/>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
        </class>
    </source>