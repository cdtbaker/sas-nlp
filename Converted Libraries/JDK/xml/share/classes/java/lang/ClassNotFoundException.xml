<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.lang">
        <class name="ClassNotFoundException" line="28">
            <extends class="ReflectiveOperationException"/>
            <javadoc line="28">
                Thrown when an application tries to load in a class through its
                  string name using:
                  &lt;ul&gt;
                  &lt;li&gt;The &lt;code&gt;forName&lt;/code&gt; method in class &lt;code&gt;Class&lt;/code&gt;.
                  &lt;li&gt;The &lt;code&gt;findSystemClass&lt;/code&gt; method in class
                  &lt;code&gt;ClassLoader&lt;/code&gt; .
                  &lt;li&gt;The &lt;code&gt;loadClass&lt;/code&gt; method in class &lt;code&gt;ClassLoader&lt;/code&gt;.
                  &lt;/ul&gt;
                  &lt;p&gt;
                  but no definition for the class with the specified name could be found.
                  &lt;p&gt;As of release 1.4, this exception has been retrofitted to conform to
                  the general purpose exception-chaining mechanism.  The &quot;optional exception
                  that was raised while loading the class&quot; that may be provided at
                  construction time and accessed via the {@link #getException()} method is
                  now known as the &lt;i&gt;cause&lt;/i&gt;, and may be accessed via the {@link Throwable#getCause()} method, as well as the aforementioned &quot;legacy method.&quot;                
                <author>
                    unascribed                    
                </author>
                <see>
                    java.lang.Class#forName(java.lang.String)                    
                </see>
                <see>
                    java.lang.ClassLoader#findSystemClass(java.lang.String)                    
                </see>
                <see>
                    java.lang.ClassLoader#loadClass(java.lang.String,boolean)                    
                </see>
                <since>
                    JDK1.0                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="54"/>
            <javadoc line="54">
                use serialVersionUID from JDK 1.1.X for interoperability                
            </javadoc>
            <declaration name="ex" type="Throwable" line="59"/>
            <javadoc line="59">
                This field holds the exception ex if the
                  ClassNotFoundException(String s, Throwable ex) constructor was
                  used to instantiate the object                
                <serial>
                                        
                </serial>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <javadoc line="68">
                Constructs a &lt;code&gt;ClassNotFoundException&lt;/code&gt; with no detail message.                
            </javadoc>
            <method name="ClassNotFoundException" type="constructor" line="71">
                <comment line="72">
                    Disallow initCause                    
                </comment>
            </method>
            <javadoc line="75">
                Constructs a &lt;code&gt;ClassNotFoundException&lt;/code&gt; with the
                  specified detail message.                
                <param>
                    s   the detail message.                    
                </param>
            </javadoc>
            <method name="ClassNotFoundException" type="constructor" line="81">
                <params>
                    <param name="s" type="String"/>
                </params>
                <comment line="82">
                    Disallow initCause                    
                </comment>
            </method>
            <javadoc line="85">
                Constructs a &lt;code&gt;ClassNotFoundException&lt;/code&gt; with the
                  specified detail message and optional exception that was
                  raised while loading the class.                
                <param>
                    s the detail message                    
                </param>
                <param>
                    ex the exception that was raised while loading the class                    
                </param>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="ClassNotFoundException" type="constructor" line="94">
                <params>
                    <param name="s" type="String"/>
                    <param name="ex" type="Throwable"/>
                </params>
                <comment line="95">
                    Disallow initCause                    
                </comment>
            </method>
            <javadoc line="99">
                Returns the exception that was raised if an error occurred while
                  attempting to load the class. Otherwise, returns &lt;tt&gt;null&lt;/tt&gt;.
                  &lt;p&gt;This method predates the general-purpose exception chaining facility.
                  The {@link Throwable#getCause()} method is now the preferred means of
                  obtaining this information.                
                <return>
                    the <code>Exception</code> that was raised while loading a class                    
                </return>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="getException" type="Throwable" line="110"/>
            <javadoc line="114">
                Returns the cause of this exception (the exception that was raised
                  if an error occurred while attempting to load the class; otherwise
                  &lt;tt&gt;null&lt;/tt&gt;).                
                <return>
                    the cause of this exception.                    
                </return>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="getCause" type="Throwable" line="122"/>
        </class>
    </source>