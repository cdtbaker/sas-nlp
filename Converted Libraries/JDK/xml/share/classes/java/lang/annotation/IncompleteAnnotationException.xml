<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.lang.annotation">
        <class name="IncompleteAnnotationException" line="2">
            <extends class="RuntimeException"/>
            <javadoc line="2">
                Thrown to indicate that a program has attempted to access an element of
                  an annotation type that was added to the annotation type definition after
                  the annotation was compiled (or serialized).  This exception will not be
                  thrown if the new element has a default value.
                  This exception can be thrown by the {@linkplain java.lang.reflect.AnnotatedElement API used to read annotations
                  reflectively}.                
                <author>
                    Josh Bloch                    
                </author>
                <see>
                    java.lang.reflect.AnnotatedElement                    
                </see>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="14"/>
            <declaration name="annotationType" type="Class" line="15"/>
            <declaration name="elementName" type="String" line="16"/>
            <javadoc line="17">
                Constructs an IncompleteAnnotationException to indicate that
                  the named element was missing from the specified annotation type.                
                <param>
                    annotationType the Class object for the annotation type                    
                </param>
                <param>
                    elementName the name of the missing element                    
                </param>
            </javadoc>
            <method name="IncompleteAnnotationException" type="constructor" line="23">
                <params>
                    <param name="annotationType" type="Class&lt;? extends Annotation&gt;"/>
                    <param name="elementName" type="String"/>
                </params>
            </method>
            <javadoc line="28">
                Returns the Class object for the annotation type with the
                  missing element.                
                <return>
                    the Class object for the annotation type with the
                      missing element                    
                </return>
            </javadoc>
            <method name="annotationType" type="Class&lt;? extends Annotation&gt;" line="34"/>
            <javadoc line="37">
                Returns the name of the missing element.                
                <return>
                    the name of the missing element                    
                </return>
            </javadoc>
            <method name="elementName" type="String" line="41"/>
        </class>
    </source>