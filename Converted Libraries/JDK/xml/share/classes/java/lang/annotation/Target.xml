<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.lang.annotation">
        <javadoc line="28">
            Indicates the kinds of program element to which an annotation type
              is applicable.  If a Target meta-annotation is not present on an
              annotation type declaration, the declared type may be used on any
              program element.  If such a meta-annotation is present, the compiler
              will enforce the specified usage restriction.
              For example, this meta-annotation indicates that the declared type is
              itself a meta-annotation type.  It can only be used on annotation type
              declarations:
              &lt;pre&gt;
              &amp;#064;Target(ElementType.ANNOTATION_TYPE)
              public &amp;#064;interface MetaAnnotationType {
              ...
              }
              &lt;/pre&gt;
              This meta-annotation indicates that the declared type is intended solely
              for use as a member type in complex annotation type declarations.  It
              cannot be used to annotate anything directly:
              &lt;pre&gt;
              &amp;#064;Target({})
              public &amp;#064;interface MemberType {
              ...
              }
              &lt;/pre&gt;
              It is a compile-time error for a single ElementType constant to
              appear more than once in a Target annotation.  For example, the
              following meta-annotation is illegal:
              &lt;pre&gt;
              &amp;#064;Target({ElementType.FIELD, ElementType.METHOD, ElementType.FIELD})
              public &amp;#064;interface Bogus {
              ...
              }
              &lt;/pre&gt;            
        </javadoc>
    </source>