<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.lang.annotation">
        <class name="AnnotationFormatError" line="28">
            <extends class="Error"/>
            <javadoc line="28">
                Thrown when the annotation parser attempts to read an annotation
                  from a class file and determines that the annotation is malformed.
                  This error can be thrown by the {@linkplain java.lang.reflect.AnnotatedElement API used to read annotations
                  reflectively}.                
                <author>
                    Josh Bloch                    
                </author>
                <see>
                    java.lang.reflect.AnnotatedElement                    
                </see>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="40"/>
            <javadoc line="42">
                Constructs a new &lt;tt&gt;AnnotationFormatError&lt;/tt&gt; with the specified
                  detail message.                
                <param>
                    message   the detail message.                    
                </param>
            </javadoc>
            <method name="AnnotationFormatError" type="constructor" line="48">
                <params>
                    <param name="message" type="String"/>
                </params>
            </method>
            <javadoc line="52">
                Constructs a new &lt;tt&gt;AnnotationFormatError&lt;/tt&gt; with the specified
                  detail message and cause.  Note that the detail message associated
                  with &lt;code&gt;cause&lt;/code&gt; is &lt;i&gt;not&lt;/i&gt; automatically incorporated in
                  this error&apos;s detail message.                
                <param>
                    message the detail message                    
                </param>
                <param>
                    cause the cause (A &lt;tt&gt;null&lt;/tt&gt; value is permitted, and
                      indicates that the cause is nonexistent or unknown.)                    
                </param>
            </javadoc>
            <method name="AnnotationFormatError" type="constructor" line="62">
                <params>
                    <param name="message" type="String"/>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
            <javadoc line="67">
                Constructs a new &lt;tt&gt;AnnotationFormatError&lt;/tt&gt; with the specified
                  cause and a detail message of
                  &lt;tt&gt;(cause == null ? null : cause.toString())&lt;/tt&gt; (which
                  typically contains the class and detail message of &lt;tt&gt;cause&lt;/tt&gt;).                
                <param>
                    cause the cause (A &lt;tt&gt;null&lt;/tt&gt; value is permitted, and
                      indicates that the cause is nonexistent or unknown.)                    
                </param>
            </javadoc>
            <method name="AnnotationFormatError" type="constructor" line="76">
                <params>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
        </class>
    </source>