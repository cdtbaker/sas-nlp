<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.lang">
        <interface name="Runnable">
            <javadoc line="28">
                The &lt;code&gt;Runnable&lt;/code&gt; interface should be implemented by any
                  class whose instances are intended to be executed by a thread. The
                  class must define a method of no arguments called &lt;code&gt;run&lt;/code&gt;.
                  &lt;p&gt;
                  This interface is designed to provide a common protocol for objects that
                  wish to execute code while they are active. For example,
                  &lt;code&gt;Runnable&lt;/code&gt; is implemented by class &lt;code&gt;Thread&lt;/code&gt;.
                  Being active simply means that a thread has been started and has not
                  yet been stopped.
                  &lt;p&gt;
                  In addition, &lt;code&gt;Runnable&lt;/code&gt; provides the means for a class to be
                  active while not subclassing &lt;code&gt;Thread&lt;/code&gt;. A class that implements
                  &lt;code&gt;Runnable&lt;/code&gt; can run without subclassing &lt;code&gt;Thread&lt;/code&gt;
                  by instantiating a &lt;code&gt;Thread&lt;/code&gt; instance and passing itself in
                  as the target.  In most cases, the &lt;code&gt;Runnable&lt;/code&gt; interface should
                  be used if you are only planning to override the &lt;code&gt;run()&lt;/code&gt;
                  method and no other &lt;code&gt;Thread&lt;/code&gt; methods.
                  This is important because classes should not be subclassed
                  unless the programmer intends on modifying or enhancing the fundamental
                  behavior of the class.                
                <author>
                    Arthur van Hoff                    
                </author>
                <see>
                    java.lang.Thread                    
                </see>
                <see>
                    java.util.concurrent.Callable                    
                </see>
                <since>
                    JDK1.0                    
                </since>
            </javadoc>
            <method name="run" type="void" line="57"/>
            <javadoc line="57">
                When an object implementing interface &lt;code&gt;Runnable&lt;/code&gt; is used
                  to create a thread, starting the thread causes the object&apos;s
                  &lt;code&gt;run&lt;/code&gt; method to be called in that separately executing
                  thread.
                  &lt;p&gt;
                  The general contract of the method &lt;code&gt;run&lt;/code&gt; is that it may
                  take any action whatsoever.                
                <see>
                    java.lang.Thread#run()                    
                </see>
            </javadoc>
        </interface>
    </source>