<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.math">
        <javadoc line="31">
            Specifies a &lt;i&gt;rounding behavior&lt;/i&gt; for numerical operations
              capable of discarding precision. Each rounding mode indicates how
              the least significant returned digit of a rounded result is to be
              calculated.  If fewer digits are returned than the digits needed to
              represent the exact numerical result, the discarded digits will be
              referred to as the &lt;i&gt;discarded fraction&lt;/i&gt; regardless the digits&apos;
              contribution to the value of the number.  In other words,
              considered as a numerical value, the discarded fraction could have
              an absolute value greater than one.
              &lt;p&gt;Each rounding mode description includes a table listing how
              different two-digit decimal values would round to a one digit
              decimal value under the rounding mode in question.  The result
              column in the tables could be gotten by creating a{@code BigDecimal} number with the specified value, forming a{@link MathContext} object with the proper settings
              ({@code precision} set to {@code 1}, and the{@code roundingMode} set to the rounding mode in question), and
              calling {@link BigDecimal#round round} on this number with the
              proper {@code MathContext}.  A summary table showing the results
              of these rounding operations for all rounding modes appears below.
              &lt;p&gt;
              &lt;table border&gt;
              &lt;caption&gt;&lt;b&gt;Summary of Rounding Operations Under Different Rounding Modes&lt;/b&gt;&lt;/caption&gt;
              &lt;tr&gt;&lt;th&gt;&lt;/th&gt;&lt;th colspan=8&gt;Result of rounding input to one digit with the given
              rounding mode&lt;/th&gt;
              &lt;tr valign=top&gt;
              &lt;th&gt;Input Number&lt;/th&gt;         &lt;th&gt;{@code UP}&lt;/th&gt;
              &lt;th&gt;{@code DOWN}&lt;/th&gt;
              &lt;th&gt;{@code CEILING}&lt;/th&gt;
              &lt;th&gt;{@code FLOOR}&lt;/th&gt;
              &lt;th&gt;{@code HALF_UP}&lt;/th&gt;
              &lt;th&gt;{@code HALF_DOWN}&lt;/th&gt;
              &lt;th&gt;{@code HALF_EVEN}&lt;/th&gt;
              &lt;th&gt;{@code UNNECESSARY}&lt;/th&gt;
              &lt;tr align=right&gt;&lt;td&gt;5.5&lt;/td&gt;  &lt;td&gt;6&lt;/td&gt;  &lt;td&gt;5&lt;/td&gt;    &lt;td&gt;6&lt;/td&gt;    &lt;td&gt;5&lt;/td&gt;  &lt;td&gt;6&lt;/td&gt;      &lt;td&gt;5&lt;/td&gt;       &lt;td&gt;6&lt;/td&gt;       &lt;td&gt;throw {@code ArithmeticException}&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;2.5&lt;/td&gt;  &lt;td&gt;3&lt;/td&gt;  &lt;td&gt;2&lt;/td&gt;    &lt;td&gt;3&lt;/td&gt;    &lt;td&gt;2&lt;/td&gt;  &lt;td&gt;3&lt;/td&gt;      &lt;td&gt;2&lt;/td&gt;       &lt;td&gt;2&lt;/td&gt;       &lt;td&gt;throw {@code ArithmeticException}&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.6&lt;/td&gt;  &lt;td&gt;2&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;    &lt;td&gt;2&lt;/td&gt;    &lt;td&gt;1&lt;/td&gt;  &lt;td&gt;2&lt;/td&gt;      &lt;td&gt;2&lt;/td&gt;       &lt;td&gt;2&lt;/td&gt;       &lt;td&gt;throw {@code ArithmeticException}&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.1&lt;/td&gt;  &lt;td&gt;2&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;    &lt;td&gt;2&lt;/td&gt;    &lt;td&gt;1&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;       &lt;td&gt;1&lt;/td&gt;       &lt;td&gt;throw {@code ArithmeticException}&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.0&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;    &lt;td&gt;1&lt;/td&gt;    &lt;td&gt;1&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;       &lt;td&gt;1&lt;/td&gt;       &lt;td&gt;1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.0&lt;/td&gt; &lt;td&gt;-1&lt;/td&gt; &lt;td&gt;-1&lt;/td&gt;   &lt;td&gt;-1&lt;/td&gt;   &lt;td&gt;-1&lt;/td&gt; &lt;td&gt;-1&lt;/td&gt;     &lt;td&gt;-1&lt;/td&gt;      &lt;td&gt;-1&lt;/td&gt;      &lt;td&gt;-1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.1&lt;/td&gt; &lt;td&gt;-2&lt;/td&gt; &lt;td&gt;-1&lt;/td&gt;   &lt;td&gt;-1&lt;/td&gt;   &lt;td&gt;-2&lt;/td&gt; &lt;td&gt;-1&lt;/td&gt;     &lt;td&gt;-1&lt;/td&gt;      &lt;td&gt;-1&lt;/td&gt;      &lt;td&gt;throw {@code ArithmeticException}&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.6&lt;/td&gt; &lt;td&gt;-2&lt;/td&gt; &lt;td&gt;-1&lt;/td&gt;   &lt;td&gt;-1&lt;/td&gt;   &lt;td&gt;-2&lt;/td&gt; &lt;td&gt;-2&lt;/td&gt;     &lt;td&gt;-2&lt;/td&gt;      &lt;td&gt;-2&lt;/td&gt;      &lt;td&gt;throw {@code ArithmeticException}&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-2.5&lt;/td&gt; &lt;td&gt;-3&lt;/td&gt; &lt;td&gt;-2&lt;/td&gt;   &lt;td&gt;-2&lt;/td&gt;   &lt;td&gt;-3&lt;/td&gt; &lt;td&gt;-3&lt;/td&gt;     &lt;td&gt;-2&lt;/td&gt;      &lt;td&gt;-2&lt;/td&gt;      &lt;td&gt;throw {@code ArithmeticException}&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-5.5&lt;/td&gt; &lt;td&gt;-6&lt;/td&gt; &lt;td&gt;-5&lt;/td&gt;   &lt;td&gt;-5&lt;/td&gt;   &lt;td&gt;-6&lt;/td&gt; &lt;td&gt;-6&lt;/td&gt;     &lt;td&gt;-5&lt;/td&gt;      &lt;td&gt;-6&lt;/td&gt;      &lt;td&gt;throw {@code ArithmeticException}&lt;/td&gt;
              &lt;/table&gt;
              &lt;p&gt;This {@code enum} is intended to replace the integer-based
              enumeration of rounding mode constants in {@link BigDecimal}({@link BigDecimal#ROUND_UP}, {@link BigDecimal#ROUND_DOWN},
              etc. ).            
            <see>
                BigDecimal                
            </see>
            <see>
                MathContext                
            </see>
            <author>
                Josh Bloch                
            </author>
            <author>
                Mike Cowlishaw                
            </author>
            <author>
                Joseph D. Darcy                
            </author>
            <since>
                1.5                
            </since>
        </javadoc>
        <javadoc line="96">
            Rounding mode to round away from zero.  Always increments the
              digit prior to a non-zero discarded fraction.  Note that this
              rounding mode never decreases the magnitude of the calculated
              value.
              &lt;p&gt;Example:
              &lt;table border&gt;
              &lt;tr valign=top&gt;&lt;th&gt;Input Number&lt;/th&gt;
              &lt;th&gt;Input rounded to one digit&lt;br&gt; with {@code UP} rounding
              &lt;tr align=right&gt;&lt;td&gt;5.5&lt;/td&gt;  &lt;td&gt;6&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;2.5&lt;/td&gt;  &lt;td&gt;3&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.6&lt;/td&gt;  &lt;td&gt;2&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.1&lt;/td&gt;  &lt;td&gt;2&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.0&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.0&lt;/td&gt; &lt;td&gt;-1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.1&lt;/td&gt; &lt;td&gt;-2&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.6&lt;/td&gt; &lt;td&gt;-2&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-2.5&lt;/td&gt; &lt;td&gt;-3&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-5.5&lt;/td&gt; &lt;td&gt;-6&lt;/td&gt;
              &lt;/table&gt;            
        </javadoc>
        <javadoc line="120">
            Rounding mode to round towards zero.  Never increments the digit
              prior to a discarded fraction (i.e., truncates).  Note that this
              rounding mode never increases the magnitude of the calculated value.
              &lt;p&gt;Example:
              &lt;table border&gt;
              &lt;tr valign=top&gt;&lt;th&gt;Input Number&lt;/th&gt;
              &lt;th&gt;Input rounded to one digit&lt;br&gt; with {@code DOWN} rounding
              &lt;tr align=right&gt;&lt;td&gt;5.5&lt;/td&gt;  &lt;td&gt;5&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;2.5&lt;/td&gt;  &lt;td&gt;2&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.6&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.1&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.0&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.0&lt;/td&gt; &lt;td&gt;-1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.1&lt;/td&gt; &lt;td&gt;-1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.6&lt;/td&gt; &lt;td&gt;-1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-2.5&lt;/td&gt; &lt;td&gt;-2&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-5.5&lt;/td&gt; &lt;td&gt;-5&lt;/td&gt;
              &lt;/table&gt;            
        </javadoc>
        <javadoc line="143">
            Rounding mode to round towards positive infinity.  If the
              result is positive, behaves as for {@code RoundingMode.UP};
              if negative, behaves as for {@code RoundingMode.DOWN}.  Note
              that this rounding mode never decreases the calculated value.
              &lt;p&gt;Example:
              &lt;table border&gt;
              &lt;tr valign=top&gt;&lt;th&gt;Input Number&lt;/th&gt;
              &lt;th&gt;Input rounded to one digit&lt;br&gt; with {@code CEILING} rounding
              &lt;tr align=right&gt;&lt;td&gt;5.5&lt;/td&gt;  &lt;td&gt;6&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;2.5&lt;/td&gt;  &lt;td&gt;3&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.6&lt;/td&gt;  &lt;td&gt;2&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.1&lt;/td&gt;  &lt;td&gt;2&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.0&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.0&lt;/td&gt; &lt;td&gt;-1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.1&lt;/td&gt; &lt;td&gt;-1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.6&lt;/td&gt; &lt;td&gt;-1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-2.5&lt;/td&gt; &lt;td&gt;-2&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-5.5&lt;/td&gt; &lt;td&gt;-5&lt;/td&gt;
              &lt;/table&gt;            
        </javadoc>
        <javadoc line="167">
            Rounding mode to round towards negative infinity.  If the
              result is positive, behave as for {@code RoundingMode.DOWN};
              if negative, behave as for {@code RoundingMode.UP}.  Note that
              this rounding mode never increases the calculated value.
              &lt;p&gt;Example:
              &lt;table border&gt;
              &lt;tr valign=top&gt;&lt;th&gt;Input Number&lt;/th&gt;
              &lt;th&gt;Input rounded to one digit&lt;br&gt; with {@code FLOOR} rounding
              &lt;tr align=right&gt;&lt;td&gt;5.5&lt;/td&gt;  &lt;td&gt;5&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;2.5&lt;/td&gt;  &lt;td&gt;2&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.6&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.1&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.0&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.0&lt;/td&gt; &lt;td&gt;-1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.1&lt;/td&gt; &lt;td&gt;-2&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.6&lt;/td&gt; &lt;td&gt;-2&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-2.5&lt;/td&gt; &lt;td&gt;-3&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-5.5&lt;/td&gt; &lt;td&gt;-6&lt;/td&gt;
              &lt;/table&gt;            
        </javadoc>
        <javadoc line="191">
            Rounding mode to round towards {@literal &quot;nearest neighbor&quot;}unless both neighbors are equidistant, in which case round up.
              Behaves as for {@code RoundingMode.UP} if the discarded
              fraction is &amp;ge; 0.5; otherwise, behaves as for{@code RoundingMode.DOWN}.  Note that this is the rounding
              mode commonly taught at school.
              &lt;p&gt;Example:
              &lt;table border&gt;
              &lt;tr valign=top&gt;&lt;th&gt;Input Number&lt;/th&gt;
              &lt;th&gt;Input rounded to one digit&lt;br&gt; with {@code HALF_UP} rounding
              &lt;tr align=right&gt;&lt;td&gt;5.5&lt;/td&gt;  &lt;td&gt;6&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;2.5&lt;/td&gt;  &lt;td&gt;3&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.6&lt;/td&gt;  &lt;td&gt;2&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.1&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.0&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.0&lt;/td&gt; &lt;td&gt;-1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.1&lt;/td&gt; &lt;td&gt;-1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.6&lt;/td&gt; &lt;td&gt;-2&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-2.5&lt;/td&gt; &lt;td&gt;-3&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-5.5&lt;/td&gt; &lt;td&gt;-6&lt;/td&gt;
              &lt;/table&gt;            
        </javadoc>
        <javadoc line="217">
            Rounding mode to round towards {@literal &quot;nearest neighbor&quot;}unless both neighbors are equidistant, in which case round
              down.  Behaves as for {@code RoundingMode.UP} if the discarded
              fraction is &amp;gt; 0.5; otherwise, behaves as for{@code RoundingMode.DOWN}.
              &lt;p&gt;Example:
              &lt;table border&gt;
              &lt;tr valign=top&gt;&lt;th&gt;Input Number&lt;/th&gt;
              &lt;th&gt;Input rounded to one digit&lt;br&gt; with {@code HALF_DOWN} rounding
              &lt;tr align=right&gt;&lt;td&gt;5.5&lt;/td&gt;  &lt;td&gt;5&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;2.5&lt;/td&gt;  &lt;td&gt;2&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.6&lt;/td&gt;  &lt;td&gt;2&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.1&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.0&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.0&lt;/td&gt; &lt;td&gt;-1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.1&lt;/td&gt; &lt;td&gt;-1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.6&lt;/td&gt; &lt;td&gt;-2&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-2.5&lt;/td&gt; &lt;td&gt;-2&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-5.5&lt;/td&gt; &lt;td&gt;-5&lt;/td&gt;
              &lt;/table&gt;            
        </javadoc>
        <javadoc line="242">
            Rounding mode to round towards the {@literal &quot;nearest neighbor&quot;}unless both neighbors are equidistant, in which case, round
              towards the even neighbor.  Behaves as for{@code RoundingMode.HALF_UP} if the digit to the left of the
              discarded fraction is odd; behaves as for{@code RoundingMode.HALF_DOWN} if it&apos;s even.  Note that this
              is the rounding mode that statistically minimizes cumulative
              error when applied repeatedly over a sequence of calculations.
              It is sometimes known as {@literal &quot;Banker&apos;s rounding,&quot;} and is
              chiefly used in the USA.  This rounding mode is analogous to
              the rounding policy used for {@code float} and {@code double}arithmetic in Java.
              &lt;p&gt;Example:
              &lt;table border&gt;
              &lt;tr valign=top&gt;&lt;th&gt;Input Number&lt;/th&gt;
              &lt;th&gt;Input rounded to one digit&lt;br&gt; with {@code HALF_EVEN} rounding
              &lt;tr align=right&gt;&lt;td&gt;5.5&lt;/td&gt;  &lt;td&gt;6&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;2.5&lt;/td&gt;  &lt;td&gt;2&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.6&lt;/td&gt;  &lt;td&gt;2&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.1&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.0&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.0&lt;/td&gt; &lt;td&gt;-1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.1&lt;/td&gt; &lt;td&gt;-1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.6&lt;/td&gt; &lt;td&gt;-2&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-2.5&lt;/td&gt; &lt;td&gt;-2&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-5.5&lt;/td&gt; &lt;td&gt;-6&lt;/td&gt;
              &lt;/table&gt;            
        </javadoc>
        <javadoc line="274">
            Rounding mode to assert that the requested operation has an exact
              result, hence no rounding is necessary.  If this rounding mode is
              specified on an operation that yields an inexact result, an{@code ArithmeticException} is thrown.
              &lt;p&gt;Example:
              &lt;table border&gt;
              &lt;tr valign=top&gt;&lt;th&gt;Input Number&lt;/th&gt;
              &lt;th&gt;Input rounded to one digit&lt;br&gt; with {@code UNNECESSARY} rounding
              &lt;tr align=right&gt;&lt;td&gt;5.5&lt;/td&gt;  &lt;td&gt;throw {@code ArithmeticException}&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;2.5&lt;/td&gt;  &lt;td&gt;throw {@code ArithmeticException}&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.6&lt;/td&gt;  &lt;td&gt;throw {@code ArithmeticException}&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.1&lt;/td&gt;  &lt;td&gt;throw {@code ArithmeticException}&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;1.0&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.0&lt;/td&gt; &lt;td&gt;-1&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.1&lt;/td&gt; &lt;td&gt;throw {@code ArithmeticException}&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-1.6&lt;/td&gt; &lt;td&gt;throw {@code ArithmeticException}&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-2.5&lt;/td&gt; &lt;td&gt;throw {@code ArithmeticException}&lt;/td&gt;
              &lt;tr align=right&gt;&lt;td&gt;-5.5&lt;/td&gt; &lt;td&gt;throw {@code ArithmeticException}&lt;/td&gt;
              &lt;/table&gt;            
        </javadoc>
        <declaration name="oldMode" type="int" line="298"/>
        <javadoc line="300">
            Constructor            
            <param>
                oldMode The {@code BigDecimal} constant corresponding to
                  this mode                
            </param>
        </javadoc>
        <method name="RoundingMode" type="constructor" line="306">
            <params>
                <param name="oldMode" type="int"/>
            </params>
        </method>
        <javadoc line="310">
            Returns the {@code RoundingMode} object corresponding to a
              legacy integer rounding mode constant in {@link BigDecimal}.            
            <param>
                rm legacy integer rounding mode to convert                
            </param>
            <return>
                {@code RoundingMode} corresponding to the given integer.                
            </return>
            <throws>
                IllegalArgumentException integer is out of range                
            </throws>
        </javadoc>
        <method name="valueOf" type="RoundingMode" line="318">
            <params>
                <param name="rm" type="int"/>
            </params>
        </method>
    </source>