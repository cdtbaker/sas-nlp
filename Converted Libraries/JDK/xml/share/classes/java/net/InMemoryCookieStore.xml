<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.net">
        <import package="java.net.URI"/>
        <import package="java.net.CookieStore"/>
        <import package="java.net.HttpCookie"/>
        <import package="java.net.URISyntaxException"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Collections"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.concurrent.locks.ReentrantLock"/>
        <class name="InMemoryCookieStore" line="40">
            <comment line="48">
                the in-memory representation of cookies                
            </comment>
            <comment line="51">
                the cookies are indexed by its domain and associated uri (if present)                
            </comment>
            <comment line="52">
                CAUTION: when a cookie removed from main data structure (i.e. cookieJar),                
            </comment>
            <comment line="53">
                it won&apos;t be cleared in domainIndex &amp; uriIndex. Double-check the                
            </comment>
            <comment line="54">
                presence of cookie when retrieve one form index store.                
            </comment>
            <comment line="58">
                use ReentrantLock instead of syncronized for scalability                
            </comment>
            <comment line="220">
                                
            </comment>
            <comment line="223">
                This is almost the same as HttpCookie.domainMatches except for
                 one difference: It won&apos;t reject cookies when the &apos;H&apos; part of the
                 domain contains a dot (&apos;.&apos;).
                 I.E.: RFC 2965 section 3.3.2 says that if host is x.y.domain.com
                 and the cookie domain is .domain.com, then it should be rejected.
                 However that&apos;s not how the real world works. Browsers don&apos;t reject and
                 some sites, like yahoo.com do actually expect these cookies to be
                 passed along.
                 And should be used for &apos;old&apos; style cookies (aka Netscape type of cookies)                
            </comment>
            <comment line="316">
                @param cookies           [OUT] contains the found cookies                
            </comment>
            <comment line="317">
                @param cookieIndex       the index                
            </comment>
            <comment line="318">
                @param comparator        the prediction to decide whether or not                
            </comment>
            <comment line="319">
                a cookie in index should be returned                
            </comment>
            <comment line="354">
                add &apos;cookie&apos; indexed by &apos;index&apos; into &apos;indexStore&apos;                
            </comment>
            <comment line="375">
                                
            </comment>
            <comment line="376">
                for cookie purpose, the effective uri should only be http://host                
            </comment>
            <comment line="377">
                the path will be taken into account when path-match algorithm applied                
            </comment>
            <comment line="378">
                                
            </comment>
            <implements interface="CookieStore"/>
            <javadoc line="40">
                A simple in-memory java.net.CookieStore implementation                
                <author>
                    Edward Wang                    
                </author>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="cookieJar" type="List&lt;HttpCookie&gt;" line="48"/>
            <declaration name="domainIndex" type="Map&lt;String,List&lt;HttpCookie&gt;&gt;" line="54"/>
            <declaration name="uriIndex" type="Map&lt;URI,List&lt;HttpCookie&gt;&gt;" line="55"/>
            <declaration name="lock" type="ReentrantLock" line="58"/>
            <javadoc line="61">
                The default ctor                
            </javadoc>
            <method name="InMemoryCookieStore" type="constructor" line="64"/>
            <javadoc line="72">
                Add one cookie into cookie store.                
            </javadoc>
            <method name="add" type="void" line="75">
                <params>
                    <param name="uri" type="URI"/>
                    <param name="cookie" type="HttpCookie"/>
                </params>
                <comment line="76">
                    pre-condition : argument can&apos;t be null                    
                </comment>
                <comment line="84">
                    remove the ole cookie if there has had one                    
                </comment>
                <comment line="87">
                    add new cookie if it has a non-zero max-age                    
                </comment>
                <comment line="90">
                    and add it to domain index                    
                </comment>
                <comment line="94">
                    add it to uri index, too                    
                </comment>
                <scope line="77"/>
                <scope line="83">
                    <scope line="88">
                        <scope line="91"/>
                    </scope>
                </scope>
                <scope line="97"/>
            </method>
            <javadoc line="103">
                Get all cookies, which:
                  1) given uri domain-matches with, or, associated with
                  given uri when added to the cookie store.
                  3) not expired.
                  See RFC 2965 sec. 3.3.4 for more detail.                
            </javadoc>
            <method name="get" type="List<HttpCookie>" line="110">
                <params>
                    <param name="uri" type="URI"/>
                </params>
                <comment line="111">
                    argument can&apos;t be null                    
                </comment>
                <comment line="120">
                    check domainIndex first                    
                </comment>
                <comment line="122">
                    check uriIndex then                    
                </comment>
                <scope line="112"/>
                <declaration name="cookies" type="List&lt;HttpCookie&gt;" line="116"/>
                <declaration name="secureLink" type="boolean" line="117"/>
                <scope line="119"/>
                <scope line="124"/>
            </method>
            <javadoc line="131">
                Get all cookies in cookie store, except those have expired                
            </javadoc>
            <method name="getCookies" type="List<HttpCookie>" line="134">
                <declaration name="rt" type="List&lt;HttpCookie&gt;" line="135"/>
                <scope line="138">
                    <declaration name="it" type="Iterator&lt;HttpCookie&gt;" line="139"/>
                    <scope line="140">
                        <scope line="141"/>
                    </scope>
                </scope>
                <scope line="145"/>
            </method>
            <javadoc line="153">
                Get all URIs, which are associated with at least one cookie
                  of this cookie store.                
            </javadoc>
            <method name="getURIs" type="List<URI>" line="157">
                <comment line="167">
                    no cookies list or an empty list associated with                    
                </comment>
                <comment line="168">
                    this uri entry, delete it                    
                </comment>
                <declaration name="uris" type="List&lt;URI&gt;" line="158"/>
                <scope line="161">
                    <declaration name="it" type="Iterator&lt;URI&gt;" line="162"/>
                    <scope line="163">
                        <declaration name="uri" type="URI" line="164"/>
                        <declaration name="cookies" type="List&lt;HttpCookie&gt;" line="165"/>
                        <scope line="166"/>
                    </scope>
                </scope>
                <scope line="172"/>
            </method>
            <javadoc line="181">
                Remove a cookie from store                
            </javadoc>
            <method name="remove" type="boolean" line="184">
                <params>
                    <param name="uri" type="URI"/>
                    <param name="ck" type="HttpCookie"/>
                </params>
                <comment line="185">
                    argument can&apos;t be null                    
                </comment>
                <scope line="186"/>
                <declaration name="modified" type="boolean" line="190"/>
                <scope line="192"/>
                <scope line="194"/>
            </method>
            <javadoc line="202">
                Remove all cookies in this cookie store.                
            </javadoc>
            <method name="removeAll" type="boolean" line="205">
                <scope line="207"/>
                <scope line="211"/>
            </method>
            <method name="netscapeDomainMatches" type="boolean" line="234">
                <params>
                    <param name="domain" type="String"/>
                    <param name="host" type="String"/>
                </params>
                <comment line="239">
                    if there&apos;s no embedded dot in domain and domain is not .local                    
                </comment>
                <comment line="249">
                    if the host name contains no dot and the domain name is .local                    
                </comment>
                <comment line="258">
                    if the host name and the domain name are just string-compare euqal                    
                </comment>
                <comment line="261">
                    need to check H &amp; D component                    
                </comment>
                <comment line="267">
                    if domain is actually .host                    
                </comment>
                <scope line="235"/>
                <declaration name="isLocalDomain" type="boolean" line="240"/>
                <declaration name="embeddedDotInDomain" type="int" line="241"/>
                <scope line="242"/>
                <scope line="245"/>
                <declaration name="firstDotInHost" type="int" line="250"/>
                <scope line="251"/>
                <declaration name="domainLength" type="int" line="255"/>
                <declaration name="lengthDiff" type="int" line="256"/>
                <scope line="257"/>
                <scope line="260">
                    <declaration name="H" type="String" line="262"/>
                    <declaration name="D" type="String" line="263"/>
                </scope>
                <scope line="266"/>
            </method>
            <method name="getInternal1" type="void" line="276">
                <params>
                    <param name="cookies" type="List<HttpCookie>"/>
                    <param name="cookieIndex" type="Map<String,List<HttpCookie>>"/>
                    <param name="host" type="String"/>
                    <param name="secureLink" type="boolean"/>
                </params>
                <comment line="277">
                    Use a separate list to handle cookies that need to be removed so                    
                </comment>
                <comment line="278">
                    that there is no conflict with iterators.                    
                </comment>
                <comment line="287">
                    the cookie still in main cookie store                    
                </comment>
                <comment line="289">
                    don&apos;t add twice and make sure it&apos;s the proper                    
                </comment>
                <comment line="290">
                    security level                    
                </comment>
                <comment line="299">
                    the cookie has beed removed from main store,                    
                </comment>
                <comment line="300">
                    so also remove it from domain indexed store                    
                </comment>
                <comment line="305">
                    Clear up the cookies that need to be removed                    
                </comment>
                <declaration name="toRemove" type="ArrayList&lt;HttpCookie&gt;" line="279"/>
                <scope line="280">
                    <declaration name="domain" type="String" line="281"/>
                    <declaration name="lst" type="List&lt;HttpCookie&gt;" line="282"/>
                    <scope line="283">
                        <scope line="285">
                            <scope line="286">
                                <scope line="288">
                                    <scope line="292"/>
                                </scope>
                                <scope line="295"/>
                            </scope>
                            <scope line="298"/>
                        </scope>
                    </scope>
                    <scope line="306"/>
                </scope>
            </method>
            <method name="getInternal2" type="void" line="322">
                <params>
                    <param name="cookies" type="List<HttpCookie>"/>
                    <param name="cookieIndex" type="Map<T,List<HttpCookie>>"/>
                    <param name="comparator" type="Comparable<T>"/>
                    <param name="secureLink" type="boolean"/>
                </params>
                <comment line="326">
                    check the list of cookies associated with this domain                    
                </comment>
                <comment line="332">
                    the cookie still in main cookie store                    
                </comment>
                <comment line="334">
                    don&apos;t add twice                    
                </comment>
                <comment line="343">
                    the cookie has beed removed from main store,                    
                </comment>
                <comment line="344">
                    so also remove it from domain indexed store                    
                </comment>
                <comment line="348">
                    end of indexedCookies != null                    
                </comment>
                <comment line="349">
                    end of comparator.compareTo(index) == 0                    
                </comment>
                <comment line="350">
                    end of cookieIndex iteration                    
                </comment>
                <scope line="323">
                    <scope line="324">
                        <declaration name="indexedCookies" type="List&lt;HttpCookie&gt;" line="325"/>
                        <scope line="327">
                            <declaration name="it" type="Iterator&lt;HttpCookie&gt;" line="328"/>
                            <scope line="329">
                                <declaration name="ck" type="HttpCookie" line="330"/>
                                <scope line="331">
                                    <scope line="333"/>
                                    <scope line="338"/>
                                </scope>
                                <scope line="342"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="addIndex" type="void" line="357">
                <params>
                    <param name="indexStore" type="Map<T,List<HttpCookie>>"/>
                    <param name="index" type="T"/>
                    <param name="cookie" type="HttpCookie"/>
                </params>
                <comment line="361">
                    there may already have the same cookie, so remove it first                    
                </comment>
                <scope line="358">
                    <declaration name="cookies" type="List&lt;HttpCookie&gt;" line="359"/>
                    <scope line="360"/>
                    <scope line="365"/>
                </scope>
            </method>
            <method name="getEffectiveURI" type="URI" line="378">
                <params>
                    <param name="uri" type="URI"/>
                </params>
                <comment line="383">
                    path component                    
                </comment>
                <comment line="384">
                    query component                    
                </comment>
                <comment line="385">
                    fragment component                    
                </comment>
                <declaration name="effectiveURI" type="URI" line="379"/>
                <scope line="380"/>
                <scope line="387"/>
            </method>
        </class>
    </source>