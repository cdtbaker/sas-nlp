<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.net">
        <import package="java.io.FileDescriptor"/>
        <import package="java.io.FileOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.nio.channels.FileChannel"/>
        <class name="SocketOutputStream" line="6">
            <extends class="FileOutputStream"/>
            <javadoc line="6">
                This stream extends FileOutputStream to implement a
                  SocketOutputStream. Note that this class should &lt;b&gt;NOT&lt;/b&gt; be
                  public.                
                <author>
                    Jonathan Payne                    
                </author>
                <author>
                    Arthur van Hoff                    
                </author>
            </javadoc>
            <scope line="14"/>
            <declaration name="impl" type="AbstractPlainSocketImpl" line="17"/>
            <declaration name="temp" type="byte" line="18"/>
            <declaration name="socket" type="Socket" line="19"/>
            <javadoc line="20">
                Creates a new SocketOutputStream. Can only be called
                  by a Socket. This method needs to hang on to the owner Socket so
                  that the fd will not be closed.                
                <param>
                    impl the socket output stream inplemented                    
                </param>
            </javadoc>
            <method name="SocketOutputStream" type="constructor" line="26">
                <params>
                    <param name="impl" type="AbstractPlainSocketImpl"/>
                </params>
            </method>
            <javadoc line="31">
                Returns the unique {@link java.nio.channels.FileChannel FileChannel}object associated with this file output stream. &lt;/p&gt;
                  The &lt;code&gt;getChannel&lt;/code&gt; method of &lt;code&gt;SocketOutputStream&lt;/code&gt;
                  returns &lt;code&gt;null&lt;/code&gt; since it is a socket based stream.&lt;/p&gt;                
                <return>
                    the file channel associated with this file output stream                    
                </return>
                <since>
                    1.4                    
                </since>
                <spec>
                    JSR-51                    
                </spec>
            </javadoc>
            <method name="getChannel" type="FileChannel" line="39"/>
            <method name="socketWrite0" type="void" line="42"/>
            <javadoc line="42">
                Writes to the socket.                
                <param>
                    fd the FileDescriptor                    
                </param>
                <param>
                    b the data to be written                    
                </param>
                <param>
                    off the start offset in the data                    
                </param>
                <param>
                    len the number of bytes that are written                    
                </param>
                <exception>
                    IOException If an I/O error has occurred.                    
                </exception>
            </javadoc>
            <javadoc line="51">
                Writes to the socket with appropriate locking of the
                  FileDescriptor.                
                <param>
                    b the data to be written                    
                </param>
                <param>
                    off the start offset in the data                    
                </param>
                <param>
                    len the number of bytes that are written                    
                </param>
                <exception>
                    IOException If an I/O error has occurred.                    
                </exception>
            </javadoc>
            <method name="socketWrite" type="void" line="59">
                <params>
                    <param name="b" type="byte"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="60">
                    <scope line="61"/>
                </scope>
                <declaration name="fd" type="FileDescriptor" line="66"/>
                <scope line="67"/>
                <scope line="70">
                    <scope line="71"/>
                    <scope line="75"/>
                    <scope line="78"/>
                </scope>
                <scope line="82"/>
            </method>
            <javadoc line="86">
                Writes a byte to the socket.                
                <param>
                    b the data to be written                    
                </param>
                <exception>
                    IOException If an I/O error has occurred.                    
                </exception>
            </javadoc>
            <method name="write" type="void" line="91">
                <params>
                    <param name="b" type="int"/>
                </params>
            </method>
            <javadoc line="95">
                Writes the contents of the buffer &lt;i&gt;b&lt;/i&gt; to the socket.                
                <param>
                    b the data to be written                    
                </param>
                <exception>
                    SocketException If an I/O error has occurred.                    
                </exception>
            </javadoc>
            <method name="write" type="void" line="100">
                <params>
                    <param name="b" type="byte"/>
                </params>
            </method>
            <javadoc line="103">
                Writes &lt;i&gt;length&lt;/i&gt; bytes from buffer &lt;i&gt;b&lt;/i&gt; starting at
                  offset &lt;i&gt;len&lt;/i&gt;.                
                <param>
                    b the data to be written                    
                </param>
                <param>
                    off the start offset in the data                    
                </param>
                <param>
                    len the number of bytes that are written                    
                </param>
                <exception>
                    SocketException If an I/O error has occurred.                    
                </exception>
            </javadoc>
            <method name="write" type="void" line="111">
                <params>
                    <param name="b" type="byte"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <declaration name="closing" type="boolean" line="114"/>
            <javadoc line="114">
                Closes the stream.                
            </javadoc>
            <method name="close" type="void" line="118">
                <scope line="121"/>
            </method>
            <javadoc line="127">
                Overrides finalize, the fd is closed by the Socket.                
            </javadoc>
            <method name="finalize" type="void" line="130"/>
            <method name="init" type="void" line="132"/>
            <javadoc line="132">
                Perform class load-time initializations.                
            </javadoc>
        </class>
    </source>