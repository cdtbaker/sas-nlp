<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.net">
        <import package="java.io.FileDescriptor"/>
        <import package="java.io.FileOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.nio.channels.FileChannel"/>
        <class name="SocketOutputStream" line="33">
            <extends class="FileOutputStream"/>
            <javadoc line="33">
                This stream extends FileOutputStream to implement a
                  SocketOutputStream. Note that this class should &lt;b&gt;NOT&lt;/b&gt; be
                  public.                
                <author>
                    Jonathan Payne                    
                </author>
                <author>
                    Arthur van Hoff                    
                </author>
            </javadoc>
            <scope line="43"/>
            <declaration name="impl" type="AbstractPlainSocketImpl" line="47"/>
            <declaration name="temp" type="byte" line="48"/>
            <declaration name="socket" type="Socket" line="49"/>
            <javadoc line="51">
                Creates a new SocketOutputStream. Can only be called
                  by a Socket. This method needs to hang on to the owner Socket so
                  that the fd will not be closed.                
                <param>
                    impl the socket output stream inplemented                    
                </param>
            </javadoc>
            <method name="SocketOutputStream" type="constructor" line="57">
                <params>
                    <param name="impl" type="AbstractPlainSocketImpl"/>
                </params>
            </method>
            <javadoc line="63">
                Returns the unique {@link java.nio.channels.FileChannel FileChannel}object associated with this file output stream. &lt;/p&gt;
                  The &lt;code&gt;getChannel&lt;/code&gt; method of &lt;code&gt;SocketOutputStream&lt;/code&gt;
                  returns &lt;code&gt;null&lt;/code&gt; since it is a socket based stream.&lt;/p&gt;                
                <return>
                    the file channel associated with this file output stream                    
                </return>
                <since>
                    1.4                    
                </since>
                <spec>
                    JSR-51                    
                </spec>
            </javadoc>
            <method name="getChannel" type="FileChannel" line="75"/>
            <method name="socketWrite0" type="void" line="79"/>
            <javadoc line="79">
                Writes to the socket.                
                <param>
                    fd the FileDescriptor                    
                </param>
                <param>
                    b the data to be written                    
                </param>
                <param>
                    off the start offset in the data                    
                </param>
                <param>
                    len the number of bytes that are written                    
                </param>
                <exception>
                    IOException If an I/O error has occurred.                    
                </exception>
            </javadoc>
            <javadoc line="90">
                Writes to the socket with appropriate locking of the
                  FileDescriptor.                
                <param>
                    b the data to be written                    
                </param>
                <param>
                    off the start offset in the data                    
                </param>
                <param>
                    len the number of bytes that are written                    
                </param>
                <exception>
                    IOException If an I/O error has occurred.                    
                </exception>
            </javadoc>
            <method name="socketWrite" type="void" line="98">
                <params>
                    <param name="b" type="byte"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="100">
                    <scope line="101"/>
                </scope>
                <declaration name="fd" type="FileDescriptor" line="107"/>
                <scope line="108"/>
                <scope line="110">
                    <scope line="111"/>
                    <scope line="115"/>
                    <scope line="117"/>
                </scope>
                <scope line="120"/>
            </method>
            <javadoc line="125">
                Writes a byte to the socket.                
                <param>
                    b the data to be written                    
                </param>
                <exception>
                    IOException If an I/O error has occurred.                    
                </exception>
            </javadoc>
            <method name="write" type="void" line="130">
                <params>
                    <param name="b" type="int"/>
                </params>
            </method>
            <javadoc line="135">
                Writes the contents of the buffer &lt;i&gt;b&lt;/i&gt; to the socket.                
                <param>
                    b the data to be written                    
                </param>
                <exception>
                    SocketException If an I/O error has occurred.                    
                </exception>
            </javadoc>
            <method name="write" type="void" line="140">
                <params>
                    <param name="b" type="byte"/>
                </params>
            </method>
            <javadoc line="144">
                Writes &lt;i&gt;length&lt;/i&gt; bytes from buffer &lt;i&gt;b&lt;/i&gt; starting at
                  offset &lt;i&gt;len&lt;/i&gt;.                
                <param>
                    b the data to be written                    
                </param>
                <param>
                    off the start offset in the data                    
                </param>
                <param>
                    len the number of bytes that are written                    
                </param>
                <exception>
                    SocketException If an I/O error has occurred.                    
                </exception>
            </javadoc>
            <method name="write" type="void" line="152">
                <params>
                    <param name="b" type="byte"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <declaration name="closing" type="boolean" line="156"/>
            <javadoc line="156">
                Closes the stream.                
            </javadoc>
            <method name="close" type="void" line="160">
                <comment line="161">
                    Prevent recursion. See BugId 4484411                    
                </comment>
                <scope line="165"/>
            </method>
            <javadoc line="173">
                Overrides finalize, the fd is closed by the Socket.                
            </javadoc>
            <method name="finalize" type="void" line="176"/>
            <method name="init" type="void" line="178"/>
            <javadoc line="178">
                Perform class load-time initializations.                
            </javadoc>
        </class>
    </source>