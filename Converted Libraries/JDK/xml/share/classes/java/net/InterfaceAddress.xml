<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.net">
        <class name="InterfaceAddress" line="28">
            <comment line="43">
                Package private constructor. Can&apos;t be built directly, instances are
                 obtained through the NetworkInterface class.                
            </comment>
            <javadoc line="28">
                This class represents a Network Interface address. In short it&apos;s an
                  IP address, a subnet mask and a broadcast address when the address is
                  an IPv4 one. An IP address and a network prefix length in the case
                  of IPv6 address.                
                <see>
                    java.net.NetworkInterface                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="address" type="InetAddress" line="38"/>
            <declaration name="broadcast" type="Inet4Address" line="39"/>
            <declaration name="maskLength" type="short" line="40"/>
            <method name="InterfaceAddress" type="constructor" line="46"/>
            <javadoc line="49">
                Returns an &lt;code&gt;InetAddress&lt;/code&gt; for this address.                
                <return>
                    the &lt;code&gt;InetAddress&lt;/code&gt; for this address.                    
                </return>
            </javadoc>
            <method name="getAddress" type="InetAddress" line="54"/>
            <javadoc line="58">
                Returns an &lt;code&gt;InetAddress&lt;/code&gt; for the brodcast address
                  for this InterfaceAddress.
                  &lt;p&gt;
                  Only IPv4 networks have broadcast address therefore, in the case
                  of an IPv6 network, &lt;code&gt;null&lt;/code&gt; will be returned.                
                <return>
                    the &lt;code&gt;InetAddress&lt;/code&gt; representing the broadcast
                      address or &lt;code&gt;null&lt;/code&gt; if there is no broadcast address.                    
                </return>
            </javadoc>
            <method name="getBroadcast" type="InetAddress" line="68"/>
            <javadoc line="72">
                Returns the network prefix length for this address. This is also known
                  as the subnet mask in the context of IPv4 addresses.
                  Typical IPv4 values would be 8 (255.0.0.0), 16 (255.255.0.0)
                  or 24 (255.255.255.0). &lt;p&gt;
                  Typical IPv6 values would be 128 (::1/128) or 10 (fe80::203:baff:fe27:1243/10)                
                <return>
                    a &lt;code&gt;short&lt;/code&gt; representing the prefix length for the
                      subnet of that address.                    
                </return>
            </javadoc>
            <method name="getNetworkPrefixLength" type="short" line="82"/>
            <javadoc line="86">
                Compares this object against the specified object.
                  The result is &lt;code&gt;true&lt;/code&gt; if and only if the argument is
                  not &lt;code&gt;null&lt;/code&gt; and it represents the same interface address as
                  this object.
                  &lt;p&gt;
                  Two instances of &lt;code&gt;InterfaceAddress&lt;/code&gt; represent the same
                  address if the InetAddress, the prefix length and the broadcast are
                  the same for both.                
                <param>
                    obj   the object to compare against.                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if the objects are the same;
                      &lt;code&gt;false&lt;/code&gt; otherwise.                    
                </return>
                <see>
                    java.net.InterfaceAddress#hashCode()                    
                </see>
            </javadoc>
            <method name="equals" type="boolean" line="101">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="102"/>
                <declaration name="cmp" type="InterfaceAddress" line="105"/>
            </method>
            <javadoc line="115">
                Returns a hashcode for this Interface address.                
                <return>
                    a hash code value for this Interface address.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="120"/>
            <javadoc line="124">
                Converts this Interface address to a &lt;code&gt;String&lt;/code&gt;. The
                  string returned is of the form: InetAddress / prefix length [ broadcast address ].                
                <return>
                    a string representation of this Interface address.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="130"/>
        </class>
    </source>