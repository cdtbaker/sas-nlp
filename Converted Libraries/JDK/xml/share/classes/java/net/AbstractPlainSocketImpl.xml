<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.net">
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.io.FileDescriptor"/>
        <import package="sun.net.ConnectionResetException"/>
        <import package="sun.net.NetHooks"/>
        <import package="sun.net.ResourceManager"/>
        <class name="AbstractPlainSocketImpl" line="9">
            <extends class="SocketImpl"/>
            <javadoc line="9">
                Default Socket Implementation. This implementation does
                  not implement any security checks.
                  Note this class should &lt;b&gt;NOT&lt;/b&gt; be public.                
                <author>
                    Steven B. Byrne                    
                </author>
            </javadoc>
            <declaration name="timeout" type="int" line="16"/>
            <declaration name="trafficClass" type="int" line="17"/>
            <declaration name="shut_rd" type="boolean" line="18"/>
            <declaration name="shut_wr" type="boolean" line="19"/>
            <declaration name="socketInputStream" type="SocketInputStream" line="20"/>
            <declaration name="fdUseCount" type="int" line="21"/>
            <declaration name="fdLock" type="Object" line="22"/>
            <declaration name="closePending" type="boolean" line="23"/>
            <declaration name="CONNECTION_NOT_RESET" type="int" line="24"/>
            <declaration name="CONNECTION_RESET_PENDING" type="int" line="25"/>
            <declaration name="CONNECTION_RESET" type="int" line="26"/>
            <declaration name="resetState" type="int" line="27"/>
            <declaration name="resetLock" type="Object" line="28"/>
            <declaration name="stream" type="boolean" line="29"/>
            <javadoc line="30">
                Load net library into runtime.                
            </javadoc>
            <scope line="33"/>
            <javadoc line="36">
                Creates a socket with a boolean that specifies whether this
                  is a stream socket (true) or an unconnected UDP socket (false).                
            </javadoc>
            <method name="create" type="void" line="40">
                <params>
                    <param name="stream" type="boolean"/>
                </params>
                <scope line="43">
                    <scope line="45"/>
                    <scope line="48"/>
                </scope>
                <scope line="54"/>
            </method>
            <javadoc line="60">
                Creates a socket and connects it to the specified port on
                  the specified host.                
                <param>
                    host the specified host                    
                </param>
                <param>
                    port the specified port                    
                </param>
            </javadoc>
            <method name="connect" type="void" line="66">
                <params>
                    <param name="host" type="String"/>
                    <param name="port" type="int"/>
                </params>
                <declaration name="connected" type="boolean" line="67"/>
                <scope line="68">
                    <declaration name="address" type="InetAddress" line="69"/>
                </scope>
                <scope line="75">
                    <scope line="76">
                        <scope line="77"/>
                        <scope line="80"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="85">
                Creates a socket and connects it to the specified address on
                  the specified port.                
                <param>
                    address the address                    
                </param>
                <param>
                    port the specified port                    
                </param>
            </javadoc>
            <method name="connect" type="void" line="91">
                <params>
                    <param name="address" type="InetAddress"/>
                    <param name="port" type="int"/>
                </params>
                <scope line="94"/>
                <scope line="98"/>
            </method>
            <javadoc line="103">
                Creates a socket and connects it to the specified address on
                  the specified port.                
                <param>
                    address the address                    
                </param>
                <param>
                    timeout the timeout value in milliseconds, or zero for no timeout.                    
                </param>
                <throws>
                    IOException if connection fails                    
                </throws>
                <throws>
                    IllegalArgumentException if address is null or is a
                      SocketAddress subclass not supported by this socket                    
                </throws>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="connect" type="void" line="113">
                <params>
                    <param name="address" type="SocketAddress"/>
                    <param name="timeout" type="int"/>
                </params>
                <declaration name="connected" type="boolean" line="114"/>
                <scope line="115">
                    <declaration name="addr" type="InetSocketAddress" line="117"/>
                </scope>
                <scope line="124">
                    <scope line="125">
                        <scope line="126"/>
                        <scope line="129"/>
                    </scope>
                </scope>
            </method>
            <method name="connectToAddress" type="void" line="134">
                <params>
                    <param name="address" type="InetAddress"/>
                    <param name="port" type="int"/>
                    <param name="timeout" type="int"/>
                </params>
                <scope line="135"/>
                <scope line="138"/>
            </method>
            <method name="setOption" type="void" line="142">
                <params>
                    <param name="opt" type="int"/>
                    <param name="val" type="Object"/>
                </params>
                <scope line="143"/>
                <declaration name="on" type="boolean" line="146"/>
                <scope line="150"/>
                <declaration name="tmp" type="int" line="156"/>
                <scope line="161"/>
                <scope line="174"/>
            </method>
            <method name="getOption" type="Object" line="195">
                <params>
                    <param name="opt" type="int"/>
                </params>
                <scope line="196"/>
                <scope line="199"/>
                <declaration name="ret" type="int" line="202"/>
                <declaration name="in" type="InetAddressContainer" line="217"/>
                <scope line="226"/>
                <scope line="229"/>
            </method>
            <javadoc line="239">
                The workhorse of the connection operation.  Tries several times to
                  establish a connection to the given &lt;host, port&gt;.  If unsuccessful,
                  throws an IOException indicating what went wrong.                
            </javadoc>
            <method name="doConnect" type="void" line="244">
                <params>
                    <param name="address" type="InetAddress"/>
                    <param name="port" type="int"/>
                    <param name="timeout" type="int"/>
                </params>
                <scope line="245">
                    <scope line="246"/>
                </scope>
                <scope line="250">
                    <scope line="252">
                        <scope line="254">
                            <scope line="255"/>
                        </scope>
                        <scope line="259"/>
                    </scope>
                    <scope line="264"/>
                </scope>
                <scope line="268"/>
            </method>
            <javadoc line="273">
                Binds the socket to the specified address of the specified local port.                
                <param>
                    address the address                    
                </param>
                <param>
                    port the port                    
                </param>
            </javadoc>
            <method name="bind" type="void" line="278">
                <params>
                    <param name="address" type="InetAddress"/>
                    <param name="lport" type="int"/>
                </params>
                <scope line="279">
                    <scope line="280"/>
                </scope>
            </method>
            <javadoc line="288">
                Listens, for a specified amount of time, for connections.                
                <param>
                    count the amount of time to listen for connections                    
                </param>
            </javadoc>
            <method name="listen" type="void" line="292">
                <params>
                    <param name="count" type="int"/>
                </params>
            </method>
            <javadoc line="295">
                Accepts connections.                
                <param>
                    s the connection                    
                </param>
            </javadoc>
            <method name="accept" type="void" line="299">
                <params>
                    <param name="s" type="SocketImpl"/>
                </params>
                <scope line="301"/>
                <scope line="304"/>
            </method>
            <javadoc line="308">
                Gets an InputStream for this socket.                
            </javadoc>
            <method name="getInputStream" type="InputStream" line="311">
                <scope line="312"/>
                <scope line="315"/>
                <scope line="318"/>
            </method>
            <method name="setInputStream" type="void" line="323">
                <params>
                    <param name="in" type="SocketInputStream"/>
                </params>
            </method>
            <javadoc line="326">
                Gets an OutputStream for this socket.                
            </javadoc>
            <method name="getOutputStream" type="OutputStream" line="329">
                <scope line="330"/>
                <scope line="333"/>
            </method>
            <method name="setFileDescriptor" type="void" line="338">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                </params>
            </method>
            <method name="setAddress" type="void" line="341">
                <params>
                    <param name="address" type="InetAddress"/>
                </params>
            </method>
            <method name="setPort" type="void" line="344">
                <params>
                    <param name="port" type="int"/>
                </params>
            </method>
            <method name="setLocalPort" type="void" line="347">
                <params>
                    <param name="localport" type="int"/>
                </params>
            </method>
            <javadoc line="350">
                Returns the number of bytes that can be read without blocking.                
            </javadoc>
            <method name="available" type="int" line="353">
                <scope line="354"/>
                <scope line="357"/>
                <declaration name="n" type="int" line="360"/>
                <scope line="361">
                    <scope line="363"/>
                </scope>
                <scope line="367">
                    <scope line="369">
                        <scope line="371"/>
                    </scope>
                    <scope line="375"/>
                </scope>
            </method>
            <javadoc line="380">
                Closes the socket.                
            </javadoc>
            <method name="close" type="void" line="383">
                <scope line="384">
                    <scope line="385">
                        <scope line="386"/>
                        <scope line="389">
                            <scope line="390"/>
                            <scope line="394"/>
                            <scope line="397"/>
                        </scope>
                        <scope line="403">
                            <scope line="404"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="reset" type="void" line="413">
                <scope line="414"/>
            </method>
            <javadoc line="420">
                Shutdown read-half of the socket connection;                
            </javadoc>
            <method name="shutdownInput" type="void" line="423">
                <scope line="424">
                    <scope line="426"/>
                </scope>
            </method>
            <javadoc line="432">
                Shutdown write-half of the socket connection;                
            </javadoc>
            <method name="shutdownOutput" type="void" line="435">
                <scope line="436"/>
            </method>
            <method name="supportsUrgentData" type="boolean" line="441"/>
            <method name="sendUrgentData" type="void" line="444">
                <params>
                    <param name="data" type="int"/>
                </params>
                <scope line="445"/>
            </method>
            <javadoc line="450">
                Cleans up if the user forgets to close it.                
            </javadoc>
            <method name="finalize" type="void" line="453"/>
            <method name="acquireFD" type="FileDescriptor" line="456">
                <scope line="457"/>
            </method>
            <method name="releaseFD" type="void" line="462">
                <scope line="463">
                    <scope line="465">
                        <scope line="466">
                            <scope line="467"/>
                            <scope line="470"/>
                            <scope line="472"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="isConnectionReset" type="boolean" line="479">
                <scope line="480"/>
            </method>
            <method name="isConnectionResetPending" type="boolean" line="484">
                <scope line="485"/>
            </method>
            <method name="setConnectionReset" type="void" line="489">
                <scope line="490"/>
            </method>
            <method name="setConnectionResetPending" type="void" line="494">
                <scope line="495">
                    <scope line="496"/>
                </scope>
            </method>
            <method name="isClosedOrPending" type="boolean" line="501">
                <scope line="502">
                    <scope line="503"/>
                    <scope line="506"/>
                </scope>
            </method>
            <method name="getTimeout" type="int" line="511"/>
            <method name="socketPreClose" type="void" line="514"/>
            <method name="socketClose" type="void" line="517"/>
            <method name="socketCreate" type="void" line="520"/>
            <method name="socketConnect" type="void" line="521"/>
            <method name="socketBind" type="void" line="522"/>
            <method name="socketListen" type="void" line="523"/>
            <method name="socketAccept" type="void" line="524"/>
            <method name="socketAvailable" type="int" line="525"/>
            <method name="socketClose0" type="void" line="526"/>
            <method name="socketShutdown" type="void" line="527"/>
            <method name="socketSetOption" type="void" line="528"/>
            <method name="socketGetOption" type="int" line="529"/>
            <method name="socketSendUrgentData" type="void" line="530"/>
            <declaration name="SHUT_RD" type="int" line="531"/>
            <declaration name="SHUT_WR" type="int" line="532"/>
        </class>
        <class name="InetAddressContainer" line="534">
            <declaration name="addr" type="InetAddress" line="535"/>
        </class>
    </source>