<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.net">
        <import package="java.io"/>
        <class name="URLDecoder" line="3">
            <javadoc line="3">
                Utility class for HTML form decoding. This class contains static methods
                  for decoding a String from the &lt;CODE&gt;application/x-www-form-urlencoded&lt;/CODE&gt;
                  MIME format.
                  &lt;p&gt;
                  The conversion process is the reverse of that used by the URLEncoder class. It is assumed
                  that all characters in the encoded string are one of the following:
                  &amp;quot;&lt;code&gt;a&lt;/code&gt;&amp;quot; through &amp;quot;&lt;code&gt;z&lt;/code&gt;&amp;quot;,
                  &amp;quot;&lt;code&gt;A&lt;/code&gt;&amp;quot; through &amp;quot;&lt;code&gt;Z&lt;/code&gt;&amp;quot;,
                  &amp;quot;&lt;code&gt;0&lt;/code&gt;&amp;quot; through &amp;quot;&lt;code&gt;9&lt;/code&gt;&amp;quot;, and
                  &amp;quot;&lt;code&gt;-&lt;/code&gt;&amp;quot;, &amp;quot;&lt;code&gt;_&lt;/code&gt;&amp;quot;,
                  &amp;quot;&lt;code&gt;.&lt;/code&gt;&amp;quot;, and &amp;quot;&lt;code&gt;&lt;/code&gt;&amp;quot;. The
                  character &amp;quot;&lt;code&gt;%&lt;/code&gt;&amp;quot; is allowed but is interpreted
                  as the start of a special escaped sequence.
                  &lt;p&gt;
                  The following rules are applied in the conversion:
                  &lt;p&gt;
                  &lt;ul&gt;
                  &lt;li&gt;The alphanumeric characters &amp;quot;&lt;code&gt;a&lt;/code&gt;&amp;quot; through
                  &amp;quot;&lt;code&gt;z&lt;/code&gt;&amp;quot;, &amp;quot;&lt;code&gt;A&lt;/code&gt;&amp;quot; through
                  &amp;quot;&lt;code&gt;Z&lt;/code&gt;&amp;quot; and &amp;quot;&lt;code&gt;0&lt;/code&gt;&amp;quot;
                  through &amp;quot;&lt;code&gt;9&lt;/code&gt;&amp;quot; remain the same.
                  &lt;li&gt;The special characters &amp;quot;&lt;code&gt;.&lt;/code&gt;&amp;quot;,
                  &amp;quot;&lt;code&gt;-&lt;/code&gt;&amp;quot;, &amp;quot;&lt;code&gt;&lt;/code&gt;&amp;quot;, and
                  &amp;quot;&lt;code&gt;_&lt;/code&gt;&amp;quot; remain the same.
                  &lt;li&gt;The plus sign &amp;quot;&lt;code&gt;+&lt;/code&gt;&amp;quot; is converted into a
                  space character &amp;quot;&lt;code&gt;&amp;nbsp;&lt;/code&gt;&amp;quot; .
                  &lt;li&gt;A sequence of the form &quot;&lt;code&gt;%&lt;i&gt;xy&lt;/i&gt;&lt;/code&gt;&quot; will be
                  treated as representing a byte where &lt;i&gt;xy&lt;/i&gt; is the two-digit
                  hexadecimal representation of the 8 bits. Then, all substrings
                  that contain one or more of these byte sequences consecutively
                  will be replaced by the character(s) whose encoding would result
                  in those consecutive bytes.
                  The encoding scheme used to decode these characters may be specified,
                  or if unspecified, the default encoding of the platform will be used.
                  &lt;/ul&gt;
                  &lt;p&gt;
                  There are two possible ways in which this decoder could deal with
                  illegal strings.  It could either leave illegal characters alone or
                  it could throw an &lt;tt&gt;{@link java.lang.IllegalArgumentException}&lt;/tt&gt;.
                  Which approach the decoder takes is left to the
                  implementation.                
                <author>
                    Mark Chamness                    
                </author>
                <author>
                    Michael McCloskey                    
                </author>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <declaration name="dfltEncName" type="String" line="50"/>
            <javadoc line="51">
                Decodes a &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; string.
                  The platform&apos;s default encoding is used to determine what characters
                  are represented by any consecutive sequences of the form
                  &quot;&lt;code&gt;%&lt;i&gt;xy&lt;/i&gt;&lt;/code&gt;&quot;.                
                <param>
                    s the &lt;code&gt;String&lt;/code&gt; to decode                    
                </param>
                <deprecated>
                    The resulting string may vary depending on the platform&apos;s
                      default encoding. Instead, use the decode(String,String) method
                      to specify the encoding.                    
                </deprecated>
                <return>
                    the newly decoded &lt;code&gt;String&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="decode" type="String" line="62">
                <params>
                    <param name="s" type="String"/>
                </params>
                <declaration name="str" type="String" line="63"/>
                <scope line="64"/>
                <scope line="67"/>
            </method>
            <javadoc line="71">
                Decodes a &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; string using a specific
                  encoding scheme.
                  The supplied encoding is used to determine
                  what characters are represented by any consecutive sequences of the
                  form &quot;&lt;code&gt;%&lt;i&gt;xy&lt;/i&gt;&lt;/code&gt;&quot;.
                  &lt;p&gt;
                  &lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; The &lt;a href=
                  &quot;http://www.w3.org/TR/html40/appendix/notes.html#non-ascii-chars&quot;&gt;
                  World Wide Web Consortium Recommendation&lt;/a&gt; states that
                  UTF-8 should be used. Not doing so may introduce
                  incompatibilites.&lt;/em&gt;                
                <param>
                    s the &lt;code&gt;String&lt;/code&gt; to decode                    
                </param>
                <param>
                    enc   The name of a supported
                      &lt;a href=&quot;../lang/package-summary.html#charenc&quot;&gt;character
                      encoding&lt;/a&gt;.                    
                </param>
                <return>
                    the newly decoded &lt;code&gt;String&lt;/code&gt;                    
                </return>
                <exception>
                    UnsupportedEncodingExceptionIf character encoding needs to be consulted, but
                      named character encoding is not supported                    
                </exception>
                <see>
                    URLEncoder#encode(java.lang.String,java.lang.String)                    
                </see>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="decode" type="String" line="93">
                <params>
                    <param name="s" type="String"/>
                    <param name="enc" type="String"/>
                </params>
                <declaration name="needToChange" type="boolean" line="94"/>
                <declaration name="numChars" type="int" line="95"/>
                <declaration name="sb" type="StringBuffer" line="96"/>
                <declaration name="i" type="int" line="97"/>
                <scope line="98"/>
                <declaration name="c" type="char" line="101"/>
                <declaration name="bytes" type="byte[]" line="102"/>
                <scope line="103">
                    <scope line="112">
                        <declaration name="pos" type="int" line="114"/>
                        <scope line="115">
                            <declaration name="v" type="int" line="116"/>
                        </scope>
                    </scope>
                    <scope line="125"/>
                </scope>
            </method>
        </class>
    </source>