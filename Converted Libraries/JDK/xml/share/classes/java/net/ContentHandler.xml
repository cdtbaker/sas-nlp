<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.net">
        <import package="java.io.IOException"/>
        <class name="ContentHandler" line="3">
            <javadoc line="3">
                The abstract class &lt;code&gt;ContentHandler&lt;/code&gt; is the superclass
                  of all classes that read an &lt;code&gt;Object&lt;/code&gt; from a
                  &lt;code&gt;URLConnection&lt;/code&gt;.
                  &lt;p&gt;
                  An application does not generally call the
                  &lt;code&gt;getContent&lt;/code&gt; method in this class directly. Instead, an
                  application calls the &lt;code&gt;getContent&lt;/code&gt; method in class
                  &lt;code&gt;URL&lt;/code&gt; or in &lt;code&gt;URLConnection&lt;/code&gt;.
                  The application&apos;s content handler factory (an instance of a class that
                  implements the interface &lt;code&gt;ContentHandlerFactory&lt;/code&gt; set
                  up by a call to &lt;code&gt;setContentHandler&lt;/code&gt;) is
                  called with a &lt;code&gt;String&lt;/code&gt; giving the MIME type of the
                  object being received on the socket. The factory returns an
                  instance of a subclass of &lt;code&gt;ContentHandler&lt;/code&gt;, and its
                  &lt;code&gt;getContent&lt;/code&gt; method is called to create the object.
                  &lt;p&gt;
                  If no content handler could be found, URLConnection will
                  look for a content handler in a user-defineable set of places.
                  By default it looks in sun.net.www.content, but users can define a
                  vertical-bar delimited set of class prefixes to search through in
                  addition by defining the java.content.handler.pkgs property.
                  The class name must be of the form:
                  &lt;pre&gt;
                  {package-prefix}.{major}.{minor}
                  e.g.
                  YoyoDyne.experimental.text.plain
                  &lt;/pre&gt;
                  If the loading of the content handler class would be performed by
                  a classloader that is outside of the delegation chain of the caller,
                  the JVM will need the RuntimePermission &quot;getClassLoader&quot;.                
                <author>
                    James Gosling                    
                </author>
                <see>
                    java.net.ContentHandler#getContent(java.net.URLConnection)                    
                </see>
                <see>
                    java.net.ContentHandlerFactory                    
                </see>
                <see>
                    java.net.URL#getContent()                    
                </see>
                <see>
                    java.net.URLConnection                    
                </see>
                <see>
                    java.net.URLConnection#getContent()                    
                </see>
                <see>
                    java.net.URLConnection#setContentHandlerFactory(java.net.ContentHandlerFactory)                    
                </see>
                <since>
                    JDK1.0                    
                </since>
            </javadoc>
            <method name="getContent" type="Object" line="44"/>
            <javadoc line="44">
                Given a URL connect stream positioned at the beginning of the
                  representation of an object, this method reads that stream and
                  creates an object from it.                
                <param>
                    urlc   a URL connection.                    
                </param>
                <return>
                    the object read by the <code>ContentHandler</code>.                    
                </return>
                <exception>
                    IOException  if an I/O error occurs while reading the object.                    
                </exception>
            </javadoc>
            <javadoc line="53">
                Given a URL connect stream positioned at the beginning of the
                  representation of an object, this method reads that stream and
                  creates an object that matches one of the types specified.
                  The default implementation of this method should call getContent()
                  and screen the return type for a match of the suggested types.                
                <param>
                    urlc   a URL connection.                    
                </param>
                <param>
                    classes      an array of types requested                    
                </param>
                <return>
                    the object read by the <code>ContentHandler</code> that is
                      the first match of the suggested types.
                      null if none of the requested  are supported.                    
                </return>
                <exception>
                    IOException  if an I/O error occurs while reading the object.                    
                </exception>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="getContent" type="Object" line="67">
                <params>
                    <param name="urlc" type="URLConnection"/>
                    <param name="classes" type="Class[]"/>
                </params>
                <declaration name="obj" type="Object" line="68"/>
                <scope line="69">
                    <scope line="70"/>
                </scope>
            </method>
        </class>
    </source>