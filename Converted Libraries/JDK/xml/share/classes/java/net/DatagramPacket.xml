<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.net">
        <class name="DatagramPacket" line="28">
            <comment line="55">
                The fields of this class are package-private since DatagramSocketImpl
                 classes needs to access them.                
            </comment>
            <javadoc line="28">
                This class represents a datagram packet.
                  &lt;p&gt;
                  Datagram packets are used to implement a connectionless packet
                  delivery service. Each message is routed from one machine to
                  another based solely on information contained within that packet.
                  Multiple packets sent from one machine to another might be routed
                  differently, and might arrive in any order. Packet delivery is
                  not guaranteed.                
                <author>
                    Pavani Diwanji                    
                </author>
                <author>
                    Benjamin Renaud                    
                </author>
                <since>
                    JDK1.0                    
                </since>
            </javadoc>
            <javadoc line="45">
                Perform class initialization                
            </javadoc>
            <scope line="48"/>
            <declaration name="buf" type="byte[]" line="58"/>
            <declaration name="offset" type="int" line="59"/>
            <declaration name="length" type="int" line="60"/>
            <declaration name="bufLength" type="int" line="61"/>
            <declaration name="address" type="InetAddress" line="62"/>
            <declaration name="port" type="int" line="63"/>
            <javadoc line="65">
                Constructs a &lt;code&gt;DatagramPacket&lt;/code&gt; for receiving packets of
                  length &lt;code&gt;length&lt;/code&gt;, specifying an offset into the buffer.
                  &lt;p&gt;
                  The &lt;code&gt;length&lt;/code&gt; argument must be less than or equal to
                  &lt;code&gt;buf.length&lt;/code&gt;.                
                <param>
                    buf      buffer for holding the incoming datagram.                    
                </param>
                <param>
                    offset   the offset for the buffer                    
                </param>
                <param>
                    length   the number of bytes to read.                    
                </param>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="DatagramPacket" type="constructor" line="78">
                <params>
                    <param name="buf" type="byte"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                </params>
            </method>
            <javadoc line="84">
                Constructs a &lt;code&gt;DatagramPacket&lt;/code&gt; for receiving packets of
                  length &lt;code&gt;length&lt;/code&gt;.
                  &lt;p&gt;
                  The &lt;code&gt;length&lt;/code&gt; argument must be less than or equal to
                  &lt;code&gt;buf.length&lt;/code&gt;.                
                <param>
                    buf      buffer for holding the incoming datagram.                    
                </param>
                <param>
                    length   the number of bytes to read.                    
                </param>
            </javadoc>
            <method name="DatagramPacket" type="constructor" line="94">
                <params>
                    <param name="buf" type="byte"/>
                    <param name="length" type="int"/>
                </params>
            </method>
            <javadoc line="98">
                Constructs a datagram packet for sending packets of length
                  &lt;code&gt;length&lt;/code&gt; with offset &lt;code&gt;ioffset&lt;/code&gt;to the
                  specified port number on the specified host. The
                  &lt;code&gt;length&lt;/code&gt; argument must be less than or equal to
                  &lt;code&gt;buf.length&lt;/code&gt;.                
                <param>
                    buf      the packet data.                    
                </param>
                <param>
                    offset   the packet data offset.                    
                </param>
                <param>
                    length   the packet data length.                    
                </param>
                <param>
                    address  the destination address.                    
                </param>
                <param>
                    port     the destination port number.                    
                </param>
                <see>
                    java.net.InetAddress                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="DatagramPacket" type="constructor" line="115">
                <params>
                    <param name="buf" type="byte"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                    <param name="address" type="InetAddress"/>
                    <param name="port" type="int"/>
                </params>
            </method>
            <javadoc line="121">
                Constructs a datagram packet for sending packets of length
                  &lt;code&gt;length&lt;/code&gt; with offset &lt;code&gt;ioffset&lt;/code&gt;to the
                  specified port number on the specified host. The
                  &lt;code&gt;length&lt;/code&gt; argument must be less than or equal to
                  &lt;code&gt;buf.length&lt;/code&gt;.                
                <param>
                    buf      the packet data.                    
                </param>
                <param>
                    offset   the packet data offset.                    
                </param>
                <param>
                    length   the packet data length.                    
                </param>
                <param>
                    address  the destination socket address.                    
                </param>
                <throws>
                    IllegalArgumentException if address type is not supported                    
                </throws>
                <see>
                    java.net.InetAddress                    
                </see>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="DatagramPacket" type="constructor" line="138">
                <params>
                    <param name="buf" type="byte"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                    <param name="address" type="SocketAddress"/>
                </params>
            </method>
            <javadoc line="143">
                Constructs a datagram packet for sending packets of length
                  &lt;code&gt;length&lt;/code&gt; to the specified port number on the specified
                  host. The &lt;code&gt;length&lt;/code&gt; argument must be less than or equal
                  to &lt;code&gt;buf.length&lt;/code&gt;.                
                <param>
                    buf      the packet data.                    
                </param>
                <param>
                    length   the packet length.                    
                </param>
                <param>
                    address  the destination address.                    
                </param>
                <param>
                    port     the destination port number.                    
                </param>
                <see>
                    java.net.InetAddress                    
                </see>
            </javadoc>
            <method name="DatagramPacket" type="constructor" line="156">
                <params>
                    <param name="buf" type="byte"/>
                    <param name="length" type="int"/>
                    <param name="address" type="InetAddress"/>
                    <param name="port" type="int"/>
                </params>
            </method>
            <javadoc line="160">
                Constructs a datagram packet for sending packets of length
                  &lt;code&gt;length&lt;/code&gt; to the specified port number on the specified
                  host. The &lt;code&gt;length&lt;/code&gt; argument must be less than or equal
                  to &lt;code&gt;buf.length&lt;/code&gt;.                
                <param>
                    buf      the packet data.                    
                </param>
                <param>
                    length   the packet length.                    
                </param>
                <param>
                    address  the destination address.                    
                </param>
                <throws>
                    IllegalArgumentException if address type is not supported                    
                </throws>
                <since>
                    1.4                    
                </since>
                <see>
                    java.net.InetAddress                    
                </see>
            </javadoc>
            <method name="DatagramPacket" type="constructor" line="174">
                <params>
                    <param name="buf" type="byte"/>
                    <param name="length" type="int"/>
                    <param name="address" type="SocketAddress"/>
                </params>
            </method>
            <javadoc line="178">
                Returns the IP address of the machine to which this datagram is being
                  sent or from which the datagram was received.                
                <return>
                    the IP address of the machine to which this datagram is being
                      sent or from which the datagram was received.                    
                </return>
                <see>
                    java.net.InetAddress                    
                </see>
                <see>
                    #setAddress(java.net.InetAddress)                    
                </see>
            </javadoc>
            <method name="getAddress" type="InetAddress" line="187"/>
            <javadoc line="191">
                Returns the port number on the remote host to which this datagram is
                  being sent or from which the datagram was received.                
                <return>
                    the port number on the remote host to which this datagram is
                      being sent or from which the datagram was received.                    
                </return>
                <see>
                    #setPort(int)                    
                </see>
            </javadoc>
            <method name="getPort" type="int" line="199"/>
            <javadoc line="203">
                Returns the data buffer. The data received or the data to be sent
                  starts from the &lt;code&gt;offset&lt;/code&gt; in the buffer,
                  and runs for &lt;code&gt;length&lt;/code&gt; long.                
                <return>
                    the buffer used to receive or  send data                    
                </return>
                <see>
                    #setData(byte[],int,int)                    
                </see>
            </javadoc>
            <method name="getData" type="byte[]" line="211"/>
            <javadoc line="215">
                Returns the offset of the data to be sent or the offset of the
                  data received.                
                <return>
                    the offset of the data to be sent or the offset of the
                      data received.                    
                </return>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="getOffset" type="int" line="224"/>
            <javadoc line="228">
                Returns the length of the data to be sent or the length of the
                  data received.                
                <return>
                    the length of the data to be sent or the length of the
                      data received.                    
                </return>
                <see>
                    #setLength(int)                    
                </see>
            </javadoc>
            <method name="getLength" type="int" line="236"/>
            <javadoc line="240">
                Set the data buffer for this packet. This sets the
                  data, length and offset of the packet.                
                <param>
                    buf the buffer to set for this packet                    
                </param>
                <param>
                    offset the offset into the data                    
                </param>
                <param>
                    length the length of the data
                      and/or the length of the buffer used to receive data                    
                </param>
                <exception>
                    NullPointerException if the argument is null                    
                </exception>
                <see>
                    #getData                    
                </see>
                <see>
                    #getOffset                    
                </see>
                <see>
                    #getLength                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="setData" type="void" line="259">
                <params>
                    <param name="buf" type="byte[]"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                </params>
                <comment line="261">
                                        
                </comment>
                <scope line="263"/>
            </method>
            <javadoc line="272">
                Sets the IP address of the machine to which this datagram
                  is being sent.                
                <param>
                    iaddr the &lt;code&gt;InetAddress&lt;/code&gt;                    
                </param>
                <since>
                    JDK1.1                    
                </since>
                <see>
                    #getAddress()                    
                </see>
            </javadoc>
            <method name="setAddress" type="void" line="279">
                <params>
                    <param name="iaddr" type="InetAddress"/>
                </params>
            </method>
            <javadoc line="283">
                Sets the port number on the remote host to which this datagram
                  is being sent.                
                <param>
                    iport the port number                    
                </param>
                <since>
                    JDK1.1                    
                </since>
                <see>
                    #getPort()                    
                </see>
            </javadoc>
            <method name="setPort" type="void" line="290">
                <params>
                    <param name="iport" type="int"/>
                </params>
                <scope line="291"/>
            </method>
            <javadoc line="297">
                Sets the SocketAddress (usually IP address + port number) of the remote
                  host to which this datagram is being sent.                
                <param>
                    address the &lt;code&gt;SocketAddress&lt;/code&gt;                    
                </param>
                <throws>
                    IllegalArgumentException if address is null or is a
                      SocketAddress subclass not supported by this socket                    
                </throws>
                <since>
                    1.4                    
                </since>
                <see>
                    #getSocketAddress                    
                </see>
            </javadoc>
            <method name="setSocketAddress" type="void" line="308">
                <params>
                    <param name="address" type="SocketAddress"/>
                </params>
                <declaration name="addr" type="InetSocketAddress" line="311"/>
            </method>
            <javadoc line="318">
                Gets the SocketAddress (usually IP address + port number) of the remote
                  host that this packet is being sent to or is coming from.                
                <return>
                    the &lt;code&gt;SocketAddress&lt;/code&gt;                    
                </return>
                <since>
                    1.4                    
                </since>
                <see>
                    #setSocketAddress                    
                </see>
            </javadoc>
            <method name="getSocketAddress" type="SocketAddress" line="326"/>
            <javadoc line="330">
                Set the data buffer for this packet. With the offset of
                  this DatagramPacket set to 0, and the length set to
                  the length of &lt;code&gt;buf&lt;/code&gt;.                
                <param>
                    buf the buffer to set for this packet.                    
                </param>
                <exception>
                    NullPointerException if the argument is null.                    
                </exception>
                <see>
                    #getLength                    
                </see>
                <see>
                    #getData                    
                </see>
                <since>
                    JDK1.1                    
                </since>
            </javadoc>
            <method name="setData" type="void" line="344">
                <params>
                    <param name="buf" type="byte[]"/>
                </params>
                <scope line="345"/>
            </method>
            <javadoc line="354">
                Set the length for this packet. The length of the packet is
                  the number of bytes from the packet&apos;s data buffer that will be
                  sent, or the number of bytes of the packet&apos;s data buffer that
                  will be used for receiving data. The length must be lesser or
                  equal to the offset plus the length of the packet&apos;s buffer.                
                <param>
                    length the length to set for this packet.                    
                </param>
                <exception>
                    IllegalArgumentException if the length is negative
                      of if the length is greater than the packet&apos;s data buffer
                      length.                    
                </exception>
                <see>
                    #getLength                    
                </see>
                <see>
                    #setData                    
                </see>
                <since>
                    JDK1.1                    
                </since>
            </javadoc>
            <method name="setLength" type="void" line="372">
                <params>
                    <param name="length" type="int"/>
                </params>
                <scope line="374"/>
            </method>
            <method name="init" type="void" line="381"/>
            <javadoc line="381">
                Perform class load-time initializations.                
            </javadoc>
        </class>
    </source>