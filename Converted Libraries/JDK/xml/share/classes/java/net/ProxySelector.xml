<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.net">
        <import package="java.io.IOException"/>
        <import package="java.util.List"/>
        <import package="sun.security.util.SecurityConstants"/>
        <class name="ProxySelector" line="5">
            <javadoc line="5">
                Selects the proxy server to use, if any, when connecting to the
                  network resource referenced by a URL. A proxy selector is a
                  concrete sub-class of this class and is registered by invoking the{@link java.net.ProxySelector#setDefault setDefault} method. The
                  currently registered proxy selector can be retrieved by calling{@link java.net.ProxySelector#getDefault getDefault} method.
                  &lt;p&gt; When a proxy selector is registered, for instance, a subclass
                  of URLConnection class should call the {@link #select select}method for each URL request so that the proxy selector can decide
                  if a direct, or proxied connection should be used. The {@link #select select} method returns an iterator over a collection with
                  the preferred connection approach.
                  &lt;p&gt; If a connection cannot be established to a proxy (PROXY or
                  SOCKS) servers then the caller should call the proxy selector&apos;s{@link #connectFailed connectFailed} method to notify the proxy
                  selector that the proxy server is unavailable. &lt;/p&gt;
                  &lt;P&gt;The default proxy selector does enforce a
                  &lt;a href=&quot;doc-files/net-properties.html#Proxies&quot;&gt;set of System Properties&lt;/a&gt;
                  related to proxy settings.&lt;/P&gt;                
                <author>
                    Yingxian Wang                    
                </author>
                <author>
                    Jean-Christophe Collet                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="theProxySelector" type="ProxySelector" line="25"/>
            <javadoc line="25">
                The system wide proxy selector that selects the proxy server to
                  use, if any, when connecting to a remote object referenced by
                  an URL.                
                <see>
                    #setDefault(ProxySelector)                    
                </see>
            </javadoc>
            <scope line="32">
                <scope line="33">
                    <declaration name="c" type="Class" line="34"/>
                    <scope line="35"/>
                </scope>
                <scope line="39"/>
            </scope>
            <javadoc line="43">
                Gets the system-wide proxy selector.                
                <throws>
                    SecurityExceptionIf a security manager has been installed and it denies{@link NetPermission}<tt>("getProxySelector")</tt>                    
                </throws>
                <see>
                    #setDefault(ProxySelector)                    
                </see>
                <return>
                    the system-wide <code>ProxySelector</code>                    
                </return>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="getDefault" type="ProxySelector" line="50">
                <declaration name="sm" type="SecurityManager" line="51"/>
                <scope line="52"/>
            </method>
            <javadoc line="57">
                Sets (or unsets) the system-wide proxy selector.
                  Note: non-standard protocol handlers may ignore this setting.                
                <param>
                    ps The HTTP proxy selector, or
                      <code>null</code> to unset the proxy selector.                    
                </param>
                <throws>
                    SecurityExceptionIf a security manager has been installed and it denies{@link NetPermission}<tt>("setProxySelector")</tt>                    
                </throws>
                <see>
                    #getDefault()                    
                </see>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="setDefault" type="void" line="66">
                <params>
                    <param name="ps" type="ProxySelector"/>
                </params>
                <declaration name="sm" type="SecurityManager" line="67"/>
                <scope line="68"/>
            </method>
            <method name="select" type="List<Proxy>" line="73"/>
            <javadoc line="73">
                Selects all the applicable proxies based on the protocol to
                  access the resource with and a destination address to access
                  the resource at.
                  The format of the URI is defined as follow:
                  &lt;UL&gt;
                  &lt;LI&gt;http URI for http connections&lt;/LI&gt;
                  &lt;LI&gt;https URI for https connections
                  &lt;LI&gt;ftp URI for ftp connections&lt;/LI&gt;
                  &lt;LI&gt;&lt;code&gt;socket://host:port&lt;/code&gt;&lt;br&gt;
                  for tcp client sockets connections&lt;/LI&gt;
                  &lt;/UL&gt;                
                <param>
                    uriThe URI that a connection is required to                    
                </param>
                <return>
                    a List of Proxies. Each element in the
                      the List is of type{@link java.net.Proxy Proxy};
                      when no proxy is available, the list will
                      contain one element of type{@link java.net.Proxy Proxy}that represents a direct connection.                    
                </return>
                <throws>
                    IllegalArgumentException if the argument is null                    
                </throws>
            </javadoc>
            <method name="connectFailed" type="void" line="93"/>
            <javadoc line="93">
                Called to indicate that a connection could not be established
                  to a proxy/socks server. An implementation of this method can
                  temporarily remove the proxies or reorder the sequence of
                  proxies returned by {@link #select(URI)}, using the address
                  and the IOException caught when trying to connect.                
                <param>
                    uriThe URI that the proxy at sa failed to serve.                    
                </param>
                <param>
                    saThe socket address of the proxy/SOCKS server                    
                </param>
                <param>
                    ioeThe I/O exception thrown when the connect failed.                    
                </param>
                <throws>
                    IllegalArgumentException if either argument is null                    
                </throws>
            </javadoc>
        </class>
    </source>