<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.net">
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <interface name="CookieStore">
            <javadoc line="4">
                A CookieStore object represents a storage for cookie. Can store and retrieve
                  cookies.
                  &lt;p&gt;{@link CookieManager} will call &lt;tt&gt;CookieStore.add&lt;/tt&gt; to save cookies
                  for every incoming HTTP response, and call &lt;tt&gt;CookieStore.get&lt;/tt&gt; to
                  retrieve cookie for every outgoing HTTP request. A CookieStore
                  is responsible for removing HttpCookie instances which have expired.                
                <author>
                    Edward Wang                    
                </author>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="add" type="void" line="15"/>
            <javadoc line="15">
                Adds one HTTP cookie to the store. This is called for every
                  incoming HTTP response.
                  &lt;p&gt;A cookie to store may or may not be associated with an URI. If it
                  is not associated with an URI, the cookie&apos;s domain and path attribute
                  will indicate where it comes from. If it is associated with an URI and
                  its domain and path attribute are not speicifed, given URI will indicate
                  where this cookie comes from.
                  &lt;p&gt;If a cookie corresponding to the given URI already exists,
                  then it is replaced with the new one.                
                <param>
                    uri       the uri this cookie associated with.
                      if &lt;tt&gt;null&lt;/tt&gt;, this cookie will not be associated
                      with an URI                    
                </param>
                <param>
                    cookie    the cookie to store                    
                </param>
                <throws>
                    NullPointerException if &lt;tt&gt;cookie&lt;/tt&gt; is &lt;tt&gt;null&lt;/tt&gt;                    
                </throws>
                <see>
                    #get                    
                </see>
            </javadoc>
            <method name="get" type="List&lt;HttpCookie&gt;" line="33"/>
            <javadoc line="33">
                Retrieve cookies associated with given URI, or whose domain matches the
                  given URI. Only cookies that have not expired are returned.
                  This is called for every outgoing HTTP request.                
                <return>
                    an immutable list of HttpCookie,
                      return empty list if no cookies match the given URI                    
                </return>
                <throws>
                    NullPointerException if &lt;tt&gt;uri&lt;/tt&gt; is &lt;tt&gt;null&lt;/tt&gt;                    
                </throws>
                <see>
                    #add                    
                </see>
            </javadoc>
            <method name="getCookies" type="List&lt;HttpCookie&gt;" line="43"/>
            <javadoc line="43">
                Get all not-expired cookies in cookie store.                
                <return>
                    an immutable list of http cookies;
                      return empty list if there&apos;s no http cookie in store                    
                </return>
            </javadoc>
            <method name="getURIs" type="List&lt;URI&gt;" line="49"/>
            <javadoc line="49">
                Get all URIs which identify the cookies in this cookie store.                
                <return>
                    an immutable list of URIs;
                      return empty list if no cookie in this cookie store
                      is associated with an URI                    
                </return>
            </javadoc>
            <method name="remove" type="boolean" line="56"/>
            <javadoc line="56">
                Remove a cookie from store.                
                <param>
                    uri       the uri this cookie associated with.
                      if &lt;tt&gt;null&lt;/tt&gt;, the cookie to be removed is not associated
                      with an URI when added; if not &lt;tt&gt;null&lt;/tt&gt;, the cookie
                      to be removed is associated with the given URI when added.                    
                </param>
                <param>
                    cookie    the cookie to remove                    
                </param>
                <return>
                    &lt;tt&gt;true&lt;/tt&gt; if this store contained the specified cookie                    
                </return>
                <throws>
                    NullPointerException if &lt;tt&gt;cookie&lt;/tt&gt; is &lt;tt&gt;null&lt;/tt&gt;                    
                </throws>
            </javadoc>
            <method name="removeAll" type="boolean" line="67"/>
            <javadoc line="67">
                Remove all cookies in this cookie store.                
                <return>
                    &lt;tt&gt;true&lt;/tt&gt; if this store changed as a result of the call                    
                </return>
            </javadoc>
        </interface>
    </source>