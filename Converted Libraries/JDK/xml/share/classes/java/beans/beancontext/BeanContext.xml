<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.beans.beancontext">
        <import package="java.beans.DesignMode"/>
        <import package="java.beans.Visibility"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.net.URL"/>
        <import package="java.util.Collection"/>
        <import package="java.util.Locale"/>
        <interface name="BeanContext">
            <implements interface="BeanContextChild"/>
            <implements interface="Collection"/>
            <implements interface="DesignMode"/>
            <implements interface="Visibility"/>
            <javadoc line="9">
                &lt;p&gt;
                  The BeanContext acts a logical hierarchical container for JavaBeans.
                  &lt;/p&gt;                
                <author>
                    Laurence P. G. Cable                    
                </author>
                <since>
                    1.2                    
                </since>
                <see>
                    java.beans.Beans                    
                </see>
                <see>
                    java.beans.beancontext.BeanContextChild                    
                </see>
                <see>
                    java.beans.beancontext.BeanContextMembershipListener                    
                </see>
                <see>
                    java.beans.PropertyChangeEvent                    
                </see>
                <see>
                    java.beans.DesignMode                    
                </see>
                <see>
                    java.beans.Visibility                    
                </see>
                <see>
                    java.util.Collection                    
                </see>
            </javadoc>
            <method name="instantiateChild" type="Object" line="24"/>
            <javadoc line="24">
                Instantiate the javaBean named as a
                  child of this &lt;code&gt;BeanContext&lt;/code&gt;.
                  The implementation of the JavaBean is
                  derived from the value of the beanName parameter,
                  and is defined by the
                  &lt;code&gt;java.beans.Beans.instantiate()&lt;/code&gt; method.                
                <param>
                    beanName The name of the JavaBean to instantiate
                      as a child of this <code>BeanContext</code>                    
                </param>
                <throws>
                    <code>IOException</code>                    
                </throws>
                <throws>
                    <code>ClassNotFoundException</code> if the class identified
                      by the beanName parameter is not found                    
                </throws>
            </javadoc>
            <method name="getResourceAsStream" type="InputStream" line="38"/>
            <javadoc line="38">
                Analagous to &lt;code&gt;java.lang.ClassLoader.getResourceAsStream()&lt;/code&gt;,
                  this method allows a &lt;code&gt;BeanContext&lt;/code&gt; implementation
                  to interpose behavior between the child &lt;code&gt;Component&lt;/code&gt;
                  and underlying &lt;code&gt;ClassLoader&lt;/code&gt;.                
                <param>
                    name the resource name                    
                </param>
                <param>
                    bcc the specified child                    
                </param>
                <return>
                    an <code>InputStream</code> for reading the resource,
                      or <code>null</code> if the resource could not
                      be found.                    
                </return>
                <throws>
                    <code>IllegalArgumentException</code> if
                      the resource is not valid                    
                </throws>
            </javadoc>
            <method name="getResource" type="URL" line="52"/>
            <javadoc line="52">
                Analagous to &lt;code&gt;java.lang.ClassLoader.getResource()&lt;/code&gt;, this
                  method allows a &lt;code&gt;BeanContext&lt;/code&gt; implementation to interpose
                  behavior between the child &lt;code&gt;Component&lt;/code&gt;
                  and underlying &lt;code&gt;ClassLoader&lt;/code&gt;.                
                <param>
                    name the resource name                    
                </param>
                <param>
                    bcc the specified child                    
                </param>
                <return>
                    a <code>URL</code> for the named
                      resource for the specified child                    
                </return>
                <throws>
                    <code>IllegalArgumentException</code>
                      if the resource is not valid                    
                </throws>
            </javadoc>
            <method name="addBeanContextMembershipListener" type="void" line="65"/>
            <javadoc line="65">
                Adds the specified &lt;code&gt;BeanContextMembershipListener&lt;/code&gt;
                  to receive &lt;code&gt;BeanContextMembershipEvents&lt;/code&gt; from
                  this &lt;code&gt;BeanContext&lt;/code&gt; whenever it adds
                  or removes a child &lt;code&gt;Component&lt;/code&gt;(s).                
                <param>
                    bcml the <code>BeanContextMembershipListener</code> to be added                    
                </param>
            </javadoc>
            <method name="removeBeanContextMembershipListener" type="void" line="73"/>
            <javadoc line="73">
                Removes the specified &lt;code&gt;BeanContextMembershipListener&lt;/code&gt;
                  so that it no longer receives &lt;code&gt;BeanContextMembershipEvent&lt;/code&gt;s
                  when the child &lt;code&gt;Component&lt;/code&gt;(s) are added or removed.                
                <param>
                    bcml the <code>BeanContextMembershipListener</code>
                      to be removed                    
                </param>
            </javadoc>
            <declaration name="globalHierarchyLock" type="Object" line="81"/>
            <javadoc line="81">
                This global lock is used by both &lt;code&gt;BeanContext&lt;/code&gt;
                  and &lt;code&gt;BeanContextServices&lt;/code&gt; implementors
                  to serialize changes in a &lt;code&gt;BeanContext&lt;/code&gt;
                  hierarchy and any service requests etc.                
            </javadoc>
        </interface>
    </source>