<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.beans.beancontext">
        <import package="java.util.ArrayList"/>
        <import package="java.util.Collection"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.Map"/>
        <import package="java.util.Map.Entry"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.Serializable"/>
        <import package="java.util.TooManyListenersException"/>
        <import package="java.util.Locale"/>
        <class name="BeanContextServicesSupport" line="45">
            <extends class="BeanContextSupport"/>
            <comment line="591">
                                
            </comment>
            <comment line="628">
                                
            </comment>
            <comment line="814">
                                
            </comment>
            <comment line="1213">
                fields                
            </comment>
            <implements interface="BeanContextServices"/>
            <javadoc line="45">
                &lt;p&gt;
                  This helper class provides a utility implementation of the
                  java.beans.beancontext.BeanContextServices interface.
                  &lt;/p&gt;
                  &lt;p&gt;
                  Since this class directly implements the BeanContextServices interface,
                  the class can, and is intended to be used either by subclassing this
                  implementation, or via delegation of an instance of this class
                  from another through the BeanContextProxy interface.
                  &lt;/p&gt;                
                <author>
                    Laurence P. G. Cable                    
                </author>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="63"/>
            <javadoc line="65">
                &lt;p&gt;
                  Construct a BeanContextServicesSupport instance
                  &lt;/p&gt;                
                <param>
                    peer      The peer BeanContext we are supplying an implementation for, if null the this object is its own peer                    
                </param>
                <param>
                    lcle      The current Locale for this BeanContext.                    
                </param>
                <param>
                    dTime     The initial state, true if in design mode, false if runtime.                    
                </param>
                <param>
                    visible   The initial visibility.                    
                </param>
            </javadoc>
            <method name="BeanContextServicesSupport" type="constructor" line="77">
                <params>
                    <param name="peer" type="BeanContextServices"/>
                    <param name="lcle" type="Locale"/>
                    <param name="dTime" type="boolean"/>
                    <param name="visible" type="boolean"/>
                </params>
            </method>
            <javadoc line="81">
                Create an instance using the specified Locale and design mode.                
                <param>
                    peer      The peer BeanContext we are supplying an implementation for, if null the this object is its own peer                    
                </param>
                <param>
                    lcle      The current Locale for this BeanContext.                    
                </param>
                <param>
                    dtime     The initial state, true if in design mode, false if runtime.                    
                </param>
            </javadoc>
            <method name="BeanContextServicesSupport" type="constructor" line="89">
                <params>
                    <param name="peer" type="BeanContextServices"/>
                    <param name="lcle" type="Locale"/>
                    <param name="dtime" type="boolean"/>
                </params>
            </method>
            <javadoc line="93">
                Create an instance using the specified locale                
                <param>
                    peer      The peer BeanContext we are supplying an implementation for, if null the this object is its own peer                    
                </param>
                <param>
                    lcle      The current Locale for this BeanContext.                    
                </param>
            </javadoc>
            <method name="BeanContextServicesSupport" type="constructor" line="100">
                <params>
                    <param name="peer" type="BeanContextServices"/>
                    <param name="lcle" type="Locale"/>
                </params>
            </method>
            <javadoc line="104">
                Create an instance with a peer                
                <param>
                    peer      The peer BeanContext we are supplying an implementation for, if null the this object is its own peer                    
                </param>
            </javadoc>
            <method name="BeanContextServicesSupport" type="constructor" line="110">
                <params>
                    <param name="peer" type="BeanContextServices"/>
                </params>
            </method>
            <javadoc line="114">
                Create an instance that is not a delegate of another object                
            </javadoc>
            <method name="BeanContextServicesSupport" type="constructor" line="118"/>
            <javadoc line="122">
                called by BeanContextSupport superclass during construction and
                  deserialization to initialize subclass transient state.
                  subclasses may envelope this method, but should not override it or
                  call it directly.                
            </javadoc>
            <method name="initialize" type="void" line="130"/>
            <javadoc line="137">
                Gets the &lt;tt&gt;BeanContextServices&lt;/tt&gt; associated with this
                  &lt;tt&gt;BeanContextServicesSupport&lt;/tt&gt;.                
                <return>
                    the instance of <tt>BeanContext</tt>
                      this object is providing the implementation for.                    
                </return>
            </javadoc>
            <method name="getBeanContextServicesPeer" type="BeanContextServices" line="144"/>
            <class name="BCSSChild" line="148">
                <extends class="BeanContextSupport.BCSChild"/>
                <comment line="151">
                    protected nested class containing per child information, an instance
                     of which is associated with each child in the &quot;children&quot; hashtable.
                     subclasses can extend this class to include their own per-child state.
                    
                     Note that this &apos;value&apos; is serialized with the corresponding child &apos;key&apos;
                     when the BeanContextSupport is serialized.                    
                </comment>
                <comment line="164">
                    private nested class to map serviceClass to Provider and requestors
                     listeners.                    
                </comment>
                <comment line="296">
                    per service reference info ...                    
                </comment>
                <comment line="324">
                    note usage of service per requestor, per service                    
                </comment>
                <comment line="376">
                    release a service reference                    
                </comment>
                <comment line="420">
                    revoke a service                    
                </comment>
                <comment line="477">
                    release all references for this child since it has been unnested.                    
                </comment>
                <comment line="568">
                    fields                    
                </comment>
                <comment line="611">
                    fields                    
                </comment>
                <comment line="766">
                    a nested subclass used to represent a proxy for serviceClasses delegated
                     to an enclosing BeanContext.                    
                </comment>
                <comment line="807">
                    fields                    
                </comment>
                <javadoc line="148">
                                        
                </javadoc>
                <declaration name="serialVersionUID" type="long" line="161"/>
                <class name="BCSSCServiceClassRef" line="168">
                    <comment line="171">
                        create an instance of a service ref                        
                    </comment>
                    <comment line="184">
                        add a requestor and assoc listener                        
                    </comment>
                    <comment line="195">
                        remove a requestor                        
                    </comment>
                    <comment line="201">
                        check a requestors listener                        
                    </comment>
                    <comment line="281">
                        fields                        
                    </comment>
                    <comment line="290">
                        proxy                        
                    </comment>
                    <comment line="313">
                        fields                        
                    </comment>
                    <method name="BCSSCServiceClassRef" type="constructor" line="172">
                        <params>
                            <param name="sc" type="Class"/>
                            <param name="bcsp" type="BeanContextServiceProvider"/>
                            <param name="delegated" type="boolean"/>
                        </params>
                    </method>
                    <method name="addRequestor" type="void" line="185">
                        <params>
                            <param name="requestor" type="Object"/>
                            <param name="bcsrl" type="BeanContextServiceRevokedListener"/>
                        </params>
                        <declaration name="cbcsrl" type="BeanContextServiceRevokedListener" line="186"/>
                    </method>
                    <method name="removeRequestor" type="void" line="196">
                        <params>
                            <param name="requestor" type="Object"/>
                        </params>
                    </method>
                    <method name="verifyRequestor" type="void" line="202">
                        <params>
                            <param name="requestor" type="Object"/>
                            <param name="bcsrl" type="BeanContextServiceRevokedListener"/>
                        </params>
                        <declaration name="cbcsrl" type="BeanContextServiceRevokedListener" line="203"/>
                    </method>
                    <method name="verifyAndMaybeSetProvider" type="void" line="209">
                        <params>
                            <param name="bcsp" type="BeanContextServiceProvider"/>
                            <param name="isDelegated" type="boolean"/>
                        </params>
                        <comment line="213">
                            the provider is delegated                            
                        </comment>
                        <comment line="220">
                            the provider is registered with this BCS                            
                        </comment>
                        <declaration name="current" type="BeanContextServiceProvider" line="210"/>
                        <scope line="212">
                            <scope line="215"/>
                        </scope>
                        <scope line="219">
                            <scope line="222"/>
                        </scope>
                    </method>
                    <method name="cloneOfEntries" type="Iterator" line="233"/>
                    <method name="entries" type="Iterator" line="237"/>
                    <method name="isEmpty" type="boolean" line="239"/>
                    <method name="getServiceClass" type="Class" line="241"/>
                    <method name="getServiceProvider" type="BeanContextServiceProvider" line="243"/>
                    <method name="getDelegateProvider" type="BeanContextServiceProvider" line="247"/>
                    <method name="isDelegated" type="boolean" line="251"/>
                    <method name="addRef" type="void" line="253">
                        <params>
                            <param name="delegated" type="boolean"/>
                        </params>
                        <scope line="254"/>
                        <scope line="256"/>
                    </method>
                    <method name="releaseRef" type="void" line="262">
                        <params>
                            <param name="delegated" type="boolean"/>
                        </params>
                        <scope line="263">
                            <scope line="264"/>
                        </scope>
                        <scope line="267">
                            <scope line="268"/>
                        </scope>
                    </method>
                    <method name="getRefs" type="int" line="274"/>
                    <method name="getDelegateRefs" type="int" line="276"/>
                    <method name="getServiceRefs" type="int" line="278"/>
                    <declaration name="serviceClass" type="Class" line="284"/>
                    <declaration name="serviceProvider" type="BeanContextServiceProvider" line="286"/>
                    <declaration name="serviceRefs" type="int" line="287"/>
                    <declaration name="delegateProvider" type="BeanContextServiceProvider" line="289"/>
                    <declaration name="delegateRefs" type="int" line="290"/>
                    <declaration name="requestors" type="HashMap" line="292"/>
                </class>
                <class name="BCSSCServiceRef" line="299">
                    <comment line="171">
                        create an instance of a service ref                        
                    </comment>
                    <comment line="184">
                        add a requestor and assoc listener                        
                    </comment>
                    <comment line="195">
                        remove a requestor                        
                    </comment>
                    <comment line="201">
                        check a requestors listener                        
                    </comment>
                    <comment line="281">
                        fields                        
                    </comment>
                    <comment line="290">
                        proxy                        
                    </comment>
                    <comment line="313">
                        fields                        
                    </comment>
                    <method name="BCSSCServiceRef" type="constructor" line="300">
                        <params>
                            <param name="scref" type="BCSSCServiceClassRef"/>
                            <param name="isDelegated" type="boolean"/>
                        </params>
                    </method>
                    <method name="addRef" type="void" line="305"/>
                    <method name="release" type="int" line="306"/>
                    <method name="getServiceClassRef" type="BCSSCServiceClassRef" line="308"/>
                    <method name="isDelegated" type="boolean" line="310"/>
                    <declaration name="serviceClassRef" type="BCSSCServiceClassRef" line="316"/>
                    <declaration name="refCnt" type="int" line="317"/>
                    <declaration name="delegated" type="boolean" line="318"/>
                </class>
                <method name="BCSSChild" type="constructor" line="321">
                    <params>
                        <param name="bcc" type="Object"/>
                        <param name="peer" type="Object"/>
                    </params>
                </method>
                <method name="usingService" type="void" line="325">
                    <params>
                        <param name="requestor" type="Object"/>
                        <param name="service" type="Object"/>
                        <param name="serviceClass" type="Class"/>
                        <param name="bcsp" type="BeanContextServiceProvider"/>
                        <param name="isDelegated" type="boolean"/>
                        <param name="bcsrl" type="BeanContextServiceRevokedListener"/>
                    </params>
                    <comment line="328">
                        first, process mapping from serviceClass to requestor(s)                        
                    </comment>
                    <comment line="337">
                        new service being used ...                        
                    </comment>
                    <comment line="341">
                        existing service ...                        
                    </comment>
                    <comment line="342">
                        throws                        
                    </comment>
                    <comment line="343">
                        throws                        
                    </comment>
                    <comment line="349">
                        now handle mapping from requestor to service(s)                        
                    </comment>
                    <declaration name="serviceClassRef" type="BCSSCServiceClassRef" line="329"/>
                    <scope line="336"/>
                    <scope line="340"/>
                    <declaration name="serviceRef" type="BCSSCServiceRef" line="350"/>
                    <declaration name="services" type="Map" line="351"/>
                    <scope line="353"/>
                    <scope line="355"/>
                    <scope line="359"/>
                    <scope line="366"/>
                    <scope line="370"/>
                </method>
                <method name="releaseService" type="void" line="377">
                    <params>
                        <param name="requestor" type="Object"/>
                        <param name="service" type="Object"/>
                    </params>
                    <comment line="383">
                        oops its not there anymore!                        
                    </comment>
                    <comment line="387">
                        oops its not there anymore!                        
                    </comment>
                    <declaration name="services" type="Map" line="380"/>
                    <declaration name="serviceRef" type="BCSSCServiceRef" line="384"/>
                    <declaration name="serviceClassRef" type="BCSSCServiceClassRef" line="388"/>
                    <declaration name="isDelegated" type="boolean" line="389"/>
                    <declaration name="bcsp" type="BeanContextServiceProvider" line="390"/>
                    <scope line="397">
                        <scope line="401"/>
                        <scope line="406"/>
                        <scope line="410"/>
                    </scope>
                </method>
                <method name="revokeService" type="void" line="421">
                    <params>
                        <param name="serviceClass" type="Class"/>
                        <param name="isDelegated" type="boolean"/>
                        <param name="revokeNow" type="boolean"/>
                    </params>
                    <declaration name="serviceClassRef" type="BCSSCServiceClassRef" line="424"/>
                    <declaration name="i" type="Iterator" line="428"/>
                    <declaration name="bcsre" type="BeanContextServiceRevokedEvent" line="430"/>
                    <declaration name="noMoreRefs" type="boolean" line="431"/>
                    <scope line="433">
                        <declaration name="entry" type="Map.Entry" line="434"/>
                        <declaration name="listener" type="BeanContextServiceRevokedListener" line="435"/>
                        <scope line="437">
                            <declaration name="requestor" type="Object" line="438"/>
                            <declaration name="services" type="Map" line="439"/>
                            <scope line="441">
                                <declaration name="i1" type="Iterator" line="442"/>
                                <scope line="444">
                                    <declaration name="tmp" type="Map.Entry" line="445"/>
                                    <declaration name="serviceRef" type="BCSSCServiceRef" line="447"/>
                                    <scope line="448"/>
                                </scope>
                                <scope line="453"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="464"/>
                </method>
                <method name="cleanupReferences" type="void" line="478">
                    <declaration name="requestors" type="Iterator" line="482"/>
                    <scope line="484">
                        <declaration name="tmp" type="Map.Entry" line="485"/>
                        <declaration name="requestor" type="Object" line="486"/>
                        <declaration name="services" type="Iterator" line="487"/>
                        <scope line="491">
                            <declaration name="entry" type="Map.Entry" line="492"/>
                            <declaration name="service" type="Object" line="493"/>
                            <declaration name="sref" type="BCSSCServiceRef" line="494"/>
                            <declaration name="scref" type="BCSSCServiceClassRef" line="496"/>
                            <declaration name="bcsp" type="BeanContextServiceProvider" line="498"/>
                            <scope line="503"/>
                        </scope>
                    </scope>
                </method>
                <method name="revokeAllDelegatedServicesNow" type="void" line="513">
                    <declaration name="serviceClassRefs" type="Iterator" line="516"/>
                    <scope line="519">
                        <declaration name="serviceClassRef" type="BCSSCServiceClassRef" line="520"/>
                        <declaration name="i" type="Iterator" line="524"/>
                        <declaration name="bcsre" type="BeanContextServiceRevokedEvent" line="525"/>
                        <declaration name="noMoreRefs" type="boolean" line="526"/>
                        <scope line="528">
                            <declaration name="entry" type="Map.Entry" line="529"/>
                            <declaration name="listener" type="BeanContextServiceRevokedListener" line="530"/>
                            <declaration name="requestor" type="Object" line="532"/>
                            <declaration name="services" type="Map" line="533"/>
                            <scope line="535">
                                <declaration name="i1" type="Iterator" line="536"/>
                                <scope line="538">
                                    <declaration name="tmp" type="Map.Entry" line="539"/>
                                    <declaration name="serviceRef" type="BCSSCServiceRef" line="541"/>
                                    <scope line="542"/>
                                </scope>
                                <scope line="547"/>
                            </scope>
                        </scope>
                    </scope>
                </method>
                <declaration name="serviceClasses" type="HashMap" line="571"/>
                <declaration name="serviceRequestors" type="HashMap" line="572"/>
            </class>
            <javadoc line="575">
                &lt;p&gt;
                  Subclasses can override this method to insert their own subclass
                  of Child without having to override add() or the other Collection
                  methods that add children to the set.
                  &lt;/p&gt;                
                <param>
                    targetChild the child to create the Child on behalf of                    
                </param>
                <param>
                    peer        the peer if the targetChild and peer are related by BeanContextProxy                    
                </param>
            </javadoc>
            <method name="createBCSChild" type="BCSChild" line="586">
                <params>
                    <param name="targetChild" type="Object"/>
                    <param name="peer" type="Object"/>
                </params>
            </method>
            <class name="BCSSServiceProvider" line="592">
                <comment line="151">
                    protected nested class containing per child information, an instance
                     of which is associated with each child in the &quot;children&quot; hashtable.
                     subclasses can extend this class to include their own per-child state.
                    
                     Note that this &apos;value&apos; is serialized with the corresponding child &apos;key&apos;
                     when the BeanContextSupport is serialized.                    
                </comment>
                <comment line="164">
                    private nested class to map serviceClass to Provider and requestors
                     listeners.                    
                </comment>
                <comment line="296">
                    per service reference info ...                    
                </comment>
                <comment line="324">
                    note usage of service per requestor, per service                    
                </comment>
                <comment line="376">
                    release a service reference                    
                </comment>
                <comment line="420">
                    revoke a service                    
                </comment>
                <comment line="477">
                    release all references for this child since it has been unnested.                    
                </comment>
                <comment line="568">
                    fields                    
                </comment>
                <comment line="611">
                    fields                    
                </comment>
                <comment line="766">
                    a nested subclass used to represent a proxy for serviceClasses delegated
                     to an enclosing BeanContext.                    
                </comment>
                <comment line="807">
                    fields                    
                </comment>
                <implements interface="Serializable"/>
                <javadoc line="592">
                    subclasses may subclass this nested class to add behaviors for
                      each BeanContextServicesProvider.                    
                </javadoc>
                <declaration name="serialVersionUID" type="long" line="598"/>
                <method name="BCSSServiceProvider" type="constructor" line="600">
                    <params>
                        <param name="sc" type="Class"/>
                        <param name="bcsp" type="BeanContextServiceProvider"/>
                    </params>
                </method>
                <method name="getServiceProvider" type="BeanContextServiceProvider" line="606"/>
                <declaration name="serviceProvider" type="BeanContextServiceProvider" line="614"/>
            </class>
            <javadoc line="617">
                subclasses can override this method to create new subclasses of
                  BCSSServiceProvider without having to overrride addService() in
                  order to instantiate.                
            </javadoc>
            <method name="createBCSSServiceProvider" type="BCSSServiceProvider" line="623">
                <params>
                    <param name="sc" type="Class"/>
                    <param name="bcsp" type="BeanContextServiceProvider"/>
                </params>
            </method>
            <javadoc line="629">
                add a BeanContextServicesListener                
                <throws>
                    NullPointerException                    
                </throws>
            </javadoc>
            <method name="addBeanContextServicesListener" type="void" line="635">
                <params>
                    <param name="bcsl" type="BeanContextServicesListener"/>
                </params>
                <scope line="638"/>
            </method>
            <javadoc line="646">
                remove a BeanContextServicesListener                
            </javadoc>
            <method name="removeBeanContextServicesListener" type="void" line="650">
                <params>
                    <param name="bcsl" type="BeanContextServicesListener"/>
                </params>
                <scope line="653"/>
            </method>
            <javadoc line="661">
                add a service                
            </javadoc>
            <method name="addService" type="boolean" line="665">
                <params>
                    <param name="serviceClass" type="Class"/>
                    <param name="bcsp" type="BeanContextServiceProvider"/>
                </params>
            </method>
            <javadoc line="669">
                add a service                
            </javadoc>
            <method name="addService" type="boolean" line="673">
                <params>
                    <param name="serviceClass" type="Class"/>
                    <param name="bcsp" type="BeanContextServiceProvider"/>
                    <param name="fireEvent" type="boolean"/>
                </params>
                <scope line="678">
                    <scope line="681">
                        <declaration name="bcssae" type="BeanContextServiceAvailableEvent" line="689"/>
                        <scope line="693">
                            <declaration name="i" type="Iterator" line="694"/>
                            <scope line="696">
                                <declaration name="c" type="Object" line="697"/>
                                <scope line="699"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="710">
                remove a service                
            </javadoc>
            <method name="revokeService" type="void" line="714">
                <params>
                    <param name="serviceClass" type="Class"/>
                    <param name="bcsp" type="BeanContextServiceProvider"/>
                    <param name="revokeCurrentServicesNow" type="boolean"/>
                </params>
                <comment line="732">
                    get the BCSChild values.                    
                </comment>
                <scope line="719">
                    <declaration name="bcsssp" type="BCSSServiceProvider" line="722"/>
                    <declaration name="i" type="Iterator" line="731"/>
                    <scope line="733"/>
                </scope>
            </method>
            <javadoc line="741">
                has a service, which may be delegated                
            </javadoc>
            <method name="hasService" type="boolean" line="745">
                <params>
                    <param name="serviceClass" type="Class"/>
                </params>
                <scope line="748">
                    <declaration name="bcs" type="BeanContextServices" line="751"/>
                    <scope line="753"/>
                    <scope line="755"/>
                </scope>
            </method>
            <class name="BCSSProxyServiceProvider" line="763">
                <comment line="151">
                    protected nested class containing per child information, an instance
                     of which is associated with each child in the &quot;children&quot; hashtable.
                     subclasses can extend this class to include their own per-child state.
                    
                     Note that this &apos;value&apos; is serialized with the corresponding child &apos;key&apos;
                     when the BeanContextSupport is serialized.                    
                </comment>
                <comment line="164">
                    private nested class to map serviceClass to Provider and requestors
                     listeners.                    
                </comment>
                <comment line="296">
                    per service reference info ...                    
                </comment>
                <comment line="324">
                    note usage of service per requestor, per service                    
                </comment>
                <comment line="376">
                    release a service reference                    
                </comment>
                <comment line="420">
                    revoke a service                    
                </comment>
                <comment line="477">
                    release all references for this child since it has been unnested.                    
                </comment>
                <comment line="568">
                    fields                    
                </comment>
                <comment line="611">
                    fields                    
                </comment>
                <comment line="766">
                    a nested subclass used to represent a proxy for serviceClasses delegated
                     to an enclosing BeanContext.                    
                </comment>
                <comment line="807">
                    fields                    
                </comment>
                <implements interface="BeanContextServiceProvider"/>
                <implements interface="BeanContextServiceRevokedListener"/>
                <javadoc line="763">
                                        
                </javadoc>
                <method name="BCSSProxyServiceProvider" type="constructor" line="772">
                    <params>
                        <param name="bcs" type="BeanContextServices"/>
                    </params>
                </method>
                <method name="getService" type="Object" line="778">
                    <params>
                        <param name="bcs" type="BeanContextServices"/>
                        <param name="requestor" type="Object"/>
                        <param name="serviceClass" type="Class"/>
                        <param name="serviceSelector" type="Object"/>
                    </params>
                    <declaration name="service" type="Object" line="779"/>
                    <scope line="781"/>
                    <scope line="783"/>
                </method>
                <method name="releaseService" type="void" line="790">
                    <params>
                        <param name="bcs" type="BeanContextServices"/>
                        <param name="requestor" type="Object"/>
                        <param name="service" type="Object"/>
                    </params>
                </method>
                <method name="getCurrentServiceSelectors" type="Iterator" line="794">
                    <params>
                        <param name="bcs" type="BeanContextServices"/>
                        <param name="serviceClass" type="Class"/>
                    </params>
                </method>
                <method name="serviceRevoked" type="void" line="798">
                    <params>
                        <param name="bcsre" type="BeanContextServiceRevokedEvent"/>
                    </params>
                    <comment line="800">
                        get the BCSChild values.                        
                    </comment>
                    <declaration name="i" type="Iterator" line="799"/>
                    <scope line="801"/>
                </method>
                <declaration name="nestingCtxt" type="BeanContextServices" line="810"/>
            </class>
            <javadoc line="815">
                obtain a service which may be delegated                
            </javadoc>
            <method name="getService" type="Object" line="819">
                <params>
                    <param name="child" type="BeanContextChild"/>
                    <param name="requestor" type="Object"/>
                    <param name="serviceClass" type="Class"/>
                    <param name="serviceSelector" type="Object"/>
                    <param name="bcsrl" type="BeanContextServiceRevokedListener"/>
                </params>
                <comment line="833">
                    not a child ...                    
                </comment>
                <comment line="840">
                    do bookkeeping ...                    
                </comment>
                <comment line="848">
                    unchecked rt exception                    
                </comment>
                <comment line="858">
                    try to delegate ...                    
                </comment>
                <comment line="862">
                    do bookkeeping ...                    
                </comment>
                <comment line="870">
                    unchecked rt exception                    
                </comment>
                <declaration name="service" type="Object" line="825"/>
                <declaration name="bcsc" type="BCSSChild" line="826"/>
                <declaration name="bcssp" type="BeanContextServices" line="827"/>
                <scope line="829">
                    <scope line="830"/>
                    <declaration name="bcsssp" type="BCSSServiceProvider" line="834"/>
                    <scope line="836">
                        <declaration name="bcsp" type="BeanContextServiceProvider" line="837"/>
                        <scope line="839">
                            <scope line="840"/>
                            <scope line="842"/>
                            <scope line="845"/>
                        </scope>
                    </scope>
                    <scope line="855">
                        <scope line="861">
                            <scope line="862"/>
                            <scope line="864"/>
                            <scope line="867"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="880">
                release a service                
            </javadoc>
            <method name="releaseService" type="void" line="884">
                <params>
                    <param name="child" type="BeanContextChild"/>
                    <param name="requestor" type="Object"/>
                    <param name="service" type="Object"/>
                </params>
                <declaration name="bcsc" type="BCSSChild" line="889"/>
                <scope line="891">
                    <scope line="892"/>
                </scope>
            </method>
            <javadoc line="901">
                @return an iterator for all the currently registered service classes.                
            </javadoc>
            <method name="getCurrentServiceClasses" type="Iterator" line="905"/>
            <javadoc line="909">
                @return an iterator for all the currently available service selectors
                  (if any) available for the specified service.                
            </javadoc>
            <method name="getCurrentServiceSelectors" type="Iterator" line="914">
                <params>
                    <param name="serviceClass" type="Class"/>
                </params>
                <declaration name="bcsssp" type="BCSSServiceProvider" line="916"/>
            </method>
            <javadoc line="921">
                BeanContextServicesListener callback, propagates event to all
                  currently registered listeners and BeanContextServices children,
                  if this BeanContextService does not already implement this service
                  itself.
                  subclasses may override or envelope this method to implement their
                  own propagation semantics.                
            </javadoc>
            <method name="serviceAvailable" type="void" line="931">
                <params>
                    <param name="bcssae" type="BeanContextServiceAvailableEvent"/>
                </params>
                <scope line="932">
                    <declaration name="i" type="Iterator" line="937"/>
                    <scope line="939"/>
                    <scope line="943">
                        <declaration name="c" type="Object" line="944"/>
                        <scope line="946"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="953">
                BeanContextServicesListener callback, propagates event to all
                  currently registered listeners and BeanContextServices children,
                  if this BeanContextService does not already implement this service
                  itself.
                  subclasses may override or envelope this method to implement their
                  own propagation semantics.                
            </javadoc>
            <method name="serviceRevoked" type="void" line="963">
                <params>
                    <param name="bcssre" type="BeanContextServiceRevokedEvent"/>
                </params>
                <scope line="964">
                    <declaration name="i" type="Iterator" line="969"/>
                    <scope line="971"/>
                    <scope line="975">
                        <declaration name="c" type="Object" line="976"/>
                        <scope line="978"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="985">
                Gets the &lt;tt&gt;BeanContextServicesListener&lt;/tt&gt; (if any) of the specified
                  child.                
                <param>
                    child the specified child                    
                </param>
                <return>
                    the BeanContextServicesListener (if any) of the specified child                    
                </return>
            </javadoc>
            <method name="getChildBeanContextServicesListener" type="BeanContextServicesListener" line="992">
                <params>
                    <param name="child" type="Object"/>
                </params>
                <scope line="993"/>
                <scope line="995"/>
            </method>
            <javadoc line="1000">
                called from superclass child removal operations after a child
                  has been successfully removed. called with child synchronized.
                  This subclass uses this hook to immediately revoke any services
                  being used by this child if it is a BeanContextChild.
                  subclasses may envelope this method in order to implement their
                  own child removal side-effects.                
            </javadoc>
            <method name="childJustRemovedHook" type="void" line="1011">
                <params>
                    <param name="child" type="Object"/>
                    <param name="bcsc" type="BCSChild"/>
                </params>
                <declaration name="bcssc" type="BCSSChild" line="1012"/>
            </method>
            <javadoc line="1017">
                called from setBeanContext to notify a BeanContextChild
                  to release resources obtained from the nesting BeanContext.
                  This method revokes any services obtained from its parent.
                  subclasses may envelope this method to implement their own semantics.                
            </javadoc>
            <method name="releaseBeanContextResources" type="void" line="1026">
                <declaration name="bcssc" type="Object[]" line="1027"/>
                <scope line="1031"/>
                <scope line="1038"/>
            </method>
            <javadoc line="1045">
                called from setBeanContext to notify a BeanContextChild
                  to allocate resources obtained from the nesting BeanContext.
                  subclasses may envelope this method to implement their own semantics.                
            </javadoc>
            <method name="initializeBeanContextResources" type="void" line="1052">
                <comment line="1065">
                    do nothing ...                    
                </comment>
                <declaration name="nbc" type="BeanContext" line="1055"/>
                <scope line="1059">
                    <declaration name="bcs" type="BeanContextServices" line="1060"/>
                </scope>
                <scope line="1063"/>
            </method>
            <javadoc line="1068">
                Fires a &lt;tt&gt;BeanContextServiceEvent&lt;/tt&gt; notifying of a new service.                
            </javadoc>
            <method name="fireServiceAdded" type="void" line="1071">
                <params>
                    <param name="serviceClass" type="Class"/>
                </params>
                <declaration name="bcssae" type="BeanContextServiceAvailableEvent" line="1072"/>
            </method>
            <javadoc line="1077">
                Fires a &lt;tt&gt;BeanContextServiceAvailableEvent&lt;/tt&gt; indicating that a new
                  service has become available.                
                <param>
                    bcssae the <tt>BeanContextServiceAvailableEvent</tt>                    
                </param>
            </javadoc>
            <method name="fireServiceAdded" type="void" line="1083">
                <params>
                    <param name="bcssae" type="BeanContextServiceAvailableEvent"/>
                </params>
                <declaration name="copy" type="Object[]" line="1084"/>
                <scope line="1086"/>
                <scope line="1088"/>
            </method>
            <javadoc line="1093">
                Fires a &lt;tt&gt;BeanContextServiceEvent&lt;/tt&gt; notifying of a service being revoked.                
                <param>
                    bcsre the <tt>BeanContextServiceRevokedEvent</tt>                    
                </param>
            </javadoc>
            <method name="fireServiceRevoked" type="void" line="1098">
                <params>
                    <param name="bcsre" type="BeanContextServiceRevokedEvent"/>
                </params>
                <declaration name="copy" type="Object[]" line="1099"/>
                <scope line="1101"/>
                <scope line="1103"/>
            </method>
            <javadoc line="1108">
                Fires a &lt;tt&gt;BeanContextServiceRevokedEvent&lt;/tt&gt;
                  indicating that a particular service is
                  no longer available.                
            </javadoc>
            <method name="fireServiceRevoked" type="void" line="1113">
                <params>
                    <param name="serviceClass" type="Class"/>
                    <param name="revokeNow" type="boolean"/>
                </params>
                <declaration name="copy" type="Object[]" line="1114"/>
                <declaration name="bcsre" type="BeanContextServiceRevokedEvent" line="1115"/>
                <scope line="1117"/>
                <scope line="1119"/>
            </method>
            <javadoc line="1124">
                called from BeanContextSupport writeObject before it serializes the
                  children ...
                  This class will serialize any Serializable BeanContextServiceProviders
                  herein.
                  subclasses may envelope this method to insert their own serialization
                  processing that has to occur prior to serialization of the children                
            </javadoc>
            <method name="bcsPreSerializationHook" type="void" line="1135">
                <params>
                    <param name="oos" type="ObjectOutputStream"/>
                </params>
                <declaration name="count" type="int" line="1141"/>
                <declaration name="i" type="Iterator" line="1143"/>
                <scope line="1145">
                    <declaration name="entry" type="Map.Entry" line="1146"/>
                    <declaration name="bcsp" type="BCSSServiceProvider" line="1147"/>
                    <scope line="1149"/>
                    <scope line="1151"/>
                    <scope line="1155"/>
                </scope>
            </method>
            <javadoc line="1166">
                called from BeanContextSupport readObject before it deserializes the
                  children ...
                  This class will deserialize any Serializable BeanContextServiceProviders
                  serialized earlier thus making them available to the children when they
                  deserialized.
                  subclasses may envelope this method to insert their own serialization
                  processing that has to occur prior to serialization of the children                
            </javadoc>
            <method name="bcsPreDeserializationHook" type="void" line="1178">
                <params>
                    <param name="ois" type="ObjectInputStream"/>
                </params>
                <declaration name="count" type="int" line="1182"/>
                <scope line="1184"/>
            </method>
            <javadoc line="1190">
                serialize the instance                
            </javadoc>
            <method name="writeObject" type="void" line="1194">
                <params>
                    <param name="oos" type="ObjectOutputStream"/>
                </params>
            </method>
            <javadoc line="1200">
                deserialize the instance                
            </javadoc>
            <method name="readObject" type="void" line="1204">
                <params>
                    <param name="ois" type="ObjectInputStream"/>
                </params>
            </method>
            <declaration name="services" type="HashMap" line="1216"/>
            <javadoc line="1216">
                all accesses to the &lt;code&gt; protected transient HashMap services &lt;/code&gt;
                  field should be synchronized on that object                
            </javadoc>
            <declaration name="serializable" type="int" line="1222"/>
            <javadoc line="1222">
                The number of instances of a serializable &lt;tt&gt;BeanContextServceProvider&lt;/tt&gt;.                
            </javadoc>
            <declaration name="proxy" type="BCSSProxyServiceProvider" line="1228"/>
            <javadoc line="1228">
                Delegate for the &lt;tt&gt;BeanContextServiceProvider&lt;/tt&gt;.                
            </javadoc>
            <declaration name="bcsListeners" type="ArrayList" line="1234"/>
            <javadoc line="1234">
                List of &lt;tt&gt;BeanContextServicesListener&lt;/tt&gt; objects.                
            </javadoc>
        </class>
    </source>