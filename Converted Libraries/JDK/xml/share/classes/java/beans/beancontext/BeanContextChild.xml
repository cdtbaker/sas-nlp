<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.beans.beancontext">
        <import package="java.beans.PropertyChangeListener"/>
        <import package="java.beans.VetoableChangeListener"/>
        <import package="java.beans.PropertyVetoException"/>
        <import package="java.beans.beancontext.BeanContext"/>
        <interface name="BeanContextChild">
            <javadoc line="6">
                &lt;p&gt;
                  JavaBeans wishing to be nested within, and obtain a reference to their
                  execution environment, or context, as defined by the BeanContext
                  sub-interface shall implement this interface.
                  &lt;/p&gt;
                  &lt;p&gt;
                  Conformant BeanContexts shall as a side effect of adding a BeanContextChild
                  object shall pass a reference to itself via the setBeanContext() method of
                  this interface.
                  &lt;/p&gt;
                  &lt;p&gt;
                  Note that a BeanContextChild may refuse a change in state by throwing
                  PropertyVetoedException in response.
                  &lt;/p&gt;
                  &lt;p&gt;
                  In order for persistence mechanisms to function properly on BeanContextChild
                  instances across a broad variety of scenarios, implementing classes of this
                  interface are required to define as transient, any or all fields, or
                  instance variables, that may contain, or represent, references to the
                  nesting BeanContext instance or other resources obtained
                  from the BeanContext via any unspecified mechanisms.
                  &lt;/p&gt;                
                <author>
                    Laurence P. G. Cable                    
                </author>
                <since>
                    1.2                    
                </since>
                <see>
                    java.beans.beancontext.BeanContext                    
                </see>
                <see>
                    java.beans.PropertyChangeEvent                    
                </see>
                <see>
                    java.beans.PropertyChangeListener                    
                </see>
                <see>
                    java.beans.PropertyVetoException                    
                </see>
                <see>
                    java.beans.VetoableChangeListener                    
                </see>
            </javadoc>
            <method name="setBeanContext" type="void" line="38"/>
            <javadoc line="38">
                &lt;p&gt;
                  Objects that implement this interface,
                  shall fire a java.beans.PropertyChangeEvent, with parameters:
                  propertyName &quot;beanContext&quot;, oldValue (the previous nesting
                  &lt;code&gt;BeanContext&lt;/code&gt; instance, or &lt;code&gt;null&lt;/code&gt;),
                  newValue (the current nesting
                  &lt;code&gt;BeanContext&lt;/code&gt; instance, or &lt;code&gt;null&lt;/code&gt;).
                  &lt;p&gt;
                  A change in the value of the nesting BeanContext property of this
                  BeanContextChild may be vetoed by throwing the appropriate exception.
                  &lt;/p&gt;                
                <param>
                    bc The <code>BeanContext</code> with which
                      to associate this <code>BeanContextChild</code>.                    
                </param>
                <throws>
                    <code>PropertyVetoException</code> if the
                      addition of the specified <code>BeanContext</code> is refused.                    
                </throws>
            </javadoc>
            <method name="getBeanContext" type="BeanContext" line="56"/>
            <javadoc line="56">
                Gets the &lt;code&gt;BeanContext&lt;/code&gt; associated
                  with this &lt;code&gt;BeanContextChild&lt;/code&gt;.                
                <return>
                    the <code>BeanContext</code> associated
                      with this <code>BeanContextChild</code>.                    
                </return>
            </javadoc>
            <method name="addPropertyChangeListener" type="void" line="63"/>
            <javadoc line="63">
                Adds a &lt;code&gt;PropertyChangeListener&lt;/code&gt;
                  to this &lt;code&gt;BeanContextChild&lt;/code&gt;
                  in order to receive a &lt;code&gt;PropertyChangeEvent&lt;/code&gt;
                  whenever the specified property has changed.                
                <param>
                    name the name of the property to listen on                    
                </param>
                <param>
                    pcl the <code>PropertyChangeListener</code> to add                    
                </param>
            </javadoc>
            <method name="removePropertyChangeListener" type="void" line="72"/>
            <javadoc line="72">
                Removes a &lt;code&gt;PropertyChangeListener&lt;/code&gt; from this
                  &lt;code&gt;BeanContextChild&lt;/code&gt;  so that it no longer
                  receives &lt;code&gt;PropertyChangeEvents&lt;/code&gt; when the
                  specified property is changed.                
                <param>
                    name the name of the property that was listened on                    
                </param>
                <param>
                    pcl the <code>PropertyChangeListener</code> to remove                    
                </param>
            </javadoc>
            <method name="addVetoableChangeListener" type="void" line="81"/>
            <javadoc line="81">
                Adds a &lt;code&gt;VetoableChangeListener&lt;/code&gt; to
                  this &lt;code&gt;BeanContextChild&lt;/code&gt;
                  to receive events whenever the specified property changes.                
                <param>
                    name the name of the property to listen on                    
                </param>
                <param>
                    vcl the <code>VetoableChangeListener</code> to add                    
                </param>
            </javadoc>
            <method name="removeVetoableChangeListener" type="void" line="89"/>
            <javadoc line="89">
                Removes a &lt;code&gt;VetoableChangeListener&lt;/code&gt; from this
                  &lt;code&gt;BeanContextChild&lt;/code&gt; so that it no longer receives
                  events when the specified property changes.                
                <param>
                    name the name of the property that was listened on.                    
                </param>
                <param>
                    vcl the <code>VetoableChangeListener</code> to remove.                    
                </param>
            </javadoc>
        </interface>
    </source>