<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.beans.beancontext">
        <import package="java.util.Iterator"/>
        <interface name="BeanContextServiceProvider">
            <javadoc line="3">
                &lt;p&gt;
                  One of the primary functions of a BeanContext is to act a as rendezvous
                  between JavaBeans, and BeanContextServiceProviders.
                  &lt;/p&gt;
                  &lt;p&gt;
                  A JavaBean nested within a BeanContext, may ask that BeanContext to
                  provide an instance of a &quot;service&quot;, based upon a reference to a Java
                  Class object that represents that service.
                  &lt;/p&gt;
                  &lt;p&gt;
                  If such a service has been registered with the context, or one of its
                  nesting context&apos;s, in the case where a context delegate to its context
                  to satisfy a service request, then the BeanContextServiceProvider associated with
                  the service is asked to provide an instance of that service.
                  &lt;/p&gt;
                  &lt;p&gt;
                  The ServcieProvider may always return the same instance, or it may
                  construct a new instance for each request.
                  &lt;/p&gt;                
            </javadoc>
            <method name="getService" type="Object" line="25"/>
            <javadoc line="25">
                Invoked by &lt;code&gt;BeanContextServices&lt;/code&gt;, this method
                  requests an instance of a
                  service from this &lt;code&gt;BeanContextServiceProvider&lt;/code&gt;.                
                <param>
                    bcs The <code>BeanContextServices</code> associated with this
                      particular request. This parameter enables the
                      <code>BeanContextServiceProvider</code> to distinguish service
                      requests from multiple sources.                    
                </param>
                <param>
                    requestor          The object requesting the service                    
                </param>
                <param>
                    serviceClass       The service requested                    
                </param>
                <param>
                    serviceSelector the service dependent parameter
                      for a particular service, or <code>null</code> if not applicable.                    
                </param>
                <return>
                    a reference to the requested service                    
                </return>
            </javadoc>
            <method name="releaseService" type="void" line="40"/>
            <javadoc line="40">
                Invoked by &lt;code&gt;BeanContextServices&lt;/code&gt;,
                  this method releases a nested &lt;code&gt;BeanContextChild&lt;/code&gt;&apos;s
                  (or any arbitrary object associated with a
                  &lt;code&gt;BeanContextChild&lt;/code&gt;) reference to the specified service.                
                <param>
                    bcs the <code>BeanContextServices</code> associated with this
                      particular release request                    
                </param>
                <param>
                    requestor the object requesting the service to be released                    
                </param>
                <param>
                    service the service that is to be released                    
                </param>
            </javadoc>
            <method name="getCurrentServiceSelectors" type="Iterator" line="51"/>
            <javadoc line="51">
                Invoked by &lt;code&gt;BeanContextServices&lt;/code&gt;, this method
                  gets the current service selectors for the specified service.
                  A service selector is a service specific parameter,
                  typical examples of which could include: a
                  parameter to a constructor for the service implementation class,
                  a value for a particular service&apos;s property, or a key into a
                  map of existing implementations.                
                <param>
                    bcs           the <code>BeanContextServices</code> for this request                    
                </param>
                <param>
                    serviceClass  the specified service                    
                </param>
                <return>
                    the current service selectors for the specified serviceClass                    
                </return>
            </javadoc>
        </interface>
    </source>