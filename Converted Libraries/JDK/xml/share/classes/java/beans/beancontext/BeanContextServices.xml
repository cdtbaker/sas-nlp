<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.beans.beancontext">
        <import package="java.util.Iterator"/>
        <import package="java.util.TooManyListenersException"/>
        <import package="java.beans.beancontext.BeanContext"/>
        <import package="java.beans.beancontext.BeanContextServiceProvider"/>
        <import package="java.beans.beancontext.BeanContextServicesListener"/>
        <interface name="BeanContextServices">
            <implements interface="BeanContext"/>
            <implements interface="BeanContextServicesListener"/>
            <javadoc line="39">
                &lt;p&gt;
                  The BeanContextServices interface provides a mechanism for a BeanContext
                  to expose generic &quot;services&quot; to the BeanContextChild objects within.
                  &lt;/p&gt;                
            </javadoc>
            <method name="addService" type="boolean" line="47"/>
            <javadoc line="47">
                Adds a service to this BeanContext.
                  &lt;code&gt;BeanContextServiceProvider&lt;/code&gt;s call this method
                  to register a particular service with this context.
                  If the service has not previously been added, the
                  &lt;code&gt;BeanContextServices&lt;/code&gt; associates
                  the service with the &lt;code&gt;BeanContextServiceProvider&lt;/code&gt; and
                  fires a &lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; to all
                  currently registered &lt;code&gt;BeanContextServicesListeners&lt;/code&gt;.
                  The method then returns &lt;code&gt;true&lt;/code&gt;, indicating that
                  the addition of the service was successful.
                  If the given service has already been added, this method
                  simply returns &lt;code&gt;false&lt;/code&gt;.                
                <param>
                    serviceClass     the service to add                    
                </param>
                <param>
                    serviceProvider  the <code>BeanContextServiceProvider</code>
                      associated with the service                    
                </param>
            </javadoc>
            <method name="revokeService" type="void" line="66"/>
            <javadoc line="66">
                BeanContextServiceProviders wishing to remove
                  a currently registered service from this context
                  may do so via invocation of this method. Upon revocation of
                  the service, the &lt;code&gt;BeanContextServices&lt;/code&gt; fires a
                  &lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; to its
                  list of currently registered
                  &lt;code&gt;BeanContextServiceRevokedListeners&lt;/code&gt; and
                  &lt;code&gt;BeanContextServicesListeners&lt;/code&gt;.                
                <param>
                    serviceClass the service to revoke from this BeanContextServices                    
                </param>
                <param>
                    serviceProvider the BeanContextServiceProvider associated with
                      this particular service that is being revoked                    
                </param>
                <param>
                    revokeCurrentServicesNow a value of <code>true</code>
                      indicates an exceptional circumstance where the
                      <code>BeanContextServiceProvider</code> or
                      <code>BeanContextServices</code> wishes to immediately
                      terminate service to all currently outstanding references
                      to the specified service.                    
                </param>
            </javadoc>
            <method name="hasService" type="boolean" line="87"/>
            <javadoc line="87">
                Reports whether or not a given service is
                  currently available from this context.                
                <param>
                    serviceClass the service in question                    
                </param>
                <return>
                    true if the service is available                    
                </return>
            </javadoc>
            <method name="getService" type="Object" line="95"/>
            <javadoc line="95">
                A &lt;code&gt;BeanContextChild&lt;/code&gt;, or any arbitrary object
                  associated with a &lt;code&gt;BeanContextChild&lt;/code&gt;, may obtain
                  a reference to a currently registered service from its
                  nesting &lt;code&gt;BeanContextServices&lt;/code&gt;
                  via invocation of this method. When invoked, this method
                  gets the service by calling the getService() method on the
                  underlying &lt;code&gt;BeanContextServiceProvider&lt;/code&gt;.                
                <param>
                    child the <code>BeanContextChild</code>
                      associated with this request                    
                </param>
                <param>
                    requestor the object requesting the service                    
                </param>
                <param>
                    serviceClass class of the requested service                    
                </param>
                <param>
                    serviceSelector the service dependent parameter                    
                </param>
                <param>
                    bcsrl the
                      <code>BeanContextServiceRevokedListener</code> to notify
                      if the service should later become revoked                    
                </param>
                <throws>
                    TooManyListenersException                    
                </throws>
                <return>
                    a reference to this context's named
                      Service as requested or <code>null</code>                    
                </return>
            </javadoc>
            <method name="releaseService" type="void" line="117"/>
            <javadoc line="117">
                Releases a &lt;code&gt;BeanContextChild&lt;/code&gt;&apos;s
                  (or any arbitrary object associated with a BeanContextChild)
                  reference to the specified service by calling releaseService()
                  on the underlying &lt;code&gt;BeanContextServiceProvider&lt;/code&gt;.                
                <param>
                    child the <code>BeanContextChild</code>                    
                </param>
                <param>
                    requestor the requestor                    
                </param>
                <param>
                    service the service                    
                </param>
            </javadoc>
            <method name="getCurrentServiceClasses" type="Iterator" line="128"/>
            <javadoc line="128">
                Gets the currently available services for this context.                
                <return>
                    an <code>Iterator</code> consisting of the
                      currently available services                    
                </return>
            </javadoc>
            <method name="getCurrentServiceSelectors" type="Iterator" line="135"/>
            <javadoc line="135">
                Gets the list of service dependent service parameters
                  (Service Selectors) for the specified service, by
                  calling getCurrentServiceSelectors() on the
                  underlying BeanContextServiceProvider.                
                <param>
                    serviceClass the specified service                    
                </param>
                <return>
                    the currently available service selectors
                      for the named serviceClass                    
                </return>
            </javadoc>
            <method name="addBeanContextServicesListener" type="void" line="146"/>
            <javadoc line="146">
                Adds a &lt;code&gt;BeanContextServicesListener&lt;/code&gt; to this BeanContext                
                <param>
                    bcsl the <code>BeanContextServicesListener</code> to add                    
                </param>
            </javadoc>
            <method name="removeBeanContextServicesListener" type="void" line="152"/>
            <javadoc line="152">
                Removes a &lt;code&gt;BeanContextServicesListener&lt;/code&gt;
                  from this &lt;code&gt;BeanContext&lt;/code&gt;                
                <param>
                    bcsl the <code>BeanContextServicesListener</code>
                      to remove from this context                    
                </param>
            </javadoc>
        </interface>
    </source>