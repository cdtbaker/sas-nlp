<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.beans">
        <import package="com.sun.beans.decoder.DocumentHandler"/>
        <import package="java.io.Closeable"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.IOException"/>
        <import package="org.xml.sax.InputSource"/>
        <import package="org.xml.sax.helpers.DefaultHandler"/>
        <class name="XMLDecoder" line="8">
            <implements interface="AutoCloseable"/>
            <javadoc line="8">
                The &lt;code&gt;XMLDecoder&lt;/code&gt; class is used to read XML documents
                  created using the &lt;code&gt;XMLEncoder&lt;/code&gt; and is used just like
                  the &lt;code&gt;ObjectInputStream&lt;/code&gt;. For example, one can use
                  the following fragment to read the first object defined
                  in an XML document written by the &lt;code&gt;XMLEncoder&lt;/code&gt;
                  class:
                  &lt;pre&gt;
                  XMLDecoder d = new XMLDecoder(
                  new BufferedInputStream(
                  new FileInputStream(&quot;Test.xml&quot;)));
                  Object result = d.readObject();
                  d.close();
                  &lt;/pre&gt;
                  &lt;p&gt;
                  For more information you might also want to check out
                  &lt;a
                  href=&quot;http://java.sun.com/products/jfc/tsc/articles/persistence3&quot;&gt;Long Term Persistence of JavaBeans Components: XML Schema&lt;/a&gt;,
                  an article in &lt;em&gt;The Swing Connection.&lt;/em&gt;                
                <see>
                    XMLEncoder                    
                </see>
                <see>
                    java.io.ObjectInputStream                    
                </see>
                <since>
                    1.4                    
                </since>
                <author>
                    Philip Milne                    
                </author>
            </javadoc>
            <declaration name="handler" type="DocumentHandler" line="33"/>
            <declaration name="input" type="InputSource" line="34"/>
            <declaration name="owner" type="Object" line="35"/>
            <declaration name="array" type="Object[]" line="36"/>
            <declaration name="index" type="int" line="37"/>
            <javadoc line="38">
                Creates a new input stream for reading archives
                  created by the &lt;code&gt;XMLEncoder&lt;/code&gt; class.                
                <param>
                    in The underlying stream.                    
                </param>
                <see>
                    XMLEncoder#XMLEncoder(java.io.OutputStream)                    
                </see>
            </javadoc>
            <method name="XMLDecoder" type="constructor" line="44">
                <params>
                    <param name="in" type="InputStream"/>
                </params>
            </method>
            <javadoc line="47">
                Creates a new input stream for reading archives
                  created by the &lt;code&gt;XMLEncoder&lt;/code&gt; class.                
                <param>
                    in The underlying stream.                    
                </param>
                <param>
                    owner The owner of this stream.                    
                </param>
            </javadoc>
            <method name="XMLDecoder" type="constructor" line="53">
                <params>
                    <param name="in" type="InputStream"/>
                    <param name="owner" type="Object"/>
                </params>
            </method>
            <javadoc line="56">
                Creates a new input stream for reading archives
                  created by the &lt;code&gt;XMLEncoder&lt;/code&gt; class.                
                <param>
                    in the underlying stream.                    
                </param>
                <param>
                    owner the owner of this stream.                    
                </param>
                <param>
                    exceptionListener the exception handler for the stream;
                      if <code>null</code> the default exception listener will be used.                    
                </param>
            </javadoc>
            <method name="XMLDecoder" type="constructor" line="64">
                <params>
                    <param name="in" type="InputStream"/>
                    <param name="owner" type="Object"/>
                    <param name="exceptionListener" type="ExceptionListener"/>
                </params>
            </method>
            <javadoc line="67">
                Creates a new input stream for reading archives
                  created by the &lt;code&gt;XMLEncoder&lt;/code&gt; class.                
                <param>
                    in the underlying stream.  <code>null</code> may be passed without
                      error, though the resulting XMLDecoder will be useless                    
                </param>
                <param>
                    owner the owner of this stream.  <code>null</code> is a legal
                      value                    
                </param>
                <param>
                    exceptionListener the exception handler for the stream, or
                      <code>null</code> to use the default                    
                </param>
                <param>
                    cl the class loader used for instantiating objects.
                      <code>null</code> indicates that the default class loader should
                      be used                    
                </param>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="XMLDecoder" type="constructor" line="81">
                <params>
                    <param name="in" type="InputStream"/>
                    <param name="owner" type="Object"/>
                    <param name="exceptionListener" type="ExceptionListener"/>
                    <param name="cl" type="ClassLoader"/>
                </params>
            </method>
            <javadoc line="84">
                Creates a new decoder to parse XML archives
                  created by the {@code XMLEncoder} class.
                  If the input source {@code is} is {@code null},
                  no exception is thrown and no parsing is performed.
                  This behavior is similar to behavior of other constructors
                  that use {@code InputStream} as a parameter.                
                <param>
                    is  the input source to parse                    
                </param>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="XMLDecoder" type="constructor" line="94">
                <params>
                    <param name="is" type="InputSource"/>
                </params>
            </method>
            <javadoc line="97">
                Creates a new decoder to parse XML archives
                  created by the {@code XMLEncoder} class.                
                <param>
                    is     the input source to parse                    
                </param>
                <param>
                    owner  the owner of this decoder                    
                </param>
                <param>
                    el     the exception handler for the parser,
                      or {@code null} to use the default exception handler                    
                </param>
                <param>
                    cl     the class loader used for instantiating objects,
                      or {@code null} to use the default class loader                    
                </param>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="XMLDecoder" type="constructor" line="108">
                <params>
                    <param name="is" type="InputSource"/>
                    <param name="owner" type="Object"/>
                    <param name="el" type="ExceptionListener"/>
                    <param name="cl" type="ClassLoader"/>
                </params>
            </method>
            <javadoc line="115">
                This method closes the input stream associated
                  with this stream.                
            </javadoc>
            <method name="close" type="void" line="119">
                <scope line="120"/>
            </method>
            <method name="close" type="void" line="125">
                <params>
                    <param name="in" type="Closeable"/>
                </params>
                <scope line="126">
                    <scope line="127"/>
                    <scope line="130"/>
                </scope>
            </method>
            <method name="parsingComplete" type="boolean" line="135">
                <scope line="136"/>
                <scope line="139"/>
            </method>
            <javadoc line="145">
                Sets the exception handler for this stream to &lt;code&gt;exceptionListener&lt;/code&gt;.
                  The exception handler is notified when this stream catches recoverable
                  exceptions.                
                <param>
                    exceptionListener The exception handler for this stream;
                      if <code>null</code> the default exception listener will be used.                    
                </param>
                <see>
                    #getExceptionListener                    
                </see>
            </javadoc>
            <method name="setExceptionListener" type="void" line="153">
                <params>
                    <param name="exceptionListener" type="ExceptionListener"/>
                </params>
                <scope line="154"/>
            </method>
            <javadoc line="159">
                Gets the exception handler for this stream.                
                <return>
                    The exception handler for this stream.
                      Will return the default exception listener if this has not explicitly been set.                    
                </return>
                <see>
                    #setExceptionListener                    
                </see>
            </javadoc>
            <method name="getExceptionListener" type="ExceptionListener" line="165"/>
            <javadoc line="168">
                Reads the next object from the underlying input stream.                
                <return>
                    the next object read                    
                </return>
                <throws>
                    ArrayIndexOutOfBoundsException if the stream contains no objects
                      (or no more objects)                    
                </throws>
                <see>
                    XMLEncoder#writeObject                    
                </see>
            </javadoc>
            <method name="readObject" type="Object" line="175"/>
            <javadoc line="178">
                Sets the owner of this decoder to &lt;code&gt;owner&lt;/code&gt;.                
                <param>
                    owner The owner of this decoder.                    
                </param>
                <see>
                    #getOwner                    
                </see>
            </javadoc>
            <method name="setOwner" type="void" line="183">
                <params>
                    <param name="owner" type="Object"/>
                </params>
            </method>
            <javadoc line="186">
                Gets the owner of this decoder.                
                <return>
                    The owner of this decoder.                    
                </return>
                <see>
                    #setOwner                    
                </see>
            </javadoc>
            <method name="getOwner" type="Object" line="191"/>
            <javadoc line="194">
                Creates a new handler for SAX parser
                  that can be used to parse embedded XML archives
                  created by the {@code XMLEncoder} class.
                  The {@code owner} should be used if parsed XML document contains
                  the method call within context of the &amp;lt;java&amp;gt; element.
                  The {@code null} value may cause illegal parsing in such case.
                  The same problem may occur, if the {@code owner} class
                  does not contain expected method to call. See details &lt;a
                  href=&quot;http://java.sun.com/products/jfc/tsc/articles/persistence3/&quot;&gt;here&lt;/a&gt;.                
                <param>
                    owner  the owner of the default handler
                      that can be used as a value of &lt;java&gt; element                    
                </param>
                <param>
                    el     the exception handler for the parser,
                      or {@code null} to use the default exception handler                    
                </param>
                <param>
                    cl     the class loader used for instantiating objects,
                      or {@code null} to use the default class loader                    
                </param>
                <return>
                    an instance of {@code DefaultHandler} for SAX parser                    
                </return>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="createHandler" type="DefaultHandler" line="213">
                <params>
                    <param name="owner" type="Object"/>
                    <param name="el" type="ExceptionListener"/>
                    <param name="cl" type="ClassLoader"/>
                </params>
                <declaration name="handler" type="DocumentHandler" line="214"/>
            </method>
        </class>
    </source>