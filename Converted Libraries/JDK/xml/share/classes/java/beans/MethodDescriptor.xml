<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.beans">
        <import package="java.lang.ref.Reference"/>
        <import package="java.lang.ref.WeakReference"/>
        <import package="java.lang.reflect.Method"/>
        <import package="java.util.List"/>
        <import package="java.util.ArrayList"/>
        <class name="MethodDescriptor" line="34">
            <extends class="FeatureDescriptor"/>
            <comment line="137">
                pp getParamNames used as an optimization to avoid method.getParameterTypes.                
            </comment>
            <comment line="168">
                Package-private constructor
                 Merge two method descriptors.  Where they conflict, give the
                 second argument (y) priority over the first argument (x).
                 @param x  The first (lower priority) MethodDescriptor
                 @param y  The second (higher priority) MethodDescriptor                
            </comment>
            <comment line="198">
                Package-private dup constructor
                 This must isolate the new object from any changes to the old object.                
            </comment>
            <javadoc line="34">
                A MethodDescriptor describes a particular method that a Java Bean
                  supports for external access from other components.                
            </javadoc>
            <declaration name="methodRef" type="Reference&lt;Method&gt;" line="41"/>
            <declaration name="paramNames" type="String[]" line="43"/>
            <declaration name="params" type="List" line="45"/>
            <declaration name="parameterDescriptors" type="ParameterDescriptor" line="47"/>
            <javadoc line="49">
                Constructs a &lt;code&gt;MethodDescriptor&lt;/code&gt; from a
                  &lt;code&gt;Method&lt;/code&gt;.                
                <param>
                    method    The low-level method information.                    
                </param>
            </javadoc>
            <method name="MethodDescriptor" type="constructor" line="55">
                <params>
                    <param name="method" type="Method"/>
                </params>
            </method>
            <javadoc line="60">
                Constructs a &lt;code&gt;MethodDescriptor&lt;/code&gt; from a
                  &lt;code&gt;Method&lt;/code&gt; providing descriptive information for each
                  of the method&apos;s parameters.                
                <param>
                    method    The low-level method information.                    
                </param>
                <param>
                    parameterDescriptors  Descriptive information for each of the
                      method&apos;s parameters.                    
                </param>
            </javadoc>
            <method name="MethodDescriptor" type="constructor" line="70">
                <params>
                    <param name="method" type="Method"/>
                    <param name="parameterDescriptors" type="ParameterDescriptor"/>
                </params>
            </method>
            <javadoc line="76">
                Gets the method that this MethodDescriptor encapsualtes.                
                <return>
                    The low-level description of the method                    
                </return>
            </javadoc>
            <method name="getMethod" type="Method" line="81">
                <comment line="91">
                    Find methods for up to 2 params. We are guessing here.
                     This block should never execute unless the classloader
                     that loaded the argument classes disappears.                    
                </comment>
                <declaration name="method" type="Method" line="82"/>
                <scope line="83">
                    <declaration name="cls" type="Class" line="84"/>
                    <declaration name="name" type="String" line="85"/>
                    <scope line="86">
                        <declaration name="params" type="Class[]" line="87"/>
                        <scope line="88">
                            <scope line="89">
                                <scope line="94"/>
                            </scope>
                        </scope>
                        <scope line="98"/>
                    </scope>
                </scope>
            </method>
            <method name="setMethod" type="void" line="107">
                <params>
                    <param name="method" type="Method"/>
                </params>
                <scope line="108"/>
                <scope line="111"/>
            </method>
            <method name="getMethod0" type="Method" line="118"/>
            <method name="setParams" type="void" line="124">
                <params>
                    <param name="param" type="Class[]"/>
                </params>
                <scope line="125"/>
                <scope line="130"/>
            </method>
            <method name="getParamNames" type="String[]" line="137"/>
            <method name="getParams" type="Class[]" line="141">
                <declaration name="clss" type="Class[]" line="142"/>
                <scope line="144">
                    <declaration name="ref" type="Reference" line="145"/>
                    <declaration name="cls" type="Class" line="146"/>
                    <scope line="147"/>
                    <scope line="149"/>
                </scope>
            </method>
            <javadoc line="156">
                Gets the ParameterDescriptor for each of this MethodDescriptor&apos;s
                  method&apos;s parameters.                
                <return>
                    The locale-independent names of the parameters.  May return
                      a null array if the parameter names aren&apos;t known.                    
                </return>
            </javadoc>
            <method name="getParameterDescriptors" type="ParameterDescriptor[]" line="163"/>
            <method name="MethodDescriptor" type="constructor" line="175">
                <params>
                    <param name="x" type="MethodDescriptor"/>
                    <param name="y" type="MethodDescriptor"/>
                </params>
                <scope line="179"/>
                <scope line="183"/>
                <scope line="187"/>
                <scope line="192"/>
            </method>
            <method name="MethodDescriptor" type="constructor" line="201">
                <params>
                    <param name="old" type="MethodDescriptor"/>
                </params>
                <scope line="208">
                    <declaration name="len" type="int" line="209"/>
                    <scope line="211"/>
                </scope>
            </method>
            <method name="appendTo" type="void" line="217">
                <params>
                    <param name="sb" type="StringBuilder"/>
                </params>
                <scope line="219">
                    <scope line="221"/>
                </scope>
            </method>
        </class>
    </source>