<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.beans">
        <import package="java.lang.annotation"/>
        <import package="java.lang.annotation.ElementType"/>
        <import package="java.lang.annotation.RetentionPolicy"/>
        <javadoc line="32">
            &lt;p&gt;An annotation on a constructor that shows how the parameters of
              that constructor correspond to the constructed object&apos;s getter
              methods.  For example:
              &lt;blockquote&gt;
              &lt;pre&gt;
              public class Point {
              &amp;#64;ConstructorProperties({&quot;x&quot;, &quot;y&quot;})
              public Point(int x, int y) {
              this.x = x;
              this.y = y;
              }
              public int getX() {
              return x;
              }
              public int getY() {
              return y;
              }
              private final int x, y;
              }
              &lt;/pre&gt;
              &lt;/blockquote&gt;
              The annotation shows that the first parameter of the constructor
              can be retrieved with the {@code getX()} method and the second with
              the {@code getY()} method.  Since parameter names are not in
              general available at runtime, without the annotation there would be
              no way to know whether the parameters correspond to {@code getX()}and {@code getY()} or the other way around.&lt;/p&gt;            
            <since>
                1.6                
            </since>
        </javadoc>
        <javadoc line="70">
            &lt;p&gt;The getter names.&lt;/p&gt;            
            <return>
                the getter names corresponding to the parameters in the
                  annotated constructor.                
            </return>
        </javadoc>
    </source>