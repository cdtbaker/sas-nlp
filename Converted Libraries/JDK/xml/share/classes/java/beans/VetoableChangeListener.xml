<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.beans">
        <interface name="VetoableChangeListener">
            <implements interface="java.util.EventListener"/>
            <javadoc line="28">
                A VetoableChange event gets fired whenever a bean changes a &quot;constrained&quot;
                  property.  You can register a VetoableChangeListener with a source bean
                  so as to be notified of any constrained property updates.                
            </javadoc>
            <method name="vetoableChange" type="void" line="34"/>
            <javadoc line="34">
                This method gets called when a constrained property is changed.                
                <param>
                    evt a <code>PropertyChangeEvent</code> object describing the
                      event source and the property that has changed.                    
                </param>
                <exception>
                    PropertyVetoException if the recipient wishes the property
                      change to be rolled back.                    
                </exception>
            </javadoc>
        </interface>
    </source>