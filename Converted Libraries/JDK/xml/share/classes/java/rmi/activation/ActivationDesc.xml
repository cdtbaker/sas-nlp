<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.rmi.activation">
        <import package="java.io.Serializable"/>
        <import package="java.rmi.MarshalledObject"/>
        <class name="ActivationDesc" line="31">
            <implements interface="Serializable"/>
            <javadoc line="31">
                An activation descriptor contains the information necessary to
                  activate an object: &lt;ul&gt;
                  &lt;li&gt; the object&apos;s group identifier,
                  &lt;li&gt; the object&apos;s fully-qualified class name,
                  &lt;li&gt; the object&apos;s code location (the location of the class), a codebase URL
                  path,
                  &lt;li&gt; the object&apos;s restart &quot;mode&quot;, and,
                  &lt;li&gt; a &quot;marshalled&quot; object that can contain object specific
                  initialization data. &lt;/ul&gt;
                  &lt;p&gt;A descriptor registered with the activation system can be used to
                  recreate/activate the object specified by the descriptor. The
                  &lt;code&gt;MarshalledObject&lt;/code&gt; in the object&apos;s descriptor is passed
                  as the second argument to the remote object&apos;s constructor for
                  object to use during reinitialization/activation.                
                <author>
                    Ann Wollrath                    
                </author>
                <since>
                    1.2                    
                </since>
                <see>
                    java.rmi.activation.Activatable                    
                </see>
            </javadoc>
            <declaration name="groupID" type="ActivationGroupID" line="54"/>
            <javadoc line="54">
                @serial the group&apos;s identifier                
            </javadoc>
            <declaration name="className" type="String" line="59"/>
            <javadoc line="59">
                @serial the object&apos;s class name                
            </javadoc>
            <declaration name="location" type="String" line="64"/>
            <javadoc line="64">
                @serial the object&apos;s code location                
            </javadoc>
            <declaration name="data" type="MarshalledObject&lt;?&gt;" line="69"/>
            <javadoc line="69">
                @serial the object&apos;s initialization data                
            </javadoc>
            <declaration name="restart" type="boolean" line="74"/>
            <javadoc line="74">
                @serial indicates whether the object should be restarted                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="79"/>
            <javadoc line="79">
                indicate compatibility with the Java 2 SDK v1.2 version of class                
            </javadoc>
            <javadoc line="82">
                Constructs an object descriptor for an object whose class name
                  is &lt;code&gt;className&lt;/code&gt;, that can be loaded from the
                  code &lt;code&gt;location&lt;/code&gt; and whose initialization
                  information is &lt;code&gt;data&lt;/code&gt;. If this form of the constructor
                  is used, the &lt;code&gt;groupID&lt;/code&gt; defaults to the current id for
                  &lt;code&gt;ActivationGroup&lt;/code&gt; for this VM. All objects with the
                  same &lt;code&gt;ActivationGroupID&lt;/code&gt; are activated in the same VM.
                  &lt;p&gt;Note that objects specified by a descriptor created with this
                  constructor will only be activated on demand (by default, the restart
                  mode is &lt;code&gt;false&lt;/code&gt;).  If an activatable object requires restart
                  services, use one of the &lt;code&gt;ActivationDesc&lt;/code&gt; constructors that
                  takes a boolean parameter, &lt;code&gt;restart&lt;/code&gt;.
                  &lt;p&gt; This constructor will throw &lt;code&gt;ActivationException&lt;/code&gt; if
                  there is no current activation group for this VM.  To create an
                  &lt;code&gt;ActivationGroup&lt;/code&gt; use the
                  &lt;code&gt;ActivationGroup.createGroup&lt;/code&gt; method.                
                <param>
                    className the object's fully package qualified class name                    
                </param>
                <param>
                    location the object's code location (from where the class is
                      loaded)                    
                </param>
                <param>
                    data the object's initialization (activation) data contained
                      in marshalled form.                    
                </param>
                <exception>
                    ActivationException if the current group is nonexistent                    
                </exception>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="ActivationDesc" type="constructor" line="114">
                <params>
                    <param name="className" type="String"/>
                    <param name="location" type="String"/>
                    <param name="data" type="MarshalledObject<?>"/>
                </params>
            </method>
            <javadoc line="119">
                Constructs an object descriptor for an object whose class name
                  is &lt;code&gt;className&lt;/code&gt;, that can be loaded from the
                  code &lt;code&gt;location&lt;/code&gt; and whose initialization
                  information is &lt;code&gt;data&lt;/code&gt;. If this form of the constructor
                  is used, the &lt;code&gt;groupID&lt;/code&gt; defaults to the current id for
                  &lt;code&gt;ActivationGroup&lt;/code&gt; for this VM. All objects with the
                  same &lt;code&gt;ActivationGroupID&lt;/code&gt; are activated in the same VM.
                  &lt;p&gt;This constructor will throw &lt;code&gt;ActivationException&lt;/code&gt; if
                  there is no current activation group for this VM.  To create an
                  &lt;code&gt;ActivationGroup&lt;/code&gt; use the
                  &lt;code&gt;ActivationGroup.createGroup&lt;/code&gt; method.                
                <param>
                    className the object's fully package qualified class name                    
                </param>
                <param>
                    location the object's code location (from where the class is
                      loaded)                    
                </param>
                <param>
                    data the object's initialization (activation) data contained
                      in marshalled form.                    
                </param>
                <param>
                    restart if true, the object is restarted (reactivated) when
                      either the activator is restarted or the object's activation group
                      is restarted after an unexpected crash; if false, the object is only
                      activated on demand.  Specifying <code>restart</code> to be
                      <code>true</code> does not force an initial immediate activation of
                      a newly registered object;  initial activation is lazy.                    
                </param>
                <exception>
                    ActivationException if the current group is nonexistent                    
                </exception>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="ActivationDesc" type="constructor" line="152">
                <params>
                    <param name="className" type="String"/>
                    <param name="location" type="String"/>
                    <param name="data" type="MarshalledObject<?>"/>
                    <param name="restart" type="boolean"/>
                </params>
            </method>
            <javadoc line="157">
                Constructs an object descriptor for an object whose class name
                  is &lt;code&gt;className&lt;/code&gt; that can be loaded from the
                  code &lt;code&gt;location&lt;/code&gt; and whose initialization
                  information is &lt;code&gt;data&lt;/code&gt;. All objects with the same
                  &lt;code&gt;groupID&lt;/code&gt; are activated in the same Java VM.
                  &lt;p&gt;Note that objects specified by a descriptor created with this
                  constructor will only be activated on demand (by default, the restart
                  mode is &lt;code&gt;false&lt;/code&gt;).  If an activatable object requires restart
                  services, use one of the &lt;code&gt;ActivationDesc&lt;/code&gt; constructors that
                  takes a boolean parameter, &lt;code&gt;restart&lt;/code&gt;.                
                <param>
                    groupID the group's identifier (obtained from registering
                      <code>ActivationSystem.registerGroup</code> method). The group
                      indicates the VM in which the object should be activated.                    
                </param>
                <param>
                    className the object's fully package-qualified class name                    
                </param>
                <param>
                    location the object's code location (from where the class is
                      loaded)                    
                </param>
                <param>
                    data  the object's initialization (activation) data contained
                      in marshalled form.                    
                </param>
                <exception>
                    IllegalArgumentException if <code>groupID</code> is null                    
                </exception>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="ActivationDesc" type="constructor" line="185">
                <params>
                    <param name="groupID" type="ActivationGroupID"/>
                    <param name="className" type="String"/>
                    <param name="location" type="String"/>
                    <param name="data" type="MarshalledObject<?>"/>
                </params>
            </method>
            <javadoc line="189">
                Constructs an object descriptor for an object whose class name
                  is &lt;code&gt;className&lt;/code&gt; that can be loaded from the
                  code &lt;code&gt;location&lt;/code&gt; and whose initialization
                  information is &lt;code&gt;data&lt;/code&gt;. All objects with the same
                  &lt;code&gt;groupID&lt;/code&gt; are activated in the same Java VM.                
                <param>
                    groupID the group's identifier (obtained from registering
                      <code>ActivationSystem.registerGroup</code> method). The group
                      indicates the VM in which the object should be activated.                    
                </param>
                <param>
                    className the object's fully package-qualified class name                    
                </param>
                <param>
                    location the object's code location (from where the class is
                      loaded)                    
                </param>
                <param>
                    data  the object's initialization (activation) data contained
                      in marshalled form.                    
                </param>
                <param>
                    restart if true, the object is restarted (reactivated) when
                      either the activator is restarted or the object's activation group
                      is restarted after an unexpected crash; if false, the object is only
                      activated on demand.  Specifying <code>restart</code> to be
                      <code>true</code> does not force an initial immediate activation of
                      a newly registered object;  initial activation is lazy.                    
                </param>
                <exception>
                    IllegalArgumentException if <code>groupID</code> is null                    
                </exception>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="ActivationDesc" type="constructor" line="218">
                <params>
                    <param name="groupID" type="ActivationGroupID"/>
                    <param name="className" type="String"/>
                    <param name="location" type="String"/>
                    <param name="data" type="MarshalledObject<?>"/>
                    <param name="restart" type="boolean"/>
                </params>
            </method>
            <javadoc line="228">
                Returns the group identifier for the object specified by this
                  descriptor. A group provides a way to aggregate objects into a
                  single Java virtual machine. RMI creates/activates objects with
                  the same &lt;code&gt;groupID&lt;/code&gt; in the same virtual machine.                
                <return>
                    the group identifier                    
                </return>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="getGroupID" type="ActivationGroupID" line="237"/>
            <javadoc line="241">
                Returns the class name for the object specified by this
                  descriptor.                
                <return>
                    the class name                    
                </return>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="getClassName" type="String" line="247"/>
            <javadoc line="251">
                Returns the code location for the object specified by
                  this descriptor.                
                <return>
                    the code location                    
                </return>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="getLocation" type="String" line="257"/>
            <javadoc line="261">
                Returns a &quot;marshalled object&quot; containing intialization/activation
                  data for the object specified by this descriptor.                
                <return>
                    the object specific "initialization" data                    
                </return>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="getData" type="MarshalledObject<?>" line="267"/>
            <javadoc line="271">
                Returns the &quot;restart&quot; mode of the object associated with
                  this activation descriptor.                
                <return>
                    true if the activatable object associated with this
                      activation descriptor is restarted via the activation
                      daemon when either the daemon comes up or the object's group
                      is restarted after an unexpected crash; otherwise it returns false,
                      meaning that the object is only activated on demand via a
                      method call.  Note that if the restart mode is <code>true</code>, the
                      activator does not force an initial immediate activation of
                      a newly registered object;  initial activation is lazy.                    
                </return>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="getRestartMode" type="boolean" line="285"/>
            <javadoc line="289">
                Compares two activation descriptors for content equality.                
                <param>
                    obj     the Object to compare with                    
                </param>
                <return>
                    true if these Objects are equal; false otherwise.                    
                </return>
                <see>
                    java.util.Hashtable                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="equals" type="boolean" line="297">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="299">
                    <declaration name="desc" type="ActivationDesc" line="300"/>
                </scope>
                <scope line="312"/>
            </method>
            <javadoc line="317">
                Return the same hashCode for similar &lt;code&gt;ActivationDesc&lt;/code&gt;s.                
                <return>
                    an integer                    
                </return>
                <see>
                    java.util.Hashtable                    
                </see>
            </javadoc>
            <method name="hashCode" type="int" line="322"/>
        </class>
    </source>