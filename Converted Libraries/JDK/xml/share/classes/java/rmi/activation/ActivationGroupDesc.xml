<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.rmi.activation">
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.Serializable"/>
        <import package="java.rmi.MarshalledObject"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.Properties"/>
        <class name="ActivationGroupDesc" line="35">
            <implements interface="Serializable"/>
            <javadoc line="35">
                An activation group descriptor contains the information necessary to
                  create/recreate an activation group in which to activate objects.
                  Such a descriptor contains: &lt;ul&gt;
                  &lt;li&gt; the group&apos;s class name,
                  &lt;li&gt; the group&apos;s code location (the location of the group&apos;s class), and
                  &lt;li&gt; a &quot;marshalled&quot; object that can contain group specific
                  initialization data. &lt;/ul&gt; &lt;p&gt;
                  The group&apos;s class must be a concrete subclass of
                  &lt;code&gt;ActivationGroup&lt;/code&gt;. A subclass of
                  &lt;code&gt;ActivationGroup&lt;/code&gt; is created/recreated via the
                  &lt;code&gt;ActivationGroup.createGroup&lt;/code&gt; static method that invokes
                  a special constructor that takes two arguments: &lt;ul&gt;
                  &lt;li&gt; the group&apos;s &lt;code&gt;ActivationGroupID&lt;/code&gt;, and
                  &lt;li&gt; the group&apos;s initialization data (in a
                  &lt;code&gt;java.rmi.MarshalledObject&lt;/code&gt;)&lt;/ul&gt;&lt;p&gt;                
                <author>
                    Ann Wollrath                    
                </author>
                <since>
                    1.2                    
                </since>
                <see>
                    ActivationGroup                    
                </see>
                <see>
                    ActivationGroupID                    
                </see>
            </javadoc>
            <declaration name="className" type="String" line="61"/>
            <javadoc line="61">
                @serial The group&apos;s fully package qualified class name.                
            </javadoc>
            <declaration name="location" type="String" line="66"/>
            <javadoc line="66">
                @serial The location from where to load the group&apos;s class.                
            </javadoc>
            <declaration name="data" type="MarshalledObject&lt;?&gt;" line="71"/>
            <javadoc line="71">
                @serial The group&apos;s initialization data.                
            </javadoc>
            <declaration name="env" type="CommandEnvironment" line="76"/>
            <javadoc line="76">
                @serial The controlling options for executing the VM in
                  another process.                
            </javadoc>
            <declaration name="props" type="Properties" line="82"/>
            <javadoc line="82">
                @serial A properties map which will override those set
                  by default in the subprocess environment.                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="88"/>
            <javadoc line="88">
                indicate compatibility with the Java 2 SDK v1.2 version of class                
            </javadoc>
            <javadoc line="91">
                Constructs a group descriptor that uses the system defaults for group
                  implementation and code location.  Properties specify Java
                  environment overrides (which will override system properties in
                  the group implementation&apos;s VM).  The command
                  environment can control the exact command/options used in
                  starting the child VM, or can be &lt;code&gt;null&lt;/code&gt; to accept
                  rmid&apos;s default.
                  &lt;p&gt;This constructor will create an &lt;code&gt;ActivationGroupDesc&lt;/code&gt;
                  with a &lt;code&gt;null&lt;/code&gt; group class name, which indicates the system&apos;s
                  default &lt;code&gt;ActivationGroup&lt;/code&gt; implementation.                
                <param>
                    overrides the set of properties to set when the group is
                      recreated.                    
                </param>
                <param>
                    cmd the controlling options for executing the VM in
                      another process (or &lt;code&gt;null&lt;/code&gt;).                    
                </param>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="ActivationGroupDesc" type="constructor" line="112">
                <params>
                    <param name="overrides" type="Properties"/>
                    <param name="cmd" type="CommandEnvironment"/>
                </params>
            </method>
            <javadoc line="116">
                Specifies an alternate group implementation and execution
                  environment to be used for the group.                
                <param>
                    className the group&apos;s package qualified class name or
                      &lt;code&gt;null&lt;/code&gt;. A &lt;code&gt;null&lt;/code&gt; group class name indicates
                      the system&apos;s default &lt;code&gt;ActivationGroup&lt;/code&gt; implementation.                    
                </param>
                <param>
                    location the location from where to load the group&apos;s
                      class                    
                </param>
                <param>
                    data the group&apos;s initialization data contained in
                      marshalled form (could contain properties, for example)                    
                </param>
                <param>
                    overrides a properties map which will override those set
                      by default in the subprocess environment (will be translated
                      into &lt;code&gt;-D&lt;/code&gt; options), or &lt;code&gt;null&lt;/code&gt;.                    
                </param>
                <param>
                    cmd the controlling options for executing the VM in
                      another process (or &lt;code&gt;null&lt;/code&gt;).                    
                </param>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="ActivationGroupDesc" type="constructor" line="139">
                <params>
                    <param name="className" type="String"/>
                    <param name="location" type="String"/>
                    <param name="data" type="MarshalledObject<?>"/>
                    <param name="overrides" type="Properties"/>
                    <param name="cmd" type="CommandEnvironment"/>
                </params>
            </method>
            <javadoc line="147">
                Returns the group&apos;s class name (possibly &lt;code&gt;null&lt;/code&gt;).  A
                  &lt;code&gt;null&lt;/code&gt; group class name indicates the system&apos;s default
                  &lt;code&gt;ActivationGroup&lt;/code&gt; implementation.                
                <return>
                    the group&apos;s class name                    
                </return>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="getClassName" type="String" line="154"/>
            <javadoc line="158">
                Returns the group&apos;s code location.                
                <return>
                    the group&apos;s code location                    
                </return>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="getLocation" type="String" line="163"/>
            <javadoc line="167">
                Returns the group&apos;s initialization data.                
                <return>
                    the group&apos;s initialization data                    
                </return>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="getData" type="MarshalledObject<?>" line="172"/>
            <javadoc line="176">
                Returns the group&apos;s property-override list.                
                <return>
                    the property-override list, or &lt;code&gt;null&lt;/code&gt;                    
                </return>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="getPropertyOverrides" type="Properties" line="181"/>
            <javadoc line="185">
                Returns the group&apos;s command-environment control object.                
                <return>
                    the command-environment object, or &lt;code&gt;null&lt;/code&gt;                    
                </return>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="getCommandEnvironment" type="CommandEnvironment" line="190"/>
            <class name="CommandEnvironment" line="195">
                <implements interface="Serializable"/>
                <javadoc line="195">
                    Startup options for ActivationGroup implementations.
                      This class allows overriding default system properties and
                      specifying implementation-defined options for ActivationGroups.                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <declaration name="serialVersionUID" type="long" line="203"/>
                <declaration name="command" type="String" line="205"/>
                <javadoc line="205">
                    @serial                    
                </javadoc>
                <declaration name="options" type="String[]" line="210"/>
                <javadoc line="210">
                    @serial                    
                </javadoc>
                <javadoc line="215">
                    Create a CommandEnvironment with all the necessary
                      information.                    
                    <param>
                        cmdpath the name of the java executable, including
                          the full path, or &lt;code&gt;null&lt;/code&gt;, meaning &quot;use rmid&apos;s default&quot;.
                          The named program &lt;em&gt;must&lt;/em&gt; be able to accept multiple
                          &lt;code&gt;-Dpropname=value&lt;/code&gt; options (as documented for the
                          &quot;java&quot; tool)                        
                    </param>
                    <param>
                        argv extra options which will be used in creating the
                          ActivationGroup.  Null has the same effect as an empty
                          list.                        
                    </param>
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="CommandEnvironment" type="constructor" line="232">
                    <params>
                        <param name="cmdpath" type="String"/>
                        <param name="argv" type="String[]"/>
                    </params>
                    <comment line="234">
                        might be null                        
                    </comment>
                    <comment line="236">
                        Hold a safe copy of argv in this.options                        
                    </comment>
                    <scope line="236"/>
                    <scope line="238"/>
                </method>
                <javadoc line="244">
                    Fetch the configured path-qualified java command name.                    
                    <return>
                        the configured name, or &lt;code&gt;null&lt;/code&gt; if configured to
                          accept the default                        
                    </return>
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="getCommandPath" type="String" line="251"/>
                <javadoc line="255">
                    Fetch the configured java command options.                    
                    <return>
                        An array of the command options which will be passed
                          to the new child command by rmid.
                          Note that rmid may add other options before or after these
                          options, or both.
                          Never returns &lt;code&gt;null&lt;/code&gt;.                        
                    </return>
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="getCommandOptions" type="String[]" line="265"/>
                <javadoc line="269">
                    Compares two command environments for content equality.                    
                    <param>
                        obj     the Object to compare with                        
                    </param>
                    <return>
                        true if these Objects are equal; false otherwise.                        
                    </return>
                    <see>
                        java.util.Hashtable                        
                    </see>
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="equals" type="boolean" line="277">
                    <params>
                        <param name="obj" type="Object"/>
                    </params>
                    <scope line="279">
                        <declaration name="env" type="CommandEnvironment" line="280"/>
                    </scope>
                    <scope line="285"/>
                </method>
                <javadoc line="290">
                    Return identical values for similar
                      &lt;code&gt;CommandEnvironment&lt;/code&gt;s.                    
                    <return>
                        an integer                        
                    </return>
                    <see>
                        java.util.Hashtable                        
                    </see>
                </javadoc>
                <method name="hashCode" type="int" line="297">
                    <comment line="299">
                        hash command and ignore possibly expensive options                        
                    </comment>
                </method>
                <javadoc line="302">
                    &lt;code&gt;readObject&lt;/code&gt; for custom serialization.
                      &lt;p&gt;This method reads this object&apos;s serialized form for this
                      class as follows:
                      &lt;p&gt;This method first invokes &lt;code&gt;defaultReadObject&lt;/code&gt; on
                      the specified object input stream, and if &lt;code&gt;options&lt;/code&gt;
                      is &lt;code&gt;null&lt;/code&gt;, then &lt;code&gt;options&lt;/code&gt; is set to a
                      zero-length array of &lt;code&gt;String&lt;/code&gt;.                    
                </javadoc>
                <method name="readObject" type="void" line="315">
                    <params>
                        <param name="in" type="ObjectInputStream"/>
                    </params>
                    <scope line="317"/>
                </method>
            </class>
            <javadoc line="323">
                Compares two activation group descriptors for content equality.                
                <param>
                    obj     the Object to compare with                    
                </param>
                <return>
                    true if these Objects are equal; false otherwise.                    
                </return>
                <see>
                    java.util.Hashtable                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="equals" type="boolean" line="331">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="333">
                    <declaration name="desc" type="ActivationGroupDesc" line="334"/>
                </scope>
                <scope line="344"/>
            </method>
            <javadoc line="349">
                Produce identical numbers for similar &lt;code&gt;ActivationGroupDesc&lt;/code&gt;s.                
                <return>
                    an integer                    
                </return>
                <see>
                    java.util.Hashtable                    
                </see>
            </javadoc>
            <method name="hashCode" type="int" line="354">
                <comment line="356">
                    hash location, className, data, and env
                     but omit props (may be expensive)                    
                </comment>
            </method>
        </class>
    </source>