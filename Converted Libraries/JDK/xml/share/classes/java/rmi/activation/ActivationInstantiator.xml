<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.rmi.activation">
        <import package="java.rmi.MarshalledObject"/>
        <import package="java.rmi.Remote"/>
        <import package="java.rmi.RemoteException"/>
        <interface name="ActivationInstantiator">
            <implements interface="Remote"/>
            <javadoc line="32">
                An &lt;code&gt;ActivationInstantiator&lt;/code&gt; is responsible for creating
                  instances of &quot;activatable&quot; objects. A concrete subclass of
                  &lt;code&gt;ActivationGroup&lt;/code&gt; implements the &lt;code&gt;newInstance&lt;/code&gt;
                  method to handle creating objects within the group.                
                <author>
                    Ann Wollrath                    
                </author>
                <see>
                    ActivationGroup                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="newInstance" type="MarshalledObject<? extends Remote>" line="44"/>
            <javadoc line="44">
                The activator calls an instantiator&apos;s &lt;code&gt;newInstance&lt;/code&gt;
                  method in order to recreate in that group an object with the
                  activation identifier, &lt;code&gt;id&lt;/code&gt;, and descriptor,
                  &lt;code&gt;desc&lt;/code&gt;. The instantiator is responsible for: &lt;ul&gt;
                  &lt;li&gt; determining the class for the object using the descriptor&apos;s
                  &lt;code&gt;getClassName&lt;/code&gt; method,
                  &lt;li&gt; loading the class from the code location obtained from the
                  descriptor (using the &lt;code&gt;getLocation&lt;/code&gt; method),
                  &lt;li&gt; creating an instance of the class by invoking the special
                  &quot;activation&quot; constructor of the object&apos;s class that takes two
                  arguments: the object&apos;s &lt;code&gt;ActivationID&lt;/code&gt;, and the
                  &lt;code&gt;MarshalledObject&lt;/code&gt; containing object specific
                  initialization data, and
                  &lt;li&gt; returning a MarshalledObject containing the stub for the
                  remote object it created &lt;/ul&gt;                
                <param>
                    id the object's activation identifier                    
                </param>
                <param>
                    desc the object's descriptor                    
                </param>
                <return>
                    a marshalled object containing the serialized
                      representation of remote object's stub                    
                </return>
                <exception>
                    ActivationException if object activation fails                    
                </exception>
                <exception>
                    RemoteException if remote call fails                    
                </exception>
                <since>
                    1.2                    
                </since>
            </javadoc>
        </interface>
    </source>