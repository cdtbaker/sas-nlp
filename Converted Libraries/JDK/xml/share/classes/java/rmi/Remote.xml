<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.rmi">
        <interface name="Remote">
            <javadoc line="2">
                The &lt;code&gt;Remote&lt;/code&gt; interface serves to identify interfaces whose
                  methods may be invoked from a non-local virtual machine.  Any object that
                  is a remote object must directly or indirectly implement this interface.
                  Only those methods specified in a &quot;remote interface&quot;, an interface that
                  extends &lt;code&gt;java.rmi.Remote&lt;/code&gt; are available remotely.
                  &lt;p&gt;Implementation classes can implement any number of remote interfaces and
                  can extend other remote implementation classes.  RMI provides some
                  convenience classes that remote object implementations can extend which
                  facilitate remote object creation.  These classes are
                  &lt;code&gt;java.rmi.server.UnicastRemoteObject&lt;/code&gt; and
                  &lt;code&gt;java.rmi.activation.Activatable&lt;/code&gt;.
                  &lt;p&gt;For complete details on RMI, see the &lt;a
                  href=../../../platform/rmi/spec/rmiTOC.html&gt;RMI Specification&lt;/a&gt; which describes the RMI API and system.                
                <since>
                    JDK1.1                    
                </since>
                <author>
                    Ann Wollrath                    
                </author>
                <see>
                    java.rmi.server.UnicastRemoteObject                    
                </see>
                <see>
                    java.rmi.activation.Activatable                    
                </see>
            </javadoc>
        </interface>
    </source>