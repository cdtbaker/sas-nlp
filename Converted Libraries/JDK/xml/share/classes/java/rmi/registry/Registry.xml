<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.rmi.registry">
        <import package="java.rmi.AccessException"/>
        <import package="java.rmi.AlreadyBoundException"/>
        <import package="java.rmi.NotBoundException"/>
        <import package="java.rmi.Remote"/>
        <import package="java.rmi.RemoteException"/>
        <interface name="Registry">
            <implements interface="Remote"/>
            <javadoc line="33">
                &lt;code&gt;Registry&lt;/code&gt; is a remote interface to a simple remote
                  object registry that provides methods for storing and retrieving
                  remote object references bound with arbitrary string names.  The
                  &lt;code&gt;bind&lt;/code&gt;, &lt;code&gt;unbind&lt;/code&gt;, and &lt;code&gt;rebind&lt;/code&gt;
                  methods are used to alter the name bindings in the registry, and
                  the &lt;code&gt;lookup&lt;/code&gt; and &lt;code&gt;list&lt;/code&gt; methods are used to
                  query the current name bindings.
                  &lt;p&gt;In its typical usage, a &lt;code&gt;Registry&lt;/code&gt; enables RMI client
                  bootstrapping: it provides a simple means for a client to obtain an
                  initial reference to a remote object.  Therefore, a registry&apos;s
                  remote object implementation is typically exported with a
                  well-known address, such as with a well-known {@link java.rmi.server.ObjID#REGISTRY_ID ObjID} and TCP port number
                  (default is {@link #REGISTRY_PORT 1099}).
                  &lt;p&gt;The {@link LocateRegistry} class provides a programmatic API for
                  constructing a bootstrap reference to a &lt;code&gt;Registry&lt;/code&gt; at a
                  remote address (see the static &lt;code&gt;getRegistry&lt;/code&gt; methods)
                  and for creating and exporting a &lt;code&gt;Registry&lt;/code&gt; in the
                  current VM on a particular local address (see the static
                  &lt;code&gt;createRegistry&lt;/code&gt; methods).
                  &lt;p&gt;A &lt;code&gt;Registry&lt;/code&gt; implementation may choose to restrict
                  access to some or all of its methods (for example, methods that
                  mutate the registry&apos;s bindings may be restricted to calls
                  originating from the local host).  If a &lt;code&gt;Registry&lt;/code&gt;
                  method chooses to deny access for a given invocation, its
                  implementation may throw {@link java.rmi.AccessException}, which
                  (because it extends {@link java.rmi.RemoteException}) will be
                  wrapped in a {@link java.rmi.ServerException} when caught by a
                  remote client.
                  &lt;p&gt;The names used for bindings in a &lt;code&gt;Registry&lt;/code&gt; are pure
                  strings, not parsed.  A service which stores its remote reference
                  in a &lt;code&gt;Registry&lt;/code&gt; may wish to use a package name as a
                  prefix in the name binding to reduce the likelihood of name
                  collisions in the registry.                
                <author>
                    Ann Wollrath                    
                </author>
                <author>
                    Peter Jones                    
                </author>
                <since>
                    JDK1.1                    
                </since>
                <see>
                    LocateRegistry                    
                </see>
            </javadoc>
            <declaration name="REGISTRY_PORT" type="int" line="80"/>
            <javadoc line="80">
                Well known port for registry.                
            </javadoc>
            <method name="lookup" type="Remote" line="83"/>
            <javadoc line="83">
                Returns the remote reference bound to the specified
                  &lt;code&gt;name&lt;/code&gt; in this registry.                
                <param>
                    name the name for the remote reference to look up                    
                </param>
                <return>
                    a reference to a remote object                    
                </return>
                <throws>
                    NotBoundException if <code>name</code> is not currently bound                    
                </throws>
                <throws>
                    RemoteException if remote communication with the
                      registry failed; if exception is a <code>ServerException</code>
                      containing an <code>AccessException</code>, then the registry
                      denies the caller access to perform this operation                    
                </throws>
                <throws>
                    AccessException if this registry is local and it denies
                      the caller access to perform this operation                    
                </throws>
                <throws>
                    NullPointerException if <code>name</code> is <code>null</code>                    
                </throws>
            </javadoc>
            <method name="bind" type="void" line="106"/>
            <javadoc line="106">
                Binds a remote reference to the specified &lt;code&gt;name&lt;/code&gt; in
                  this registry.                
                <param>
                    name the name to associate with the remote reference                    
                </param>
                <param>
                    obj a reference to a remote object (usually a stub)                    
                </param>
                <throws>
                    AlreadyBoundException if <code>name</code> is already bound                    
                </throws>
                <throws>
                    RemoteException if remote communication with the
                      registry failed; if exception is a <code>ServerException</code>
                      containing an <code>AccessException</code>, then the registry
                      denies the caller access to perform this operation (if
                      originating from a non-local host, for example)                    
                </throws>
                <throws>
                    AccessException if this registry is local and it denies
                      the caller access to perform this operation                    
                </throws>
                <throws>
                    NullPointerException if <code>name</code> is
                      <code>null</code>, or if <code>obj</code> is <code>null</code>                    
                </throws>
            </javadoc>
            <method name="unbind" type="void" line="130"/>
            <javadoc line="130">
                Removes the binding for the specified &lt;code&gt;name&lt;/code&gt; in
                  this registry.                
                <param>
                    name the name of the binding to remove                    
                </param>
                <throws>
                    NotBoundException if <code>name</code> is not currently bound                    
                </throws>
                <throws>
                    RemoteException if remote communication with the
                      registry failed; if exception is a <code>ServerException</code>
                      containing an <code>AccessException</code>, then the registry
                      denies the caller access to perform this operation (if
                      originating from a non-local host, for example)                    
                </throws>
                <throws>
                    AccessException if this registry is local and it denies
                      the caller access to perform this operation                    
                </throws>
                <throws>
                    NullPointerException if <code>name</code> is <code>null</code>                    
                </throws>
            </javadoc>
            <method name="rebind" type="void" line="152"/>
            <javadoc line="152">
                Replaces the binding for the specified &lt;code&gt;name&lt;/code&gt; in
                  this registry with the supplied remote reference.  If there is
                  an existing binding for the specified &lt;code&gt;name&lt;/code&gt;, it is
                  discarded.                
                <param>
                    name the name to associate with the remote reference                    
                </param>
                <param>
                    obj a reference to a remote object (usually a stub)                    
                </param>
                <throws>
                    RemoteException if remote communication with the
                      registry failed; if exception is a <code>ServerException</code>
                      containing an <code>AccessException</code>, then the registry
                      denies the caller access to perform this operation (if
                      originating from a non-local host, for example)                    
                </throws>
                <throws>
                    AccessException if this registry is local and it denies
                      the caller access to perform this operation                    
                </throws>
                <throws>
                    NullPointerException if <code>name</code> is
                      <code>null</code>, or if <code>obj</code> is <code>null</code>                    
                </throws>
            </javadoc>
            <method name="list" type="String[]" line="176"/>
            <javadoc line="176">
                Returns an array of the names bound in this registry.  The
                  array will contain a snapshot of the names bound in this
                  registry at the time of the given invocation of this method.                
                <return>
                    an array of the names bound in this registry                    
                </return>
                <throws>
                    RemoteException if remote communication with the
                      registry failed; if exception is a <code>ServerException</code>
                      containing an <code>AccessException</code>, then the registry
                      denies the caller access to perform this operation                    
                </throws>
                <throws>
                    AccessException if this registry is local and it denies
                      the caller access to perform this operation                    
                </throws>
            </javadoc>
        </interface>
    </source>