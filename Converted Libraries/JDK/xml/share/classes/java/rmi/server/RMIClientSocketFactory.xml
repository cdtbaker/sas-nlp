<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.rmi.server">
        <import package="java.io"/>
        <import package="java.net"/>
        <interface name="RMIClientSocketFactory">
            <javadoc line="31">
                An &lt;code&gt;RMIClientSocketFactory&lt;/code&gt; instance is used by the RMI runtime
                  in order to obtain client sockets for RMI calls.  A remote object can be
                  associated with an &lt;code&gt;RMIClientSocketFactory&lt;/code&gt; when it is
                  created/exported via the constructors or &lt;code&gt;exportObject&lt;/code&gt; methods
                  of &lt;code&gt;java.rmi.server.UnicastRemoteObject&lt;/code&gt; and
                  &lt;code&gt;java.rmi.activation.Activatable&lt;/code&gt; .
                  &lt;p&gt;An &lt;code&gt;RMIClientSocketFactory&lt;/code&gt; instance associated with a remote
                  object will be downloaded to clients when the remote object&apos;s reference is
                  transmitted in an RMI call.  This &lt;code&gt;RMIClientSocketFactory&lt;/code&gt; will
                  be used to create connections to the remote object for remote method calls.
                  &lt;p&gt;An &lt;code&gt;RMIClientSocketFactory&lt;/code&gt; instance can also be associated
                  with a remote object registry so that clients can use custom socket
                  communication with a remote object registry.
                  &lt;p&gt;An implementation of this interface should be serializable and
                  should implement {@link Object#equals} to return &lt;code&gt;true&lt;/code&gt; when
                  passed an instance that represents the same (functionally equivalent)
                  client socket factory, and &lt;code&gt;false&lt;/code&gt; otherwise (and it should also
                  implement {@link Object#hashCode} consistently with its
                  &lt;code&gt;Object.equals&lt;/code&gt; implementation).                
                <author>
                    Ann Wollrath                    
                </author>
                <author>
                    Peter Jones                    
                </author>
                <since>
                    1.2                    
                </since>
                <see>
                    java.rmi.server.UnicastRemoteObject                    
                </see>
                <see>
                    java.rmi.activation.Activatable                    
                </see>
                <see>
                    java.rmi.registry.LocateRegistry                    
                </see>
            </javadoc>
            <method name="createSocket" type="Socket" line="64"/>
            <javadoc line="64">
                Create a client socket connected to the specified host and port.                
                <param>
                    host   the host name                    
                </param>
                <param>
                    port   the port number                    
                </param>
                <return>
                    a socket connected to the specified host and port.                    
                </return>
                <exception>
                    IOException if an I/O error occurs during socket creation                    
                </exception>
                <since>
                    1.2                    
                </since>
            </javadoc>
        </interface>
    </source>