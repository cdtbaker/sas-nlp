<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.rmi.server">
        <import package="java.rmi"/>
        <interface name="ServerRef">
            <implements interface="RemoteRef"/>
            <javadoc line="30">
                A ServerRef represents the server-side handle for a remote object
                  implementation.                
                <author>
                    Ann Wollrath                    
                </author>
                <since>
                    JDK1.1                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="39"/>
            <javadoc line="39">
                indicate compatibility with JDK 1.1.x version of class.                
            </javadoc>
            <method name="exportObject" type="RemoteStub" line="42"/>
            <javadoc line="42">
                Creates a client stub object for the supplied Remote object.
                  If the call completes successfully, the remote object should
                  be able to accept incoming calls from clients.                
                <param>
                    obj the remote object implementation                    
                </param>
                <param>
                    data information necessary to export the object                    
                </param>
                <return>
                    the stub for the remote object                    
                </return>
                <exception>
                    RemoteException if an exception occurs attempting
                      to export the object (e.g., stub class could not be found)                    
                </exception>
                <since>
                    JDK1.1                    
                </since>
            </javadoc>
            <method name="getClientHost" type="String" line="56"/>
            <javadoc line="56">
                Returns the hostname of the current client.  When called from a
                  thread actively handling a remote method invocation the
                  hostname of the client is returned.                
                <return>
                    the client&apos;s host name                    
                </return>
                <exception>
                    ServerNotActiveException if called outside of servicing
                      a remote method invocation                    
                </exception>
                <since>
                    JDK1.1                    
                </since>
            </javadoc>
        </interface>
    </source>