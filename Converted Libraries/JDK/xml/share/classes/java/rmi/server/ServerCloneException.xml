<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.rmi.server">
        <class name="ServerCloneException" line="28">
            <extends class="CloneNotSupportedException"/>
            <comment line="61">
                                
            </comment>
            <javadoc line="28">
                A &lt;code&gt;ServerCloneException&lt;/code&gt; is thrown if a remote exception occurs
                  during the cloning of a &lt;code&gt;UnicastRemoteObject&lt;/code&gt;.
                  &lt;p&gt;As of release 1.4, this exception has been retrofitted to conform to
                  the general purpose exception-chaining mechanism.  The &quot;nested exception&quot;
                  that may be provided at construction time and accessed via the public{@link #detail} field is now known as the &lt;i&gt;cause&lt;/i&gt;, and may be
                  accessed via the {@link Throwable#getCause()} method, as well as
                  the aforementioned &quot;legacy field.&quot;
                  &lt;p&gt;Invoking the method {@link Throwable#initCause(Throwable)} on an
                  instance of &lt;code&gt;ServerCloneException&lt;/code&gt; always throws {@link IllegalStateException}.                
                <author>
                    Ann Wollrath                    
                </author>
                <since>
                    JDK1.1                    
                </since>
                <see>
                    java.rmi.server.UnicastRemoteObject#clone()                    
                </see>
            </javadoc>
            <declaration name="detail" type="Exception" line="49"/>
            <javadoc line="49">
                The cause of the exception.
                  &lt;p&gt;This field predates the general-purpose exception chaining facility.
                  The {@link Throwable#getCause()} method is now the preferred means of
                  obtaining this information.                
                <serial>
                                        
                </serial>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="61"/>
            <javadoc line="63">
                Constructs a &lt;code&gt;ServerCloneException&lt;/code&gt; with the specified
                  detail message.                
                <param>
                    s the detail message.                    
                </param>
            </javadoc>
            <method name="ServerCloneException" type="constructor" line="69">
                <params>
                    <param name="s" type="String"/>
                </params>
                <comment line="71">
                    Disallow subsequent initCause                    
                </comment>
            </method>
            <javadoc line="74">
                Constructs a &lt;code&gt;ServerCloneException&lt;/code&gt; with the specified
                  detail message and cause.                
                <param>
                    s the detail message.                    
                </param>
                <param>
                    cause the cause                    
                </param>
            </javadoc>
            <method name="ServerCloneException" type="constructor" line="81">
                <params>
                    <param name="s" type="String"/>
                    <param name="cause" type="Exception"/>
                </params>
                <comment line="83">
                    Disallow subsequent initCause                    
                </comment>
            </method>
            <javadoc line="87">
                Returns the detail message, including the message from the cause, if
                  any, of this exception.                
                <return>
                    the detail message                    
                </return>
            </javadoc>
            <method name="getMessage" type="String" line="93"/>
            <javadoc line="102">
                Returns the cause of this exception.  This method returns the value
                  of the {@link #detail} field.                
                <return>
                    the cause, which may be <tt>null</tt>.                    
                </return>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="getCause" type="Throwable" line="109"/>
        </class>
    </source>