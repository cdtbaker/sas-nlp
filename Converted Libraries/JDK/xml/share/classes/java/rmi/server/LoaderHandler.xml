<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.rmi.server">
        <import package="java.net.MalformedURLException"/>
        <import package="java.net.URL"/>
        <interface name="LoaderHandler">
            <javadoc line="31">
                &lt;code&gt;LoaderHandler&lt;/code&gt; is an interface used internally by the RMI
                  runtime in previous implementation versions.  It should never be accessed
                  by application code.                
                <author>
                    Ann Wollrath                    
                </author>
                <since>
                    JDK1.1                    
                </since>
                <deprecated>
                    no replacement                    
                </deprecated>
            </javadoc>
            <declaration name="packagePrefix" type="String" line="44"/>
            <javadoc line="44">
                package of system &lt;code&gt;LoaderHandler&lt;/code&gt; implementation.                
            </javadoc>
            <method name="loadClass" type="Class<?>" line="47"/>
            <javadoc line="47">
                Loads a class from the location specified by the
                  &lt;code&gt;java.rmi.server.codebase&lt;/code&gt; property.                
                <param>
                    name the name of the class to load                    
                </param>
                <return>
                    the &lt;code&gt;Class&lt;/code&gt; object representing the loaded class                    
                </return>
                <exception>
                    MalformedURLExceptionif the system property &lt;b&gt;java.rmi.server.codebase&lt;/b&gt;
                      contains an invalid URL                    
                </exception>
                <exception>
                    ClassNotFoundExceptionif a definition for the class could not
                      be found at the codebase location.                    
                </exception>
                <since>
                    JDK1.1                    
                </since>
                <deprecated>
                    no replacement                    
                </deprecated>
            </javadoc>
            <method name="loadClass" type="Class<?>" line="66"/>
            <javadoc line="66">
                Loads a class from a URL.                
                <param>
                    codebase  the URL from which to load the class                    
                </param>
                <param>
                    name      the name of the class to load                    
                </param>
                <return>
                    the &lt;code&gt;Class&lt;/code&gt; object representing the loaded class                    
                </return>
                <exception>
                    MalformedURLExceptionif the &lt;code&gt;codebase&lt;/code&gt; paramater
                      contains an invalid URL                    
                </exception>
                <exception>
                    ClassNotFoundExceptionif a definition for the class could not
                      be found at the specified URL                    
                </exception>
                <since>
                    JDK1.1                    
                </since>
                <deprecated>
                    no replacement                    
                </deprecated>
            </javadoc>
            <method name="getSecurityContext" type="Object" line="85"/>
            <javadoc line="85">
                Returns the security context of the given class loader.                
                <param>
                    loader  a class loader from which to get the security context                    
                </param>
                <return>
                    the security context                    
                </return>
                <since>
                    JDK1.1                    
                </since>
                <deprecated>
                    no replacement                    
                </deprecated>
            </javadoc>
        </interface>
    </source>