<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.rmi">
        <class name="UnmarshalException" line="2">
            <extends class="RemoteException"/>
            <javadoc line="2">
                An &lt;code&gt;UnmarshalException&lt;/code&gt; can be thrown while unmarshalling the
                  parameters or results of a remote method call if any of the following
                  conditions occur:
                  &lt;ul&gt;
                  &lt;li&gt; if an exception occurs while unmarshalling the call header
                  &lt;li&gt; if the protocol for the return value is invalid
                  &lt;li&gt; if a &lt;code&gt;java.io.IOException&lt;/code&gt; occurs unmarshalling
                  parameters (on the server side) or the return value (on the client side).
                  &lt;li&gt; if a &lt;code&gt;java.lang.ClassNotFoundException&lt;/code&gt; occurs during
                  unmarshalling parameters or return values
                  &lt;li&gt; if no skeleton can be loaded on the server-side; note that skeletons
                  are required in the 1.1 stub protocol, but not in the 1.2 stub protocol.
                  &lt;li&gt; if the method hash is invalid (i.e., missing method).
                  &lt;li&gt; if there is a failure to create a remote reference object for
                  a remote object&apos;s stub when it is unmarshalled.
                  &lt;/ul&gt;                
                <author>
                    Ann Wollrath                    
                </author>
                <since>
                    JDK1.1                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="23"/>
            <javadoc line="24">
                Constructs an &lt;code&gt;UnmarshalException&lt;/code&gt; with the specified
                  detail message.                
                <param>
                    s the detail message                    
                </param>
                <since>
                    JDK1.1                    
                </since>
            </javadoc>
            <method name="UnmarshalException" type="constructor" line="30">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <javadoc line="33">
                Constructs an &lt;code&gt;UnmarshalException&lt;/code&gt; with the specified
                  detail message and nested exception.                
                <param>
                    s the detail message                    
                </param>
                <param>
                    ex the nested exception                    
                </param>
                <since>
                    JDK1.1                    
                </since>
            </javadoc>
            <method name="UnmarshalException" type="constructor" line="40">
                <params>
                    <param name="s" type="String"/>
                    <param name="ex" type="Exception"/>
                </params>
            </method>
        </class>
    </source>