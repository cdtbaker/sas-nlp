<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.util">
        <interface name="Iterator">
            <type_params>
                <type_param name="E"/>
            </type_params>
            <javadoc line="2">
                An iterator over a collection.  {@code Iterator} takes the place of{@link Enumeration} in the Java Collections Framework.  Iterators
                  differ from enumerations in two ways:
                  &lt;ul&gt;
                  &lt;li&gt; Iterators allow the caller to remove elements from the
                  underlying collection during the iteration with well-defined
                  semantics.
                  &lt;li&gt; Method names have been improved.
                  &lt;/ul&gt;
                  &lt;p&gt;This interface is a member of the
                  &lt;a href=&quot;{@docRoot}/../technotes/guides/collections/index.html&quot;&gt;
                  Java Collections Framework&lt;/a&gt;.                
                <param>
                    <E>
                      the type of elements returned by this iterator                    
                </param>
                <author>
                    Josh Bloch                    
                </author>
                <see>
                    Collection                    
                </see>
                <see>
                    ListIterator                    
                </see>
                <see>
                    Iterable                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="hasNext" type="boolean" line="23"/>
            <javadoc line="23">
                Returns {@code true} if the iteration has more elements.
                  (In other words, returns {@code true} if {@link #next} would
                  return an element rather than throwing an exception.)                
                <return>
                    {@code true} if the iteration has more elements                    
                </return>
            </javadoc>
            <method name="next" type="E" line="30"/>
            <javadoc line="30">
                Returns the next element in the iteration.                
                <return>
                    the next element in the iteration                    
                </return>
                <throws>
                    NoSuchElementException if the iteration has no more elements                    
                </throws>
            </javadoc>
            <method name="remove" type="void" line="36"/>
            <javadoc line="36">
                Removes from the underlying collection the last element returned
                  by this iterator (optional operation).  This method can be called
                  only once per call to {@link #next}.  The behavior of an iterator
                  is unspecified if the underlying collection is modified while the
                  iteration is in progress in any way other than by calling this
                  method.                
                <throws>
                    UnsupportedOperationException if the {@code remove}operation is not supported by this iterator                    
                </throws>
                <throws>
                    IllegalStateException if the {@code next} method has not
                      yet been called, or the {@code remove} method has already
                      been called after the last call to the {@code next}method                    
                </throws>
            </javadoc>
        </interface>
    </source>