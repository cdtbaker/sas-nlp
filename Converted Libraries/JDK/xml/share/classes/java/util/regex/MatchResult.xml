<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.util.regex">
        <interface name="MatchResult">
            <javadoc line="28">
                The result of a match operation.
                  &lt;p&gt;This interface contains query methods used to determine the
                  results of a match against a regular expression. The match boundaries,
                  groups and group boundaries can be seen but not modified through
                  a &lt;code&gt;MatchResult&lt;/code&gt;.                
                <author>
                    Michael McCloskey                    
                </author>
                <see>
                    Matcher                    
                </see>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="start" type="int" line="42"/>
            <javadoc line="42">
                Returns the start index of the match.                
                <return>
                    The index of the first character matched                    
                </return>
                <throws>
                    IllegalStateExceptionIf no match has yet been attempted,
                      or if the previous match operation failed                    
                </throws>
            </javadoc>
            <method name="start" type="int" line="53"/>
            <javadoc line="53">
                Returns the start index of the subsequence captured by the given group
                  during this match.
                  &lt;p&gt; &lt;a href=&quot;Pattern.html#cg&quot;&gt;Capturing groups&lt;/a&gt; are indexed from left
                  to right, starting at one.  Group zero denotes the entire pattern, so
                  the expression &lt;i&gt;m.&lt;/i&gt;&lt;tt&gt;start(0)&lt;/tt&gt; is equivalent to
                  &lt;i&gt;m.&lt;/i&gt;&lt;tt&gt;start()&lt;/tt&gt;.  &lt;/p&gt;                
                <param>
                    groupThe index of a capturing group in this matcher's pattern                    
                </param>
                <return>
                    The index of the first character captured by the group,
                      or <tt>-1</tt> if the match was successful but the group
                      itself did not match anything                    
                </return>
                <throws>
                    IllegalStateExceptionIf no match has yet been attempted,
                      or if the previous match operation failed                    
                </throws>
                <throws>
                    IndexOutOfBoundsExceptionIf there is no capturing group in the pattern
                      with the given index                    
                </throws>
            </javadoc>
            <method name="end" type="int" line="79"/>
            <javadoc line="79">
                Returns the offset after the last character matched.  &lt;/p&gt;                
                <return>
                    @return  The offset after the last character matched                    
                </return>
                <throws>
                    IllegalStateExceptionIf no match has yet been attempted,
                      or if the previous match operation failed                    
                </throws>
            </javadoc>
            <method name="end" type="int" line="90"/>
            <javadoc line="90">
                Returns the offset after the last character of the subsequence
                  captured by the given group during this match.
                  &lt;p&gt; &lt;a href=&quot;Pattern.html#cg&quot;&gt;Capturing groups&lt;/a&gt; are indexed from left
                  to right, starting at one.  Group zero denotes the entire pattern, so
                  the expression &lt;i&gt;m.&lt;/i&gt;&lt;tt&gt;end(0)&lt;/tt&gt; is equivalent to
                  &lt;i&gt;m.&lt;/i&gt;&lt;tt&gt;end()&lt;/tt&gt;.  &lt;/p&gt;                
                <param>
                    groupThe index of a capturing group in this matcher's pattern                    
                </param>
                <return>
                    The offset after the last character captured by the group,
                      or <tt>-1</tt> if the match was successful
                      but the group itself did not match anything                    
                </return>
                <throws>
                    IllegalStateExceptionIf no match has yet been attempted,
                      or if the previous match operation failed                    
                </throws>
                <throws>
                    IndexOutOfBoundsExceptionIf there is no capturing group in the pattern
                      with the given index                    
                </throws>
            </javadoc>
            <method name="group" type="String" line="116"/>
            <javadoc line="116">
                Returns the input subsequence matched by the previous match.
                  &lt;p&gt; For a matcher &lt;i&gt;m&lt;/i&gt; with input sequence &lt;i&gt;s&lt;/i&gt;,
                  the expressions &lt;i&gt;m.&lt;/i&gt;&lt;tt&gt;group()&lt;/tt&gt; and
                  &lt;i&gt;s.&lt;/i&gt;&lt;tt&gt;substring(&lt;/tt&gt;&lt;i&gt;m.&lt;/i&gt;&lt;tt&gt;start(),&lt;/tt&gt;&amp;nbsp;&lt;i&gt;m.&lt;/i&gt;&lt;tt&gt;end())&lt;/tt&gt;
                  are equivalent.  &lt;/p&gt;
                  &lt;p&gt; Note that some patterns, for example &lt;tt&gt;a&lt;/tt&gt;, match the empty
                  string.  This method will return the empty string when the pattern
                  successfully matches the empty string in the input.  &lt;/p&gt;                
                <return>
                    The (possibly empty) subsequence matched by the previous match,
                      in string form                    
                </return>
                <throws>
                    IllegalStateExceptionIf no match has yet been attempted,
                      or if the previous match operation failed                    
                </throws>
            </javadoc>
            <method name="group" type="String" line="137"/>
            <javadoc line="137">
                Returns the input subsequence captured by the given group during the
                  previous match operation.
                  &lt;p&gt; For a matcher &lt;i&gt;m&lt;/i&gt;, input sequence &lt;i&gt;s&lt;/i&gt;, and group index
                  &lt;i&gt;g&lt;/i&gt;, the expressions &lt;i&gt;m.&lt;/i&gt;&lt;tt&gt;group(&lt;/tt&gt;&lt;i&gt;g&lt;/i&gt;&lt;tt&gt;)&lt;/tt&gt; and
                  &lt;i&gt;s.&lt;/i&gt;&lt;tt&gt;substring(&lt;/tt&gt;&lt;i&gt;m.&lt;/i&gt;&lt;tt&gt;start(&lt;/tt&gt;&lt;i&gt;g&lt;/i&gt;&lt;tt&gt;),&lt;/tt&gt;&amp;nbsp;&lt;i&gt;m.&lt;/i&gt;&lt;tt&gt;end(&lt;/tt&gt;&lt;i&gt;g&lt;/i&gt;&lt;tt&gt;))&lt;/tt&gt;
                  are equivalent.  &lt;/p&gt;
                  &lt;p&gt; &lt;a href=&quot;Pattern.html#cg&quot;&gt;Capturing groups&lt;/a&gt; are indexed from left
                  to right, starting at one.  Group zero denotes the entire pattern, so
                  the expression &lt;tt&gt;m.group(0)&lt;/tt&gt; is equivalent to &lt;tt&gt;m.group()&lt;/tt&gt;.
                  &lt;/p&gt;
                  &lt;p&gt; If the match was successful but the group specified failed to match
                  any part of the input sequence, then &lt;tt&gt;null&lt;/tt&gt; is returned. Note
                  that some groups, for example &lt;tt&gt;(a)&lt;/tt&gt;, match the empty string.
                  This method will return the empty string when such a group successfully
                  matches the empty string in the input.  &lt;/p&gt;                
                <param>
                    groupThe index of a capturing group in this matcher's pattern                    
                </param>
                <return>
                    The (possibly empty) subsequence captured by the group
                      during the previous match, or <tt>null</tt> if the group
                      failed to match part of the input                    
                </return>
                <throws>
                    IllegalStateExceptionIf no match has yet been attempted,
                      or if the previous match operation failed                    
                </throws>
                <throws>
                    IndexOutOfBoundsExceptionIf there is no capturing group in the pattern
                      with the given index                    
                </throws>
            </javadoc>
            <method name="groupCount" type="int" line="174"/>
            <javadoc line="174">
                Returns the number of capturing groups in this match result&apos;s pattern.
                  &lt;p&gt; Group zero denotes the entire pattern by convention. It is not
                  included in this count.
                  &lt;p&gt; Any non-negative integer smaller than or equal to the value
                  returned by this method is guaranteed to be a valid group index for
                  this matcher.  &lt;/p&gt;                
                <return>
                    The number of capturing groups in this matcher's pattern                    
                </return>
            </javadoc>
        </interface>
    </source>