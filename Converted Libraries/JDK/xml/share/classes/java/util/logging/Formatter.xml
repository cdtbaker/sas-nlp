<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.util.logging">
        <class name="Formatter" line="2">
            <javadoc line="2">
                A Formatter provides support for formatting LogRecords.
                  &lt;p&gt;
                  Typically each logging Handler will have a Formatter associated
                  with it.  The Formatter takes a LogRecord and converts it to
                  a string.
                  &lt;p&gt;
                  Some formatters (such as the XMLFormatter) need to wrap head
                  and tail strings around a set of formatted records. The getHeader
                  and getTail methods can be used to obtain these strings.                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <javadoc line="15">
                Construct a new formatter.                
            </javadoc>
            <method name="Formatter" type="constructor" line="18"/>
            <method name="format" type="String" line="20"/>
            <javadoc line="20">
                Format the given log record and return the formatted string.
                  &lt;p&gt;
                  The resulting formatted String will normally include a
                  localized and formatted version of the LogRecord&apos;s message field.
                  It is recommended to use the {@link Formatter#formatMessage}convenience method to localize and format the message field.                
                <param>
                    record the log record to be formatted.                    
                </param>
                <return>
                    the formatted log record                    
                </return>
            </javadoc>
            <javadoc line="30">
                Return the header string for a set of formatted records.
                  &lt;p&gt;
                  This base class returns an empty string, but this may be
                  overridden by subclasses.                
                <param>
                    h  The target handler (can be null)                    
                </param>
                <return>
                    header string                    
                </return>
            </javadoc>
            <method name="getHead" type="String" line="38">
                <params>
                    <param name="h" type="Handler"/>
                </params>
            </method>
            <javadoc line="41">
                Return the tail string for a set of formatted records.
                  &lt;p&gt;
                  This base class returns an empty string, but this may be
                  overridden by subclasses.                
                <param>
                    h  The target handler (can be null)                    
                </param>
                <return>
                    tail string                    
                </return>
            </javadoc>
            <method name="getTail" type="String" line="49">
                <params>
                    <param name="h" type="Handler"/>
                </params>
            </method>
            <javadoc line="52">
                Localize and format the message string from a log record.  This
                  method is provided as a convenience for Formatter subclasses to
                  use when they are performing formatting.
                  &lt;p&gt;
                  The message string is first localized to a format string using
                  the record&apos;s ResourceBundle.  (If there is no ResourceBundle,
                  or if the message key is not found, then the key is used as the
                  format string.)  The format String uses java.text style
                  formatting.
                  &lt;ul&gt;
                  &lt;li&gt;If there are no parameters, no formatter is used.
                  &lt;li&gt;Otherwise, if the string contains &quot;{0&quot; then
                  java.text.MessageFormat  is used to format the string.
                  &lt;li&gt;Otherwise no formatting is performed.
                  &lt;/ul&gt;
                  &lt;p&gt;                
                <param>
                    record  the log record containing the raw message                    
                </param>
                <return>
                    a localized and formatted message                    
                </return>
            </javadoc>
            <method name="formatMessage" type="String" line="72">
                <params>
                    <param name="record" type="LogRecord"/>
                </params>
                <declaration name="format" type="String" line="73"/>
                <declaration name="catalog" type="java.util.ResourceBundle" line="74"/>
                <scope line="75">
                    <scope line="76"/>
                    <scope line="79"/>
                </scope>
                <scope line="83">
                    <declaration name="parameters" type="Object" line="84"/>
                    <scope line="85"/>
                    <scope line="88"/>
                </scope>
                <scope line="93"/>
            </method>
        </class>
    </source>