<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.util.logging">
        <class name="ErrorManager" line="2">
            <javadoc line="2">
                ErrorManager objects can be attached to Handlers to process
                  any error that occurs on a Handler during Logging.
                  &lt;p&gt;
                  When processing logging output, if a Handler encounters problems
                  then rather than throwing an Exception back to the issuer of
                  the logging call (who is unlikely to be interested) the Handler
                  should call its associated ErrorManager.                
            </javadoc>
            <declaration name="reported" type="boolean" line="12"/>
            <declaration name="GENERIC_FAILURE" type="int" line="13"/>
            <javadoc line="13">
                GENERIC_FAILURE is used for failure that don&apos;t fit
                  into one of the other categories.                
            </javadoc>
            <declaration name="WRITE_FAILURE" type="int" line="18"/>
            <javadoc line="18">
                WRITE_FAILURE is used when a write to an output stream fails.                
            </javadoc>
            <declaration name="FLUSH_FAILURE" type="int" line="22"/>
            <javadoc line="22">
                FLUSH_FAILURE is used when a flush to an output stream fails.                
            </javadoc>
            <declaration name="CLOSE_FAILURE" type="int" line="26"/>
            <javadoc line="26">
                CLOSE_FAILURE is used when a close of an output stream fails.                
            </javadoc>
            <declaration name="OPEN_FAILURE" type="int" line="30"/>
            <javadoc line="30">
                OPEN_FAILURE is used when an open of an output stream fails.                
            </javadoc>
            <declaration name="FORMAT_FAILURE" type="int" line="34"/>
            <javadoc line="34">
                FORMAT_FAILURE is used when formatting fails for any reason.                
            </javadoc>
            <javadoc line="38">
                The error method is called when a Handler failure occurs.
                  &lt;p&gt;
                  This method may be overridden in subclasses.  The default
                  behavior in this base class is that the first call is
                  reported to System.err, and subsequent calls are ignored.                
                <param>
                    msg    a descriptive string (may be null)                    
                </param>
                <param>
                    ex     an exception (may be null)                    
                </param>
                <param>
                    code   an error code defined in ErrorManager                    
                </param>
            </javadoc>
            <method name="error" type="void" line="48">
                <params>
                    <param name="msg" type="String"/>
                    <param name="ex" type="Exception"/>
                    <param name="code" type="int"/>
                </params>
                <scope line="49"/>
                <declaration name="text" type="String" line="53"/>
                <scope line="54"/>
                <scope line="58"/>
            </method>
        </class>
    </source>