<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.util.concurrent">
        <interface name="Callable">
            <type_params>
                <type_param name="V"/>
            </type_params>
            <javadoc line="38">
                A task that returns a result and may throw an exception.
                  Implementors define a single method with no arguments called
                  &lt;tt&gt;call&lt;/tt&gt;.
                  &lt;p&gt;The &lt;tt&gt;Callable&lt;/tt&gt; interface is similar to {@link java.lang.Runnable}, in that both are designed for classes whose
                  instances are potentially executed by another thread.  A
                  &lt;tt&gt;Runnable&lt;/tt&gt;, however, does not return a result and cannot
                  throw a checked exception.
                  &lt;p&gt; The {@link Executors} class contains utility methods to
                  convert from other common forms to &lt;tt&gt;Callable&lt;/tt&gt; classes.                
                <see>
                    Executor                    
                </see>
                <since>
                    1.5                    
                </since>
                <author>
                    Doug Lea                    
                </author>
                <param>
                    <V>
                       the result type of method <tt>call</tt>                    
                </param>
            </javadoc>
            <method name="call" type="V" line="58"/>
            <javadoc line="58">
                Computes a result, or throws an exception if unable to do so.                
                <return>
                    computed result                    
                </return>
                <throws>
                    Exception if unable to compute a result                    
                </throws>
            </javadoc>
        </interface>
    </source>