<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.util.concurrent">
        <interface name="RejectedExecutionHandler">
            <javadoc line="38">
                A handler for tasks that cannot be executed by a {@link ThreadPoolExecutor}.                
                <since>
                    1.5                    
                </since>
                <author>
                    Doug Lea                    
                </author>
            </javadoc>
            <method name="rejectedExecution" type="void" line="46"/>
            <javadoc line="46">
                Method that may be invoked by a {@link ThreadPoolExecutor} when{@link ThreadPoolExecutor#execute execute} cannot accept a
                  task.  This may occur when no more threads or queue slots are
                  available because their bounds would be exceeded, or upon
                  shutdown of the Executor.
                  &lt;p&gt;In the absence of other alternatives, the method may throw
                  an unchecked {@link RejectedExecutionException}, which will be
                  propagated to the caller of {@code execute}.                
                <param>
                    r the runnable task requested to be executed                    
                </param>
                <param>
                    executor the executor attempting to execute this task                    
                </param>
                <throws>
                    RejectedExecutionException if there is no remedy                    
                </throws>
            </javadoc>
        </interface>
    </source>