<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.util.concurrent">
        <class name="ExecutionException" line="38">
            <extends class="Exception"/>
            <javadoc line="38">
                Exception thrown when attempting to retrieve the result of a task
                  that aborted by throwing an exception. This exception can be
                  inspected using the {@link #getCause()} method.                
                <see>
                    Future                    
                </see>
                <since>
                    1.5                    
                </since>
                <author>
                    Doug Lea                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="48"/>
            <javadoc line="50">
                Constructs an &lt;tt&gt;ExecutionException&lt;/tt&gt; with no detail message.
                  The cause is not initialized, and may subsequently be
                  initialized by a call to {@link #initCause(Throwable) initCause}.                
            </javadoc>
            <method name="ExecutionException" type="constructor" line="55"/>
            <javadoc line="57">
                Constructs an &lt;tt&gt;ExecutionException&lt;/tt&gt; with the specified detail
                  message. The cause is not initialized, and may subsequently be
                  initialized by a call to {@link #initCause(Throwable) initCause}.                
                <param>
                    message the detail message                    
                </param>
            </javadoc>
            <method name="ExecutionException" type="constructor" line="64">
                <params>
                    <param name="message" type="String"/>
                </params>
            </method>
            <javadoc line="68">
                Constructs an &lt;tt&gt;ExecutionException&lt;/tt&gt; with the specified detail
                  message and cause.                
                <param>
                    message the detail message                    
                </param>
                <param>
                    cause the cause (which is saved for later retrieval by the{@link #getCause()} method)                    
                </param>
            </javadoc>
            <method name="ExecutionException" type="constructor" line="76">
                <params>
                    <param name="message" type="String"/>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
            <javadoc line="80">
                Constructs an &lt;tt&gt;ExecutionException&lt;/tt&gt; with the specified cause.
                  The detail message is set to:
                  &lt;pre&gt;
                  (cause == null ? null : cause.toString())&lt;/pre&gt;
                  (which typically contains the class and detail message of
                  &lt;tt&gt;cause&lt;/tt&gt;).                
                <param>
                    cause the cause (which is saved for later retrieval by the{@link #getCause()} method)                    
                </param>
            </javadoc>
            <method name="ExecutionException" type="constructor" line="91">
                <params>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
        </class>
    </source>