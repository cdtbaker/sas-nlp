<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.util.concurrent">
        <class name="RejectedExecutionException" line="2">
            <extends class="RuntimeException"/>
            <javadoc line="2">
                Exception thrown by an {@link Executor} when a task cannot be
                  accepted for execution.                
                <since>
                    1.5                    
                </since>
                <author>
                    Doug Lea                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="9"/>
            <javadoc line="10">
                Constructs a &lt;tt&gt;RejectedExecutionException&lt;/tt&gt; with no detail message.
                  The cause is not initialized, and may subsequently be
                  initialized by a call to {@link #initCause(Throwable) initCause}.                
            </javadoc>
            <method name="RejectedExecutionException" type="constructor" line="15"/>
            <javadoc line="17">
                Constructs a &lt;tt&gt;RejectedExecutionException&lt;/tt&gt; with the
                  specified detail message. The cause is not initialized, and may
                  subsequently be initialized by a call to {@link #initCause(Throwable) initCause}.                
                <param>
                    message the detail message                    
                </param>
            </javadoc>
            <method name="RejectedExecutionException" type="constructor" line="23">
                <params>
                    <param name="message" type="String"/>
                </params>
            </method>
            <javadoc line="26">
                Constructs a &lt;tt&gt;RejectedExecutionException&lt;/tt&gt; with the
                  specified detail message and cause.                
                <param>
                    message the detail message                    
                </param>
                <param>
                    cause the cause (which is saved for later retrieval by the{@link #getCause()} method)                    
                </param>
            </javadoc>
            <method name="RejectedExecutionException" type="constructor" line="32">
                <params>
                    <param name="message" type="String"/>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
            <javadoc line="35">
                Constructs a &lt;tt&gt;RejectedExecutionException&lt;/tt&gt; with the
                  specified cause.  The detail message is set to: &lt;pre&gt; (cause ==
                  null ? null : cause.toString())&lt;/pre&gt; (which typically contains
                  the class and detail message of &lt;tt&gt;cause&lt;/tt&gt;).                
                <param>
                    cause the cause (which is saved for later retrieval by the{@link #getCause()} method)                    
                </param>
            </javadoc>
            <method name="RejectedExecutionException" type="constructor" line="42">
                <params>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
        </class>
    </source>