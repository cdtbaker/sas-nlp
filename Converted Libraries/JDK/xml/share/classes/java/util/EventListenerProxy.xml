<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.util">
        <class name="EventListenerProxy" line="28">
            <type_params>
                <type_param name="T"/>
            </type_params>
            <implements interface="EventListener"/>
            <javadoc line="28">
                An abstract wrapper class for an {@code EventListener} class
                  which associates a set of additional parameters with the listener.
                  Subclasses must provide the storage and accessor methods
                  for the additional arguments or parameters.
                  &lt;p&gt;
                  For example, a bean which supports named properties
                  would have a two argument method signature for adding
                  a {@code PropertyChangeListener} for a property:
                  &lt;pre&gt;
                  public void addPropertyChangeListener(String propertyName,
                  PropertyChangeListener listener)
                  &lt;/pre&gt;
                  If the bean also implemented the zero argument get listener method:
                  &lt;pre&gt;
                  public PropertyChangeListener[] getPropertyChangeListeners()
                  &lt;/pre&gt;
                  then the array may contain inner {@code PropertyChangeListeners}which are also {@code PropertyChangeListenerProxy} objects.
                  &lt;p&gt;
                  If the calling method is interested in retrieving the named property
                  then it would have to test the element to see if it is a proxy class.                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="listener" type="T" line="56"/>
            <javadoc line="58">
                Creates a proxy for the specified listener.                
                <param>
                    listener  the listener object                    
                </param>
            </javadoc>
            <method name="EventListenerProxy" type="constructor" line="63">
                <params>
                    <param name="listener" type="T"/>
                </params>
            </method>
            <javadoc line="67">
                Returns the listener associated with the proxy.                
                <return>
                    the listener associated with the proxy                    
                </return>
            </javadoc>
            <method name="getListener" type="T" line="72"/>
        </class>
    </source>