<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.util.spi">
        <import package="java.util.Locale"/>
        <class name="LocaleNameProvider" line="3">
            <extends class="LocaleServiceProvider"/>
            <javadoc line="3">
                An abstract class for service providers that
                  provide localized names for the{@link java.util.Locale Locale} class.                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <javadoc line="9">
                Sole constructor.  (For invocation by subclass constructors, typically
                  implicit.)                
            </javadoc>
            <method name="LocaleNameProvider" type="constructor" line="13"/>
            <method name="getDisplayLanguage" type="String" line="15"/>
            <javadoc line="15">
                Returns a localized name for the given &lt;a href=&quot;http://www.rfc-editor.org/rfc/bcp/bcp47.txt&quot;&gt;
                  IETF BCP47&lt;/a&gt; language code and the given locale that is appropriate for
                  display to the user.
                  For example, if &lt;code&gt;languageCode&lt;/code&gt; is &quot;fr&quot; and &lt;code&gt;locale&lt;/code&gt;
                  is en_US, getDisplayLanguage() will return &quot;French&quot;; if &lt;code&gt;languageCode&lt;/code&gt;
                  is &quot;en&quot; and &lt;code&gt;locale&lt;/code&gt; is fr_FR, getDisplayLanguage() will return &quot;anglais&quot;.
                  If the name returned cannot be localized according to &lt;code&gt;locale&lt;/code&gt;,
                  (say, the provider does not have a Japanese name for Croatian),
                  this method returns null.                
                <param>
                    languageCode the language code string in the form of two to eight
                      lower-case letters between 'a' (U+0061) and 'z' (U+007A)                    
                </param>
                <param>
                    locale the desired locale                    
                </param>
                <return>
                    the name of the given language code for the specified locale, or null if it's not
                      available.                    
                </return>
                <exception>
                    NullPointerException if <code>languageCode</code> or <code>locale</code> is null                    
                </exception>
                <exception>
                    IllegalArgumentException if <code>languageCode</code> is not in the form of
                      two or three lower-case letters, or <code>locale</code> isn't
                      one of the locales returned from{@link java.util.spi.LocaleServiceProvider#getAvailableLocales()getAvailableLocales()}.                    
                </exception>
                <see>
                    java.util.Locale#getDisplayLanguage(java.util.Locale)                    
                </see>
            </javadoc>
            <javadoc line="37">
                Returns a localized name for the given &lt;a href=&quot;http://www.rfc-editor.org/rfc/bcp/bcp47.txt&quot;&gt;
                  IETF BCP47&lt;/a&gt; script code and the given locale that is appropriate for
                  display to the user.
                  For example, if &lt;code&gt;scriptCode&lt;/code&gt; is &quot;Latn&quot; and &lt;code&gt;locale&lt;/code&gt;
                  is en_US, getDisplayScript() will return &quot;Latin&quot;; if &lt;code&gt;scriptCode&lt;/code&gt;
                  is &quot;Cyrl&quot; and &lt;code&gt;locale&lt;/code&gt; is fr_FR, getDisplayScript() will return &quot;cyrillique&quot;.
                  If the name returned cannot be localized according to &lt;code&gt;locale&lt;/code&gt;,
                  (say, the provider does not have a Japanese name for Cyrillic),
                  this method returns null. The default implementation returns null.                
                <param>
                    scriptCode the four letter script code string in the form of title-case
                      letters (the first letter is upper-case character between 'A' (U+0041) and
                      'Z' (U+005A) followed by three lower-case character between 'a' (U+0061)
                      and 'z' (U+007A)).                    
                </param>
                <param>
                    locale the desired locale                    
                </param>
                <return>
                    the name of the given script code for the specified locale, or null if it's not
                      available.                    
                </return>
                <exception>
                    NullPointerException if <code>scriptCode</code> or <code>locale</code> is null                    
                </exception>
                <exception>
                    IllegalArgumentException if <code>scriptCode</code> is not in the form of
                      four title case letters, or <code>locale</code> isn't
                      one of the locales returned from{@link java.util.spi.LocaleServiceProvider#getAvailableLocales()getAvailableLocales()}.                    
                </exception>
                <see>
                    java.util.Locale#getDisplayScript(java.util.Locale)                    
                </see>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="getDisplayScript" type="String" line="61">
                <params>
                    <param name="scriptCode" type="String"/>
                    <param name="locale" type="Locale"/>
                </params>
            </method>
            <method name="getDisplayCountry" type="String" line="64"/>
            <javadoc line="64">
                Returns a localized name for the given &lt;a href=&quot;http://www.rfc-editor.org/rfc/bcp/bcp47.txt&quot;&gt;
                  IETF BCP47&lt;/a&gt; region code (either ISO 3166 country code or UN M.49 area
                  codes) and the given locale that is appropriate for display to the user.
                  For example, if &lt;code&gt;countryCode&lt;/code&gt; is &quot;FR&quot; and &lt;code&gt;locale&lt;/code&gt;
                  is en_US, getDisplayCountry() will return &quot;France&quot;; if &lt;code&gt;countryCode&lt;/code&gt;
                  is &quot;US&quot; and &lt;code&gt;locale&lt;/code&gt; is fr_FR, getDisplayCountry() will return &quot;Etats-Unis&quot;.
                  If the name returned cannot be localized according to &lt;code&gt;locale&lt;/code&gt;,
                  (say, the provider does not have a Japanese name for Croatia),
                  this method returns null.                
                <param>
                    countryCode the country(region) code string in the form of two
                      upper-case letters between 'A' (U+0041) and 'Z' (U+005A) or the UN M.49 area code
                      in the form of three digit letters between '0' (U+0030) and '9' (U+0039).                    
                </param>
                <param>
                    locale the desired locale                    
                </param>
                <return>
                    the name of the given country code for the specified locale, or null if it's not
                      available.                    
                </return>
                <exception>
                    NullPointerException if <code>countryCode</code> or <code>locale</code> is null                    
                </exception>
                <exception>
                    IllegalArgumentException if <code>countryCode</code> is not in the form of
                      two upper-case letters or three digit letters, or <code>locale</code> isn't
                      one of the locales returned from{@link java.util.spi.LocaleServiceProvider#getAvailableLocales()getAvailableLocales()}.                    
                </exception>
                <see>
                    java.util.Locale#getDisplayCountry(java.util.Locale)                    
                </see>
            </javadoc>
            <method name="getDisplayVariant" type="String" line="87"/>
            <javadoc line="87">
                Returns a localized name for the given variant code and the given locale that
                  is appropriate for display to the user.
                  If the name returned cannot be localized according to &lt;code&gt;locale&lt;/code&gt;,
                  this method returns null.                
                <param>
                    variant the variant string                    
                </param>
                <param>
                    locale the desired locale                    
                </param>
                <return>
                    the name of the given variant string for the specified locale, or null if it's not
                      available.                    
                </return>
                <exception>
                    NullPointerException if <code>variant</code> or <code>locale</code> is null                    
                </exception>
                <exception>
                    IllegalArgumentException if <code>locale</code> isn't
                      one of the locales returned from{@link java.util.spi.LocaleServiceProvider#getAvailableLocales()getAvailableLocales()}.                    
                </exception>
                <see>
                    java.util.Locale#getDisplayVariant(java.util.Locale)                    
                </see>
            </javadoc>
        </class>
    </source>