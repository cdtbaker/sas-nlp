<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.util.spi">
        <import package="java.util.Locale"/>
        <class name="TimeZoneNameProvider" line="30">
            <extends class="LocaleServiceProvider"/>
            <javadoc line="30">
                An abstract class for service providers that
                  provide localized time zone names for the{@link java.util.TimeZone TimeZone} class.
                  The localized time zone names available from the implementations of
                  this class are also the source for the{@link java.text.DateFormatSymbols#getZoneStrings()DateFormatSymbols.getZoneStrings()} method.                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <javadoc line="43">
                Sole constructor.  (For invocation by subclass constructors, typically
                  implicit.)                
            </javadoc>
            <method name="TimeZoneNameProvider" type="constructor" line="47"/>
            <method name="getDisplayName" type="String" line="50"/>
            <javadoc line="50">
                Returns a name for the given time zone ID that&apos;s suitable for
                  presentation to the user in the specified locale. The given time
                  zone ID is &quot;GMT&quot; or one of the names defined using &quot;Zone&quot; entries
                  in the &quot;tz database&quot;, a public domain time zone database at
                  &lt;a href=&quot;ftp://elsie.nci.nih.gov/pub/&quot;&gt;ftp://elsie.nci.nih.gov/pub/&lt;/a&gt;.
                  The data of this database is contained in a file whose name starts with
                  &quot;tzdata&quot;, and the specification of the data format is part of the zic.8
                  man page, which is contained in a file whose name starts with &quot;tzcode&quot;.
                  &lt;p&gt;
                  If &lt;code&gt;daylight&lt;/code&gt; is true, the method should return a name
                  appropriate for daylight saving time even if the specified time zone
                  has not observed daylight saving time in the past.                
                <param>
                    ID a time zone ID string                    
                </param>
                <param>
                    daylight if true, return the daylight saving name.                    
                </param>
                <param>
                    style either {@link java.util.TimeZone#LONG TimeZone.LONG} or{@link java.util.TimeZone#SHORT TimeZone.SHORT}                    
                </param>
                <param>
                    locale the desired locale                    
                </param>
                <return>
                    the human-readable name of the given time zone in the
                      given locale, or null if it's not available.                    
                </return>
                <exception>
                    IllegalArgumentException if <code>style</code> is invalid,
                      or <code>locale</code> isn't one of the locales returned from{@link java.util.spi.LocaleServiceProvider#getAvailableLocales()getAvailableLocales()}.                    
                </exception>
                <exception>
                    NullPointerException if <code>ID</code> or <code>locale</code>
                      is null                    
                </exception>
                <see>
                    java.util.TimeZone#getDisplayName(boolean,int,java.util.Locale)                    
                </see>
            </javadoc>
        </class>
    </source>