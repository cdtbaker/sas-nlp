<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.util">
        <interface name="Observer">
            <javadoc line="27">
                A class can implement the &lt;code&gt;Observer&lt;/code&gt; interface when it
                  wants to be informed of changes in observable objects.                
                <author>
                    Chris Warth                    
                </author>
                <see>
                    java.util.Observable                    
                </see>
                <since>
                    JDK1.0                    
                </since>
            </javadoc>
            <method name="update" type="void" line="36"/>
            <javadoc line="36">
                This method is called whenever the observed object is changed. An
                  application calls an &lt;tt&gt;Observable&lt;/tt&gt; object&apos;s
                  &lt;code&gt;notifyObservers&lt;/code&gt; method to have all the object&apos;s
                  observers notified of the change.                
                <param>
                    o     the observable object.                    
                </param>
                <param>
                    arg   an argument passed to the <code>notifyObservers</code>
                      method.                    
                </param>
            </javadoc>
        </interface>
    </source>