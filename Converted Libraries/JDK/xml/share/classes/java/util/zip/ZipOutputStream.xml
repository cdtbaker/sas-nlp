<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.util.zip">
        <import package="java.io.OutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.nio.charset.Charset"/>
        <import package="java.nio.charset.StandardCharsets"/>
        <import package="java.util.Vector"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.zip.ZipConstants64"/>
        <class name="ZipOutputStream" line="36">
            <extends class="DeflaterOutputStream"/>
            <comment line="366">
                Writes local file (LOC) header for specified entry.                
            </comment>
            <comment line="424">
                Writes extra data descriptor (EXT) for specified entry.                
            </comment>
            <comment line="439">
                Write central directory (CEN) header for specified entry.
                 REMIND: add support for file attributes                
            </comment>
            <comment line="521">
                Writes end of central directory (END) header.                
            </comment>
            <comment line="576">
                Writes a 16-bit short to the output stream in little-endian byte order.                
            </comment>
            <comment line="586">
                Writes a 32-bit int to the output stream in little-endian byte order.                
            </comment>
            <comment line="598">
                Writes a 64-bit int to the output stream in little-endian byte order.                
            </comment>
            <comment line="614">
                Writes an array of bytes to the output stream.                
            </comment>
            <implements interface="ZipConstants"/>
            <javadoc line="36">
                This class implements an output stream filter for writing files in the
                  ZIP file format. Includes support for both compressed and uncompressed
                  entries.                
                <author>
                    David Connelly                    
                </author>
            </javadoc>
            <class name="XEntry" line="46">
                <declaration name="entry" type="ZipEntry" line="47"/>
                <declaration name="offset" type="long" line="48"/>
                <method name="XEntry" type="constructor" line="49">
                    <params>
                        <param name="entry" type="ZipEntry"/>
                        <param name="offset" type="long"/>
                    </params>
                </method>
            </class>
            <declaration name="current" type="XEntry" line="55"/>
            <declaration name="xentries" type="Vector&lt;XEntry&gt;" line="56"/>
            <declaration name="names" type="HashSet&lt;String&gt;" line="57"/>
            <declaration name="crc" type="CRC32" line="58"/>
            <declaration name="written" type="long" line="59"/>
            <declaration name="locoff" type="long" line="60"/>
            <declaration name="comment" type="byte[]" line="61"/>
            <declaration name="method" type="int" line="62"/>
            <declaration name="finished" type="boolean" line="63"/>
            <declaration name="closed" type="boolean" line="65"/>
            <declaration name="zc" type="ZipCoder" line="67"/>
            <method name="version" type="int" line="69">
                <params>
                    <param name="e" type="ZipEntry"/>
                </params>
            </method>
            <javadoc line="77">
                Checks to make sure that this stream has not been closed.                
            </javadoc>
            <method name="ensureOpen" type="void" line="80">
                <scope line="81"/>
            </method>
            <declaration name="STORED" type="int" line="85"/>
            <javadoc line="85">
                Compression method for uncompressed (STORED) entries.                
            </javadoc>
            <declaration name="DEFLATED" type="int" line="90"/>
            <javadoc line="90">
                Compression method for compressed (DEFLATED) entries.                
            </javadoc>
            <javadoc line="95">
                Creates a new ZIP output stream.
                  &lt;p&gt;The UTF-8 {@link java.nio.charset.Charset charset} is used
                  to encode the entry names and comments.                
                <param>
                    out the actual output stream                    
                </param>
            </javadoc>
            <method name="ZipOutputStream" type="constructor" line="103">
                <params>
                    <param name="out" type="OutputStream"/>
                </params>
            </method>
            <javadoc line="107">
                Creates a new ZIP output stream.                
                <param>
                    out the actual output stream                    
                </param>
                <param>
                    charset the {@linkplain java.nio.charset.Charset charset}to be used to encode the entry names and comments                    
                </param>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="ZipOutputStream" type="constructor" line="117">
                <params>
                    <param name="out" type="OutputStream"/>
                    <param name="charset" type="Charset"/>
                </params>
            </method>
            <javadoc line="125">
                Sets the ZIP file comment.                
                <param>
                    comment the comment string                    
                </param>
                <exception>
                    IllegalArgumentException if the length of the specified
                      ZIP file comment is greater than 0xFFFF bytes                    
                </exception>
            </javadoc>
            <method name="setComment" type="void" line="131">
                <params>
                    <param name="comment" type="String"/>
                </params>
                <scope line="132"/>
            </method>
            <javadoc line="139">
                Sets the default compression method for subsequent entries. This
                  default will be used whenever the compression method is not specified
                  for an individual ZIP file entry, and is initially set to DEFLATED.                
                <param>
                    method the default compression method                    
                </param>
                <exception>
                    IllegalArgumentException if the specified compression method
                      is invalid                    
                </exception>
            </javadoc>
            <method name="setMethod" type="void" line="147">
                <params>
                    <param name="method" type="int"/>
                </params>
                <scope line="148"/>
            </method>
            <javadoc line="154">
                Sets the compression level for subsequent entries which are DEFLATED.
                  The default setting is DEFAULT_COMPRESSION.                
                <param>
                    level the compression level (0-9)                    
                </param>
                <exception>
                    IllegalArgumentException if the compression level is invalid                    
                </exception>
            </javadoc>
            <method name="setLevel" type="void" line="160">
                <params>
                    <param name="level" type="int"/>
                </params>
            </method>
            <javadoc line="164">
                Begins writing a new ZIP file entry and positions the stream to the
                  start of the entry data. Closes the current entry if still active.
                  The default compression method will be used if no compression method
                  was specified for the entry, and the current time will be used if
                  the entry has no set modification time.                
                <param>
                    e the ZIP entry to be written                    
                </param>
                <exception>
                    ZipException if a ZIP format error has occurred                    
                </exception>
                <exception>
                    IOException if an I/O error has occurred                    
                </exception>
            </javadoc>
            <method name="putNextEntry" type="void" line="174">
                <params>
                    <param name="e" type="ZipEntry"/>
                </params>
                <comment line="178">
                    close previous entry                    
                </comment>
                <comment line="184">
                    use default method                    
                </comment>
                <comment line="186">
                    store size, compressed size, and crc-32 in LOC header                    
                </comment>
                <comment line="190">
                    store size, compressed size, and crc-32 in data descriptor
                     immediately following the compressed entry data                    
                </comment>
                <comment line="197">
                    compressed size, uncompressed size, and crc-32 must all be
                     set for entries using STORED compression method                    
                </comment>
                <scope line="176"/>
                <scope line="179"/>
                <scope line="182"/>
                <scope line="198"/>
                <scope line="200"/>
                <scope line="202"/>
                <scope line="206"/>
                <scope line="214"/>
            </method>
            <javadoc line="224">
                Closes the current ZIP entry and positions the stream for writing
                  the next entry.                
                <exception>
                    ZipException if a ZIP format error has occurred                    
                </exception>
                <exception>
                    IOException if an I/O error has occurred                    
                </exception>
            </javadoc>
            <method name="closeEntry" type="void" line="230">
                <comment line="242">
                    verify size, compressed size, and crc-32 settings                    
                </comment>
                <comment line="269">
                    we already know that both e.size and e.csize are the same                    
                </comment>
                <scope line="232">
                    <declaration name="e" type="ZipEntry" line="233"/>
                    <scope line="237"/>
                    <scope line="240">
                        <scope line="242"/>
                        <scope line="247"/>
                        <scope line="252"/>
                    </scope>
                    <scope line="258"/>
                    <scope line="269"/>
                    <scope line="274"/>
                </scope>
            </method>
            <javadoc line="289">
                Writes an array of bytes to the current ZIP entry data. This method
                  will block until all the bytes are written.                
                <param>
                    b the data to be written                    
                </param>
                <param>
                    off the start offset in the data                    
                </param>
                <param>
                    len the number of bytes that are written                    
                </param>
                <exception>
                    ZipException if a ZIP file error has occurred                    
                </exception>
                <exception>
                    IOException if an I/O error has occurred                    
                </exception>
            </javadoc>
            <method name="write" type="void" line="300">
                <params>
                    <param name="b" type="byte[]"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="302"/>
                <scope line="304"/>
                <scope line="308"/>
                <declaration name="entry" type="ZipEntry" line="311"/>
                <scope line="318"/>
            </method>
            <javadoc line="330">
                Finishes writing the contents of the ZIP output stream without closing
                  the underlying stream. Use this method when applying multiple filters
                  in succession to the same output stream.                
                <exception>
                    ZipException if a ZIP file error has occurred                    
                </exception>
                <exception>
                    IOException if an I/O exception has occurred                    
                </exception>
            </javadoc>
            <method name="finish" type="void" line="337">
                <comment line="346">
                    write central directory                    
                </comment>
                <scope line="339"/>
                <scope line="342"/>
                <declaration name="off" type="long" line="346"/>
            </method>
            <javadoc line="353">
                Closes the ZIP output stream as well as the stream being filtered.                
                <exception>
                    ZipException if a ZIP file error has occurred                    
                </exception>
                <exception>
                    IOException if an I/O error has occurred                    
                </exception>
            </javadoc>
            <method name="close" type="void" line="358">
                <scope line="359"/>
            </method>
            <method name="writeLOC" type="void" line="368">
                <params>
                    <param name="xentry" type="XEntry"/>
                </params>
                <comment line="375">
                    LOC header signature                    
                </comment>
                <comment line="378">
                    version needed to extract                    
                </comment>
                <comment line="379">
                    general purpose bit flag                    
                </comment>
                <comment line="380">
                    compression method                    
                </comment>
                <comment line="381">
                    last modification time                    
                </comment>
                <comment line="383">
                    store size, uncompressed size, and crc-32 in data descriptor
                     immediately following compressed entry data                    
                </comment>
                <comment line="391">
                    ver 4.5 for zip64                    
                </comment>
                <comment line="393">
                    version needed to extract                    
                </comment>
                <comment line="395">
                    general purpose bit flag                    
                </comment>
                <comment line="396">
                    compression method                    
                </comment>
                <comment line="397">
                    last modification time                    
                </comment>
                <comment line="398">
                    crc-32                    
                </comment>
                <comment line="402">
                    headid(2) + size(2) + size(8) + csize(8)                    
                </comment>
                <comment line="404">
                    compressed size                    
                </comment>
                <comment line="405">
                    uncompressed size                    
                </comment>
                <declaration name="e" type="ZipEntry" line="369"/>
                <declaration name="flag" type="int" line="370"/>
                <declaration name="elen" type="int" line="371"/>
                <declaration name="hasZip64" type="boolean" line="372"/>
                <scope line="376"/>
                <scope line="387">
                    <scope line="388"/>
                    <scope line="391"/>
                    <scope line="398"/>
                    <scope line="402"/>
                </scope>
                <declaration name="nameBytes" type="byte[]" line="407"/>
                <scope line="411"/>
                <scope line="417"/>
            </method>
            <method name="writeEXT" type="void" line="426">
                <params>
                    <param name="e" type="ZipEntry"/>
                </params>
                <comment line="428">
                    EXT header signature                    
                </comment>
                <comment line="429">
                    crc-32                    
                </comment>
                <comment line="434">
                    compressed size                    
                </comment>
                <comment line="435">
                    uncompressed size                    
                </comment>
                <scope line="429"/>
                <scope line="432"/>
            </method>
            <method name="writeCEN" type="void" line="442">
                <params>
                    <param name="xentry" type="XEntry"/>
                </params>
                <comment line="455">
                    csize(8)                    
                </comment>
                <comment line="459">
                    size(8)                    
                </comment>
                <comment line="465">
                    offset(8)                    
                </comment>
                <comment line="468">
                    CEN header signature                    
                </comment>
                <comment line="470">
                    ver 4.5 for zip64                    
                </comment>
                <comment line="473">
                    version made by                    
                </comment>
                <comment line="474">
                    version needed to extract                    
                </comment>
                <comment line="476">
                    general purpose bit flag                    
                </comment>
                <comment line="477">
                    compression method                    
                </comment>
                <comment line="478">
                    last modification time                    
                </comment>
                <comment line="479">
                    crc-32                    
                </comment>
                <comment line="480">
                    compressed size                    
                </comment>
                <comment line="481">
                    uncompressed size                    
                </comment>
                <comment line="485">
                    + headid(2) + datasize(2)                    
                </comment>
                <comment line="498">
                    starting disk number                    
                </comment>
                <comment line="499">
                    internal file attributes (unused)                    
                </comment>
                <comment line="500">
                    external file attributes (unused)                    
                </comment>
                <comment line="501">
                    relative offset of local header                    
                </comment>
                <comment line="504">
                    Zip64 extra                    
                </comment>
                <declaration name="e" type="ZipEntry" line="443"/>
                <declaration name="flag" type="int" line="444"/>
                <declaration name="version" type="int" line="445"/>
                <declaration name="csize" type="long" line="447"/>
                <declaration name="size" type="long" line="448"/>
                <declaration name="offset" type="long" line="449"/>
                <declaration name="e64len" type="int" line="450"/>
                <declaration name="hasZip64" type="boolean" line="451"/>
                <scope line="452"/>
                <scope line="457"/>
                <scope line="462"/>
                <scope line="468"/>
                <scope line="471"/>
                <declaration name="nameBytes" type="byte[]" line="481"/>
                <scope line="483"/>
                <scope line="486"/>
                <declaration name="commentBytes" type="byte[]" line="489"/>
                <scope line="490"/>
                <scope line="493"/>
                <scope line="502"/>
                <scope line="512"/>
                <scope line="515"/>
            </method>
            <method name="writeEND" type="void" line="523">
                <params>
                    <param name="off" type="long"/>
                    <param name="len" type="long"/>
                </params>
                <comment line="543">
                    zip64 end of central directory record                    
                </comment>
                <comment line="544">
                    zip64 END record signature                    
                </comment>
                <comment line="545">
                    size of zip64 end                    
                </comment>
                <comment line="546">
                    version made by                    
                </comment>
                <comment line="547">
                    version needed to extract                    
                </comment>
                <comment line="548">
                    number of this disk                    
                </comment>
                <comment line="549">
                    central directory start disk                    
                </comment>
                <comment line="550">
                    number of directory entires on disk                    
                </comment>
                <comment line="551">
                    number of directory entires                    
                </comment>
                <comment line="552">
                    length of central directory                    
                </comment>
                <comment line="553">
                    offset of central directory                    
                </comment>
                <comment line="555">
                    zip64 end of central directory locator                    
                </comment>
                <comment line="556">
                    zip64 END locator signature                    
                </comment>
                <comment line="557">
                    zip64 END start disk                    
                </comment>
                <comment line="558">
                    offset of zip64 END                    
                </comment>
                <comment line="559">
                    total number of disks (?)                    
                </comment>
                <comment line="561">
                    END record signature                    
                </comment>
                <comment line="562">
                    number of this disk                    
                </comment>
                <comment line="563">
                    central directory start disk                    
                </comment>
                <comment line="564">
                    number of directory entries on disk                    
                </comment>
                <comment line="565">
                    total number of directory entries                    
                </comment>
                <comment line="566">
                    length of central directory                    
                </comment>
                <comment line="567">
                    offset of central directory                    
                </comment>
                <comment line="568">
                    zip file comment                    
                </comment>
                <declaration name="hasZip64" type="boolean" line="524"/>
                <declaration name="xlen" type="long" line="525"/>
                <declaration name="xoff" type="long" line="526"/>
                <scope line="527"/>
                <scope line="531"/>
                <declaration name="count" type="int" line="535"/>
                <scope line="536"/>
                <scope line="540">
                    <declaration name="off64" type="long" line="541"/>
                </scope>
                <scope line="567"/>
                <scope line="570"/>
            </method>
            <method name="writeShort" type="void" line="578">
                <params>
                    <param name="v" type="int"/>
                </params>
                <declaration name="out" type="OutputStream" line="579"/>
            </method>
            <method name="writeInt" type="void" line="588">
                <params>
                    <param name="v" type="long"/>
                </params>
                <declaration name="out" type="OutputStream" line="589"/>
            </method>
            <method name="writeLong" type="void" line="600">
                <params>
                    <param name="v" type="long"/>
                </params>
                <declaration name="out" type="OutputStream" line="601"/>
            </method>
            <method name="writeBytes" type="void" line="616">
                <params>
                    <param name="b" type="byte[]"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
            </method>
        </class>
    </source>