<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt">
        <import package="java.awt.event"/>
        <import package="java.lang.reflect.Array"/>
        <import package="java.util.EventListener"/>
        <import package="java.io.Serializable"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.util.EventListener"/>
        <class name="AWTEventMulticaster" line="36">
            <comment line="917">
                Serialization support.                
            </comment>
            <comment line="951">
                Recursive method which returns a count of the number of listeners in
                 EventListener, handling the (common) case of l actually being an
                 AWTEventMulticaster.  Additionally, only listeners of type listenerType
                 are counted.  Method modified to fix bug 4513402.  -bchristi                
            </comment>
            <comment line="969">
                Recusive method which populates EventListener array a with EventListeners
                 from l.  l is usually an AWTEventMulticaster.  Bug 4513402 revealed that
                 if l differed in type from the element type of a, an ArrayStoreException
                 would occur.  Now l is only inserted into a if it&apos;s of the appropriate
                 type.  -bchristi                
            </comment>
            <implements interface="ComponentListener"/>
            <implements interface="ContainerListener"/>
            <implements interface="FocusListener"/>
            <implements interface="KeyListener"/>
            <implements interface="MouseListener"/>
            <implements interface="MouseMotionListener"/>
            <implements interface="WindowListener"/>
            <implements interface="WindowFocusListener"/>
            <implements interface="WindowStateListener"/>
            <implements interface="ActionListener"/>
            <implements interface="ItemListener"/>
            <implements interface="AdjustmentListener"/>
            <implements interface="TextListener"/>
            <implements interface="InputMethodListener"/>
            <implements interface="HierarchyListener"/>
            <implements interface="HierarchyBoundsListener"/>
            <implements interface="MouseWheelListener"/>
            <javadoc line="36">
                {@code AWTEventMulticaster} implements efficient and thread-safe multi-cast
                  event dispatching for the AWT events defined in the {@code java.awt.event}package.
                  &lt;p&gt;
                  The following example illustrates how to use this class:
                  &lt;pre&gt;&lt;code&gt;
                  public myComponent extends Component {
                  ActionListener actionListener = null;
                  public synchronized void addActionListener(ActionListener l) {
                  actionListener = AWTEventMulticaster.add(actionListener, l);
                  }
                  public synchronized void removeActionListener(ActionListener l) {
                  actionListener = AWTEventMulticaster.remove(actionListener, l);
                  }
                  public void processEvent(AWTEvent e) {
                  // when event occurs which causes &quot;action&quot; semantic
                  ActionListener listener = actionListener;
                  if (listener != null) {
                  listener.actionPerformed(new ActionEvent());
                  }
                  }
                  }
                  &lt;/code&gt;&lt;/pre&gt;
                  The important point to note is the first argument to the {@codeadd} and {@code remove} methods is the field maintaining the
                  listeners. In addition you must assign the result of the {@code add}and {@code remove} methods to the field maintaining the listeners.
                  &lt;p&gt;{@code AWTEventMulticaster} is implemented as a pair of {@codeEventListeners} that are set at construction time. {@codeAWTEventMulticaster} is immutable. The {@code add} and {@coderemove} methods do not alter {@code AWTEventMulticaster} in
                  anyway. If necessary, a new {@code AWTEventMulticaster} is
                  created. In this way it is safe to add and remove listeners during
                  the process of an event dispatching.  However, event listeners
                  added during the process of an event dispatch operation are not
                  notified of the event currently being dispatched.
                  &lt;p&gt;
                  All of the {@code add} methods allow {@code null} arguments. If the
                  first argument is {@code null}, the second argument is returned. If
                  the first argument is not {@code null} and the second argument is{@code null}, the first argument is returned. If both arguments are{@code non-null}, a new {@code AWTEventMulticaster} is created using
                  the two arguments and returned.
                  &lt;p&gt;
                  For the {@code remove} methods that take two arguments, the following is
                  returned:
                  &lt;ul&gt;
                  &lt;li&gt;{@code null}, if the first argument is {@code null}, or
                  the arguments are equal, by way of {@code ==}.
                  &lt;li&gt;the first argument, if the first argument is not an instance of{@code AWTEventMulticaster}.
                  &lt;li&gt;result of invoking {@code remove(EventListener)} on the
                  first argument, supplying the second argument to the{@code remove(EventListener)} method.
                  &lt;/ul&gt;
                  &lt;p&gt;Swing makes use of{@link javax.swing.event.EventListenerList EventListenerList} for
                  similar logic. Refer to it for details.                
                <see>
                    javax.swing.event.EventListenerList                    
                </see>
                <author>
                    John Rose                    
                </author>
                <author>
                    Amy Fowler                    
                </author>
                <since>
                    1.1                    
                </since>
            </javadoc>
            <declaration name="a" type="EventListener" line="113"/>
            <javadoc line="115">
                Creates an event multicaster instance which chains listener-a
                  with listener-b. Input parameters &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;
                  should not be &lt;code&gt;null&lt;/code&gt;, though implementations may vary in
                  choosing whether or not to throw &lt;code&gt;NullPointerException&lt;/code&gt;
                  in that case.                
                <param>
                    a listener-a                    
                </param>
                <param>
                    b listener-b                    
                </param>
            </javadoc>
            <method name="AWTEventMulticaster" type="constructor" line="124">
                <params>
                    <param name="a" type="EventListener"/>
                    <param name="b" type="EventListener"/>
                </params>
            </method>
            <javadoc line="128">
                Removes a listener from this multicaster.
                  &lt;p&gt;
                  The returned multicaster contains all the listeners in this
                  multicaster with the exception of all occurrences of {@code oldl}.
                  If the resulting multicaster contains only one regular listener
                  the regular listener may be returned.  If the resulting multicaster
                  is empty, then {@code null} may be returned instead.
                  &lt;p&gt;
                  No exception is thrown if {@code oldl} is {@code null}.                
                <param>
                    oldl the listener to be removed                    
                </param>
                <return>
                    resulting listener                    
                </return>
            </javadoc>
            <method name="remove" type="EventListener" line="142">
                <params>
                    <param name="oldl" type="EventListener"/>
                </params>
                <comment line="149">
                    it&apos;s not here                    
                </comment>
                <declaration name="a2" type="EventListener" line="145"/>
                <declaration name="b2" type="EventListener" line="146"/>
                <scope line="147"/>
            </method>
            <javadoc line="153">
                Handles the componentResized event by invoking the
                  componentResized methods on listener-a and listener-b.                
                <param>
                    e the component event                    
                </param>
            </javadoc>
            <method name="componentResized" type="void" line="158">
                <params>
                    <param name="e" type="ComponentEvent"/>
                </params>
            </method>
            <javadoc line="163">
                Handles the componentMoved event by invoking the
                  componentMoved methods on listener-a and listener-b.                
                <param>
                    e the component event                    
                </param>
            </javadoc>
            <method name="componentMoved" type="void" line="168">
                <params>
                    <param name="e" type="ComponentEvent"/>
                </params>
            </method>
            <javadoc line="173">
                Handles the componentShown event by invoking the
                  componentShown methods on listener-a and listener-b.                
                <param>
                    e the component event                    
                </param>
            </javadoc>
            <method name="componentShown" type="void" line="178">
                <params>
                    <param name="e" type="ComponentEvent"/>
                </params>
            </method>
            <javadoc line="183">
                Handles the componentHidden event by invoking the
                  componentHidden methods on listener-a and listener-b.                
                <param>
                    e the component event                    
                </param>
            </javadoc>
            <method name="componentHidden" type="void" line="188">
                <params>
                    <param name="e" type="ComponentEvent"/>
                </params>
            </method>
            <javadoc line="193">
                Handles the componentAdded container event by invoking the
                  componentAdded methods on listener-a and listener-b.                
                <param>
                    e the component event                    
                </param>
            </javadoc>
            <method name="componentAdded" type="void" line="198">
                <params>
                    <param name="e" type="ContainerEvent"/>
                </params>
            </method>
            <javadoc line="203">
                Handles the componentRemoved container event by invoking the
                  componentRemoved methods on listener-a and listener-b.                
                <param>
                    e the component event                    
                </param>
            </javadoc>
            <method name="componentRemoved" type="void" line="208">
                <params>
                    <param name="e" type="ContainerEvent"/>
                </params>
            </method>
            <javadoc line="213">
                Handles the focusGained event by invoking the
                  focusGained methods on listener-a and listener-b.                
                <param>
                    e the focus event                    
                </param>
            </javadoc>
            <method name="focusGained" type="void" line="218">
                <params>
                    <param name="e" type="FocusEvent"/>
                </params>
            </method>
            <javadoc line="223">
                Handles the focusLost event by invoking the
                  focusLost methods on listener-a and listener-b.                
                <param>
                    e the focus event                    
                </param>
            </javadoc>
            <method name="focusLost" type="void" line="228">
                <params>
                    <param name="e" type="FocusEvent"/>
                </params>
            </method>
            <javadoc line="233">
                Handles the keyTyped event by invoking the
                  keyTyped methods on listener-a and listener-b.                
                <param>
                    e the key event                    
                </param>
            </javadoc>
            <method name="keyTyped" type="void" line="238">
                <params>
                    <param name="e" type="KeyEvent"/>
                </params>
            </method>
            <javadoc line="243">
                Handles the keyPressed event by invoking the
                  keyPressed methods on listener-a and listener-b.                
                <param>
                    e the key event                    
                </param>
            </javadoc>
            <method name="keyPressed" type="void" line="248">
                <params>
                    <param name="e" type="KeyEvent"/>
                </params>
            </method>
            <javadoc line="253">
                Handles the keyReleased event by invoking the
                  keyReleased methods on listener-a and listener-b.                
                <param>
                    e the key event                    
                </param>
            </javadoc>
            <method name="keyReleased" type="void" line="258">
                <params>
                    <param name="e" type="KeyEvent"/>
                </params>
            </method>
            <javadoc line="263">
                Handles the mouseClicked event by invoking the
                  mouseClicked methods on listener-a and listener-b.                
                <param>
                    e the mouse event                    
                </param>
            </javadoc>
            <method name="mouseClicked" type="void" line="268">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <javadoc line="273">
                Handles the mousePressed event by invoking the
                  mousePressed methods on listener-a and listener-b.                
                <param>
                    e the mouse event                    
                </param>
            </javadoc>
            <method name="mousePressed" type="void" line="278">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <javadoc line="283">
                Handles the mouseReleased event by invoking the
                  mouseReleased methods on listener-a and listener-b.                
                <param>
                    e the mouse event                    
                </param>
            </javadoc>
            <method name="mouseReleased" type="void" line="288">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <javadoc line="293">
                Handles the mouseEntered event by invoking the
                  mouseEntered methods on listener-a and listener-b.                
                <param>
                    e the mouse event                    
                </param>
            </javadoc>
            <method name="mouseEntered" type="void" line="298">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <javadoc line="303">
                Handles the mouseExited event by invoking the
                  mouseExited methods on listener-a and listener-b.                
                <param>
                    e the mouse event                    
                </param>
            </javadoc>
            <method name="mouseExited" type="void" line="308">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <javadoc line="313">
                Handles the mouseDragged event by invoking the
                  mouseDragged methods on listener-a and listener-b.                
                <param>
                    e the mouse event                    
                </param>
            </javadoc>
            <method name="mouseDragged" type="void" line="318">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <javadoc line="323">
                Handles the mouseMoved event by invoking the
                  mouseMoved methods on listener-a and listener-b.                
                <param>
                    e the mouse event                    
                </param>
            </javadoc>
            <method name="mouseMoved" type="void" line="328">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <javadoc line="333">
                Handles the windowOpened event by invoking the
                  windowOpened methods on listener-a and listener-b.                
                <param>
                    e the window event                    
                </param>
            </javadoc>
            <method name="windowOpened" type="void" line="338">
                <params>
                    <param name="e" type="WindowEvent"/>
                </params>
            </method>
            <javadoc line="343">
                Handles the windowClosing event by invoking the
                  windowClosing methods on listener-a and listener-b.                
                <param>
                    e the window event                    
                </param>
            </javadoc>
            <method name="windowClosing" type="void" line="348">
                <params>
                    <param name="e" type="WindowEvent"/>
                </params>
            </method>
            <javadoc line="353">
                Handles the windowClosed event by invoking the
                  windowClosed methods on listener-a and listener-b.                
                <param>
                    e the window event                    
                </param>
            </javadoc>
            <method name="windowClosed" type="void" line="358">
                <params>
                    <param name="e" type="WindowEvent"/>
                </params>
            </method>
            <javadoc line="363">
                Handles the windowIconified event by invoking the
                  windowIconified methods on listener-a and listener-b.                
                <param>
                    e the window event                    
                </param>
            </javadoc>
            <method name="windowIconified" type="void" line="368">
                <params>
                    <param name="e" type="WindowEvent"/>
                </params>
            </method>
            <javadoc line="373">
                Handles the windowDeiconfied event by invoking the
                  windowDeiconified methods on listener-a and listener-b.                
                <param>
                    e the window event                    
                </param>
            </javadoc>
            <method name="windowDeiconified" type="void" line="378">
                <params>
                    <param name="e" type="WindowEvent"/>
                </params>
            </method>
            <javadoc line="383">
                Handles the windowActivated event by invoking the
                  windowActivated methods on listener-a and listener-b.                
                <param>
                    e the window event                    
                </param>
            </javadoc>
            <method name="windowActivated" type="void" line="388">
                <params>
                    <param name="e" type="WindowEvent"/>
                </params>
            </method>
            <javadoc line="393">
                Handles the windowDeactivated event by invoking the
                  windowDeactivated methods on listener-a and listener-b.                
                <param>
                    e the window event                    
                </param>
            </javadoc>
            <method name="windowDeactivated" type="void" line="398">
                <params>
                    <param name="e" type="WindowEvent"/>
                </params>
            </method>
            <javadoc line="403">
                Handles the windowStateChanged event by invoking the
                  windowStateChanged methods on listener-a and listener-b.                
                <param>
                    e the window event                    
                </param>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="windowStateChanged" type="void" line="409">
                <params>
                    <param name="e" type="WindowEvent"/>
                </params>
            </method>
            <javadoc line="415">
                Handles the windowGainedFocus event by invoking the windowGainedFocus
                  methods on listener-a and listener-b.                
                <param>
                    e the window event                    
                </param>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="windowGainedFocus" type="void" line="421">
                <params>
                    <param name="e" type="WindowEvent"/>
                </params>
            </method>
            <javadoc line="426">
                Handles the windowLostFocus event by invoking the windowLostFocus
                  methods on listener-a and listener-b.                
                <param>
                    e the window event                    
                </param>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="windowLostFocus" type="void" line="432">
                <params>
                    <param name="e" type="WindowEvent"/>
                </params>
            </method>
            <javadoc line="437">
                Handles the actionPerformed event by invoking the
                  actionPerformed methods on listener-a and listener-b.                
                <param>
                    e the action event                    
                </param>
            </javadoc>
            <method name="actionPerformed" type="void" line="442">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
            </method>
            <javadoc line="447">
                Handles the itemStateChanged event by invoking the
                  itemStateChanged methods on listener-a and listener-b.                
                <param>
                    e the item event                    
                </param>
            </javadoc>
            <method name="itemStateChanged" type="void" line="452">
                <params>
                    <param name="e" type="ItemEvent"/>
                </params>
            </method>
            <javadoc line="457">
                Handles the adjustmentValueChanged event by invoking the
                  adjustmentValueChanged methods on listener-a and listener-b.                
                <param>
                    e the adjustment event                    
                </param>
            </javadoc>
            <method name="adjustmentValueChanged" type="void" line="462">
                <params>
                    <param name="e" type="AdjustmentEvent"/>
                </params>
            </method>
            <method name="textValueChanged" type="void" line="466">
                <params>
                    <param name="e" type="TextEvent"/>
                </params>
            </method>
            <javadoc line="471">
                Handles the inputMethodTextChanged event by invoking the
                  inputMethodTextChanged methods on listener-a and listener-b.                
                <param>
                    e the item event                    
                </param>
            </javadoc>
            <method name="inputMethodTextChanged" type="void" line="476">
                <params>
                    <param name="e" type="InputMethodEvent"/>
                </params>
            </method>
            <javadoc line="481">
                Handles the caretPositionChanged event by invoking the
                  caretPositionChanged methods on listener-a and listener-b.                
                <param>
                    e the item event                    
                </param>
            </javadoc>
            <method name="caretPositionChanged" type="void" line="486">
                <params>
                    <param name="e" type="InputMethodEvent"/>
                </params>
            </method>
            <javadoc line="491">
                Handles the hierarchyChanged event by invoking the
                  hierarchyChanged methods on listener-a and listener-b.                
                <param>
                    e the item event                    
                </param>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="hierarchyChanged" type="void" line="497">
                <params>
                    <param name="e" type="HierarchyEvent"/>
                </params>
            </method>
            <javadoc line="502">
                Handles the ancestorMoved event by invoking the
                  ancestorMoved methods on listener-a and listener-b.                
                <param>
                    e the item event                    
                </param>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="ancestorMoved" type="void" line="508">
                <params>
                    <param name="e" type="HierarchyEvent"/>
                </params>
            </method>
            <javadoc line="513">
                Handles the ancestorResized event by invoking the
                  ancestorResized methods on listener-a and listener-b.                
                <param>
                    e the item event                    
                </param>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="ancestorResized" type="void" line="519">
                <params>
                    <param name="e" type="HierarchyEvent"/>
                </params>
            </method>
            <javadoc line="524">
                Handles the mouseWheelMoved event by invoking the
                  mouseWheelMoved methods on listener-a and listener-b.                
                <param>
                    e the mouse event                    
                </param>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="mouseWheelMoved" type="void" line="530">
                <params>
                    <param name="e" type="MouseWheelEvent"/>
                </params>
            </method>
            <javadoc line="535">
                Adds component-listener-a with component-listener-b and
                  returns the resulting multicast listener.                
                <param>
                    a component-listener-a                    
                </param>
                <param>
                    b component-listener-b                    
                </param>
            </javadoc>
            <method name="add" type="ComponentListener" line="541">
                <params>
                    <param name="a" type="ComponentListener"/>
                    <param name="b" type="ComponentListener"/>
                </params>
            </method>
            <javadoc line="545">
                Adds container-listener-a with container-listener-b and
                  returns the resulting multicast listener.                
                <param>
                    a container-listener-a                    
                </param>
                <param>
                    b container-listener-b                    
                </param>
            </javadoc>
            <method name="add" type="ContainerListener" line="551">
                <params>
                    <param name="a" type="ContainerListener"/>
                    <param name="b" type="ContainerListener"/>
                </params>
            </method>
            <javadoc line="555">
                Adds focus-listener-a with focus-listener-b and
                  returns the resulting multicast listener.                
                <param>
                    a focus-listener-a                    
                </param>
                <param>
                    b focus-listener-b                    
                </param>
            </javadoc>
            <method name="add" type="FocusListener" line="561">
                <params>
                    <param name="a" type="FocusListener"/>
                    <param name="b" type="FocusListener"/>
                </params>
            </method>
            <javadoc line="565">
                Adds key-listener-a with key-listener-b and
                  returns the resulting multicast listener.                
                <param>
                    a key-listener-a                    
                </param>
                <param>
                    b key-listener-b                    
                </param>
            </javadoc>
            <method name="add" type="KeyListener" line="571">
                <params>
                    <param name="a" type="KeyListener"/>
                    <param name="b" type="KeyListener"/>
                </params>
            </method>
            <javadoc line="575">
                Adds mouse-listener-a with mouse-listener-b and
                  returns the resulting multicast listener.                
                <param>
                    a mouse-listener-a                    
                </param>
                <param>
                    b mouse-listener-b                    
                </param>
            </javadoc>
            <method name="add" type="MouseListener" line="581">
                <params>
                    <param name="a" type="MouseListener"/>
                    <param name="b" type="MouseListener"/>
                </params>
            </method>
            <javadoc line="585">
                Adds mouse-motion-listener-a with mouse-motion-listener-b and
                  returns the resulting multicast listener.                
                <param>
                    a mouse-motion-listener-a                    
                </param>
                <param>
                    b mouse-motion-listener-b                    
                </param>
            </javadoc>
            <method name="add" type="MouseMotionListener" line="591">
                <params>
                    <param name="a" type="MouseMotionListener"/>
                    <param name="b" type="MouseMotionListener"/>
                </params>
            </method>
            <javadoc line="595">
                Adds window-listener-a with window-listener-b and
                  returns the resulting multicast listener.                
                <param>
                    a window-listener-a                    
                </param>
                <param>
                    b window-listener-b                    
                </param>
            </javadoc>
            <method name="add" type="WindowListener" line="601">
                <params>
                    <param name="a" type="WindowListener"/>
                    <param name="b" type="WindowListener"/>
                </params>
            </method>
            <javadoc line="605">
                Adds window-state-listener-a with window-state-listener-b
                  and returns the resulting multicast listener.                
                <param>
                    a window-state-listener-a                    
                </param>
                <param>
                    b window-state-listener-b                    
                </param>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="add" type="WindowStateListener" line="613">
                <params>
                    <param name="a" type="WindowStateListener"/>
                    <param name="b" type="WindowStateListener"/>
                </params>
            </method>
            <javadoc line="617">
                Adds window-focus-listener-a with window-focus-listener-b
                  and returns the resulting multicast listener.                
                <param>
                    a window-focus-listener-a                    
                </param>
                <param>
                    b window-focus-listener-b                    
                </param>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="add" type="WindowFocusListener" line="625">
                <params>
                    <param name="a" type="WindowFocusListener"/>
                    <param name="b" type="WindowFocusListener"/>
                </params>
            </method>
            <javadoc line="629">
                Adds action-listener-a with action-listener-b and
                  returns the resulting multicast listener.                
                <param>
                    a action-listener-a                    
                </param>
                <param>
                    b action-listener-b                    
                </param>
            </javadoc>
            <method name="add" type="ActionListener" line="635">
                <params>
                    <param name="a" type="ActionListener"/>
                    <param name="b" type="ActionListener"/>
                </params>
            </method>
            <javadoc line="639">
                Adds item-listener-a with item-listener-b and
                  returns the resulting multicast listener.                
                <param>
                    a item-listener-a                    
                </param>
                <param>
                    b item-listener-b                    
                </param>
            </javadoc>
            <method name="add" type="ItemListener" line="645">
                <params>
                    <param name="a" type="ItemListener"/>
                    <param name="b" type="ItemListener"/>
                </params>
            </method>
            <javadoc line="649">
                Adds adjustment-listener-a with adjustment-listener-b and
                  returns the resulting multicast listener.                
                <param>
                    a adjustment-listener-a                    
                </param>
                <param>
                    b adjustment-listener-b                    
                </param>
            </javadoc>
            <method name="add" type="AdjustmentListener" line="655">
                <params>
                    <param name="a" type="AdjustmentListener"/>
                    <param name="b" type="AdjustmentListener"/>
                </params>
            </method>
            <method name="add" type="TextListener" line="658">
                <params>
                    <param name="a" type="TextListener"/>
                    <param name="b" type="TextListener"/>
                </params>
            </method>
            <javadoc line="662">
                Adds input-method-listener-a with input-method-listener-b and
                  returns the resulting multicast listener.                
                <param>
                    a input-method-listener-a                    
                </param>
                <param>
                    b input-method-listener-b                    
                </param>
            </javadoc>
            <method name="add" type="InputMethodListener" line="668">
                <params>
                    <param name="a" type="InputMethodListener"/>
                    <param name="b" type="InputMethodListener"/>
                </params>
            </method>
            <javadoc line="672">
                Adds hierarchy-listener-a with hierarchy-listener-b and
                  returns the resulting multicast listener.                
                <param>
                    a hierarchy-listener-a                    
                </param>
                <param>
                    b hierarchy-listener-b                    
                </param>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="add" type="HierarchyListener" line="679">
                <params>
                    <param name="a" type="HierarchyListener"/>
                    <param name="b" type="HierarchyListener"/>
                </params>
            </method>
            <javadoc line="683">
                Adds hierarchy-bounds-listener-a with hierarchy-bounds-listener-b and
                  returns the resulting multicast listener.                
                <param>
                    a hierarchy-bounds-listener-a                    
                </param>
                <param>
                    b hierarchy-bounds-listener-b                    
                </param>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="add" type="HierarchyBoundsListener" line="690">
                <params>
                    <param name="a" type="HierarchyBoundsListener"/>
                    <param name="b" type="HierarchyBoundsListener"/>
                </params>
            </method>
            <javadoc line="694">
                Adds mouse-wheel-listener-a with mouse-wheel-listener-b and
                  returns the resulting multicast listener.                
                <param>
                    a mouse-wheel-listener-a                    
                </param>
                <param>
                    b mouse-wheel-listener-b                    
                </param>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="add" type="MouseWheelListener" line="702">
                <params>
                    <param name="a" type="MouseWheelListener"/>
                    <param name="b" type="MouseWheelListener"/>
                </params>
            </method>
            <javadoc line="706">
                Removes the old component-listener from component-listener-l and
                  returns the resulting multicast listener.                
                <param>
                    l component-listener-l                    
                </param>
                <param>
                    oldl the component-listener being removed                    
                </param>
            </javadoc>
            <method name="remove" type="ComponentListener" line="712">
                <params>
                    <param name="l" type="ComponentListener"/>
                    <param name="oldl" type="ComponentListener"/>
                </params>
            </method>
            <javadoc line="716">
                Removes the old container-listener from container-listener-l and
                  returns the resulting multicast listener.                
                <param>
                    l container-listener-l                    
                </param>
                <param>
                    oldl the container-listener being removed                    
                </param>
            </javadoc>
            <method name="remove" type="ContainerListener" line="722">
                <params>
                    <param name="l" type="ContainerListener"/>
                    <param name="oldl" type="ContainerListener"/>
                </params>
            </method>
            <javadoc line="726">
                Removes the old focus-listener from focus-listener-l and
                  returns the resulting multicast listener.                
                <param>
                    l focus-listener-l                    
                </param>
                <param>
                    oldl the focus-listener being removed                    
                </param>
            </javadoc>
            <method name="remove" type="FocusListener" line="732">
                <params>
                    <param name="l" type="FocusListener"/>
                    <param name="oldl" type="FocusListener"/>
                </params>
            </method>
            <javadoc line="736">
                Removes the old key-listener from key-listener-l and
                  returns the resulting multicast listener.                
                <param>
                    l key-listener-l                    
                </param>
                <param>
                    oldl the key-listener being removed                    
                </param>
            </javadoc>
            <method name="remove" type="KeyListener" line="742">
                <params>
                    <param name="l" type="KeyListener"/>
                    <param name="oldl" type="KeyListener"/>
                </params>
            </method>
            <javadoc line="746">
                Removes the old mouse-listener from mouse-listener-l and
                  returns the resulting multicast listener.                
                <param>
                    l mouse-listener-l                    
                </param>
                <param>
                    oldl the mouse-listener being removed                    
                </param>
            </javadoc>
            <method name="remove" type="MouseListener" line="752">
                <params>
                    <param name="l" type="MouseListener"/>
                    <param name="oldl" type="MouseListener"/>
                </params>
            </method>
            <javadoc line="756">
                Removes the old mouse-motion-listener from mouse-motion-listener-l
                  and returns the resulting multicast listener.                
                <param>
                    l mouse-motion-listener-l                    
                </param>
                <param>
                    oldl the mouse-motion-listener being removed                    
                </param>
            </javadoc>
            <method name="remove" type="MouseMotionListener" line="762">
                <params>
                    <param name="l" type="MouseMotionListener"/>
                    <param name="oldl" type="MouseMotionListener"/>
                </params>
            </method>
            <javadoc line="766">
                Removes the old window-listener from window-listener-l and
                  returns the resulting multicast listener.                
                <param>
                    l window-listener-l                    
                </param>
                <param>
                    oldl the window-listener being removed                    
                </param>
            </javadoc>
            <method name="remove" type="WindowListener" line="772">
                <params>
                    <param name="l" type="WindowListener"/>
                    <param name="oldl" type="WindowListener"/>
                </params>
            </method>
            <javadoc line="776">
                Removes the old window-state-listener from window-state-listener-l
                  and returns the resulting multicast listener.                
                <param>
                    l window-state-listener-l                    
                </param>
                <param>
                    oldl the window-state-listener being removed                    
                </param>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="remove" type="WindowStateListener" line="784">
                <params>
                    <param name="l" type="WindowStateListener"/>
                    <param name="oldl" type="WindowStateListener"/>
                </params>
            </method>
            <javadoc line="788">
                Removes the old window-focus-listener from window-focus-listener-l
                  and returns the resulting multicast listener.                
                <param>
                    l window-focus-listener-l                    
                </param>
                <param>
                    oldl the window-focus-listener being removed                    
                </param>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="remove" type="WindowFocusListener" line="796">
                <params>
                    <param name="l" type="WindowFocusListener"/>
                    <param name="oldl" type="WindowFocusListener"/>
                </params>
            </method>
            <javadoc line="800">
                Removes the old action-listener from action-listener-l and
                  returns the resulting multicast listener.                
                <param>
                    l action-listener-l                    
                </param>
                <param>
                    oldl the action-listener being removed                    
                </param>
            </javadoc>
            <method name="remove" type="ActionListener" line="806">
                <params>
                    <param name="l" type="ActionListener"/>
                    <param name="oldl" type="ActionListener"/>
                </params>
            </method>
            <javadoc line="810">
                Removes the old item-listener from item-listener-l and
                  returns the resulting multicast listener.                
                <param>
                    l item-listener-l                    
                </param>
                <param>
                    oldl the item-listener being removed                    
                </param>
            </javadoc>
            <method name="remove" type="ItemListener" line="816">
                <params>
                    <param name="l" type="ItemListener"/>
                    <param name="oldl" type="ItemListener"/>
                </params>
            </method>
            <javadoc line="820">
                Removes the old adjustment-listener from adjustment-listener-l and
                  returns the resulting multicast listener.                
                <param>
                    l adjustment-listener-l                    
                </param>
                <param>
                    oldl the adjustment-listener being removed                    
                </param>
            </javadoc>
            <method name="remove" type="AdjustmentListener" line="826">
                <params>
                    <param name="l" type="AdjustmentListener"/>
                    <param name="oldl" type="AdjustmentListener"/>
                </params>
            </method>
            <method name="remove" type="TextListener" line="829">
                <params>
                    <param name="l" type="TextListener"/>
                    <param name="oldl" type="TextListener"/>
                </params>
            </method>
            <javadoc line="833">
                Removes the old input-method-listener from input-method-listener-l and
                  returns the resulting multicast listener.                
                <param>
                    l input-method-listener-l                    
                </param>
                <param>
                    oldl the input-method-listener being removed                    
                </param>
            </javadoc>
            <method name="remove" type="InputMethodListener" line="839">
                <params>
                    <param name="l" type="InputMethodListener"/>
                    <param name="oldl" type="InputMethodListener"/>
                </params>
            </method>
            <javadoc line="843">
                Removes the old hierarchy-listener from hierarchy-listener-l and
                  returns the resulting multicast listener.                
                <param>
                    l hierarchy-listener-l                    
                </param>
                <param>
                    oldl the hierarchy-listener being removed                    
                </param>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="remove" type="HierarchyListener" line="850">
                <params>
                    <param name="l" type="HierarchyListener"/>
                    <param name="oldl" type="HierarchyListener"/>
                </params>
            </method>
            <javadoc line="854">
                Removes the old hierarchy-bounds-listener from
                  hierarchy-bounds-listener-l and returns the resulting multicast
                  listener.                
                <param>
                    l hierarchy-bounds-listener-l                    
                </param>
                <param>
                    oldl the hierarchy-bounds-listener being removed                    
                </param>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="remove" type="HierarchyBoundsListener" line="862">
                <params>
                    <param name="l" type="HierarchyBoundsListener"/>
                    <param name="oldl" type="HierarchyBoundsListener"/>
                </params>
            </method>
            <javadoc line="866">
                Removes the old mouse-wheel-listener from mouse-wheel-listener-l
                  and returns the resulting multicast listener.                
                <param>
                    l mouse-wheel-listener-l                    
                </param>
                <param>
                    oldl the mouse-wheel-listener being removed                    
                </param>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="remove" type="MouseWheelListener" line="874">
                <params>
                    <param name="l" type="MouseWheelListener"/>
                    <param name="oldl" type="MouseWheelListener"/>
                </params>
            </method>
            <javadoc line="878">
                Returns the resulting multicast listener from adding listener-a
                  and listener-b together.
                  If listener-a is null, it returns listener-b;
                  If listener-b is null, it returns listener-a
                  If neither are null, then it creates and returns
                  a new AWTEventMulticaster instance which chains a with b.                
                <param>
                    a event listener-a                    
                </param>
                <param>
                    b event listener-b                    
                </param>
            </javadoc>
            <method name="addInternal" type="EventListener" line="888">
                <params>
                    <param name="a" type="EventListener"/>
                    <param name="b" type="EventListener"/>
                </params>
            </method>
            <javadoc line="894">
                Returns the resulting multicast listener after removing the
                  old listener from listener-l.
                  If listener-l equals the old listener OR listener-l is null,
                  returns null.
                  Else if listener-l is an instance of AWTEventMulticaster,
                  then it removes the old listener from it.
                  Else, returns listener l.                
                <param>
                    l the listener being removed from                    
                </param>
                <param>
                    oldl the listener being removed                    
                </param>
            </javadoc>
            <method name="removeInternal" type="EventListener" line="905">
                <params>
                    <param name="l" type="EventListener"/>
                    <param name="oldl" type="EventListener"/>
                </params>
                <comment line="912">
                    it&apos;s not here                    
                </comment>
                <scope line="906"/>
                <scope line="908"/>
                <scope line="910"/>
            </method>
            <method name="saveInternal" type="void" line="919">
                <params>
                    <param name="s" type="ObjectOutputStream"/>
                    <param name="k" type="String"/>
                </params>
                <scope line="920"/>
                <scope line="923"/>
                <scope line="928"/>
                <scope line="931"/>
            </method>
            <method name="save" type="void" line="937">
                <params>
                    <param name="s" type="ObjectOutputStream"/>
                    <param name="k" type="String"/>
                    <param name="l" type="EventListener"/>
                </params>
                <scope line="938"/>
                <scope line="941"/>
                <scope line="944"/>
            </method>
            <method name="getListenerCount" type="int" line="956">
                <params>
                    <param name="l" type="EventListener"/>
                    <param name="listenerType" type="Class"/>
                </params>
                <comment line="964">
                    Only count listeners of correct type                    
                </comment>
                <scope line="957">
                    <declaration name="mc" type="AWTEventMulticaster" line="958"/>
                </scope>
                <scope line="962"/>
            </method>
            <method name="populateListenerArray" type="int" line="975">
                <params>
                    <param name="a" type="EventListener[]"/>
                    <param name="l" type="EventListener"/>
                    <param name="index" type="int"/>
                </params>
                <comment line="986">
                    Skip nulls, instances of wrong class                    
                </comment>
                <scope line="976">
                    <declaration name="mc" type="AWTEventMulticaster" line="977"/>
                    <declaration name="lhs" type="int" line="978"/>
                </scope>
                <scope line="981"/>
                <scope line="986"/>
            </method>
            <javadoc line="991">
                Returns an array of all the objects chained as
                  &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener&lt;/code&gt;s by the specified
                  &lt;code&gt;java.util.EventListener&lt;/code&gt;.
                  &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener&lt;/code&gt;s are chained by the
                  &lt;code&gt;AWTEventMulticaster&lt;/code&gt; using the
                  &lt;code&gt;add&lt;em&gt;Foo&lt;/em&gt;Listener&lt;/code&gt; method.
                  If a &lt;code&gt;null&lt;/code&gt; listener is specified, this method returns an
                  empty array. If the specified listener is not an instance of
                  &lt;code&gt;AWTEventMulticaster&lt;/code&gt;, this method returns an array which
                  contains only the specified listener. If no such listeners are chanined,
                  this method returns an empty array.                
                <param>
                    l the specified &lt;code&gt;java.util.EventListener&lt;/code&gt;                    
                </param>
                <param>
                    listenerType the type of listeners requested; this parameter
                      should specify an interface that descends from
                      &lt;code&gt;java.util.EventListener&lt;/code&gt;                    
                </param>
                <return>
                    an array of all objects chained as
                      &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;Listener&lt;/code&gt;s by the specified multicast
                      listener, or an empty array if no such listeners have been
                      chained by the specified multicast listener                    
                </return>
                <exception>
                    NullPointerException if the specified{@code listenertype} parameter is {@code null}                    
                </exception>
                <exception>
                    ClassCastException if &lt;code&gt;listenerType&lt;/code&gt;
                      doesn&apos;t specify a class or interface that implements
                      &lt;code&gt;java.util.EventListener&lt;/code&gt;                    
                </exception>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="getListeners" type="T[]" line="1022">
                <params>
                    <param name="l" type="EventListener"/>
                    <param name="listenerType" type="Class<T>"/>
                </params>
                <scope line="1023"/>
                <declaration name="n" type="int" line="1027"/>
                <declaration name="result" type="T[]" line="1028"/>
            </method>
        </class>
    </source>