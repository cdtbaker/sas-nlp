<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.image">
        <import package="java.awt.geom.Rectangle2D"/>
        <import package="java.awt.geom.Point2D"/>
        <import package="java.awt.RenderingHints"/>
        <interface name="RasterOp">
            <javadoc line="32">
                This interface describes single-input/single-output
                  operations performed on Raster objects.  It is implemented by such
                  classes as AffineTransformOp, ConvolveOp, and LookupOp.  The Source
                  and Destination objects must contain the appropriate number
                  of bands for the particular classes implementing this interface.
                  Otherwise, an exception is thrown.  This interface cannot be used to
                  describe more sophisticated Ops such as ones that take multiple sources.
                  Each class implementing this interface will specify whether or not it
                  will allow an in-place filtering operation (i.e. source object equal
                  to the destination object).  Note that the restriction to single-input
                  operations means that the values of destination pixels prior to the
                  operation are not used as input to the filter operation.                
                <see>
                    AffineTransformOp                    
                </see>
                <see>
                    BandCombineOp                    
                </see>
                <see>
                    ColorConvertOp                    
                </see>
                <see>
                    ConvolveOp                    
                </see>
                <see>
                    LookupOp                    
                </see>
                <see>
                    RescaleOp                    
                </see>
            </javadoc>
            <method name="filter" type="WritableRaster" line="53"/>
            <javadoc line="53">
                Performs a single-input/single-output operation from a source Raster
                  to a destination Raster.  If the destination Raster is null, a
                  new Raster will be created.  The IllegalArgumentException may be thrown
                  if the source and/or destination Raster is incompatible with the types
                  of Rasters allowed by the class implementing this filter.                
                <param>
                    src the source &lt;code&gt;Raster&lt;/code&gt;                    
                </param>
                <param>
                    dest the destination &lt;code&gt;WritableRaster&lt;/code&gt;                    
                </param>
                <return>
                    a &lt;code&gt;WritableRaster&lt;/code&gt; that represents the result of
                      the filtering operation.                    
                </return>
            </javadoc>
            <method name="getBounds2D" type="Rectangle2D" line="66"/>
            <javadoc line="66">
                Returns the bounding box of the filtered destination Raster.
                  The IllegalArgumentException may be thrown if the source Raster
                  is incompatible with the types of Rasters allowed
                  by the class implementing this filter.                
                <param>
                    src the source &lt;code&gt;Raster&lt;/code&gt;                    
                </param>
                <return>
                    a &lt;code&gt;Rectangle2D&lt;/code&gt; that is the bounding box of
                      the &lt;code&gt;Raster&lt;/code&gt; resulting from the filtering
                      operation.                    
                </return>
            </javadoc>
            <method name="createCompatibleDestRaster" type="WritableRaster" line="78"/>
            <javadoc line="78">
                Creates a zeroed destination Raster with the correct size and number of
                  bands.
                  The IllegalArgumentException may be thrown if the source Raster
                  is incompatible with the types of Rasters allowed
                  by the class implementing this filter.                
                <param>
                    src the source &lt;code&gt;Raster&lt;/code&gt;                    
                </param>
                <return>
                    a &lt;code&gt;WritableRaster&lt;/code&gt; that is compatible with
                      &lt;code&gt;src&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getPoint2D" type="Point2D" line="90"/>
            <javadoc line="90">
                Returns the location of the destination point given a
                  point in the source Raster.  If dstPt is non-null, it
                  will be used to hold the return value.                
                <param>
                    srcPt the source &lt;code&gt;Point2D&lt;/code&gt;                    
                </param>
                <param>
                    dstPt the destination &lt;code&gt;Point2D&lt;/code&gt;                    
                </param>
                <return>
                    the location of the destination point.                    
                </return>
            </javadoc>
            <method name="getRenderingHints" type="RenderingHints" line="100"/>
            <javadoc line="100">
                Returns the rendering hints for this RasterOp.  Returns
                  null if no hints have been set.                
                <return>
                    the &lt;code&gt;RenderingHints&lt;/code&gt; object of this
                      &lt;code&gt;RasterOp&lt;/code&gt;.                    
                </return>
            </javadoc>
        </interface>
    </source>