<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.image">
        <import package="java.awt.image.ImageConsumer"/>
        <import package="java.awt.image.ColorModel"/>
        <import package="java.util.Hashtable"/>
        <import package="java.awt.Rectangle"/>
        <class name="ReplicateScaleFilter" line="33">
            <extends class="ImageFilter"/>
            <javadoc line="33">
                An ImageFilter class for scaling images using the simplest algorithm.
                  This class extends the basic ImageFilter Class to scale an existing
                  image and provide a source for a new image containing the resampled
                  image.  The pixels in the source image are sampled to produce pixels
                  for an image of the specified size by replicating rows and columns of
                  pixels to scale up or omitting rows and columns of pixels to scale
                  down.
                  &lt;p&gt;It is meant to be used in conjunction with a FilteredImageSource
                  object to produce scaled versions of existing images.  Due to
                  implementation dependencies, there may be differences in pixel values
                  of an image filtered on different platforms.                
                <see>
                    FilteredImageSource                    
                </see>
                <see>
                    ImageFilter                    
                </see>
                <author>
                    Jim Graham                    
                </author>
            </javadoc>
            <declaration name="srcWidth" type="int" line="53"/>
            <javadoc line="53">
                The width of the source image.                
            </javadoc>
            <declaration name="srcHeight" type="int" line="58"/>
            <javadoc line="58">
                The height of the source image.                
            </javadoc>
            <declaration name="destWidth" type="int" line="63"/>
            <javadoc line="63">
                The target width to scale the image.                
            </javadoc>
            <declaration name="destHeight" type="int" line="68"/>
            <javadoc line="68">
                The target height to scale the image.                
            </javadoc>
            <declaration name="srcrows" type="int" line="73"/>
            <javadoc line="73">
                An &lt;code&gt;int&lt;/code&gt; array containing information about a
                  row of pixels.                
            </javadoc>
            <declaration name="srccols" type="int" line="79"/>
            <javadoc line="79">
                An &lt;code&gt;int&lt;/code&gt; array containing information about a
                  column of pixels.                
            </javadoc>
            <declaration name="outpixbuf" type="Object" line="85"/>
            <javadoc line="85">
                A &lt;code&gt;byte&lt;/code&gt; array initialized with a size of{@link #destWidth} and used to deliver a row of pixel
                  data to the {@link ImageConsumer}.                
            </javadoc>
            <javadoc line="92">
                Constructs a ReplicateScaleFilter that scales the pixels from
                  its source Image as specified by the width and height parameters.                
                <param>
                    width the target width to scale the image                    
                </param>
                <param>
                    height the target height to scale the image                    
                </param>
                <throws>
                    IllegalArgumentException if <code>width</code> equals
                      zero or <code>height</code> equals zero                    
                </throws>
            </javadoc>
            <method name="ReplicateScaleFilter" type="constructor" line="100">
                <params>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <scope line="101"/>
            </method>
            <javadoc line="110">
                Passes along the properties from the source object after adding a
                  property indicating the scale applied.
                  This method invokes &lt;code&gt;super.setProperties&lt;/code&gt;,
                  which might result in additional properties being added.
                  &lt;p&gt;
                  Note: This method is intended to be called by the
                  &lt;code&gt;ImageProducer&lt;/code&gt; of the &lt;code&gt;Image&lt;/code&gt; whose pixels
                  are being filtered. Developers using
                  this class to filter pixels from an image should avoid calling
                  this method directly since that operation could interfere
                  with the filtering operation.                
            </javadoc>
            <method name="setProperties" type="void" line="123">
                <params>
                    <param name="props" type="Hashtable<?,?>"/>
                </params>
                <declaration name="p" type="Hashtable&lt;Object,Object&gt;" line="124"/>
                <declaration name="key" type="String" line="125"/>
                <declaration name="val" type="String" line="126"/>
                <declaration name="o" type="Object" line="127"/>
                <scope line="128"/>
            </method>
            <javadoc line="135">
                Override the dimensions of the source image and pass the dimensions
                  of the new scaled size to the ImageConsumer.
                  &lt;p&gt;
                  Note: This method is intended to be called by the
                  &lt;code&gt;ImageProducer&lt;/code&gt; of the &lt;code&gt;Image&lt;/code&gt; whose pixels
                  are being filtered. Developers using
                  this class to filter pixels from an image should avoid calling
                  this method directly since that operation could interfere
                  with the filtering operation.                
                <see>
                    ImageConsumer                    
                </see>
            </javadoc>
            <method name="setDimensions" type="void" line="147">
                <params>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <scope line="150">
                    <scope line="151"/>
                    <scope line="154"/>
                </scope>
                <scope line="157"/>
            </method>
            <method name="calculateMaps" type="void" line="163">
                <scope line="165"/>
                <scope line="169"/>
            </method>
            <javadoc line="174">
                Choose which rows and columns of the delivered byte pixels are
                  needed for the destination scaled image and pass through just
                  those rows and columns that are needed, replicated as necessary.
                  &lt;p&gt;
                  Note: This method is intended to be called by the
                  &lt;code&gt;ImageProducer&lt;/code&gt; of the &lt;code&gt;Image&lt;/code&gt; whose pixels
                  are being filtered. Developers using
                  this class to filter pixels from an image should avoid calling
                  this method directly since that operation could interfere
                  with the filtering operation.                
            </javadoc>
            <method name="setPixels" type="void" line="188">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="model" type="ColorModel"/>
                    <param name="pixels" type="byte"/>
                    <param name="off" type="int"/>
                    <param name="scansize" type="int"/>
                </params>
                <scope line="189"/>
                <declaration name="sx" type="int" line="192"/>
                <declaration name="dx1" type="int" line="193"/>
                <declaration name="dy1" type="int" line="194"/>
                <declaration name="outpix" type="byte" line="195"/>
                <scope line="196"/>
                <scope line="198"/>
                <scope line="202">
                    <declaration name="srcoff" type="int" line="203"/>
                    <declaration name="dx" type="int" line="204"/>
                    <scope line="205"/>
                    <scope line="208"/>
                </scope>
            </method>
            <javadoc line="215">
                Choose which rows and columns of the delivered int pixels are
                  needed for the destination scaled image and pass through just
                  those rows and columns that are needed, replicated as necessary.
                  &lt;p&gt;
                  Note: This method is intended to be called by the
                  &lt;code&gt;ImageProducer&lt;/code&gt; of the &lt;code&gt;Image&lt;/code&gt; whose pixels
                  are being filtered. Developers using
                  this class to filter pixels from an image should avoid calling
                  this method directly since that operation could interfere
                  with the filtering operation.                
            </javadoc>
            <method name="setPixels" type="void" line="229">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="model" type="ColorModel"/>
                    <param name="pixels" type="int"/>
                    <param name="off" type="int"/>
                    <param name="scansize" type="int"/>
                </params>
                <scope line="230"/>
                <declaration name="sx" type="int" line="233"/>
                <declaration name="dx1" type="int" line="234"/>
                <declaration name="dy1" type="int" line="235"/>
                <declaration name="outpix" type="int" line="236"/>
                <scope line="237"/>
                <scope line="239"/>
                <scope line="243">
                    <declaration name="srcoff" type="int" line="244"/>
                    <declaration name="dx" type="int" line="245"/>
                    <scope line="246"/>
                    <scope line="249"/>
                </scope>
            </method>
        </class>
    </source>