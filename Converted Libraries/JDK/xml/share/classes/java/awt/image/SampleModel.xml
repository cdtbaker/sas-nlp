<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.image">
        <class name="SampleModel" line="2">
            <javadoc line="2">
                This abstract class defines an interface for extracting samples of pixels
                  in an image.  All image data is expressed as a collection of pixels.
                  Each pixel consists of a number of samples. A sample is a datum
                  for one band of an image and a band consists of all samples of a
                  particular type in an image.  For example, a pixel might contain
                  three samples representing its red, green and blue components.
                  There are three bands in the image containing this pixel.  One band
                  consists of all the red samples from all pixels in the
                  image.  The second band consists of all the green samples and
                  the remaining band consists of all of the blue samples.  The pixel
                  can be stored in various formats.  For example, all samples from
                  a particular band can be stored contiguously or all samples from a
                  single pixel can be stored contiguously.
                  &lt;p&gt;
                  Subclasses of SampleModel specify the types of samples they can
                  represent (e.g. unsigned 8-bit byte, signed 16-bit short, etc.)
                  and may specify how the samples are organized in memory.
                  In the Java 2D(tm) API, built-in image processing operators may
                  not operate on all possible sample types, but generally will work
                  for unsigned integral samples of 16 bits or less.  Some operators
                  support a wider variety of sample types.
                  &lt;p&gt;
                  A collection of pixels is represented as a Raster, which consists of
                  a DataBuffer and a SampleModel.  The SampleModel allows access to
                  samples in the DataBuffer and may provide low-level information that
                  a programmer can use to directly manipulate samples and pixels in the
                  DataBuffer.
                  &lt;p&gt;
                  This class is generally a fall back method for dealing with
                  images.  More efficient code will cast the SampleModel to the
                  appropriate subclass and extract the information needed to directly
                  manipulate pixels in the DataBuffer.                
                <see>
                    java.awt.image.DataBuffer                    
                </see>
                <see>
                    java.awt.image.Raster                    
                </see>
                <see>
                    java.awt.image.ComponentSampleModel                    
                </see>
                <see>
                    java.awt.image.PixelInterleavedSampleModel                    
                </see>
                <see>
                    java.awt.image.BandedSampleModel                    
                </see>
                <see>
                    java.awt.image.MultiPixelPackedSampleModel                    
                </see>
                <see>
                    java.awt.image.SinglePixelPackedSampleModel                    
                </see>
            </javadoc>
            <declaration name="width" type="int" line="44"/>
            <javadoc line="44">
                Width in pixels of the region of image data that this SampleModel
                  describes.                
            </javadoc>
            <declaration name="height" type="int" line="49"/>
            <javadoc line="49">
                Height in pixels of the region of image data that this SampleModel
                  describes.                
            </javadoc>
            <declaration name="numBands" type="int" line="54"/>
            <javadoc line="54">
                Number of bands of the image data that this SampleModel describes.                
            </javadoc>
            <declaration name="dataType" type="int" line="58"/>
            <javadoc line="58">
                Data type of the DataBuffer storing the pixel data.                
                <see>
                    java.awt.image.DataBuffer                    
                </see>
            </javadoc>
            <method name="initIDs" type="void" line="63"/>
            <scope line="64"/>
            <javadoc line="68">
                Constructs a SampleModel with the specified parameters.                
                <param>
                    dataType  The data type of the DataBuffer storing the pixel data.                    
                </param>
                <param>
                    w         The width (in pixels) of the region of image data.                    
                </param>
                <param>
                    h         The height (in pixels) of the region of image data.                    
                </param>
                <param>
                    numBands  The number of bands of the image data.                    
                </param>
                <throws>
                    IllegalArgumentException if <code>w</code> or <code>h</code>
                      is not greater than 0                    
                </throws>
                <throws>
                    IllegalArgumentException if the product of <code>w</code>
                      and <code>h</code> is greater than
                      <code>Integer.MAX_VALUE</code>                    
                </throws>
                <throws>
                    IllegalArgumentException if <code>dataType</code> is not
                      one of the supported data types                    
                </throws>
            </javadoc>
            <method name="SampleModel" type="constructor" line="82">
                <params>
                    <param name="dataType" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="numBands" type="int"/>
                </params>
                <declaration name="size" type="long" line="83"/>
                <scope line="84"/>
                <scope line="87"/>
                <scope line="90"/>
                <scope line="93"/>
            </method>
            <javadoc line="101">
                Returns the width in pixels.                
                <return>
                    the width in pixels of the region of image data
                      that this <code>SampleModel</code> describes.                    
                </return>
            </javadoc>
            <method name="getWidth" type="int" line="106"/>
            <javadoc line="109">
                Returns the height in pixels.                
                <return>
                    the height in pixels of the region of image data
                      that this <code>SampleModel</code> describes.                    
                </return>
            </javadoc>
            <method name="getHeight" type="int" line="114"/>
            <javadoc line="117">
                Returns the total number of bands of image data.                
                <return>
                    the number of bands of image data that this
                      <code>SampleModel</code> describes.                    
                </return>
            </javadoc>
            <method name="getNumBands" type="int" line="122"/>
            <method name="getNumDataElements" type="int" line="125"/>
            <javadoc line="125">
                Returns the number of data elements needed to transfer a pixel
                  via the getDataElements and setDataElements methods.  When pixels
                  are transferred via these methods, they may be transferred in a
                  packed or unpacked format, depending on the implementation of the
                  SampleModel.  Using these methods, pixels are transferred as an
                  array of getNumDataElements() elements of a primitive type given
                  by getTransferType().  The TransferType may or may not be the same
                  as the storage DataType.                
                <return>
                    the number of data elements.                    
                </return>
                <see>
                    #getDataElements(int,int,Object,DataBuffer)                    
                </see>
                <see>
                    #getDataElements(int,int,int,int,Object,DataBuffer)                    
                </see>
                <see>
                    #setDataElements(int,int,Object,DataBuffer)                    
                </see>
                <see>
                    #setDataElements(int,int,int,int,Object,DataBuffer)                    
                </see>
                <see>
                    #getTransferType                    
                </see>
            </javadoc>
            <javadoc line="142">
                Returns the data type of the DataBuffer storing the pixel data.                
                <return>
                    the data type.                    
                </return>
            </javadoc>
            <method name="getDataType" type="int" line="146"/>
            <javadoc line="149">
                Returns the TransferType used to transfer pixels via the
                  getDataElements and setDataElements methods.  When pixels
                  are transferred via these methods, they may be transferred in a
                  packed or unpacked format, depending on the implementation of the
                  SampleModel.  Using these methods, pixels are transferred as an
                  array of getNumDataElements() elements of a primitive type given
                  by getTransferType().  The TransferType may or may not be the same
                  as the storage DataType.  The TransferType will be one of the types
                  defined in DataBuffer.                
                <return>
                    the transfer type.                    
                </return>
                <see>
                    #getDataElements(int,int,Object,DataBuffer)                    
                </see>
                <see>
                    #getDataElements(int,int,int,int,Object,DataBuffer)                    
                </see>
                <see>
                    #setDataElements(int,int,Object,DataBuffer)                    
                </see>
                <see>
                    #setDataElements(int,int,int,int,Object,DataBuffer)                    
                </see>
                <see>
                    #getNumDataElements                    
                </see>
                <see>
                    java.awt.image.DataBuffer                    
                </see>
            </javadoc>
            <method name="getTransferType" type="int" line="167"/>
            <javadoc line="170">
                Returns the samples for a specified pixel in an int array,
                  one sample per array element.
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds.                
                <param>
                    x         The X coordinate of the pixel location                    
                </param>
                <param>
                    y         The Y coordinate of the pixel location                    
                </param>
                <param>
                    iArray    If non-null, returns the samples in this array                    
                </param>
                <param>
                    data      The DataBuffer containing the image data                    
                </param>
                <return>
                    the samples for the specified pixel.                    
                </return>
                <see>
                    #setPixel(int,int,int[],DataBuffer)                    
                </see>
                <throws>
                    NullPointerException if data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates are
                      not in bounds, or if iArray is too small to hold the output.                    
                </throws>
            </javadoc>
            <method name="getPixel" type="int[]" line="185">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="iArray" type="int"/>
                    <param name="data" type="DataBuffer"/>
                </params>
                <declaration name="pixels" type="int" line="186"/>
                <scope line="189"/>
            </method>
            <method name="getDataElements" type="Object" line="194"/>
            <javadoc line="194">
                Returns data for a single pixel in a primitive array of type
                  TransferType.  For image data supported by the Java 2D API, this
                  will be one of DataBuffer.TYPE_BYTE, DataBuffer.TYPE_USHORT,
                  DataBuffer.TYPE_INT, DataBuffer.TYPE_SHORT, DataBuffer.TYPE_FLOAT,
                  or DataBuffer.TYPE_DOUBLE.  Data may be returned in a packed format,
                  thus increasing efficiency for data transfers. Generally, obj
                  should be passed in as null, so that the Object will be created
                  automatically and will be of the right primitive data type.
                  &lt;p&gt;
                  The following code illustrates transferring data for one pixel from
                  DataBuffer &lt;code&gt;db1&lt;/code&gt;, whose storage layout is described by
                  SampleModel &lt;code&gt;sm1&lt;/code&gt;, to DataBuffer &lt;code&gt;db2&lt;/code&gt;, whose
                  storage layout is described by SampleModel &lt;code&gt;sm2&lt;/code&gt;.
                  The transfer will generally be more efficient than using
                  getPixel/setPixel.
                  &lt;pre&gt;
                  SampleModel sm1, sm2;
                  DataBuffer db1, db2;
                  sm2.setDataElements(x, y, sm1.getDataElements(x, y, null, db1), db2);
                  &lt;/pre&gt;
                  Using getDataElements/setDataElements to transfer between two
                  DataBuffer/SampleModel pairs is legitimate if the SampleModels have
                  the same number of bands, corresponding bands have the same number of
                  bits per sample, and the TransferTypes are the same.
                  &lt;p&gt;
                  If obj is non-null, it should be a primitive array of type TransferType.
                  Otherwise, a ClassCastException is thrown.  An
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds, or if obj is non-null and is not large enough to hold
                  the pixel data.                
                <param>
                    x         The X coordinate of the pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the pixel location.                    
                </param>
                <param>
                    obj       If non-null, a primitive array in which to return
                      the pixel data.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <return>
                    the data elements for the specified pixel.                    
                </return>
                <see>
                    #getNumDataElements                    
                </see>
                <see>
                    #getTransferType                    
                </see>
                <see>
                    java.awt.image.DataBuffer                    
                </see>
                <see>
                    #setDataElements(int,int,Object,DataBuffer)                    
                </see>
                <throws>
                    NullPointerException if data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates are
                      not in bounds, or if obj is too small to hold the output.                    
                </throws>
            </javadoc>
            <javadoc line="240">
                Returns the pixel data for the specified rectangle of pixels in a
                  primitive array of type TransferType.
                  For image data supported by the Java 2D API, this
                  will be one of DataBuffer.TYPE_BYTE, DataBuffer.TYPE_USHORT,
                  DataBuffer.TYPE_INT, DataBuffer.TYPE_SHORT, DataBuffer.TYPE_FLOAT,
                  or DataBuffer.TYPE_DOUBLE.  Data may be returned in a packed format,
                  thus increasing efficiency for data transfers. Generally, obj
                  should be passed in as null, so that the Object will be created
                  automatically and will be of the right primitive data type.
                  &lt;p&gt;
                  The following code illustrates transferring data for a rectangular
                  region of pixels from
                  DataBuffer &lt;code&gt;db1&lt;/code&gt;, whose storage layout is described by
                  SampleModel &lt;code&gt;sm1&lt;/code&gt;, to DataBuffer &lt;code&gt;db2&lt;/code&gt;, whose
                  storage layout is described by SampleModel &lt;code&gt;sm2&lt;/code&gt;.
                  The transfer will generally be more efficient than using
                  getPixels/setPixels.
                  &lt;pre&gt;
                  SampleModel sm1, sm2;
                  DataBuffer db1, db2;
                  sm2.setDataElements(x, y, w, h, sm1.getDataElements(x, y, w,
                  h, null, db1), db2);
                  &lt;/pre&gt;
                  Using getDataElements/setDataElements to transfer between two
                  DataBuffer/SampleModel pairs is legitimate if the SampleModels have
                  the same number of bands, corresponding bands have the same number of
                  bits per sample, and the TransferTypes are the same.
                  &lt;p&gt;
                  If obj is non-null, it should be a primitive array of type TransferType.
                  Otherwise, a ClassCastException is thrown.  An
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds, or if obj is non-null and is not large enough to hold
                  the pixel data.                
                <param>
                    x         The minimum X coordinate of the pixel rectangle.                    
                </param>
                <param>
                    y         The minimum Y coordinate of the pixel rectangle.                    
                </param>
                <param>
                    w         The width of the pixel rectangle.                    
                </param>
                <param>
                    h         The height of the pixel rectangle.                    
                </param>
                <param>
                    obj       If non-null, a primitive array in which to return
                      the pixel data.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <return>
                    the data elements for the specified region of pixels.                    
                </return>
                <see>
                    #getNumDataElements                    
                </see>
                <see>
                    #getTransferType                    
                </see>
                <see>
                    #setDataElements(int,int,int,int,Object,DataBuffer)                    
                </see>
                <see>
                    java.awt.image.DataBuffer                    
                </see>
                <throws>
                    NullPointerException if data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates are
                      not in bounds, or if obj is too small to hold the output.                    
                </throws>
            </javadoc>
            <method name="getDataElements" type="Object" line="290">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="obj" type="Object"/>
                    <param name="data" type="DataBuffer"/>
                </params>
                <declaration name="type" type="int" line="291"/>
                <declaration name="numDataElems" type="int" line="292"/>
                <declaration name="cnt" type="int" line="293"/>
                <declaration name="o" type="Object" line="294"/>
                <declaration name="x1" type="int" line="295"/>
                <declaration name="y1" type="int" line="296"/>
                <scope line="297"/>
                <declaration name="btemp" type="byte[]" line="302"/>
                <declaration name="bdata" type="byte[]" line="303"/>
                <scope line="306">
                    <scope line="307">
                        <scope line="310"/>
                    </scope>
                </scope>
                <declaration name="sdata" type="short[]" line="319"/>
                <declaration name="stemp" type="short[]" line="320"/>
                <scope line="323">
                    <scope line="324">
                        <scope line="327"/>
                    </scope>
                </scope>
                <declaration name="idata" type="int[]" line="335"/>
                <declaration name="itemp" type="int[]" line="336"/>
                <scope line="339">
                    <scope line="340">
                        <scope line="343"/>
                    </scope>
                </scope>
                <declaration name="fdata" type="float[]" line="351"/>
                <declaration name="ftemp" type="float[]" line="352"/>
                <scope line="355">
                    <scope line="356">
                        <scope line="359"/>
                    </scope>
                </scope>
                <declaration name="ddata" type="double[]" line="367"/>
                <declaration name="dtemp" type="double[]" line="368"/>
                <scope line="371">
                    <scope line="372">
                        <scope line="375"/>
                    </scope>
                </scope>
            </method>
            <method name="setDataElements" type="void" line="385"/>
            <javadoc line="385">
                Sets the data for a single pixel in the specified DataBuffer from a
                  primitive array of type TransferType.  For image data supported by
                  the Java 2D API, this will be one of DataBuffer.TYPE_BYTE,
                  DataBuffer.TYPE_USHORT, DataBuffer.TYPE_INT, DataBuffer.TYPE_SHORT,
                  DataBuffer.TYPE_FLOAT, or DataBuffer.TYPE_DOUBLE.  Data in the array
                  may be in a packed format, thus increasing efficiency for data
                  transfers.
                  &lt;p&gt;
                  The following code illustrates transferring data for one pixel from
                  DataBuffer &lt;code&gt;db1&lt;/code&gt;, whose storage layout is described by
                  SampleModel &lt;code&gt;sm1&lt;/code&gt;, to DataBuffer &lt;code&gt;db2&lt;/code&gt;, whose
                  storage layout is described by SampleModel &lt;code&gt;sm2&lt;/code&gt;.
                  The transfer will generally be more efficient than using
                  getPixel/setPixel.
                  &lt;pre&gt;
                  SampleModel sm1, sm2;
                  DataBuffer db1, db2;
                  sm2.setDataElements(x, y, sm1.getDataElements(x, y, null, db1),
                  db2);
                  &lt;/pre&gt;
                  Using getDataElements/setDataElements to transfer between two
                  DataBuffer/SampleModel pairs is legitimate if the SampleModels have
                  the same number of bands, corresponding bands have the same number of
                  bits per sample, and the TransferTypes are the same.
                  &lt;p&gt;
                  obj must be a primitive array of type TransferType.  Otherwise,
                  a ClassCastException is thrown.  An
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds, or if obj is not large enough to hold the pixel data.                
                <param>
                    x         The X coordinate of the pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the pixel location.                    
                </param>
                <param>
                    obj       A primitive array containing pixel data.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <see>
                    #getNumDataElements                    
                </see>
                <see>
                    #getTransferType                    
                </see>
                <see>
                    #getDataElements(int,int,Object,DataBuffer)                    
                </see>
                <see>
                    java.awt.image.DataBuffer                    
                </see>
                <throws>
                    NullPointerException if data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates are
                      not in bounds, or if obj is too small to hold the input.                    
                </throws>
            </javadoc>
            <javadoc line="428">
                Sets the data for a rectangle of pixels in the specified DataBuffer
                  from a primitive array of type TransferType.  For image data supported
                  by the Java 2D API, this will be one of DataBuffer.TYPE_BYTE,
                  DataBuffer.TYPE_USHORT, DataBuffer.TYPE_INT, DataBuffer.TYPE_SHORT,
                  DataBuffer.TYPE_FLOAT, or DataBuffer.TYPE_DOUBLE.  Data in the array
                  may be in a packed format, thus increasing efficiency for data
                  transfers.
                  &lt;p&gt;
                  The following code illustrates transferring data for a rectangular
                  region of pixels from
                  DataBuffer &lt;code&gt;db1&lt;/code&gt;, whose storage layout is described by
                  SampleModel &lt;code&gt;sm1&lt;/code&gt;, to DataBuffer &lt;code&gt;db2&lt;/code&gt;, whose
                  storage layout is described by SampleModel &lt;code&gt;sm2&lt;/code&gt;.
                  The transfer will generally be more efficient than using
                  getPixels/setPixels.
                  &lt;pre&gt;
                  SampleModel sm1, sm2;
                  DataBuffer db1, db2;
                  sm2.setDataElements(x, y, w, h, sm1.getDataElements(x, y, w, h,
                  null, db1), db2);
                  &lt;/pre&gt;
                  Using getDataElements/setDataElements to transfer between two
                  DataBuffer/SampleModel pairs is legitimate if the SampleModels have
                  the same number of bands, corresponding bands have the same number of
                  bits per sample, and the TransferTypes are the same.
                  &lt;p&gt;
                  obj must be a primitive array of type TransferType.  Otherwise,
                  a ClassCastException is thrown.  An
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds, or if obj is not large enough to hold the pixel data.                
                <param>
                    x         The minimum X coordinate of the pixel rectangle.                    
                </param>
                <param>
                    y         The minimum Y coordinate of the pixel rectangle.                    
                </param>
                <param>
                    w         The width of the pixel rectangle.                    
                </param>
                <param>
                    h         The height of the pixel rectangle.                    
                </param>
                <param>
                    obj       A primitive array containing pixel data.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <see>
                    #getNumDataElements                    
                </see>
                <see>
                    #getTransferType                    
                </see>
                <see>
                    #getDataElements(int,int,int,int,Object,DataBuffer)                    
                </see>
                <see>
                    java.awt.image.DataBuffer                    
                </see>
                <throws>
                    NullPointerException if data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates are
                      not in bounds, or if obj is too small to hold the input.                    
                </throws>
            </javadoc>
            <method name="setDataElements" type="void" line="473">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="obj" type="Object"/>
                    <param name="data" type="DataBuffer"/>
                </params>
                <declaration name="cnt" type="int" line="474"/>
                <declaration name="o" type="Object" line="475"/>
                <declaration name="type" type="int" line="476"/>
                <declaration name="numDataElems" type="int" line="477"/>
                <declaration name="x1" type="int" line="478"/>
                <declaration name="y1" type="int" line="479"/>
                <scope line="480"/>
                <declaration name="barray" type="byte[]" line="485"/>
                <declaration name="btemp" type="byte[]" line="486"/>
                <scope line="487">
                    <scope line="488">
                        <scope line="489"/>
                    </scope>
                </scope>
                <declaration name="sarray" type="short[]" line="498"/>
                <declaration name="stemp" type="short[]" line="499"/>
                <scope line="500">
                    <scope line="501">
                        <scope line="502"/>
                    </scope>
                </scope>
                <declaration name="iArray" type="int[]" line="510"/>
                <declaration name="itemp" type="int[]" line="511"/>
                <scope line="512">
                    <scope line="513">
                        <scope line="514"/>
                    </scope>
                </scope>
                <declaration name="fArray" type="float[]" line="522"/>
                <declaration name="ftemp" type="float[]" line="523"/>
                <scope line="524">
                    <scope line="525">
                        <scope line="526"/>
                    </scope>
                </scope>
                <declaration name="dArray" type="double[]" line="534"/>
                <declaration name="dtemp" type="double[]" line="535"/>
                <scope line="536">
                    <scope line="537">
                        <scope line="538"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="547">
                Returns the samples for the specified pixel in an array of float.
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds.                
                <param>
                    x         The X coordinate of the pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the pixel location.                    
                </param>
                <param>
                    fArray    If non-null, returns the samples in this array.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <return>
                    the samples for the specified pixel.                    
                </return>
                <see>
                    #setPixel(int,int,float[],DataBuffer)                    
                </see>
                <throws>
                    NullPointerException if data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates are
                      not in bounds, or if fArray is too small to hold the output.                    
                </throws>
            </javadoc>
            <method name="getPixel" type="float[]" line="561">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="fArray" type="float"/>
                    <param name="data" type="DataBuffer"/>
                </params>
                <declaration name="pixels" type="float" line="562"/>
            </method>
            <javadoc line="568">
                Returns the samples for the specified pixel in an array of double.
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds.                
                <param>
                    x         The X coordinate of the pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the pixel location.                    
                </param>
                <param>
                    dArray    If non-null, returns the samples in this array.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <return>
                    the samples for the specified pixel.                    
                </return>
                <see>
                    #setPixel(int,int,double[],DataBuffer)                    
                </see>
                <throws>
                    NullPointerException if data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates are
                      not in bounds, or if dArray is too small to hold the output.                    
                </throws>
            </javadoc>
            <method name="getPixel" type="double[]" line="582">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="dArray" type="double"/>
                    <param name="data" type="DataBuffer"/>
                </params>
                <declaration name="pixels" type="double" line="583"/>
            </method>
            <javadoc line="589">
                Returns all samples for a rectangle of pixels in an
                  int array, one sample per array element.
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds.                
                <param>
                    x         The X coordinate of the upper left pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the upper left pixel location.                    
                </param>
                <param>
                    w         The width of the pixel rectangle.                    
                </param>
                <param>
                    h         The height of the pixel rectangle.                    
                </param>
                <param>
                    iArray    If non-null, returns the samples in this array.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <return>
                    the samples for the specified region of pixels.                    
                </return>
                <see>
                    #setPixels(int,int,int,int,int[],DataBuffer)                    
                </see>
                <throws>
                    NullPointerException if data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates are
                      not in bounds, or if iArray is too small to hold the output.                    
                </throws>
            </javadoc>
            <method name="getPixels" type="int[]" line="606">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="iArray" type="int"/>
                    <param name="data" type="DataBuffer"/>
                </params>
                <declaration name="pixels" type="int" line="607"/>
                <declaration name="Offset" type="int" line="608"/>
                <declaration name="x1" type="int" line="609"/>
                <declaration name="y1" type="int" line="610"/>
                <scope line="611"/>
                <scope line="616">
                    <scope line="617">
                        <scope line="618"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="625">
                Returns all samples for a rectangle of pixels in a float
                  array, one sample per array element.
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds.                
                <param>
                    x         The X coordinate of the upper left pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the upper left pixel location.                    
                </param>
                <param>
                    w         The width of the pixel rectangle.                    
                </param>
                <param>
                    h         The height of the pixel rectangle.                    
                </param>
                <param>
                    fArray    If non-null, returns the samples in this array.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <return>
                    the samples for the specified region of pixels.                    
                </return>
                <see>
                    #setPixels(int,int,int,int,float[],DataBuffer)                    
                </see>
                <throws>
                    NullPointerException if data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates are
                      not in bounds, or if fArray is too small to hold the output.                    
                </throws>
            </javadoc>
            <method name="getPixels" type="float[]" line="642">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="fArray" type="float"/>
                    <param name="data" type="DataBuffer"/>
                </params>
                <declaration name="pixels" type="float" line="643"/>
                <declaration name="Offset" type="int" line="644"/>
                <declaration name="x1" type="int" line="645"/>
                <declaration name="y1" type="int" line="646"/>
                <scope line="647"/>
                <scope line="652">
                    <scope line="653">
                        <scope line="654"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="661">
                Returns all samples for a rectangle of pixels in a double
                  array, one sample per array element.
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds.                
                <param>
                    x         The X coordinate of the upper left pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the upper left pixel location.                    
                </param>
                <param>
                    w         The width of the pixel rectangle.                    
                </param>
                <param>
                    h         The height of the pixel rectangle.                    
                </param>
                <param>
                    dArray    If non-null, returns the samples in this array.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <return>
                    the samples for the specified region of pixels.                    
                </return>
                <see>
                    #setPixels(int,int,int,int,double[],DataBuffer)                    
                </see>
                <throws>
                    NullPointerException if data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates are
                      not in bounds, or if dArray is too small to hold the output.                    
                </throws>
            </javadoc>
            <method name="getPixels" type="double[]" line="678">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="dArray" type="double"/>
                    <param name="data" type="DataBuffer"/>
                </params>
                <declaration name="pixels" type="double" line="679"/>
                <declaration name="Offset" type="int" line="680"/>
                <declaration name="x1" type="int" line="681"/>
                <declaration name="y1" type="int" line="682"/>
                <scope line="683"/>
                <scope line="688">
                    <scope line="689">
                        <scope line="690"/>
                    </scope>
                </scope>
            </method>
            <method name="getSample" type="int" line="697"/>
            <javadoc line="697">
                Returns the sample in a specified band for the pixel located
                  at (x,y) as an int.
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds.                
                <param>
                    x         The X coordinate of the pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the pixel location.                    
                </param>
                <param>
                    b         The band to return.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <return>
                    the sample in a specified band for the specified pixel.                    
                </return>
                <see>
                    #setSample(int,int,int,int,DataBuffer)                    
                </see>
                <throws>
                    NullPointerException if data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates or
                      the band index are not in bounds.                    
                </throws>
            </javadoc>
            <javadoc line="713">
                Returns the sample in a specified band
                  for the pixel located at (x,y) as a float.
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds.                
                <param>
                    x         The X coordinate of the pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the pixel location.                    
                </param>
                <param>
                    b         The band to return.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <return>
                    the sample in a specified band for the specified pixel.                    
                </return>
                <throws>
                    NullPointerException if data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates or
                      the band index are not in bounds.                    
                </throws>
            </javadoc>
            <method name="getSampleFloat" type="float" line="727">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="b" type="int"/>
                    <param name="data" type="DataBuffer"/>
                </params>
                <declaration name="sample" type="float" line="728"/>
            </method>
            <javadoc line="732">
                Returns the sample in a specified band
                  for a pixel located at (x,y) as a double.
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds.                
                <param>
                    x         The X coordinate of the pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the pixel location.                    
                </param>
                <param>
                    b         The band to return.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <return>
                    the sample in a specified band for the specified pixel.                    
                </return>
                <throws>
                    NullPointerException if data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates or
                      the band index are not in bounds.                    
                </throws>
            </javadoc>
            <method name="getSampleDouble" type="double" line="746">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="b" type="int"/>
                    <param name="data" type="DataBuffer"/>
                </params>
                <declaration name="sample" type="double" line="747"/>
            </method>
            <javadoc line="751">
                Returns the samples for a specified band for the specified rectangle
                  of pixels in an int array, one sample per array element.
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds.                
                <param>
                    x         The X coordinate of the upper left pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the upper left pixel location.                    
                </param>
                <param>
                    w         The width of the pixel rectangle.                    
                </param>
                <param>
                    h         The height of the pixel rectangle.                    
                </param>
                <param>
                    b         The band to return.                    
                </param>
                <param>
                    iArray    If non-null, returns the samples in this array.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <return>
                    the samples for the specified band for the specified region
                      of pixels.                    
                </return>
                <see>
                    #setSamples(int,int,int,int,int,int[],DataBuffer)                    
                </see>
                <throws>
                    NullPointerException if data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates or
                      the band index are not in bounds, or if iArray is too small to
                      hold the output.                    
                </throws>
            </javadoc>
            <method name="getSamples" type="int[]" line="771">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="b" type="int"/>
                    <param name="iArray" type="int"/>
                    <param name="data" type="DataBuffer"/>
                </params>
                <declaration name="pixels" type="int" line="772"/>
                <declaration name="Offset" type="int" line="773"/>
                <declaration name="x1" type="int" line="774"/>
                <declaration name="y1" type="int" line="775"/>
                <scope line="776"/>
                <scope line="781">
                    <scope line="782"/>
                </scope>
            </method>
            <javadoc line="788">
                Returns the samples for a specified band for the specified rectangle
                  of pixels in a float array, one sample per array element.
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds.                
                <param>
                    x         The X coordinate of the upper left pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the upper left pixel location.                    
                </param>
                <param>
                    w         The width of the pixel rectangle.                    
                </param>
                <param>
                    h         The height of the pixel rectangle.                    
                </param>
                <param>
                    b         The band to return.                    
                </param>
                <param>
                    fArray    If non-null, returns the samples in this array.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <return>
                    the samples for the specified band for the specified region
                      of pixels.                    
                </return>
                <see>
                    #setSamples(int,int,int,int,int,float[],DataBuffer)                    
                </see>
                <throws>
                    NullPointerException if data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates or
                      the band index are not in bounds, or if fArray is too small to
                      hold the output.                    
                </throws>
            </javadoc>
            <method name="getSamples" type="float[]" line="808">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="b" type="int"/>
                    <param name="fArray" type="float"/>
                    <param name="data" type="DataBuffer"/>
                </params>
                <declaration name="pixels" type="float" line="809"/>
                <declaration name="Offset" type="int" line="810"/>
                <declaration name="x1" type="int" line="811"/>
                <declaration name="y1" type="int" line="812"/>
                <scope line="813"/>
                <scope line="818">
                    <scope line="819"/>
                </scope>
            </method>
            <javadoc line="825">
                Returns the samples for a specified band for a specified rectangle
                  of pixels in a double array, one sample per array element.
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds.                
                <param>
                    x         The X coordinate of the upper left pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the upper left pixel location.                    
                </param>
                <param>
                    w         The width of the pixel rectangle.                    
                </param>
                <param>
                    h         The height of the pixel rectangle.                    
                </param>
                <param>
                    b         The band to return.                    
                </param>
                <param>
                    dArray    If non-null, returns the samples in this array.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <return>
                    the samples for the specified band for the specified region
                      of pixels.                    
                </return>
                <see>
                    #setSamples(int,int,int,int,int,double[],DataBuffer)                    
                </see>
                <throws>
                    NullPointerException if data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates or
                      the band index are not in bounds, or if dArray is too small to
                      hold the output.                    
                </throws>
            </javadoc>
            <method name="getSamples" type="double[]" line="845">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="b" type="int"/>
                    <param name="dArray" type="double"/>
                    <param name="data" type="DataBuffer"/>
                </params>
                <declaration name="pixels" type="double" line="846"/>
                <declaration name="Offset" type="int" line="847"/>
                <declaration name="x1" type="int" line="848"/>
                <declaration name="y1" type="int" line="849"/>
                <scope line="850"/>
                <scope line="855">
                    <scope line="856"/>
                </scope>
            </method>
            <javadoc line="862">
                Sets a pixel in  the DataBuffer using an int array of samples for input.
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds.                
                <param>
                    x         The X coordinate of the pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the pixel location.                    
                </param>
                <param>
                    iArray    The input samples in an int array.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <see>
                    #getPixel(int,int,int[],DataBuffer)                    
                </see>
                <throws>
                    NullPointerException if iArray or data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates are
                      not in bounds, or if iArray is too small to hold the input.                    
                </throws>
            </javadoc>
            <method name="setPixel" type="void" line="875">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="iArray" type="int"/>
                    <param name="data" type="DataBuffer"/>
                </params>
            </method>
            <javadoc line="878">
                Sets a pixel in the DataBuffer using a float array of samples for input.
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds.                
                <param>
                    x         The X coordinate of the pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the pixel location.                    
                </param>
                <param>
                    fArray    The input samples in a float array.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <see>
                    #getPixel(int,int,float[],DataBuffer)                    
                </see>
                <throws>
                    NullPointerException if fArray or data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates are
                      not in bounds, or if fArray is too small to hold the input.                    
                </throws>
            </javadoc>
            <method name="setPixel" type="void" line="891">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="fArray" type="float"/>
                    <param name="data" type="DataBuffer"/>
                </params>
            </method>
            <javadoc line="894">
                Sets a pixel in the DataBuffer using a double array of samples
                  for input.                
                <param>
                    x         The X coordinate of the pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the pixel location.                    
                </param>
                <param>
                    dArray    The input samples in a double array.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <see>
                    #getPixel(int,int,double[],DataBuffer)                    
                </see>
                <throws>
                    NullPointerException if dArray or data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates are
                      not in bounds, or if fArray is too small to hold the input.                    
                </throws>
            </javadoc>
            <method name="setPixel" type="void" line="906">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="dArray" type="double"/>
                    <param name="data" type="DataBuffer"/>
                </params>
            </method>
            <javadoc line="909">
                Sets all samples for a rectangle of pixels from an int array containing
                  one sample per array element.
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds.                
                <param>
                    x         The X coordinate of the upper left pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the upper left pixel location.                    
                </param>
                <param>
                    w         The width of the pixel rectangle.                    
                </param>
                <param>
                    h         The height of the pixel rectangle.                    
                </param>
                <param>
                    iArray    The input samples in an int array.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <see>
                    #getPixels(int,int,int,int,int[],DataBuffer)                    
                </see>
                <throws>
                    NullPointerException if iArray or data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates are
                      not in bounds, or if iArray is too small to hold the input.                    
                </throws>
            </javadoc>
            <method name="setPixels" type="void" line="925">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="iArray" type="int"/>
                    <param name="data" type="DataBuffer"/>
                </params>
                <declaration name="Offset" type="int" line="926"/>
                <declaration name="x1" type="int" line="927"/>
                <declaration name="y1" type="int" line="928"/>
                <scope line="929"/>
                <scope line="932">
                    <scope line="933">
                        <scope line="934"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="940">
                Sets all samples for a rectangle of pixels from a float array containing
                  one sample per array element.
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds.                
                <param>
                    x         The X coordinate of the upper left pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the upper left pixel location.                    
                </param>
                <param>
                    w         The width of the pixel rectangle.                    
                </param>
                <param>
                    h         The height of the pixel rectangle.                    
                </param>
                <param>
                    fArray    The input samples in a float array.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <see>
                    #getPixels(int,int,int,int,float[],DataBuffer)                    
                </see>
                <throws>
                    NullPointerException if fArray or data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates are
                      not in bounds, or if fArray is too small to hold the input.                    
                </throws>
            </javadoc>
            <method name="setPixels" type="void" line="956">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="fArray" type="float"/>
                    <param name="data" type="DataBuffer"/>
                </params>
                <declaration name="Offset" type="int" line="957"/>
                <declaration name="x1" type="int" line="958"/>
                <declaration name="y1" type="int" line="959"/>
                <scope line="960"/>
                <scope line="963">
                    <scope line="964">
                        <scope line="965"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="971">
                Sets all samples for a rectangle of pixels from a double array
                  containing one sample per array element.
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds.                
                <param>
                    x         The X coordinate of the upper left pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the upper left pixel location.                    
                </param>
                <param>
                    w         The width of the pixel rectangle.                    
                </param>
                <param>
                    h         The height of the pixel rectangle.                    
                </param>
                <param>
                    dArray    The input samples in a double array.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <see>
                    #getPixels(int,int,int,int,double[],DataBuffer)                    
                </see>
                <throws>
                    NullPointerException if dArray or data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates are
                      not in bounds, or if dArray is too small to hold the input.                    
                </throws>
            </javadoc>
            <method name="setPixels" type="void" line="987">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="dArray" type="double"/>
                    <param name="data" type="DataBuffer"/>
                </params>
                <declaration name="Offset" type="int" line="988"/>
                <declaration name="x1" type="int" line="989"/>
                <declaration name="y1" type="int" line="990"/>
                <scope line="991"/>
                <scope line="994">
                    <scope line="995">
                        <scope line="996"/>
                    </scope>
                </scope>
            </method>
            <method name="setSample" type="void" line="1002"/>
            <javadoc line="1002">
                Sets a sample in the specified band for the pixel located at (x,y)
                  in the DataBuffer using an int for input.
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds.                
                <param>
                    x         The X coordinate of the pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the pixel location.                    
                </param>
                <param>
                    b         The band to set.                    
                </param>
                <param>
                    s         The input sample as an int.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <see>
                    #getSample(int,int,int,DataBuffer)                    
                </see>
                <throws>
                    NullPointerException if data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates or
                      the band index are not in bounds.                    
                </throws>
            </javadoc>
            <javadoc line="1018">
                Sets a sample in the specified band for the pixel located at (x,y)
                  in the DataBuffer using a float for input.
                  The default implementation of this method casts the input
                  float sample to an int and then calls the
                  &lt;code&gt;setSample(int, int, int, DataBuffer)&lt;/code&gt; method using
                  that int value.
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds.                
                <param>
                    x         The X coordinate of the pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the pixel location.                    
                </param>
                <param>
                    b         The band to set.                    
                </param>
                <param>
                    s         The input sample as a float.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <see>
                    #getSample(int,int,int,DataBuffer)                    
                </see>
                <throws>
                    NullPointerException if data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates or
                      the band index are not in bounds.                    
                </throws>
            </javadoc>
            <method name="setSample" type="void" line="1037">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="b" type="int"/>
                    <param name="s" type="float"/>
                    <param name="data" type="DataBuffer"/>
                </params>
                <declaration name="sample" type="int" line="1038"/>
            </method>
            <javadoc line="1041">
                Sets a sample in the specified band for the pixel located at (x,y)
                  in the DataBuffer using a double for input.
                  The default implementation of this method casts the input
                  double sample to an int and then calls the
                  &lt;code&gt;setSample(int, int, int, DataBuffer)&lt;/code&gt; method using
                  that int value.
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds.                
                <param>
                    x         The X coordinate of the pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the pixel location.                    
                </param>
                <param>
                    b         The band to set.                    
                </param>
                <param>
                    s         The input sample as a double.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <see>
                    #getSample(int,int,int,DataBuffer)                    
                </see>
                <throws>
                    NullPointerException if data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates or
                      the band index are not in bounds.                    
                </throws>
            </javadoc>
            <method name="setSample" type="void" line="1060">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="b" type="int"/>
                    <param name="s" type="double"/>
                    <param name="data" type="DataBuffer"/>
                </params>
                <declaration name="sample" type="int" line="1061"/>
            </method>
            <javadoc line="1064">
                Sets the samples in the specified band for the specified rectangle
                  of pixels from an int array containing one sample per array element.
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds.                
                <param>
                    x         The X coordinate of the upper left pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the upper left pixel location.                    
                </param>
                <param>
                    w         The width of the pixel rectangle.                    
                </param>
                <param>
                    h         The height of the pixel rectangle.                    
                </param>
                <param>
                    b         The band to set.                    
                </param>
                <param>
                    iArray    The input samples in an int array.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <see>
                    #getSamples(int,int,int,int,int,int[],DataBuffer)                    
                </see>
                <throws>
                    NullPointerException if iArray or data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates or
                      the band index are not in bounds, or if iArray is too small to
                      hold the input.                    
                </throws>
            </javadoc>
            <method name="setSamples" type="void" line="1082">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="b" type="int"/>
                    <param name="iArray" type="int"/>
                    <param name="data" type="DataBuffer"/>
                </params>
                <declaration name="Offset" type="int" line="1083"/>
                <declaration name="x1" type="int" line="1084"/>
                <declaration name="y1" type="int" line="1085"/>
                <scope line="1086"/>
                <scope line="1089">
                    <scope line="1090"/>
                </scope>
            </method>
            <javadoc line="1095">
                Sets the samples in the specified band for the specified rectangle
                  of pixels from a float array containing one sample per array element.
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds.                
                <param>
                    x         The X coordinate of the upper left pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the upper left pixel location.                    
                </param>
                <param>
                    w         The width of the pixel rectangle.                    
                </param>
                <param>
                    h         The height of the pixel rectangle.                    
                </param>
                <param>
                    b         The band to set.                    
                </param>
                <param>
                    fArray    The input samples in a float array.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <see>
                    #getSamples(int,int,int,int,int,float[],DataBuffer)                    
                </see>
                <throws>
                    NullPointerException if fArray or data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates or
                      the band index are not in bounds, or if fArray is too small to
                      hold the input.                    
                </throws>
            </javadoc>
            <method name="setSamples" type="void" line="1113">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="b" type="int"/>
                    <param name="fArray" type="float"/>
                    <param name="data" type="DataBuffer"/>
                </params>
                <declaration name="Offset" type="int" line="1114"/>
                <declaration name="x1" type="int" line="1115"/>
                <declaration name="y1" type="int" line="1116"/>
                <scope line="1117"/>
                <scope line="1120">
                    <scope line="1121"/>
                </scope>
            </method>
            <javadoc line="1126">
                Sets the samples in the specified band for the specified rectangle
                  of pixels from a double array containing one sample per array element.
                  ArrayIndexOutOfBoundsException may be thrown if the coordinates are
                  not in bounds.                
                <param>
                    x         The X coordinate of the upper left pixel location.                    
                </param>
                <param>
                    y         The Y coordinate of the upper left pixel location.                    
                </param>
                <param>
                    w         The width of the pixel rectangle.                    
                </param>
                <param>
                    h         The height of the pixel rectangle.                    
                </param>
                <param>
                    b         The band to set.                    
                </param>
                <param>
                    dArray    The input samples in a double array.                    
                </param>
                <param>
                    data      The DataBuffer containing the image data.                    
                </param>
                <see>
                    #getSamples(int,int,int,int,int,double[],DataBuffer)                    
                </see>
                <throws>
                    NullPointerException if dArray or data is null.                    
                </throws>
                <throws>
                    ArrayIndexOutOfBoundsException if the coordinates or
                      the band index are not in bounds, or if dArray is too small to
                      hold the input.                    
                </throws>
            </javadoc>
            <method name="setSamples" type="void" line="1144">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="b" type="int"/>
                    <param name="dArray" type="double"/>
                    <param name="data" type="DataBuffer"/>
                </params>
                <declaration name="Offset" type="int" line="1145"/>
                <declaration name="x1" type="int" line="1146"/>
                <declaration name="y1" type="int" line="1147"/>
                <scope line="1148"/>
                <scope line="1151">
                    <scope line="1152"/>
                </scope>
            </method>
            <method name="createCompatibleSampleModel" type="SampleModel" line="1157"/>
            <javadoc line="1157">
                Creates a SampleModel which describes data in this SampleModel&apos;s
                  format, but with a different width and height.                
                <param>
                    w the width of the image data                    
                </param>
                <param>
                    h the height of the image data                    
                </param>
                <return>
                    a <code>SampleModel</code> describing the same image
                      data as this <code>SampleModel</code>, but with a
                      different size.                    
                </return>
            </javadoc>
            <method name="createSubsetSampleModel" type="SampleModel" line="1167"/>
            <javadoc line="1167">
                Creates a new SampleModel
                  with a subset of the bands of this
                  SampleModel.                
                <param>
                    bands the subset of bands of this <code>SampleModel</code>                    
                </param>
                <return>
                    a <code>SampleModel</code> with a subset of bands of this
                      <code>SampleModel</code>.                    
                </return>
            </javadoc>
            <method name="createDataBuffer" type="DataBuffer" line="1176"/>
            <javadoc line="1176">
                Creates a DataBuffer that corresponds to this SampleModel.
                  The DataBuffer&apos;s width and height will match this SampleModel&apos;s.                
                <return>
                    a <code>DataBuffer</code> corresponding to this
                      <code>SampleModel</code>.                    
                </return>
            </javadoc>
            <method name="getSampleSize" type="int[]" line="1183"/>
            <javadoc line="1183">
                Returns the size in bits of samples for all bands.                
                <return>
                    the size of samples for all bands.                    
                </return>
            </javadoc>
            <method name="getSampleSize" type="int" line="1188"/>
            <javadoc line="1188">
                Returns the size in bits of samples for the specified band.                
                <param>
                    band the specified band                    
                </param>
                <return>
                    the size of the samples of the specified band.                    
                </return>
            </javadoc>
        </class>
    </source>