<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.image">
        <class name="ShortLookupTable" line="29">
            <extends class="LookupTable"/>
            <javadoc line="29">
                This class defines a lookup table object.  The output of a
                  lookup operation using an object of this class is interpreted
                  as an unsigned short quantity.  The lookup table contains short
                  data arrays for one or more bands (or components) of an image,
                  and it contains an offset which will be subtracted from the
                  input values before indexing the arrays.  This allows an array
                  smaller than the native data size to be provided for a
                  constrained input.  If there is only one array in the lookup
                  table, it will be applied to all bands.                
                <see>
                    ByteLookupTable                    
                </see>
                <see>
                    LookupOp                    
                </see>
            </javadoc>
            <declaration name="data" type="short" line="45"/>
            <javadoc line="45">
                Constants                
            </javadoc>
            <javadoc line="51">
                Constructs a ShortLookupTable object from an array of short
                  arrays representing a lookup table for each
                  band.  The offset will be subtracted from the input
                  values before indexing into the arrays.  The number of
                  bands is the length of the data argument.  The
                  data array for each band is stored as a reference.                
                <param>
                    offset the value subtracted from the input values
                      before indexing into the arrays                    
                </param>
                <param>
                    data an array of short arrays representing a lookup
                      table for each band                    
                </param>
            </javadoc>
            <method name="ShortLookupTable" type="constructor" line="63">
                <params>
                    <param name="offset" type="int"/>
                    <param name="data" type="short"/>
                </params>
                <comment line="69">
                    Allocate the array and copy the data reference                    
                </comment>
                <scope line="69"/>
            </method>
            <javadoc line="74">
                Constructs a ShortLookupTable object from an array
                  of shorts representing a lookup table for each
                  band.  The offset will be subtracted from the input
                  values before indexing into the array.  The
                  data array is stored as a reference.                
                <param>
                    offset the value subtracted from the input values
                      before indexing into the arrays                    
                </param>
                <param>
                    data an array of shorts                    
                </param>
            </javadoc>
            <method name="ShortLookupTable" type="constructor" line="84">
                <params>
                    <param name="offset" type="int"/>
                    <param name="data" type="short"/>
                </params>
            </method>
            <javadoc line="92">
                Returns the lookup table data by reference.  If this ShortLookupTable
                  was constructed using a single short array, the length of the returned
                  array is one.                
                <return>
                    ShortLookupTable data array.                    
                </return>
            </javadoc>
            <method name="getTable" type="short[][]" line="98"/>
            <javadoc line="102">
                Returns an array of samples of a pixel, translated with the lookup
                  table. The source and destination array can be the same array.
                  Array &lt;code&gt;dst&lt;/code&gt; is returned.                
                <param>
                    src the source array.                    
                </param>
                <param>
                    dst the destination array. This array must be at least as
                      long as <code>src</code>.  If <code>dst</code> is
                      <code>null</code>, a new array will be allocated having the
                      same length as <code>src</code>.                    
                </param>
                <return>
                    the array <code>dst</code>, an <code>int</code> array of
                      samples.                    
                </return>
                <exception>
                    ArrayIndexOutOfBoundsException if <code>src</code> is
                      longer than <code>dst</code> or if for any element
                      <code>i</code> of <code>src</code>,
                      <code>(src[i]&0xffff)-offset</code> is either less than
                      zero or greater than or equal to the length of the
                      lookup table for any band.                    
                </exception>
            </javadoc>
            <method name="lookupPixel" type="int[]" line="121">
                <params>
                    <param name="src" type="int[]"/>
                    <param name="dst" type="int[]"/>
                </params>
                <comment line="124">
                    Need to alloc a new destination array                    
                </comment>
                <comment line="129">
                    Apply one LUT to all channels                    
                </comment>
                <scope line="122"/>
                <scope line="127">
                    <scope line="129">
                        <declaration name="s" type="int" line="130"/>
                        <scope line="131"/>
                    </scope>
                </scope>
                <scope line="139">
                    <scope line="140">
                        <declaration name="s" type="int" line="141"/>
                        <scope line="142"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="153">
                Returns an array of samples of a pixel, translated with the lookup
                  table. The source and destination array can be the same array.
                  Array &lt;code&gt;dst&lt;/code&gt; is returned.                
                <param>
                    src the source array.                    
                </param>
                <param>
                    dst the destination array. This array must be at least as
                      long as <code>src</code>.  If <code>dst</code> is
                      <code>null</code>, a new array will be allocated having the
                      same length as <code>src</code>.                    
                </param>
                <return>
                    the array <code>dst</code>, an <code>int</code> array of
                      samples.                    
                </return>
                <exception>
                    ArrayIndexOutOfBoundsException if <code>src</code> is
                      longer than <code>dst</code> or if for any element
                      <code>i</code> of <code>src</code>,
                      <code>(src[i]&0xffff)-offset</code> is either less than
                      zero or greater than or equal to the length of the
                      lookup table for any band.                    
                </exception>
            </javadoc>
            <method name="lookupPixel" type="short[]" line="172">
                <params>
                    <param name="src" type="short[]"/>
                    <param name="dst" type="short[]"/>
                </params>
                <comment line="175">
                    Need to alloc a new destination array                    
                </comment>
                <comment line="180">
                    Apply one LUT to all channels                    
                </comment>
                <scope line="173"/>
                <scope line="178">
                    <scope line="180">
                        <declaration name="s" type="int" line="181"/>
                        <scope line="182"/>
                    </scope>
                </scope>
                <scope line="190">
                    <scope line="191">
                        <declaration name="s" type="int" line="192"/>
                        <scope line="193"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>