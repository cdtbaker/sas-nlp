<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.image">
        <interface name="ImageProducer">
            <javadoc line="2">
                The interface for objects which can produce the image data for Images.
                  Each image contains an ImageProducer which is used to reconstruct
                  the image whenever it is needed, for example, when a new size of the
                  Image is scaled, or when the width or height of the Image is being
                  requested.                
                <see>
                    ImageConsumer                    
                </see>
                <author>
                    Jim Graham                    
                </author>
            </javadoc>
            <method name="addConsumer" type="void" line="12"/>
            <javadoc line="12">
                Registers an &lt;code&gt;ImageConsumer&lt;/code&gt; with the
                  &lt;code&gt;ImageProducer&lt;/code&gt; for access to the image data
                  during a later reconstruction of the &lt;code&gt;Image&lt;/code&gt;.
                  The &lt;code&gt;ImageProducer&lt;/code&gt; may, at its discretion,
                  start delivering the image data to the consumer
                  using the &lt;code&gt;ImageConsumer&lt;/code&gt; interface immediately,
                  or when the next available image reconstruction is triggered
                  by a call to the &lt;code&gt;startProduction&lt;/code&gt; method.                
                <param>
                    ic the specified &lt;code&gt;ImageConsumer&lt;/code&gt;                    
                </param>
                <see>
                    #startProduction                    
                </see>
            </javadoc>
            <method name="isConsumer" type="boolean" line="25"/>
            <javadoc line="25">
                Determines if a specified &lt;code&gt;ImageConsumer&lt;/code&gt;
                  object is currently registered with this
                  &lt;code&gt;ImageProducer&lt;/code&gt; as one of its consumers.                
                <param>
                    ic the specified &lt;code&gt;ImageConsumer&lt;/code&gt;                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if the specified
                      &lt;code&gt;ImageConsumer&lt;/code&gt; is registered with
                      this &lt;code&gt;ImageProducer&lt;/code&gt;;
                      &lt;code&gt;false&lt;/code&gt; otherwise.                    
                </return>
            </javadoc>
            <method name="removeConsumer" type="void" line="36"/>
            <javadoc line="36">
                Removes the specified &lt;code&gt;ImageConsumer&lt;/code&gt; object
                  from the list of consumers currently registered to
                  receive image data.  It is not considered an error
                  to remove a consumer that is not currently registered.
                  The &lt;code&gt;ImageProducer&lt;/code&gt; should stop sending data
                  to this consumer as soon as is feasible.                
                <param>
                    ic the specified &lt;code&gt;ImageConsumer&lt;/code&gt;                    
                </param>
            </javadoc>
            <method name="startProduction" type="void" line="46"/>
            <javadoc line="46">
                Registers the specified &lt;code&gt;ImageConsumer&lt;/code&gt; object
                  as a consumer and starts an immediate reconstruction of
                  the image data which will then be delivered to this
                  consumer and any other consumer which might have already
                  been registered with the producer.  This method differs
                  from the addConsumer method in that a reproduction of
                  the image data should be triggered as soon as possible.                
                <param>
                    ic the specified &lt;code&gt;ImageConsumer&lt;/code&gt;                    
                </param>
                <see>
                    #addConsumer                    
                </see>
            </javadoc>
            <method name="requestTopDownLeftRightResend" type="void" line="58"/>
            <javadoc line="58">
                Requests, on behalf of the &lt;code&gt;ImageConsumer&lt;/code&gt;,
                  that the &lt;code&gt;ImageProducer&lt;/code&gt; attempt to resend
                  the image data one more time in TOPDOWNLEFTRIGHT order
                  so that higher quality conversion algorithms which
                  depend on receiving pixels in order can be used to
                  produce a better output version of the image.  The
                  &lt;code&gt;ImageProducer&lt;/code&gt; is free to
                  ignore this call if it cannot resend the data in that
                  order.  If the data can be resent, the
                  &lt;code&gt;ImageProducer&lt;/code&gt; should respond by executing
                  the following minimum set of &lt;code&gt;ImageConsumer&lt;/code&gt;
                  method calls:
                  &lt;pre&gt;
                  ic.setHints(TOPDOWNLEFTRIGHT | &lt; otherhints &gt;);
                  ic.setPixels(...);      // As many times as needed
                  ic.imageComplete();
                  &lt;/pre&gt;                
                <param>
                    ic the specified &lt;code&gt;ImageConsumer&lt;/code&gt;                    
                </param>
                <see>
                    ImageConsumer#setHints                    
                </see>
            </javadoc>
        </interface>
    </source>