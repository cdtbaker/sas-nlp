<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.image">
        <import package="java.awt.Image"/>
        <interface name="ImageObserver">
            <javadoc line="3">
                An asynchronous update interface for receiving notifications about
                  Image information as the Image is constructed.                
                <author>
                    Jim Graham                    
                </author>
            </javadoc>
            <method name="imageUpdate" type="boolean" line="9"/>
            <javadoc line="9">
                This method is called when information about an image which was
                  previously requested using an asynchronous interface becomes
                  available.  Asynchronous interfaces are method calls such as
                  getWidth(ImageObserver) and drawImage(img, x, y, ImageObserver)
                  which take an ImageObserver object as an argument.  Those methods
                  register the caller as interested either in information about
                  the overall image itself (in the case of getWidth(ImageObserver))
                  or about an output version of an image (in the case of the
                  drawImage(img, x, y, [w, h,] ImageObserver) call).
                  &lt;p&gt;This method
                  should return true if further updates are needed or false if the
                  required information has been acquired.  The image which was being
                  tracked is passed in using the img argument.  Various constants
                  are combined to form the infoflags argument which indicates what
                  information about the image is now available.  The interpretation
                  of the x, y, width, and height arguments depends on the contents
                  of the infoflags argument.
                  &lt;p&gt;
                  The &lt;code&gt;infoflags&lt;/code&gt; argument should be the bitwise inclusive
                  &lt;b&gt;OR&lt;/b&gt; of the following flags: &lt;code&gt;WIDTH&lt;/code&gt;,
                  &lt;code&gt;HEIGHT&lt;/code&gt;, &lt;code&gt;PROPERTIES&lt;/code&gt;, &lt;code&gt;SOMEBITS&lt;/code&gt;,
                  &lt;code&gt;FRAMEBITS&lt;/code&gt;, &lt;code&gt;ALLBITS&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt;,
                  &lt;code&gt;ABORT&lt;/code&gt;.                
                <param>
                    img   the image being observed.                    
                </param>
                <param>
                    infoflags   the bitwise inclusive OR of the following
                      flags:  <code>WIDTH</code>, <code>HEIGHT</code>,
                      <code>PROPERTIES</code>, <code>SOMEBITS</code>,
                      <code>FRAMEBITS</code>, <code>ALLBITS</code>,
                      <code>ERROR</code>, <code>ABORT</code>.                    
                </param>
                <param>
                    x   the <i>x</i> coordinate.                    
                </param>
                <param>
                    y   the <i>y</i> coordinate.                    
                </param>
                <param>
                    width    the width.                    
                </param>
                <param>
                    height   the height.                    
                </param>
                <return>
                    <code>false</code> if the infoflags indicate that the
                      image is completely loaded; <code>true</code> otherwise.                    
                </return>
                <see>
                    #WIDTH                    
                </see>
                <see>
                    #HEIGHT                    
                </see>
                <see>
                    #PROPERTIES                    
                </see>
                <see>
                    #SOMEBITS                    
                </see>
                <see>
                    #FRAMEBITS                    
                </see>
                <see>
                    #ALLBITS                    
                </see>
                <see>
                    #ERROR                    
                </see>
                <see>
                    #ABORT                    
                </see>
                <see>
                    Image#getWidth                    
                </see>
                <see>
                    Image#getHeight                    
                </see>
                <see>
                    java.awt.Graphics#drawImage                    
                </see>
            </javadoc>
            <declaration name="WIDTH" type="int" line="58"/>
            <javadoc line="58">
                This flag in the infoflags argument to imageUpdate indicates that
                  the width of the base image is now available and can be taken
                  from the width argument to the imageUpdate callback method.                
                <see>
                    Image#getWidth                    
                </see>
                <see>
                    #imageUpdate                    
                </see>
            </javadoc>
            <declaration name="HEIGHT" type="int" line="66"/>
            <javadoc line="66">
                This flag in the infoflags argument to imageUpdate indicates that
                  the height of the base image is now available and can be taken
                  from the height argument to the imageUpdate callback method.                
                <see>
                    Image#getHeight                    
                </see>
                <see>
                    #imageUpdate                    
                </see>
            </javadoc>
            <declaration name="PROPERTIES" type="int" line="74"/>
            <javadoc line="74">
                This flag in the infoflags argument to imageUpdate indicates that
                  the properties of the image are now available.                
                <see>
                    Image#getProperty                    
                </see>
                <see>
                    #imageUpdate                    
                </see>
            </javadoc>
            <declaration name="SOMEBITS" type="int" line="81"/>
            <javadoc line="81">
                This flag in the infoflags argument to imageUpdate indicates that
                  more pixels needed for drawing a scaled variation of the image
                  are available.  The bounding box of the new pixels can be taken
                  from the x, y, width, and height arguments to the imageUpdate
                  callback method.                
                <see>
                    java.awt.Graphics#drawImage                    
                </see>
                <see>
                    #imageUpdate                    
                </see>
            </javadoc>
            <declaration name="FRAMEBITS" type="int" line="91"/>
            <javadoc line="91">
                This flag in the infoflags argument to imageUpdate indicates that
                  another complete frame of a multi-frame image which was previously
                  drawn is now available to be drawn again.  The x, y, width, and height
                  arguments to the imageUpdate callback method should be ignored.                
                <see>
                    java.awt.Graphics#drawImage                    
                </see>
                <see>
                    #imageUpdate                    
                </see>
            </javadoc>
            <declaration name="ALLBITS" type="int" line="100"/>
            <javadoc line="100">
                This flag in the infoflags argument to imageUpdate indicates that
                  a static image which was previously drawn is now complete and can
                  be drawn again in its final form.  The x, y, width, and height
                  arguments to the imageUpdate callback method should be ignored.                
                <see>
                    java.awt.Graphics#drawImage                    
                </see>
                <see>
                    #imageUpdate                    
                </see>
            </javadoc>
            <declaration name="ERROR" type="int" line="109"/>
            <javadoc line="109">
                This flag in the infoflags argument to imageUpdate indicates that
                  an image which was being tracked asynchronously has encountered
                  an error.  No further information will become available and
                  drawing the image will fail.
                  As a convenience, the ABORT flag will be indicated at the same
                  time to indicate that the image production was aborted.                
                <see>
                    #imageUpdate                    
                </see>
            </javadoc>
            <declaration name="ABORT" type="int" line="119"/>
            <javadoc line="119">
                This flag in the infoflags argument to imageUpdate indicates that
                  an image which was being tracked asynchronously was aborted before
                  production was complete.  No more information will become available
                  without further action to trigger another image production sequence.
                  If the ERROR flag was not also set in this image update, then
                  accessing any of the data in the image will restart the production
                  again, probably from the beginning.                
                <see>
                    #imageUpdate                    
                </see>
            </javadoc>
        </interface>
    </source>