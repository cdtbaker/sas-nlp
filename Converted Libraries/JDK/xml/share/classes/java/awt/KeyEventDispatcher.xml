<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt">
        <import package="java.awt.event.KeyEvent"/>
        <interface name="KeyEventDispatcher">
            <javadoc line="30">
                A KeyEventDispatcher cooperates with the current KeyboardFocusManager in the
                  targeting and dispatching of all KeyEvents. KeyEventDispatchers registered
                  with the current KeyboardFocusManager will receive KeyEvents before they are
                  dispatched to their targets, allowing each KeyEventDispatcher to retarget
                  the event, consume it, dispatch the event itself, or make other changes.
                  &lt;p&gt;
                  Note that KeyboardFocusManager itself implements KeyEventDispatcher. By
                  default, the current KeyboardFocusManager will be the sink for all KeyEvents
                  not dispatched by the registered KeyEventDispatchers. The current
                  KeyboardFocusManager cannot be completely deregistered as a
                  KeyEventDispatcher. However, if a KeyEventDispatcher reports that it
                  dispatched the KeyEvent, regardless of whether it actually did so, the
                  KeyboardFocusManager will take no further action with regard to the
                  KeyEvent. (While it is possible for client code to register the current
                  KeyboardFocusManager as a KeyEventDispatcher one or more times, this is
                  usually unnecessary and not recommended.)                
                <author>
                    David Mendenhall                    
                </author>
                <see>
                    KeyboardFocusManager#addKeyEventDispatcher                    
                </see>
                <see>
                    KeyboardFocusManager#removeKeyEventDispatcher                    
                </see>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="dispatchKeyEvent" type="boolean" line="56"/>
            <javadoc line="56">
                This method is called by the current KeyboardFocusManager requesting
                  that this KeyEventDispatcher dispatch the specified event on its behalf.
                  This KeyEventDispatcher is free to retarget the event, consume it,
                  dispatch it itself, or make other changes. This capability is typically
                  used to deliver KeyEvents to Components other than the focus owner. This
                  can be useful when navigating children of non-focusable Windows in an
                  accessible environment, for example. Note that if a KeyEventDispatcher
                  dispatches the KeyEvent itself, it must use &lt;code&gt;redispatchEvent&lt;/code&gt;
                  to prevent the current KeyboardFocusManager from recursively requesting
                  that this KeyEventDispatcher dispatch the event again.
                  &lt;p&gt;
                  If an implementation of this method returns &lt;code&gt;false&lt;/code&gt;, then
                  the KeyEvent is passed to the next KeyEventDispatcher in the chain,
                  ending with the current KeyboardFocusManager. If an implementation
                  returns &lt;code&gt;true&lt;/code&gt;, the KeyEvent is assumed to have been
                  dispatched (although this need not be the case), and the current
                  KeyboardFocusManager will take no further action with regard to the
                  KeyEvent. In such a case,
                  &lt;code&gt;KeyboardFocusManager.dispatchEvent&lt;/code&gt; should return
                  &lt;code&gt;true&lt;/code&gt; as well. If an implementation consumes the KeyEvent,
                  but returns &lt;code&gt;false&lt;/code&gt;, the consumed event will still be passed
                  to the next KeyEventDispatcher in the chain. It is important for
                  developers to check whether the KeyEvent has been consumed before
                  dispatching it to a target. By default, the current KeyboardFocusManager
                  will not dispatch a consumed KeyEvent.                
                <param>
                    e the KeyEvent to dispatch                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if the KeyboardFocusManager should take no
                      further action with regard to the KeyEvent; &lt;code&gt;false&lt;/code&gt;
                      otherwise                    
                </return>
                <see>
                    KeyboardFocusManager#redispatchEvent                    
                </see>
            </javadoc>
        </interface>
    </source>