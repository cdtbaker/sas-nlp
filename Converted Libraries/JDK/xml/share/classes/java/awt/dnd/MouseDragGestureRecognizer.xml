<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.dnd">
        <import package="java.awt.Component"/>
        <import package="java.awt.event.MouseEvent"/>
        <import package="java.awt.event.MouseListener"/>
        <import package="java.awt.event.MouseMotionListener"/>
        <class name="MouseDragGestureRecognizer" line="34">
            <extends class="DragGestureRecognizer"/>
            <implements interface="MouseListener"/>
            <implements interface="MouseMotionListener"/>
            <javadoc line="34">
                This abstract subclass of &lt;code&gt;DragGestureRecognizer&lt;/code&gt;
                  defines a &lt;code&gt;DragGestureRecognizer&lt;/code&gt;
                  for mouse-based gestures.
                  Each platform implements its own concrete subclass of this class,
                  available via the Toolkit.createDragGestureRecognizer() method,
                  to encapsulate
                  the recognition of the platform dependent mouse gesture(s) that initiate
                  a Drag and Drop operation.
                  &lt;p&gt;
                  Mouse drag gesture recognizers should honor the
                  drag gesture motion threshold, available through{@link DragSource#getDragThreshold}.
                  A drag gesture should be recognized only when the distance
                  in either the horizontal or vertical direction between
                  the location of the latest mouse dragged event and the
                  location of the corresponding mouse button pressed event
                  is greater than the drag gesture motion threshold.
                  &lt;p&gt;
                  Drag gesture recognizers created with{@link DragSource#createDefaultDragGestureRecognizer}follow this convention.                
                <author>
                    Laurence P. G. Cable                    
                </author>
                <see>
                    java.awt.dnd.DragGestureListener                    
                </see>
                <see>
                    java.awt.dnd.DragGestureEvent                    
                </see>
                <see>
                    java.awt.dnd.DragSource                    
                </see>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="67"/>
            <javadoc line="69">
                Construct a new &lt;code&gt;MouseDragGestureRecognizer&lt;/code&gt;
                  given the &lt;code&gt;DragSource&lt;/code&gt; for the
                  &lt;code&gt;Component&lt;/code&gt; c, the &lt;code&gt;Component&lt;/code&gt;
                  to observe, the action(s)
                  permitted for this drag operation, and
                  the &lt;code&gt;DragGestureListener&lt;/code&gt; to
                  notify when a drag gesture is detected.
                  &lt;P&gt;                
                <param>
                    ds  The DragSource for the Component c                    
                </param>
                <param>
                    c   The Component to observe                    
                </param>
                <param>
                    act The actions permitted for this Drag                    
                </param>
                <param>
                    dgl The DragGestureListener to notify when a gesture is detected                    
                </param>
            </javadoc>
            <method name="MouseDragGestureRecognizer" type="constructor" line="85">
                <params>
                    <param name="ds" type="DragSource"/>
                    <param name="c" type="Component"/>
                    <param name="act" type="int"/>
                    <param name="dgl" type="DragGestureListener"/>
                </params>
            </method>
            <javadoc line="89">
                Construct a new &lt;code&gt;MouseDragGestureRecognizer&lt;/code&gt;
                  given the &lt;code&gt;DragSource&lt;/code&gt; for
                  the &lt;code&gt;Component&lt;/code&gt; c,
                  the &lt;code&gt;Component&lt;/code&gt; to observe, and the action(s)
                  permitted for this drag operation.
                  &lt;P&gt;                
                <param>
                    ds  The DragSource for the Component c                    
                </param>
                <param>
                    c   The Component to observe                    
                </param>
                <param>
                    act The actions permitted for this drag                    
                </param>
            </javadoc>
            <method name="MouseDragGestureRecognizer" type="constructor" line="101">
                <params>
                    <param name="ds" type="DragSource"/>
                    <param name="c" type="Component"/>
                    <param name="act" type="int"/>
                </params>
            </method>
            <javadoc line="105">
                Construct a new &lt;code&gt;MouseDragGestureRecognizer&lt;/code&gt;
                  given the &lt;code&gt;DragSource&lt;/code&gt; for the
                  &lt;code&gt;Component&lt;/code&gt; c, and the
                  &lt;code&gt;Component&lt;/code&gt; to observe.
                  &lt;P&gt;                
                <param>
                    ds  The DragSource for the Component c                    
                </param>
                <param>
                    c   The Component to observe                    
                </param>
            </javadoc>
            <method name="MouseDragGestureRecognizer" type="constructor" line="115">
                <params>
                    <param name="ds" type="DragSource"/>
                    <param name="c" type="Component"/>
                </params>
            </method>
            <javadoc line="119">
                Construct a new &lt;code&gt;MouseDragGestureRecognizer&lt;/code&gt;
                  given the &lt;code&gt;DragSource&lt;/code&gt; for the &lt;code&gt;Component&lt;/code&gt;.
                  &lt;P&gt;                
                <param>
                    ds  The DragSource for the Component                    
                </param>
            </javadoc>
            <method name="MouseDragGestureRecognizer" type="constructor" line="126">
                <params>
                    <param name="ds" type="DragSource"/>
                </params>
            </method>
            <javadoc line="130">
                register this DragGestureRecognizer&apos;s Listeners with the Component                
            </javadoc>
            <method name="registerListeners" type="void" line="134"/>
            <javadoc line="139">
                unregister this DragGestureRecognizer&apos;s Listeners with the Component
                  subclasses must override this method                
            </javadoc>
            <method name="unregisterListeners" type="void" line="146"/>
            <javadoc line="151">
                Invoked when the mouse has been clicked on a component.
                  &lt;P&gt;                
                <param>
                    e the &lt;code&gt;MouseEvent&lt;/code&gt;                    
                </param>
            </javadoc>
            <method name="mouseClicked" type="void" line="157">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <javadoc line="159">
                Invoked when a mouse button has been
                  pressed on a &lt;code&gt;Component&lt;/code&gt;.
                  &lt;P&gt;                
                <param>
                    e the &lt;code&gt;MouseEvent&lt;/code&gt;                    
                </param>
            </javadoc>
            <method name="mousePressed" type="void" line="166">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <javadoc line="168">
                Invoked when a mouse button has been released on a component.
                  &lt;P&gt;                
                <param>
                    e the &lt;code&gt;MouseEvent&lt;/code&gt;                    
                </param>
            </javadoc>
            <method name="mouseReleased" type="void" line="174">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <javadoc line="176">
                Invoked when the mouse enters a component.
                  &lt;P&gt;                
                <param>
                    e the &lt;code&gt;MouseEvent&lt;/code&gt;                    
                </param>
            </javadoc>
            <method name="mouseEntered" type="void" line="182">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <javadoc line="184">
                Invoked when the mouse exits a component.
                  &lt;P&gt;                
                <param>
                    e the &lt;code&gt;MouseEvent&lt;/code&gt;                    
                </param>
            </javadoc>
            <method name="mouseExited" type="void" line="190">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <javadoc line="192">
                Invoked when a mouse button is pressed on a component.
                  &lt;P&gt;                
                <param>
                    e the &lt;code&gt;MouseEvent&lt;/code&gt;                    
                </param>
            </javadoc>
            <method name="mouseDragged" type="void" line="198">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <javadoc line="200">
                Invoked when the mouse button has been moved on a component
                  (with no buttons no down).
                  &lt;P&gt;                
                <param>
                    e the &lt;code&gt;MouseEvent&lt;/code&gt;                    
                </param>
            </javadoc>
            <method name="mouseMoved" type="void" line="207">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
        </class>
    </source>