<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.dnd">
        <import package="java.awt.event.InputEvent"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Point"/>
        <import package="java.util.TooManyListenersException"/>
        <import package="java.util.ArrayList"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.Serializable"/>
        <class name="DragGestureRecognizer" line="11">
            <implements interface="Serializable"/>
            <javadoc line="11">
                The &lt;code&gt;DragGestureRecognizer&lt;/code&gt; is an
                  abstract base class for the specification
                  of a platform-dependent listener that can be associated with a particular
                  &lt;code&gt;Component&lt;/code&gt; in order to
                  identify platform-dependent drag initiating gestures.
                  &lt;p&gt;
                  The appropriate &lt;code&gt;DragGestureRecognizer&lt;/code&gt;
                  subclass instance is obtained from the{@link DragSource} asssociated with
                  a particular &lt;code&gt;Component&lt;/code&gt;, or from the &lt;code&gt;Toolkit&lt;/code&gt; object via its{@link java.awt.Toolkit#createDragGestureRecognizer createDragGestureRecognizer()}method.
                  &lt;p&gt;
                  Once the &lt;code&gt;DragGestureRecognizer&lt;/code&gt;
                  is associated with a particular &lt;code&gt;Component&lt;/code&gt;
                  it will register the appropriate listener interfaces on that
                  &lt;code&gt;Component&lt;/code&gt;
                  in order to track the input events delivered to the &lt;code&gt;Component&lt;/code&gt;.
                  &lt;p&gt;
                  Once the &lt;code&gt;DragGestureRecognizer&lt;/code&gt; identifies a sequence of events
                  on the &lt;code&gt;Component&lt;/code&gt; as a drag initiating gesture, it will notify
                  its unicast &lt;code&gt;DragGestureListener&lt;/code&gt; by
                  invoking its{@link java.awt.dnd.DragGestureListener#dragGestureRecognized gestureRecognized()}method.
                  &lt;P&gt;
                  When a concrete &lt;code&gt;DragGestureRecognizer&lt;/code&gt;
                  instance detects a drag initiating
                  gesture on the &lt;code&gt;Component&lt;/code&gt; it is associated with,
                  it fires a {@link DragGestureEvent} to
                  the &lt;code&gt;DragGestureListener&lt;/code&gt; registered on
                  its unicast event source for &lt;code&gt;DragGestureListener&lt;/code&gt;
                  events. This &lt;code&gt;DragGestureListener&lt;/code&gt; is responsible
                  for causing the associated
                  &lt;code&gt;DragSource&lt;/code&gt; to start the Drag and Drop operation (if
                  appropriate).
                  &lt;P&gt;                
                <author>
                    Laurence P. G. Cable                    
                </author>
                <see>
                    java.awt.dnd.DragGestureListener                    
                </see>
                <see>
                    java.awt.dnd.DragGestureEvent                    
                </see>
                <see>
                    java.awt.dnd.DragSource                    
                </see>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="50"/>
            <javadoc line="51">
                Construct a new &lt;code&gt;DragGestureRecognizer&lt;/code&gt;
                  given the &lt;code&gt;DragSource&lt;/code&gt; to be used
                  in this Drag and Drop operation, the &lt;code&gt;Component&lt;/code&gt;
                  this &lt;code&gt;DragGestureRecognizer&lt;/code&gt; should &quot;observe&quot;
                  for drag initiating gestures, the action(s) supported
                  for this Drag and Drop operation, and the
                  &lt;code&gt;DragGestureListener&lt;/code&gt; to notify
                  once a drag initiating gesture has been detected.
                  &lt;P&gt;                
                <param>
                    ds  the &lt;code&gt;DragSource&lt;/code&gt; this
                      &lt;code&gt;DragGestureRecognizer&lt;/code&gt;
                      will use to process the Drag and Drop operation                    
                </param>
                <param>
                    c the &lt;code&gt;Component&lt;/code&gt;
                      this &lt;code&gt;DragGestureRecognizer&lt;/code&gt;
                      should &quot;observe&quot; the event stream to,
                      in order to detect a drag initiating gesture.
                      If this value is &lt;code&gt;null&lt;/code&gt;, the
                      &lt;code&gt;DragGestureRecognizer&lt;/code&gt;
                      is not associated with any &lt;code&gt;Component&lt;/code&gt;.                    
                </param>
                <param>
                    sa  the set (logical OR) of the
                      &lt;code&gt;DnDConstants&lt;/code&gt;
                      that this Drag and Drop operation will support                    
                </param>
                <param>
                    dgl the &lt;code&gt;DragGestureRecognizer&lt;/code&gt;
                      to notify when a drag gesture is detected
                      &lt;P&gt;                    
                </param>
                <throws>
                    &lt;code&gt;IllegalArgumentException&lt;/code&gt;
                      if ds is &lt;code&gt;null&lt;/code&gt;.                    
                </throws>
            </javadoc>
            <method name="DragGestureRecognizer" type="constructor" line="80">
                <params>
                    <param name="ds" type="DragSource"/>
                    <param name="c" type="Component"/>
                    <param name="sa" type="int"/>
                    <param name="dgl" type="DragGestureListener"/>
                </params>
                <scope line="86"/>
                <scope line="89"/>
            </method>
            <javadoc line="92">
                Construct a new &lt;code&gt;DragGestureRecognizer&lt;/code&gt;
                  given the &lt;code&gt;DragSource&lt;/code&gt; to be used in this
                  Drag and Drop
                  operation, the &lt;code&gt;Component&lt;/code&gt; this
                  &lt;code&gt;DragGestureRecognizer&lt;/code&gt; should &quot;observe&quot;
                  for drag initiating gestures, and the action(s)
                  supported for this Drag and Drop operation.
                  &lt;P&gt;                
                <param>
                    ds  the &lt;code&gt;DragSource&lt;/code&gt; this
                      &lt;code&gt;DragGestureRecognizer&lt;/code&gt; will use to
                      process the Drag and Drop operation                    
                </param>
                <param>
                    c   the &lt;code&gt;Component&lt;/code&gt; this
                      &lt;code&gt;DragGestureRecognizer&lt;/code&gt; should &quot;observe&quot; the event
                      stream to, in order to detect a drag initiating gesture.
                      If this value is &lt;code&gt;null&lt;/code&gt;, the
                      &lt;code&gt;DragGestureRecognizer&lt;/code&gt;
                      is not associated with any &lt;code&gt;Component&lt;/code&gt;.                    
                </param>
                <param>
                    sa the set (logical OR) of the &lt;code&gt;DnDConstants&lt;/code&gt;
                      that this Drag and Drop operation will support
                      &lt;P&gt;                    
                </param>
                <throws>
                    &lt;code&gt;IllegalArgumentException&lt;/code&gt;
                      if ds is &lt;code&gt;null&lt;/code&gt;.                    
                </throws>
            </javadoc>
            <method name="DragGestureRecognizer" type="constructor" line="116">
                <params>
                    <param name="ds" type="DragSource"/>
                    <param name="c" type="Component"/>
                    <param name="sa" type="int"/>
                </params>
            </method>
            <javadoc line="119">
                Construct a new &lt;code&gt;DragGestureRecognizer&lt;/code&gt;
                  given the &lt;code&gt;DragSource&lt;/code&gt; to be used
                  in this Drag and Drop operation, and
                  the &lt;code&gt;Component&lt;/code&gt; this
                  &lt;code&gt;DragGestureRecognizer&lt;/code&gt;
                  should &quot;observe&quot; for drag initiating gestures.
                  &lt;P&gt;                
                <param>
                    ds the &lt;code&gt;DragSource&lt;/code&gt; this
                      &lt;code&gt;DragGestureRecognizer&lt;/code&gt;
                      will use to process the Drag and Drop operation                    
                </param>
                <param>
                    c the &lt;code&gt;Component&lt;/code&gt;
                      this &lt;code&gt;DragGestureRecognizer&lt;/code&gt;
                      should &quot;observe&quot; the event stream to,
                      in order to detect a drag initiating gesture.
                      If this value is &lt;code&gt;null&lt;/code&gt;,
                      the &lt;code&gt;DragGestureRecognizer&lt;/code&gt;
                      is not associated with any &lt;code&gt;Component&lt;/code&gt;.
                      &lt;P&gt;                    
                </param>
                <throws>
                    &lt;code&gt;IllegalArgumentException&lt;/code&gt;
                      if ds is &lt;code&gt;null&lt;/code&gt;.                    
                </throws>
            </javadoc>
            <method name="DragGestureRecognizer" type="constructor" line="141">
                <params>
                    <param name="ds" type="DragSource"/>
                    <param name="c" type="Component"/>
                </params>
            </method>
            <javadoc line="144">
                Construct a new &lt;code&gt;DragGestureRecognizer&lt;/code&gt;
                  given the &lt;code&gt;DragSource&lt;/code&gt; to be used in this
                  Drag and Drop operation.
                  &lt;P&gt;                
                <param>
                    ds the &lt;code&gt;DragSource&lt;/code&gt; this
                      &lt;code&gt;DragGestureRecognizer&lt;/code&gt; will
                      use to process the Drag and Drop operation
                      &lt;P&gt;                    
                </param>
                <throws>
                    &lt;code&gt;IllegalArgumentException&lt;/code&gt;
                      if ds is &lt;code&gt;null&lt;/code&gt;.                    
                </throws>
            </javadoc>
            <method name="DragGestureRecognizer" type="constructor" line="156">
                <params>
                    <param name="ds" type="DragSource"/>
                </params>
            </method>
            <method name="registerListeners" type="void" line="159"/>
            <javadoc line="159">
                register this DragGestureRecognizer&apos;s Listeners with the Component
                  subclasses must override this method                
            </javadoc>
            <method name="unregisterListeners" type="void" line="164"/>
            <javadoc line="164">
                unregister this DragGestureRecognizer&apos;s Listeners with the Component
                  subclasses must override this method                
            </javadoc>
            <javadoc line="169">
                This method returns the &lt;code&gt;DragSource&lt;/code&gt;
                  this &lt;code&gt;DragGestureRecognizer&lt;/code&gt;
                  will use in order to process the Drag and Drop
                  operation.
                  &lt;P&gt;                
                <return>
                    the DragSource                    
                </return>
            </javadoc>
            <method name="getDragSource" type="DragSource" line="177"/>
            <javadoc line="180">
                This method returns the &lt;code&gt;Component&lt;/code&gt;
                  that is to be &quot;observed&quot; by the
                  &lt;code&gt;DragGestureRecognizer&lt;/code&gt;
                  for drag initiating gestures.
                  &lt;P&gt;                
                <return>
                    The Component this DragGestureRecognizer
                      is associated with                    
                </return>
            </javadoc>
            <method name="getComponent" type="Component" line="189"/>
            <javadoc line="192">
                set the Component that the DragGestureRecognizer is associated with
                  registerListeners() and unregisterListeners() are called as a side
                  effect as appropriate.
                  &lt;P&gt;                
                <param>
                    c The &lt;code&gt;Component&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;                    
                </param>
            </javadoc>
            <method name="setComponent" type="void" line="199">
                <params>
                    <param name="c" type="Component"/>
                </params>
            </method>
            <javadoc line="204">
                This method returns an int representing the
                  type of action(s) this Drag and Drop
                  operation will support.
                  &lt;P&gt;                
                <return>
                    the currently permitted source action(s)                    
                </return>
            </javadoc>
            <method name="getSourceActions" type="int" line="211"/>
            <javadoc line="214">
                This method sets the permitted source drag action(s)
                  for this Drag and Drop operation.
                  &lt;P&gt;                
                <param>
                    actions the permitted source drag action(s)                    
                </param>
            </javadoc>
            <method name="setSourceActions" type="void" line="220">
                <params>
                    <param name="actions" type="int"/>
                </params>
            </method>
            <javadoc line="223">
                This method returns the first event in the
                  series of events that initiated
                  the Drag and Drop operation.
                  &lt;P&gt;                
                <return>
                    the initial event that triggered the drag gesture                    
                </return>
            </javadoc>
            <method name="getTriggerEvent" type="InputEvent" line="230"/>
            <javadoc line="233">
                Reset the Recognizer, if its currently recognizing a gesture, ignore
                  it.                
            </javadoc>
            <method name="resetRecognizer" type="void" line="237"/>
            <javadoc line="240">
                Register a new &lt;code&gt;DragGestureListener&lt;/code&gt;.
                  &lt;P&gt;                
                <param>
                    dgl the &lt;code&gt;DragGestureListener&lt;/code&gt; to register
                      with this &lt;code&gt;DragGestureRecognizer&lt;/code&gt;.
                      &lt;P&gt;                    
                </param>
                <throws>
                    java.util.TooManyListenersException if a
                      &lt;code&gt;DragGestureListener&lt;/code&gt; has already been added.                    
                </throws>
            </javadoc>
            <method name="addDragGestureListener" type="void" line="249">
                <params>
                    <param name="dgl" type="DragGestureListener"/>
                </params>
                <scope line="251"/>
            </method>
            <javadoc line="256">
                unregister the current DragGestureListener
                  &lt;P&gt;                
                <param>
                    dgl the &lt;code&gt;DragGestureListener&lt;/code&gt; to unregister
                      from this &lt;code&gt;DragGestureRecognizer&lt;/code&gt;
                      &lt;P&gt;                    
                </param>
                <throws>
                    &lt;code&gt;IllegalArgumentException&lt;/code&gt; if
                      dgl is not (equal to) the currently registered &lt;code&gt;DragGestureListener&lt;/code&gt;.                    
                </throws>
            </javadoc>
            <method name="removeDragGestureListener" type="void" line="265">
                <params>
                    <param name="dgl" type="DragGestureListener"/>
                </params>
                <scope line="267"/>
            </method>
            <javadoc line="272">
                Notify the DragGestureListener that a Drag and Drop initiating
                  gesture has occurred. Then reset the state of the Recognizer.
                  &lt;P&gt;                
                <param>
                    dragAction The action initially selected by the users gesture                    
                </param>
                <param>
                    p          The point (in Component coords) where the gesture originated                    
                </param>
            </javadoc>
            <method name="fireDragGestureRecognized" type="void" line="279">
                <params>
                    <param name="dragAction" type="int"/>
                    <param name="p" type="Point"/>
                </params>
                <scope line="280">
                    <scope line="281"/>
                </scope>
                <scope line="285"/>
            </method>
            <javadoc line="289">
                Listeners registered on the Component by this Recognizer shall record
                  all Events that are recognized as part of the series of Events that go
                  to comprise a Drag and Drop initiating gesture via this API.
                  &lt;P&gt;
                  This method is used by a &lt;code&gt;DragGestureRecognizer&lt;/code&gt;
                  implementation to add an &lt;code&gt;InputEvent&lt;/code&gt;
                  subclass (that it believes is one in a series
                  of events that comprise a Drag and Drop operation)
                  to the array of events that this
                  &lt;code&gt;DragGestureRecognizer&lt;/code&gt; maintains internally.
                  &lt;P&gt;                
                <param>
                    awtie the &lt;code&gt;InputEvent&lt;/code&gt;
                      to add to this &lt;code&gt;DragGestureRecognizer&lt;/code&gt;&apos;s
                      internal array of events. Note that &lt;code&gt;null&lt;/code&gt;
                      is not a valid value, and will be ignored.                    
                </param>
            </javadoc>
            <method name="appendEvent" type="void" line="306">
                <params>
                    <param name="awtie" type="InputEvent"/>
                </params>
            </method>
            <javadoc line="309">
                Serializes this &lt;code&gt;DragGestureRecognizer&lt;/code&gt;. This method first
                  performs default serialization. Then, this object&apos;s
                  &lt;code&gt;DragGestureListener&lt;/code&gt; is written out if and only if it can be
                  serialized. If not, &lt;code&gt;null&lt;/code&gt; is written instead.                
                <serialData>
                    The default serializable fields, in alphabetical order,
                      followed by either a &lt;code&gt;DragGestureListener&lt;/code&gt;, or
                      &lt;code&gt;null&lt;/code&gt;.                    
                </serialData>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="writeObject" type="void" line="319">
                <params>
                    <param name="s" type="ObjectOutputStream"/>
                </params>
            </method>
            <javadoc line="323">
                Deserializes this &lt;code&gt;DragGestureRecognizer&lt;/code&gt;. This method first
                  performs default deserialization for all non-&lt;code&gt;transient&lt;/code&gt;
                  fields. This object&apos;s &lt;code&gt;DragGestureListener&lt;/code&gt; is then
                  deserialized as well by using the next object in the stream.                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="readObject" type="void" line="330">
                <params>
                    <param name="s" type="ObjectInputStream"/>
                </params>
            </method>
            <declaration name="dragSource" type="DragSource" line="334"/>
            <javadoc line="334">
                The &lt;code&gt;DragSource&lt;/code&gt;
                  associated with this
                  &lt;code&gt;DragGestureRecognizer&lt;/code&gt;.                
                <serial>
                                        
                </serial>
            </javadoc>
            <declaration name="component" type="Component" line="341"/>
            <javadoc line="341">
                The &lt;code&gt;Component&lt;/code&gt;
                  associated with this &lt;code&gt;DragGestureRecognizer&lt;/code&gt;.                
                <serial>
                                        
                </serial>
            </javadoc>
            <declaration name="dragGestureListener" type="DragGestureListener" line="347"/>
            <javadoc line="347">
                The &lt;code&gt;DragGestureListener&lt;/code&gt;
                  associated with this &lt;code&gt;DragGestureRecognizer&lt;/code&gt;.                
            </javadoc>
            <declaration name="sourceActions" type="int" line="352"/>
            <javadoc line="352">
                An &lt;code&gt;int&lt;/code&gt; representing
                  the type(s) of action(s) used
                  in this Drag and Drop operation.                
                <serial>
                                        
                </serial>
            </javadoc>
            <declaration name="events" type="ArrayList&amp;lt;InputEvent&amp;gt;" line="359"/>
            <javadoc line="359">
                The list of events (in order) that
                  the &lt;code&gt;DragGestureRecognizer&lt;/code&gt;
                  &quot;recognized&quot; as a &quot;gesture&quot; that triggers a drag.                
                <serial>
                                        
                </serial>
            </javadoc>
        </class>
    </source>