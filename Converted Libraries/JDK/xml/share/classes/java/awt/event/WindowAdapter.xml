<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.event">
        <class name="WindowAdapter" line="28">
            <implements interface="WindowListener"/>
            <implements interface="WindowStateListener"/>
            <implements interface="WindowFocusListener"/>
            <javadoc line="28">
                An abstract adapter class for receiving window events.
                  The methods in this class are empty. This class exists as
                  convenience for creating listener objects.
                  &lt;P&gt;
                  Extend this class to create a &lt;code&gt;WindowEvent&lt;/code&gt; listener
                  and override the methods for the events of interest. (If you implement the
                  &lt;code&gt;WindowListener&lt;/code&gt; interface, you have to define all of
                  the methods in it. This abstract class defines null methods for them
                  all, so you can only have to define methods for events you care about.)
                  &lt;P&gt;
                  Create a listener object using the extended class and then register it with
                  a Window using the window&apos;s &lt;code&gt;addWindowListener&lt;/code&gt;
                  method. When the window&apos;s status changes by virtue of being opened,
                  closed, activated or deactivated, iconified or deiconified,
                  the relevant method in the listener
                  object is invoked, and the &lt;code&gt;WindowEvent&lt;/code&gt; is passed to it.                
                <see>
                    WindowEvent                    
                </see>
                <see>
                    WindowListener                    
                </see>
                <see>
                    &lt;a href=&quot;http://java.sun.com/docs/books/tutorial/post1.0/ui/windowlistener.html&quot;&gt;Tutorial: Writing a Window Listener&lt;/a&gt;                    
                </see>
                <author>
                    Carl Quinn                    
                </author>
                <author>
                    Amy Fowler                    
                </author>
                <author>
                    David Mendenhall                    
                </author>
                <since>
                    1.1                    
                </since>
            </javadoc>
            <javadoc line="58">
                Invoked when a window has been opened.                
            </javadoc>
            <method name="windowOpened" type="void" line="61">
                <params>
                    <param name="e" type="WindowEvent"/>
                </params>
            </method>
            <javadoc line="63">
                Invoked when a window is in the process of being closed.
                  The close operation can be overridden at this point.                
            </javadoc>
            <method name="windowClosing" type="void" line="67">
                <params>
                    <param name="e" type="WindowEvent"/>
                </params>
            </method>
            <javadoc line="69">
                Invoked when a window has been closed.                
            </javadoc>
            <method name="windowClosed" type="void" line="72">
                <params>
                    <param name="e" type="WindowEvent"/>
                </params>
            </method>
            <javadoc line="74">
                Invoked when a window is iconified.                
            </javadoc>
            <method name="windowIconified" type="void" line="77">
                <params>
                    <param name="e" type="WindowEvent"/>
                </params>
            </method>
            <javadoc line="79">
                Invoked when a window is de-iconified.                
            </javadoc>
            <method name="windowDeiconified" type="void" line="82">
                <params>
                    <param name="e" type="WindowEvent"/>
                </params>
            </method>
            <javadoc line="84">
                Invoked when a window is activated.                
            </javadoc>
            <method name="windowActivated" type="void" line="87">
                <params>
                    <param name="e" type="WindowEvent"/>
                </params>
            </method>
            <javadoc line="89">
                Invoked when a window is de-activated.                
            </javadoc>
            <method name="windowDeactivated" type="void" line="92">
                <params>
                    <param name="e" type="WindowEvent"/>
                </params>
            </method>
            <javadoc line="94">
                Invoked when a window state is changed.                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="windowStateChanged" type="void" line="98">
                <params>
                    <param name="e" type="WindowEvent"/>
                </params>
            </method>
            <javadoc line="100">
                Invoked when the Window is set to be the focused Window, which means
                  that the Window, or one of its subcomponents, will receive keyboard
                  events.                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="windowGainedFocus" type="void" line="107">
                <params>
                    <param name="e" type="WindowEvent"/>
                </params>
            </method>
            <javadoc line="109">
                Invoked when the Window is no longer the focused Window, which means
                  that keyboard events will no longer be delivered to the Window or any of
                  its subcomponents.                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="windowLostFocus" type="void" line="116">
                <params>
                    <param name="e" type="WindowEvent"/>
                </params>
            </method>
        </class>
    </source>