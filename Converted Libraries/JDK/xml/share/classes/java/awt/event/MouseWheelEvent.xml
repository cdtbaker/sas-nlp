<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.event">
        <import package="java.awt.Component"/>
        <class name="MouseWheelEvent" line="30">
            <extends class="MouseEvent"/>
            <comment line="155">
                serialVersionUID                
            </comment>
            <javadoc line="30">
                An event which indicates that the mouse wheel was rotated in a component.
                  &lt;P&gt;
                  A wheel mouse is a mouse which has a wheel in place of the middle button.
                  This wheel can be rotated towards or away from the user.  Mouse wheels are
                  most often used for scrolling, though other uses are possible.
                  &lt;P&gt;
                  A MouseWheelEvent object is passed to every &lt;code&gt;MouseWheelListener&lt;/code&gt;
                  object which registered to receive the &quot;interesting&quot; mouse events using the
                  component&apos;s &lt;code&gt;addMouseWheelListener&lt;/code&gt; method.  Each such listener
                  object gets a &lt;code&gt;MouseEvent&lt;/code&gt; containing the mouse event.
                  &lt;P&gt;
                  Due to the mouse wheel&apos;s special relationship to scrolling Components,
                  MouseWheelEvents are delivered somewhat differently than other MouseEvents.
                  This is because while other MouseEvents usually affect a change on
                  the Component directly under the mouse
                  cursor (for instance, when clicking a button), MouseWheelEvents often have
                  an effect away from the mouse cursor (moving the wheel while
                  over a Component inside a ScrollPane should scroll one of the
                  Scrollbars on the ScrollPane).
                  &lt;P&gt;
                  MouseWheelEvents start delivery from the Component underneath the
                  mouse cursor.  If MouseWheelEvents are not enabled on the
                  Component, the event is delivered to the first ancestor
                  Container with MouseWheelEvents enabled.  This will usually be
                  a ScrollPane with wheel scrolling enabled.  The source
                  Component and x,y coordinates will be relative to the event&apos;s
                  final destination (the ScrollPane).  This allows a complex
                  GUI to be installed without modification into a ScrollPane, and
                  for all MouseWheelEvents to be delivered to the ScrollPane for
                  scrolling.
                  &lt;P&gt;
                  Some AWT Components are implemented using native widgets which
                  display their own scrollbars and handle their own scrolling.
                  The particular Components for which this is true will vary from
                  platform to platform.  When the mouse wheel is
                  moved over one of these Components, the event is delivered straight to
                  the native widget, and not propagated to ancestors.
                  &lt;P&gt;
                  Platforms offer customization of the amount of scrolling that
                  should take place when the mouse wheel is moved.  The two most
                  common settings are to scroll a certain number of &quot;units&quot;
                  (commonly lines of text in a text-based component) or an entire &quot;block&quot;
                  (similar to page-up/page-down).  The MouseWheelEvent offers
                  methods for conforming to the underlying platform settings.  These
                  platform settings can be changed at any time by the user.  MouseWheelEvents
                  reflect the most recent settings.
                  &lt;P&gt;
                  The &lt;code&gt;MouseWheelEvent&lt;/code&gt; class includes methods for
                  getting the number of &quot;clicks&quot; by which the mouse wheel is rotated.
                  The {@link #getWheelRotation} method returns the integer number
                  of &quot;clicks&quot; corresponding to the number of notches by which the wheel was
                  rotated. In addition to this method, the &lt;code&gt;MouseWheelEvent&lt;/code&gt;
                  class provides the {@link #getPreciseWheelRotation} method which returns
                  a double number of &quot;clicks&quot; in case a partial rotation occurred.
                  The {@link #getPreciseWheelRotation} method is useful if a mouse supports
                  a high-resolution wheel, such as a freely rotating wheel with no
                  notches. Applications can benefit by using this method to process
                  mouse wheel events more precisely, and thus, making visual perception
                  smoother.                
                <author>
                    Brent Christian                    
                </author>
                <see>
                    MouseWheelListener                    
                </see>
                <see>
                    java.awt.ScrollPane                    
                </see>
                <see>
                    java.awt.ScrollPane#setWheelScrollingEnabled(boolean)                    
                </see>
                <see>
                    javax.swing.JScrollPane                    
                </see>
                <see>
                    javax.swing.JScrollPane#setWheelScrollingEnabled(boolean)                    
                </see>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="WHEEL_UNIT_SCROLL" type="int" line="102"/>
            <javadoc line="102">
                Constant representing scrolling by &quot;units&quot; (like scrolling with the
                  arrow keys)                
                <see>
                    #getScrollType                    
                </see>
            </javadoc>
            <declaration name="WHEEL_BLOCK_SCROLL" type="int" line="110"/>
            <javadoc line="110">
                Constant representing scrolling by a &quot;block&quot; (like scrolling
                  with page-up, page-down keys)                
                <see>
                    #getScrollType                    
                </see>
            </javadoc>
            <declaration name="scrollType" type="int" line="118"/>
            <javadoc line="118">
                Indicates what sort of scrolling should take place in response to this
                  event, based on platform settings.  Legal values are:
                  &lt;ul&gt;
                  &lt;li&gt; WHEEL_UNIT_SCROLL
                  &lt;li&gt; WHEEL_BLOCK_SCROLL
                  &lt;/ul&gt;                
                <see>
                    #getScrollType                    
                </see>
            </javadoc>
            <declaration name="scrollAmount" type="int" line="130"/>
            <javadoc line="130">
                Only valid for scrollType WHEEL_UNIT_SCROLL.
                  Indicates number of units that should be scrolled per
                  click of mouse wheel rotation, based on platform settings.                
                <see>
                    #getScrollAmount                    
                </see>
                <see>
                    #getScrollType                    
                </see>
            </javadoc>
            <declaration name="wheelRotation" type="int" line="140"/>
            <javadoc line="140">
                Indicates how far the mouse wheel was rotated.                
                <see>
                    #getWheelRotation                    
                </see>
            </javadoc>
            <declaration name="preciseWheelRotation" type="double" line="147"/>
            <javadoc line="147">
                Indicates how far the mouse wheel was rotated.                
                <see>
                    #getPreciseWheelRotation                    
                </see>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="158"/>
            <javadoc line="160">
                Constructs a &lt;code&gt;MouseWheelEvent&lt;/code&gt; object with the
                  specified source component, type, modifiers, coordinates,
                  scroll type, scroll amount, and wheel rotation.
                  &lt;p&gt;Absolute coordinates xAbs and yAbs are set to source&apos;s location on screen plus
                  relative coordinates x and y. xAbs and yAbs are set to zero if the source is not showing.
                  &lt;p&gt;Note that passing in an invalid &lt;code&gt;id&lt;/code&gt; results in
                  unspecified behavior. This method throws an
                  &lt;code&gt;IllegalArgumentException&lt;/code&gt; if &lt;code&gt;source&lt;/code&gt;
                  is &lt;code&gt;null&lt;/code&gt;.                
                <param>
                    source         the <code>Component</code> that originated
                      the event                    
                </param>
                <param>
                    id             the integer that identifies the event                    
                </param>
                <param>
                    when           a long that gives the time the event occurred                    
                </param>
                <param>
                    modifiers      the modifier keys down during event
                      (shift, ctrl, alt, meta)                    
                </param>
                <param>
                    x              the horizontal x coordinate for the mouse location                    
                </param>
                <param>
                    y              the vertical y coordinate for the mouse location                    
                </param>
                <param>
                    clickCount     the number of mouse clicks associated with event                    
                </param>
                <param>
                    popupTrigger   a boolean, true if this event is a trigger for a
                      popup-menu                    
                </param>
                <param>
                    scrollType     the type of scrolling which should take place in
                      response to this event;  valid values are
                      <code>WHEEL_UNIT_SCROLL</code> and
                      <code>WHEEL_BLOCK_SCROLL</code>                    
                </param>
                <param>
                    scrollAmount  for scrollType <code>WHEEL_UNIT_SCROLL</code>,
                      the number of units to be scrolled                    
                </param>
                <param>
                    wheelRotation  the integer number of "clicks" by which the mouse
                      wheel was rotated                    
                </param>
                <throws>
                    IllegalArgumentException if <code>source</code> is null                    
                </throws>
                <see>
                    MouseEvent#MouseEvent(java.awt.Component,int,long,int,int,int,int,boolean)                    
                </see>
                <see>
                    MouseEvent#MouseEvent(java.awt.Component,int,long,int,int,int,int,int,int,boolean,int)                    
                </see>
            </javadoc>
            <method name="MouseWheelEvent" type="constructor" line="197">
                <params>
                    <param name="source" type="Component"/>
                    <param name="id" type="int"/>
                    <param name="when" type="long"/>
                    <param name="modifiers" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="clickCount" type="int"/>
                    <param name="popupTrigger" type="boolean"/>
                    <param name="scrollType" type="int"/>
                    <param name="scrollAmount" type="int"/>
                    <param name="wheelRotation" type="int"/>
                </params>
            </method>
            <javadoc line="203">
                Constructs a &lt;code&gt;MouseWheelEvent&lt;/code&gt; object with the
                  specified source component, type, modifiers, coordinates,
                  absolute coordinates, scroll type, scroll amount, and wheel rotation.
                  &lt;p&gt;Note that passing in an invalid &lt;code&gt;id&lt;/code&gt; results in
                  unspecified behavior. This method throws an
                  &lt;code&gt;IllegalArgumentException&lt;/code&gt; if &lt;code&gt;source&lt;/code&gt;
                  is &lt;code&gt;null&lt;/code&gt;.&lt;p&gt;
                  Even if inconsistent values for relative and absolute coordinates are
                  passed to the constructor, the MouseWheelEvent instance is still
                  created and no exception is thrown.                
                <param>
                    source         the <code>Component</code> that originated
                      the event                    
                </param>
                <param>
                    id             the integer that identifies the event                    
                </param>
                <param>
                    when           a long that gives the time the event occurred                    
                </param>
                <param>
                    modifiers      the modifier keys down during event
                      (shift, ctrl, alt, meta)                    
                </param>
                <param>
                    x              the horizontal x coordinate for the mouse location                    
                </param>
                <param>
                    y              the vertical y coordinate for the mouse location                    
                </param>
                <param>
                    xAbs           the absolute horizontal x coordinate for the mouse location                    
                </param>
                <param>
                    yAbs           the absolute vertical y coordinate for the mouse location                    
                </param>
                <param>
                    clickCount     the number of mouse clicks associated with event                    
                </param>
                <param>
                    popupTrigger   a boolean, true if this event is a trigger for a
                      popup-menu                    
                </param>
                <param>
                    scrollType     the type of scrolling which should take place in
                      response to this event;  valid values are
                      <code>WHEEL_UNIT_SCROLL</code> and
                      <code>WHEEL_BLOCK_SCROLL</code>                    
                </param>
                <param>
                    scrollAmount  for scrollType <code>WHEEL_UNIT_SCROLL</code>,
                      the number of units to be scrolled                    
                </param>
                <param>
                    wheelRotation  the integer number of "clicks" by which the mouse
                      wheel was rotated                    
                </param>
                <throws>
                    IllegalArgumentException if <code>source</code> is null                    
                </throws>
                <see>
                    MouseEvent#MouseEvent(java.awt.Component,int,long,int,int,int,int,boolean)                    
                </see>
                <see>
                    MouseEvent#MouseEvent(java.awt.Component,int,long,int,int,int,int,int,int,boolean,int)                    
                </see>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="MouseWheelEvent" type="constructor" line="244">
                <params>
                    <param name="source" type="Component"/>
                    <param name="id" type="int"/>
                    <param name="when" type="long"/>
                    <param name="modifiers" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="xAbs" type="int"/>
                    <param name="yAbs" type="int"/>
                    <param name="clickCount" type="int"/>
                    <param name="popupTrigger" type="boolean"/>
                    <param name="scrollType" type="int"/>
                    <param name="scrollAmount" type="int"/>
                    <param name="wheelRotation" type="int"/>
                </params>
            </method>
            <javadoc line="252">
                Constructs a &lt;code&gt;MouseWheelEvent&lt;/code&gt; object with the specified
                  source component, type, modifiers, coordinates, absolute coordinates,
                  scroll type, scroll amount, and wheel rotation.
                  &lt;p&gt;Note that passing in an invalid &lt;code&gt;id&lt;/code&gt; parameter results
                  in unspecified behavior. This method throws an
                  &lt;code&gt;IllegalArgumentException&lt;/code&gt; if &lt;code&gt;source&lt;/code&gt; equals
                  &lt;code&gt;null&lt;/code&gt;.
                  &lt;p&gt;Even if inconsistent values for relative and absolute coordinates
                  are passed to the constructor, a &lt;code&gt;MouseWheelEvent&lt;/code&gt; instance
                  is still created and no exception is thrown.                
                <param>
                    source         the <code>Component</code> that originated the event                    
                </param>
                <param>
                    id             the integer value that identifies the event                    
                </param>
                <param>
                    when           a long value that gives the time when the event occurred                    
                </param>
                <param>
                    modifiers      the modifier keys down during event
                      (shift, ctrl, alt, meta)                    
                </param>
                <param>
                    x              the horizontal <code>x</code> coordinate for the
                      mouse location                    
                </param>
                <param>
                    y              the vertical <code>y</code> coordinate for the
                      mouse location                    
                </param>
                <param>
                    xAbs           the absolute horizontal <code>x</code> coordinate for
                      the mouse location                    
                </param>
                <param>
                    yAbs           the absolute vertical <code>y</code> coordinate for
                      the mouse location                    
                </param>
                <param>
                    clickCount     the number of mouse clicks associated with the event                    
                </param>
                <param>
                    popupTrigger   a boolean value, <code>true</code> if this event is a trigger
                      for a popup-menu                    
                </param>
                <param>
                    scrollType     the type of scrolling which should take place in
                      response to this event;  valid values are
                      <code>WHEEL_UNIT_SCROLL</code> and
                      <code>WHEEL_BLOCK_SCROLL</code>                    
                </param>
                <param>
                    scrollAmount  for scrollType <code>WHEEL_UNIT_SCROLL</code>,
                      the number of units to be scrolled                    
                </param>
                <param>
                    wheelRotation  the integer number of "clicks" by which the mouse wheel
                      was rotated                    
                </param>
                <param>
                    preciseWheelRotation the double number of "clicks" by which the mouse wheel
                      was rotated                    
                </param>
                <throws>
                    IllegalArgumentException if <code>source</code> is null                    
                </throws>
                <see>
                    MouseEvent#MouseEvent(java.awt.Component,int,long,int,int,int,int,boolean)                    
                </see>
                <see>
                    MouseEvent#MouseEvent(java.awt.Component,int,long,int,int,int,int,int,int,boolean,int)                    
                </see>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="MouseWheelEvent" type="constructor" line="298">
                <params>
                    <param name="source" type="Component"/>
                    <param name="id" type="int"/>
                    <param name="when" type="long"/>
                    <param name="modifiers" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="xAbs" type="int"/>
                    <param name="yAbs" type="int"/>
                    <param name="clickCount" type="int"/>
                    <param name="popupTrigger" type="boolean"/>
                    <param name="scrollType" type="int"/>
                    <param name="scrollAmount" type="int"/>
                    <param name="wheelRotation" type="int"/>
                    <param name="preciseWheelRotation" type="double"/>
                </params>
            </method>
            <javadoc line="310">
                Returns the type of scrolling that should take place in response to this
                  event.  This is determined by the native platform.  Legal values are:
                  &lt;ul&gt;
                  &lt;li&gt; MouseWheelEvent.WHEEL_UNIT_SCROLL
                  &lt;li&gt; MouseWheelEvent.WHEEL_BLOCK_SCROLL
                  &lt;/ul&gt;                
                <return>
                    either MouseWheelEvent.WHEEL_UNIT_SCROLL or
                      MouseWheelEvent.WHEEL_BLOCK_SCROLL, depending on the configuration of
                      the native platform.                    
                </return>
                <see>
                    java.awt.Adjustable#getUnitIncrement                    
                </see>
                <see>
                    java.awt.Adjustable#getBlockIncrement                    
                </see>
                <see>
                    javax.swing.Scrollable#getScrollableUnitIncrement                    
                </see>
                <see>
                    javax.swing.Scrollable#getScrollableBlockIncrement                    
                </see>
            </javadoc>
            <method name="getScrollType" type="int" line="326"/>
            <javadoc line="330">
                Returns the number of units that should be scrolled per
                  click of mouse wheel rotation.
                  Only valid if &lt;code&gt;getScrollType&lt;/code&gt; returns
                  &lt;code&gt;MouseWheelEvent.WHEEL_UNIT_SCROLL&lt;/code&gt;                
                <return>
                    number of units to scroll, or an undefined value if
                      <code>getScrollType</code> returns
                      <code>MouseWheelEvent.WHEEL_BLOCK_SCROLL</code>                    
                </return>
                <see>
                    #getScrollType                    
                </see>
            </javadoc>
            <method name="getScrollAmount" type="int" line="341"/>
            <javadoc line="345">
                Returns the number of &quot;clicks&quot; the mouse wheel was rotated, as an integer.
                  A partial rotation may occur if the mouse supports a high-resolution wheel.
                  In this case, the method returns zero until a full &quot;click&quot; has been accumulated.                
                <return>
                    negative values if the mouse wheel was rotated up/away from
                      the user, and positive values if the mouse wheel was rotated down/
                      towards the user                    
                </return>
                <see>
                    #getPreciseWheelRotation                    
                </see>
            </javadoc>
            <method name="getWheelRotation" type="int" line="355"/>
            <javadoc line="359">
                Returns the number of &quot;clicks&quot; the mouse wheel was rotated, as a double.
                  A partial rotation may occur if the mouse supports a high-resolution wheel.
                  In this case, the return value will include a fractional &quot;click&quot;.                
                <return>
                    negative values if the mouse wheel was rotated up or away from
                      the user, and positive values if the mouse wheel was rotated down or
                      towards the user                    
                </return>
                <see>
                    #getWheelRotation                    
                </see>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="getPreciseWheelRotation" type="double" line="370"/>
            <javadoc line="374">
                This is a convenience method to aid in the implementation of
                  the common-case MouseWheelListener - to scroll a ScrollPane or
                  JScrollPane by an amount which conforms to the platform settings.
                  (Note, however, that &lt;code&gt;ScrollPane&lt;/code&gt; and
                  &lt;code&gt;JScrollPane&lt;/code&gt; already have this functionality built in.)
                  &lt;P&gt;
                  This method returns the number of units to scroll when scroll type is
                  MouseWheelEvent.WHEEL_UNIT_SCROLL, and should only be called if
                  &lt;code&gt;getScrollType&lt;/code&gt; returns MouseWheelEvent.WHEEL_UNIT_SCROLL.
                  &lt;P&gt;
                  Direction of scroll, amount of wheel movement,
                  and platform settings for wheel scrolling are all accounted for.
                  This method does not and cannot take into account value of the
                  Adjustable/Scrollable unit increment, as this will vary among
                  scrolling components.
                  &lt;P&gt;
                  A simplified example of how this method might be used in a
                  listener:
                  &lt;pre&gt;
                  mouseWheelMoved(MouseWheelEvent event) {
                  ScrollPane sp = getScrollPaneFromSomewhere();
                  Adjustable adj = sp.getVAdjustable()
                  if (MouseWheelEvent.getScrollType() == WHEEL_UNIT_SCROLL) {
                  int totalScrollAmount =
                  event.getUnitsToScroll() 
                  adj.getUnitIncrement();
                  adj.setValue(adj.getValue() + totalScrollAmount);
                  }
                  }
                  &lt;/pre&gt;                
                <return>
                    the number of units to scroll based on the direction and amount
                      of mouse wheel rotation, and on the wheel scrolling settings of the
                      native platform                    
                </return>
                <see>
                    #getScrollType                    
                </see>
                <see>
                    #getScrollAmount                    
                </see>
                <see>
                    MouseWheelListener                    
                </see>
                <see>
                    java.awt.Adjustable                    
                </see>
                <see>
                    java.awt.Adjustable#getUnitIncrement                    
                </see>
                <see>
                    javax.swing.Scrollable                    
                </see>
                <see>
                    javax.swing.Scrollable#getScrollableUnitIncrement                    
                </see>
                <see>
                    java.awt.ScrollPane                    
                </see>
                <see>
                    java.awt.ScrollPane#setWheelScrollingEnabled                    
                </see>
                <see>
                    javax.swing.JScrollPane                    
                </see>
                <see>
                    javax.swing.JScrollPane#setWheelScrollingEnabled                    
                </see>
            </javadoc>
            <method name="getUnitsToScroll" type="int" line="421"/>
            <javadoc line="425">
                Returns a parameter string identifying this event.
                  This method is useful for event-logging and for debugging.                
                <return>
                    a string identifying the event and its attributes                    
                </return>
            </javadoc>
            <method name="paramString" type="String" line="431">
                <declaration name="scrollTypeStr" type="String" line="432"/>
                <scope line="434"/>
                <scope line="437"/>
                <scope line="440"/>
            </method>
        </class>
    </source>