<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.event">
        <import package="java.awt.Adjustable"/>
        <import package="java.awt.AWTEvent"/>
        <class name="AdjustmentEvent" line="31">
            <extends class="AWTEvent"/>
            <comment line="73">
                Event.SCROLL_LINE_UP                
            </comment>
            <comment line="142">
                JDK 1.1 serialVersionUID                
            </comment>
            <javadoc line="31">
                The adjustment event emitted by Adjustable objects like{@link java.awt.Scrollbar} and {@link java.awt.ScrollPane}.
                  When the user changes the value of the scrolling component,
                  it receives an instance of {@code AdjustmentEvent}.
                  &lt;p&gt;
                  An unspecified behavior will be caused if the {@code id} parameter
                  of any particular {@code AdjustmentEvent} instance is not
                  in the range from {@code ADJUSTMENT_FIRST} to {@code ADJUSTMENT_LAST}.
                  &lt;p&gt;
                  The {@code type} of any {@code AdjustmentEvent} instance takes one of the following
                  values:
                  &lt;ul&gt;
                  &lt;li&gt; {@code UNIT_INCREMENT}&lt;li&gt; {@code UNIT_DECREMENT}&lt;li&gt; {@code BLOCK_INCREMENT}&lt;li&gt; {@code BLOCK_DECREMENT}&lt;li&gt; {@code TRACK}&lt;/ul&gt;
                  Assigning the value different from listed above will cause an unspecified behavior.                
                <see>
                    java.awt.Adjustable                    
                </see>
                <see>
                    AdjustmentListener                    
                </see>
                <author>
                    Amy Fowler                    
                </author>
                <since>
                    1.1                    
                </since>
            </javadoc>
            <declaration name="ADJUSTMENT_FIRST" type="int" line="59"/>
            <javadoc line="59">
                Marks the first integer id for the range of adjustment event ids.                
            </javadoc>
            <declaration name="ADJUSTMENT_LAST" type="int" line="64"/>
            <javadoc line="64">
                Marks the last integer id for the range of adjustment event ids.                
            </javadoc>
            <declaration name="ADJUSTMENT_VALUE_CHANGED" type="int" line="69"/>
            <javadoc line="69">
                The adjustment value changed event.                
            </javadoc>
            <declaration name="UNIT_INCREMENT" type="int" line="74"/>
            <javadoc line="74">
                The unit increment adjustment type.                
            </javadoc>
            <declaration name="UNIT_DECREMENT" type="int" line="79"/>
            <javadoc line="79">
                The unit decrement adjustment type.                
            </javadoc>
            <declaration name="BLOCK_DECREMENT" type="int" line="84"/>
            <javadoc line="84">
                The block decrement adjustment type.                
            </javadoc>
            <declaration name="BLOCK_INCREMENT" type="int" line="89"/>
            <javadoc line="89">
                The block increment adjustment type.                
            </javadoc>
            <declaration name="TRACK" type="int" line="94"/>
            <javadoc line="94">
                The absolute tracking adjustment type.                
            </javadoc>
            <declaration name="adjustable" type="Adjustable" line="99"/>
            <javadoc line="99">
                The adjustable object that fired the event.                
                <serial>
                                        
                </serial>
                <see>
                    #getAdjustable                    
                </see>
            </javadoc>
            <declaration name="value" type="int" line="107"/>
            <javadoc line="107">
                &lt;code&gt;value&lt;/code&gt; will contain the new value of the
                  adjustable object.  This value will always be  in a
                  range associated adjustable object.                
                <serial>
                                        
                </serial>
                <see>
                    #getValue                    
                </see>
            </javadoc>
            <declaration name="adjustmentType" type="int" line="117"/>
            <javadoc line="117">
                The &lt;code&gt;adjustmentType&lt;/code&gt; describes how the adjustable
                  object value has changed.
                  This value can be increased/decreased by a block or unit amount
                  where the block is associated with page increments/decrements,
                  and a unit is associated with line increments/decrements.                
                <serial>
                                        
                </serial>
                <see>
                    #getAdjustmentType                    
                </see>
            </javadoc>
            <declaration name="isAdjusting" type="boolean" line="130"/>
            <javadoc line="130">
                The &lt;code&gt;isAdjusting&lt;/code&gt; is true if the event is one
                  of the series of multiple adjustment events.                
                <since>
                    1.4                    
                </since>
                <serial>
                                        
                </serial>
                <see>
                    #getValueIsAdjusting                    
                </see>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="144"/>
            <javadoc line="147">
                Constructs an &lt;code&gt;AdjustmentEvent&lt;/code&gt; object with the
                  specified &lt;code&gt;Adjustable&lt;/code&gt; source, event type,
                  adjustment type, and value.
                  &lt;p&gt; This method throws an
                  &lt;code&gt;IllegalArgumentException&lt;/code&gt; if &lt;code&gt;source&lt;/code&gt;
                  is &lt;code&gt;null&lt;/code&gt;.                
                <param>
                    source The <code>Adjustable</code> object where the
                      event originated                    
                </param>
                <param>
                    id     An integer indicating the type of event.
                      For information on allowable values, see
                      the class description for {@link AdjustmentEvent}                    
                </param>
                <param>
                    type   An integer indicating the adjustment type.
                      For information on allowable values, see
                      the class description for {@link AdjustmentEvent}                    
                </param>
                <param>
                    value  The current value of the adjustment                    
                </param>
                <throws>
                    IllegalArgumentException if <code>source</code> is null                    
                </throws>
                <see>
                    #getSource()                    
                </see>
                <see>
                    #getID()                    
                </see>
                <see>
                    #getAdjustmentType()                    
                </see>
                <see>
                    #getValue()                    
                </see>
            </javadoc>
            <method name="AdjustmentEvent" type="constructor" line="170">
                <params>
                    <param name="source" type="Adjustable"/>
                    <param name="id" type="int"/>
                    <param name="type" type="int"/>
                    <param name="value" type="int"/>
                </params>
            </method>
            <javadoc line="174">
                Constructs an &lt;code&gt;AdjustmentEvent&lt;/code&gt; object with the
                  specified Adjustable source, event type, adjustment type, and value.
                  &lt;p&gt; This method throws an
                  &lt;code&gt;IllegalArgumentException&lt;/code&gt; if &lt;code&gt;source&lt;/code&gt;
                  is &lt;code&gt;null&lt;/code&gt;.                
                <param>
                    source The <code>Adjustable</code> object where the
                      event originated                    
                </param>
                <param>
                    id     An integer indicating the type of event.
                      For information on allowable values, see
                      the class description for {@link AdjustmentEvent}                    
                </param>
                <param>
                    type   An integer indicating the adjustment type.
                      For information on allowable values, see
                      the class description for {@link AdjustmentEvent}                    
                </param>
                <param>
                    value  The current value of the adjustment                    
                </param>
                <param>
                    isAdjusting A boolean that equals <code>true</code> if the event is one
                      of a series of multiple adjusting events,
                      otherwise <code>false</code>                    
                </param>
                <throws>
                    IllegalArgumentException if <code>source</code> is null                    
                </throws>
                <since>
                    1.4                    
                </since>
                <see>
                    #getSource()                    
                </see>
                <see>
                    #getID()                    
                </see>
                <see>
                    #getAdjustmentType()                    
                </see>
                <see>
                    #getValue()                    
                </see>
                <see>
                    #getValueIsAdjusting()                    
                </see>
            </javadoc>
            <method name="AdjustmentEvent" type="constructor" line="201">
                <params>
                    <param name="source" type="Adjustable"/>
                    <param name="id" type="int"/>
                    <param name="type" type="int"/>
                    <param name="value" type="int"/>
                    <param name="isAdjusting" type="boolean"/>
                </params>
            </method>
            <javadoc line="209">
                Returns the &lt;code&gt;Adjustable&lt;/code&gt; object where this event originated.                
                <return>
                    the <code>Adjustable</code> object where this event originated                    
                </return>
            </javadoc>
            <method name="getAdjustable" type="Adjustable" line="214"/>
            <javadoc line="218">
                Returns the current value in the adjustment event.                
                <return>
                    the current value in the adjustment event                    
                </return>
            </javadoc>
            <method name="getValue" type="int" line="223"/>
            <javadoc line="227">
                Returns the type of adjustment which caused the value changed
                  event.  It will have one of the following values:
                  &lt;ul&gt;
                  &lt;li&gt;{@link #UNIT_INCREMENT}&lt;li&gt;{@link #UNIT_DECREMENT}&lt;li&gt;{@link #BLOCK_INCREMENT}&lt;li&gt;{@link #BLOCK_DECREMENT}&lt;li&gt;{@link #TRACK}&lt;/ul&gt;                
                <return>
                    one of the adjustment values listed above                    
                </return>
            </javadoc>
            <method name="getAdjustmentType" type="int" line="239"/>
            <javadoc line="243">
                Returns &lt;code&gt;true&lt;/code&gt; if this is one of multiple
                  adjustment events.                
                <return>
                    <code>true</code> if this is one of multiple
                      adjustment events, otherwise returns <code>false</code>                    
                </return>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="getValueIsAdjusting" type="boolean" line="251"/>
            <method name="paramString" type="String" line="255">
                <declaration name="typeStr" type="String" line="256"/>
                <declaration name="adjTypeStr" type="String" line="264"/>
            </method>
        </class>
    </source>