<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.event">
        <import package="java.util.EventListener"/>
        <interface name="WindowStateListener">
            <implements interface="EventListener"/>
            <javadoc line="30">
                The listener interface for receiving window state events.
                  &lt;p&gt;
                  The class that is interested in processing a window state event
                  either implements this interface (and all the methods it contains)
                  or extends the abstract &lt;code&gt;WindowAdapter&lt;/code&gt; class
                  (overriding only the methods of interest).
                  &lt;p&gt;
                  The listener object created from that class is then registered with
                  a window using the &lt;code&gt;Window&lt;/code&gt;&apos;s
                  &lt;code&gt;addWindowStateListener&lt;/code&gt; method.  When the window&apos;s
                  state changes by virtue of being iconified, maximized etc., the
                  &lt;code&gt;windowStateChanged&lt;/code&gt; method in the listener object is
                  invoked, and the &lt;code&gt;WindowEvent&lt;/code&gt; is passed to it.                
                <see>
                    java.awt.event.WindowAdapter                    
                </see>
                <see>
                    java.awt.event.WindowEvent                    
                </see>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="windowStateChanged" type="void" line="51"/>
            <javadoc line="51">
                Invoked when window state is changed.                
            </javadoc>
        </interface>
    </source>