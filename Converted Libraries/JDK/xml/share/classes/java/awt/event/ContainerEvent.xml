<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.event">
        <import package="java.awt.Container"/>
        <import package="java.awt.Component"/>
        <class name="ContainerEvent" line="4">
            <extends class="ComponentEvent"/>
            <javadoc line="4">
                A low-level event which indicates that a container&apos;s contents
                  changed because a component was added or removed.
                  &lt;P&gt;
                  Container events are provided for notification purposes ONLY;
                  The AWT will automatically handle changes to the containers
                  contents internally so that the program works properly regardless of
                  whether the program is receiving these events or not.
                  &lt;P&gt;
                  This low-level event is generated by a container object (such as a
                  Panel) when a component is added to it or removed from it.
                  The event is passed to every &lt;code&gt;ContainerListener&lt;/code&gt;
                  or &lt;code&gt;ContainerAdapter&lt;/code&gt; object which registered to receive such
                  events using the component&apos;s &lt;code&gt;addContainerListener&lt;/code&gt; method.
                  (&lt;code&gt;ContainerAdapter&lt;/code&gt; objects implement the
                  &lt;code&gt;ContainerListener&lt;/code&gt; interface.) Each such listener object
                  gets this &lt;code&gt;ContainerEvent&lt;/code&gt; when the event occurs.
                  &lt;p&gt;
                  An unspecified behavior will be caused if the {@code id} parameter
                  of any particular {@code ContainerEvent} instance is not
                  in the range from {@code CONTAINER_FIRST} to {@code CONTAINER_LAST}.                
                <see>
                    ContainerAdapter                    
                </see>
                <see>
                    ContainerListener                    
                </see>
                <see>
                    <a href="http://java.sun.com/docs/books/tutorial/post1.0/ui/containerlistener.html">Tutorial: Writing a Container Listener</a>                    
                </see>
                <author>
                    Tim Prinzing                    
                </author>
                <author>
                    Amy Fowler                    
                </author>
                <since>
                    1.1                    
                </since>
            </javadoc>
            <declaration name="CONTAINER_FIRST" type="int" line="33"/>
            <javadoc line="33">
                The first number in the range of ids used for container events.                
            </javadoc>
            <declaration name="CONTAINER_LAST" type="int" line="37"/>
            <javadoc line="37">
                The last number in the range of ids used for container events.                
            </javadoc>
            <declaration name="COMPONENT_ADDED" type="int" line="41"/>
            <javadoc line="41">
                This event indicates that a component was added to the container.                
            </javadoc>
            <declaration name="COMPONENT_REMOVED" type="int" line="45"/>
            <javadoc line="45">
                This event indicates that a component was removed from the container.                
            </javadoc>
            <declaration name="child" type="Component" line="49"/>
            <javadoc line="49">
                The non-null component that is being added or
                  removed from the Container.                
                <serial>
                                        
                </serial>
                <see>
                    #getChild()                    
                </see>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="56"/>
            <javadoc line="57">
                Constructs a &lt;code&gt;ContainerEvent&lt;/code&gt; object.
                  &lt;p&gt; This method throws an
                  &lt;code&gt;IllegalArgumentException&lt;/code&gt; if &lt;code&gt;source&lt;/code&gt;
                  is &lt;code&gt;null&lt;/code&gt;.                
                <param>
                    source The <code>Component</code> object (container)
                      that originated the event                    
                </param>
                <param>
                    id     An integer indicating the type of event.
                      For information on allowable values, see
                      the class description for {@link ContainerEvent}                    
                </param>
                <param>
                    child  the component that was added or removed                    
                </param>
                <throws>
                    IllegalArgumentException if <code>source</code> is null                    
                </throws>
                <see>
                    #getContainer()                    
                </see>
                <see>
                    #getID()                    
                </see>
                <see>
                    #getChild()                    
                </see>
            </javadoc>
            <method name="ContainerEvent" type="constructor" line="73">
                <params>
                    <param name="source" type="Component"/>
                    <param name="id" type="int"/>
                    <param name="child" type="Component"/>
                </params>
            </method>
            <javadoc line="77">
                Returns the originator of the event.                
                <return>
                    the <code>Container</code> object that originated
                      the event, or <code>null</code> if the object is not a
                      <code>Container</code>.                    
                </return>
            </javadoc>
            <method name="getContainer" type="Container" line="83"/>
            <javadoc line="86">
                Returns the component that was affected by the event.                
                <return>
                    the Component object that was added or removed                    
                </return>
            </javadoc>
            <method name="getChild" type="Component" line="90"/>
            <javadoc line="93">
                Returns a parameter string identifying this event.
                  This method is useful for event-logging and for debugging.                
                <return>
                    a string identifying the event and its attributes                    
                </return>
            </javadoc>
            <method name="paramString" type="String" line="98">
                <declaration name="typeStr" type="String" line="99"/>
            </method>
        </class>
    </source>