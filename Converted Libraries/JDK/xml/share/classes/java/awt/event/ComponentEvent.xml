<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.event">
        <import package="java.awt.AWTEvent"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Rectangle"/>
        <class name="ComponentEvent" line="32">
            <extends class="AWTEvent"/>
            <comment line="100">
                JDK 1.1 serialVersionUID                
            </comment>
            <javadoc line="32">
                A low-level event which indicates that a component moved, changed
                  size, or changed visibility (also, the root class for the other
                  component-level events).
                  &lt;P&gt;
                  Component events are provided for notification purposes ONLY;
                  The AWT will automatically handle component moves and resizes
                  internally so that GUI layout works properly regardless of
                  whether a program is receiving these events or not.
                  &lt;P&gt;
                  In addition to serving as the base class for other component-related
                  events (InputEvent, FocusEvent, WindowEvent, ContainerEvent),
                  this class defines the events that indicate changes in
                  a component&apos;s size, position, or visibility.
                  &lt;P&gt;
                  This low-level event is generated by a component object (such as a
                  List) when the component is moved, resized, rendered invisible, or made
                  visible again. The event is passed to every &lt;code&gt;ComponentListener&lt;/code&gt;
                  or &lt;code&gt;ComponentAdapter&lt;/code&gt; object which registered to receive such
                  events using the component&apos;s &lt;code&gt;addComponentListener&lt;/code&gt; method.
                  (&lt;code&gt;ComponentAdapter&lt;/code&gt; objects implement the
                  &lt;code&gt;ComponentListener&lt;/code&gt; interface.) Each such listener object
                  gets this &lt;code&gt;ComponentEvent&lt;/code&gt; when the event occurs.
                  &lt;p&gt;
                  An unspecified behavior will be caused if the {@code id} parameter
                  of any particular {@code ComponentEvent} instance is not
                  in the range from {@code COMPONENT_FIRST} to {@code COMPONENT_LAST}.                
                <see>
                    ComponentAdapter                    
                </see>
                <see>
                    ComponentListener                    
                </see>
                <see>
                    &lt;a href=&quot;http://java.sun.com/docs/books/tutorial/post1.0/ui/componentlistener.html&quot;&gt;Tutorial: Writing a Component Listener&lt;/a&gt;                    
                </see>
                <author>
                    Carl Quinn                    
                </author>
                <since>
                    1.1                    
                </since>
            </javadoc>
            <declaration name="COMPONENT_FIRST" type="int" line="69"/>
            <javadoc line="69">
                The first number in the range of ids used for component events.                
            </javadoc>
            <declaration name="COMPONENT_LAST" type="int" line="74"/>
            <javadoc line="74">
                The last number in the range of ids used for component events.                
            </javadoc>
            <declaration name="COMPONENT_MOVED" type="int" line="79"/>
            <javadoc line="79">
                This event indicates that the component&apos;s position changed.                
            </javadoc>
            <declaration name="COMPONENT_RESIZED" type="int" line="84"/>
            <javadoc line="84">
                This event indicates that the component&apos;s size changed.                
            </javadoc>
            <declaration name="COMPONENT_SHOWN" type="int" line="89"/>
            <javadoc line="89">
                This event indicates that the component was made visible.                
            </javadoc>
            <declaration name="COMPONENT_HIDDEN" type="int" line="94"/>
            <javadoc line="94">
                This event indicates that the component was rendered invisible.                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="102"/>
            <javadoc line="104">
                Constructs a &lt;code&gt;ComponentEvent&lt;/code&gt; object.
                  &lt;p&gt; This method throws an
                  &lt;code&gt;IllegalArgumentException&lt;/code&gt; if &lt;code&gt;source&lt;/code&gt;
                  is &lt;code&gt;null&lt;/code&gt;.                
                <param>
                    source The &lt;code&gt;Component&lt;/code&gt; that originated the event                    
                </param>
                <param>
                    id     An integer indicating the type of event.
                      For information on allowable values, see
                      the class description for {@link ComponentEvent}                    
                </param>
                <throws>
                    IllegalArgumentException if &lt;code&gt;source&lt;/code&gt; is null                    
                </throws>
                <see>
                    #getComponent()                    
                </see>
                <see>
                    #getID()                    
                </see>
            </javadoc>
            <method name="ComponentEvent" type="constructor" line="118">
                <params>
                    <param name="source" type="Component"/>
                    <param name="id" type="int"/>
                </params>
            </method>
            <javadoc line="122">
                Returns the originator of the event.                
                <return>
                    the &lt;code&gt;Component&lt;/code&gt; object that originated
                      the event, or &lt;code&gt;null&lt;/code&gt; if the object is not a
                      &lt;code&gt;Component&lt;/code&gt;.                    
                </return>
            </javadoc>
            <method name="getComponent" type="Component" line="129"/>
            <javadoc line="133">
                Returns a parameter string identifying this event.
                  This method is useful for event-logging and for debugging.                
                <return>
                    a string identifying the event and its attributes                    
                </return>
            </javadoc>
            <method name="paramString" type="String" line="139">
                <declaration name="typeStr" type="String" line="140"/>
                <declaration name="b" type="Rectangle" line="141"/>
            </method>
        </class>
    </source>