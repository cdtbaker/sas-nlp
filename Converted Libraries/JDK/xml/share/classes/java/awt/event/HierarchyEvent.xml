<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.event">
        <import package="java.awt.AWTEvent"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Container"/>
        <class name="HierarchyEvent" line="5">
            <extends class="AWTEvent"/>
            <javadoc line="5">
                An event which indicates a change to the &lt;code&gt;Component&lt;/code&gt;
                  hierarchy to which &lt;code&gt;Component&lt;/code&gt; belongs.
                  &lt;ul&gt;
                  &lt;li&gt;Hierarchy Change Events (HierarchyListener)
                  &lt;ul&gt;
                  &lt;li&gt; addition of an ancestor
                  &lt;li&gt; removal of an ancestor
                  &lt;li&gt; hierarchy made displayable
                  &lt;li&gt; hierarchy made undisplayable
                  &lt;li&gt; hierarchy shown on the screen (both visible and displayable)
                  &lt;li&gt; hierarchy hidden on the screen (either invisible or undisplayable)
                  &lt;/ul&gt;
                  &lt;li&gt;Ancestor Reshape Events (HierarchyBoundsListener)
                  &lt;ul&gt;
                  &lt;li&gt; an ancestor was resized
                  &lt;li&gt; an ancestor was moved
                  &lt;/ul&gt;
                  &lt;/ul&gt;
                  &lt;p&gt;
                  Hierarchy events are provided for notification purposes ONLY.
                  The AWT will automatically handle changes to the hierarchy internally so
                  that GUI layout and displayability works properly regardless of whether a
                  program is receiving these events or not.
                  &lt;p&gt;
                  This event is generated by a Container object (such as a Panel) when the
                  Container is added, removed, moved, or resized, and passed down the
                  hierarchy. It is also generated by a Component object when that object&apos;s
                  &lt;code&gt;addNotify&lt;/code&gt;, &lt;code&gt;removeNotify&lt;/code&gt;, &lt;code&gt;show&lt;/code&gt;, or
                  &lt;code&gt;hide&lt;/code&gt; method is called. The {@code ANCESTOR_MOVED} and{@code ANCESTOR_RESIZED}events are dispatched to every &lt;code&gt;HierarchyBoundsListener&lt;/code&gt; or
                  &lt;code&gt;HierarchyBoundsAdapter&lt;/code&gt; object which registered to receive
                  such events using the Component&apos;s &lt;code&gt;addHierarchyBoundsListener&lt;/code&gt;
                  method. (&lt;code&gt;HierarchyBoundsAdapter&lt;/code&gt; objects implement the &lt;code&gt;
                  HierarchyBoundsListener&lt;/code&gt; interface.) The {@code HIERARCHY_CHANGED} events are
                  dispatched to every &lt;code&gt;HierarchyListener&lt;/code&gt; object which registered
                  to receive such events using the Component&apos;s &lt;code&gt;addHierarchyListener
                  &lt;/code&gt; method. Each such listener object gets this &lt;code&gt;HierarchyEvent
                  &lt;/code&gt; when the event occurs.
                  &lt;p&gt;
                  An unspecified behavior will be caused if the {@code id} parameter
                  of any particular {@code HierarchyEvent} instance is not
                  in the range from {@code HIERARCHY_FIRST} to {@code HIERARCHY_LAST}.
                  &lt;br&gt;
                  The {@code changeFlags} parameter of any {@code HierarchyEvent} instance takes one of the following
                  values:
                  &lt;ul&gt;
                  &lt;li&gt; {@code HierarchyEvent.PARENT_CHANGED}&lt;li&gt; {@code HierarchyEvent.DISPLAYABILITY_CHANGED}&lt;li&gt; {@code HierarchyEvent.SHOWING_CHANGED}&lt;/ul&gt;
                  Assigning the value different from listed above will cause unspecified behavior.                
                <author>
                    David Mendenhall                    
                </author>
                <see>
                    HierarchyListener                    
                </see>
                <see>
                    HierarchyBoundsAdapter                    
                </see>
                <see>
                    HierarchyBoundsListener                    
                </see>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="60"/>
            <declaration name="HIERARCHY_FIRST" type="int" line="61"/>
            <javadoc line="61">
                Marks the first integer id for the range of hierarchy event ids.                
            </javadoc>
            <declaration name="HIERARCHY_CHANGED" type="int" line="65"/>
            <javadoc line="65">
                The event id indicating that modification was made to the
                  entire hierarchy tree.                
            </javadoc>
            <declaration name="ANCESTOR_MOVED" type="int" line="70"/>
            <javadoc line="70">
                The event id indicating an ancestor-Container was moved.                
            </javadoc>
            <declaration name="ANCESTOR_RESIZED" type="int" line="74"/>
            <javadoc line="74">
                The event id indicating an ancestor-Container was resized.                
            </javadoc>
            <declaration name="HIERARCHY_LAST" type="int" line="78"/>
            <javadoc line="78">
                Marks the last integer id for the range of ancestor event ids.                
            </javadoc>
            <declaration name="PARENT_CHANGED" type="int" line="82"/>
            <javadoc line="82">
                A change flag indicates that the &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; event
                  was generated by a reparenting operation.                
            </javadoc>
            <declaration name="DISPLAYABILITY_CHANGED" type="int" line="87"/>
            <javadoc line="87">
                A change flag indicates that the &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; event
                  was generated due to the changing of the hierarchy displayability.
                  To discern the
                  current displayability of the hierarchy, call the
                  &lt;code&gt;Component.isDisplayable&lt;/code&gt; method. Displayability changes occur
                  in response to explicit or implicit calls of the
                  &lt;code&gt;Component.addNotify&lt;/code&gt; and
                  &lt;code&gt;Component.removeNotify&lt;/code&gt; methods.                
                <see>
                    java.awt.Component#isDisplayable()                    
                </see>
                <see>
                    java.awt.Component#addNotify()                    
                </see>
                <see>
                    java.awt.Component#removeNotify()                    
                </see>
            </javadoc>
            <declaration name="SHOWING_CHANGED" type="int" line="101"/>
            <javadoc line="101">
                A change flag indicates that the &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; event
                  was generated due to the changing of the hierarchy showing state.
                  To discern the
                  current showing state of the hierarchy, call the
                  &lt;code&gt;Component.isShowing&lt;/code&gt; method. Showing state changes occur
                  when either the displayability or visibility of the
                  hierarchy occurs. Visibility changes occur in response to explicit
                  or implicit calls of the &lt;code&gt;Component.show&lt;/code&gt; and
                  &lt;code&gt;Component.hide&lt;/code&gt; methods.                
                <see>
                    java.awt.Component#isShowing()                    
                </see>
                <see>
                    java.awt.Component#addNotify()                    
                </see>
                <see>
                    java.awt.Component#removeNotify()                    
                </see>
                <see>
                    java.awt.Component#show()                    
                </see>
                <see>
                    java.awt.Component#hide()                    
                </see>
            </javadoc>
            <declaration name="changed" type="Component" line="118"/>
            <declaration name="changedParent" type="Container" line="119"/>
            <declaration name="changeFlags" type="long" line="120"/>
            <javadoc line="121">
                Constructs an &lt;code&gt;HierarchyEvent&lt;/code&gt; object to identify a
                  change in the &lt;code&gt;Component&lt;/code&gt; hierarchy.
                  &lt;p&gt;This method throws an
                  &lt;code&gt;IllegalArgumentException&lt;/code&gt; if &lt;code&gt;source&lt;/code&gt;
                  is &lt;code&gt;null&lt;/code&gt;.                
                <param>
                    source          The &lt;code&gt;Component&lt;/code&gt; object that
                      originated the event                    
                </param>
                <param>
                    id              An integer indicating the type of event.
                      For information on allowable values, see
                      the class description for {@link HierarchyEvent}                    
                </param>
                <param>
                    changed         The &lt;code&gt;Component&lt;/code&gt; at the top of
                      the hierarchy which was changed                    
                </param>
                <param>
                    changedParent   The parent of the &lt;code&gt;changed&lt;/code&gt; component.
                      This
                      may be the parent before or after the
                      change, depending on the type of change                    
                </param>
                <throws>
                    IllegalArgumentException if &lt;code&gt;source&lt;/code&gt; is {@code null}                    
                </throws>
                <see>
                    #getSource()                    
                </see>
                <see>
                    #getID()                    
                </see>
                <see>
                    #getChanged()                    
                </see>
                <see>
                    #getChangedParent()                    
                </see>
            </javadoc>
            <method name="HierarchyEvent" type="constructor" line="144">
                <params>
                    <param name="source" type="Component"/>
                    <param name="id" type="int"/>
                    <param name="changed" type="Component"/>
                    <param name="changedParent" type="Container"/>
                </params>
            </method>
            <javadoc line="149">
                Constructs an &lt;code&gt;HierarchyEvent&lt;/code&gt; object to identify
                  a change in the &lt;code&gt;Component&lt;/code&gt; hierarchy.
                  &lt;p&gt; This method throws an
                  &lt;code&gt;IllegalArgumentException&lt;/code&gt; if &lt;code&gt;source&lt;/code&gt;
                  is &lt;code&gt;null&lt;/code&gt;.                
                <param>
                    source          The &lt;code&gt;Component&lt;/code&gt; object that
                      originated the event                    
                </param>
                <param>
                    id              An integer indicating the type of event.
                      For information on allowable values, see
                      the class description for {@link HierarchyEvent}                    
                </param>
                <param>
                    changed         The &lt;code&gt;Component&lt;/code&gt; at the top
                      of the hierarchy which was changed                    
                </param>
                <param>
                    changedParent   The parent of the &lt;code&gt;changed&lt;/code&gt; component.
                      This
                      may be the parent before or after the
                      change, depending on the type of change                    
                </param>
                <param>
                    changeFlags     A bitmask which indicates the type(s) of
                      the &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; events
                      represented in this event object.
                      For information on allowable values, see
                      the class description for {@link HierarchyEvent}                    
                </param>
                <throws>
                    IllegalArgumentException if &lt;code&gt;source&lt;/code&gt; is null                    
                </throws>
                <see>
                    #getSource()                    
                </see>
                <see>
                    #getID()                    
                </see>
                <see>
                    #getChanged()                    
                </see>
                <see>
                    #getChangedParent()                    
                </see>
                <see>
                    #getChangeFlags()                    
                </see>
            </javadoc>
            <method name="HierarchyEvent" type="constructor" line="178">
                <params>
                    <param name="source" type="Component"/>
                    <param name="id" type="int"/>
                    <param name="changed" type="Component"/>
                    <param name="changedParent" type="Container"/>
                    <param name="changeFlags" type="long"/>
                </params>
            </method>
            <javadoc line="184">
                Returns the originator of the event.                
                <return>
                    the &lt;code&gt;Component&lt;/code&gt; object that originated
                      the event, or &lt;code&gt;null&lt;/code&gt; if the object is not a
                      &lt;code&gt;Component&lt;/code&gt;.                    
                </return>
            </javadoc>
            <method name="getComponent" type="Component" line="190"/>
            <javadoc line="193">
                Returns the Component at the top of the hierarchy which was
                  changed.                
                <return>
                    the changed Component                    
                </return>
            </javadoc>
            <method name="getChanged" type="Component" line="198"/>
            <javadoc line="201">
                Returns the parent of the Component returned by &lt;code&gt;
                  getChanged()&lt;/code&gt;. For a HIERARCHY_CHANGED event where the
                  change was of type PARENT_CHANGED via a call to &lt;code&gt;
                  Container.add&lt;/code&gt;, the parent returned is the parent
                  after the add operation. For a HIERARCHY_CHANGED event where
                  the change was of type PARENT_CHANGED via a call to &lt;code&gt;
                  Container.remove&lt;/code&gt;, the parent returned is the parent
                  before the remove operation. For all other events and types,
                  the parent returned is the parent during the operation.                
                <return>
                    the parent of the changed Component                    
                </return>
            </javadoc>
            <method name="getChangedParent" type="Container" line="213"/>
            <javadoc line="216">
                Returns a bitmask which indicates the type(s) of
                  HIERARCHY_CHANGED events represented in this event object.
                  The bits have been bitwise-ored together.                
                <return>
                    the bitmask, or 0 if this is not an HIERARCHY_CHANGED
                      event                    
                </return>
            </javadoc>
            <method name="getChangeFlags" type="long" line="223"/>
            <javadoc line="226">
                Returns a parameter string identifying this event.
                  This method is useful for event-logging and for debugging.                
                <return>
                    a string identifying the event and its attributes                    
                </return>
            </javadoc>
            <method name="paramString" type="String" line="231">
                <declaration name="typeStr" type="String" line="232"/>
                <scope line="241">
                    <declaration name="first" type="boolean" line="243"/>
                    <scope line="244"/>
                    <scope line="248">
                        <scope line="249"/>
                        <scope line="252"/>
                    </scope>
                    <scope line="257">
                        <scope line="258"/>
                        <scope line="261"/>
                    </scope>
                    <scope line="266"/>
                </scope>
            </method>
        </class>
    </source>