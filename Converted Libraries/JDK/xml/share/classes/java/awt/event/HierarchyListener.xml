<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.event">
        <import package="java.util.EventListener"/>
        <interface name="HierarchyListener">
            <implements interface="EventListener"/>
            <javadoc line="30">
                The listener interface for receiving hierarchy changed events.
                  The class that is interested in processing a hierarchy changed event
                  should implement this interface.
                  The listener object created from that class is then registered with a
                  Component using the Component&apos;s &lt;code&gt;addHierarchyListener&lt;/code&gt;
                  method. When the hierarchy to which the Component belongs changes, the
                  &lt;code&gt;hierarchyChanged&lt;/code&gt; method in the listener object is invoked,
                  and the &lt;code&gt;HierarchyEvent&lt;/code&gt; is passed to it.
                  &lt;p&gt;
                  Hierarchy events are provided for notification purposes ONLY;
                  The AWT will automatically handle changes to the hierarchy internally so
                  that GUI layout, displayability, and visibility work properly regardless
                  of whether a program registers a &lt;code&gt;HierarchyListener&lt;/code&gt; or not.                
                <author>
                    David Mendenhall                    
                </author>
                <see>
                    HierarchyEvent                    
                </see>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="hierarchyChanged" type="void" line="50"/>
            <javadoc line="50">
                Called when the hierarchy has been changed. To discern the actual
                  type of change, call &lt;code&gt;HierarchyEvent.getChangeFlags()&lt;/code&gt;.                
                <see>
                    HierarchyEvent#getChangeFlags()                    
                </see>
            </javadoc>
        </interface>
    </source>