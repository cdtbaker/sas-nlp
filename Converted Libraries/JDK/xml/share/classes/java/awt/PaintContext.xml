<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt">
        <import package="java.awt.image.Raster"/>
        <import package="java.awt.image.ColorModel"/>
        <interface name="PaintContext">
            <javadoc line="4">
                The &lt;code&gt;PaintContext&lt;/code&gt; interface defines the encapsulated
                  and optimized environment to generate color patterns in device
                  space for fill or stroke operations on a{@link Graphics2D}.  The &lt;code&gt;PaintContext&lt;/code&gt; provides
                  the necessary colors for &lt;code&gt;Graphics2D&lt;/code&gt; operations in the
                  form of a {@link Raster} associated with a {@link ColorModel}.
                  The &lt;code&gt;PaintContext&lt;/code&gt; maintains state for a particular paint
                  operation.  In a multi-threaded environment, several
                  contexts can exist simultaneously for a single {@link Paint} object.                
                <see>
                    Paint                    
                </see>
            </javadoc>
            <method name="dispose" type="void" line="16"/>
            <javadoc line="16">
                Releases the resources allocated for the operation.                
            </javadoc>
            <method name="getColorModel" type="ColorModel" line="20"/>
            <javadoc line="20">
                Returns the &lt;code&gt;ColorModel&lt;/code&gt; of the output.  Note that
                  this &lt;code&gt;ColorModel&lt;/code&gt; might be different from the hint
                  specified in the{@link Paint#createContext(ColorModel,Rectangle,Rectangle2D,AffineTransform,RenderingHints) createContext} method of
                  &lt;code&gt;Paint&lt;/code&gt;.  Not all &lt;code&gt;PaintContext&lt;/code&gt; objects are
                  capable of generating color patterns in an arbitrary
                  &lt;code&gt;ColorModel&lt;/code&gt;.                
                <return>
                    the <code>ColorModel</code> of the output.                    
                </return>
            </javadoc>
            <method name="getRaster" type="Raster" line="30"/>
            <javadoc line="30">
                Returns a &lt;code&gt;Raster&lt;/code&gt; containing the colors generated for
                  the graphics operation.                
                <param>
                    x the x coordinate of the area in device space
                      for which colors are generated.                    
                </param>
                <param>
                    y the y coordinate of the area in device space
                      for which colors are generated.                    
                </param>
                <param>
                    w the width of the area in device space                    
                </param>
                <param>
                    h the height of the area in device space                    
                </param>
                <return>
                    a <code>Raster</code> representing the specified
                      rectangular area and containing the colors generated for
                      the graphics operation.                    
                </return>
            </javadoc>
        </interface>
    </source>