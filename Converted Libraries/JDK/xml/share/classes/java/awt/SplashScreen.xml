<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt">
        <import package="java.io.IOException"/>
        <import package="java.awt.image"/>
        <import package="java.net.URL"/>
        <import package="java.net.URLConnection"/>
        <import package="java.io.File"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <import package="sun.awt.image.SunWritableRaster"/>
        <class name="SplashScreen" line="9">
            <javadoc line="9">
                The splash screen can be displayed at application startup, before the
                  Java Virtual Machine (JVM) starts. The splash screen is displayed as an
                  undecorated window containing an image. You can use GIF, JPEG, or PNG files
                  for the image. Animation is supported for the GIF format, while transparency
                  is supported both for GIF and PNG.  The window is positioned at the center
                  of the screen. The position on multi-monitor systems is not specified. It is
                  platform and implementation dependent.  The splash screen window is closed
                  automatically as soon as the first window is displayed by Swing/AWT (may be
                  also closed manually using the Java API, see below).
                  &lt;P&gt;
                  If your application is packaged in a jar file, you can use the
                  &quot;SplashScreen-Image&quot; option in a manifest file to show a splash screen.
                  Place the image in the jar archive and specify the path in the option.
                  The path should not have a leading slash.
                  &lt;BR&gt;
                  For example, in the &lt;code&gt;manifest.mf&lt;/code&gt; file:
                  &lt;PRE&gt;
                  Manifest-Version: 1.0
                  Main-Class: Test
                  SplashScreen-Image: filename.gif
                  &lt;/PRE&gt;
                  &lt;P&gt;
                  If the Java implementation provides the command-line interface and you run
                  your application by using the command line or a shortcut, use the Java
                  application launcher option to show a splash screen. The Oracle reference
                  implementation allows you to specify the splash screen image location with
                  the {@code -splash:} option.
                  &lt;BR&gt;
                  For example:
                  &lt;PRE&gt;
                  java -splash:filename.gif Test
                  &lt;/PRE&gt;
                  The command line interface has higher precedence over the manifest
                  setting.
                  &lt;p&gt;
                  The splash screen will be displayed as faithfully as possible to present the
                  whole splash screen image given the limitations of the target platform and
                  display.
                  &lt;p&gt;
                  It is implied that the specified image is presented on the screen &quot;as is&quot;,
                  i.e. preserving the exact color values as specified in the image file. Under
                  certain circumstances, though, the presented image may differ, e.g. when
                  applying color dithering to present a 32 bits per pixel (bpp) image on a 16
                  or 8 bpp screen. The native platform display configuration may also affect
                  the colors of the displayed image (e.g.  color profiles, etc.)
                  &lt;p&gt;
                  The {@code SplashScreen} class provides the API for controlling the splash
                  screen. This class may be used to close the splash screen, change the splash
                  screen image, get the splash screen native window position/size, and paint
                  in the splash screen. It cannot be used to create the splash screen. You
                  should use the options provided by the Java implementation for that.
                  &lt;p&gt;
                  This class cannot be instantiated. Only a single instance of this class
                  can exist, and it may be obtained by using the {@link #getSplashScreen()}static method. In case the splash screen has not been created at
                  application startup via the command line or manifest file option,
                  the &lt;code&gt;getSplashScreen&lt;/code&gt; method returns &lt;code&gt;null&lt;/code&gt;.                
                <author>
                    Oleg Semenov                    
                </author>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="SplashScreen" type="constructor" line="70">
                <params>
                    <param name="ptr" type="long"/>
                </params>
            </method>
            <javadoc line="73">
                Returns the {@code SplashScreen} object used for
                  Java startup splash screen control on systems that support display.                
                <throws>
                    UnsupportedOperationException if the splash screen feature is not
                      supported by the current toolkit                    
                </throws>
                <throws>
                    HeadlessException if {@code GraphicsEnvironment.isHeadless()}returns true                    
                </throws>
                <return>
                    the {@link SplashScreen} instance, or <code>null</code> if there is
                      none or it has already been closed                    
                </return>
            </javadoc>
            <method name="getSplashScreen" type="SplashScreen" line="82">
                <scope line="83">
                    <scope line="84"/>
                    <scope line="87">
                        <declaration name="ptr" type="long" line="89"/>
                        <scope line="90"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="97">
                Changes the splash screen image. The new image is loaded from the
                  specified URL; GIF, JPEG and PNG image formats are supported.
                  The method returns after the image has finished loading and the window
                  has been updated.
                  The splash screen window is resized according to the size of
                  the image and is centered on the screen.                
                <param>
                    imageURL the non-<code>null</code> URL for the new
                      splash screen image                    
                </param>
                <throws>
                    NullPointerException if {@code imageURL} is <code>null</code>                    
                </throws>
                <throws>
                    IOException if there was an error while loading the image                    
                </throws>
                <throws>
                    IllegalStateException if the splash screen has already been
                      closed                    
                </throws>
            </javadoc>
            <method name="setImageURL" type="void" line="111">
                <params>
                    <param name="imageURL" type="URL"/>
                </params>
                <declaration name="connection" type="URLConnection" line="113"/>
                <declaration name="length" type="int" line="115"/>
                <declaration name="stream" type="java.io.InputStream" line="116"/>
                <declaration name="buf" type="byte[]" line="117"/>
                <declaration name="off" type="int" line="118"/>
                <scope line="119">
                    <declaration name="available" type="int" line="120"/>
                    <scope line="121"/>
                    <scope line="124">
                        <scope line="126"/>
                        <declaration name="oldBuf" type="byte[]" line="129"/>
                    </scope>
                    <declaration name="result" type="int" line="133"/>
                    <scope line="134"/>
                </scope>
                <scope line="139">
                    <scope line="141"/>
                </scope>
            </method>
            <method name="checkVisible" type="void" line="147">
                <scope line="148"/>
            </method>
            <javadoc line="152">
                Returns the current splash screen image.                
                <return>
                    URL for the current splash screen image file                    
                </return>
                <throws>
                    IllegalStateException if the splash screen has already been closed                    
                </throws>
            </javadoc>
            <method name="getImageURL" type="URL" line="157">
                <scope line="158">
                    <scope line="160">
                        <scope line="161">
                            <declaration name="fileName" type="String" line="162"/>
                            <declaration name="jarName" type="String" line="163"/>
                            <scope line="164">
                                <scope line="165"/>
                                <scope line="168"/>
                            </scope>
                        </scope>
                        <scope line="173">
                            <scope line="174"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="182">
                Returns the bounds of the splash screen window as a {@link Rectangle}.
                  This may be useful if, for example, you want to replace the splash
                  screen with your window at the same location.
                  &lt;p&gt;
                  You cannot control the size or position of the splash screen.
                  The splash screen size is adjusted automatically when the image changes.
                  &lt;p&gt;
                  The image may contain transparent areas, and thus the reported bounds may
                  be larger than the visible splash screen image on the screen.                
                <return>
                    a {@code Rectangle} containing the splash screen bounds                    
                </return>
                <throws>
                    IllegalStateException if the splash screen has already been closed                    
                </throws>
            </javadoc>
            <method name="getBounds" type="Rectangle" line="195">
                <scope line="196"/>
            </method>
            <javadoc line="201">
                Returns the size of the splash screen window as a {@link Dimension}.
                  This may be useful if, for example,
                  you want to draw on the splash screen overlay surface.
                  &lt;p&gt;
                  You cannot control the size or position of the splash screen.
                  The splash screen size is adjusted automatically when the image changes.
                  &lt;p&gt;
                  The image may contain transparent areas, and thus the reported size may
                  be larger than the visible splash screen image on the screen.                
                <return>
                    a {@link Dimension} object indicating the splash screen size                    
                </return>
                <throws>
                    IllegalStateException if the splash screen has already been closed                    
                </throws>
            </javadoc>
            <method name="getSize" type="Dimension" line="214"/>
            <javadoc line="217">
                Creates a graphics context (as a {@link Graphics2D} object) for the splash
                  screen overlay image, which allows you to draw over the splash screen.
                  Note that you do not draw on the main image but on the image that is
                  displayed over the main image using alpha blending. Also note that drawing
                  on the overlay image does not necessarily update the contents of splash
                  screen window. You should call {@code update()} on the
                  &lt;code&gt;SplashScreen&lt;/code&gt; when you want the splash screen to be
                  updated immediately.
                  &lt;p&gt;
                  The pixel (0, 0) in the coordinate space of the graphics context
                  corresponds to the origin of the splash screen native window bounds (see{@link #getBounds()}).                
                <return>
                    graphics context for the splash screen overlay surface                    
                </return>
                <throws>
                    IllegalStateException if the splash screen has already been closed                    
                </throws>
            </javadoc>
            <method name="createGraphics" type="Graphics2D" line="232">
                <scope line="233">
                    <scope line="234">
                        <declaration name="dim" type="Dimension" line="235"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="241">
                Updates the splash window with current contents of the overlay image.                
                <throws>
                    IllegalStateException if the overlay image does not exist;
                      for example, if {@code createGraphics} has never been called,
                      or if the splash screen has already been closed                    
                </throws>
            </javadoc>
            <method name="update" type="void" line="247">
                <declaration name="image" type="BufferedImage" line="248"/>
                <scope line="249"/>
                <scope line="253"/>
                <declaration name="buf" type="DataBuffer" line="256"/>
                <scope line="257"/>
                <declaration name="numBanks" type="int" line="260"/>
                <scope line="261"/>
                <scope line="264"/>
                <declaration name="sm" type="SinglePixelPackedSampleModel" line="267"/>
                <declaration name="scanlineStride" type="int" line="268"/>
                <declaration name="rect" type="Rectangle" line="269"/>
                <declaration name="data" type="int[]" line="270"/>
                <scope line="271"/>
            </method>
            <javadoc line="276">
                Hides the splash screen, closes the window, and releases all associated
                  resources.                
                <throws>
                    IllegalStateException if the splash screen has already been closed                    
                </throws>
            </javadoc>
            <method name="close" type="void" line="281">
                <scope line="282"/>
            </method>
            <method name="markClosed" type="void" line="289">
                <scope line="290"/>
            </method>
            <javadoc line="295">
                Determines whether the splash screen is visible. The splash screen may
                  be hidden using {@link #close()}, it is also hidden automatically when
                  the first AWT/Swing window is made visible.
                  &lt;p&gt;
                  Note that the native platform may delay presenting the splash screen
                  native window on the screen. The return value of {@code true} for this
                  method only guarantees that the conditions to hide the splash screen
                  window have not occurred yet.                
                <return>
                    true if the splash screen is visible (has not been closed yet),
                      false otherwise                    
                </return>
            </javadoc>
            <method name="isVisible" type="boolean" line="307">
                <scope line="308"/>
            </method>
            <declaration name="image" type="BufferedImage" line="312"/>
            <declaration name="splashPtr" type="long" line="313"/>
            <declaration name="wasClosed" type="boolean" line="314"/>
            <declaration name="imageURL" type="URL" line="315"/>
            <declaration name="theInstance" type="SplashScreen" line="316"/>
            <javadoc line="316">
                The instance reference for the singleton.
                  (&lt;code&gt;null&lt;/code&gt; if no instance exists yet.)                
                <see>
                    #getSplashScreen                    
                </see>
                <see>
                    #close                    
                </see>
            </javadoc>
            <declaration name="log" type="PlatformLogger" line="323"/>
            <method name="_update" type="void" line="324"/>
            <method name="_isVisible" type="boolean" line="325"/>
            <method name="_getBounds" type="Rectangle" line="326"/>
            <method name="_getInstance" type="long" line="327"/>
            <method name="_close" type="void" line="328"/>
            <method name="_getImageFileName" type="String" line="329"/>
            <method name="_getImageJarName" type="String" line="330"/>
            <method name="_setImageData" type="boolean" line="331"/>
        </class>
    </source>