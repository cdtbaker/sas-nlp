<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt">
        <import package="java.awt.image.Raster"/>
        <import package="java.awt.image.WritableRaster"/>
        <interface name="CompositeContext">
            <javadoc line="31">
                The &lt;code&gt;CompositeContext&lt;/code&gt; interface defines the encapsulated
                  and optimized environment for a compositing operation.
                  &lt;code&gt;CompositeContext&lt;/code&gt; objects maintain state for
                  compositing operations.  In a multi-threaded environment, several
                  contexts can exist simultaneously for a single {@link Composite}object.                
                <see>
                    Composite                    
                </see>
            </javadoc>
            <method name="dispose" type="void" line="42"/>
            <javadoc line="42">
                Releases resources allocated for a context.                
            </javadoc>
            <method name="compose" type="void" line="47"/>
            <javadoc line="47">
                Composes the two source {@link Raster} objects and
                  places the result in the destination{@link WritableRaster}.  Note that the destination
                  can be the same object as either the first or second
                  source. Note that &lt;code&gt;dstIn&lt;/code&gt; and
                  &lt;code&gt;dstOut&lt;/code&gt; must be compatible with the
                  &lt;code&gt;dstColorModel&lt;/code&gt; passed to the{@link Composite#createContext(java.awt.image.ColorModel,java.awt.image.ColorModel,java.awt.RenderingHints) createContext}method of the &lt;code&gt;Composite&lt;/code&gt; interface.                
                <param>
                    src the first source for the compositing operation                    
                </param>
                <param>
                    dstIn the second source for the compositing operation                    
                </param>
                <param>
                    dstOut the <code>WritableRaster</code> into which the
                      result of the operation is stored                    
                </param>
                <see>
                    Composite                    
                </see>
            </javadoc>
        </interface>
    </source>