<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.font">
        <import package="java.awt.Image"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <class name="ImageGraphicAttribute" line="47">
            <extends class="GraphicAttribute"/>
            <javadoc line="47">
                The &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; class is an implementation of{@link GraphicAttribute} which draws images in
                  a {@link TextLayout}.                
                <see>
                    GraphicAttribute                    
                </see>
            </javadoc>
            <declaration name="fImage" type="Image" line="56"/>
            <declaration name="fImageWidth" type="float" line="57"/>
            <declaration name="fOriginX" type="float" line="58"/>
            <javadoc line="60">
                Constucts an &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; from the specified{@link Image}.  The origin is at (0,&amp;nbsp;0).                
                <param>
                    image the <code>Image</code> rendered by this
                      <code>ImageGraphicAttribute</code>.
                      This object keeps a reference to <code>image</code>.                    
                </param>
                <param>
                    alignment one of the alignments from this
                      <code>ImageGraphicAttribute</code>                    
                </param>
            </javadoc>
            <method name="ImageGraphicAttribute" type="constructor" line="69">
                <params>
                    <param name="image" type="Image"/>
                    <param name="alignment" type="int"/>
                </params>
            </method>
            <javadoc line="74">
                Constructs an &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; from the specified
                  &lt;code&gt;Image&lt;/code&gt;. The point
                  (&lt;code&gt;originX&lt;/code&gt;,&amp;nbsp;&lt;code&gt;originY&lt;/code&gt;) in the
                  &lt;code&gt;Image&lt;/code&gt; appears at the origin of the
                  &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; within the text.                
                <param>
                    image the <code>Image</code> rendered by this
                      <code>ImageGraphicAttribute</code>.
                      This object keeps a reference to <code>image</code>.                    
                </param>
                <param>
                    alignment one of the alignments from this
                      <code>ImageGraphicAttribute</code>                    
                </param>
                <param>
                    originX the X coordinate of the point within
                      the <code>Image</code> that appears at the origin of the
                      <code>ImageGraphicAttribute</code> in the text line.                    
                </param>
                <param>
                    originY the Y coordinate of the point within
                      the <code>Image</code> that appears at the origin of the
                      <code>ImageGraphicAttribute</code> in the text line.                    
                </param>
            </javadoc>
            <method name="ImageGraphicAttribute" type="constructor" line="95">
                <params>
                    <param name="image" type="Image"/>
                    <param name="alignment" type="int"/>
                    <param name="originX" type="float"/>
                    <param name="originY" type="float"/>
                </params>
                <comment line="100">
                    Can&apos;t clone image
                     fImage = (Image) image.clone();                    
                </comment>
                <comment line="107">
                    ensure origin is in Image?                    
                </comment>
            </method>
            <javadoc line="111">
                Returns the ascent of this &lt;code&gt;ImageGraphicAttribute&lt;/code&gt;.  The
                  ascent of an &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; is the distance
                  from the top of the image to the origin.                
                <return>
                    the ascent of this <code>ImageGraphicAttribute</code>.                    
                </return>
            </javadoc>
            <method name="getAscent" type="float" line="117"/>
            <javadoc line="122">
                Returns the descent of this &lt;code&gt;ImageGraphicAttribute&lt;/code&gt;.
                  The descent of an &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; is the
                  distance from the origin to the bottom of the image.                
                <return>
                    the descent of this <code>ImageGraphicAttribute</code>.                    
                </return>
            </javadoc>
            <method name="getDescent" type="float" line="128"/>
            <javadoc line="133">
                Returns the advance of this &lt;code&gt;ImageGraphicAttribute&lt;/code&gt;.
                  The advance of an &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; is the
                  distance from the origin to the right edge of the image.                
                <return>
                    the advance of this <code>ImageGraphicAttribute</code>.                    
                </return>
            </javadoc>
            <method name="getAdvance" type="float" line="139"/>
            <javadoc line="144">
                Returns a {@link Rectangle2D} that encloses all of the
                  bits rendered by this &lt;code&gt;ImageGraphicAttribute&lt;/code&gt;, relative
                  to the rendering position.  A graphic can be rendered beyond its
                  origin, ascent, descent, or advance;  but if it is, this
                  method&apos;s implementation must indicate where the graphic is rendered.                
                <return>
                    a <code>Rectangle2D</code> that encloses all of the bits
                      rendered by this <code>ImageGraphicAttribute</code>.                    
                </return>
            </javadoc>
            <method name="getBounds" type="Rectangle2D" line="153"/>
            <javadoc line="159">
                {@inheritDoc}                
            </javadoc>
            <method name="draw" type="void" line="162">
                <params>
                    <param name="graphics" type="Graphics2D"/>
                    <param name="x" type="float"/>
                    <param name="y" type="float"/>
                </params>
            </method>
            <javadoc line="167">
                Returns a hashcode for this &lt;code&gt;ImageGraphicAttribute&lt;/code&gt;.                
                <return>
                    a hash code value for this object.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="171"/>
            <javadoc line="176">
                Compares this &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; to the specified{@link Object}.                
                <param>
                    rhs the <code>Object</code> to compare for equality                    
                </param>
                <return>
                    <code>true</code> if this
                      <code>ImageGraphicAttribute</code> equals <code>rhs</code>;
                      <code>false</code> otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="184">
                <params>
                    <param name="rhs" type="Object"/>
                </params>
                <scope line="186"/>
                <scope line="189"/>
            </method>
            <javadoc line="194">
                Compares this &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; to the specified
                  &lt;code&gt;ImageGraphicAttribute&lt;/code&gt;.                
                <param>
                    rhs the <code>ImageGraphicAttribute</code> to compare for
                      equality                    
                </param>
                <return>
                    <code>true</code> if this
                      <code>ImageGraphicAttribute</code> equals <code>rhs</code>;
                      <code>false</code> otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="203">
                <params>
                    <param name="rhs" type="ImageGraphicAttribute"/>
                </params>
                <scope line="205"/>
                <scope line="209"/>
                <scope line="213"/>
                <scope line="217"/>
                <scope line="221"/>
            </method>
        </class>
    </source>