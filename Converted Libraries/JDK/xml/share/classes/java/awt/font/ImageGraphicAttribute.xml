<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.font">
        <import package="java.awt.Image"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <class name="ImageGraphicAttribute" line="5">
            <extends class="GraphicAttribute"/>
            <javadoc line="5">
                The &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; class is an implementation of{@link GraphicAttribute} which draws images in
                  a {@link TextLayout}.                
                <see>
                    GraphicAttribute                    
                </see>
            </javadoc>
            <declaration name="fImage" type="Image" line="11"/>
            <declaration name="fImageWidth" type="float" line="12"/>
            <declaration name="fOriginX" type="float" line="13"/>
            <javadoc line="14">
                Constucts an &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; from the specified{@link Image}.  The origin is at (0,&amp;nbsp;0).                
                <param>
                    image the &lt;code&gt;Image&lt;/code&gt; rendered by this
                      &lt;code&gt;ImageGraphicAttribute&lt;/code&gt;.
                      This object keeps a reference to &lt;code&gt;image&lt;/code&gt;.                    
                </param>
                <param>
                    alignment one of the alignments from this
                      &lt;code&gt;ImageGraphicAttribute&lt;/code&gt;                    
                </param>
            </javadoc>
            <method name="ImageGraphicAttribute" type="constructor" line="22">
                <params>
                    <param name="image" type="Image"/>
                    <param name="alignment" type="int"/>
                </params>
            </method>
            <javadoc line="25">
                Constructs an &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; from the specified
                  &lt;code&gt;Image&lt;/code&gt;. The point
                  (&lt;code&gt;originX&lt;/code&gt;,&amp;nbsp;&lt;code&gt;originY&lt;/code&gt;) in the
                  &lt;code&gt;Image&lt;/code&gt; appears at the origin of the
                  &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; within the text.                
                <param>
                    image the &lt;code&gt;Image&lt;/code&gt; rendered by this
                      &lt;code&gt;ImageGraphicAttribute&lt;/code&gt;.
                      This object keeps a reference to &lt;code&gt;image&lt;/code&gt;.                    
                </param>
                <param>
                    alignment one of the alignments from this
                      &lt;code&gt;ImageGraphicAttribute&lt;/code&gt;                    
                </param>
                <param>
                    originX the X coordinate of the point within
                      the &lt;code&gt;Image&lt;/code&gt; that appears at the origin of the
                      &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; in the text line.                    
                </param>
                <param>
                    originY the Y coordinate of the point within
                      the &lt;code&gt;Image&lt;/code&gt; that appears at the origin of the
                      &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; in the text line.                    
                </param>
            </javadoc>
            <method name="ImageGraphicAttribute" type="constructor" line="43">
                <params>
                    <param name="image" type="Image"/>
                    <param name="alignment" type="int"/>
                    <param name="originX" type="float"/>
                    <param name="originY" type="float"/>
                </params>
            </method>
            <javadoc line="51">
                Returns the ascent of this &lt;code&gt;ImageGraphicAttribute&lt;/code&gt;.  The
                  ascent of an &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; is the distance
                  from the top of the image to the origin.                
                <return>
                    the ascent of this &lt;code&gt;ImageGraphicAttribute&lt;/code&gt;.                    
                </return>
            </javadoc>
            <method name="getAscent" type="float" line="57"/>
            <javadoc line="60">
                Returns the descent of this &lt;code&gt;ImageGraphicAttribute&lt;/code&gt;.
                  The descent of an &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; is the
                  distance from the origin to the bottom of the image.                
                <return>
                    the descent of this &lt;code&gt;ImageGraphicAttribute&lt;/code&gt;.                    
                </return>
            </javadoc>
            <method name="getDescent" type="float" line="66"/>
            <javadoc line="69">
                Returns the advance of this &lt;code&gt;ImageGraphicAttribute&lt;/code&gt;.
                  The advance of an &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; is the
                  distance from the origin to the right edge of the image.                
                <return>
                    the advance of this &lt;code&gt;ImageGraphicAttribute&lt;/code&gt;.                    
                </return>
            </javadoc>
            <method name="getAdvance" type="float" line="75"/>
            <javadoc line="78">
                Returns a {@link Rectangle2D} that encloses all of the
                  bits rendered by this &lt;code&gt;ImageGraphicAttribute&lt;/code&gt;, relative
                  to the rendering position.  A graphic can be rendered beyond its
                  origin, ascent, descent, or advance;  but if it is, this
                  method&apos;s implementation must indicate where the graphic is rendered.                
                <return>
                    a &lt;code&gt;Rectangle2D&lt;/code&gt; that encloses all of the bits
                      rendered by this &lt;code&gt;ImageGraphicAttribute&lt;/code&gt;.                    
                </return>
            </javadoc>
            <method name="getBounds" type="Rectangle2D" line="87"/>
            <javadoc line="90">
                {@inheritDoc}                
            </javadoc>
            <method name="draw" type="void" line="93">
                <params>
                    <param name="graphics" type="Graphics2D"/>
                    <param name="x" type="float"/>
                    <param name="y" type="float"/>
                </params>
            </method>
            <javadoc line="96">
                Returns a hashcode for this &lt;code&gt;ImageGraphicAttribute&lt;/code&gt;.                
                <return>
                    a hash code value for this object.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="100"/>
            <javadoc line="103">
                Compares this &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; to the specified{@link Object}.                
                <param>
                    rhs the &lt;code&gt;Object&lt;/code&gt; to compare for equality                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if this
                      &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; equals &lt;code&gt;rhs&lt;/code&gt;;
                      &lt;code&gt;false&lt;/code&gt; otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="110">
                <params>
                    <param name="rhs" type="Object"/>
                </params>
                <scope line="111"/>
                <scope line="114"/>
            </method>
            <javadoc line="118">
                Compares this &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; to the specified
                  &lt;code&gt;ImageGraphicAttribute&lt;/code&gt;.                
                <param>
                    rhs the &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; to compare for
                      equality                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if this
                      &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; equals &lt;code&gt;rhs&lt;/code&gt;;
                      &lt;code&gt;false&lt;/code&gt; otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="127">
                <params>
                    <param name="rhs" type="ImageGraphicAttribute"/>
                </params>
                <scope line="128"/>
                <scope line="131"/>
                <scope line="134"/>
                <scope line="137"/>
                <scope line="140"/>
            </method>
        </class>
    </source>