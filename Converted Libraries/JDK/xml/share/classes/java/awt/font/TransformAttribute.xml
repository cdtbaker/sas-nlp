<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.font">
        <import package="java.awt.geom.AffineTransform"/>
        <import package="java.io.Serializable"/>
        <import package="java.io.ObjectStreamException"/>
        <class name="TransformAttribute" line="5">
            <implements interface="Serializable"/>
            <javadoc line="5">
                The &lt;code&gt;TransformAttribute&lt;/code&gt; class provides an immutable
                  wrapper for a transform so that it is safe to use as an attribute.                
            </javadoc>
            <declaration name="transform" type="AffineTransform" line="10"/>
            <javadoc line="10">
                The &lt;code&gt;AffineTransform&lt;/code&gt; for this
                  &lt;code&gt;TransformAttribute&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt;
                  if &lt;code&gt;AffineTransform&lt;/code&gt; is the identity transform.                
            </javadoc>
            <javadoc line="16">
                Wraps the specified transform.  The transform is cloned and a
                  reference to the clone is kept.  The original transform is unchanged.
                  If null is passed as the argument, this constructor behaves as though
                  it were the identity transform.  (Note that it is preferable to use{@link #IDENTITY} in this case.)                
                <param>
                    transform the specified {@link AffineTransform} to be wrapped,
                      or null.                    
                </param>
            </javadoc>
            <method name="TransformAttribute" type="constructor" line="24">
                <params>
                    <param name="transform" type="AffineTransform"/>
                </params>
                <scope line="25"/>
            </method>
            <javadoc line="29">
                Returns a copy of the wrapped transform.                
                <return>
                    a &lt;code&gt;AffineTransform&lt;/code&gt; that is a copy of the wrapped
                      transform of this &lt;code&gt;TransformAttribute&lt;/code&gt;.                    
                </return>
            </javadoc>
            <method name="getTransform" type="AffineTransform" line="34">
                <declaration name="at" type="AffineTransform" line="35"/>
            </method>
            <javadoc line="38">
                Returns &lt;code&gt;true&lt;/code&gt; if the wrapped transform is
                  an identity transform.                
                <return>
                    &lt;code&gt;true&lt;/code&gt; if the wrapped transform is
                      an identity transform; &lt;code&gt;false&lt;/code&gt; otherwise.                    
                </return>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="isIdentity" type="boolean" line="45"/>
            <declaration name="IDENTITY" type="TransformAttribute" line="48"/>
            <javadoc line="48">
                A &lt;code&gt;TransformAttribute&lt;/code&gt; representing the identity transform.                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="writeObject" type="void" line="53">
                <params>
                    <param name="s" type="java.io.ObjectOutputStream"/>
                </params>
                <scope line="54"/>
            </method>
            <method name="readResolve" type="Object" line="59">
                <scope line="60"/>
            </method>
            <declaration name="serialVersionUID" type="long" line="65"/>
            <javadoc line="66">
                @since 1.6                
            </javadoc>
            <method name="hashCode" type="int" line="69"/>
            <javadoc line="72">
                Returns &lt;code&gt;true&lt;/code&gt; if rhs is a &lt;code&gt;TransformAttribute&lt;/code&gt;
                  whose transform is equal to this &lt;code&gt;TransformAttribute&lt;/code&gt;&apos;s
                  transform.                
                <param>
                    rhs the object to compare to                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if the argument is a &lt;code&gt;TransformAttribute&lt;/code&gt;
                      whose transform is equal to this &lt;code&gt;TransformAttribute&lt;/code&gt;&apos;s
                      transform.                    
                </return>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="equals" type="boolean" line="82">
                <params>
                    <param name="rhs" type="Object"/>
                </params>
                <scope line="83">
                    <declaration name="that" type="TransformAttribute" line="84"/>
                    <scope line="85"/>
                </scope>
                <scope line="90"/>
            </method>
        </class>
    </source>