<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.font">
        <class name="LineMetrics" line="28">
            <javadoc line="28">
                The &lt;code&gt;LineMetrics&lt;/code&gt; class allows access to the
                  metrics needed to layout characters along a line
                  and to layout of a set of lines.  A &lt;code&gt;LineMetrics&lt;/code&gt;
                  object encapsulates the measurement information associated
                  with a run of text.
                  &lt;p&gt;
                  Fonts can have different metrics for different ranges of
                  characters.  The &lt;code&gt;getLineMetrics&lt;/code&gt; methods of{@link java.awt.Font Font} take some text as an argument
                  and return a &lt;code&gt;LineMetrics&lt;/code&gt; object describing the
                  metrics of the initial number of characters in that text, as
                  returned by {@link #getNumChars}.                
            </javadoc>
            <method name="getNumChars" type="int" line="47"/>
            <javadoc line="47">
                Returns the number of characters (&lt;code&gt;char&lt;/code&gt; values) in the text whose
                  metrics are encapsulated by this &lt;code&gt;LineMetrics&lt;/code&gt;
                  object.                
                <return>
                    the number of characters (<code>char</code> values) in the text with which
                      this <code>LineMetrics</code> was created.                    
                </return>
            </javadoc>
            <method name="getAscent" type="float" line="56"/>
            <javadoc line="56">
                Returns the ascent of the text.  The ascent
                  is the distance from the baseline
                  to the ascender line.  The ascent usually represents the
                  the height of the capital letters of the text.  Some characters
                  can extend above the ascender line.                
                <return>
                    the ascent of the text.                    
                </return>
            </javadoc>
            <method name="getDescent" type="float" line="66"/>
            <javadoc line="66">
                Returns the descent of the text.  The descent
                  is the distance from the baseline
                  to the descender line.  The descent usually represents
                  the distance to the bottom of lower case letters like
                  &apos;p&apos;.  Some characters can extend below the descender
                  line.                
                <return>
                    the descent of the text.                    
                </return>
            </javadoc>
            <method name="getLeading" type="float" line="77"/>
            <javadoc line="77">
                Returns the leading of the text. The
                  leading is the recommended
                  distance from the bottom of the descender line to the
                  top of the next line.                
                <return>
                    the leading of the text.                    
                </return>
            </javadoc>
            <method name="getHeight" type="float" line="86"/>
            <javadoc line="86">
                Returns the height of the text.  The
                  height is equal to the sum of the ascent, the
                  descent and the leading.                
                <return>
                    the height of the text.                    
                </return>
            </javadoc>
            <method name="getBaselineIndex" type="int" line="94"/>
            <javadoc line="94">
                Returns the baseline index of the text.
                  The index is one of{@link java.awt.Font#ROMAN_BASELINE ROMAN_BASELINE},{@link java.awt.Font#CENTER_BASELINE CENTER_BASELINE},{@link java.awt.Font#HANGING_BASELINE HANGING_BASELINE}.                
                <return>
                    the baseline of the text.                    
                </return>
            </javadoc>
            <method name="getBaselineOffsets" type="float[]" line="104"/>
            <javadoc line="104">
                Returns the baseline offsets of the text,
                  relative to the baseline of the text.  The
                  offsets are indexed by baseline index.  For
                  example, if the baseline index is
                  &lt;code&gt;CENTER_BASELINE&lt;/code&gt; then
                  &lt;code&gt;offsets[HANGING_BASELINE]&lt;/code&gt; is usually
                  negative, &lt;code&gt;offsets[CENTER_BASELINE]&lt;/code&gt;
                  is zero, and &lt;code&gt;offsets[ROMAN_BASELINE]&lt;/code&gt;
                  is usually positive.                
                <return>
                    the baseline offsets of the text.                    
                </return>
            </javadoc>
            <method name="getStrikethroughOffset" type="float" line="118"/>
            <javadoc line="118">
                Returns the position of the strike-through line
                  relative to the baseline.                
                <return>
                    the position of the strike-through line.                    
                </return>
            </javadoc>
            <method name="getStrikethroughThickness" type="float" line="125"/>
            <javadoc line="125">
                Returns the thickness of the strike-through line.                
                <return>
                    the thickness of the strike-through line.                    
                </return>
            </javadoc>
            <method name="getUnderlineOffset" type="float" line="131"/>
            <javadoc line="131">
                Returns the position of the underline relative to
                  the baseline.                
                <return>
                    the position of the underline.                    
                </return>
            </javadoc>
            <method name="getUnderlineThickness" type="float" line="138"/>
            <javadoc line="138">
                Returns the thickness of the underline.                
                <return>
                    the thickness of the underline.                    
                </return>
            </javadoc>
        </class>
    </source>