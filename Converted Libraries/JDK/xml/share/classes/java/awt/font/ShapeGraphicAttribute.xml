<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.font">
        <import package="java.awt.Shape"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.Shape"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <class name="ShapeGraphicAttribute" line="51">
            <extends class="GraphicAttribute"/>
            <comment line="72">
                cache shape bounds, since GeneralPath doesn&apos;t                
            </comment>
            <javadoc line="51">
                The &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt; class is an implementation of{@link GraphicAttribute} that draws shapes in a {@link TextLayout}.                
                <see>
                    GraphicAttribute                    
                </see>
            </javadoc>
            <declaration name="fShape" type="Shape" line="58"/>
            <declaration name="fStroke" type="boolean" line="59"/>
            <declaration name="STROKE" type="boolean" line="61"/>
            <javadoc line="61">
                A key indicating the shape should be stroked with a 1-pixel wide stroke.                
            </javadoc>
            <declaration name="FILL" type="boolean" line="66"/>
            <javadoc line="66">
                A key indicating the shape should be filled.                
            </javadoc>
            <declaration name="fShapeBounds" type="Rectangle2D" line="72"/>
            <javadoc line="74">
                Constructs a &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt; for the specified{@link Shape}.                
                <param>
                    shape the &lt;code&gt;Shape&lt;/code&gt; to render.  The
                      &lt;code&gt;Shape&lt;/code&gt; is rendered with its origin at the origin of
                      this &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt; in the
                      host &lt;code&gt;TextLayout&lt;/code&gt;.  This object maintains a reference to
                      &lt;code&gt;shape&lt;/code&gt;.                    
                </param>
                <param>
                    alignment one of the alignments from this
                      &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt;.                    
                </param>
                <param>
                    stroke &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;Shape&lt;/code&gt; should be
                      stroked; &lt;code&gt;false&lt;/code&gt; if the &lt;code&gt;Shape&lt;/code&gt; should be
                      filled.                    
                </param>
            </javadoc>
            <method name="ShapeGraphicAttribute" type="constructor" line="90">
                <params>
                    <param name="shape" type="Shape"/>
                    <param name="alignment" type="int"/>
                    <param name="stroke" type="boolean"/>
                </params>
            </method>
            <javadoc line="99">
                Returns the ascent of this &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt;.  The
                  ascent of a &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt; is the positive
                  distance from the origin of its &lt;code&gt;Shape&lt;/code&gt; to the top of
                  bounds of its &lt;code&gt;Shape&lt;/code&gt;.                
                <return>
                    the ascent of this &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt;.                    
                </return>
            </javadoc>
            <method name="getAscent" type="float" line="106"/>
            <javadoc line="111">
                Returns the descent of this &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt;.
                  The descent of a &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt; is the distance
                  from the origin of its &lt;code&gt;Shape&lt;/code&gt; to the bottom of the
                  bounds of its &lt;code&gt;Shape&lt;/code&gt;.                
                <return>
                    the descent of this &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt;.                    
                </return>
            </javadoc>
            <method name="getDescent" type="float" line="118"/>
            <javadoc line="123">
                Returns the advance of this &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt;.
                  The advance of a &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt; is the distance
                  from the origin of its &lt;code&gt;Shape&lt;/code&gt; to the right side of the
                  bounds of its &lt;code&gt;Shape&lt;/code&gt;.                
                <return>
                    the advance of this &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt;.                    
                </return>
            </javadoc>
            <method name="getAdvance" type="float" line="130"/>
            <javadoc line="135">
                {@inheritDoc}                
            </javadoc>
            <method name="draw" type="void" line="138">
                <params>
                    <param name="graphics" type="Graphics2D"/>
                    <param name="x" type="float"/>
                    <param name="y" type="float"/>
                </params>
                <comment line="141">
                    translating graphics to draw Shape !!!                    
                </comment>
                <comment line="146">
                    REMIND: set stroke to correct size                    
                </comment>
                <scope line="143">
                    <scope line="144"/>
                    <scope line="148"/>
                </scope>
                <scope line="152"/>
            </method>
            <javadoc line="157">
                Returns a {@link Rectangle2D} that encloses all of the
                  bits drawn by this &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt; relative to
                  the rendering position.  A graphic can be rendered beyond its
                  origin, ascent, descent, or advance;  but if it does, this method&apos;s
                  implementation should indicate where the graphic is rendered.                
                <return>
                    a &lt;code&gt;Rectangle2D&lt;/code&gt; that encloses all of the bits
                      rendered by this &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt;.                    
                </return>
            </javadoc>
            <method name="getBounds" type="Rectangle2D" line="166">
                <declaration name="bounds" type="Rectangle2D.Float" line="168"/>
                <scope line="171"/>
            </method>
            <javadoc line="179">
                Return a {@link java.awt.Shape} that represents the region that
                  this &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt; renders.  This is used when a{@link TextLayout} is requested to return the outline of the text.
                  The (untransformed) shape must not extend outside the rectangular
                  bounds returned by &lt;code&gt;getBounds&lt;/code&gt;.                
                <param>
                    tx an optional {@link AffineTransform} to apply to the
                      this &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt;. This can be null.                    
                </param>
                <return>
                    the &lt;code&gt;Shape&lt;/code&gt; representing this graphic attribute,
                      suitable for stroking or filling.                    
                </return>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="getOutline" type="Shape" line="191">
                <params>
                    <param name="tx" type="AffineTransform"/>
                </params>
            </method>
            <javadoc line="195">
                Returns a hashcode for this &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt;.                
                <return>
                    a hash code value for this
                      &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt;.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="200"/>
            <javadoc line="205">
                Compares this &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt; to the specified
                  &lt;code&gt;Object&lt;/code&gt;.                
                <param>
                    rhs the &lt;code&gt;Object&lt;/code&gt; to compare for equality                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if this
                      &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt; equals &lt;code&gt;rhs&lt;/code&gt;;
                      &lt;code&gt;false&lt;/code&gt; otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="213">
                <params>
                    <param name="rhs" type="Object"/>
                </params>
                <scope line="215"/>
                <scope line="218"/>
            </method>
            <javadoc line="223">
                Compares this &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt; to the specified
                  &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt;.                
                <param>
                    rhs the &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt; to compare for
                      equality                    
                </param>
                <return>
                    &lt;code&gt;true&lt;/code&gt; if this
                      &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt; equals &lt;code&gt;rhs&lt;/code&gt;;
                      &lt;code&gt;false&lt;/code&gt; otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="232">
                <params>
                    <param name="rhs" type="ShapeGraphicAttribute"/>
                </params>
                <scope line="234"/>
                <scope line="238"/>
                <scope line="242"/>
                <scope line="246"/>
                <scope line="250"/>
            </method>
        </class>
    </source>