<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.font">
        <class name="GlyphJustificationInfo" line="2">
            <javadoc line="2">
                The &lt;code&gt;GlyphJustificationInfo&lt;/code&gt; class represents information
                  about the justification properties of a glyph.  A glyph is the visual
                  representation of one or more characters.  Many different glyphs can
                  be used to represent a single character or combination of characters.
                  The four justification properties represented by
                  &lt;code&gt;GlyphJustificationInfo&lt;/code&gt; are weight, priority, absorb and
                  limit.
                  &lt;p&gt;
                  Weight is the overall &apos;weight&apos; of the glyph in the line.  Generally it is
                  proportional to the size of the font.  Glyphs with larger weight are
                  allocated a correspondingly larger amount of the change in space.
                  &lt;p&gt;
                  Priority determines the justification phase in which this glyph is used.
                  All glyphs of the same priority are examined before glyphs of the next
                  priority.  If all the change in space can be allocated to these glyphs
                  without exceeding their limits, then glyphs of the next priority are not
                  examined. There are four priorities, kashida, whitespace, interchar,
                  and none.  KASHIDA is the first priority examined. NONE is the last
                  priority examined.
                  &lt;p&gt;
                  Absorb determines whether a glyph absorbs all change in space.  Within a
                  given priority, some glyphs may absorb all the change in space.  If any of
                  these glyphs are present, no glyphs of later priority are examined.
                  &lt;p&gt;
                  Limit determines the maximum or minimum amount by which the glyph can
                  change. Left and right sides of the glyph can have different limits.
                  &lt;p&gt;
                  Each &lt;code&gt;GlyphJustificationInfo&lt;/code&gt; represents two sets of
                  metrics, which are &lt;i&gt;growing&lt;/i&gt; and &lt;i&gt;shrinking&lt;/i&gt;.  Growing
                  metrics are used when the glyphs on a line are to be
                  spread apart to fit a larger width.  Shrinking metrics are used when
                  the glyphs are to be moved together to fit a smaller width.                
            </javadoc>
            <javadoc line="37">
                Constructs information about the justification properties of a
                  glyph.                
                <param>
                    weight the weight of this glyph when allocating space.  Must be non-negative.                    
                </param>
                <param>
                    growAbsorb if <code>true</code> this glyph absorbs
                      all extra space at this priority and lower priority levels when it
                      grows                    
                </param>
                <param>
                    growPriority the priority level of this glyph when it
                      grows                    
                </param>
                <param>
                    growLeftLimit the maximum amount by which the left side of this
                      glyph can grow.  Must be non-negative.                    
                </param>
                <param>
                    growRightLimit the maximum amount by which the right side of this
                      glyph can grow.  Must be non-negative.                    
                </param>
                <param>
                    shrinkAbsorb if <code>true</code>, this glyph absorbs all
                      remaining shrinkage at this and lower priority levels when it
                      shrinks                    
                </param>
                <param>
                    shrinkPriority the priority level of this glyph when
                      it shrinks                    
                </param>
                <param>
                    shrinkLeftLimit the maximum amount by which the left side of this
                      glyph can shrink.  Must be non-negative.                    
                </param>
                <param>
                    shrinkRightLimit the maximum amount by which the right side
                      of this glyph can shrink.  Must be non-negative.                    
                </param>
            </javadoc>
            <method name="GlyphJustificationInfo" type="constructor" line="60">
                <params>
                    <param name="weight" type="float"/>
                    <param name="growAbsorb" type="boolean"/>
                    <param name="growPriority" type="int"/>
                    <param name="growLeftLimit" type="float"/>
                    <param name="growRightLimit" type="float"/>
                    <param name="shrinkAbsorb" type="boolean"/>
                    <param name="shrinkPriority" type="int"/>
                    <param name="shrinkLeftLimit" type="float"/>
                    <param name="shrinkRightLimit" type="float"/>
                </params>
                <scope line="61"/>
                <scope line="64"/>
                <scope line="67"/>
                <scope line="70"/>
                <scope line="73"/>
                <scope line="76"/>
                <scope line="79"/>
            </method>
            <method name="priorityIsValid" type="boolean" line="92">
                <params>
                    <param name="priority" type="int"/>
                </params>
            </method>
            <declaration name="PRIORITY_KASHIDA" type="int" line="95"/>
            <javadoc line="95">
                The highest justification priority.                
            </javadoc>
            <declaration name="PRIORITY_WHITESPACE" type="int" line="99"/>
            <javadoc line="99">
                The second highest justification priority.                
            </javadoc>
            <declaration name="PRIORITY_INTERCHAR" type="int" line="103"/>
            <javadoc line="103">
                The second lowest justification priority.                
            </javadoc>
            <declaration name="PRIORITY_NONE" type="int" line="107"/>
            <javadoc line="107">
                The lowest justification priority.                
            </javadoc>
            <declaration name="weight" type="float" line="111"/>
            <javadoc line="111">
                The weight of this glyph.                
            </javadoc>
            <declaration name="growPriority" type="int" line="115"/>
            <javadoc line="115">
                The priority level of this glyph as it is growing.                
            </javadoc>
            <declaration name="growAbsorb" type="boolean" line="119"/>
            <javadoc line="119">
                If &lt;code&gt;true&lt;/code&gt;, this glyph absorbs all extra
                  space at this and lower priority levels when it grows.                
            </javadoc>
            <declaration name="growLeftLimit" type="float" line="124"/>
            <javadoc line="124">
                The maximum amount by which the left side of this glyph can grow.                
            </javadoc>
            <declaration name="growRightLimit" type="float" line="128"/>
            <javadoc line="128">
                The maximum amount by which the right side of this glyph can grow.                
            </javadoc>
            <declaration name="shrinkPriority" type="int" line="132"/>
            <javadoc line="132">
                The priority level of this glyph as it is shrinking.                
            </javadoc>
            <declaration name="shrinkAbsorb" type="boolean" line="136"/>
            <javadoc line="136">
                If &lt;code&gt;true&lt;/code&gt;,this glyph absorbs all remaining shrinkage at
                  this and lower priority levels as it shrinks.                
            </javadoc>
            <declaration name="shrinkLeftLimit" type="float" line="141"/>
            <javadoc line="141">
                The maximum amount by which the left side of this glyph can shrink
                  (a positive number).                
            </javadoc>
            <declaration name="shrinkRightLimit" type="float" line="146"/>
            <javadoc line="146">
                The maximum amount by which the right side of this glyph can shrink
                  (a positive number).                
            </javadoc>
        </class>
    </source>