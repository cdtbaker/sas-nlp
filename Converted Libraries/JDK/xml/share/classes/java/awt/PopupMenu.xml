<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt">
        <import package="java.awt.peer.PopupMenuPeer"/>
        <import package="javax.accessibility"/>
        <import package="sun.awt.AWTAccessor"/>
        <class name="PopupMenu" line="33">
            <extends class="Menu"/>
            <comment line="62">
                JDK 1.1 serialVersionUID                
            </comment>
            <comment line="194">
                ///////////////                
            </comment>
            <comment line="195">
                Accessibility support                
            </comment>
            <comment line="196">
                //////////////                
            </comment>
            <comment line="239">
                class AccessibleAWTPopupMenu                
            </comment>
            <javadoc line="33">
                A class that implements a menu which can be dynamically popped up
                  at a specified position within a component.
                  &lt;p&gt;
                  As the inheritance hierarchy implies, a &lt;code&gt;PopupMenu&lt;/code&gt;
                  can be used anywhere a &lt;code&gt;Menu&lt;/code&gt; can be used.
                  However, if you use a &lt;code&gt;PopupMenu&lt;/code&gt; like a &lt;code&gt;Menu&lt;/code&gt;
                  (e.g., you add it to a &lt;code&gt;MenuBar&lt;/code&gt;), then you &lt;b&gt;cannot&lt;/b&gt;
                  call &lt;code&gt;show&lt;/code&gt; on that &lt;code&gt;PopupMenu&lt;/code&gt;.                
                <author>
                    Amy Fowler                    
                </author>
            </javadoc>
            <declaration name="base" type="String" line="47"/>
            <declaration name="nameCounter" type="int" line="48"/>
            <declaration name="isTrayIconPopup" type="boolean" line="50"/>
            <scope line="52">
                <anonymous_class line="54">
                    <method name="isTrayIconPopup" type="boolean" line="55">
                        <params>
                            <param name="popupMenu" type="PopupMenu"/>
                        </params>
                    </method>
                </anonymous_class>
            </scope>
            <declaration name="serialVersionUID" type="long" line="64"/>
            <javadoc line="66">
                Creates a new popup menu with an empty name.                
                <exception>
                    HeadlessException if GraphicsEnvironment.isHeadless()
                      returns true.                    
                </exception>
                <see>
                    java.awt.GraphicsEnvironment#isHeadless                    
                </see>
            </javadoc>
            <method name="PopupMenu" type="constructor" line="72"/>
            <javadoc line="76">
                Creates a new popup menu with the specified name.                
                <param>
                    label a non-<code>null</code> string specifying
                      the popup menu's label                    
                </param>
                <exception>
                    HeadlessException if GraphicsEnvironment.isHeadless()
                      returns true.                    
                </exception>
                <see>
                    java.awt.GraphicsEnvironment#isHeadless                    
                </see>
            </javadoc>
            <method name="PopupMenu" type="constructor" line="85">
                <params>
                    <param name="label" type="String"/>
                </params>
            </method>
            <javadoc line="89">
                {@inheritDoc}                
            </javadoc>
            <method name="getParent" type="MenuContainer" line="92">
                <scope line="93"/>
            </method>
            <javadoc line="99">
                Constructs a name for this &lt;code&gt;MenuComponent&lt;/code&gt;.
                  Called by &lt;code&gt;getName&lt;/code&gt; when the name is &lt;code&gt;null&lt;/code&gt;.                
            </javadoc>
            <method name="constructComponentName" type="String" line="103">
                <scope line="104"/>
            </method>
            <javadoc line="109">
                Creates the popup menu&apos;s peer.
                  The peer allows us to change the appearance of the popup menu without
                  changing any of the popup menu&apos;s functionality.                
            </javadoc>
            <method name="addNotify" type="void" line="114">
                <comment line="116">
                    If our parent is not a Component, then this PopupMenu is                    
                </comment>
                <comment line="117">
                    really just a plain, old Menu.                    
                </comment>
                <scope line="115">
                    <scope line="118"/>
                    <scope line="121">
                        <declaration name="nitems" type="int" line="124"/>
                        <scope line="125">
                            <declaration name="mi" type="MenuItem" line="126"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="134">
                Shows the popup menu at the x, y position relative to an origin
                  component.
                  The origin component must be contained within the component
                  hierarchy of the popup menu&apos;s parent.  Both the origin and the parent
                  must be showing on the screen for this method to be valid.
                  &lt;p&gt;
                  If this &lt;code&gt;PopupMenu&lt;/code&gt; is being used as a &lt;code&gt;Menu&lt;/code&gt;
                  (i.e., it has a non-&lt;code&gt;Component&lt;/code&gt; parent),
                  then you cannot call this method on the &lt;code&gt;PopupMenu&lt;/code&gt;.                
                <param>
                    origin the component which defines the coordinate space                    
                </param>
                <param>
                    x the x coordinate position to popup the menu                    
                </param>
                <param>
                    y the y coordinate position to popup the menu                    
                </param>
                <exception>
                    NullPointerException  if the parent is <code>null</code>                    
                </exception>
                <exception>
                    IllegalArgumentException  if this <code>PopupMenu</code>
                      has a non-<code>Component</code> parent                    
                </exception>
                <exception>
                    IllegalArgumentException if the origin is not in the
                      parent's heirarchy                    
                </exception>
                <exception>
                    RuntimeException if the parent is not showing on screen                    
                </exception>
            </javadoc>
            <method name="show" type="void" line="155">
                <params>
                    <param name="origin" type="Component"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <comment line="156">
                    Use localParent for thread safety.                    
                </comment>
                <comment line="166">
                    Fixed 6278745: Incorrect exception throwing in PopupMenu.show() method                    
                </comment>
                <comment line="167">
                    Exception was not thrown if compParent was not equal to origin and                    
                </comment>
                <comment line="168">
                    was not Container                    
                </comment>
                <declaration name="localParent" type="MenuContainer" line="157"/>
                <scope line="158"/>
                <scope line="161"/>
                <declaration name="compParent" type="Component" line="165"/>
                <scope line="169">
                    <scope line="170">
                        <scope line="171"/>
                    </scope>
                    <scope line="174"/>
                </scope>
                <scope line="178"/>
                <scope line="181"/>
                <scope line="184">
                    <scope line="185"/>
                </scope>
            </method>
            <javadoc line="197">
                Gets the &lt;code&gt;AccessibleContext&lt;/code&gt; associated with this
                  &lt;code&gt;PopupMenu&lt;/code&gt;.                
                <return>
                    the <code>AccessibleContext</code> of this
                      <code>PopupMenu</code>                    
                </return>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="getAccessibleContext" type="AccessibleContext" line="205">
                <scope line="206"/>
            </method>
            <class name="AccessibleAWTPopupMenu" line="212">
                <extends class="AccessibleAWTMenu"/>
                <comment line="224">
                    JDK 1.3 serialVersionUID                    
                </comment>
                <javadoc line="212">
                    Inner class of PopupMenu used to provide default support for
                      accessibility.  This class is not meant to be used directly by
                      application developers, but is instead meant only to be
                      subclassed by menu component developers.
                      &lt;p&gt;
                      The class used to obtain the accessible role for this object.                    
                    <since>
                        1.3                        
                    </since>
                </javadoc>
                <declaration name="serialVersionUID" type="long" line="226"/>
                <javadoc line="228">
                    Get the role of this object.                    
                    <return>
                        an instance of AccessibleRole describing the role of the
                          object                        
                    </return>
                </javadoc>
                <method name="getAccessibleRole" type="AccessibleRole" line="234"/>
            </class>
        </class>
    </source>