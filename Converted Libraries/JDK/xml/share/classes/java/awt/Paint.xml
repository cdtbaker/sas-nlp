<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt">
        <import package="java.awt.image.ColorModel"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <interface name="Paint">
            <implements interface="Transparency"/>
            <javadoc line="32">
                This &lt;code&gt;Paint&lt;/code&gt; interface defines how color patterns
                  can be generated for {@link Graphics2D} operations.  A class
                  implementing the &lt;code&gt;Paint&lt;/code&gt; interface is added to the
                  &lt;code&gt;Graphics2D&lt;/code&gt; context in order to define the color
                  pattern used by the &lt;code&gt;draw&lt;/code&gt; and &lt;code&gt;fill&lt;/code&gt; methods.
                  &lt;p&gt;
                  Instances of classes implementing &lt;code&gt;Paint&lt;/code&gt; must be
                  read-only because the &lt;code&gt;Graphics2D&lt;/code&gt; does not clone
                  these objects when they are set as an attribute with the
                  &lt;code&gt;setPaint&lt;/code&gt; method or when the &lt;code&gt;Graphics2D&lt;/code&gt;
                  object is itself cloned.                
                <see>
                    PaintContext                    
                </see>
                <see>
                    Color                    
                </see>
                <see>
                    GradientPaint                    
                </see>
                <see>
                    TexturePaint                    
                </see>
                <see>
                    Graphics2D#setPaint                    
                </see>
                <version>
                    1.36, 06/05/07                    
                </version>
            </javadoc>
            <method name="createContext" type="PaintContext" line="53"/>
            <javadoc line="53">
                Creates and returns a {@link PaintContext} used to
                  generate the color pattern.
                  The arguments to this method convey additional information
                  about the rendering operation that may be
                  used or ignored on various implementations of the {@code Paint} interface.
                  A caller must pass non-{@code null} values for all of the arguments
                  except for the {@code ColorModel} argument which may be {@code null} to
                  indicate that no specific {@code ColorModel} type is preferred.
                  Implementations of the {@code Paint} interface are allowed to use or ignore
                  any of the arguments as makes sense for their function, and are
                  not constrained to use the specified {@code ColorModel} for the returned{@code PaintContext}, even if it is not {@code null}.
                  Implementations are allowed to throw {@code NullPointerException} for
                  any {@code null} argument other than the {@code ColorModel} argument,
                  but are not required to do so.                
                <param>
                    cm the preferred {@link ColorModel} which represents the most convenient
                      format for the caller to receive the pixel data, or {@code null}if there is no preference.                    
                </param>
                <param>
                    deviceBounds the device space bounding box
                      of the graphics primitive being rendered.
                      Implementations of the {@code Paint} interface
                      are allowed to throw {@code NullPointerException}for a {@code null} {@code deviceBounds}.                    
                </param>
                <param>
                    userBounds the user space bounding box
                      of the graphics primitive being rendered.
                      Implementations of the {@code Paint} interface
                      are allowed to throw {@code NullPointerException}for a {@code null} {@code userBounds}.                    
                </param>
                <param>
                    xform the {@link AffineTransform} from user
                      space into device space.
                      Implementations of the {@code Paint} interface
                      are allowed to throw {@code NullPointerException}for a {@code null} {@code xform}.                    
                </param>
                <param>
                    hints the set of hints that the context object can use to
                      choose between rendering alternatives.
                      Implementations of the {@code Paint} interface
                      are allowed to throw {@code NullPointerException}for a {@code null} {@code hints}.                    
                </param>
                <return>
                    the {@code PaintContext} for
                      generating color patterns.                    
                </return>
                <see>
                    PaintContext                    
                </see>
                <see>
                    ColorModel                    
                </see>
                <see>
                    Rectangle                    
                </see>
                <see>
                    Rectangle2D                    
                </see>
                <see>
                    AffineTransform                    
                </see>
                <see>
                    RenderingHints                    
                </see>
            </javadoc>
        </interface>
    </source>