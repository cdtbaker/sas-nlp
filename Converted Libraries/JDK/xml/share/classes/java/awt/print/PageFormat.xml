<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.print">
        <import package="java.awt.geom.AffineTransform"/>
        <import package="java.awt.geom.Point2D"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <class name="PageFormat" line="5">
            <implements interface="Cloneable"/>
            <javadoc line="5">
                The &lt;code&gt;PageFormat&lt;/code&gt; class describes the size and
                  orientation of a page to be printed.                
            </javadoc>
            <declaration name="LANDSCAPE" type="int" line="10"/>
            <javadoc line="10">
                The origin is at the bottom left of the paper with
                  x running bottom to top and y running left to right.
                  Note that this is not the Macintosh landscape but
                  is the Window&apos;s and PostScript landscape.                
            </javadoc>
            <declaration name="PORTRAIT" type="int" line="17"/>
            <javadoc line="17">
                The origin is at the top left of the paper with
                  x running to the right and y running down the
                  paper.                
            </javadoc>
            <declaration name="REVERSE_LANDSCAPE" type="int" line="23"/>
            <javadoc line="23">
                The origin is at the top right of the paper with x
                  running top to bottom and y running right to left.
                  Note that this is the Macintosh landscape.                
            </javadoc>
            <declaration name="mPaper" type="Paper" line="29"/>
            <javadoc line="29">
                A description of the physical piece of paper.                
            </javadoc>
            <declaration name="mOrientation" type="int" line="33"/>
            <javadoc line="33">
                The orientation of the current page. This will be
                  one of the constants: PORTRIAT, LANDSCAPE, or
                  REVERSE_LANDSCAPE,                
            </javadoc>
            <javadoc line="39">
                Creates a default, portrait-oriented
                  &lt;code&gt;PageFormat&lt;/code&gt;.                
            </javadoc>
            <method name="PageFormat" type="constructor" line="43"/>
            <javadoc line="46">
                Makes a copy of this &lt;code&gt;PageFormat&lt;/code&gt; with the same
                  contents as this &lt;code&gt;PageFormat&lt;/code&gt;.                
                <return>
                    a copy of this &lt;code&gt;PageFormat&lt;/code&gt;.                    
                </return>
            </javadoc>
            <method name="clone" type="Object" line="51">
                <declaration name="newPage" type="PageFormat" line="52"/>
                <scope line="53"/>
                <scope line="57"/>
            </method>
            <javadoc line="63">
                Returns the width, in 1/72nds of an inch, of the page.
                  This method takes into account the orientation of the
                  page when determining the width.                
                <return>
                    the width of the page.                    
                </return>
            </javadoc>
            <method name="getWidth" type="double" line="69">
                <declaration name="width" type="double" line="70"/>
                <declaration name="orientation" type="int" line="71"/>
                <scope line="72"/>
                <scope line="75"/>
            </method>
            <javadoc line="80">
                Returns the height, in 1/72nds of an inch, of the page.
                  This method takes into account the orientation of the
                  page when determining the height.                
                <return>
                    the height of the page.                    
                </return>
            </javadoc>
            <method name="getHeight" type="double" line="86">
                <declaration name="height" type="double" line="87"/>
                <declaration name="orientation" type="int" line="88"/>
                <scope line="89"/>
                <scope line="92"/>
            </method>
            <javadoc line="97">
                Returns the x coordinate of the upper left point of the
                  imageable area of the &lt;code&gt;Paper&lt;/code&gt; object
                  associated with this &lt;code&gt;PageFormat&lt;/code&gt;.
                  This method takes into account the
                  orientation of the page.                
                <return>
                    the x coordinate of the upper left point of the
                      imageable area of the &lt;code&gt;Paper&lt;/code&gt; object
                      associated with this &lt;code&gt;PageFormat&lt;/code&gt;.                    
                </return>
            </javadoc>
            <method name="getImageableX" type="double" line="107">
                <declaration name="x" type="double" line="108"/>
            </method>
            <javadoc line="124">
                Returns the y coordinate of the upper left point of the
                  imageable area of the &lt;code&gt;Paper&lt;/code&gt; object
                  associated with this &lt;code&gt;PageFormat&lt;/code&gt;.
                  This method takes into account the
                  orientation of the page.                
                <return>
                    the y coordinate of the upper left point of the
                      imageable area of the &lt;code&gt;Paper&lt;/code&gt; object
                      associated with this &lt;code&gt;PageFormat&lt;/code&gt;.                    
                </return>
            </javadoc>
            <method name="getImageableY" type="double" line="134">
                <declaration name="y" type="double" line="135"/>
            </method>
            <javadoc line="151">
                Returns the width, in 1/72nds of an inch, of the imageable
                  area of the page. This method takes into account the orientation
                  of the page.                
                <return>
                    the width of the page.                    
                </return>
            </javadoc>
            <method name="getImageableWidth" type="double" line="157">
                <declaration name="width" type="double" line="158"/>
                <scope line="159"/>
                <scope line="162"/>
            </method>
            <javadoc line="167">
                Return the height, in 1/72nds of an inch, of the imageable
                  area of the page. This method takes into account the orientation
                  of the page.                
                <return>
                    the height of the page.                    
                </return>
            </javadoc>
            <method name="getImageableHeight" type="double" line="173">
                <declaration name="height" type="double" line="174"/>
                <scope line="175"/>
                <scope line="178"/>
            </method>
            <javadoc line="183">
                Returns a copy of the {@link Paper} object associated
                  with this &lt;code&gt;PageFormat&lt;/code&gt;.  Changes made to the
                  &lt;code&gt;Paper&lt;/code&gt; object returned from this method do not
                  affect the &lt;code&gt;Paper&lt;/code&gt; object of this
                  &lt;code&gt;PageFormat&lt;/code&gt;.  To update the &lt;code&gt;Paper&lt;/code&gt;
                  object of this &lt;code&gt;PageFormat&lt;/code&gt;, create a new
                  &lt;code&gt;Paper&lt;/code&gt; object and set it into this
                  &lt;code&gt;PageFormat&lt;/code&gt; by using the {@link #setPaper(Paper)}method.                
                <return>
                    a copy of the &lt;code&gt;Paper&lt;/code&gt; object associated
                      with this &lt;code&gt;PageFormat&lt;/code&gt;.                    
                </return>
                <see>
                    #setPaper                    
                </see>
            </javadoc>
            <method name="getPaper" type="Paper" line="196"/>
            <javadoc line="199">
                Sets the &lt;code&gt;Paper&lt;/code&gt; object for this
                  &lt;code&gt;PageFormat&lt;/code&gt;.                
                <param>
                    paper the &lt;code&gt;Paper&lt;/code&gt; object to which to set
                      the &lt;code&gt;Paper&lt;/code&gt; object for this &lt;code&gt;PageFormat&lt;/code&gt;.                    
                </param>
                <exception>
                    &lt;code&gt;NullPointerException&lt;/code&gt;
                      a null paper instance was passed as a parameter.                    
                </exception>
                <see>
                    #getPaper                    
                </see>
            </javadoc>
            <method name="setPaper" type="void" line="208">
                <params>
                    <param name="paper" type="Paper"/>
                </params>
            </method>
            <javadoc line="211">
                Sets the page orientation. &lt;code&gt;orientation&lt;/code&gt; must be
                  one of the constants: PORTRAIT, LANDSCAPE,
                  or REVERSE_LANDSCAPE.                
                <param>
                    orientation the new orientation for the page                    
                </param>
                <throws>
                    IllegalArgumentException if
                      an unknown orientation was requested                    
                </throws>
                <see>
                    #getOrientation                    
                </see>
            </javadoc>
            <method name="setOrientation" type="void" line="220">
                <params>
                    <param name="orientation" type="int"/>
                </params>
                <scope line="221"/>
                <scope line="224"/>
            </method>
            <javadoc line="228">
                Returns the orientation of this &lt;code&gt;PageFormat&lt;/code&gt;.                
                <return>
                    this &lt;code&gt;PageFormat&lt;/code&gt; object&apos;s orientation.                    
                </return>
                <see>
                    #setOrientation                    
                </see>
            </javadoc>
            <method name="getOrientation" type="int" line="233"/>
            <javadoc line="236">
                Returns a transformation matrix that translates user
                  space rendering to the requested orientation
                  of the page.  The values are placed into the
                  array as
                  {&amp;nbsp;m00,&amp;nbsp;m10,&amp;nbsp;m01,&amp;nbsp;m11,&amp;nbsp;m02,&amp;nbsp;m12} in
                  the form required by the {@link AffineTransform}constructor.                
                <return>
                    the matrix used to translate user space rendering
                      to the orientation of the page.                    
                </return>
                <see>
                    java.awt.geom.AffineTransform                    
                </see>
            </javadoc>
            <method name="getMatrix" type="double[]" line="247">
                <declaration name="matrix" type="double[]" line="248"/>
            </method>
        </class>
    </source>