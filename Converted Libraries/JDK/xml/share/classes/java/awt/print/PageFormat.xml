<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.print">
        <import package="java.awt.geom.AffineTransform"/>
        <import package="java.awt.geom.Point2D"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <class name="PageFormat" line="32">
            <comment line="40">
                                
            </comment>
            <comment line="64">
                                
            </comment>
            <comment line="78">
                                
            </comment>
            <comment line="89">
                                
            </comment>
            <implements interface="Cloneable"/>
            <javadoc line="32">
                The &lt;code&gt;PageFormat&lt;/code&gt; class describes the size and
                  orientation of a page to be printed.                
            </javadoc>
            <declaration name="LANDSCAPE" type="int" line="41"/>
            <javadoc line="41">
                The origin is at the bottom left of the paper with
                  x running bottom to top and y running left to right.
                  Note that this is not the Macintosh landscape but
                  is the Window&apos;s and PostScript landscape.                
            </javadoc>
            <declaration name="PORTRAIT" type="int" line="49"/>
            <javadoc line="49">
                The origin is at the top left of the paper with
                  x running to the right and y running down the
                  paper.                
            </javadoc>
            <declaration name="REVERSE_LANDSCAPE" type="int" line="56"/>
            <javadoc line="56">
                The origin is at the top right of the paper with x
                  running top to bottom and y running right to left.
                  Note that this is the Macintosh landscape.                
            </javadoc>
            <declaration name="mPaper" type="Paper" line="65"/>
            <javadoc line="65">
                A description of the physical piece of paper.                
            </javadoc>
            <declaration name="mOrientation" type="int" line="70"/>
            <javadoc line="70">
                The orientation of the current page. This will be
                  one of the constants: PORTRIAT, LANDSCAPE, or
                  REVERSE_LANDSCAPE,                
            </javadoc>
            <javadoc line="79">
                Creates a default, portrait-oriented
                  &lt;code&gt;PageFormat&lt;/code&gt;.                
            </javadoc>
            <method name="PageFormat" type="constructor" line="84"/>
            <javadoc line="90">
                Makes a copy of this &lt;code&gt;PageFormat&lt;/code&gt; with the same
                  contents as this &lt;code&gt;PageFormat&lt;/code&gt;.                
                <return>
                    a copy of this <code>PageFormat</code>.                    
                </return>
            </javadoc>
            <method name="clone" type="Object" line="95">
                <comment line="104">
                    should never happen.                    
                </comment>
                <declaration name="newPage" type="PageFormat" line="96"/>
                <scope line="98"/>
                <scope line="102"/>
            </method>
            <javadoc line="111">
                Returns the width, in 1/72nds of an inch, of the page.
                  This method takes into account the orientation of the
                  page when determining the width.                
                <return>
                    the width of the page.                    
                </return>
            </javadoc>
            <method name="getWidth" type="double" line="117">
                <declaration name="width" type="double" line="118"/>
                <declaration name="orientation" type="int" line="119"/>
                <scope line="121"/>
                <scope line="123"/>
            </method>
            <javadoc line="130">
                Returns the height, in 1/72nds of an inch, of the page.
                  This method takes into account the orientation of the
                  page when determining the height.                
                <return>
                    the height of the page.                    
                </return>
            </javadoc>
            <method name="getHeight" type="double" line="136">
                <declaration name="height" type="double" line="137"/>
                <declaration name="orientation" type="int" line="138"/>
                <scope line="140"/>
                <scope line="142"/>
            </method>
            <javadoc line="149">
                Returns the x coordinate of the upper left point of the
                  imageable area of the &lt;code&gt;Paper&lt;/code&gt; object
                  associated with this &lt;code&gt;PageFormat&lt;/code&gt;.
                  This method takes into account the
                  orientation of the page.                
                <return>
                    the x coordinate of the upper left point of the
                      imageable area of the <code>Paper</code> object
                      associated with this <code>PageFormat</code>.                    
                </return>
            </javadoc>
            <method name="getImageableX" type="double" line="159">
                <comment line="178">
                    This should never happen since it signifies that the
                     PageFormat is in an invalid orientation.                    
                </comment>
                <declaration name="x" type="double" line="160"/>
            </method>
            <javadoc line="188">
                Returns the y coordinate of the upper left point of the
                  imageable area of the &lt;code&gt;Paper&lt;/code&gt; object
                  associated with this &lt;code&gt;PageFormat&lt;/code&gt;.
                  This method takes into account the
                  orientation of the page.                
                <return>
                    the y coordinate of the upper left point of the
                      imageable area of the <code>Paper</code> object
                      associated with this <code>PageFormat</code>.                    
                </return>
            </javadoc>
            <method name="getImageableY" type="double" line="198">
                <comment line="217">
                    This should never happen since it signifies that the
                     PageFormat is in an invalid orientation.                    
                </comment>
                <declaration name="y" type="double" line="199"/>
            </method>
            <javadoc line="227">
                Returns the width, in 1/72nds of an inch, of the imageable
                  area of the page. This method takes into account the orientation
                  of the page.                
                <return>
                    the width of the page.                    
                </return>
            </javadoc>
            <method name="getImageableWidth" type="double" line="233">
                <declaration name="width" type="double" line="234"/>
                <scope line="236"/>
                <scope line="238"/>
            </method>
            <javadoc line="245">
                Return the height, in 1/72nds of an inch, of the imageable
                  area of the page. This method takes into account the orientation
                  of the page.                
                <return>
                    the height of the page.                    
                </return>
            </javadoc>
            <method name="getImageableHeight" type="double" line="251">
                <declaration name="height" type="double" line="252"/>
                <scope line="254"/>
                <scope line="256"/>
            </method>
            <javadoc line="264">
                Returns a copy of the {@link Paper} object associated
                  with this &lt;code&gt;PageFormat&lt;/code&gt;.  Changes made to the
                  &lt;code&gt;Paper&lt;/code&gt; object returned from this method do not
                  affect the &lt;code&gt;Paper&lt;/code&gt; object of this
                  &lt;code&gt;PageFormat&lt;/code&gt;.  To update the &lt;code&gt;Paper&lt;/code&gt;
                  object of this &lt;code&gt;PageFormat&lt;/code&gt;, create a new
                  &lt;code&gt;Paper&lt;/code&gt; object and set it into this
                  &lt;code&gt;PageFormat&lt;/code&gt; by using the {@link #setPaper(Paper)}method.                
                <return>
                    a copy of the <code>Paper</code> object associated
                      with this <code>PageFormat</code>.                    
                </return>
                <see>
                    #setPaper                    
                </see>
            </javadoc>
            <method name="getPaper" type="Paper" line="278"/>
            <javadoc line="282">
                Sets the &lt;code&gt;Paper&lt;/code&gt; object for this
                  &lt;code&gt;PageFormat&lt;/code&gt;.                
                <param>
                    paper the <code>Paper</code> object to which to set
                      the <code>Paper</code> object for this <code>PageFormat</code>.                    
                </param>
                <exception>
                    <code>NullPointerException</code>
                      a null paper instance was passed as a parameter.                    
                </exception>
                <see>
                    #getPaper                    
                </see>
            </javadoc>
            <method name="setPaper" type="void" line="291">
                <params>
                    <param name="paper" type="Paper"/>
                </params>
            </method>
            <javadoc line="295">
                Sets the page orientation. &lt;code&gt;orientation&lt;/code&gt; must be
                  one of the constants: PORTRAIT, LANDSCAPE,
                  or REVERSE_LANDSCAPE.                
                <param>
                    orientation the new orientation for the page                    
                </param>
                <throws>
                    IllegalArgumentException if
                      an unknown orientation was requested                    
                </throws>
                <see>
                    #getOrientation                    
                </see>
            </javadoc>
            <method name="setOrientation" type="void" line="305">
                <params>
                    <param name="orientation" type="int"/>
                </params>
                <scope line="306"/>
                <scope line="308"/>
            </method>
            <javadoc line="313">
                Returns the orientation of this &lt;code&gt;PageFormat&lt;/code&gt;.                
                <return>
                    this <code>PageFormat</code> object's orientation.                    
                </return>
                <see>
                    #setOrientation                    
                </see>
            </javadoc>
            <method name="getOrientation" type="int" line="318"/>
            <javadoc line="322">
                Returns a transformation matrix that translates user
                  space rendering to the requested orientation
                  of the page.  The values are placed into the
                  array as
                  {&amp;nbsp;m00,&amp;nbsp;m10,&amp;nbsp;m01,&amp;nbsp;m11,&amp;nbsp;m02,&amp;nbsp;m12} in
                  the form required by the {@link AffineTransform}constructor.                
                <return>
                    the matrix used to translate user space rendering
                      to the orientation of the page.                    
                </return>
                <see>
                    java.awt.geom.AffineTransform                    
                </see>
            </javadoc>
            <method name="getMatrix" type="double[]" line="334">
                <declaration name="matrix" type="double[]" line="335"/>
            </method>
        </class>
    </source>