<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.print">
        <import package="java.util.Vector"/>
        <class name="Book" line="30">
            <comment line="42">
                                
            </comment>
            <comment line="44">
                                
            </comment>
            <comment line="46">
                                
            </comment>
            <comment line="53">
                                
            </comment>
            <implements interface="Pageable"/>
            <javadoc line="30">
                The &lt;code&gt;Book&lt;/code&gt; class provides a representation of a document in
                  which pages may have different page formats and page painters. This
                  class uses the {@link Pageable} interface to interact with a{@link PrinterJob}.                
                <see>
                    Pageable                    
                </see>
                <see>
                    PrinterJob                    
                </see>
            </javadoc>
            <declaration name="mPages" type="Vector" line="47"/>
            <javadoc line="47">
                The set of pages that make up the Book.                
            </javadoc>
            <javadoc line="54">
                Creates a new, empty &lt;code&gt;Book&lt;/code&gt;.                
            </javadoc>
            <method name="Book" type="constructor" line="57"/>
            <javadoc line="61">
                Returns the number of pages in this &lt;code&gt;Book&lt;/code&gt;.                
                <return>
                    the number of pages this <code>Book</code> contains.                    
                </return>
            </javadoc>
            <method name="getNumberOfPages" type="int" line="65"/>
            <javadoc line="69">
                Returns the {@link PageFormat} of the page specified by
                  &lt;code&gt;pageIndex&lt;/code&gt;.                
                <param>
                    pageIndex the zero based index of the page whose
                      <code>PageFormat</code> is being requested                    
                </param>
                <return>
                    the <code>PageFormat</code> describing the size and
                      orientation of the page.                    
                </return>
                <throws>
                    IndexOutOfBoundsException if the <code>Pageable</code>
                      does not contain the requested page                    
                </throws>
            </javadoc>
            <method name="getPageFormat" type="PageFormat" line="81">
                <params>
                    <param name="pageIndex" type="int"/>
                </params>
            </method>
            <javadoc line="85">
                Returns the {@link Printable} instance responsible for rendering
                  the page specified by &lt;code&gt;pageIndex&lt;/code&gt;.                
                <param>
                    pageIndex the zero based index of the page whose
                      <code>Printable</code> is being requested                    
                </param>
                <return>
                    the <code>Printable</code> that renders the page.                    
                </return>
                <throws>
                    IndexOutOfBoundsException if the <code>Pageable</code>
                      does not contain the requested page                    
                </throws>
            </javadoc>
            <method name="getPrintable" type="Printable" line="96">
                <params>
                    <param name="pageIndex" type="int"/>
                </params>
            </method>
            <javadoc line="100">
                Sets the &lt;code&gt;PageFormat&lt;/code&gt; and the &lt;code&gt;Painter&lt;/code&gt; for a
                  specified page number.                
                <param>
                    pageIndex the zero based index of the page whose
                      painter and format is altered                    
                </param>
                <param>
                    painter   the <code>Printable</code> instance that
                      renders the page                    
                </param>
                <param>
                    page      the size and orientation of the page                    
                </param>
                <throws>
                    IndexOutOfBoundsException if the specified
                      page is not already in this <code>Book</code>                    
                </throws>
                <throws>
                    NullPointerException if the <code>painter</code> or
                      <code>page</code> argument is <code>null</code>                    
                </throws>
            </javadoc>
            <method name="setPage" type="void" line="115">
                <params>
                    <param name="pageIndex" type="int"/>
                    <param name="painter" type="Printable"/>
                    <param name="page" type="PageFormat"/>
                </params>
                <scope line="116"/>
                <scope line="120"/>
            </method>
            <javadoc line="127">
                Appends a single page to the end of this &lt;code&gt;Book&lt;/code&gt;.                
                <param>
                    painter   the <code>Printable</code> instance that
                      renders the page                    
                </param>
                <param>
                    page      the size and orientation of the page                    
                </param>
                <throws>
                    <code>NullPointerException</code>
                      If the <code>painter</code> or <code>page</code>
                      argument is <code>null</code>                    
                </throws>
            </javadoc>
            <method name="append" type="void" line="136">
                <params>
                    <param name="painter" type="Printable"/>
                    <param name="page" type="PageFormat"/>
                </params>
            </method>
            <javadoc line="140">
                Appends &lt;code&gt;numPages&lt;/code&gt; pages to the end of this
                  &lt;code&gt;Book&lt;/code&gt;.  Each of the pages is associated with
                  &lt;code&gt;page&lt;/code&gt;.                
                <param>
                    painter   the <code>Printable</code> instance that renders
                      the page                    
                </param>
                <param>
                    page      the size and orientation of the page                    
                </param>
                <param>
                    numPages  the number of pages to be added to the
                      this <code>Book</code>.                    
                </param>
                <throws>
                    <code>NullPointerException</code>
                      If the <code>painter</code> or <code>page</code>
                      argument is <code>null</code>                    
                </throws>
            </javadoc>
            <method name="append" type="void" line="153">
                <params>
                    <param name="painter" type="Printable"/>
                    <param name="page" type="PageFormat"/>
                    <param name="numPages" type="int"/>
                </params>
                <declaration name="bookPage" type="BookPage" line="154"/>
                <declaration name="pageIndex" type="int" line="155"/>
                <declaration name="newSize" type="int" line="156"/>
                <scope line="159"/>
            </method>
            <javadoc line="164">
                Return the BookPage for the page specified by &apos;pageIndex&apos;.                
            </javadoc>
            <method name="getPage" type="BookPage" line="169">
                <params>
                    <param name="pageIndex" type="int"/>
                </params>
            </method>
            <class name="BookPage" line="173">
                <javadoc line="173">
                    The BookPage inner class describes an individual
                      page in a Book through a PageFormat-Printable pair.                    
                </javadoc>
                <declaration name="mFormat" type="PageFormat" line="178"/>
                <javadoc line="178">
                    The size and orientation of the page.                    
                </javadoc>
                <declaration name="mPainter" type="Printable" line="183"/>
                <javadoc line="183">
                    The instance that will draw the page.                    
                </javadoc>
                <javadoc line="188">
                    A new instance where &apos;format&apos; describes the page&apos;s
                      size and orientation and &apos;painter&apos; is the instance
                      that will draw the page&apos;s graphics.                    
                    <throws>
                        NullPointerExceptionIf the <code>painter</code> or <code>format</code>
                          argument is <code>null</code>                        
                    </throws>
                </javadoc>
                <method name="BookPage" type="constructor" line="196">
                    <params>
                        <param name="painter" type="Printable"/>
                        <param name="format" type="PageFormat"/>
                    </params>
                    <scope line="198"/>
                </method>
                <javadoc line="206">
                    Return the instance that paints the
                      page.                    
                </javadoc>
                <method name="getPrintable" type="Printable" line="210"/>
                <javadoc line="214">
                    Return the format of the page.                    
                </javadoc>
                <method name="getPageFormat" type="PageFormat" line="217"/>
            </class>
        </class>
    </source>