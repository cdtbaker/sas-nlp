<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt">
        <import package="java.util.Locale"/>
        <class name="PageAttributes" line="30">
            <implements interface="Cloneable"/>
            <javadoc line="30">
                A set of attributes which control the output of a printed page.
                  &lt;p&gt;
                  Instances of this class control the color state, paper size (media type),
                  orientation, logical origin, print quality, and resolution of every
                  page which uses the instance. Attribute names are compliant with the
                  Internet Printing Protocol (IPP) 1.1 where possible. Attribute values
                  are partially compliant where possible.
                  &lt;p&gt;
                  To use a method which takes an inner class type, pass a reference to
                  one of the constant fields of the inner class. Client code cannot create
                  new instances of the inner class types because none of those classes
                  has a public constructor. For example, to set the color state to
                  monochrome, use the following code:
                  &lt;pre&gt;
                  import java.awt.PageAttributes;
                  public class MonochromeExample {
                  public void setMonochrome(PageAttributes pageAttributes) {
                  pageAttributes.setColor(PageAttributes.ColorType.MONOCHROME);
                  }
                  }
                  &lt;/pre&gt;
                  &lt;p&gt;
                  Every IPP attribute which supports an &lt;i&gt;attributeName&lt;/i&gt;-default value
                  has a corresponding &lt;code&gt;set&lt;i&gt;attributeName&lt;/i&gt;ToDefault&lt;/code&gt; method.
                  Default value fields are not provided.                
                <author>
                    David Mendenhall                    
                </author>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <class name="ColorType" line="62">
                <extends class="AttributeValue"/>
                <javadoc line="62">
                    A type-safe enumeration of possible color states.                    
                    <since>
                        1.3                        
                    </since>
                </javadoc>
                <declaration name="I_COLOR" type="int" line="67"/>
                <declaration name="I_MONOCHROME" type="int" line="68"/>
                <declaration name="NAMES" type="String" line="70"/>
                <declaration name="COLOR" type="ColorType" line="74"/>
                <javadoc line="74">
                    The ColorType instance to use for specifying color printing.                    
                </javadoc>
                <declaration name="MONOCHROME" type="ColorType" line="78"/>
                <javadoc line="78">
                    The ColorType instance to use for specifying monochrome printing.                    
                </javadoc>
                <method name="ColorType" type="constructor" line="83">
                    <params>
                        <param name="type" type="int"/>
                    </params>
                </method>
            </class>
            <class name="MediaType" line="88">
                <extends class="AttributeValue"/>
                <javadoc line="88">
                    A type-safe enumeration of possible paper sizes. These sizes are in
                      compliance with IPP 1.1.                    
                    <since>
                        1.3                        
                    </since>
                </javadoc>
                <declaration name="I_ISO_4A0" type="int" line="94"/>
                <declaration name="I_ISO_2A0" type="int" line="95"/>
                <declaration name="I_ISO_A0" type="int" line="96"/>
                <declaration name="I_ISO_A1" type="int" line="97"/>
                <declaration name="I_ISO_A2" type="int" line="98"/>
                <declaration name="I_ISO_A3" type="int" line="99"/>
                <declaration name="I_ISO_A4" type="int" line="100"/>
                <declaration name="I_ISO_A5" type="int" line="101"/>
                <declaration name="I_ISO_A6" type="int" line="102"/>
                <declaration name="I_ISO_A7" type="int" line="103"/>
                <declaration name="I_ISO_A8" type="int" line="104"/>
                <declaration name="I_ISO_A9" type="int" line="105"/>
                <declaration name="I_ISO_A10" type="int" line="106"/>
                <declaration name="I_ISO_B0" type="int" line="107"/>
                <declaration name="I_ISO_B1" type="int" line="108"/>
                <declaration name="I_ISO_B2" type="int" line="109"/>
                <declaration name="I_ISO_B3" type="int" line="110"/>
                <declaration name="I_ISO_B4" type="int" line="111"/>
                <declaration name="I_ISO_B5" type="int" line="112"/>
                <declaration name="I_ISO_B6" type="int" line="113"/>
                <declaration name="I_ISO_B7" type="int" line="114"/>
                <declaration name="I_ISO_B8" type="int" line="115"/>
                <declaration name="I_ISO_B9" type="int" line="116"/>
                <declaration name="I_ISO_B10" type="int" line="117"/>
                <declaration name="I_JIS_B0" type="int" line="118"/>
                <declaration name="I_JIS_B1" type="int" line="119"/>
                <declaration name="I_JIS_B2" type="int" line="120"/>
                <declaration name="I_JIS_B3" type="int" line="121"/>
                <declaration name="I_JIS_B4" type="int" line="122"/>
                <declaration name="I_JIS_B5" type="int" line="123"/>
                <declaration name="I_JIS_B6" type="int" line="124"/>
                <declaration name="I_JIS_B7" type="int" line="125"/>
                <declaration name="I_JIS_B8" type="int" line="126"/>
                <declaration name="I_JIS_B9" type="int" line="127"/>
                <declaration name="I_JIS_B10" type="int" line="128"/>
                <declaration name="I_ISO_C0" type="int" line="129"/>
                <declaration name="I_ISO_C1" type="int" line="130"/>
                <declaration name="I_ISO_C2" type="int" line="131"/>
                <declaration name="I_ISO_C3" type="int" line="132"/>
                <declaration name="I_ISO_C4" type="int" line="133"/>
                <declaration name="I_ISO_C5" type="int" line="134"/>
                <declaration name="I_ISO_C6" type="int" line="135"/>
                <declaration name="I_ISO_C7" type="int" line="136"/>
                <declaration name="I_ISO_C8" type="int" line="137"/>
                <declaration name="I_ISO_C9" type="int" line="138"/>
                <declaration name="I_ISO_C10" type="int" line="139"/>
                <declaration name="I_ISO_DESIGNATED_LONG" type="int" line="140"/>
                <declaration name="I_EXECUTIVE" type="int" line="141"/>
                <declaration name="I_FOLIO" type="int" line="142"/>
                <declaration name="I_INVOICE" type="int" line="143"/>
                <declaration name="I_LEDGER" type="int" line="144"/>
                <declaration name="I_NA_LETTER" type="int" line="145"/>
                <declaration name="I_NA_LEGAL" type="int" line="146"/>
                <declaration name="I_QUARTO" type="int" line="147"/>
                <declaration name="I_A" type="int" line="148"/>
                <declaration name="I_B" type="int" line="149"/>
                <declaration name="I_C" type="int" line="150"/>
                <declaration name="I_D" type="int" line="151"/>
                <declaration name="I_E" type="int" line="152"/>
                <declaration name="I_NA_10X15_ENVELOPE" type="int" line="153"/>
                <declaration name="I_NA_10X14_ENVELOPE" type="int" line="154"/>
                <declaration name="I_NA_10X13_ENVELOPE" type="int" line="155"/>
                <declaration name="I_NA_9X12_ENVELOPE" type="int" line="156"/>
                <declaration name="I_NA_9X11_ENVELOPE" type="int" line="157"/>
                <declaration name="I_NA_7X9_ENVELOPE" type="int" line="158"/>
                <declaration name="I_NA_6X9_ENVELOPE" type="int" line="159"/>
                <declaration name="I_NA_NUMBER_9_ENVELOPE" type="int" line="160"/>
                <declaration name="I_NA_NUMBER_10_ENVELOPE" type="int" line="161"/>
                <declaration name="I_NA_NUMBER_11_ENVELOPE" type="int" line="162"/>
                <declaration name="I_NA_NUMBER_12_ENVELOPE" type="int" line="163"/>
                <declaration name="I_NA_NUMBER_14_ENVELOPE" type="int" line="164"/>
                <declaration name="I_INVITE_ENVELOPE" type="int" line="165"/>
                <declaration name="I_ITALY_ENVELOPE" type="int" line="166"/>
                <declaration name="I_MONARCH_ENVELOPE" type="int" line="167"/>
                <declaration name="I_PERSONAL_ENVELOPE" type="int" line="168"/>
                <declaration name="NAMES" type="String" line="170"/>
                <declaration name="ISO_4A0" type="MediaType" line="189"/>
                <javadoc line="189">
                    The MediaType instance for ISO/DIN &amp; JIS 4A0, 1682 x 2378 mm.                    
                </javadoc>
                <declaration name="ISO_2A0" type="MediaType" line="193"/>
                <javadoc line="193">
                    The MediaType instance for ISO/DIN &amp; JIS 2A0, 1189 x 1682 mm.                    
                </javadoc>
                <declaration name="ISO_A0" type="MediaType" line="197"/>
                <javadoc line="197">
                    The MediaType instance for ISO/DIN &amp; JIS A0, 841 x 1189 mm.                    
                </javadoc>
                <declaration name="ISO_A1" type="MediaType" line="201"/>
                <javadoc line="201">
                    The MediaType instance for ISO/DIN &amp; JIS A1, 594 x 841 mm.                    
                </javadoc>
                <declaration name="ISO_A2" type="MediaType" line="205"/>
                <javadoc line="205">
                    The MediaType instance for ISO/DIN &amp; JIS A2, 420 x 594 mm.                    
                </javadoc>
                <declaration name="ISO_A3" type="MediaType" line="209"/>
                <javadoc line="209">
                    The MediaType instance for ISO/DIN &amp; JIS A3, 297 x 420 mm.                    
                </javadoc>
                <declaration name="ISO_A4" type="MediaType" line="213"/>
                <javadoc line="213">
                    The MediaType instance for ISO/DIN &amp; JIS A4, 210 x 297 mm.                    
                </javadoc>
                <declaration name="ISO_A5" type="MediaType" line="217"/>
                <javadoc line="217">
                    The MediaType instance for ISO/DIN &amp; JIS A5, 148 x 210 mm.                    
                </javadoc>
                <declaration name="ISO_A6" type="MediaType" line="221"/>
                <javadoc line="221">
                    The MediaType instance for ISO/DIN &amp; JIS A6, 105 x 148 mm.                    
                </javadoc>
                <declaration name="ISO_A7" type="MediaType" line="225"/>
                <javadoc line="225">
                    The MediaType instance for ISO/DIN &amp; JIS A7, 74 x 105 mm.                    
                </javadoc>
                <declaration name="ISO_A8" type="MediaType" line="229"/>
                <javadoc line="229">
                    The MediaType instance for ISO/DIN &amp; JIS A8, 52 x 74 mm.                    
                </javadoc>
                <declaration name="ISO_A9" type="MediaType" line="233"/>
                <javadoc line="233">
                    The MediaType instance for ISO/DIN &amp; JIS A9, 37 x 52 mm.                    
                </javadoc>
                <declaration name="ISO_A10" type="MediaType" line="237"/>
                <javadoc line="237">
                    The MediaType instance for ISO/DIN &amp; JIS A10, 26 x 37 mm.                    
                </javadoc>
                <declaration name="ISO_B0" type="MediaType" line="241"/>
                <javadoc line="241">
                    The MediaType instance for ISO/DIN B0, 1000 x 1414 mm.                    
                </javadoc>
                <declaration name="ISO_B1" type="MediaType" line="245"/>
                <javadoc line="245">
                    The MediaType instance for ISO/DIN B1, 707 x 1000 mm.                    
                </javadoc>
                <declaration name="ISO_B2" type="MediaType" line="249"/>
                <javadoc line="249">
                    The MediaType instance for ISO/DIN B2, 500 x 707 mm.                    
                </javadoc>
                <declaration name="ISO_B3" type="MediaType" line="253"/>
                <javadoc line="253">
                    The MediaType instance for ISO/DIN B3, 353 x 500 mm.                    
                </javadoc>
                <declaration name="ISO_B4" type="MediaType" line="257"/>
                <javadoc line="257">
                    The MediaType instance for ISO/DIN B4, 250 x 353 mm.                    
                </javadoc>
                <declaration name="ISO_B5" type="MediaType" line="261"/>
                <javadoc line="261">
                    The MediaType instance for ISO/DIN B5, 176 x 250 mm.                    
                </javadoc>
                <declaration name="ISO_B6" type="MediaType" line="265"/>
                <javadoc line="265">
                    The MediaType instance for ISO/DIN B6, 125 x 176 mm.                    
                </javadoc>
                <declaration name="ISO_B7" type="MediaType" line="269"/>
                <javadoc line="269">
                    The MediaType instance for ISO/DIN B7, 88 x 125 mm.                    
                </javadoc>
                <declaration name="ISO_B8" type="MediaType" line="273"/>
                <javadoc line="273">
                    The MediaType instance for ISO/DIN B8, 62 x 88 mm.                    
                </javadoc>
                <declaration name="ISO_B9" type="MediaType" line="277"/>
                <javadoc line="277">
                    The MediaType instance for ISO/DIN B9, 44 x 62 mm.                    
                </javadoc>
                <declaration name="ISO_B10" type="MediaType" line="281"/>
                <javadoc line="281">
                    The MediaType instance for ISO/DIN B10, 31 x 44 mm.                    
                </javadoc>
                <declaration name="JIS_B0" type="MediaType" line="285"/>
                <javadoc line="285">
                    The MediaType instance for JIS B0, 1030 x 1456 mm.                    
                </javadoc>
                <declaration name="JIS_B1" type="MediaType" line="289"/>
                <javadoc line="289">
                    The MediaType instance for JIS B1, 728 x 1030 mm.                    
                </javadoc>
                <declaration name="JIS_B2" type="MediaType" line="293"/>
                <javadoc line="293">
                    The MediaType instance for JIS B2, 515 x 728 mm.                    
                </javadoc>
                <declaration name="JIS_B3" type="MediaType" line="297"/>
                <javadoc line="297">
                    The MediaType instance for JIS B3, 364 x 515 mm.                    
                </javadoc>
                <declaration name="JIS_B4" type="MediaType" line="301"/>
                <javadoc line="301">
                    The MediaType instance for JIS B4, 257 x 364 mm.                    
                </javadoc>
                <declaration name="JIS_B5" type="MediaType" line="305"/>
                <javadoc line="305">
                    The MediaType instance for JIS B5, 182 x 257 mm.                    
                </javadoc>
                <declaration name="JIS_B6" type="MediaType" line="309"/>
                <javadoc line="309">
                    The MediaType instance for JIS B6, 128 x 182 mm.                    
                </javadoc>
                <declaration name="JIS_B7" type="MediaType" line="313"/>
                <javadoc line="313">
                    The MediaType instance for JIS B7, 91 x 128 mm.                    
                </javadoc>
                <declaration name="JIS_B8" type="MediaType" line="317"/>
                <javadoc line="317">
                    The MediaType instance for JIS B8, 64 x 91 mm.                    
                </javadoc>
                <declaration name="JIS_B9" type="MediaType" line="321"/>
                <javadoc line="321">
                    The MediaType instance for JIS B9, 45 x 64 mm.                    
                </javadoc>
                <declaration name="JIS_B10" type="MediaType" line="325"/>
                <javadoc line="325">
                    The MediaType instance for JIS B10, 32 x 45 mm.                    
                </javadoc>
                <declaration name="ISO_C0" type="MediaType" line="329"/>
                <javadoc line="329">
                    The MediaType instance for ISO/DIN C0, 917 x 1297 mm.                    
                </javadoc>
                <declaration name="ISO_C1" type="MediaType" line="333"/>
                <javadoc line="333">
                    The MediaType instance for ISO/DIN C1, 648 x 917 mm.                    
                </javadoc>
                <declaration name="ISO_C2" type="MediaType" line="337"/>
                <javadoc line="337">
                    The MediaType instance for ISO/DIN C2, 458 x 648 mm.                    
                </javadoc>
                <declaration name="ISO_C3" type="MediaType" line="341"/>
                <javadoc line="341">
                    The MediaType instance for ISO/DIN C3, 324 x 458 mm.                    
                </javadoc>
                <declaration name="ISO_C4" type="MediaType" line="345"/>
                <javadoc line="345">
                    The MediaType instance for ISO/DIN C4, 229 x 324 mm.                    
                </javadoc>
                <declaration name="ISO_C5" type="MediaType" line="349"/>
                <javadoc line="349">
                    The MediaType instance for ISO/DIN C5, 162 x 229 mm.                    
                </javadoc>
                <declaration name="ISO_C6" type="MediaType" line="353"/>
                <javadoc line="353">
                    The MediaType instance for ISO/DIN C6, 114 x 162 mm.                    
                </javadoc>
                <declaration name="ISO_C7" type="MediaType" line="357"/>
                <javadoc line="357">
                    The MediaType instance for ISO/DIN C7, 81 x 114 mm.                    
                </javadoc>
                <declaration name="ISO_C8" type="MediaType" line="361"/>
                <javadoc line="361">
                    The MediaType instance for ISO/DIN C8, 57 x 81 mm.                    
                </javadoc>
                <declaration name="ISO_C9" type="MediaType" line="365"/>
                <javadoc line="365">
                    The MediaType instance for ISO/DIN C9, 40 x 57 mm.                    
                </javadoc>
                <declaration name="ISO_C10" type="MediaType" line="369"/>
                <javadoc line="369">
                    The MediaType instance for ISO/DIN C10, 28 x 40 mm.                    
                </javadoc>
                <declaration name="ISO_DESIGNATED_LONG" type="MediaType" line="373"/>
                <javadoc line="373">
                    The MediaType instance for ISO Designated Long, 110 x 220 mm.                    
                </javadoc>
                <declaration name="EXECUTIVE" type="MediaType" line="378"/>
                <javadoc line="378">
                    The MediaType instance for Executive, 7 1/4 x 10 1/2 in.                    
                </javadoc>
                <declaration name="FOLIO" type="MediaType" line="382"/>
                <javadoc line="382">
                    The MediaType instance for Folio, 8 1/2 x 13 in.                    
                </javadoc>
                <declaration name="INVOICE" type="MediaType" line="386"/>
                <javadoc line="386">
                    The MediaType instance for Invoice, 5 1/2 x 8 1/2 in.                    
                </javadoc>
                <declaration name="LEDGER" type="MediaType" line="390"/>
                <javadoc line="390">
                    The MediaType instance for Ledger, 11 x 17 in.                    
                </javadoc>
                <declaration name="NA_LETTER" type="MediaType" line="394"/>
                <javadoc line="394">
                    The MediaType instance for North American Letter, 8 1/2 x 11 in.                    
                </javadoc>
                <declaration name="NA_LEGAL" type="MediaType" line="398"/>
                <javadoc line="398">
                    The MediaType instance for North American Legal, 8 1/2 x 14 in.                    
                </javadoc>
                <declaration name="QUARTO" type="MediaType" line="402"/>
                <javadoc line="402">
                    The MediaType instance for Quarto, 215 x 275 mm.                    
                </javadoc>
                <declaration name="A" type="MediaType" line="406"/>
                <javadoc line="406">
                    The MediaType instance for Engineering A, 8 1/2 x 11 in.                    
                </javadoc>
                <declaration name="B" type="MediaType" line="410"/>
                <javadoc line="410">
                    The MediaType instance for Engineering B, 11 x 17 in.                    
                </javadoc>
                <declaration name="C" type="MediaType" line="414"/>
                <javadoc line="414">
                    The MediaType instance for Engineering C, 17 x 22 in.                    
                </javadoc>
                <declaration name="D" type="MediaType" line="418"/>
                <javadoc line="418">
                    The MediaType instance for Engineering D, 22 x 34 in.                    
                </javadoc>
                <declaration name="E" type="MediaType" line="422"/>
                <javadoc line="422">
                    The MediaType instance for Engineering E, 34 x 44 in.                    
                </javadoc>
                <declaration name="NA_10X15_ENVELOPE" type="MediaType" line="426"/>
                <javadoc line="426">
                    The MediaType instance for North American 10 x 15 in.                    
                </javadoc>
                <declaration name="NA_10X14_ENVELOPE" type="MediaType" line="431"/>
                <javadoc line="431">
                    The MediaType instance for North American 10 x 14 in.                    
                </javadoc>
                <declaration name="NA_10X13_ENVELOPE" type="MediaType" line="436"/>
                <javadoc line="436">
                    The MediaType instance for North American 10 x 13 in.                    
                </javadoc>
                <declaration name="NA_9X12_ENVELOPE" type="MediaType" line="441"/>
                <javadoc line="441">
                    The MediaType instance for North American 9 x 12 in.                    
                </javadoc>
                <declaration name="NA_9X11_ENVELOPE" type="MediaType" line="446"/>
                <javadoc line="446">
                    The MediaType instance for North American 9 x 11 in.                    
                </javadoc>
                <declaration name="NA_7X9_ENVELOPE" type="MediaType" line="451"/>
                <javadoc line="451">
                    The MediaType instance for North American 7 x 9 in.                    
                </javadoc>
                <declaration name="NA_6X9_ENVELOPE" type="MediaType" line="456"/>
                <javadoc line="456">
                    The MediaType instance for North American 6 x 9 in.                    
                </javadoc>
                <declaration name="NA_NUMBER_9_ENVELOPE" type="MediaType" line="461"/>
                <javadoc line="461">
                    The MediaType instance for North American #9 Business Envelope,
                      3 7/8 x 8 7/8 in.                    
                </javadoc>
                <declaration name="NA_NUMBER_10_ENVELOPE" type="MediaType" line="467"/>
                <javadoc line="467">
                    The MediaType instance for North American #10 Business Envelope,
                      4 1/8 x 9 1/2 in.                    
                </javadoc>
                <declaration name="NA_NUMBER_11_ENVELOPE" type="MediaType" line="473"/>
                <javadoc line="473">
                    The MediaType instance for North American #11 Business Envelope,
                      4 1/2 x 10 3/8 in.                    
                </javadoc>
                <declaration name="NA_NUMBER_12_ENVELOPE" type="MediaType" line="479"/>
                <javadoc line="479">
                    The MediaType instance for North American #12 Business Envelope,
                      4 3/4 x 11 in.                    
                </javadoc>
                <declaration name="NA_NUMBER_14_ENVELOPE" type="MediaType" line="485"/>
                <javadoc line="485">
                    The MediaType instance for North American #14 Business Envelope,
                      5 x 11 1/2 in.                    
                </javadoc>
                <declaration name="INVITE_ENVELOPE" type="MediaType" line="491"/>
                <javadoc line="491">
                    The MediaType instance for Invitation Envelope, 220 x 220 mm.                    
                </javadoc>
                <declaration name="ITALY_ENVELOPE" type="MediaType" line="496"/>
                <javadoc line="496">
                    The MediaType instance for Italy Envelope, 110 x 230 mm.                    
                </javadoc>
                <declaration name="MONARCH_ENVELOPE" type="MediaType" line="501"/>
                <javadoc line="501">
                    The MediaType instance for Monarch Envelope, 3 7/8 x 7 1/2 in.                    
                </javadoc>
                <declaration name="PERSONAL_ENVELOPE" type="MediaType" line="506"/>
                <javadoc line="506">
                    The MediaType instance for 6 3/4 envelope, 3 5/8 x 6 1/2 in.                    
                </javadoc>
                <declaration name="A0" type="MediaType" line="511"/>
                <javadoc line="511">
                    An alias for ISO_A0.                    
                </javadoc>
                <declaration name="A1" type="MediaType" line="515"/>
                <javadoc line="515">
                    An alias for ISO_A1.                    
                </javadoc>
                <declaration name="A2" type="MediaType" line="519"/>
                <javadoc line="519">
                    An alias for ISO_A2.                    
                </javadoc>
                <declaration name="A3" type="MediaType" line="523"/>
                <javadoc line="523">
                    An alias for ISO_A3.                    
                </javadoc>
                <declaration name="A4" type="MediaType" line="527"/>
                <javadoc line="527">
                    An alias for ISO_A4.                    
                </javadoc>
                <declaration name="A5" type="MediaType" line="531"/>
                <javadoc line="531">
                    An alias for ISO_A5.                    
                </javadoc>
                <declaration name="A6" type="MediaType" line="535"/>
                <javadoc line="535">
                    An alias for ISO_A6.                    
                </javadoc>
                <declaration name="A7" type="MediaType" line="539"/>
                <javadoc line="539">
                    An alias for ISO_A7.                    
                </javadoc>
                <declaration name="A8" type="MediaType" line="543"/>
                <javadoc line="543">
                    An alias for ISO_A8.                    
                </javadoc>
                <declaration name="A9" type="MediaType" line="547"/>
                <javadoc line="547">
                    An alias for ISO_A9.                    
                </javadoc>
                <declaration name="A10" type="MediaType" line="551"/>
                <javadoc line="551">
                    An alias for ISO_A10.                    
                </javadoc>
                <declaration name="B0" type="MediaType" line="555"/>
                <javadoc line="555">
                    An alias for ISO_B0.                    
                </javadoc>
                <declaration name="B1" type="MediaType" line="559"/>
                <javadoc line="559">
                    An alias for ISO_B1.                    
                </javadoc>
                <declaration name="B2" type="MediaType" line="563"/>
                <javadoc line="563">
                    An alias for ISO_B2.                    
                </javadoc>
                <declaration name="B3" type="MediaType" line="567"/>
                <javadoc line="567">
                    An alias for ISO_B3.                    
                </javadoc>
                <declaration name="B4" type="MediaType" line="571"/>
                <javadoc line="571">
                    An alias for ISO_B4.                    
                </javadoc>
                <declaration name="ISO_B4_ENVELOPE" type="MediaType" line="575"/>
                <javadoc line="575">
                    An alias for ISO_B4.                    
                </javadoc>
                <declaration name="B5" type="MediaType" line="579"/>
                <javadoc line="579">
                    An alias for ISO_B5.                    
                </javadoc>
                <declaration name="ISO_B5_ENVELOPE" type="MediaType" line="583"/>
                <javadoc line="583">
                    An alias for ISO_B5.                    
                </javadoc>
                <declaration name="B6" type="MediaType" line="587"/>
                <javadoc line="587">
                    An alias for ISO_B6.                    
                </javadoc>
                <declaration name="B7" type="MediaType" line="591"/>
                <javadoc line="591">
                    An alias for ISO_B7.                    
                </javadoc>
                <declaration name="B8" type="MediaType" line="595"/>
                <javadoc line="595">
                    An alias for ISO_B8.                    
                </javadoc>
                <declaration name="B9" type="MediaType" line="599"/>
                <javadoc line="599">
                    An alias for ISO_B9.                    
                </javadoc>
                <declaration name="B10" type="MediaType" line="603"/>
                <javadoc line="603">
                    An alias for ISO_B10.                    
                </javadoc>
                <declaration name="C0" type="MediaType" line="607"/>
                <javadoc line="607">
                    An alias for ISO_C0.                    
                </javadoc>
                <declaration name="ISO_C0_ENVELOPE" type="MediaType" line="611"/>
                <javadoc line="611">
                    An alias for ISO_C0.                    
                </javadoc>
                <declaration name="C1" type="MediaType" line="615"/>
                <javadoc line="615">
                    An alias for ISO_C1.                    
                </javadoc>
                <declaration name="ISO_C1_ENVELOPE" type="MediaType" line="619"/>
                <javadoc line="619">
                    An alias for ISO_C1.                    
                </javadoc>
                <declaration name="C2" type="MediaType" line="623"/>
                <javadoc line="623">
                    An alias for ISO_C2.                    
                </javadoc>
                <declaration name="ISO_C2_ENVELOPE" type="MediaType" line="627"/>
                <javadoc line="627">
                    An alias for ISO_C2.                    
                </javadoc>
                <declaration name="C3" type="MediaType" line="631"/>
                <javadoc line="631">
                    An alias for ISO_C3.                    
                </javadoc>
                <declaration name="ISO_C3_ENVELOPE" type="MediaType" line="635"/>
                <javadoc line="635">
                    An alias for ISO_C3.                    
                </javadoc>
                <declaration name="C4" type="MediaType" line="639"/>
                <javadoc line="639">
                    An alias for ISO_C4.                    
                </javadoc>
                <declaration name="ISO_C4_ENVELOPE" type="MediaType" line="643"/>
                <javadoc line="643">
                    An alias for ISO_C4.                    
                </javadoc>
                <declaration name="C5" type="MediaType" line="647"/>
                <javadoc line="647">
                    An alias for ISO_C5.                    
                </javadoc>
                <declaration name="ISO_C5_ENVELOPE" type="MediaType" line="651"/>
                <javadoc line="651">
                    An alias for ISO_C5.                    
                </javadoc>
                <declaration name="C6" type="MediaType" line="655"/>
                <javadoc line="655">
                    An alias for ISO_C6.                    
                </javadoc>
                <declaration name="ISO_C6_ENVELOPE" type="MediaType" line="659"/>
                <javadoc line="659">
                    An alias for ISO_C6.                    
                </javadoc>
                <declaration name="C7" type="MediaType" line="663"/>
                <javadoc line="663">
                    An alias for ISO_C7.                    
                </javadoc>
                <declaration name="ISO_C7_ENVELOPE" type="MediaType" line="667"/>
                <javadoc line="667">
                    An alias for ISO_C7.                    
                </javadoc>
                <declaration name="C8" type="MediaType" line="671"/>
                <javadoc line="671">
                    An alias for ISO_C8.                    
                </javadoc>
                <declaration name="ISO_C8_ENVELOPE" type="MediaType" line="675"/>
                <javadoc line="675">
                    An alias for ISO_C8.                    
                </javadoc>
                <declaration name="C9" type="MediaType" line="679"/>
                <javadoc line="679">
                    An alias for ISO_C9.                    
                </javadoc>
                <declaration name="ISO_C9_ENVELOPE" type="MediaType" line="683"/>
                <javadoc line="683">
                    An alias for ISO_C9.                    
                </javadoc>
                <declaration name="C10" type="MediaType" line="687"/>
                <javadoc line="687">
                    An alias for ISO_C10.                    
                </javadoc>
                <declaration name="ISO_C10_ENVELOPE" type="MediaType" line="691"/>
                <javadoc line="691">
                    An alias for ISO_C10.                    
                </javadoc>
                <declaration name="ISO_DESIGNATED_LONG_ENVELOPE" type="MediaType" line="695"/>
                <javadoc line="695">
                    An alias for ISO_DESIGNATED_LONG.                    
                </javadoc>
                <declaration name="STATEMENT" type="MediaType" line="700"/>
                <javadoc line="700">
                    An alias for INVOICE.                    
                </javadoc>
                <declaration name="TABLOID" type="MediaType" line="704"/>
                <javadoc line="704">
                    An alias for LEDGER.                    
                </javadoc>
                <declaration name="LETTER" type="MediaType" line="708"/>
                <javadoc line="708">
                    An alias for NA_LETTER.                    
                </javadoc>
                <declaration name="NOTE" type="MediaType" line="712"/>
                <javadoc line="712">
                    An alias for NA_LETTER.                    
                </javadoc>
                <declaration name="LEGAL" type="MediaType" line="716"/>
                <javadoc line="716">
                    An alias for NA_LEGAL.                    
                </javadoc>
                <declaration name="ENV_10X15" type="MediaType" line="720"/>
                <javadoc line="720">
                    An alias for NA_10X15_ENVELOPE.                    
                </javadoc>
                <declaration name="ENV_10X14" type="MediaType" line="724"/>
                <javadoc line="724">
                    An alias for NA_10X14_ENVELOPE.                    
                </javadoc>
                <declaration name="ENV_10X13" type="MediaType" line="728"/>
                <javadoc line="728">
                    An alias for NA_10X13_ENVELOPE.                    
                </javadoc>
                <declaration name="ENV_9X12" type="MediaType" line="732"/>
                <javadoc line="732">
                    An alias for NA_9X12_ENVELOPE.                    
                </javadoc>
                <declaration name="ENV_9X11" type="MediaType" line="736"/>
                <javadoc line="736">
                    An alias for NA_9X11_ENVELOPE.                    
                </javadoc>
                <declaration name="ENV_7X9" type="MediaType" line="740"/>
                <javadoc line="740">
                    An alias for NA_7X9_ENVELOPE.                    
                </javadoc>
                <declaration name="ENV_6X9" type="MediaType" line="744"/>
                <javadoc line="744">
                    An alias for NA_6X9_ENVELOPE.                    
                </javadoc>
                <declaration name="ENV_9" type="MediaType" line="748"/>
                <javadoc line="748">
                    An alias for NA_NUMBER_9_ENVELOPE.                    
                </javadoc>
                <declaration name="ENV_10" type="MediaType" line="752"/>
                <javadoc line="752">
                    An alias for NA_NUMBER_10_ENVELOPE.                    
                </javadoc>
                <declaration name="ENV_11" type="MediaType" line="756"/>
                <javadoc line="756">
                    An alias for NA_NUMBER_11_ENVELOPE.                    
                </javadoc>
                <declaration name="ENV_12" type="MediaType" line="760"/>
                <javadoc line="760">
                    An alias for NA_NUMBER_12_ENVELOPE.                    
                </javadoc>
                <declaration name="ENV_14" type="MediaType" line="764"/>
                <javadoc line="764">
                    An alias for NA_NUMBER_14_ENVELOPE.                    
                </javadoc>
                <declaration name="ENV_INVITE" type="MediaType" line="768"/>
                <javadoc line="768">
                    An alias for INVITE_ENVELOPE.                    
                </javadoc>
                <declaration name="ENV_ITALY" type="MediaType" line="772"/>
                <javadoc line="772">
                    An alias for ITALY_ENVELOPE.                    
                </javadoc>
                <declaration name="ENV_MONARCH" type="MediaType" line="776"/>
                <javadoc line="776">
                    An alias for MONARCH_ENVELOPE.                    
                </javadoc>
                <declaration name="ENV_PERSONAL" type="MediaType" line="780"/>
                <javadoc line="780">
                    An alias for PERSONAL_ENVELOPE.                    
                </javadoc>
                <declaration name="INVITE" type="MediaType" line="784"/>
                <javadoc line="784">
                    An alias for INVITE_ENVELOPE.                    
                </javadoc>
                <declaration name="ITALY" type="MediaType" line="788"/>
                <javadoc line="788">
                    An alias for ITALY_ENVELOPE.                    
                </javadoc>
                <declaration name="MONARCH" type="MediaType" line="792"/>
                <javadoc line="792">
                    An alias for MONARCH_ENVELOPE.                    
                </javadoc>
                <declaration name="PERSONAL" type="MediaType" line="796"/>
                <javadoc line="796">
                    An alias for PERSONAL_ENVELOPE.                    
                </javadoc>
                <method name="MediaType" type="constructor" line="801">
                    <params>
                        <param name="type" type="int"/>
                    </params>
                </method>
            </class>
            <class name="OrientationRequestedType" line="806">
                <extends class="AttributeValue"/>
                <javadoc line="806">
                    A type-safe enumeration of possible orientations. These orientations
                      are in partial compliance with IPP 1.1.                    
                    <since>
                        1.3                        
                    </since>
                </javadoc>
                <declaration name="I_PORTRAIT" type="int" line="812"/>
                <declaration name="I_LANDSCAPE" type="int" line="813"/>
                <declaration name="NAMES" type="String" line="815"/>
                <declaration name="PORTRAIT" type="OrientationRequestedType" line="819"/>
                <javadoc line="819">
                    The OrientationRequestedType instance to use for specifying a
                      portrait orientation.                    
                </javadoc>
                <declaration name="LANDSCAPE" type="OrientationRequestedType" line="825"/>
                <javadoc line="825">
                    The OrientationRequestedType instance to use for specifying a
                      landscape orientation.                    
                </javadoc>
                <method name="OrientationRequestedType" type="constructor" line="832">
                    <params>
                        <param name="type" type="int"/>
                    </params>
                </method>
            </class>
            <class name="OriginType" line="837">
                <extends class="AttributeValue"/>
                <javadoc line="837">
                    A type-safe enumeration of possible origins.                    
                    <since>
                        1.3                        
                    </since>
                </javadoc>
                <declaration name="I_PHYSICAL" type="int" line="842"/>
                <declaration name="I_PRINTABLE" type="int" line="843"/>
                <declaration name="NAMES" type="String" line="845"/>
                <declaration name="PHYSICAL" type="OriginType" line="849"/>
                <javadoc line="849">
                    The OriginType instance to use for specifying a physical origin.                    
                </javadoc>
                <declaration name="PRINTABLE" type="OriginType" line="853"/>
                <javadoc line="853">
                    The OriginType instance to use for specifying a printable origin.                    
                </javadoc>
                <method name="OriginType" type="constructor" line="858">
                    <params>
                        <param name="type" type="int"/>
                    </params>
                </method>
            </class>
            <class name="PrintQualityType" line="863">
                <extends class="AttributeValue"/>
                <javadoc line="863">
                    A type-safe enumeration of possible print qualities. These print
                      qualities are in compliance with IPP 1.1.                    
                    <since>
                        1.3                        
                    </since>
                </javadoc>
                <declaration name="I_HIGH" type="int" line="869"/>
                <declaration name="I_NORMAL" type="int" line="870"/>
                <declaration name="I_DRAFT" type="int" line="871"/>
                <declaration name="NAMES" type="String" line="873"/>
                <declaration name="HIGH" type="PrintQualityType" line="877"/>
                <javadoc line="877">
                    The PrintQualityType instance to use for specifying a high print
                      quality.                    
                </javadoc>
                <declaration name="NORMAL" type="PrintQualityType" line="883"/>
                <javadoc line="883">
                    The PrintQualityType instance to use for specifying a normal print
                      quality.                    
                </javadoc>
                <declaration name="DRAFT" type="PrintQualityType" line="889"/>
                <javadoc line="889">
                    The PrintQualityType instance to use for specifying a draft print
                      quality.                    
                </javadoc>
                <method name="PrintQualityType" type="constructor" line="896">
                    <params>
                        <param name="type" type="int"/>
                    </params>
                </method>
            </class>
            <declaration name="color" type="ColorType" line="901"/>
            <declaration name="media" type="MediaType" line="902"/>
            <declaration name="orientationRequested" type="OrientationRequestedType" line="903"/>
            <declaration name="origin" type="OriginType" line="904"/>
            <declaration name="printQuality" type="PrintQualityType" line="905"/>
            <declaration name="printerResolution" type="int[]" line="906"/>
            <javadoc line="908">
                Constructs a PageAttributes instance with default values for every
                  attribute.                
            </javadoc>
            <method name="PageAttributes" type="constructor" line="912"/>
            <javadoc line="921">
                Constructs a PageAttributes instance which is a copy of the supplied
                  PageAttributes.                
                <param>
                    obj the PageAttributes to copy.                    
                </param>
            </javadoc>
            <method name="PageAttributes" type="constructor" line="927">
                <params>
                    <param name="obj" type="PageAttributes"/>
                </params>
            </method>
            <javadoc line="931">
                Constructs a PageAttributes instance with the specified values for
                  every attribute.                
                <param>
                    color ColorType.COLOR or ColorType.MONOCHROME.                    
                </param>
                <param>
                    media one of the constant fields of the MediaType class.                    
                </param>
                <param>
                    orientationRequested OrientationRequestedType.PORTRAIT or
                      OrientationRequestedType.LANDSCAPE.                    
                </param>
                <param>
                    origin OriginType.PHYSICAL or OriginType.PRINTABLE                    
                </param>
                <param>
                    printQuality PrintQualityType.DRAFT, PrintQualityType.NORMAL,
                      or PrintQualityType.HIGH                    
                </param>
                <param>
                    printerResolution an integer array of 3 elements. The first
                      element must be greater than 0. The second element must be
                      must be greater than 0. The third element must be either
                      <code>3</code> or <code>4</code>.                    
                </param>
                <throws>
                    IllegalArgumentException if one or more of the above
                      conditions is violated.                    
                </throws>
            </javadoc>
            <method name="PageAttributes" type="constructor" line="952">
                <params>
                    <param name="color" type="ColorType"/>
                    <param name="media" type="MediaType"/>
                    <param name="orientationRequested" type="OrientationRequestedType"/>
                    <param name="origin" type="OriginType"/>
                    <param name="printQuality" type="PrintQualityType"/>
                    <param name="printerResolution" type="int[]"/>
                </params>
            </method>
            <javadoc line="961">
                Creates and returns a copy of this PageAttributes.                
                <return>
                    the newly created copy. It is safe to cast this Object into
                      a PageAttributes.                    
                </return>
            </javadoc>
            <method name="clone" type="Object" line="967">
                <comment line="972">
                    Since we implement Cloneable, this should never happen                    
                </comment>
                <scope line="968"/>
                <scope line="970"/>
            </method>
            <javadoc line="976">
                Sets all of the attributes of this PageAttributes to the same values as
                  the attributes of obj.                
                <param>
                    obj the PageAttributes to copy.                    
                </param>
            </javadoc>
            <method name="set" type="void" line="982">
                <params>
                    <param name="obj" type="PageAttributes"/>
                </params>
                <comment line="989">
                    okay because we never modify the contents of printerResolution                    
                </comment>
            </method>
            <javadoc line="992">
                Returns whether pages using these attributes will be rendered in
                  color or monochrome. This attribute is updated to the value chosen
                  by the user.                
                <return>
                    ColorType.COLOR or ColorType.MONOCHROME.                    
                </return>
            </javadoc>
            <method name="getColor" type="ColorType" line="999"/>
            <javadoc line="1003">
                Specifies whether pages using these attributes will be rendered in
                  color or monochrome. Not specifying this attribute is equivalent to
                  specifying ColorType.MONOCHROME.                
                <param>
                    color ColorType.COLOR or ColorType.MONOCHROME.                    
                </param>
                <throws>
                    IllegalArgumentException if color is null.                    
                </throws>
            </javadoc>
            <method name="setColor" type="void" line="1011">
                <params>
                    <param name="color" type="ColorType"/>
                </params>
                <scope line="1012"/>
            </method>
            <javadoc line="1019">
                Returns the paper size for pages using these attributes. This
                  attribute is updated to the value chosen by the user.                
                <return>
                    one of the constant fields of the MediaType class.                    
                </return>
            </javadoc>
            <method name="getMedia" type="MediaType" line="1025"/>
            <javadoc line="1029">
                Specifies the desired paper size for pages using these attributes. The
                  actual paper size will be determined by the limitations of the target
                  printer. If an exact match cannot be found, an implementation will
                  choose the closest possible match. Not specifying this attribute is
                  equivalent to specifying the default size for the default locale. The
                  default size for locales in the United States and Canada is
                  MediaType.NA_LETTER. The default size for all other locales is
                  MediaType.ISO_A4.                
                <param>
                    media one of the constant fields of the MediaType class.                    
                </param>
                <throws>
                    IllegalArgumentException if media is null.                    
                </throws>
            </javadoc>
            <method name="setMedia" type="void" line="1042">
                <params>
                    <param name="media" type="MediaType"/>
                </params>
                <scope line="1043"/>
            </method>
            <javadoc line="1050">
                Sets the paper size for pages using these attributes to the default
                  size for the default locale. The default size for locales in the
                  United States and Canada is MediaType.NA_LETTER. The default size for
                  all other locales is MediaType.ISO_A4.                
            </javadoc>
            <method name="setMediaToDefault" type="void" line="1056">
                <declaration name="defaultCountry" type="String" line="1057"/>
                <scope line="1060"/>
                <scope line="1062"/>
            </method>
            <javadoc line="1067">
                Returns the print orientation for pages using these attributes. This
                  attribute is updated to the value chosen by the user.                
                <return>
                    OrientationRequestedType.PORTRAIT or
                      OrientationRequestedType.LANDSCAPE.                    
                </return>
            </javadoc>
            <method name="getOrientationRequested" type="OrientationRequestedType" line="1074"/>
            <javadoc line="1078">
                Specifies the print orientation for pages using these attributes. Not
                  specifying the property is equivalent to specifying
                  OrientationRequestedType.PORTRAIT.                
                <param>
                    orientationRequested OrientationRequestedType.PORTRAIT or
                      OrientationRequestedType.LANDSCAPE.                    
                </param>
                <throws>
                    IllegalArgumentException if orientationRequested is null.                    
                </throws>
            </javadoc>
            <method name="setOrientationRequested" type="void" line="1088">
                <params>
                    <param name="orientationRequested" type="OrientationRequestedType"/>
                </params>
                <scope line="1089"/>
            </method>
            <javadoc line="1096">
                Specifies the print orientation for pages using these attributes.
                  Specifying &lt;code&gt;3&lt;/code&gt; denotes portrait. Specifying &lt;code&gt;4&lt;/code&gt;
                  denotes landscape. Specifying any other value will generate an
                  IllegalArgumentException. Not specifying the property is equivalent
                  to calling setOrientationRequested(OrientationRequestedType.PORTRAIT).                
                <param>
                    orientationRequested <code>3</code> or <code>4</code>                    
                </param>
                <throws>
                    IllegalArgumentException if orientationRequested is not
                      <code>3</code> or <code>4</code>                    
                </throws>
            </javadoc>
            <method name="setOrientationRequested" type="void" line="1107">
                <params>
                    <param name="orientationRequested" type="int"/>
                </params>
                <comment line="1117">
                    This will throw an IllegalArgumentException                    
                </comment>
            </method>
            <javadoc line="1122">
                Sets the print orientation for pages using these attributes to the
                  default. The default orientation is portrait.                
            </javadoc>
            <method name="setOrientationRequestedToDefault" type="void" line="1126"/>
            <javadoc line="1130">
                Returns whether drawing at (0, 0) to pages using these attributes
                  draws at the upper-left corner of the physical page, or at the
                  upper-left corner of the printable area. (Note that these locations
                  could be equivalent.) This attribute cannot be modified by,
                  and is not subject to any limitations of, the implementation or the
                  target printer.                
                <return>
                    OriginType.PHYSICAL or OriginType.PRINTABLE                    
                </return>
            </javadoc>
            <method name="getOrigin" type="OriginType" line="1140"/>
            <javadoc line="1144">
                Specifies whether drawing at (0, 0) to pages using these attributes
                  draws at the upper-left corner of the physical page, or at the
                  upper-left corner of the printable area. (Note that these locations
                  could be equivalent.) Not specifying the property is equivalent to
                  specifying OriginType.PHYSICAL.                
                <param>
                    origin OriginType.PHYSICAL or OriginType.PRINTABLE                    
                </param>
                <throws>
                    IllegalArgumentException if origin is null.                    
                </throws>
            </javadoc>
            <method name="setOrigin" type="void" line="1154">
                <params>
                    <param name="origin" type="OriginType"/>
                </params>
                <scope line="1155"/>
            </method>
            <javadoc line="1162">
                Returns the print quality for pages using these attributes. This
                  attribute is updated to the value chosen by the user.                
                <return>
                    PrintQualityType.DRAFT, PrintQualityType.NORMAL, or
                      PrintQualityType.HIGH                    
                </return>
            </javadoc>
            <method name="getPrintQuality" type="PrintQualityType" line="1169"/>
            <javadoc line="1173">
                Specifies the print quality for pages using these attributes. Not
                  specifying the property is equivalent to specifying
                  PrintQualityType.NORMAL.                
                <param>
                    printQuality PrintQualityType.DRAFT, PrintQualityType.NORMAL,
                      or PrintQualityType.HIGH                    
                </param>
                <throws>
                    IllegalArgumentException if printQuality is null.                    
                </throws>
            </javadoc>
            <method name="setPrintQuality" type="void" line="1182">
                <params>
                    <param name="printQuality" type="PrintQualityType"/>
                </params>
                <scope line="1183"/>
            </method>
            <javadoc line="1190">
                Specifies the print quality for pages using these attributes.
                  Specifying &lt;code&gt;3&lt;/code&gt; denotes draft. Specifying &lt;code&gt;4&lt;/code&gt;
                  denotes normal. Specifying &lt;code&gt;5&lt;/code&gt; denotes high. Specifying
                  any other value will generate an IllegalArgumentException. Not
                  specifying the property is equivalent to calling
                  setPrintQuality(PrintQualityType.NORMAL).                
                <param>
                    printQuality <code>3</code>, <code>4</code>, or <code>5</code>                    
                </param>
                <throws>
                    IllegalArgumentException if printQuality is not <code>3
                      </code>, <code>4</code>, or <code>5</code>                    
                </throws>
            </javadoc>
            <method name="setPrintQuality" type="void" line="1202">
                <params>
                    <param name="printQuality" type="int"/>
                </params>
                <comment line="1215">
                    This will throw an IllegalArgumentException                    
                </comment>
            </method>
            <javadoc line="1220">
                Sets the print quality for pages using these attributes to the default.
                  The default print quality is normal.                
            </javadoc>
            <method name="setPrintQualityToDefault" type="void" line="1224"/>
            <javadoc line="1228">
                Returns the print resolution for pages using these attributes.
                  Index 0 of the array specifies the cross feed direction resolution
                  (typically the horizontal resolution). Index 1 of the array specifies
                  the feed direction resolution (typically the vertical resolution).
                  Index 2 of the array specifies whether the resolutions are in dots per
                  inch or dots per centimeter. &lt;code&gt;3&lt;/code&gt; denotes dots per inch.
                  &lt;code&gt;4&lt;/code&gt; denotes dots per centimeter.                
                <return>
                    an integer array of 3 elements. The first
                      element must be greater than 0. The second element must be
                      must be greater than 0. The third element must be either
                      <code>3</code> or <code>4</code>.                    
                </return>
            </javadoc>
            <method name="getPrinterResolution" type="int[]" line="1242">
                <comment line="1244">
                    Return a copy because otherwise client code could circumvent the
                     the checks made in setPrinterResolution by modifying the
                     returned array.                    
                </comment>
                <declaration name="copy" type="int[]" line="1246"/>
            </method>
            <javadoc line="1253">
                Specifies the desired print resolution for pages using these attributes.
                  The actual resolution will be determined by the limitations of the
                  implementation and the target printer. Index 0 of the array specifies
                  the cross feed direction resolution (typically the horizontal
                  resolution). Index 1 of the array specifies the feed direction
                  resolution (typically the vertical resolution). Index 2 of the array
                  specifies whether the resolutions are in dots per inch or dots per
                  centimeter. &lt;code&gt;3&lt;/code&gt; denotes dots per inch. &lt;code&gt;4&lt;/code&gt;
                  denotes dots per centimeter. Note that the 1.1 printing implementation
                  (Toolkit.getPrintJob) requires that the feed and cross feed resolutions
                  be the same. Not specifying the property is equivalent to calling
                  setPrinterResolution(72).                
                <param>
                    printerResolution an integer array of 3 elements. The first
                      element must be greater than 0. The second element must be
                      must be greater than 0. The third element must be either
                      <code>3</code> or <code>4</code>.                    
                </param>
                <throws>
                    IllegalArgumentException if one or more of the above
                      conditions is violated.                    
                </throws>
            </javadoc>
            <method name="setPrinterResolution" type="void" line="1274">
                <params>
                    <param name="printerResolution" type="int[]"/>
                </params>
                <comment line="1284">
                    Store a copy because otherwise client code could circumvent the
                     the checks made above by holding a reference to the array and
                     modifying it after calling setPrinterResolution.                    
                </comment>
                <scope line="1279"/>
                <declaration name="copy" type="int[]" line="1286"/>
            </method>
            <javadoc line="1293">
                Specifies the desired cross feed and feed print resolutions in dots per
                  inch for pages using these attributes. The same value is used for both
                  resolutions. The actual resolutions will be determined by the
                  limitations of the implementation and the target printer. Not
                  specifying the property is equivalent to specifying &lt;code&gt;72&lt;/code&gt;.                
                <param>
                    printerResolution an integer greater than 0.                    
                </param>
                <throws>
                    IllegalArgumentException if printerResolution is less than or
                      equal to 0.                    
                </throws>
            </javadoc>
            <method name="setPrinterResolution" type="void" line="1304">
                <params>
                    <param name="printerResolution" type="int"/>
                </params>
            </method>
            <javadoc line="1309">
                Sets the printer resolution for pages using these attributes to the
                  default. The default is 72 dpi for both the feed and cross feed
                  resolutions.                
            </javadoc>
            <method name="setPrinterResolutionToDefault" type="void" line="1314"/>
            <javadoc line="1318">
                Determines whether two PageAttributes are equal to each other.
                  &lt;p&gt;
                  Two PageAttributes are equal if and only if each of their attributes are
                  equal. Attributes of enumeration type are equal if and only if the
                  fields refer to the same unique enumeration object. This means that
                  an aliased media is equal to its underlying unique media. Printer
                  resolutions are equal if and only if the feed resolution, cross feed
                  resolution, and units are equal.                
                <param>
                    obj the object whose equality will be checked.                    
                </param>
                <return>
                    whether obj is equal to this PageAttribute according to the
                      above criteria.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="1332">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="1333"/>
                <declaration name="rhs" type="PageAttributes" line="1337"/>
            </method>
            <javadoc line="1349">
                Returns a hash code value for this PageAttributes.                
                <return>
                    the hash code.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="1354"/>
            <javadoc line="1365">
                Returns a string representation of this PageAttributes.                
                <return>
                    the string representation.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="1370">
                <comment line="1372">
                    int[] printerResolution = getPrinterResolution();                    
                </comment>
            </method>
        </class>
    </source>