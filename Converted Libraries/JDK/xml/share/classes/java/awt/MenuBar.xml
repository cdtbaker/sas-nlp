<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt">
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.util.Vector"/>
        <import package="java.util.Enumeration"/>
        <import package="java.awt.peer.MenuBarPeer"/>
        <import package="java.awt.event.KeyEvent"/>
        <import package="javax.accessibility"/>
        <class name="MenuBar" line="35">
            <extends class="MenuComponent"/>
            <comment line="104">
                JDK 1.1 serialVersionUID                
            </comment>
            <comment line="280">
                This is called by the native code, so client code can&apos;t
                 be called on the toolkit thread.                
            </comment>
            <comment line="297">
                This is called by the native code, so client code can&apos;t
                 be called on the toolkit thread.                
            </comment>
            <comment line="347">
                Post an ACTION_EVENT to the target of the MenuPeer
                 associated with the specified keyboard event (on
                 keydown).  Returns true if there is an associated
                 keyboard event.                
            </comment>
            <comment line="389">
                Serialization support.  Restore the (transient) parent
                 fields of Menubar menus here.                
            </comment>
            <comment line="442">
                ///////////////                
            </comment>
            <comment line="443">
                Accessibility support                
            </comment>
            <comment line="444">
                //////////////                
            </comment>
            <comment line="499">
                class AccessibleAWTMenuBar                
            </comment>
            <implements interface="MenuContainer"/>
            <implements interface="Accessible"/>
            <javadoc line="35">
                The &lt;code&gt;MenuBar&lt;/code&gt; class encapsulates the platform&apos;s
                  concept of a menu bar bound to a frame. In order to associate
                  the menu bar with a &lt;code&gt;Frame&lt;/code&gt; object, call the
                  frame&apos;s &lt;code&gt;setMenuBar&lt;/code&gt; method.
                  &lt;p&gt;
                  &lt;A NAME=&quot;mbexample&quot;&gt;&lt;/A&gt;&lt;!-- target for cross references --&gt;
                  This is what a menu bar might look like:
                  &lt;p&gt;
                  &lt;img src=&quot;doc-files/MenuBar-1.gif&quot;
                  &lt;alt=&quot;Diagram of MenuBar containing 2 menus: Examples and Options.
                  Examples menu is expanded showing items: Basic, Simple, Check, and More Examples.&quot;
                  ALIGN=center HSPACE=10 VSPACE=7&gt;
                  &lt;p&gt;
                  A menu bar handles keyboard shortcuts for menu items, passing them
                  along to its child menus.
                  (Keyboard shortcuts, which are optional, provide the user with
                  an alternative to the mouse for invoking a menu item and the
                  action that is associated with it.)
                  Each menu item can maintain an instance of &lt;code&gt;MenuShortcut&lt;/code&gt;.
                  The &lt;code&gt;MenuBar&lt;/code&gt; class defines several methods,{@link MenuBar#shortcuts} and{@link MenuBar#getShortcutMenuItem}that retrieve information about the shortcuts a given
                  menu bar is managing.                
                <author>
                    Sami Shaio                    
                </author>
                <see>
                    java.awt.Frame                    
                </see>
                <see>
                    java.awt.Frame#setMenuBar(java.awt.MenuBar)                    
                </see>
                <see>
                    java.awt.Menu                    
                </see>
                <see>
                    java.awt.MenuItem                    
                </see>
                <see>
                    java.awt.MenuShortcut                    
                </see>
                <since>
                    JDK1.0                    
                </since>
            </javadoc>
            <scope line="71">
                <scope line="74"/>
            </scope>
            <declaration name="menus" type="Vector" line="79"/>
            <javadoc line="79">
                This field represents a vector of the
                  actual menus that will be part of the MenuBar.                
                <serial>
                                        
                </serial>
                <see>
                    #countMenus()                    
                </see>
            </javadoc>
            <declaration name="helpMenu" type="Menu" line="88"/>
            <javadoc line="88">
                This menu is a special menu dedicated to
                  help.  The one thing to note about this menu
                  is that on some platforms it appears at the
                  right edge of the menubar.                
                <serial>
                                        
                </serial>
                <see>
                    #getHelpMenu()                    
                </see>
                <see>
                    #setHelpMenu(Menu)                    
                </see>
            </javadoc>
            <declaration name="base" type="String" line="100"/>
            <declaration name="nameCounter" type="int" line="101"/>
            <declaration name="serialVersionUID" type="long" line="106"/>
            <javadoc line="108">
                Creates a new menu bar.                
                <exception>
                    HeadlessException if GraphicsEnvironment.isHeadless()
                      returns true.                    
                </exception>
                <see>
                    java.awt.GraphicsEnvironment#isHeadless                    
                </see>
            </javadoc>
            <method name="MenuBar" type="constructor" line="114"/>
            <javadoc line="117">
                Construct a name for this MenuComponent.  Called by getName() when
                  the name is null.                
            </javadoc>
            <method name="constructComponentName" type="String" line="121">
                <scope line="122"/>
            </method>
            <javadoc line="127">
                Creates the menu bar&apos;s peer.  The peer allows us to change the
                  appearance of the menu bar without changing any of the menu bar&apos;s
                  functionality.                
            </javadoc>
            <method name="addNotify" type="void" line="132">
                <scope line="133">
                    <declaration name="nmenus" type="int" line="137"/>
                    <scope line="138"/>
                </scope>
            </method>
            <javadoc line="144">
                Removes the menu bar&apos;s peer.  The peer allows us to change the
                  appearance of the menu bar without changing any of the menu bar&apos;s
                  functionality.                
            </javadoc>
            <method name="removeNotify" type="void" line="149">
                <scope line="150">
                    <declaration name="nmenus" type="int" line="151"/>
                    <scope line="152"/>
                </scope>
            </method>
            <javadoc line="159">
                Gets the help menu on the menu bar.                
                <return>
                    the help menu on this menu bar.                    
                </return>
            </javadoc>
            <method name="getHelpMenu" type="Menu" line="163"/>
            <javadoc line="167">
                Sets the specified menu to be this menu bar&apos;s help menu.
                  If this menu bar has an existing help menu, the old help menu is
                  removed from the menu bar, and replaced with the specified menu.                
                <param>
                    m    the menu to be set as the help menu                    
                </param>
            </javadoc>
            <method name="setHelpMenu" type="void" line="173">
                <params>
                    <param name="m" type="Menu"/>
                </params>
                <scope line="174">
                    <scope line="175"/>
                    <scope line="178"/>
                    <scope line="181"/>
                    <scope line="185">
                        <declaration name="peer" type="MenuBarPeer" line="188"/>
                        <scope line="189">
                            <scope line="190"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="199">
                Adds the specified menu to the menu bar.
                  If the menu has been part of another menu bar,
                  removes it from that menu bar.                
                <param>
                    m   the menu to be added                    
                </param>
                <return>
                    the menu added                    
                </return>
                <see>
                    java.awt.MenuBar#remove(int)                    
                </see>
                <see>
                    java.awt.MenuBar#remove(java.awt.MenuComponent)                    
                </see>
            </javadoc>
            <method name="add" type="Menu" line="209">
                <params>
                    <param name="m" type="Menu"/>
                </params>
                <scope line="210">
                    <scope line="211"/>
                    <declaration name="peer" type="MenuBarPeer" line="217"/>
                    <scope line="218">
                        <scope line="219"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="228">
                Removes the menu located at the specified
                  index from this menu bar.                
                <param>
                    index   the position of the menu to be removed.                    
                </param>
                <see>
                    java.awt.MenuBar#add(java.awt.Menu)                    
                </see>
            </javadoc>
            <method name="remove" type="void" line="234">
                <params>
                    <param name="index" type="int"/>
                </params>
                <scope line="235">
                    <declaration name="m" type="Menu" line="236"/>
                    <declaration name="peer" type="MenuBarPeer" line="238"/>
                    <scope line="239"/>
                </scope>
            </method>
            <javadoc line="247">
                Removes the specified menu component from this menu bar.                
                <param>
                    m the menu component to be removed.                    
                </param>
                <see>
                    java.awt.MenuBar#add(java.awt.Menu)                    
                </see>
            </javadoc>
            <method name="remove" type="void" line="252">
                <params>
                    <param name="m" type="MenuComponent"/>
                </params>
                <scope line="253">
                    <declaration name="index" type="int" line="254"/>
                    <scope line="255"/>
                </scope>
            </method>
            <javadoc line="261">
                Gets the number of menus on the menu bar.                
                <return>
                    the number of menus on the menu bar.                    
                </return>
                <since>
                    JDK1.1                    
                </since>
            </javadoc>
            <method name="getMenuCount" type="int" line="266"/>
            <javadoc line="270">
                @deprecated As of JDK version 1.1,
                  replaced by &lt;code&gt;getMenuCount()&lt;/code&gt;.                
            </javadoc>
            <method name="countMenus" type="int" line="275"/>
            <method name="getMenuCountImpl" type="int" line="283"/>
            <javadoc line="287">
                Gets the specified menu.                
                <param>
                    i the index position of the menu to be returned.                    
                </param>
                <return>
                    the menu at the specified index of this menu bar.                    
                </return>
            </javadoc>
            <method name="getMenu" type="Menu" line="292">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="getMenuImpl" type="Menu" line="300">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <javadoc line="304">
                Gets an enumeration of all menu shortcuts this menu bar
                  is managing.                
                <return>
                    an enumeration of menu shortcuts that this
                      menu bar is managing.                    
                </return>
                <see>
                    java.awt.MenuShortcut                    
                </see>
                <since>
                    JDK1.1                    
                </since>
            </javadoc>
            <method name="shortcuts" type="Enumeration<MenuShortcut>" line="312">
                <declaration name="shortcuts" type="Vector" line="313"/>
                <declaration name="nmenus" type="int" line="314"/>
                <scope line="315">
                    <declaration name="e" type="Enumeration" line="316"/>
                    <scope line="317"/>
                </scope>
            </method>
            <javadoc line="324">
                Gets the instance of &lt;code&gt;MenuItem&lt;/code&gt; associated
                  with the specified &lt;code&gt;MenuShortcut&lt;/code&gt; object,
                  or &lt;code&gt;null&lt;/code&gt; if none of the menu items being managed
                  by this menu bar is associated with the specified menu
                  shortcut.                
                <param>
                    s the specified menu shortcut.                    
                </param>
                <see>
                    java.awt.MenuItem                    
                </see>
                <see>
                    java.awt.MenuShortcut                    
                </see>
                <since>
                    JDK1.1                    
                </since>
            </javadoc>
            <method name="getShortcutMenuItem" type="MenuItem" line="335">
                <params>
                    <param name="s" type="MenuShortcut"/>
                </params>
                <comment line="343">
                    MenuShortcut wasn&apos;t found                    
                </comment>
                <declaration name="nmenus" type="int" line="336"/>
                <scope line="337">
                    <declaration name="mi" type="MenuItem" line="338"/>
                    <scope line="339"/>
                </scope>
            </method>
            <method name="handleShortcut" type="boolean" line="352">
                <params>
                    <param name="e" type="KeyEvent"/>
                </params>
                <comment line="353">
                    Is it a key event?                    
                </comment>
                <comment line="359">
                    Is the accelerator modifier key pressed?                    
                </comment>
                <comment line="365">
                    Pass MenuShortcut on to child menus.                    
                </comment>
                <declaration name="id" type="int" line="354"/>
                <scope line="355"/>
                <declaration name="accelKey" type="int" line="360"/>
                <scope line="361"/>
                <declaration name="nmenus" type="int" line="366"/>
                <scope line="367">
                    <declaration name="m" type="Menu" line="368"/>
                    <scope line="369"/>
                </scope>
            </method>
            <javadoc line="376">
                Deletes the specified menu shortcut.                
                <param>
                    s the menu shortcut to delete.                    
                </param>
                <since>
                    JDK1.1                    
                </since>
            </javadoc>
            <method name="deleteShortcut" type="void" line="381">
                <params>
                    <param name="s" type="MenuShortcut"/>
                </params>
                <declaration name="nmenus" type="int" line="382"/>
                <scope line="383"/>
            </method>
            <declaration name="menuBarSerializedDataVersion" type="int" line="392"/>
            <javadoc line="392">
                The MenuBar&apos;s serialized data version.                
                <serial>
                                        
                </serial>
            </javadoc>
            <javadoc line="399">
                Writes default serializable fields to stream.                
                <param>
                    s the <code>ObjectOutputStream</code> to write                    
                </param>
                <see>
                    AWTEventMulticaster#save(ObjectOutputStream,String,EventListener)                    
                </see>
                <see>
                    #readObject(java.io.ObjectInputStream)                    
                </see>
            </javadoc>
            <method name="writeObject" type="void" line="409">
                <params>
                    <param name="s" type="java.io.ObjectOutputStream"/>
                </params>
            </method>
            <javadoc line="413">
                Reads the &lt;code&gt;ObjectInputStream&lt;/code&gt;.
                  Unrecognized keys or values will be ignored.                
                <param>
                    s the <code>ObjectInputStream</code> to read                    
                </param>
                <exception>
                    HeadlessException if
                      <code>GraphicsEnvironment.isHeadless</code> returns
                      <code>true</code>                    
                </exception>
                <see>
                    java.awt.GraphicsEnvironment#isHeadless                    
                </see>
                <see>
                    #writeObject(java.io.ObjectOutputStream)                    
                </see>
            </javadoc>
            <method name="readObject" type="void" line="426">
                <params>
                    <param name="s" type="ObjectInputStream"/>
                </params>
                <comment line="427">
                    HeadlessException will be thrown from MenuComponent&apos;s readObject                    
                </comment>
                <scope line="429">
                    <declaration name="m" type="Menu" line="430"/>
                </scope>
            </method>
            <method name="initIDs" type="void" line="435"/>
            <javadoc line="435">
                Initialize JNI field and method IDs                
            </javadoc>
            <javadoc line="445">
                Gets the AccessibleContext associated with this MenuBar.
                  For menu bars, the AccessibleContext takes the form of an
                  AccessibleAWTMenuBar.
                  A new AccessibleAWTMenuBar instance is created if necessary.                
                <return>
                    an AccessibleAWTMenuBar that serves as the
                      AccessibleContext of this MenuBar                    
                </return>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="getAccessibleContext" type="AccessibleContext" line="455">
                <scope line="456"/>
            </method>
            <javadoc line="462">
                Defined in MenuComponent. Overridden here.                
            </javadoc>
            <method name="getAccessibleChildIndex" type="int" line="465">
                <params>
                    <param name="child" type="MenuComponent"/>
                </params>
            </method>
            <class name="AccessibleAWTMenuBar" line="469">
                <extends class="AccessibleAWTMenuComponent"/>
                <comment line="483">
                    JDK 1.3 serialVersionUID                    
                </comment>
                <javadoc line="469">
                    Inner class of MenuBar used to provide default support for
                      accessibility.  This class is not meant to be used directly by
                      application developers, but is instead meant only to be
                      subclassed by menu component developers.
                      &lt;p&gt;
                      This class implements accessibility support for the
                      &lt;code&gt;MenuBar&lt;/code&gt; class.  It provides an implementation of the
                      Java Accessibility API appropriate to menu bar user-interface elements.                    
                    <since>
                        1.3                        
                    </since>
                </javadoc>
                <declaration name="serialVersionUID" type="long" line="485"/>
                <javadoc line="487">
                    Get the role of this object.                    
                    <return>
                        an instance of AccessibleRole describing the role of the
                          object                        
                    </return>
                    <since>
                        1.4                        
                    </since>
                </javadoc>
                <method name="getAccessibleRole" type="AccessibleRole" line="494"/>
            </class>
        </class>
    </source>