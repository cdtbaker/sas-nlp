<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt">
        <import package="java.awt.AWTException"/>
        <import package="java.awt.Point"/>
        <import package="java.awt.Toolkit"/>
        <import package="java.io.File"/>
        <import package="java.io.FileInputStream"/>
        <import package="java.beans.ConstructorProperties"/>
        <import package="java.util.Hashtable"/>
        <import package="java.util.Properties"/>
        <import package="java.util.StringTokenizer"/>
        <import package="java.security.AccessController"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <class name="Cursor" line="13">
            <implements interface="java.io.Serializable"/>
            <javadoc line="13">
                A class to encapsulate the bitmap representation of the mouse cursor.                
                <see>
                    Component#setCursor                    
                </see>
                <author>
                    Amy Fowler                    
                </author>
            </javadoc>
            <declaration name="DEFAULT_CURSOR" type="int" line="19"/>
            <javadoc line="19">
                The default cursor type (gets set if no cursor is defined).                
            </javadoc>
            <declaration name="CROSSHAIR_CURSOR" type="int" line="23"/>
            <javadoc line="23">
                The crosshair cursor type.                
            </javadoc>
            <declaration name="TEXT_CURSOR" type="int" line="27"/>
            <javadoc line="27">
                The text cursor type.                
            </javadoc>
            <declaration name="WAIT_CURSOR" type="int" line="31"/>
            <javadoc line="31">
                The wait cursor type.                
            </javadoc>
            <declaration name="SW_RESIZE_CURSOR" type="int" line="35"/>
            <javadoc line="35">
                The south-west-resize cursor type.                
            </javadoc>
            <declaration name="SE_RESIZE_CURSOR" type="int" line="39"/>
            <javadoc line="39">
                The south-east-resize cursor type.                
            </javadoc>
            <declaration name="NW_RESIZE_CURSOR" type="int" line="43"/>
            <javadoc line="43">
                The north-west-resize cursor type.                
            </javadoc>
            <declaration name="NE_RESIZE_CURSOR" type="int" line="47"/>
            <javadoc line="47">
                The north-east-resize cursor type.                
            </javadoc>
            <declaration name="N_RESIZE_CURSOR" type="int" line="51"/>
            <javadoc line="51">
                The north-resize cursor type.                
            </javadoc>
            <declaration name="S_RESIZE_CURSOR" type="int" line="55"/>
            <javadoc line="55">
                The south-resize cursor type.                
            </javadoc>
            <declaration name="W_RESIZE_CURSOR" type="int" line="59"/>
            <javadoc line="59">
                The west-resize cursor type.                
            </javadoc>
            <declaration name="E_RESIZE_CURSOR" type="int" line="63"/>
            <javadoc line="63">
                The east-resize cursor type.                
            </javadoc>
            <declaration name="HAND_CURSOR" type="int" line="67"/>
            <javadoc line="67">
                The hand cursor type.                
            </javadoc>
            <declaration name="MOVE_CURSOR" type="int" line="71"/>
            <javadoc line="71">
                The move cursor type.                
            </javadoc>
            <declaration name="predefined" type="Cursor" line="75"/>
            <javadoc line="75">
                @deprecated As of JDK version 1.7, the {@link #getPredefinedCursor(int)}method should be used instead.                
            </javadoc>
            <declaration name="predefinedPrivate" type="Cursor[]" line="79"/>
            <javadoc line="79">
                This field is a private replacement for &apos;predefined&apos; array.                
            </javadoc>
            <declaration name="cursorProperties" type="String[][]" line="83"/>
            <declaration name="type" type="int" line="84"/>
            <javadoc line="84">
                The chosen cursor type initially set to
                  the &lt;code&gt;DEFAULT_CURSOR&lt;/code&gt;.                
                <serial>
                                        
                </serial>
                <see>
                    #getType()                    
                </see>
            </javadoc>
            <declaration name="CUSTOM_CURSOR" type="int" line="91"/>
            <javadoc line="91">
                The type associated with all custom cursors.                
            </javadoc>
            <declaration name="systemCustomCursors" type="Hashtable" line="95"/>
            <declaration name="systemCustomCursorDirPrefix" type="String" line="96"/>
            <method name="initCursorDir" type="String" line="97">
                <declaration name="jhome" type="String" line="98"/>
            </method>
            <declaration name="systemCustomCursorPropertiesFile" type="String" line="101"/>
            <declaration name="systemCustomCursorProperties" type="Properties" line="102"/>
            <declaration name="CursorDotPrefix" type="String" line="103"/>
            <declaration name="DotFileSuffix" type="String" line="104"/>
            <declaration name="DotHotspotSuffix" type="String" line="105"/>
            <declaration name="DotNameSuffix" type="String" line="106"/>
            <declaration name="serialVersionUID" type="long" line="107"/>
            <declaration name="log" type="PlatformLogger" line="108"/>
            <scope line="109">
                <scope line="111"/>
            </scope>
            <method name="initIDs" type="void" line="115"/>
            <javadoc line="115">
                Initialize JNI field and method IDs for fields that may be
                  accessed from C.                
            </javadoc>
            <declaration name="pData" type="long" line="120"/>
            <javadoc line="120">
                Hook into native data.                
            </javadoc>
            <declaration name="anchor" type="Object" line="124"/>
            <class name="CursorDisposer" line="125">
                <implements interface="sun.java2d.DisposerRecord"/>
                <declaration name="pData" type="long" line="126"/>
                <method name="CursorDisposer" type="constructor" line="127">
                    <params>
                        <param name="pData" type="long"/>
                    </params>
                </method>
                <method name="dispose" type="void" line="130">
                    <scope line="131"/>
                </method>
            </class>
            <declaration name="disposer" type="CursorDisposer" line="136"/>
            <method name="setPData" type="void" line="137">
                <params>
                    <param name="pData" type="long"/>
                </params>
                <scope line="139"/>
                <scope line="142">
                    <scope line="144"/>
                </scope>
                <scope line="149"/>
            </method>
            <declaration name="name" type="String" line="153"/>
            <javadoc line="153">
                The user-visible name of the cursor.                
                <serial>
                                        
                </serial>
                <see>
                    #getName()                    
                </see>
            </javadoc>
            <javadoc line="159">
                Returns a cursor object with the specified predefined type.                
                <param>
                    type the type of predefined cursor                    
                </param>
                <return>
                    the specified predefined cursor                    
                </return>
                <throws>
                    IllegalArgumentException if the specified cursor type is
                      invalid                    
                </throws>
            </javadoc>
            <method name="getPredefinedCursor" type="Cursor" line="166">
                <params>
                    <param name="type" type="int"/>
                </params>
                <scope line="167"/>
                <declaration name="c" type="Cursor" line="170"/>
                <scope line="171"/>
                <scope line="174"/>
            </method>
            <javadoc line="179">
                Returns a system-specific custom cursor object matching the
                  specified name.  Cursor names are, for example: &quot;Invalid.16x16&quot;                
                <param>
                    name a string describing the desired system-specific custom cursor                    
                </param>
                <return>
                    the system specific custom cursor named                    
                </return>
                <exception>
                    HeadlessException if
                      &lt;code&gt;GraphicsEnvironment.isHeadless&lt;/code&gt; returns true                    
                </exception>
            </javadoc>
            <method name="getSystemCustomCursor" type="Cursor" line="187">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="cursor" type="Cursor" line="189"/>
                <scope line="190">
                    <scope line="191"/>
                    <declaration name="prefix" type="String" line="194"/>
                    <declaration name="key" type="String" line="195"/>
                    <scope line="196">
                        <scope line="197"/>
                    </scope>
                    <declaration name="fileName" type="String" line="202"/>
                    <declaration name="localized" type="String" line="203"/>
                    <declaration name="hotspot" type="String" line="205"/>
                    <declaration name="st" type="StringTokenizer" line="207"/>
                    <declaration name="x" type="int" line="209"/>
                    <declaration name="y" type="int" line="210"/>
                    <scope line="211"/>
                    <scope line="215"/>
                    <scope line="218">
                        <declaration name="fx" type="int" line="219"/>
                        <declaration name="fy" type="int" line="220"/>
                        <declaration name="flocalized" type="String" line="221"/>
                        <anonymous_class line="222">
                            <method name="run" type="Object" line="223">
                                <declaration name="toolkit" type="Toolkit" line="224"/>
                                <declaration name="image" type="Image" line="225"/>
                            </method>
                        </anonymous_class>
                    </scope>
                    <scope line="231"/>
                    <scope line="234">
                        <scope line="235"/>
                    </scope>
                    <scope line="239"/>
                </scope>
            </method>
            <javadoc line="245">
                Return the system default cursor.                
            </javadoc>
            <method name="getDefaultCursor" type="Cursor" line="248"/>
            <javadoc line="251">
                Creates a new cursor object with the specified type.                
                <param>
                    type the type of cursor                    
                </param>
                <throws>
                    IllegalArgumentException if the specified cursor type
                      is invalid                    
                </throws>
            </javadoc>
            <method name="Cursor" type="constructor" line="257">
                <params>
                    <param name="type" type="int"/>
                </params>
                <scope line="258"/>
            </method>
            <javadoc line="264">
                Creates a new custom cursor object with the specified name.&lt;p&gt;
                  Note:  this constructor should only be used by AWT implementations
                  as part of their support for custom cursors.  Applications should
                  use Toolkit.createCustomCursor().                
                <param>
                    name the user-visible name of the cursor.                    
                </param>
                <see>
                    java.awt.Toolkit#createCustomCursor                    
                </see>
            </javadoc>
            <method name="Cursor" type="constructor" line="272">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="276">
                Returns the type for this cursor.                
            </javadoc>
            <method name="getType" type="int" line="279"/>
            <javadoc line="282">
                Returns the name of this cursor.                
                <return>
                    a localized description of this cursor.                    
                </return>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="getName" type="String" line="287"/>
            <javadoc line="290">
                Returns a string representation of this cursor.                
                <return>
                    a string representation of this cursor.                    
                </return>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="toString" type="String" line="295"/>
            <method name="loadSystemCustomCursorProperties" type="void" line="298">
                <scope line="299">
                    <scope line="301">
                        <anonymous_class line="302">
                            <method name="run" type="Object" line="303">
                                <declaration name="fis" type="FileInputStream" line="304"/>
                                <scope line="305"/>
                                <scope line="309"/>
                            </method>
                        </anonymous_class>
                    </scope>
                    <scope line="317"/>
                </scope>
            </method>
            <method name="finalizeImpl" type="void" line="323"/>
        </class>
    </source>