<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt">
        <import package="sun.security.util.SecurityConstants"/>
        <class name="MouseInfo" line="3">
            <javadoc line="3">
                &lt;code&gt;MouseInfo&lt;/code&gt;  provides methods for getting information about the mouse,
                  such as mouse pointer location and the number of mouse buttons.                
                <author>
                    Roman Poborchiy                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <javadoc line="10">
                Private constructor to prevent instantiation.                
            </javadoc>
            <method name="MouseInfo" type="constructor" line="13"/>
            <javadoc line="15">
                Returns a &lt;code&gt;PointerInfo&lt;/code&gt; instance that represents the current
                  location of the mouse pointer.
                  The &lt;code&gt;GraphicsDevice&lt;/code&gt; stored in this &lt;code&gt;PointerInfo&lt;/code&gt;
                  contains the mouse pointer. The coordinate system used for the mouse position
                  depends on whether or not the &lt;code&gt;GraphicsDevice&lt;/code&gt; is part of a virtual
                  screen device.
                  For virtual screen devices, the coordinates are given in the virtual
                  coordinate system, otherwise they are returned in the coordinate system
                  of the &lt;code&gt;GraphicsDevice&lt;/code&gt;. See {@link GraphicsConfiguration}for more information about the virtual screen devices.
                  On systems without a mouse, returns &lt;code&gt;null&lt;/code&gt;.
                  &lt;p&gt;
                  If there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method
                  is called with an &lt;code&gt;AWTPermission(&quot;watchMousePointer&quot;)&lt;/code&gt;
                  permission before creating and returning a &lt;code&gt;PointerInfo&lt;/code&gt;
                  object. This may result in a &lt;code&gt;SecurityException&lt;/code&gt;.                
                <exception>
                    HeadlessException if GraphicsEnvironment.isHeadless() returns true                    
                </exception>
                <exception>
                    SecurityException if a security manager exists and its
                      <code>checkPermission</code> method doesn't allow the operation                    
                </exception>
                <see>
                    GraphicsConfiguration                    
                </see>
                <see>
                    SecurityManager#checkPermission                    
                </see>
                <see>
                    java.awt.AWTPermission                    
                </see>
                <return>
                    location of the mouse pointer                    
                </return>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="getPointerInfo" type="PointerInfo" line="40">
                <scope line="41"/>
                <declaration name="security" type="SecurityManager" line="44"/>
                <scope line="45"/>
                <declaration name="point" type="Point" line="48"/>
                <declaration name="deviceNum" type="int" line="49"/>
                <declaration name="gds" type="GraphicsDevice[]" line="50"/>
                <declaration name="retval" type="PointerInfo" line="51"/>
                <scope line="52"/>
                <scope line="55">
                    <scope line="56">
                        <declaration name="gc" type="GraphicsConfiguration" line="57"/>
                        <declaration name="bounds" type="Rectangle" line="58"/>
                        <scope line="59"/>
                    </scope>
                </scope>
            </method>
            <method name="areScreenDevicesIndependent" type="boolean" line="66">
                <params>
                    <param name="gds" type="GraphicsDevice[]"/>
                </params>
                <scope line="67">
                    <declaration name="bounds" type="Rectangle" line="68"/>
                    <scope line="69"/>
                </scope>
            </method>
            <javadoc line="75">
                Returns the number of buttons on the mouse.
                  On systems without a mouse, returns &lt;code&gt;-1&lt;/code&gt;.                
                <exception>
                    HeadlessException if GraphicsEnvironment.isHeadless() returns true                    
                </exception>
                <return>
                    number of buttons on the mouse                    
                </return>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="getNumberOfButtons" type="int" line="82"/>
        </class>
    </source>