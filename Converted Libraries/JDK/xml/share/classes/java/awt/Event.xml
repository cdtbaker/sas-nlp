<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt">
        <import package="java.awt.event"/>
        <import package="java.io"/>
        <class name="Event" line="30">
            <comment line="66">
                                
            </comment>
            <comment line="94">
                                
            </comment>
            <comment line="226">
                                
            </comment>
            <comment line="254">
                                
            </comment>
            <comment line="282">
                                
            </comment>
            <comment line="315">
                                
            </comment>
            <comment line="364">
                                
            </comment>
            <comment line="408">
                                
            </comment>
            <comment line="421">
                                
            </comment>
            <comment line="505">
                The key character that was pressed in a keyboard event.                
            </comment>
            <comment line="508">
                public char keyChar;                
            </comment>
            <comment line="551">
                                
            </comment>
            <comment line="592">
                JDK 1.1 serialVersionUID                
            </comment>
            <comment line="795">
                &lt;b&gt;NOTE:&lt;b&gt; The &lt;code&gt;Event&lt;code&gt; class is obsolete and is
                 available only for backwards compatilibility.  It has been replaced
                 by the &lt;code&gt;AWTEvent&lt;code&gt; class and its subclasses.
                 &lt;p&gt;
                 Returns the integer key-code associated with the key in this event,
                 as described in java.awt.Event.                
            </comment>
            <comment line="813">
                &lt;b&gt;NOTE:&lt;b&gt; The &lt;code&gt;Event&lt;code&gt; class is obsolete and is
                 available only for backwards compatilibility.  It has been replaced
                 by the &lt;code&gt;AWTEvent&lt;code&gt; class and its subclasses.
                 &lt;p&gt;
                 Returns a new KeyEvent char which corresponds to the int key
                 of this old event.                
            </comment>
            <implements interface="java.io.Serializable"/>
            <javadoc line="30">
                &lt;b&gt;NOTE:&lt;/b&gt; The &lt;code&gt;Event&lt;/code&gt; class is obsolete and is
                  available only for backwards compatilibility.  It has been replaced
                  by the &lt;code&gt;AWTEvent&lt;/code&gt; class and its subclasses.
                  &lt;p&gt;
                  &lt;code&gt;Event&lt;/code&gt; is a platform-independent class that
                  encapsulates events from the platform&apos;s Graphical User
                  Interface in the Java&amp;nbsp;1.0 event model. In Java&amp;nbsp;1.1
                  and later versions, the &lt;code&gt;Event&lt;/code&gt; class is maintained
                  only for backwards compatibilty. The information in this
                  class description is provided to assist programmers in
                  converting Java&amp;nbsp;1.0 programs to the new event model.
                  &lt;p&gt;
                  In the Java&amp;nbsp;1.0 event model, an event contains an{@link Event#id} field
                  that indicates what type of event it is and which other
                  &lt;code&gt;Event&lt;/code&gt; variables are relevant for the event.
                  &lt;p&gt;
                  For keyboard events, {@link Event#key}contains a value indicating which key was activated, and{@link Event#modifiers} contains the
                  modifiers for that event.  For the KEY_PRESS and KEY_RELEASE
                  event ids, the value of &lt;code&gt;key&lt;/code&gt; is the unicode
                  character code for the key. For KEY_ACTION and
                  KEY_ACTION_RELEASE, the value of &lt;code&gt;key&lt;/code&gt; is
                  one of the defined action-key identifiers in the
                  &lt;code&gt;Event&lt;/code&gt; class (&lt;code&gt;PGUP&lt;/code&gt;,
                  &lt;code&gt;PGDN&lt;/code&gt;, &lt;code&gt;F1&lt;/code&gt;, &lt;code&gt;F2&lt;/code&gt;, etc).                
                <author>
                    Sami Shaio                    
                </author>
                <since>
                    JDK1.0                    
                </since>
            </javadoc>
            <declaration name="data" type="long" line="63"/>
            <declaration name="SHIFT_MASK" type="int" line="67"/>
            <javadoc line="67">
                This flag indicates that the Shift key was down when the event
                  occurred.                
            </javadoc>
            <declaration name="CTRL_MASK" type="int" line="73"/>
            <javadoc line="73">
                This flag indicates that the Control key was down when the event
                  occurred.                
            </javadoc>
            <declaration name="META_MASK" type="int" line="79"/>
            <javadoc line="79">
                This flag indicates that the Meta key was down when the event
                  occurred. For mouse events, this flag indicates that the right
                  button was pressed or released.                
            </javadoc>
            <declaration name="ALT_MASK" type="int" line="86"/>
            <javadoc line="86">
                This flag indicates that the Alt key was down when
                  the event occurred. For mouse events, this flag indicates that the
                  middle mouse button was pressed or released.                
            </javadoc>
            <declaration name="HOME" type="int" line="95"/>
            <javadoc line="95">
                The Home key, a non-ASCII action key.                
            </javadoc>
            <declaration name="END" type="int" line="100"/>
            <javadoc line="100">
                The End key, a non-ASCII action key.                
            </javadoc>
            <declaration name="PGUP" type="int" line="105"/>
            <javadoc line="105">
                The Page Up key, a non-ASCII action key.                
            </javadoc>
            <declaration name="PGDN" type="int" line="110"/>
            <javadoc line="110">
                The Page Down key, a non-ASCII action key.                
            </javadoc>
            <declaration name="UP" type="int" line="115"/>
            <javadoc line="115">
                The Up Arrow key, a non-ASCII action key.                
            </javadoc>
            <declaration name="DOWN" type="int" line="120"/>
            <javadoc line="120">
                The Down Arrow key, a non-ASCII action key.                
            </javadoc>
            <declaration name="LEFT" type="int" line="125"/>
            <javadoc line="125">
                The Left Arrow key, a non-ASCII action key.                
            </javadoc>
            <declaration name="RIGHT" type="int" line="130"/>
            <javadoc line="130">
                The Right Arrow key, a non-ASCII action key.                
            </javadoc>
            <declaration name="F1" type="int" line="135"/>
            <javadoc line="135">
                The F1 function key, a non-ASCII action key.                
            </javadoc>
            <declaration name="F2" type="int" line="140"/>
            <javadoc line="140">
                The F2 function key, a non-ASCII action key.                
            </javadoc>
            <declaration name="F3" type="int" line="145"/>
            <javadoc line="145">
                The F3 function key, a non-ASCII action key.                
            </javadoc>
            <declaration name="F4" type="int" line="150"/>
            <javadoc line="150">
                The F4 function key, a non-ASCII action key.                
            </javadoc>
            <declaration name="F5" type="int" line="155"/>
            <javadoc line="155">
                The F5 function key, a non-ASCII action key.                
            </javadoc>
            <declaration name="F6" type="int" line="160"/>
            <javadoc line="160">
                The F6 function key, a non-ASCII action key.                
            </javadoc>
            <declaration name="F7" type="int" line="165"/>
            <javadoc line="165">
                The F7 function key, a non-ASCII action key.                
            </javadoc>
            <declaration name="F8" type="int" line="170"/>
            <javadoc line="170">
                The F8 function key, a non-ASCII action key.                
            </javadoc>
            <declaration name="F9" type="int" line="175"/>
            <javadoc line="175">
                The F9 function key, a non-ASCII action key.                
            </javadoc>
            <declaration name="F10" type="int" line="180"/>
            <javadoc line="180">
                The F10 function key, a non-ASCII action key.                
            </javadoc>
            <declaration name="F11" type="int" line="185"/>
            <javadoc line="185">
                The F11 function key, a non-ASCII action key.                
            </javadoc>
            <declaration name="F12" type="int" line="190"/>
            <javadoc line="190">
                The F12 function key, a non-ASCII action key.                
            </javadoc>
            <declaration name="PRINT_SCREEN" type="int" line="195"/>
            <javadoc line="195">
                The Print Screen key, a non-ASCII action key.                
            </javadoc>
            <declaration name="SCROLL_LOCK" type="int" line="200"/>
            <javadoc line="200">
                The Scroll Lock key, a non-ASCII action key.                
            </javadoc>
            <declaration name="CAPS_LOCK" type="int" line="205"/>
            <javadoc line="205">
                The Caps Lock key, a non-ASCII action key.                
            </javadoc>
            <declaration name="NUM_LOCK" type="int" line="210"/>
            <javadoc line="210">
                The Num Lock key, a non-ASCII action key.                
            </javadoc>
            <declaration name="PAUSE" type="int" line="215"/>
            <javadoc line="215">
                The Pause key, a non-ASCII action key.                
            </javadoc>
            <declaration name="INSERT" type="int" line="220"/>
            <javadoc line="220">
                The Insert key, a non-ASCII action key.                
            </javadoc>
            <declaration name="ENTER" type="int" line="227"/>
            <javadoc line="227">
                The Enter key.                
            </javadoc>
            <declaration name="BACK_SPACE" type="int" line="232"/>
            <javadoc line="232">
                The BackSpace key.                
            </javadoc>
            <declaration name="TAB" type="int" line="237"/>
            <javadoc line="237">
                The Tab key.                
            </javadoc>
            <declaration name="ESCAPE" type="int" line="242"/>
            <javadoc line="242">
                The Escape key.                
            </javadoc>
            <declaration name="DELETE" type="int" line="247"/>
            <javadoc line="247">
                The Delete key.                
            </javadoc>
            <declaration name="WINDOW_EVENT" type="int" line="254"/>
            <declaration name="WINDOW_DESTROY" type="int" line="256"/>
            <javadoc line="256">
                The user has asked the window manager to kill the window.                
            </javadoc>
            <declaration name="WINDOW_EXPOSE" type="int" line="261"/>
            <javadoc line="261">
                The user has asked the window manager to expose the window.                
            </javadoc>
            <declaration name="WINDOW_ICONIFY" type="int" line="266"/>
            <javadoc line="266">
                The user has asked the window manager to iconify the window.                
            </javadoc>
            <declaration name="WINDOW_DEICONIFY" type="int" line="271"/>
            <javadoc line="271">
                The user has asked the window manager to de-iconify the window.                
            </javadoc>
            <declaration name="WINDOW_MOVED" type="int" line="276"/>
            <javadoc line="276">
                The user has asked the window manager to move the window.                
            </javadoc>
            <declaration name="KEY_EVENT" type="int" line="282"/>
            <declaration name="KEY_PRESS" type="int" line="284"/>
            <javadoc line="284">
                The user has pressed a normal key.                
            </javadoc>
            <declaration name="KEY_RELEASE" type="int" line="289"/>
            <javadoc line="289">
                The user has released a normal key.                
            </javadoc>
            <declaration name="KEY_ACTION" type="int" line="294"/>
            <javadoc line="294">
                The user has pressed a non-ASCII &lt;em&gt;action&lt;/em&gt; key.
                  The &lt;code&gt;key&lt;/code&gt; field contains a value that indicates
                  that the event occurred on one of the action keys, which
                  comprise the 12 function keys, the arrow (cursor) keys,
                  Page Up, Page Down, Home, End, Print Screen, Scroll Lock,
                  Caps Lock, Num Lock, Pause, and Insert.                
            </javadoc>
            <declaration name="KEY_ACTION_RELEASE" type="int" line="304"/>
            <javadoc line="304">
                The user has released a non-ASCII &lt;em&gt;action&lt;/em&gt; key.
                  The &lt;code&gt;key&lt;/code&gt; field contains a value that indicates
                  that the event occurred on one of the action keys, which
                  comprise the 12 function keys, the arrow (cursor) keys,
                  Page Up, Page Down, Home, End, Print Screen, Scroll Lock,
                  Caps Lock, Num Lock, Pause, and Insert.                
            </javadoc>
            <declaration name="MOUSE_EVENT" type="int" line="315"/>
            <declaration name="MOUSE_DOWN" type="int" line="317"/>
            <javadoc line="317">
                The user has pressed the mouse button. The &lt;code&gt;ALT_MASK&lt;/code&gt;
                  flag indicates that the middle button has been pressed.
                  The &lt;code&gt;META_MASK&lt;/code&gt;flag indicates that the
                  right button has been pressed.                
                <see>
                    java.awt.Event#ALT_MASK                    
                </see>
                <see>
                    java.awt.Event#META_MASK                    
                </see>
            </javadoc>
            <declaration name="MOUSE_UP" type="int" line="327"/>
            <javadoc line="327">
                The user has released the mouse button. The &lt;code&gt;ALT_MASK&lt;/code&gt;
                  flag indicates that the middle button has been released.
                  The &lt;code&gt;META_MASK&lt;/code&gt;flag indicates that the
                  right button has been released.                
                <see>
                    java.awt.Event#ALT_MASK                    
                </see>
                <see>
                    java.awt.Event#META_MASK                    
                </see>
            </javadoc>
            <declaration name="MOUSE_MOVE" type="int" line="337"/>
            <javadoc line="337">
                The mouse has moved with no button pressed.                
            </javadoc>
            <declaration name="MOUSE_ENTER" type="int" line="342"/>
            <javadoc line="342">
                The mouse has entered a component.                
            </javadoc>
            <declaration name="MOUSE_EXIT" type="int" line="347"/>
            <javadoc line="347">
                The mouse has exited a component.                
            </javadoc>
            <declaration name="MOUSE_DRAG" type="int" line="352"/>
            <javadoc line="352">
                The user has moved the mouse with a button pressed. The
                  &lt;code&gt;ALT_MASK&lt;/code&gt; flag indicates that the middle
                  button is being pressed. The &lt;code&gt;META_MASK&lt;/code&gt; flag indicates
                  that the right button is being pressed.                
                <see>
                    java.awt.Event#ALT_MASK                    
                </see>
                <see>
                    java.awt.Event#META_MASK                    
                </see>
            </javadoc>
            <declaration name="SCROLL_EVENT" type="int" line="364"/>
            <declaration name="SCROLL_LINE_UP" type="int" line="366"/>
            <javadoc line="366">
                The user has activated the &lt;em&gt;line up&lt;/em&gt;
                  area of a scroll bar.                
            </javadoc>
            <declaration name="SCROLL_LINE_DOWN" type="int" line="372"/>
            <javadoc line="372">
                The user has activated the &lt;em&gt;line down&lt;/em&gt;
                  area of a scroll bar.                
            </javadoc>
            <declaration name="SCROLL_PAGE_UP" type="int" line="378"/>
            <javadoc line="378">
                The user has activated the &lt;em&gt;page up&lt;/em&gt;
                  area of a scroll bar.                
            </javadoc>
            <declaration name="SCROLL_PAGE_DOWN" type="int" line="384"/>
            <javadoc line="384">
                The user has activated the &lt;em&gt;page down&lt;/em&gt;
                  area of a scroll bar.                
            </javadoc>
            <declaration name="SCROLL_ABSOLUTE" type="int" line="390"/>
            <javadoc line="390">
                The user has moved the bubble (thumb) in a scroll bar,
                  moving to an &quot;absolute&quot; position, rather than to
                  an offset from the last postion.                
            </javadoc>
            <declaration name="SCROLL_BEGIN" type="int" line="397"/>
            <javadoc line="397">
                The scroll begin event.                
            </javadoc>
            <declaration name="SCROLL_END" type="int" line="402"/>
            <javadoc line="402">
                The scroll end event.                
            </javadoc>
            <declaration name="LIST_EVENT" type="int" line="408"/>
            <declaration name="LIST_SELECT" type="int" line="410"/>
            <javadoc line="410">
                An item in a list has been selected.                
            </javadoc>
            <declaration name="LIST_DESELECT" type="int" line="415"/>
            <javadoc line="415">
                An item in a list has been deselected.                
            </javadoc>
            <declaration name="MISC_EVENT" type="int" line="421"/>
            <declaration name="ACTION_EVENT" type="int" line="423"/>
            <javadoc line="423">
                This event indicates that the user wants some action to occur.                
            </javadoc>
            <declaration name="LOAD_FILE" type="int" line="428"/>
            <javadoc line="428">
                A file loading event.                
            </javadoc>
            <declaration name="SAVE_FILE" type="int" line="433"/>
            <javadoc line="433">
                A file saving event.                
            </javadoc>
            <declaration name="GOT_FOCUS" type="int" line="438"/>
            <javadoc line="438">
                A component gained the focus.                
            </javadoc>
            <declaration name="LOST_FOCUS" type="int" line="443"/>
            <javadoc line="443">
                A component lost the focus.                
            </javadoc>
            <declaration name="target" type="Object" line="448"/>
            <javadoc line="448">
                The target component. This indicates the component over which the
                  event occurred or with which the event is associated.
                  This object has been replaced by AWTEvent.getSource()                
                <serial>
                                        
                </serial>
                <see>
                    java.awt.AWTEvent#getSource()                    
                </see>
            </javadoc>
            <declaration name="when" type="long" line="458"/>
            <javadoc line="458">
                The time stamp.
                  Replaced by InputEvent.getWhen().                
                <serial>
                                        
                </serial>
                <see>
                    java.awt.event.InputEvent#getWhen()                    
                </see>
            </javadoc>
            <declaration name="id" type="int" line="467"/>
            <javadoc line="467">
                Indicates which type of event the event is, and which
                  other &lt;code&gt;Event&lt;/code&gt; variables are relevant for the event.
                  This has been replaced by AWTEvent.getID()                
                <serial>
                                        
                </serial>
                <see>
                    java.awt.AWTEvent#getID()                    
                </see>
            </javadoc>
            <declaration name="x" type="int" line="477"/>
            <javadoc line="477">
                The &lt;i&gt;x&lt;/i&gt; coordinate of the event.
                  Replaced by MouseEvent.getX()                
                <serial>
                                        
                </serial>
                <see>
                    java.awt.event.MouseEvent#getX()                    
                </see>
            </javadoc>
            <declaration name="y" type="int" line="486"/>
            <javadoc line="486">
                The &lt;i&gt;y&lt;/i&gt; coordinate of the event.
                  Replaced by MouseEvent.getY()                
                <serial>
                                        
                </serial>
                <see>
                    java.awt.event.MouseEvent#getY()                    
                </see>
            </javadoc>
            <declaration name="key" type="int" line="495"/>
            <javadoc line="495">
                The key code of the key that was pressed in a keyboard event.
                  This has been replaced by KeyEvent.getKeyCode()                
                <serial>
                                        
                </serial>
                <see>
                    java.awt.event.KeyEvent#getKeyCode()                    
                </see>
            </javadoc>
            <declaration name="modifiers" type="int" line="509"/>
            <javadoc line="509">
                The state of the modifier keys.
                  This is replaced with InputEvent.getModifiers()
                  In java 1.1 MouseEvent and KeyEvent are subclasses
                  of InputEvent.                
                <serial>
                                        
                </serial>
                <see>
                    java.awt.event.InputEvent#getModifiers()                    
                </see>
            </javadoc>
            <declaration name="clickCount" type="int" line="520"/>
            <javadoc line="520">
                For &lt;code&gt;MOUSE_DOWN&lt;/code&gt; events, this field indicates the
                  number of consecutive clicks. For other events, its value is
                  &lt;code&gt;0&lt;/code&gt;.
                  This field has been replaced by MouseEvent.getClickCount().                
                <serial>
                                        
                </serial>
                <see>
                    java.awt.event.MouseEvent#getClickCount().                    
                </see>
            </javadoc>
            <declaration name="arg" type="Object" line="531"/>
            <javadoc line="531">
                An arbitrary argument of the event. The value of this field
                  depends on the type of event.
                  &lt;code&gt;arg&lt;/code&gt; has been replaced by event specific property.                
                <serial>
                                        
                </serial>
            </javadoc>
            <declaration name="evt" type="Event" line="540"/>
            <javadoc line="540">
                The next event. This field is set when putting events into a
                  linked list.
                  This has been replaced by EventQueue.                
                <serial>
                                        
                </serial>
                <see>
                    java.awt.EventQueue                    
                </see>
            </javadoc>
            <declaration name="actionKeyCodes" type="int" line="551"/>
            <declaration name="consumed" type="boolean" line="581"/>
            <javadoc line="581">
                This field controls whether or not the event is sent back
                  down to the peer once the target has processed it -
                  false means it&apos;s sent to the peer, true means it&apos;s not.                
                <serial>
                                        
                </serial>
                <see>
                    #isConsumed()                    
                </see>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="594"/>
            <scope line="596">
                <scope line="599"/>
            </scope>
            <method name="initIDs" type="void" line="604"/>
            <javadoc line="604">
                Initialize JNI field and method IDs for fields that may be
                  accessed from C.                
            </javadoc>
            <javadoc line="610">
                &lt;b&gt;NOTE:&lt;/b&gt; The &lt;code&gt;Event&lt;/code&gt; class is obsolete and is
                  available only for backwards compatilibility.  It has been replaced
                  by the &lt;code&gt;AWTEvent&lt;/code&gt; class and its subclasses.
                  &lt;p&gt;
                  Creates an instance of &lt;code&gt;Event&lt;/code&gt; with the specified target
                  component, time stamp, event type, &lt;i&gt;x&lt;/i&gt; and &lt;i&gt;y&lt;/i&gt;
                  coordinates, keyboard key, state of the modifier keys, and
                  argument.                
                <param>
                    target     the target component.                    
                </param>
                <param>
                    when       the time stamp.                    
                </param>
                <param>
                    id         the event type.                    
                </param>
                <param>
                    x          the <i>x</i> coordinate.                    
                </param>
                <param>
                    y          the <i>y</i> coordinate.                    
                </param>
                <param>
                    key        the key pressed in a keyboard event.                    
                </param>
                <param>
                    modifiers  the state of the modifier keys.                    
                </param>
                <param>
                    arg        the specified argument.                    
                </param>
            </javadoc>
            <method name="Event" type="constructor" line="629">
                <params>
                    <param name="target" type="Object"/>
                    <param name="when" type="long"/>
                    <param name="id" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="key" type="int"/>
                    <param name="modifiers" type="int"/>
                    <param name="arg" type="Object"/>
                </params>
                <comment line="655">
                    these types are not passed back to peer                    
                </comment>
            </method>
            <javadoc line="661">
                &lt;b&gt;NOTE:&lt;/b&gt; The &lt;code&gt;Event&lt;/code&gt; class is obsolete and is
                  available only for backwards compatilibility.  It has been replaced
                  by the &lt;code&gt;AWTEvent&lt;/code&gt; class and its subclasses.
                  &lt;p&gt;
                  Creates an instance of &lt;code&gt;Event&lt;/code&gt;, with the specified target
                  component, time stamp, event type, &lt;i&gt;x&lt;/i&gt; and &lt;i&gt;y&lt;/i&gt;
                  coordinates, keyboard key, state of the modifier keys, and an
                  argument set to &lt;code&gt;null&lt;/code&gt;.                
                <param>
                    target     the target component.                    
                </param>
                <param>
                    when       the time stamp.                    
                </param>
                <param>
                    id         the event type.                    
                </param>
                <param>
                    x          the <i>x</i> coordinate.                    
                </param>
                <param>
                    y          the <i>y</i> coordinate.                    
                </param>
                <param>
                    key        the key pressed in a keyboard event.                    
                </param>
                <param>
                    modifiers  the state of the modifier keys.                    
                </param>
            </javadoc>
            <method name="Event" type="constructor" line="678">
                <params>
                    <param name="target" type="Object"/>
                    <param name="when" type="long"/>
                    <param name="id" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="key" type="int"/>
                    <param name="modifiers" type="int"/>
                </params>
            </method>
            <javadoc line="682">
                &lt;b&gt;NOTE:&lt;/b&gt; The &lt;code&gt;Event&lt;/code&gt; class is obsolete and is
                  available only for backwards compatilibility.  It has been replaced
                  by the &lt;code&gt;AWTEvent&lt;/code&gt; class and its subclasses.
                  &lt;p&gt;
                  Creates an instance of &lt;code&gt;Event&lt;/code&gt; with the specified
                  target component, event type, and argument.                
                <param>
                    target     the target component.                    
                </param>
                <param>
                    id         the event type.                    
                </param>
                <param>
                    arg        the specified argument.                    
                </param>
            </javadoc>
            <method name="Event" type="constructor" line="693">
                <params>
                    <param name="target" type="Object"/>
                    <param name="id" type="int"/>
                    <param name="arg" type="Object"/>
                </params>
            </method>
            <javadoc line="697">
                &lt;b&gt;NOTE:&lt;/b&gt; The &lt;code&gt;Event&lt;/code&gt; class is obsolete and is
                  available only for backwards compatilibility.  It has been replaced
                  by the &lt;code&gt;AWTEvent&lt;/code&gt; class and its subclasses.
                  &lt;p&gt;
                  Translates this event so that its &lt;i&gt;x&lt;/i&gt; and &lt;i&gt;y&lt;/i&gt;
                  coordinates are increased by &lt;i&gt;dx&lt;/i&gt; and &lt;i&gt;dy&lt;/i&gt;,
                  respectively.
                  &lt;p&gt;
                  This method translates an event relative to the given component.
                  This involves, at a minimum, translating the coordinates into the
                  local coordinate system of the given component. It may also involve
                  translating a region in the case of an expose event.                
                <param>
                    dx     the distance to translate the <i>x</i> coordinate.                    
                </param>
                <param>
                    dy     the distance to translate the <i>y</i> coordinate.                    
                </param>
            </javadoc>
            <method name="translate" type="void" line="713">
                <params>
                    <param name="dx" type="int"/>
                    <param name="dy" type="int"/>
                </params>
            </method>
            <javadoc line="718">
                &lt;b&gt;NOTE:&lt;/b&gt; The &lt;code&gt;Event&lt;/code&gt; class is obsolete and is
                  available only for backwards compatilibility.  It has been replaced
                  by the &lt;code&gt;AWTEvent&lt;/code&gt; class and its subclasses.
                  &lt;p&gt;
                  Checks if the Shift key is down.                
                <return>
                    <code>true</code> if the key is down;
                      <code>false</code> otherwise.                    
                </return>
                <see>
                    java.awt.Event#modifiers                    
                </see>
                <see>
                    java.awt.Event#controlDown                    
                </see>
                <see>
                    java.awt.Event#metaDown                    
                </see>
            </javadoc>
            <method name="shiftDown" type="boolean" line="730"/>
            <javadoc line="734">
                &lt;b&gt;NOTE:&lt;/b&gt; The &lt;code&gt;Event&lt;/code&gt; class is obsolete and is
                  available only for backwards compatilibility.  It has been replaced
                  by the &lt;code&gt;AWTEvent&lt;/code&gt; class and its subclasses.
                  &lt;p&gt;
                  Checks if the Control key is down.                
                <return>
                    <code>true</code> if the key is down;
                      <code>false</code> otherwise.                    
                </return>
                <see>
                    java.awt.Event#modifiers                    
                </see>
                <see>
                    java.awt.Event#shiftDown                    
                </see>
                <see>
                    java.awt.Event#metaDown                    
                </see>
            </javadoc>
            <method name="controlDown" type="boolean" line="746"/>
            <javadoc line="750">
                &lt;b&gt;NOTE:&lt;/b&gt; The &lt;code&gt;Event&lt;/code&gt; class is obsolete and is
                  available only for backwards compatilibility.  It has been replaced
                  by the &lt;code&gt;AWTEvent&lt;/code&gt; class and its subclasses.
                  &lt;p&gt;
                  Checks if the Meta key is down.                
                <return>
                    <code>true</code> if the key is down;
                      <code>false</code> otherwise.                    
                </return>
                <see>
                    java.awt.Event#modifiers                    
                </see>
                <see>
                    java.awt.Event#shiftDown                    
                </see>
                <see>
                    java.awt.Event#controlDown                    
                </see>
            </javadoc>
            <method name="metaDown" type="boolean" line="763"/>
            <javadoc line="767">
                &lt;b&gt;NOTE:&lt;/b&gt; The &lt;code&gt;Event&lt;/code&gt; class is obsolete and is
                  available only for backwards compatilibility.  It has been replaced
                  by the &lt;code&gt;AWTEvent&lt;/code&gt; class and its subclasses.                
            </javadoc>
            <method name="consume" type="void" line="772">
                <comment line="781">
                    event type cannot be consumed                    
                </comment>
            </method>
            <javadoc line="785">
                &lt;b&gt;NOTE:&lt;/b&gt; The &lt;code&gt;Event&lt;/code&gt; class is obsolete and is
                  available only for backwards compatilibility.  It has been replaced
                  by the &lt;code&gt;AWTEvent&lt;/code&gt; class and its subclasses.                
            </javadoc>
            <method name="isConsumed" type="boolean" line="790"/>
            <method name="getOldEventKey" type="int" line="802">
                <params>
                    <param name="e" type="KeyEvent"/>
                </params>
                <declaration name="keyCode" type="int" line="803"/>
                <scope line="804">
                    <scope line="805"/>
                </scope>
            </method>
            <method name="getKeyEventChar" type="char" line="820">
                <scope line="821">
                    <scope line="822"/>
                </scope>
            </method>
            <javadoc line="829">
                &lt;b&gt;NOTE:&lt;/b&gt; The &lt;code&gt;Event&lt;/code&gt; class is obsolete and is
                  available only for backwards compatilibility.  It has been replaced
                  by the &lt;code&gt;AWTEvent&lt;/code&gt; class and its subclasses.
                  &lt;p&gt;
                  Returns a string representing the state of this &lt;code&gt;Event&lt;/code&gt;.
                  This method is intended to be used only for debugging purposes, and the
                  content and format of the returned string may vary between
                  implementations. The returned string may be empty but may not be
                  &lt;code&gt;null&lt;/code&gt;.                
                <return>
                    the parameter string of this event                    
                </return>
            </javadoc>
            <method name="paramString" type="String" line="842">
                <declaration name="str" type="String" line="843"/>
                <scope line="844"/>
                <scope line="847"/>
                <scope line="850"/>
                <scope line="853"/>
                <scope line="856"/>
                <scope line="859"/>
            </method>
            <javadoc line="865">
                &lt;b&gt;NOTE:&lt;/b&gt; The &lt;code&gt;Event&lt;/code&gt; class is obsolete and is
                  available only for backwards compatilibility.  It has been replaced
                  by the &lt;code&gt;AWTEvent&lt;/code&gt; class and its subclasses.
                  &lt;p&gt;
                  Returns a representation of this event&apos;s values as a string.                
                <return>
                    a string that represents the event and the values
                      of its member fields.                    
                </return>
                <see>
                    java.awt.Event#paramString                    
                </see>
                <since>
                    JDK1.1                    
                </since>
            </javadoc>
            <method name="toString" type="String" line="876"/>
        </class>
    </source>