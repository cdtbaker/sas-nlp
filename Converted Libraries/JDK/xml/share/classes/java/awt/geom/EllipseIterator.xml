<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.geom">
        <import package="java.util"/>
        <class name="EllipseIterator" line="3">
            <implements interface="PathIterator"/>
            <javadoc line="3">
                A utility class to iterate over the path segments of an ellipse
                  through the PathIterator interface.                
                <author>
                    Jim Graham                    
                </author>
            </javadoc>
            <declaration name="x" type="double" line="9"/>
            <declaration name="affine" type="AffineTransform" line="10"/>
            <declaration name="index" type="int" line="11"/>
            <method name="EllipseIterator" type="constructor" line="12">
                <params>
                    <param name="e" type="Ellipse2D"/>
                    <param name="at" type="AffineTransform"/>
                </params>
                <scope line="18"/>
            </method>
            <javadoc line="22">
                Return the winding rule for determining the insideness of the
                  path.                
                <see>
                    #WIND_EVEN_ODD                    
                </see>
                <see>
                    #WIND_NON_ZERO                    
                </see>
            </javadoc>
            <method name="getWindingRule" type="int" line="28"/>
            <javadoc line="31">
                Tests if there are more points to read.                
                <return>
                    true if there are more points to read                    
                </return>
            </javadoc>
            <method name="isDone" type="boolean" line="35"/>
            <javadoc line="38">
                Moves the iterator to the next segment of the path forwards
                  along the primary direction of traversal as long as there are
                  more points in that direction.                
            </javadoc>
            <method name="next" type="void" line="43"/>
            <declaration name="CtrlVal" type="double" line="46"/>
            <declaration name="pcv" type="double" line="47"/>
            <declaration name="ncv" type="double" line="48"/>
            <declaration name="ctrlpts" type="double" line="49"/>
            <javadoc line="50">
                Returns the coordinates and type of the current path segment in
                  the iteration.
                  The return value is the path segment type:
                  SEG_MOVETO, SEG_LINETO, SEG_QUADTO, SEG_CUBICTO, or SEG_CLOSE.
                  A float array of length 6 must be passed in and may be used to
                  store the coordinates of the point(s).
                  Each point is stored as a pair of float x,y coordinates.
                  SEG_MOVETO and SEG_LINETO types will return one point,
                  SEG_QUADTO will return two points,
                  SEG_CUBICTO will return 3 points
                  and SEG_CLOSE will not return any points.                
                <see>
                    #SEG_MOVETO                    
                </see>
                <see>
                    #SEG_LINETO                    
                </see>
                <see>
                    #SEG_QUADTO                    
                </see>
                <see>
                    #SEG_CUBICTO                    
                </see>
                <see>
                    #SEG_CLOSE                    
                </see>
            </javadoc>
            <method name="currentSegment" type="int" line="68">
                <params>
                    <param name="coords" type="float[]"/>
                </params>
                <scope line="69"/>
                <scope line="72"/>
                <scope line="75">
                    <declaration name="ctrls" type="double" line="76"/>
                    <scope line="79"/>
                </scope>
                <declaration name="ctrls" type="double" line="84"/>
                <scope line="91"/>
            </method>
            <javadoc line="96">
                Returns the coordinates and type of the current path segment in
                  the iteration.
                  The return value is the path segment type:
                  SEG_MOVETO, SEG_LINETO, SEG_QUADTO, SEG_CUBICTO, or SEG_CLOSE.
                  A double array of length 6 must be passed in and may be used to
                  store the coordinates of the point(s).
                  Each point is stored as a pair of double x,y coordinates.
                  SEG_MOVETO and SEG_LINETO types will return one point,
                  SEG_QUADTO will return two points,
                  SEG_CUBICTO will return 3 points
                  and SEG_CLOSE will not return any points.                
                <see>
                    #SEG_MOVETO                    
                </see>
                <see>
                    #SEG_LINETO                    
                </see>
                <see>
                    #SEG_QUADTO                    
                </see>
                <see>
                    #SEG_CUBICTO                    
                </see>
                <see>
                    #SEG_CLOSE                    
                </see>
            </javadoc>
            <method name="currentSegment" type="int" line="114">
                <params>
                    <param name="coords" type="double[]"/>
                </params>
                <scope line="115"/>
                <scope line="118"/>
                <scope line="121">
                    <declaration name="ctrls" type="double" line="122"/>
                    <scope line="125"/>
                </scope>
                <declaration name="ctrls" type="double" line="130"/>
                <scope line="137"/>
            </method>
        </class>
    </source>