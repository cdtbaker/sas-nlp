<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.geom">
        <import package="java.awt.Shape"/>
        <class name="GeneralPath" line="30">
            <extends class="Path2D.Float"/>
            <comment line="124">
                JDK 1.6 serialVersionUID                
            </comment>
            <javadoc line="30">
                The {@code GeneralPath} class represents a geometric path
                  constructed from straight lines, and quadratic and cubic
                  (B&amp;eacute;zier) curves.  It can contain multiple subpaths.
                  &lt;p&gt;{@code GeneralPath} is a legacy final class which exactly
                  implements the behavior of its superclass {@link Path2D.Float}.
                  Together with {@link Path2D.Double}, the {@link Path2D} classes
                  provide full implementations of a general geometric path that
                  support all of the functionality of the {@link Shape} and{@link PathIterator} interfaces with the ability to explicitly
                  select different levels of internal coordinate precision.
                  &lt;p&gt;
                  Use {@code Path2D.Float} (or this legacy {@code GeneralPath}subclass) when dealing with data that can be represented
                  and used with floating point precision.  Use {@code Path2D.Double}for data that requires the accuracy or range of double precision.                
                <author>
                    Jim Graham                    
                </author>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <javadoc line="52">
                Constructs a new empty single precision {@code GeneralPath} object
                  with a default winding rule of {@link #WIND_NON_ZERO}.                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="GeneralPath" type="constructor" line="58"/>
            <javadoc line="62">
                Constructs a new &lt;code&gt;GeneralPath&lt;/code&gt; object with the specified
                  winding rule to control operations that require the interior of the
                  path to be defined.                
                <param>
                    rule the winding rule                    
                </param>
                <see>
                    #WIND_EVEN_ODD                    
                </see>
                <see>
                    #WIND_NON_ZERO                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="GeneralPath" type="constructor" line="72">
                <params>
                    <param name="rule" type="int"/>
                </params>
            </method>
            <javadoc line="76">
                Constructs a new &lt;code&gt;GeneralPath&lt;/code&gt; object with the specified
                  winding rule and the specified initial capacity to store path
                  coordinates.
                  This number is an initial guess as to how many path segments
                  will be added to the path, but the storage is expanded as
                  needed to store whatever path segments are added.                
                <param>
                    rule the winding rule                    
                </param>
                <param>
                    initialCapacity the estimate for the number of path segments
                      in the path                    
                </param>
                <see>
                    #WIND_EVEN_ODD                    
                </see>
                <see>
                    #WIND_NON_ZERO                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="GeneralPath" type="constructor" line="91">
                <params>
                    <param name="rule" type="int"/>
                    <param name="initialCapacity" type="int"/>
                </params>
            </method>
            <javadoc line="95">
                Constructs a new &lt;code&gt;GeneralPath&lt;/code&gt; object from an arbitrary{@link Shape} object.
                  All of the initial geometry and the winding rule for this path are
                  taken from the specified &lt;code&gt;Shape&lt;/code&gt; object.                
                <param>
                    s the specified <code>Shape</code> object                    
                </param>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="GeneralPath" type="constructor" line="104">
                <params>
                    <param name="s" type="Shape"/>
                </params>
            </method>
            <method name="GeneralPath" type="constructor" line="113">
                <params>
                    <param name="windingRule" type="int"/>
                    <param name="pointTypes" type="byte[]"/>
                    <param name="numTypes" type="int"/>
                    <param name="pointCoords" type="float[]"/>
                    <param name="numCoords" type="int"/>
                </params>
                <comment line="114">
                    used to construct from native                    
                </comment>
            </method>
            <declaration name="serialVersionUID" type="long" line="126"/>
        </class>
    </source>