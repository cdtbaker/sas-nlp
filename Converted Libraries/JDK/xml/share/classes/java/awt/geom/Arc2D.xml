<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.geom">
        <import package="java.io.Serializable"/>
        <class name="Arc2D" line="3">
            <extends class="RectangularShape"/>
            <javadoc line="3">
                &lt;CODE&gt;Arc2D&lt;/CODE&gt; is the abstract superclass for all objects that
                  store a 2D arc defined by a framing rectangle,
                  start angle, angular extent (length of the arc), and a closure type
                  (&lt;CODE&gt;OPEN&lt;/CODE&gt;, &lt;CODE&gt;CHORD&lt;/CODE&gt;, or &lt;CODE&gt;PIE&lt;/CODE&gt;).
                  &lt;p&gt;
                  &lt;a name=&quot;inscribes&quot;&gt;
                  The arc is a partial section of a full ellipse which
                  inscribes the framing rectangle of its parent {@link RectangularShape}.
                  &lt;/a&gt;
                  &lt;a name=&quot;angles&quot;&gt;
                  The angles are specified relative to the non-square
                  framing rectangle such that 45 degrees always falls on the line from
                  the center of the ellipse to the upper right corner of the framing
                  rectangle.
                  As a result, if the framing rectangle is noticeably longer along one
                  axis than the other, the angles to the start and end of the arc segment
                  will be skewed farther along the longer axis of the frame.
                  &lt;/a&gt;
                  &lt;p&gt;
                  The actual storage representation of the coordinates is left to
                  the subclass.                
                <author>
                    Jim Graham                    
                </author>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <declaration name="OPEN" type="int" line="29"/>
            <javadoc line="29">
                The closure type for an open arc with no path segments
                  connecting the two ends of the arc segment.                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <declaration name="CHORD" type="int" line="35"/>
            <javadoc line="35">
                The closure type for an arc closed by drawing a straight
                  line segment from the start of the arc segment to the end of the
                  arc segment.                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <declaration name="PIE" type="int" line="42"/>
            <javadoc line="42">
                The closure type for an arc closed by drawing straight line
                  segments from the start of the arc segment to the center
                  of the full ellipse and from that point to the end of the arc segment.                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <class name="Float" line="49">
                <extends class="Arc2D"/>
                <implements interface="Serializable"/>
                <javadoc line="49">
                    This class defines an arc specified in {@code float} precision.                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <declaration name="x" type="float" line="54"/>
                <javadoc line="54">
                    The X coordinate of the upper-left corner of the framing
                      rectangle of the arc.                    
                    <since>
                        1.2                        
                    </since>
                    <serial>
                                                
                    </serial>
                </javadoc>
                <declaration name="y" type="float" line="61"/>
                <javadoc line="61">
                    The Y coordinate of the upper-left corner of the framing
                      rectangle of the arc.                    
                    <since>
                        1.2                        
                    </since>
                    <serial>
                                                
                    </serial>
                </javadoc>
                <declaration name="width" type="float" line="68"/>
                <javadoc line="68">
                    The overall width of the full ellipse of which this arc is
                      a partial section (not considering the
                      angular extents).                    
                    <since>
                        1.2                        
                    </since>
                    <serial>
                                                
                    </serial>
                </javadoc>
                <declaration name="height" type="float" line="76"/>
                <javadoc line="76">
                    The overall height of the full ellipse of which this arc is
                      a partial section (not considering the
                      angular extents).                    
                    <since>
                        1.2                        
                    </since>
                    <serial>
                                                
                    </serial>
                </javadoc>
                <declaration name="start" type="float" line="84"/>
                <javadoc line="84">
                    The starting angle of the arc in degrees.                    
                    <since>
                        1.2                        
                    </since>
                    <serial>
                                                
                    </serial>
                </javadoc>
                <declaration name="extent" type="float" line="90"/>
                <javadoc line="90">
                    The angular extent of the arc in degrees.                    
                    <since>
                        1.2                        
                    </since>
                    <serial>
                                                
                    </serial>
                </javadoc>
                <javadoc line="96">
                    Constructs a new OPEN arc, initialized to location (0, 0),
                      size (0, 0), angular extents (start = 0, extent = 0).                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="Float" type="constructor" line="101"/>
                <javadoc line="104">
                    Constructs a new arc, initialized to location (0, 0),
                      size (0, 0), angular extents (start = 0, extent = 0), and
                      the specified closure type.                    
                    <param>
                        type The closure type for the arc:{@link #OPEN}, {@link #CHORD}, or {@link #PIE}.                        
                    </param>
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="Float" type="constructor" line="111">
                    <params>
                        <param name="type" type="int"/>
                    </params>
                </method>
                <javadoc line="114">
                    Constructs a new arc, initialized to the specified location,
                      size, angular extents, and closure type.                    
                    <param>
                        x The X coordinate of the upper-left corner of
                          the arc's framing rectangle.                        
                    </param>
                    <param>
                        y The Y coordinate of the upper-left corner of
                          the arc's framing rectangle.                        
                    </param>
                    <param>
                        w The overall width of the full ellipse of which
                          this arc is a partial section.                        
                    </param>
                    <param>
                        h The overall height of the full ellipse of which this
                          arc is a partial section.                        
                    </param>
                    <param>
                        start The starting angle of the arc in degrees.                        
                    </param>
                    <param>
                        extent The angular extent of the arc in degrees.                        
                    </param>
                    <param>
                        type The closure type for the arc:{@link #OPEN}, {@link #CHORD}, or {@link #PIE}.                        
                    </param>
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="Float" type="constructor" line="130">
                    <params>
                        <param name="x" type="float"/>
                        <param name="y" type="float"/>
                        <param name="w" type="float"/>
                        <param name="h" type="float"/>
                        <param name="start" type="float"/>
                        <param name="extent" type="float"/>
                        <param name="type" type="int"/>
                    </params>
                </method>
                <javadoc line="139">
                    Constructs a new arc, initialized to the specified location,
                      size, angular extents, and closure type.                    
                    <param>
                        ellipseBounds The framing rectangle that defines the
                          outer boundary of the full ellipse of which this arc is a
                          partial section.                        
                    </param>
                    <param>
                        start The starting angle of the arc in degrees.                        
                    </param>
                    <param>
                        extent The angular extent of the arc in degrees.                        
                    </param>
                    <param>
                        type The closure type for the arc:{@link #OPEN}, {@link #CHORD}, or {@link #PIE}.                        
                    </param>
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="Float" type="constructor" line="150">
                    <params>
                        <param name="ellipseBounds" type="Rectangle2D"/>
                        <param name="start" type="float"/>
                        <param name="extent" type="float"/>
                        <param name="type" type="int"/>
                    </params>
                </method>
                <javadoc line="159">
                    {@inheritDoc}Note that the arc
                      &lt;a href=&quot;Arc2D.html#inscribes&quot;&gt;partially inscribes&lt;/a&gt;
                      the framing rectangle of this {@code RectangularShape}.                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="getX" type="double" line="165"/>
                <javadoc line="168">
                    {@inheritDoc}Note that the arc
                      &lt;a href=&quot;Arc2D.html#inscribes&quot;&gt;partially inscribes&lt;/a&gt;
                      the framing rectangle of this {@code RectangularShape}.                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="getY" type="double" line="174"/>
                <javadoc line="177">
                    {@inheritDoc}Note that the arc
                      &lt;a href=&quot;Arc2D.html#inscribes&quot;&gt;partially inscribes&lt;/a&gt;
                      the framing rectangle of this {@code RectangularShape}.                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="getWidth" type="double" line="183"/>
                <javadoc line="186">
                    {@inheritDoc}Note that the arc
                      &lt;a href=&quot;Arc2D.html#inscribes&quot;&gt;partially inscribes&lt;/a&gt;
                      the framing rectangle of this {@code RectangularShape}.                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="getHeight" type="double" line="192"/>
                <javadoc line="195">
                    {@inheritDoc}                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="getAngleStart" type="double" line="199"/>
                <javadoc line="202">
                    {@inheritDoc}                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="getAngleExtent" type="double" line="206"/>
                <javadoc line="209">
                    {@inheritDoc}                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="isEmpty" type="boolean" line="213"/>
                <javadoc line="216">
                    {@inheritDoc}                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="setArc" type="void" line="220">
                    <params>
                        <param name="x" type="double"/>
                        <param name="y" type="double"/>
                        <param name="w" type="double"/>
                        <param name="h" type="double"/>
                        <param name="angSt" type="double"/>
                        <param name="angExt" type="double"/>
                        <param name="closure" type="int"/>
                    </params>
                </method>
                <javadoc line="229">
                    {@inheritDoc}                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="setAngleStart" type="void" line="233">
                    <params>
                        <param name="angSt" type="double"/>
                    </params>
                </method>
                <javadoc line="236">
                    {@inheritDoc}                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="setAngleExtent" type="void" line="240">
                    <params>
                        <param name="angExt" type="double"/>
                    </params>
                </method>
                <javadoc line="243">
                    {@inheritDoc}                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="makeBounds" type="Rectangle2D" line="247">
                    <params>
                        <param name="x" type="double"/>
                        <param name="y" type="double"/>
                        <param name="w" type="double"/>
                        <param name="h" type="double"/>
                    </params>
                </method>
                <declaration name="serialVersionUID" type="long" line="250"/>
                <javadoc line="251">
                    Writes the default serializable fields to the
                      &lt;code&gt;ObjectOutputStream&lt;/code&gt; followed by a byte
                      indicating the arc type of this &lt;code&gt;Arc2D&lt;/code&gt;
                      instance.                    
                    <serialData>
                        <ol>
                          <li>The default serializable fields.
                          <li>
                          followed by a <code>byte</code> indicating the arc type{@link #OPEN}, {@link #CHORD}, or {@link #PIE}.
                          </ol>                        
                    </serialData>
                </javadoc>
                <method name="writeObject" type="void" line="262">
                    <params>
                        <param name="s" type="java.io.ObjectOutputStream"/>
                    </params>
                </method>
                <javadoc line="266">
                    Reads the default serializable fields from the
                      &lt;code&gt;ObjectInputStream&lt;/code&gt; followed by a byte
                      indicating the arc type of this &lt;code&gt;Arc2D&lt;/code&gt;
                      instance.                    
                    <serialData>
                        <ol>
                          <li>The default serializable fields.
                          <li>
                          followed by a <code>byte</code> indicating the arc type{@link #OPEN}, {@link #CHORD}, or {@link #PIE}.
                          </ol>                        
                    </serialData>
                </javadoc>
                <method name="readObject" type="void" line="277">
                    <params>
                        <param name="s" type="java.io.ObjectInputStream"/>
                    </params>
                    <scope line="279"/>
                    <scope line="282"/>
                </method>
            </class>
            <class name="Double" line="287">
                <extends class="Arc2D"/>
                <implements interface="Serializable"/>
                <javadoc line="287">
                    This class defines an arc specified in {@code double} precision.                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <declaration name="x" type="double" line="292"/>
                <javadoc line="292">
                    The X coordinate of the upper-left corner of the framing
                      rectangle of the arc.                    
                    <since>
                        1.2                        
                    </since>
                    <serial>
                                                
                    </serial>
                </javadoc>
                <declaration name="y" type="double" line="299"/>
                <javadoc line="299">
                    The Y coordinate of the upper-left corner of the framing
                      rectangle of the arc.                    
                    <since>
                        1.2                        
                    </since>
                    <serial>
                                                
                    </serial>
                </javadoc>
                <declaration name="width" type="double" line="306"/>
                <javadoc line="306">
                    The overall width of the full ellipse of which this arc is
                      a partial section (not considering the angular extents).                    
                    <since>
                        1.2                        
                    </since>
                    <serial>
                                                
                    </serial>
                </javadoc>
                <declaration name="height" type="double" line="313"/>
                <javadoc line="313">
                    The overall height of the full ellipse of which this arc is
                      a partial section (not considering the angular extents).                    
                    <since>
                        1.2                        
                    </since>
                    <serial>
                                                
                    </serial>
                </javadoc>
                <declaration name="start" type="double" line="320"/>
                <javadoc line="320">
                    The starting angle of the arc in degrees.                    
                    <since>
                        1.2                        
                    </since>
                    <serial>
                                                
                    </serial>
                </javadoc>
                <declaration name="extent" type="double" line="326"/>
                <javadoc line="326">
                    The angular extent of the arc in degrees.                    
                    <since>
                        1.2                        
                    </since>
                    <serial>
                                                
                    </serial>
                </javadoc>
                <javadoc line="332">
                    Constructs a new OPEN arc, initialized to location (0, 0),
                      size (0, 0), angular extents (start = 0, extent = 0).                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="Double" type="constructor" line="337"/>
                <javadoc line="340">
                    Constructs a new arc, initialized to location (0, 0),
                      size (0, 0), angular extents (start = 0, extent = 0), and
                      the specified closure type.                    
                    <param>
                        type The closure type for the arc:{@link #OPEN}, {@link #CHORD}, or {@link #PIE}.                        
                    </param>
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="Double" type="constructor" line="347">
                    <params>
                        <param name="type" type="int"/>
                    </params>
                </method>
                <javadoc line="350">
                    Constructs a new arc, initialized to the specified location,
                      size, angular extents, and closure type.                    
                    <param>
                        x The X coordinate of the upper-left corner
                          of the arc's framing rectangle.                        
                    </param>
                    <param>
                        y The Y coordinate of the upper-left corner
                          of the arc's framing rectangle.                        
                    </param>
                    <param>
                        w The overall width of the full ellipse of which this
                          arc is a partial section.                        
                    </param>
                    <param>
                        h The overall height of the full ellipse of which this
                          arc is a partial section.                        
                    </param>
                    <param>
                        start The starting angle of the arc in degrees.                        
                    </param>
                    <param>
                        extent The angular extent of the arc in degrees.                        
                    </param>
                    <param>
                        type The closure type for the arc:{@link #OPEN}, {@link #CHORD}, or {@link #PIE}.                        
                    </param>
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="Double" type="constructor" line="366">
                    <params>
                        <param name="x" type="double"/>
                        <param name="y" type="double"/>
                        <param name="w" type="double"/>
                        <param name="h" type="double"/>
                        <param name="start" type="double"/>
                        <param name="extent" type="double"/>
                        <param name="type" type="int"/>
                    </params>
                </method>
                <javadoc line="375">
                    Constructs a new arc, initialized to the specified location,
                      size, angular extents, and closure type.                    
                    <param>
                        ellipseBounds The framing rectangle that defines the
                          outer boundary of the full ellipse of which this arc is a
                          partial section.                        
                    </param>
                    <param>
                        start The starting angle of the arc in degrees.                        
                    </param>
                    <param>
                        extent The angular extent of the arc in degrees.                        
                    </param>
                    <param>
                        type The closure type for the arc:{@link #OPEN}, {@link #CHORD}, or {@link #PIE}.                        
                    </param>
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="Double" type="constructor" line="386">
                    <params>
                        <param name="ellipseBounds" type="Rectangle2D"/>
                        <param name="start" type="double"/>
                        <param name="extent" type="double"/>
                        <param name="type" type="int"/>
                    </params>
                </method>
                <javadoc line="395">
                    {@inheritDoc}Note that the arc
                      &lt;a href=&quot;Arc2D.html#inscribes&quot;&gt;partially inscribes&lt;/a&gt;
                      the framing rectangle of this {@code RectangularShape}.                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="getX" type="double" line="401"/>
                <javadoc line="404">
                    {@inheritDoc}Note that the arc
                      &lt;a href=&quot;Arc2D.html#inscribes&quot;&gt;partially inscribes&lt;/a&gt;
                      the framing rectangle of this {@code RectangularShape}.                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="getY" type="double" line="410"/>
                <javadoc line="413">
                    {@inheritDoc}Note that the arc
                      &lt;a href=&quot;Arc2D.html#inscribes&quot;&gt;partially inscribes&lt;/a&gt;
                      the framing rectangle of this {@code RectangularShape}.                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="getWidth" type="double" line="419"/>
                <javadoc line="422">
                    {@inheritDoc}Note that the arc
                      &lt;a href=&quot;Arc2D.html#inscribes&quot;&gt;partially inscribes&lt;/a&gt;
                      the framing rectangle of this {@code RectangularShape}.                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="getHeight" type="double" line="428"/>
                <javadoc line="431">
                    {@inheritDoc}                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="getAngleStart" type="double" line="435"/>
                <javadoc line="438">
                    {@inheritDoc}                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="getAngleExtent" type="double" line="442"/>
                <javadoc line="445">
                    {@inheritDoc}                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="isEmpty" type="boolean" line="449"/>
                <javadoc line="452">
                    {@inheritDoc}                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="setArc" type="void" line="456">
                    <params>
                        <param name="x" type="double"/>
                        <param name="y" type="double"/>
                        <param name="w" type="double"/>
                        <param name="h" type="double"/>
                        <param name="angSt" type="double"/>
                        <param name="angExt" type="double"/>
                        <param name="closure" type="int"/>
                    </params>
                </method>
                <javadoc line="465">
                    {@inheritDoc}                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="setAngleStart" type="void" line="469">
                    <params>
                        <param name="angSt" type="double"/>
                    </params>
                </method>
                <javadoc line="472">
                    {@inheritDoc}                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="setAngleExtent" type="void" line="476">
                    <params>
                        <param name="angExt" type="double"/>
                    </params>
                </method>
                <javadoc line="479">
                    {@inheritDoc}                    
                    <since>
                        1.2                        
                    </since>
                </javadoc>
                <method name="makeBounds" type="Rectangle2D" line="483">
                    <params>
                        <param name="x" type="double"/>
                        <param name="y" type="double"/>
                        <param name="w" type="double"/>
                        <param name="h" type="double"/>
                    </params>
                </method>
                <declaration name="serialVersionUID" type="long" line="486"/>
                <javadoc line="487">
                    Writes the default serializable fields to the
                      &lt;code&gt;ObjectOutputStream&lt;/code&gt; followed by a byte
                      indicating the arc type of this &lt;code&gt;Arc2D&lt;/code&gt;
                      instance.                    
                    <serialData>
                        <ol>
                          <li>The default serializable fields.
                          <li>
                          followed by a <code>byte</code> indicating the arc type{@link #OPEN}, {@link #CHORD}, or {@link #PIE}.
                          </ol>                        
                    </serialData>
                </javadoc>
                <method name="writeObject" type="void" line="498">
                    <params>
                        <param name="s" type="java.io.ObjectOutputStream"/>
                    </params>
                </method>
                <javadoc line="502">
                    Reads the default serializable fields from the
                      &lt;code&gt;ObjectInputStream&lt;/code&gt; followed by a byte
                      indicating the arc type of this &lt;code&gt;Arc2D&lt;/code&gt;
                      instance.                    
                    <serialData>
                        <ol>
                          <li>The default serializable fields.
                          <li>
                          followed by a <code>byte</code> indicating the arc type{@link #OPEN}, {@link #CHORD}, or {@link #PIE}.
                          </ol>                        
                    </serialData>
                </javadoc>
                <method name="readObject" type="void" line="513">
                    <params>
                        <param name="s" type="java.io.ObjectInputStream"/>
                    </params>
                    <scope line="515"/>
                    <scope line="518"/>
                </method>
            </class>
            <declaration name="type" type="int" line="523"/>
            <javadoc line="524">
                This is an abstract class that cannot be instantiated directly.
                  Type-specific implementation subclasses are available for
                  instantiation and provide a number of formats for storing
                  the information necessary to satisfy the various accessor
                  methods below.
                  &lt;p&gt;
                  This constructor creates an object with a default closure
                  type of {@link #OPEN}.  It is provided only to enable
                  serialization of subclasses.                
                <see>
                    java.awt.geom.Arc2D.Float                    
                </see>
                <see>
                    java.awt.geom.Arc2D.Double                    
                </see>
            </javadoc>
            <method name="Arc2D" type="constructor" line="537"/>
            <javadoc line="540">
                This is an abstract class that cannot be instantiated directly.
                  Type-specific implementation subclasses are available for
                  instantiation and provide a number of formats for storing
                  the information necessary to satisfy the various accessor
                  methods below.                
                <param>
                    type The closure type of this arc:{@link #OPEN}, {@link #CHORD}, or {@link #PIE}.                    
                </param>
                <see>
                    java.awt.geom.Arc2D.Float                    
                </see>
                <see>
                    java.awt.geom.Arc2D.Double                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="Arc2D" type="constructor" line="551">
                <params>
                    <param name="type" type="int"/>
                </params>
            </method>
            <method name="getAngleStart" type="double" line="554"/>
            <javadoc line="554">
                Returns the starting angle of the arc.                
                <return>
                    A double value that represents the starting angle
                      of the arc in degrees.                    
                </return>
                <see>
                    #setAngleStart                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="getAngleExtent" type="double" line="562"/>
            <javadoc line="562">
                Returns the angular extent of the arc.                
                <return>
                    A double value that represents the angular extent
                      of the arc in degrees.                    
                </return>
                <see>
                    #setAngleExtent                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <javadoc line="570">
                Returns the arc closure type of the arc: {@link #OPEN},{@link #CHORD}, or {@link #PIE}.                
                <return>
                    One of the integer constant closure types defined
                      in this class.                    
                </return>
                <see>
                    #setArcType                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="getArcType" type="int" line="577"/>
            <javadoc line="580">
                Returns the starting point of the arc.  This point is the
                  intersection of the ray from the center defined by the
                  starting angle and the elliptical boundary of the arc.                
                <return>
                    A <CODE>Point2D</CODE> object representing the
                      x,y coordinates of the starting point of the arc.                    
                </return>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="getStartPoint" type="Point2D" line="588">
                <declaration name="angle" type="double" line="589"/>
                <declaration name="x" type="double" line="590"/>
                <declaration name="y" type="double" line="591"/>
            </method>
            <javadoc line="594">
                Returns the ending point of the arc.  This point is the
                  intersection of the ray from the center defined by the
                  starting angle plus the angular extent of the arc and the
                  elliptical boundary of the arc.                
                <return>
                    A <CODE>Point2D</CODE> object representing the
                      x,y coordinates  of the ending point of the arc.                    
                </return>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="getEndPoint" type="Point2D" line="603">
                <declaration name="angle" type="double" line="604"/>
                <declaration name="x" type="double" line="605"/>
                <declaration name="y" type="double" line="606"/>
            </method>
            <method name="setArc" type="void" line="609"/>
            <javadoc line="609">
                Sets the location, size, angular extents, and closure type of
                  this arc to the specified double values.                
                <param>
                    x The X coordinate of the upper-left corner of the arc.                    
                </param>
                <param>
                    y The Y coordinate of the upper-left corner of the arc.                    
                </param>
                <param>
                    w The overall width of the full ellipse of which
                      this arc is a partial section.                    
                </param>
                <param>
                    h The overall height of the full ellipse of which
                      this arc is a partial section.                    
                </param>
                <param>
                    angSt The starting angle of the arc in degrees.                    
                </param>
                <param>
                    angExt The angular extent of the arc in degrees.                    
                </param>
                <param>
                    closure The closure type for the arc:{@link #OPEN}, {@link #CHORD}, or {@link #PIE}.                    
                </param>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <javadoc line="624">
                Sets the location, size, angular extents, and closure type of
                  this arc to the specified values.                
                <param>
                    loc The <CODE>Point2D</CODE> representing the coordinates of
                      the upper-left corner of the arc.                    
                </param>
                <param>
                    size The <CODE>Dimension2D</CODE> representing the width
                      and height of the full ellipse of which this arc is
                      a partial section.                    
                </param>
                <param>
                    angSt The starting angle of the arc in degrees.                    
                </param>
                <param>
                    angExt The angular extent of the arc in degrees.                    
                </param>
                <param>
                    closure The closure type for the arc:{@link #OPEN}, {@link #CHORD}, or {@link #PIE}.                    
                </param>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="setArc" type="void" line="637">
                <params>
                    <param name="loc" type="Point2D"/>
                    <param name="size" type="Dimension2D"/>
                    <param name="angSt" type="double"/>
                    <param name="angExt" type="double"/>
                    <param name="closure" type="int"/>
                </params>
            </method>
            <javadoc line="640">
                Sets the location, size, angular extents, and closure type of
                  this arc to the specified values.                
                <param>
                    rect The framing rectangle that defines the
                      outer boundary of the full ellipse of which this arc is a
                      partial section.                    
                </param>
                <param>
                    angSt The starting angle of the arc in degrees.                    
                </param>
                <param>
                    angExt The angular extent of the arc in degrees.                    
                </param>
                <param>
                    closure The closure type for the arc:{@link #OPEN}, {@link #CHORD}, or {@link #PIE}.                    
                </param>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="setArc" type="void" line="651">
                <params>
                    <param name="rect" type="Rectangle2D"/>
                    <param name="angSt" type="double"/>
                    <param name="angExt" type="double"/>
                    <param name="closure" type="int"/>
                </params>
            </method>
            <javadoc line="654">
                Sets this arc to be the same as the specified arc.                
                <param>
                    a The <CODE>Arc2D</CODE> to use to set the arc's values.                    
                </param>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="setArc" type="void" line="659">
                <params>
                    <param name="a" type="Arc2D"/>
                </params>
            </method>
            <javadoc line="662">
                Sets the position, bounds, angular extents, and closure type of
                  this arc to the specified values. The arc is defined by a center
                  point and a radius rather than a framing rectangle for the full ellipse.                
                <param>
                    x The X coordinate of the center of the arc.                    
                </param>
                <param>
                    y The Y coordinate of the center of the arc.                    
                </param>
                <param>
                    radius The radius of the arc.                    
                </param>
                <param>
                    angSt The starting angle of the arc in degrees.                    
                </param>
                <param>
                    angExt The angular extent of the arc in degrees.                    
                </param>
                <param>
                    closure The closure type for the arc:{@link #OPEN}, {@link #CHORD}, or {@link #PIE}.                    
                </param>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="setArcByCenter" type="void" line="674">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="radius" type="double"/>
                    <param name="angSt" type="double"/>
                    <param name="angExt" type="double"/>
                    <param name="closure" type="int"/>
                </params>
            </method>
            <javadoc line="677">
                Sets the position, bounds, and angular extents of this arc to the
                  specified value. The starting angle of the arc is tangent to the
                  line specified by points (p1, p2), the ending angle is tangent to
                  the line specified by points (p2, p3), and the arc has the
                  specified radius.                
                <param>
                    p1 The first point that defines the arc. The starting
                      angle of the arc is tangent to the line specified by points (p1, p2).                    
                </param>
                <param>
                    p2 The second point that defines the arc. The starting
                      angle of the arc is tangent to the line specified by points (p1, p2).
                      The ending angle of the arc is tangent to the line specified by
                      points (p2, p3).                    
                </param>
                <param>
                    p3 The third point that defines the arc. The ending angle
                      of the arc is tangent to the line specified by points (p2, p3).                    
                </param>
                <param>
                    radius The radius of the arc.                    
                </param>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="setArcByTangent" type="void" line="694">
                <params>
                    <param name="p1" type="Point2D"/>
                    <param name="p2" type="Point2D"/>
                    <param name="p3" type="Point2D"/>
                    <param name="radius" type="double"/>
                </params>
                <declaration name="ang1" type="double" line="695"/>
                <declaration name="ang2" type="double" line="696"/>
                <declaration name="diff" type="double" line="697"/>
                <scope line="698"/>
                <scope line="701"/>
                <declaration name="bisect" type="double" line="704"/>
                <declaration name="theta" type="double" line="705"/>
                <declaration name="dist" type="double" line="706"/>
                <declaration name="x" type="double" line="707"/>
                <declaration name="y" type="double" line="708"/>
                <scope line="709"/>
                <scope line="713"/>
                <scope line="720"/>
                <scope line="723"/>
            </method>
            <method name="setAngleStart" type="void" line="728"/>
            <javadoc line="728">
                Sets the starting angle of this arc to the specified double
                  value.                
                <param>
                    angSt The starting angle of the arc in degrees.                    
                </param>
                <see>
                    #getAngleStart                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="setAngleExtent" type="void" line="736"/>
            <javadoc line="736">
                Sets the angular extent of this arc to the specified double
                  value.                
                <param>
                    angExt The angular extent of the arc in degrees.                    
                </param>
                <see>
                    #getAngleExtent                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <javadoc line="744">
                Sets the starting angle of this arc to the angle that the
                  specified point defines relative to the center of this arc.
                  The angular extent of the arc will remain the same.                
                <param>
                    p The <CODE>Point2D</CODE> that defines the starting angle.                    
                </param>
                <see>
                    #getAngleStart                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="setAngleStart" type="void" line="752">
                <params>
                    <param name="p" type="Point2D"/>
                </params>
                <declaration name="dx" type="double" line="753"/>
                <declaration name="dy" type="double" line="754"/>
            </method>
            <javadoc line="757">
                Sets the starting angle and angular extent of this arc using two
                  sets of coordinates. The first set of coordinates is used to
                  determine the angle of the starting point relative to the arc&apos;s
                  center. The second set of coordinates is used to determine the
                  angle of the end point relative to the arc&apos;s center.
                  The arc will always be non-empty and extend counterclockwise
                  from the first point around to the second point.                
                <param>
                    x1 The X coordinate of the arc's starting point.                    
                </param>
                <param>
                    y1 The Y coordinate of the arc's starting point.                    
                </param>
                <param>
                    x2 The X coordinate of the arc's ending point.                    
                </param>
                <param>
                    y2 The Y coordinate of the arc's ending point.                    
                </param>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="setAngles" type="void" line="771">
                <params>
                    <param name="x1" type="double"/>
                    <param name="y1" type="double"/>
                    <param name="x2" type="double"/>
                    <param name="y2" type="double"/>
                </params>
                <declaration name="x" type="double" line="772"/>
                <declaration name="y" type="double" line="773"/>
                <declaration name="w" type="double" line="774"/>
                <declaration name="h" type="double" line="775"/>
                <declaration name="ang1" type="double" line="776"/>
                <declaration name="ang2" type="double" line="777"/>
                <scope line="779"/>
            </method>
            <javadoc line="785">
                Sets the starting angle and angular extent of this arc using
                  two points. The first point is used to determine the angle of
                  the starting point relative to the arc&apos;s center.
                  The second point is used to determine the angle of the end point
                  relative to the arc&apos;s center.
                  The arc will always be non-empty and extend counterclockwise
                  from the first point around to the second point.                
                <param>
                    p1 The <CODE>Point2D</CODE> that defines the arc's
                      starting point.                    
                </param>
                <param>
                    p2 The <CODE>Point2D</CODE> that defines the arc's
                      ending point.                    
                </param>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="setAngles" type="void" line="799">
                <params>
                    <param name="p1" type="Point2D"/>
                    <param name="p2" type="Point2D"/>
                </params>
            </method>
            <javadoc line="802">
                Sets the closure type of this arc to the specified value:
                  &lt;CODE&gt;OPEN&lt;/CODE&gt;, &lt;CODE&gt;CHORD&lt;/CODE&gt;, or &lt;CODE&gt;PIE&lt;/CODE&gt;.                
                <param>
                    type The integer constant that represents the closure
                      type of this arc: {@link #OPEN}, {@link #CHORD}, or{@link #PIE}.                    
                </param>
                <throws>
                    IllegalArgumentException if <code>type</code> is not
                      0, 1, or 2.+                    
                </throws>
                <see>
                    #getArcType                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="setArcType" type="void" line="812">
                <params>
                    <param name="type" type="int"/>
                </params>
                <scope line="813"/>
            </method>
            <javadoc line="818">
                {@inheritDoc}Note that the arc
                  &lt;a href=&quot;Arc2D.html#inscribes&quot;&gt;partially inscribes&lt;/a&gt;
                  the framing rectangle of this {@code RectangularShape}.                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="setFrame" type="void" line="824">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="w" type="double"/>
                    <param name="h" type="double"/>
                </params>
            </method>
            <javadoc line="827">
                Returns the high-precision framing rectangle of the arc.  The framing
                  rectangle contains only the part of this &lt;code&gt;Arc2D&lt;/code&gt; that is
                  in between the starting and ending angles and contains the pie
                  wedge, if this &lt;code&gt;Arc2D&lt;/code&gt; has a &lt;code&gt;PIE&lt;/code&gt; closure type.
                  &lt;p&gt;
                  This method differs from the{@link RectangularShape#getBounds() getBounds} in that the
                  &lt;code&gt;getBounds&lt;/code&gt; method only returns the bounds of the
                  enclosing ellipse of this &lt;code&gt;Arc2D&lt;/code&gt; without considering
                  the starting and ending angles of this &lt;code&gt;Arc2D&lt;/code&gt;.                
                <return>
                    the <CODE>Rectangle2D</CODE> that represents the arc's
                      framing rectangle.                    
                </return>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="getBounds2D" type="Rectangle2D" line="841">
                <scope line="842"/>
                <declaration name="x1" type="double" line="845"/>
                <scope line="846"/>
                <scope line="849"/>
                <declaration name="angle" type="double" line="853"/>
                <scope line="854">
                    <scope line="855">
                        <scope line="857"/>
                    </scope>
                    <scope line="861"/>
                    <scope line="864"/>
                    <declaration name="rads" type="double" line="867"/>
                    <declaration name="xe" type="double" line="868"/>
                    <declaration name="ye" type="double" line="869"/>
                </scope>
                <declaration name="w" type="double" line="875"/>
                <declaration name="h" type="double" line="876"/>
            </method>
            <method name="makeBounds" type="Rectangle2D" line="883"/>
            <javadoc line="883">
                Constructs a &lt;code&gt;Rectangle2D&lt;/code&gt; of the appropriate precision
                  to hold the parameters calculated to be the framing rectangle
                  of this arc.                
                <param>
                    x The X coordinate of the upper-left corner of the
                      framing rectangle.                    
                </param>
                <param>
                    y The Y coordinate of the upper-left corner of the
                      framing rectangle.                    
                </param>
                <param>
                    w The width of the framing rectangle.                    
                </param>
                <param>
                    h The height of the framing rectangle.                    
                </param>
                <return>
                    a <code>Rectangle2D</code> that is the framing rectangle
                      of this arc.                    
                </return>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="normalizeDegrees" type="double" line="898">
                <params>
                    <param name="angle" type="double"/>
                </params>
                <scope line="899">
                    <scope line="900"/>
                    <scope line="903">
                        <scope line="905"/>
                    </scope>
                </scope>
                <scope line="910">
                    <scope line="911"/>
                    <scope line="914">
                        <scope line="916"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="923">
                Determines whether or not the specified angle is within the
                  angular extents of the arc.                
                <param>
                    angle The angle to test.                    
                </param>
                <return>
                    <CODE>true</CODE> if the arc contains the angle,
                      <CODE>false</CODE> if the arc doesn't contain the angle.                    
                </return>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="containsAngle" type="boolean" line="931">
                <params>
                    <param name="angle" type="double"/>
                </params>
                <declaration name="angExt" type="double" line="932"/>
                <declaration name="backwards" type="boolean" line="933"/>
                <scope line="934"/>
                <scope line="937"/>
                <scope line="941"/>
                <scope line="944"/>
            </method>
            <javadoc line="949">
                Determines whether or not the specified point is inside the boundary
                  of the arc.                
                <param>
                    x The X coordinate of the point to test.                    
                </param>
                <param>
                    y The Y coordinate of the point to test.                    
                </param>
                <return>
                    <CODE>true</CODE> if the point lies within the bound of
                      the arc, <CODE>false</CODE> if the point lies outside of the
                      arc's bounds.                    
                </return>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="contains" type="boolean" line="959">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                </params>
                <declaration name="ellw" type="double" line="960"/>
                <scope line="961"/>
                <declaration name="normx" type="double" line="964"/>
                <declaration name="ellh" type="double" line="965"/>
                <scope line="966"/>
                <declaration name="normy" type="double" line="969"/>
                <declaration name="distSq" type="double" line="970"/>
                <scope line="971"/>
                <declaration name="angExt" type="double" line="974"/>
                <scope line="975"/>
                <declaration name="inarc" type="boolean" line="978"/>
                <scope line="979"/>
                <scope line="982">
                    <scope line="983"/>
                </scope>
                <scope line="987">
                    <scope line="988"/>
                </scope>
                <declaration name="angle" type="double" line="992"/>
                <declaration name="x1" type="double" line="993"/>
                <declaration name="y1" type="double" line="994"/>
                <declaration name="x2" type="double" line="996"/>
                <declaration name="y2" type="double" line="997"/>
                <declaration name="inside" type="boolean" line="998"/>
            </method>
            <javadoc line="1001">
                Determines whether or not the interior of the arc intersects
                  the interior of the specified rectangle.                
                <param>
                    x The X coordinate of the rectangle's upper-left corner.                    
                </param>
                <param>
                    y The Y coordinate of the rectangle's upper-left corner.                    
                </param>
                <param>
                    w The width of the rectangle.                    
                </param>
                <param>
                    h The height of the rectangle.                    
                </param>
                <return>
                    <CODE>true</CODE> if the arc intersects the rectangle,
                      <CODE>false</CODE> if the arc doesn't intersect the rectangle.                    
                </return>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="intersects" type="boolean" line="1012">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="w" type="double"/>
                    <param name="h" type="double"/>
                </params>
                <declaration name="aw" type="double" line="1013"/>
                <declaration name="ah" type="double" line="1014"/>
                <scope line="1015"/>
                <declaration name="ext" type="double" line="1018"/>
                <scope line="1019"/>
                <declaration name="ax" type="double" line="1022"/>
                <declaration name="ay" type="double" line="1023"/>
                <declaration name="axw" type="double" line="1024"/>
                <declaration name="ayh" type="double" line="1025"/>
                <declaration name="xw" type="double" line="1026"/>
                <declaration name="yh" type="double" line="1027"/>
                <scope line="1028"/>
                <declaration name="axc" type="double" line="1031"/>
                <declaration name="ayc" type="double" line="1032"/>
                <declaration name="sp" type="Point2D" line="1033"/>
                <declaration name="ep" type="Point2D" line="1034"/>
                <declaration name="sx" type="double" line="1035"/>
                <declaration name="sy" type="double" line="1036"/>
                <declaration name="ex" type="double" line="1037"/>
                <declaration name="ey" type="double" line="1038"/>
                <scope line="1039">
                    <scope line="1040"/>
                </scope>
                <scope line="1044">
                    <scope line="1045"/>
                </scope>
                <declaration name="rect" type="Rectangle2D" line="1049"/>
                <scope line="1050">
                    <scope line="1051"/>
                </scope>
                <scope line="1055">
                    <scope line="1056"/>
                </scope>
                <scope line="1060"/>
            </method>
            <javadoc line="1065">
                Determines whether or not the interior of the arc entirely contains
                  the specified rectangle.                
                <param>
                    x The X coordinate of the rectangle's upper-left corner.                    
                </param>
                <param>
                    y The Y coordinate of the rectangle's upper-left corner.                    
                </param>
                <param>
                    w The width of the rectangle.                    
                </param>
                <param>
                    h The height of the rectangle.                    
                </param>
                <return>
                    <CODE>true</CODE> if the arc contains the rectangle,
                      <CODE>false</CODE> if the arc doesn't contain the rectangle.                    
                </return>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="contains" type="boolean" line="1076">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="w" type="double"/>
                    <param name="h" type="double"/>
                </params>
            </method>
            <javadoc line="1079">
                Determines whether or not the interior of the arc entirely contains
                  the specified rectangle.                
                <param>
                    r The <CODE>Rectangle2D</CODE> to test.                    
                </param>
                <return>
                    <CODE>true</CODE> if the arc contains the rectangle,
                      <CODE>false</CODE> if the arc doesn't contain the rectangle.                    
                </return>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="contains" type="boolean" line="1087">
                <params>
                    <param name="r" type="Rectangle2D"/>
                </params>
            </method>
            <method name="contains" type="boolean" line="1090">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="w" type="double"/>
                    <param name="h" type="double"/>
                    <param name="origrect" type="Rectangle2D"/>
                </params>
                <scope line="1091"/>
                <scope line="1094"/>
                <scope line="1097"/>
                <declaration name="halfW" type="double" line="1100"/>
                <declaration name="halfH" type="double" line="1101"/>
                <declaration name="xc" type="double" line="1102"/>
                <declaration name="yc" type="double" line="1103"/>
                <declaration name="angle" type="double" line="1104"/>
                <declaration name="xe" type="double" line="1105"/>
                <declaration name="ye" type="double" line="1106"/>
                <scope line="1107"/>
            </method>
            <javadoc line="1115">
                Returns an iteration object that defines the boundary of the
                  arc.
                  This iterator is multithread safe.
                  &lt;code&gt;Arc2D&lt;/code&gt; guarantees that
                  modifications to the geometry of the arc
                  do not affect any iterations of that geometry that
                  are already in process.                
                <param>
                    at an optional <CODE>AffineTransform</CODE> to be applied
                      to the coordinates as they are returned in the iteration, or null
                      if the untransformed coordinates are desired.                    
                </param>
                <return>
                    A <CODE>PathIterator</CODE> that defines the arc's boundary.                    
                </return>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="getPathIterator" type="PathIterator" line="1129">
                <params>
                    <param name="at" type="AffineTransform"/>
                </params>
            </method>
            <javadoc line="1132">
                Returns the hashcode for this &lt;code&gt;Arc2D&lt;/code&gt;.                
                <return>
                    the hashcode for this <code>Arc2D</code>.                    
                </return>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="hashCode" type="int" line="1137">
                <declaration name="bits" type="long" line="1138"/>
            </method>
            <javadoc line="1147">
                Determines whether or not the specified &lt;code&gt;Object&lt;/code&gt; is
                  equal to this &lt;code&gt;Arc2D&lt;/code&gt;.  The specified
                  &lt;code&gt;Object&lt;/code&gt; is equal to this &lt;code&gt;Arc2D&lt;/code&gt;
                  if it is an instance of &lt;code&gt;Arc2D&lt;/code&gt; and if its
                  location, size, arc extents and type are the same as this
                  &lt;code&gt;Arc2D&lt;/code&gt;.                
                <param>
                    obj  an <code>Object</code> to be compared with this
                      <code>Arc2D</code>.                    
                </param>
                <return>
                    <code>true</code> if <code>obj</code> is an instance
                      of <code>Arc2D</code> and has the same values;
                      <code>false</code> otherwise.                    
                </return>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="equals" type="boolean" line="1161">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="1162"/>
                <scope line="1165">
                    <declaration name="a2d" type="Arc2D" line="1166"/>
                </scope>
            </method>
        </class>
    </source>