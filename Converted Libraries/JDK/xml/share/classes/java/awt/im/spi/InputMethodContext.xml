<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.im.spi">
        <import package="java.awt.HeadlessException"/>
        <import package="java.awt.Window"/>
        <import package="java.awt.font.TextHitInfo"/>
        <import package="java.awt.im.InputMethodRequests"/>
        <import package="java.text.AttributedCharacterIterator"/>
        <import package="javax.swing.JFrame"/>
        <interface name="InputMethodContext">
            <implements interface="InputMethodRequests"/>
            <javadoc line="8">
                Provides methods that input methods
                  can use to communicate with their client components or to request
                  other services.  This interface is implemented by the input method
                  framework, and input methods call its methods on the instance they
                  receive through{@link java.awt.im.spi.InputMethod#setInputMethodContext}.
                  There should be no other implementors or callers.                
                <since>
                    1.3                    
                </since>
                <author>
                    JavaSoft International                    
                </author>
            </javadoc>
            <method name="dispatchInputMethodEvent" type="void" line="19"/>
            <javadoc line="19">
                Creates an input method event from the arguments given
                  and dispatches it to the client component. For arguments,
                  see {@link java.awt.event.InputMethodEvent#InputMethodEvent}.                
            </javadoc>
            <method name="createInputMethodWindow" type="Window" line="25"/>
            <javadoc line="25">
                Creates a top-level window for use by the input method.
                  The intended behavior of this window is:
                  &lt;ul&gt;
                  &lt;li&gt;it floats above all document windows and dialogs
                  &lt;li&gt;it and all components that it contains do not receive the focus
                  &lt;li&gt;it has lightweight decorations, such as a reduced drag region without title
                  &lt;/ul&gt;
                  However, the actual behavior with respect to these three items is platform dependent.
                  &lt;p&gt;
                  The title may or may not be displayed, depending on the actual type of window created.
                  &lt;p&gt;
                  If attachToInputContext is true, the new window will share the input context that
                  corresponds to this input method context, so that events for components in the window
                  are automatically dispatched to the input method.
                  Also, when the window is opened using setVisible(true), the input context will prevent
                  deactivate and activate calls to the input method that might otherwise be caused.
                  &lt;p&gt;
                  Input methods must call {@link java.awt.Window#dispose() Window.dispose} on the
                  returned input method window when it is no longer needed.
                  &lt;p&gt;                
                <param>
                    title the title to be displayed in the window&apos;s title bar,
                      if there is such a title bar.
                      A &lt;code&gt;null&lt;/code&gt; value is treated as an empty string, &quot;&quot;.                    
                </param>
                <param>
                    attachToInputContext whether this window should share the input context
                      that corresponds to this input method context                    
                </param>
                <return>
                    a window with special characteristics for use by input methods                    
                </return>
                <exception>
                    HeadlessException if &lt;code&gt;GraphicsEnvironment.isHeadless
                      &lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;                    
                </exception>
            </javadoc>
            <method name="createInputMethodJFrame" type="JFrame" line="56"/>
            <javadoc line="56">
                Creates a top-level Swing JFrame for use by the input method.
                  The intended behavior of this window is:
                  &lt;ul&gt;
                  &lt;li&gt;it floats above all document windows and dialogs
                  &lt;li&gt;it and all components that it contains do not receive the focus
                  &lt;li&gt;it has lightweight decorations, such as a reduced drag region without title
                  &lt;/ul&gt;
                  However, the actual behavior with respect to these three items is platform dependent.
                  &lt;p&gt;
                  The title may or may not be displayed, depending on the actual type of window created.
                  &lt;p&gt;
                  If attachToInputContext is true, the new window will share the input context that
                  corresponds to this input method context, so that events for components in the window
                  are automatically dispatched to the input method.
                  Also, when the window is opened using setVisible(true), the input context will prevent
                  deactivate and activate calls to the input method that might otherwise be caused.
                  &lt;p&gt;
                  Input methods must call {@link java.awt.Window#dispose() Window.dispose} on the
                  returned input method window when it is no longer needed.
                  &lt;p&gt;                
                <param>
                    title the title to be displayed in the window&apos;s title bar,
                      if there is such a title bar.
                      A &lt;code&gt;null&lt;/code&gt; value is treated as an empty string, &quot;&quot;.                    
                </param>
                <param>
                    attachToInputContext whether this window should share the input context
                      that corresponds to this input method context                    
                </param>
                <return>
                    a JFrame with special characteristics for use by input methods                    
                </return>
                <exception>
                    HeadlessException if &lt;code&gt;GraphicsEnvironment.isHeadless
                      &lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;                    
                </exception>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="enableClientWindowNotification" type="void" line="88"/>
            <javadoc line="88">
                Enables or disables notification of the current client window&apos;s
                  location and state for the specified input method. When
                  notification is enabled, the input method&apos;s {@link java.awt.im.spi.InputMethod#notifyClientWindowChangenotifyClientWindowChange} method is called as described in that
                  method&apos;s specification. Notification is automatically disabled
                  when the input method is disposed.                
                <param>
                    inputMethod the input method for which notifications are
                      enabled or disabled                    
                </param>
                <param>
                    enable true to enable, false to disable                    
                </param>
            </javadoc>
        </interface>
    </source>