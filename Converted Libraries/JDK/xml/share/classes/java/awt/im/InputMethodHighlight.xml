<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.im">
        <import package="java.awt.font.TextAttribute"/>
        <import package="java.util.Map"/>
        <class name="InputMethodHighlight" line="4">
            <javadoc line="4">
                An InputMethodHighlight is used to describe the highlight
                  attributes of text being composed.
                  The description can be at two levels:
                  at the abstract level it specifies the conversion state and whether the
                  text is selected; at the concrete level it specifies style attributes used
                  to render the highlight.
                  An InputMethodHighlight must provide the description at the
                  abstract level; it may or may not provide the description at the concrete
                  level.
                  If no concrete style is provided, a renderer should use{@link java.awt.Toolkit#mapInputMethodHighlight} to map to a concrete style.
                  &lt;p&gt;
                  The abstract description consists of three fields: &lt;code&gt;selected&lt;/code&gt;,
                  &lt;code&gt;state&lt;/code&gt;, and &lt;code&gt;variation&lt;/code&gt;.
                  &lt;code&gt;selected&lt;/code&gt; indicates whether the text range is the one that the
                  input method is currently working on, for example, the segment for which
                  conversion candidates are currently shown in a menu.
                  &lt;code&gt;state&lt;/code&gt; represents the conversion state. State values are defined
                  by the input method framework and should be distinguished in all
                  mappings from abstract to concrete styles. Currently defined state values
                  are raw (unconverted) and converted.
                  These state values are recommended for use before and after the
                  main conversion step of text composition, say, before and after kana-&gt;kanji
                  or pinyin-&gt;hanzi conversion.
                  The &lt;code&gt;variation&lt;/code&gt; field allows input methods to express additional
                  information about the conversion results.
                  &lt;p&gt;
                  InputMethodHighlight instances are typically used as attribute values
                  returned from AttributedCharacterIterator for the INPUT_METHOD_HIGHLIGHT
                  attribute. They may be wrapped into {@link java.text.Annotation Annotation}instances to indicate separate text segments.                
                <see>
                    java.text.AttributedCharacterIterator                    
                </see>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <declaration name="RAW_TEXT" type="int" line="38"/>
            <javadoc line="38">
                Constant for the raw text state.                
            </javadoc>
            <declaration name="CONVERTED_TEXT" type="int" line="42"/>
            <javadoc line="42">
                Constant for the converted text state.                
            </javadoc>
            <declaration name="UNSELECTED_RAW_TEXT_HIGHLIGHT" type="InputMethodHighlight" line="46"/>
            <javadoc line="46">
                Constant for the default highlight for unselected raw text.                
            </javadoc>
            <declaration name="SELECTED_RAW_TEXT_HIGHLIGHT" type="InputMethodHighlight" line="50"/>
            <javadoc line="50">
                Constant for the default highlight for selected raw text.                
            </javadoc>
            <declaration name="UNSELECTED_CONVERTED_TEXT_HIGHLIGHT" type="InputMethodHighlight" line="54"/>
            <javadoc line="54">
                Constant for the default highlight for unselected converted text.                
            </javadoc>
            <declaration name="SELECTED_CONVERTED_TEXT_HIGHLIGHT" type="InputMethodHighlight" line="58"/>
            <javadoc line="58">
                Constant for the default highlight for selected converted text.                
            </javadoc>
            <javadoc line="62">
                Constructs an input method highlight record.
                  The variation is set to 0, the style to null.                
                <param>
                    selected Whether the text range is selected                    
                </param>
                <param>
                    state The conversion state for the text range - RAW_TEXT or CONVERTED_TEXT                    
                </param>
                <see>
                    InputMethodHighlight#RAW_TEXT                    
                </see>
                <see>
                    InputMethodHighlight#CONVERTED_TEXT                    
                </see>
                <exception>
                    IllegalArgumentException if a state other than RAW_TEXT or CONVERTED_TEXT is given                    
                </exception>
            </javadoc>
            <method name="InputMethodHighlight" type="constructor" line="71">
                <params>
                    <param name="selected" type="boolean"/>
                    <param name="state" type="int"/>
                </params>
            </method>
            <javadoc line="74">
                Constructs an input method highlight record.
                  The style is set to null.                
                <param>
                    selected Whether the text range is selected                    
                </param>
                <param>
                    state The conversion state for the text range - RAW_TEXT or CONVERTED_TEXT                    
                </param>
                <param>
                    variation The style variation for the text range                    
                </param>
                <see>
                    InputMethodHighlight#RAW_TEXT                    
                </see>
                <see>
                    InputMethodHighlight#CONVERTED_TEXT                    
                </see>
                <exception>
                    IllegalArgumentException if a state other than RAW_TEXT or CONVERTED_TEXT is given                    
                </exception>
            </javadoc>
            <method name="InputMethodHighlight" type="constructor" line="84">
                <params>
                    <param name="selected" type="boolean"/>
                    <param name="state" type="int"/>
                    <param name="variation" type="int"/>
                </params>
            </method>
            <javadoc line="87">
                Constructs an input method highlight record.
                  The style attributes map provided must be unmodifiable.                
                <param>
                    selected whether the text range is selected                    
                </param>
                <param>
                    state the conversion state for the text range - RAW_TEXT or CONVERTED_TEXT                    
                </param>
                <param>
                    variation the variation for the text range                    
                </param>
                <param>
                    style the rendering style attributes for the text range, or null                    
                </param>
                <see>
                    InputMethodHighlight#RAW_TEXT                    
                </see>
                <see>
                    InputMethodHighlight#CONVERTED_TEXT                    
                </see>
                <exception>
                    IllegalArgumentException if a state other than RAW_TEXT or CONVERTED_TEXT is given                    
                </exception>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="InputMethodHighlight" type="constructor" line="99">
                <params>
                    <param name="selected" type="boolean"/>
                    <param name="state" type="int"/>
                    <param name="variation" type="int"/>
                    <param name="style" type="Map<TextAttribute,?>"/>
                </params>
                <scope line="101"/>
            </method>
            <javadoc line="108">
                Returns whether the text range is selected.                
            </javadoc>
            <method name="isSelected" type="boolean" line="111"/>
            <javadoc line="114">
                Returns the conversion state of the text range.                
                <return>
                    The conversion state for the text range - RAW_TEXT or CONVERTED_TEXT.                    
                </return>
                <see>
                    InputMethodHighlight#RAW_TEXT                    
                </see>
                <see>
                    InputMethodHighlight#CONVERTED_TEXT                    
                </see>
            </javadoc>
            <method name="getState" type="int" line="120"/>
            <javadoc line="123">
                Returns the variation of the text range.                
            </javadoc>
            <method name="getVariation" type="int" line="126"/>
            <javadoc line="129">
                Returns the rendering style attributes for the text range, or null.                
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="getStyle" type="Map<TextAttribute,?>" line="133"/>
            <declaration name="selected" type="boolean" line="136"/>
            <declaration name="state" type="int" line="137"/>
            <declaration name="variation" type="int" line="138"/>
            <declaration name="style" type="Map" line="139"/>
        </class>
    </source>