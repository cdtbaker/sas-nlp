<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.awt.datatransfer">
        <import package="java.io"/>
        <class name="StringSelection" line="3">
            <implements interface="Transferable"/>
            <implements interface="ClipboardOwner"/>
            <javadoc line="3">
                A &lt;code&gt;Transferable&lt;/code&gt; which implements the capability required
                  to transfer a &lt;code&gt;String&lt;/code&gt;.
                  This &lt;code&gt;Transferable&lt;/code&gt; properly supports
                  &lt;code&gt;DataFlavor.stringFlavor&lt;/code&gt;
                  and all equivalent flavors. Support for
                  &lt;code&gt;DataFlavor.plainTextFlavor&lt;/code&gt;
                  and all equivalent flavors is &lt;b&gt;deprecated&lt;/b&gt;. No other
                  &lt;code&gt;DataFlavor&lt;/code&gt;s are supported.                
                <see>
                    java.awt.datatransfer.DataFlavor#stringFlavor                    
                </see>
                <see>
                    java.awt.datatransfer.DataFlavor#plainTextFlavor                    
                </see>
            </javadoc>
            <declaration name="STRING" type="int" line="16"/>
            <declaration name="PLAIN_TEXT" type="int" line="17"/>
            <declaration name="flavors" type="DataFlavor[]" line="18"/>
            <declaration name="data" type="String" line="19"/>
            <javadoc line="20">
                Creates a &lt;code&gt;Transferable&lt;/code&gt; capable of transferring
                  the specified &lt;code&gt;String&lt;/code&gt;.                
            </javadoc>
            <method name="StringSelection" type="constructor" line="24">
                <params>
                    <param name="data" type="String"/>
                </params>
            </method>
            <javadoc line="27">
                Returns an array of flavors in which this &lt;code&gt;Transferable&lt;/code&gt;
                  can provide the data. &lt;code&gt;DataFlavor.stringFlavor&lt;/code&gt;
                  is properly supported.
                  Support for &lt;code&gt;DataFlavor.plainTextFlavor&lt;/code&gt; is
                  &lt;b&gt;deprecated&lt;/b&gt;.                
                <return>
                    an array of length two, whose elements are <code>DataFlavor.
                      stringFlavor</code> and <code>DataFlavor.plainTextFlavor</code>                    
                </return>
            </javadoc>
            <method name="getTransferDataFlavors" type="DataFlavor[]" line="36"/>
            <javadoc line="39">
                Returns whether the requested flavor is supported by this
                  &lt;code&gt;Transferable&lt;/code&gt;.                
                <param>
                    flavor the requested flavor for the data                    
                </param>
                <return>
                    true if <code>flavor</code> is equal to
                      <code>DataFlavor.stringFlavor</code> or
                      <code>DataFlavor.plainTextFlavor</code>; false if <code>flavor</code>
                      is not one of the above flavors                    
                </return>
                <throws>
                    NullPointerException if flavor is <code>null</code>                    
                </throws>
            </javadoc>
            <method name="isDataFlavorSupported" type="boolean" line="49">
                <params>
                    <param name="flavor" type="DataFlavor"/>
                </params>
                <scope line="50">
                    <scope line="51"/>
                </scope>
            </method>
            <javadoc line="57">
                Returns the &lt;code&gt;Transferable&lt;/code&gt;&apos;s data in the requested
                  &lt;code&gt;DataFlavor&lt;/code&gt; if possible. If the desired flavor is
                  &lt;code&gt;DataFlavor.stringFlavor&lt;/code&gt;, or an equivalent flavor,
                  the &lt;code&gt;String&lt;/code&gt; representing the selection is
                  returned. If the desired flavor is
                  &lt;code&gt;DataFlavor.plainTextFlavor&lt;/code&gt;,
                  or an equivalent flavor, a &lt;code&gt;Reader&lt;/code&gt; is returned.
                  &lt;b&gt;Note:&lt;/b&gt; The behavior of this method for
                  &lt;code&gt;DataFlavor.plainTextFlavor&lt;/code&gt;
                  and equivalent &lt;code&gt;DataFlavor&lt;/code&gt;s is inconsistent with the
                  definition of &lt;code&gt;DataFlavor.plainTextFlavor&lt;/code&gt;.                
                <param>
                    flavor the requested flavor for the data                    
                </param>
                <return>
                    the data in the requested flavor, as outlined above                    
                </return>
                <throws>
                    UnsupportedFlavorException if the requested data flavor is
                      not equivalent to either <code>DataFlavor.stringFlavor</code>
                      or <code>DataFlavor.plainTextFlavor</code>                    
                </throws>
                <throws>
                    IOException if an IOException occurs while retrieving the data.
                      By default, StringSelection never throws this exception, but a
                      subclass may.                    
                </throws>
                <throws>
                    NullPointerException if flavor is <code>null</code>                    
                </throws>
                <see>
                    java.io.Reader                    
                </see>
            </javadoc>
            <method name="getTransferData" type="Object" line="80">
                <params>
                    <param name="flavor" type="DataFlavor"/>
                </params>
                <scope line="81"/>
                <scope line="84"/>
                <scope line="87"/>
            </method>
            <method name="lostOwnership" type="void" line="91">
                <params>
                    <param name="clipboard" type="Clipboard"/>
                    <param name="contents" type="Transferable"/>
                </params>
            </method>
        </class>
    </source>