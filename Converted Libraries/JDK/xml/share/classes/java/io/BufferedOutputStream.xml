<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.io">
        <class name="BufferedOutputStream" line="28">
            <extends class="FilterOutputStream"/>
            <javadoc line="28">
                The class implements a buffered output stream. By setting up such
                  an output stream, an application can write bytes to the underlying
                  output stream without necessarily causing a call to the underlying
                  system for each byte written.                
                <author>
                    Arthur van Hoff                    
                </author>
                <since>
                    JDK1.0                    
                </since>
            </javadoc>
            <declaration name="buf" type="byte" line="39"/>
            <javadoc line="39">
                The internal buffer where data is stored.                
            </javadoc>
            <declaration name="count" type="int" line="44"/>
            <javadoc line="44">
                The number of valid bytes in the buffer. This value is always
                  in the range &lt;tt&gt;0&lt;/tt&gt; through &lt;tt&gt;buf.length&lt;/tt&gt;; elements
                  &lt;tt&gt;buf[0]&lt;/tt&gt; through &lt;tt&gt;buf[count-1]&lt;/tt&gt; contain valid
                  byte data.                
            </javadoc>
            <javadoc line="52">
                Creates a new buffered output stream to write data to the
                  specified underlying output stream.                
                <param>
                    out   the underlying output stream.                    
                </param>
            </javadoc>
            <method name="BufferedOutputStream" type="constructor" line="58">
                <params>
                    <param name="out" type="OutputStream"/>
                </params>
            </method>
            <javadoc line="62">
                Creates a new buffered output stream to write data to the
                  specified underlying output stream with the specified buffer
                  size.                
                <param>
                    out    the underlying output stream.                    
                </param>
                <param>
                    size   the buffer size.                    
                </param>
                <exception>
                    IllegalArgumentException if size &amp;lt;= 0.                    
                </exception>
            </javadoc>
            <method name="BufferedOutputStream" type="constructor" line="71">
                <params>
                    <param name="out" type="OutputStream"/>
                    <param name="size" type="int"/>
                </params>
                <scope line="73"/>
            </method>
            <javadoc line="79">
                Flush the internal buffer                
            </javadoc>
            <method name="flushBuffer" type="void" line="80">
                <scope line="81"/>
            </method>
            <javadoc line="87">
                Writes the specified byte to this buffered output stream.                
                <param>
                    b   the byte to be written.                    
                </param>
                <exception>
                    IOException  if an I/O error occurs.                    
                </exception>
            </javadoc>
            <method name="write" type="void" line="93">
                <params>
                    <param name="b" type="int"/>
                </params>
                <scope line="94"/>
            </method>
            <javadoc line="100">
                Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array
                  starting at offset &lt;code&gt;off&lt;/code&gt; to this buffered output stream.
                  &lt;p&gt; Ordinarily this method stores bytes from the given array into this
                  stream&apos;s buffer, flushing the buffer to the underlying output stream as
                  needed.  If the requested length is at least as large as this stream&apos;s
                  buffer, however, then this method will flush the buffer and write the
                  bytes directly to the underlying output stream.  Thus redundant
                  &lt;code&gt;BufferedOutputStream&lt;/code&gt;s will not copy data unnecessarily.                
                <param>
                    b     the data.                    
                </param>
                <param>
                    off   the start offset in the data.                    
                </param>
                <param>
                    len   the number of bytes to write.                    
                </param>
                <exception>
                    IOException  if an I/O error occurs.                    
                </exception>
            </javadoc>
            <method name="write" type="void" line="116">
                <params>
                    <param name="b" type="byte"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <comment line="119">
                    If the request length exceeds the size of the output buffer,
                    flush the output buffer and then write the data directly.                    
                </comment>
                <scope line="117"/>
                <scope line="125"/>
            </method>
            <javadoc line="132">
                Flushes this buffered output stream. This forces any buffered
                  output bytes to be written out to the underlying output stream.                
                <exception>
                    IOException  if an I/O error occurs.                    
                </exception>
                <see>
                    java.io.FilterOutputStream#out                    
                </see>
            </javadoc>
            <method name="flush" type="void" line="139"/>
        </class>
    </source>