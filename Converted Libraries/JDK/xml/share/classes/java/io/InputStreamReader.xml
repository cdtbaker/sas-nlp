<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.io">
        <import package="java.nio.charset.Charset"/>
        <import package="java.nio.charset.CharsetDecoder"/>
        <import package="sun.nio.cs.StreamDecoder"/>
        <class name="InputStreamReader" line="33">
            <extends class="Reader"/>
            <javadoc line="33">
                An InputStreamReader is a bridge from byte streams to character streams: It
                  reads bytes and decodes them into characters using a specified {@link java.nio.charset.Charset &lt;code&gt;charset&lt;/code&gt;}.  The charset that it uses
                  may be specified by name or may be given explicitly, or the platform&apos;s
                  default charset may be accepted.
                  &lt;p&gt; Each invocation of one of an InputStreamReader&apos;s read() methods may
                  cause one or more bytes to be read from the underlying byte-input stream.
                  To enable the efficient conversion of bytes to characters, more bytes may
                  be read ahead from the underlying stream than are necessary to satisfy the
                  current read operation.
                  &lt;p&gt; For top efficiency, consider wrapping an InputStreamReader within a
                  BufferedReader.  For example:
                  &lt;pre&gt;
                  BufferedReader in
                  = new BufferedReader(new InputStreamReader(System.in));
                  &lt;/pre&gt;                
                <see>
                    BufferedReader                    
                </see>
                <see>
                    InputStream                    
                </see>
                <see>
                    java.nio.charset.Charset                    
                </see>
                <author>
                    Mark Reinhold                    
                </author>
                <since>
                    JDK1.1                    
                </since>
            </javadoc>
            <declaration name="sd" type="StreamDecoder" line="64"/>
            <javadoc line="66">
                Creates an InputStreamReader that uses the default charset.                
                <param>
                    in   An InputStream                    
                </param>
            </javadoc>
            <method name="InputStreamReader" type="constructor" line="71">
                <params>
                    <param name="in" type="InputStream"/>
                </params>
                <comment line="75">
                    ## check lock object                    
                </comment>
                <comment line="77">
                    The default encoding should always be available                    
                </comment>
                <scope line="73"/>
                <scope line="75"/>
            </method>
            <javadoc line="81">
                Creates an InputStreamReader that uses the named charset.                
                <param>
                    inAn InputStream                    
                </param>
                <param>
                    charsetNameThe name of a supported{@link java.nio.charset.Charset &lt;/code&gt;charset&lt;code&gt;}                    
                </param>
                <exception>
                    UnsupportedEncodingExceptionIf the named charset is not supported                    
                </exception>
            </javadoc>
            <method name="InputStreamReader" type="constructor" line="96">
                <params>
                    <param name="in" type="InputStream"/>
                    <param name="charsetName" type="String"/>
                </params>
            </method>
            <javadoc line="103">
                Creates an InputStreamReader that uses the given charset. &lt;/p&gt;                
                <param>
                    in       An InputStream                    
                </param>
                <param>
                    cs       A charset                    
                </param>
                <since>
                    1.4                    
                </since>
                <spec>
                    JSR-51                    
                </spec>
            </javadoc>
            <method name="InputStreamReader" type="constructor" line="112">
                <params>
                    <param name="in" type="InputStream"/>
                    <param name="cs" type="Charset"/>
                </params>
            </method>
            <javadoc line="119">
                Creates an InputStreamReader that uses the given charset decoder.  &lt;/p&gt;                
                <param>
                    in       An InputStream                    
                </param>
                <param>
                    dec      A charset decoder                    
                </param>
                <since>
                    1.4                    
                </since>
                <spec>
                    JSR-51                    
                </spec>
            </javadoc>
            <method name="InputStreamReader" type="constructor" line="128">
                <params>
                    <param name="in" type="InputStream"/>
                    <param name="dec" type="CharsetDecoder"/>
                </params>
            </method>
            <javadoc line="135">
                Returns the name of the character encoding being used by this stream.
                  &lt;p&gt; If the encoding has an historical name then that name is returned;
                  otherwise the encoding&apos;s canonical name is returned.
                  &lt;p&gt; If this instance was created with the {@link #InputStreamReader(InputStream,String)} constructor then the returned
                  name, being unique for the encoding, may differ from the name passed to
                  the constructor. This method will return &lt;code&gt;null&lt;/code&gt; if the
                  stream has been closed.
                  &lt;/p&gt;                
                <return>
                    The historical name of this encoding, or
                      &lt;code&gt;null&lt;/code&gt; if the stream has been closed                    
                </return>
                <see>
                    java.nio.charset.Charset                    
                </see>
                <revised>
                    1.4                    
                </revised>
                <spec>
                    JSR-51                    
                </spec>
            </javadoc>
            <method name="getEncoding" type="String" line="155"/>
            <javadoc line="159">
                Reads a single character.                
                <return>
                    The character read, or -1 if the end of the stream has been
                      reached                    
                </return>
                <exception>
                    IOException  If an I/O error occurs                    
                </exception>
            </javadoc>
            <method name="read" type="int" line="167"/>
            <javadoc line="171">
                Reads characters into a portion of an array.                
                <param>
                    cbuf     Destination buffer                    
                </param>
                <param>
                    offset   Offset at which to start storing characters                    
                </param>
                <param>
                    length   Maximum number of characters to read                    
                </param>
                <return>
                    The number of characters read, or -1 if the end of the
                      stream has been reached                    
                </return>
                <exception>
                    IOException  If an I/O error occurs                    
                </exception>
            </javadoc>
            <method name="read" type="int" line="183">
                <params>
                    <param name="cbuf" type="char"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                </params>
            </method>
            <javadoc line="187">
                Tells whether this stream is ready to be read.  An InputStreamReader is
                  ready if its input buffer is not empty, or if bytes are available to be
                  read from the underlying byte stream.                
                <exception>
                    IOException  If an I/O error occurs                    
                </exception>
            </javadoc>
            <method name="ready" type="boolean" line="194"/>
            <method name="close" type="void" line="198"/>
        </class>
    </source>