<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.io">
        <class name="StringWriter" line="2">
            <extends class="Writer"/>
            <javadoc line="2">
                A character stream that collects its output in a string buffer, which can
                  then be used to construct a string.
                  &lt;p&gt;
                  Closing a &lt;tt&gt;StringWriter&lt;/tt&gt; has no effect. The methods in this class
                  can be called after the stream has been closed without generating an
                  &lt;tt&gt;IOException&lt;/tt&gt;.                
                <author>
                    Mark Reinhold                    
                </author>
                <since>
                    JDK1.1                    
                </since>
            </javadoc>
            <declaration name="buf" type="StringBuffer" line="13"/>
            <javadoc line="14">
                Create a new string writer using the default initial string-buffer
                  size.                
            </javadoc>
            <method name="StringWriter" type="constructor" line="18"/>
            <javadoc line="22">
                Create a new string writer using the specified initial string-buffer
                  size.                
                <param>
                    initialSizeThe number of <tt>char</tt> values that will fit into this buffer
                      before it is automatically expanded                    
                </param>
                <throws>
                    IllegalArgumentExceptionIf <tt>initialSize</tt> is negative                    
                </throws>
            </javadoc>
            <method name="StringWriter" type="constructor" line="29">
                <params>
                    <param name="initialSize" type="int"/>
                </params>
                <scope line="30"/>
            </method>
            <javadoc line="36">
                Write a single character.                
            </javadoc>
            <method name="write" type="void" line="39">
                <params>
                    <param name="c" type="int"/>
                </params>
            </method>
            <javadoc line="42">
                Write a portion of an array of characters.                
                <param>
                    cbuf  Array of characters                    
                </param>
                <param>
                    off   Offset from which to start writing characters                    
                </param>
                <param>
                    len   Number of characters to write                    
                </param>
            </javadoc>
            <method name="write" type="void" line="48">
                <params>
                    <param name="cbuf" type="char"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="49"/>
                <scope line="52"/>
            </method>
            <javadoc line="57">
                Write a string.                
            </javadoc>
            <method name="write" type="void" line="60">
                <params>
                    <param name="str" type="String"/>
                </params>
            </method>
            <javadoc line="63">
                Write a portion of a string.                
                <param>
                    str  String to be written                    
                </param>
                <param>
                    off  Offset from which to start writing characters                    
                </param>
                <param>
                    len  Number of characters to write                    
                </param>
            </javadoc>
            <method name="write" type="void" line="69">
                <params>
                    <param name="str" type="String"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <javadoc line="72">
                Appends the specified character sequence to this writer.
                  &lt;p&gt; An invocation of this method of the form &lt;tt&gt;out.append(csq)&lt;/tt&gt;
                  behaves in exactly the same way as the invocation
                  &lt;pre&gt;
                  out.write(csq.toString()) &lt;/pre&gt;
                  &lt;p&gt; Depending on the specification of &lt;tt&gt;toString&lt;/tt&gt; for the
                  character sequence &lt;tt&gt;csq&lt;/tt&gt;, the entire sequence may not be
                  appended. For instance, invoking the &lt;tt&gt;toString&lt;/tt&gt; method of a
                  character buffer will return a subsequence whose content depends upon
                  the buffer&apos;s position and limit.                
                <param>
                    csqThe character sequence to append.  If <tt>csq</tt> is
                      <tt>null</tt>, then the four characters <tt>"null"</tt> are
                      appended to this writer.                    
                </param>
                <return>
                    This writer                    
                </return>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="append" type="StringWriter" line="89">
                <params>
                    <param name="csq" type="CharSequence"/>
                </params>
            </method>
            <javadoc line="94">
                Appends a subsequence of the specified character sequence to this writer.
                  &lt;p&gt; An invocation of this method of the form &lt;tt&gt;out.append(csq, start,
                  end)&lt;/tt&gt; when &lt;tt&gt;csq&lt;/tt&gt; is not &lt;tt&gt;null&lt;/tt&gt;, behaves in
                  exactly the same way as the invocation
                  &lt;pre&gt;
                  out.write(csq.subSequence(start, end).toString()) &lt;/pre&gt;                
                <param>
                    csqThe character sequence from which a subsequence will be
                      appended.  If <tt>csq</tt> is <tt>null</tt>, then characters
                      will be appended as if <tt>csq</tt> contained the four
                      characters <tt>"null"</tt>.                    
                </param>
                <param>
                    startThe index of the first character in the subsequence                    
                </param>
                <param>
                    endThe index of the character following the last character in the
                      subsequence                    
                </param>
                <return>
                    This writer                    
                </return>
                <throws>
                    IndexOutOfBoundsExceptionIf <tt>start</tt> or <tt>end</tt> are negative, <tt>start</tt>
                      is greater than <tt>end</tt>, or <tt>end</tt> is greater than
                      <tt>csq.length()</tt>                    
                </throws>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="append" type="StringWriter" line="114">
                <params>
                    <param name="csq" type="CharSequence"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <declaration name="cs" type="CharSequence" line="115"/>
            </method>
            <javadoc line="119">
                Appends the specified character to this writer.
                  &lt;p&gt; An invocation of this method of the form &lt;tt&gt;out.append(c)&lt;/tt&gt;
                  behaves in exactly the same way as the invocation
                  &lt;pre&gt;
                  out.write(c) &lt;/pre&gt;                
                <param>
                    cThe 16-bit character to append                    
                </param>
                <return>
                    This writer                    
                </return>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="append" type="StringWriter" line="129">
                <params>
                    <param name="c" type="char"/>
                </params>
            </method>
            <javadoc line="133">
                Return the buffer&apos;s current value as a string.                
            </javadoc>
            <method name="toString" type="String" line="136"/>
            <javadoc line="139">
                Return the string buffer itself.                
                <return>
                    StringBuffer holding the current buffer value.                    
                </return>
            </javadoc>
            <method name="getBuffer" type="StringBuffer" line="143"/>
            <javadoc line="146">
                Flush the stream.                
            </javadoc>
            <method name="flush" type="void" line="149"/>
            <javadoc line="151">
                Closing a &lt;tt&gt;StringWriter&lt;/tt&gt; has no effect. The methods in this
                  class can be called after the stream has been closed without generating
                  an &lt;tt&gt;IOException&lt;/tt&gt;.                
            </javadoc>
            <method name="close" type="void" line="156"/>
        </class>
    </source>