<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.io">
        <class name="IOException" line="2">
            <extends class="Exception"/>
            <javadoc line="2">
                Signals that an I/O exception of some sort has occurred. This
                  class is the general class of exceptions produced by failed or
                  interrupted I/O operations.                
                <author>
                    unascribed                    
                </author>
                <see>
                    java.io.InputStream                    
                </see>
                <see>
                    java.io.OutputStream                    
                </see>
                <since>
                    JDK1.0                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="12"/>
            <javadoc line="13">
                Constructs an {@code IOException} with {@code null}as its error detail message.                
            </javadoc>
            <method name="IOException" type="constructor" line="16"/>
            <javadoc line="19">
                Constructs an {@code IOException} with the specified detail message.                
                <param>
                    messageThe detail message (which is saved for later retrieval
                      by the {@link #getMessage()} method)                    
                </param>
            </javadoc>
            <method name="IOException" type="constructor" line="24">
                <params>
                    <param name="message" type="String"/>
                </params>
            </method>
            <javadoc line="27">
                Constructs an {@code IOException} with the specified detail message
                  and cause.
                  &lt;p&gt; Note that the detail message associated with {@code cause} is
                  &lt;i&gt;not&lt;/i&gt; automatically incorporated into this exception&apos;s detail
                  message.                
                <param>
                    messageThe detail message (which is saved for later retrieval
                      by the {@link #getMessage()} method)                    
                </param>
                <param>
                    causeThe cause (which is saved for later retrieval by the{@link #getCause()} method).  (A null value is permitted,
                      and indicates that the cause is nonexistent or unknown.)                    
                </param>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="IOException" type="constructor" line="39">
                <params>
                    <param name="message" type="String"/>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
            <javadoc line="42">
                Constructs an {@code IOException} with the specified cause and a
                  detail message of {@code (cause==null ? null : cause.toString())}(which typically contains the class and detail message of {@code cause}).
                  This constructor is useful for IO exceptions that are little more
                  than wrappers for other throwables.                
                <param>
                    causeThe cause (which is saved for later retrieval by the{@link #getCause()} method).  (A null value is permitted,
                      and indicates that the cause is nonexistent or unknown.)                    
                </param>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="IOException" type="constructor" line="51">
                <params>
                    <param name="cause" type="Throwable"/>
                </params>
            </method>
        </class>
    </source>