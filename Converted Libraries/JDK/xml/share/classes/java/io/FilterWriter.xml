<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.io">
        <class name="FilterWriter" line="2">
            <extends class="Writer"/>
            <javadoc line="2">
                Abstract class for writing filtered character streams.
                  The abstract class &lt;code&gt;FilterWriter&lt;/code&gt; itself
                  provides default methods that pass all requests to the
                  contained stream. Subclasses of &lt;code&gt;FilterWriter&lt;/code&gt;
                  should override some of these methods and may also
                  provide additional methods and fields.                
                <author>
                    Mark Reinhold                    
                </author>
                <since>
                    JDK1.1                    
                </since>
            </javadoc>
            <declaration name="out" type="Writer" line="13"/>
            <javadoc line="13">
                The underlying character-output stream.                
            </javadoc>
            <javadoc line="17">
                Create a new filtered writer.                
                <param>
                    out  a Writer object to provide the underlying stream.                    
                </param>
                <throws>
                    NullPointerException if &lt;code&gt;out&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;                    
                </throws>
            </javadoc>
            <method name="FilterWriter" type="constructor" line="22">
                <params>
                    <param name="out" type="Writer"/>
                </params>
            </method>
            <javadoc line="26">
                Writes a single character.                
                <exception>
                    IOException  If an I/O error occurs                    
                </exception>
            </javadoc>
            <method name="write" type="void" line="30">
                <params>
                    <param name="c" type="int"/>
                </params>
            </method>
            <javadoc line="33">
                Writes a portion of an array of characters.                
                <param>
                    cbuf  Buffer of characters to be written                    
                </param>
                <param>
                    off   Offset from which to start reading characters                    
                </param>
                <param>
                    len   Number of characters to be written                    
                </param>
                <exception>
                    IOException  If an I/O error occurs                    
                </exception>
            </javadoc>
            <method name="write" type="void" line="40">
                <params>
                    <param name="cbuf" type="char"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <javadoc line="43">
                Writes a portion of a string.                
                <param>
                    str  String to be written                    
                </param>
                <param>
                    off  Offset from which to start reading characters                    
                </param>
                <param>
                    len  Number of characters to be written                    
                </param>
                <exception>
                    IOException  If an I/O error occurs                    
                </exception>
            </javadoc>
            <method name="write" type="void" line="50">
                <params>
                    <param name="str" type="String"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <javadoc line="53">
                Flushes the stream.                
                <exception>
                    IOException  If an I/O error occurs                    
                </exception>
            </javadoc>
            <method name="flush" type="void" line="57"/>
            <method name="close" type="void" line="60"/>
        </class>
    </source>