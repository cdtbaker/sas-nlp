<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.io">
        <class name="FilterReader" line="29">
            <extends class="Reader"/>
            <javadoc line="29">
                Abstract class for reading filtered character streams.
                  The abstract class &lt;code&gt;FilterReader&lt;/code&gt; itself
                  provides default methods that pass all requests to
                  the contained stream. Subclasses of &lt;code&gt;FilterReader&lt;/code&gt;
                  should override some of these methods and may also provide
                  additional methods and fields.                
                <author>
                    Mark Reinhold                    
                </author>
                <since>
                    JDK1.1                    
                </since>
            </javadoc>
            <declaration name="in" type="Reader" line="43"/>
            <javadoc line="43">
                The underlying character-input stream.                
            </javadoc>
            <javadoc line="48">
                Creates a new filtered reader.                
                <param>
                    in  a Reader object providing the underlying stream.                    
                </param>
                <throws>
                    NullPointerException if &lt;code&gt;in&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;                    
                </throws>
            </javadoc>
            <method name="FilterReader" type="constructor" line="54">
                <params>
                    <param name="in" type="Reader"/>
                </params>
            </method>
            <javadoc line="59">
                Reads a single character.                
                <exception>
                    IOException  If an I/O error occurs                    
                </exception>
            </javadoc>
            <method name="read" type="int" line="64"/>
            <javadoc line="68">
                Reads characters into a portion of an array.                
                <exception>
                    IOException  If an I/O error occurs                    
                </exception>
            </javadoc>
            <method name="read" type="int" line="73">
                <params>
                    <param name="cbuf" type="char"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <javadoc line="77">
                Skips characters.                
                <exception>
                    IOException  If an I/O error occurs                    
                </exception>
            </javadoc>
            <method name="skip" type="long" line="82">
                <params>
                    <param name="n" type="long"/>
                </params>
            </method>
            <javadoc line="86">
                Tells whether this stream is ready to be read.                
                <exception>
                    IOException  If an I/O error occurs                    
                </exception>
            </javadoc>
            <method name="ready" type="boolean" line="91"/>
            <javadoc line="95">
                Tells whether this stream supports the mark() operation.                
            </javadoc>
            <method name="markSupported" type="boolean" line="98"/>
            <javadoc line="102">
                Marks the present position in the stream.                
                <exception>
                    IOException  If an I/O error occurs                    
                </exception>
            </javadoc>
            <method name="mark" type="void" line="107">
                <params>
                    <param name="readAheadLimit" type="int"/>
                </params>
            </method>
            <javadoc line="111">
                Resets the stream.                
                <exception>
                    IOException  If an I/O error occurs                    
                </exception>
            </javadoc>
            <method name="reset" type="void" line="116"/>
            <method name="close" type="void" line="120"/>
        </class>
    </source>