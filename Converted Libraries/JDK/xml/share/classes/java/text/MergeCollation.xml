<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.text">
        <import package="java.util.ArrayList"/>
        <class name="MergeCollation" line="3">
            <javadoc line="3">
                Utility class for normalizing and merging patterns for collation.
                  Patterns are strings of the form &lt;entry&gt;, where &lt;entry&gt; has the
                  form:
                  &lt;pattern&gt; := &lt;entry&gt;
                  &lt;entry&gt; := &lt;separator&gt;&lt;chars&gt;{&quot;/&quot;&lt;extension&gt;}
                  &lt;separator&gt; := &quot;=&quot;, &quot;,&quot;, &quot;;&quot;, &quot;&lt;&quot;, &quot;&amp;&quot;
                  &lt;chars&gt;, and &lt;extension&gt; are both arbitrary strings.
                  unquoted whitespaces are ignored.
                  &apos;xxx&apos; can be used to quote characters
                  One difference from Collator is that &amp; is used to reset to a current
                  point. Or, in other words, it introduces a new sequence which is to
                  be added to the old.
                  That is: &quot;a &lt; b &lt; c &lt; d&quot; is the same as &quot;a &lt; b &amp; b &lt; c &amp; c &lt; d&quot; OR
                  &quot;a &lt; b &lt; d &amp; b &lt; c&quot;
                  XXX: make &apos;&apos; be a single quote.                
                <see>
                    PatternEntry                    
                </see>
                <author>
                    Mark Davis, Helena Shih                    
                </author>
            </javadoc>
            <javadoc line="23">
                Creates from a pattern                
                <exception>
                    ParseException If the input pattern is incorrect.                    
                </exception>
            </javadoc>
            <method name="MergeCollation" type="constructor" line="27">
                <params>
                    <param name="pattern" type="String"/>
                </params>
            </method>
            <javadoc line="31">
                recovers current pattern                
            </javadoc>
            <method name="getPattern" type="String" line="34"/>
            <javadoc line="37">
                recovers current pattern.                
                <param>
                    withWhiteSpace puts spacing around the entries, and \n
                      before & and <                    
                </param>
            </javadoc>
            <method name="getPattern" type="String" line="42">
                <params>
                    <param name="withWhiteSpace" type="boolean"/>
                </params>
                <declaration name="result" type="StringBuffer" line="43"/>
                <declaration name="tmp" type="PatternEntry" line="44"/>
                <declaration name="extList" type="ArrayList" line="45"/>
                <declaration name="i" type="int" line="46"/>
                <scope line="47">
                    <declaration name="entry" type="PatternEntry" line="48"/>
                    <scope line="49"/>
                    <scope line="53">
                        <scope line="54">
                            <declaration name="last" type="PatternEntry" line="55"/>
                            <scope line="56"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="65">
                    <declaration name="last" type="PatternEntry" line="66"/>
                    <scope line="67"/>
                </scope>
            </method>
            <method name="findLastWithNoExtension" type="PatternEntry" line="75">
                <params>
                    <param name="i" type="int"/>
                </params>
                <scope line="76">
                    <declaration name="entry" type="PatternEntry" line="77"/>
                    <scope line="78"/>
                </scope>
            </method>
            <javadoc line="84">
                emits the pattern for collation builder.                
                <return>
                    emits the string in the format understable to the collation
                      builder.                    
                </return>
            </javadoc>
            <method name="emitPattern" type="String" line="89"/>
            <javadoc line="92">
                emits the pattern for collation builder.                
                <param>
                    withWhiteSpace puts spacing around the entries, and \n
                      before & and <                    
                </param>
                <return>
                    emits the string in the format understable to the collation
                      builder.                    
                </return>
            </javadoc>
            <method name="emitPattern" type="String" line="99">
                <params>
                    <param name="withWhiteSpace" type="boolean"/>
                </params>
                <declaration name="result" type="StringBuffer" line="100"/>
                <scope line="101">
                    <declaration name="entry" type="PatternEntry" line="102"/>
                    <scope line="103"/>
                </scope>
            </method>
            <javadoc line="109">
                sets the pattern.                
            </javadoc>
            <method name="setPattern" type="void" line="112">
                <params>
                    <param name="pattern" type="String"/>
                </params>
            </method>
            <javadoc line="116">
                adds a pattern to the current one.                
                <param>
                    pattern the new pattern to be added                    
                </param>
            </javadoc>
            <method name="addPattern" type="void" line="120">
                <params>
                    <param name="pattern" type="String"/>
                </params>
                <declaration name="parser" type="PatternEntry.Parser" line="122"/>
                <declaration name="entry" type="PatternEntry" line="123"/>
                <scope line="124"/>
            </method>
            <javadoc line="129">
                gets count of separate entries                
                <return>
                    the size of pattern entries                    
                </return>
            </javadoc>
            <method name="getCount" type="int" line="133"/>
            <javadoc line="136">
                gets count of separate entries                
                <param>
                    index the offset of the desired pattern entry                    
                </param>
                <return>
                    the requested pattern entry                    
                </return>
            </javadoc>
            <method name="getItemAt" type="PatternEntry" line="141">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <declaration name="patterns" type="ArrayList" line="144"/>
            <declaration name="saveEntry" type="PatternEntry" line="145"/>
            <declaration name="lastEntry" type="PatternEntry" line="146"/>
            <declaration name="excess" type="StringBuffer" line="147"/>
            <declaration name="statusArray" type="byte[]" line="148"/>
            <declaration name="BITARRAYMASK" type="byte" line="149"/>
            <declaration name="BYTEPOWER" type="int" line="150"/>
            <declaration name="BYTEMASK" type="int" line="151"/>
            <method name="fixEntry" type="void" line="152">
                <params>
                    <param name="newEntry" type="PatternEntry"/>
                </params>
                <scope line="153">
                    <scope line="154"/>
                    <scope line="157"/>
                </scope>
                <declaration name="changeLastEntry" type="boolean" line="161"/>
                <scope line="162">
                    <declaration name="oldIndex" type="int" line="163"/>
                    <scope line="164">
                        <declaration name="c" type="char" line="165"/>
                        <declaration name="statusIndex" type="int" line="166"/>
                        <declaration name="bitClump" type="byte" line="167"/>
                        <declaration name="setBit" type="byte" line="168"/>
                        <scope line="169"/>
                        <scope line="172"/>
                    </scope>
                    <scope line="176"/>
                    <scope line="179"/>
                    <declaration name="lastIndex" type="int" line="183"/>
                    <scope line="184">
                        <scope line="186"/>
                    </scope>
                    <scope line="191"/>
                    <scope line="195"/>
                </scope>
                <scope line="199"/>
            </method>
            <method name="findLastEntry" type="int" line="203">
                <params>
                    <param name="entry" type="PatternEntry"/>
                    <param name="excessChars" type="StringBuffer"/>
                </params>
                <scope line="205">
                    <declaration name="oldIndex" type="int" line="206"/>
                    <scope line="207">
                        <declaration name="index" type="int" line="208"/>
                        <scope line="209"/>
                    </scope>
                    <scope line="213"/>
                </scope>
                <scope line="219">
                    <declaration name="i" type="int" line="220"/>
                    <scope line="221">
                        <declaration name="e" type="PatternEntry" line="222"/>
                        <scope line="223"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>