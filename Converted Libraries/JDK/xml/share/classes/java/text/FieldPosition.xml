<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.text">
        <class name="FieldPosition" line="2">
            <javadoc line="2">
                &lt;code&gt;FieldPosition&lt;/code&gt; is a simple class used by &lt;code&gt;Format&lt;/code&gt;
                  and its subclasses to identify fields in formatted output. Fields can
                  be identified in two ways:
                  &lt;ul&gt;
                  &lt;li&gt;By an integer constant, whose names typically end with
                  &lt;code&gt;_FIELD&lt;/code&gt;. The constants are defined in the various
                  subclasses of &lt;code&gt;Format&lt;/code&gt;.
                  &lt;li&gt;By a &lt;code&gt;Format.Field&lt;/code&gt; constant, see &lt;code&gt;ERA_FIELD&lt;/code&gt;
                  and its friends in &lt;code&gt;DateFormat&lt;/code&gt; for an example.
                  &lt;/ul&gt;
                  &lt;p&gt;
                  &lt;code&gt;FieldPosition&lt;/code&gt; keeps track of the position of the
                  field within the formatted output with two indices: the index
                  of the first character of the field and the index of the last
                  character of the field.
                  &lt;p&gt;
                  One version of the &lt;code&gt;format&lt;/code&gt; method in the various
                  &lt;code&gt;Format&lt;/code&gt; classes requires a &lt;code&gt;FieldPosition&lt;/code&gt;
                  object as an argument. You use this &lt;code&gt;format&lt;/code&gt; method
                  to perform partial formatting or to get information about the
                  formatted output (such as the position of a field).
                  &lt;p&gt;
                  If you are interested in the positions of all attributes in the
                  formatted string use the &lt;code&gt;Format&lt;/code&gt; method
                  &lt;code&gt;formatToCharacterIterator&lt;/code&gt;.                
                <author>
                    Mark Davis                    
                </author>
                <see>
                    java.text.Format                    
                </see>
            </javadoc>
            <declaration name="field" type="int" line="32"/>
            <javadoc line="32">
                Input: Desired field to determine start and end offsets for.
                  The meaning depends on the subclass of Format.                
            </javadoc>
            <declaration name="endIndex" type="int" line="37"/>
            <javadoc line="37">
                Output: End offset of field in text.
                  If the field does not occur in the text, 0 is returned.                
            </javadoc>
            <declaration name="beginIndex" type="int" line="42"/>
            <javadoc line="42">
                Output: Start offset of field in text.
                  If the field does not occur in the text, 0 is returned.                
            </javadoc>
            <declaration name="attribute" type="Format.Field" line="47"/>
            <javadoc line="47">
                Desired field this FieldPosition is for.                
            </javadoc>
            <javadoc line="51">
                Creates a FieldPosition object for the given field.  Fields are
                  identified by constants, whose names typically end with _FIELD,
                  in the various subclasses of Format.                
                <see>
                    java.text.NumberFormat#INTEGER_FIELD                    
                </see>
                <see>
                    java.text.NumberFormat#FRACTION_FIELD                    
                </see>
                <see>
                    java.text.DateFormat#YEAR_FIELD                    
                </see>
                <see>
                    java.text.DateFormat#MONTH_FIELD                    
                </see>
            </javadoc>
            <method name="FieldPosition" type="constructor" line="60">
                <params>
                    <param name="field" type="int"/>
                </params>
            </method>
            <javadoc line="63">
                Creates a FieldPosition object for the given field constant. Fields are
                  identified by constants defined in the various &lt;code&gt;Format&lt;/code&gt;
                  subclasses. This is equivalent to calling
                  &lt;code&gt;new FieldPosition(attribute, -1)&lt;/code&gt;.                
                <param>
                    attribute Format.Field constant identifying a field                    
                </param>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="FieldPosition" type="constructor" line="71">
                <params>
                    <param name="attribute" type="Format.Field"/>
                </params>
            </method>
            <javadoc line="74">
                Creates a &lt;code&gt;FieldPosition&lt;/code&gt; object for the given field.
                  The field is identified by an attribute constant from one of the
                  &lt;code&gt;Field&lt;/code&gt; subclasses as well as an integer field ID
                  defined by the &lt;code&gt;Format&lt;/code&gt; subclasses. &lt;code&gt;Format&lt;/code&gt;
                  subclasses that are aware of &lt;code&gt;Field&lt;/code&gt; should give precedence
                  to &lt;code&gt;attribute&lt;/code&gt; and ignore &lt;code&gt;fieldID&lt;/code&gt; if
                  &lt;code&gt;attribute&lt;/code&gt; is not null. However, older &lt;code&gt;Format&lt;/code&gt;
                  subclasses may not be aware of &lt;code&gt;Field&lt;/code&gt; and rely on
                  &lt;code&gt;fieldID&lt;/code&gt;. If the field has no corresponding integer
                  constant, &lt;code&gt;fieldID&lt;/code&gt; should be -1.                
                <param>
                    attribute Format.Field constant identifying a field                    
                </param>
                <param>
                    fieldID integer constantce identifying a field                    
                </param>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="FieldPosition" type="constructor" line="89">
                <params>
                    <param name="attribute" type="Format.Field"/>
                    <param name="fieldID" type="int"/>
                </params>
            </method>
            <javadoc line="93">
                Returns the field identifier as an attribute constant
                  from one of the &lt;code&gt;Field&lt;/code&gt; subclasses. May return null if
                  the field is specified only by an integer field ID.                
                <return>
                    Identifier for the field                    
                </return>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="getFieldAttribute" type="Format.Field" line="100"/>
            <javadoc line="103">
                Retrieves the field identifier.                
            </javadoc>
            <method name="getField" type="int" line="106"/>
            <javadoc line="109">
                Retrieves the index of the first character in the requested field.                
            </javadoc>
            <method name="getBeginIndex" type="int" line="112"/>
            <javadoc line="115">
                Retrieves the index of the character following the last character in the
                  requested field.                
            </javadoc>
            <method name="getEndIndex" type="int" line="119"/>
            <javadoc line="122">
                Sets the begin index.  For use by subclasses of Format.                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="setBeginIndex" type="void" line="126">
                <params>
                    <param name="bi" type="int"/>
                </params>
            </method>
            <javadoc line="129">
                Sets the end index.  For use by subclasses of Format.                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="setEndIndex" type="void" line="133">
                <params>
                    <param name="ei" type="int"/>
                </params>
            </method>
            <javadoc line="136">
                Returns a &lt;code&gt;Format.FieldDelegate&lt;/code&gt; instance that is associated
                  with the FieldPosition. When the delegate is notified of the same
                  field the FieldPosition is associated with, the begin/end will be
                  adjusted.                
            </javadoc>
            <method name="getFieldDelegate" type="Format.FieldDelegate" line="142"/>
            <javadoc line="145">
                Overrides equals                
            </javadoc>
            <method name="equals" type="boolean" line="148">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <declaration name="other" type="FieldPosition" line="151"/>
                <scope line="152">
                    <scope line="153"/>
                </scope>
                <scope line="157"/>
            </method>
            <javadoc line="162">
                Returns a hash code for this FieldPosition.                
                <return>
                    a hash code value for this object                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="166"/>
            <javadoc line="169">
                Return a string representation of this FieldPosition.                
                <return>
                    a string representation of this object                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="173"/>
            <javadoc line="176">
                Return true if the receiver wants a &lt;code&gt;Format.Field&lt;/code&gt; value and
                  &lt;code&gt;attribute&lt;/code&gt; is equal to it.                
            </javadoc>
            <method name="matchesField" type="boolean" line="180">
                <params>
                    <param name="attribute" type="Format.Field"/>
                </params>
                <scope line="181"/>
            </method>
            <javadoc line="186">
                Return true if the receiver wants a &lt;code&gt;Format.Field&lt;/code&gt; value and
                  &lt;code&gt;attribute&lt;/code&gt; is equal to it, or true if the receiver
                  represents an inteter constant and &lt;code&gt;field&lt;/code&gt; equals it.                
            </javadoc>
            <method name="matchesField" type="boolean" line="191">
                <params>
                    <param name="attribute" type="Format.Field"/>
                    <param name="field" type="int"/>
                </params>
                <scope line="192"/>
            </method>
            <class name="Delegate" line="197">
                <implements interface="Format.FieldDelegate"/>
                <javadoc line="197">
                    An implementation of FieldDelegate that will adjust the begin/end
                      of the FieldPosition if the arguments match the field of
                      the FieldPosition.                    
                </javadoc>
                <declaration name="encounteredField" type="boolean" line="203"/>
                <javadoc line="203">
                    Indicates whether the field has been  encountered before. If this
                      is true, and &lt;code&gt;formatted&lt;/code&gt; is invoked, the begin/end
                      are not updated.                    
                </javadoc>
                <method name="formatted" type="void" line="209">
                    <params>
                        <param name="attr" type="Format.Field"/>
                        <param name="value" type="Object"/>
                        <param name="start" type="int"/>
                        <param name="end" type="int"/>
                        <param name="buffer" type="StringBuffer"/>
                    </params>
                    <scope line="210"/>
                </method>
                <method name="formatted" type="void" line="216">
                    <params>
                        <param name="fieldID" type="int"/>
                        <param name="attr" type="Format.Field"/>
                        <param name="value" type="Object"/>
                        <param name="start" type="int"/>
                        <param name="end" type="int"/>
                        <param name="buffer" type="StringBuffer"/>
                    </params>
                    <scope line="217"/>
                </method>
            </class>
        </class>
    </source>