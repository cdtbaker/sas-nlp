<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.text">
        <class name="RuleBasedCollationKey" line="2">
            <extends class="CollationKey"/>
            <javadoc line="2">
                A RuleBasedCollationKey is a concrete implementation of CollationKey class.
                  The RuleBasedCollationKey class is used by the RuleBasedCollator class.                
            </javadoc>
            <javadoc line="7">
                Compare this RuleBasedCollationKey to target. The collation rules of the
                  Collator object which created these keys are applied. &lt;strong&gt;Note:&lt;/strong&gt;
                  RuleBasedCollationKeys created by different Collators can not be compared.                
                <param>
                    target target RuleBasedCollationKey                    
                </param>
                <return>
                    Returns an integer value. Value is less than zero if this is less
                      than target, value is zero if this and target are equal and value is greater than
                      zero if this is greater than target.                    
                </return>
                <see>
                    java.text.Collator#compare                    
                </see>
            </javadoc>
            <method name="compareTo" type="int" line="17">
                <params>
                    <param name="target" type="CollationKey"/>
                </params>
                <declaration name="result" type="int" line="18"/>
            </method>
            <javadoc line="23">
                Compare this RuleBasedCollationKey and the target for equality.
                  The collation rules of the Collator object which created these keys are applied.
                  &lt;strong&gt;Note:&lt;/strong&gt; RuleBasedCollationKeys created by different Collators can not be
                  compared.                
                <param>
                    target the RuleBasedCollationKey to compare to.                    
                </param>
                <return>
                    Returns true if two objects are equal, false otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="31">
                <params>
                    <param name="target" type="Object"/>
                </params>
                <scope line="33"/>
                <declaration name="other" type="RuleBasedCollationKey" line="36"/>
            </method>
            <javadoc line="39">
                Creates a hash code for this RuleBasedCollationKey. The hash value is calculated on the
                  key itself, not the String from which the key was created.  Thus
                  if x and y are RuleBasedCollationKeys, then x.hashCode(x) == y.hashCode() if
                  x.equals(y) is true.  This allows language-sensitive comparison in a hash table.
                  See the CollatinKey class description for an example.                
                <return>
                    the hash value based on the string's collation order.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="47"/>
            <javadoc line="50">
                Converts the RuleBasedCollationKey to a sequence of bits. If two RuleBasedCollationKeys
                  could be legitimately compared, then one could compare the byte arrays
                  for each of those keys to obtain the same result.  Byte arrays are
                  organized most significant byte first.                
            </javadoc>
            <method name="toByteArray" type="byte[]" line="56">
                <declaration name="src" type="char[]" line="57"/>
                <declaration name="dest" type="byte[]" line="58"/>
                <declaration name="j" type="int" line="59"/>
                <scope line="60"/>
            </method>
            <javadoc line="66">
                A RuleBasedCollationKey can only be generated by Collator objects.                
            </javadoc>
            <method name="RuleBasedCollationKey" type="constructor" line="69">
                <params>
                    <param name="source" type="String"/>
                    <param name="key" type="String"/>
                </params>
            </method>
            <declaration name="key" type="String" line="73"/>
        </class>
    </source>