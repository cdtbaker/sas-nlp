<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.text.spi">
        <import package="java.text.DateFormat"/>
        <import package="java.util.Locale"/>
        <import package="java.util.spi.LocaleServiceProvider"/>
        <class name="DateFormatProvider" line="32">
            <extends class="LocaleServiceProvider"/>
            <javadoc line="32">
                An abstract class for service providers that
                  provide concrete implementations of the{@link java.text.DateFormat DateFormat} class.                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <javadoc line="41">
                Sole constructor.  (For invocation by subclass constructors, typically
                  implicit.)                
            </javadoc>
            <method name="DateFormatProvider" type="constructor" line="45"/>
            <method name="getTimeInstance" type="DateFormat" line="48"/>
            <javadoc line="48">
                Returns a new &lt;code&gt;DateFormat&lt;/code&gt; instance which formats time
                  with the given formatting style for the specified locale.                
                <param>
                    style the given formatting style.  Either one of{@link java.text.DateFormat#SHORT DateFormat.SHORT},{@link java.text.DateFormat#MEDIUM DateFormat.MEDIUM},{@link java.text.DateFormat#LONG DateFormat.LONG}, or{@link java.text.DateFormat#FULL DateFormat.FULL}.                    
                </param>
                <param>
                    locale the desired locale.                    
                </param>
                <exception>
                    IllegalArgumentException if &lt;code&gt;style&lt;/code&gt; is invalid,
                      or if &lt;code&gt;locale&lt;/code&gt; isn&apos;t
                      one of the locales returned from{@link java.util.spi.LocaleServiceProvider#getAvailableLocales()getAvailableLocales()}.                    
                </exception>
                <exception>
                    NullPointerException if &lt;code&gt;locale&lt;/code&gt; is null                    
                </exception>
                <return>
                    a time formatter.                    
                </return>
                <see>
                    java.text.DateFormat#getTimeInstance(int,java.util.Locale)                    
                </see>
            </javadoc>
            <method name="getDateInstance" type="DateFormat" line="68"/>
            <javadoc line="68">
                Returns a new &lt;code&gt;DateFormat&lt;/code&gt; instance which formats date
                  with the given formatting style for the specified locale.                
                <param>
                    style the given formatting style.  Either one of{@link java.text.DateFormat#SHORT DateFormat.SHORT},{@link java.text.DateFormat#MEDIUM DateFormat.MEDIUM},{@link java.text.DateFormat#LONG DateFormat.LONG}, or{@link java.text.DateFormat#FULL DateFormat.FULL}.                    
                </param>
                <param>
                    locale the desired locale.                    
                </param>
                <exception>
                    IllegalArgumentException if &lt;code&gt;style&lt;/code&gt; is invalid,
                      or if &lt;code&gt;locale&lt;/code&gt; isn&apos;t
                      one of the locales returned from{@link java.util.spi.LocaleServiceProvider#getAvailableLocales()getAvailableLocales()}.                    
                </exception>
                <exception>
                    NullPointerException if &lt;code&gt;locale&lt;/code&gt; is null                    
                </exception>
                <return>
                    a date formatter.                    
                </return>
                <see>
                    java.text.DateFormat#getDateInstance(int,java.util.Locale)                    
                </see>
            </javadoc>
            <method name="getDateTimeInstance" type="DateFormat" line="88"/>
            <javadoc line="88">
                Returns a new &lt;code&gt;DateFormat&lt;/code&gt; instance which formats date and time
                  with the given formatting style for the specified locale.                
                <param>
                    dateStyle the given date formatting style.  Either one of{@link java.text.DateFormat#SHORT DateFormat.SHORT},{@link java.text.DateFormat#MEDIUM DateFormat.MEDIUM},{@link java.text.DateFormat#LONG DateFormat.LONG}, or{@link java.text.DateFormat#FULL DateFormat.FULL}.                    
                </param>
                <param>
                    timeStyle the given time formatting style.  Either one of{@link java.text.DateFormat#SHORT DateFormat.SHORT},{@link java.text.DateFormat#MEDIUM DateFormat.MEDIUM},{@link java.text.DateFormat#LONG DateFormat.LONG}, or{@link java.text.DateFormat#FULL DateFormat.FULL}.                    
                </param>
                <param>
                    locale the desired locale.                    
                </param>
                <exception>
                    IllegalArgumentException if &lt;code&gt;dateStyle&lt;/code&gt; or
                      &lt;code&gt;timeStyle&lt;/code&gt; is invalid,
                      or if &lt;code&gt;locale&lt;/code&gt; isn&apos;t
                      one of the locales returned from{@link java.util.spi.LocaleServiceProvider#getAvailableLocales()getAvailableLocales()}.                    
                </exception>
                <exception>
                    NullPointerException if &lt;code&gt;locale&lt;/code&gt; is null                    
                </exception>
                <return>
                    a date/time formatter.                    
                </return>
                <see>
                    java.text.DateFormat#getDateTimeInstance(int,int,java.util.Locale)                    
                </see>
            </javadoc>
        </class>
    </source>