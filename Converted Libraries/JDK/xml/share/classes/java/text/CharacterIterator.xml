<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.text">
        <interface name="CharacterIterator">
            <implements interface="Cloneable"/>
            <javadoc line="44">
                This interface defines a protocol for bidirectional iteration over text.
                  The iterator iterates over a bounded sequence of characters.  Characters
                  are indexed with values beginning with the value returned by getBeginIndex() and
                  continuing through the value returned by getEndIndex()-1.
                  &lt;p&gt;
                  Iterators maintain a current character index, whose valid range is from
                  getBeginIndex() to getEndIndex(); the value getEndIndex() is included to allow
                  handling of zero-length text ranges and for historical reasons.
                  The current index can be retrieved by calling getIndex() and set directly
                  by calling setIndex(), first(), and last().
                  &lt;p&gt;
                  The methods previous() and next() are used for iteration. They return DONE if
                  they would move outside the range from getBeginIndex() to getEndIndex() -1,
                  signaling that the iterator has reached the end of the sequence. DONE is
                  also returned by other methods to indicate that the current index is
                  outside this range.
                  &lt;P&gt;Examples:&lt;P&gt;
                  Traverse the text from start to finish
                  &lt;pre&gt;
                  public void traverseForward(CharacterIterator iter) {
                  for(char c = iter.first(); c != CharacterIterator.DONE; c = iter.next()) {
                  processChar(c);
                  }
                  }
                  &lt;/pre&gt;
                  Traverse the text backwards, from end to start
                  &lt;pre&gt;
                  public void traverseBackward(CharacterIterator iter) {
                  for(char c = iter.last(); c != CharacterIterator.DONE; c = iter.previous()) {
                  processChar(c);
                  }
                  }
                  &lt;/pre&gt;
                  Traverse both forward and backward from a given position in the text.
                  Calls to notBoundary() in this example represents some
                  additional stopping criteria.
                  &lt;pre&gt;
                  public void traverseOut(CharacterIterator iter, int pos) {
                  for (char c = iter.setIndex(pos);
                  c != CharacterIterator.DONE &amp;&amp; notBoundary(c);
                  c = iter.next()) {
                  }
                  int end = iter.getIndex();
                  for (char c = iter.setIndex(pos);
                  c != CharacterIterator.DONE &amp;&amp; notBoundary(c);
                  c = iter.previous()) {
                  }
                  int start = iter.getIndex();
                  processSection(start, end);
                  }
                  &lt;/pre&gt;                
                <see>
                    StringCharacterIterator                    
                </see>
                <see>
                    AttributedCharacterIterator                    
                </see>
            </javadoc>
            <declaration name="DONE" type="char" line="108"/>
            <javadoc line="108">
                Constant that is returned when the iterator has reached either the end
                  or the beginning of the text. The value is &apos;\\uFFFF&apos;, the &quot;not a
                  character&quot; value which should not occur in any valid Unicode string.                
            </javadoc>
            <method name="first" type="char" line="115"/>
            <javadoc line="115">
                Sets the position to getBeginIndex() and returns the character at that
                  position.                
                <return>
                    the first character in the text, or DONE if the text is empty                    
                </return>
                <see>
                    #getBeginIndex()                    
                </see>
            </javadoc>
            <method name="last" type="char" line="123"/>
            <javadoc line="123">
                Sets the position to getEndIndex()-1 (getEndIndex() if the text is empty)
                  and returns the character at that position.                
                <return>
                    the last character in the text, or DONE if the text is empty                    
                </return>
                <see>
                    #getEndIndex()                    
                </see>
            </javadoc>
            <method name="current" type="char" line="131"/>
            <javadoc line="131">
                Gets the character at the current position (as returned by getIndex()).                
                <return>
                    the character at the current position or DONE if the current
                      position is off the end of the text.                    
                </return>
                <see>
                    #getIndex()                    
                </see>
            </javadoc>
            <method name="next" type="char" line="139"/>
            <javadoc line="139">
                Increments the iterator&apos;s index by one and returns the character
                  at the new index.  If the resulting index is greater or equal
                  to getEndIndex(), the current index is reset to getEndIndex() and
                  a value of DONE is returned.                
                <return>
                    the character at the new position or DONE if the new
                      position is off the end of the text range.                    
                </return>
            </javadoc>
            <method name="previous" type="char" line="149"/>
            <javadoc line="149">
                Decrements the iterator&apos;s index by one and returns the character
                  at the new index. If the current index is getBeginIndex(), the index
                  remains at getBeginIndex() and a value of DONE is returned.                
                <return>
                    the character at the new position or DONE if the current
                      position is equal to getBeginIndex().                    
                </return>
            </javadoc>
            <method name="setIndex" type="char" line="158"/>
            <javadoc line="158">
                Sets the position to the specified position in the text and returns that
                  character.                
                <param>
                    position the position within the text.  Valid values range from
                      getBeginIndex() to getEndIndex().  An IllegalArgumentException is thrown
                      if an invalid value is supplied.                    
                </param>
                <return>
                    the character at the specified position or DONE if the specified position is equal to getEndIndex()                    
                </return>
            </javadoc>
            <method name="getBeginIndex" type="int" line="168"/>
            <javadoc line="168">
                Returns the start index of the text.                
                <return>
                    the index at which the text begins.                    
                </return>
            </javadoc>
            <method name="getEndIndex" type="int" line="174"/>
            <javadoc line="174">
                Returns the end index of the text.  This index is the index of the first
                  character following the end of the text.                
                <return>
                    the index after the last character in the text                    
                </return>
            </javadoc>
            <method name="getIndex" type="int" line="181"/>
            <javadoc line="181">
                Returns the current index.                
                <return>
                    the current index.                    
                </return>
            </javadoc>
            <method name="clone" type="Object" line="187"/>
            <javadoc line="187">
                Create a copy of this iterator                
                <return>
                    A copy of this                    
                </return>
            </javadoc>
        </interface>
    </source>