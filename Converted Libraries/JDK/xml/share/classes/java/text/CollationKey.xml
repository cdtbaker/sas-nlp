<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.text">
        <class name="CollationKey" line="2">
            <implements interface="Comparable">
                <type_params>
                    <type_param name="CollationKey"/>
                </type_params>
            </implements>
            <javadoc line="2">
                A &lt;code&gt;CollationKey&lt;/code&gt; represents a &lt;code&gt;String&lt;/code&gt; under the
                  rules of a specific &lt;code&gt;Collator&lt;/code&gt; object. Comparing two
                  &lt;code&gt;CollationKey&lt;/code&gt;s returns the relative order of the
                  &lt;code&gt;String&lt;/code&gt;s they represent. Using &lt;code&gt;CollationKey&lt;/code&gt;s
                  to compare &lt;code&gt;String&lt;/code&gt;s is generally faster than using
                  &lt;code&gt;Collator.compare&lt;/code&gt;. Thus, when the &lt;code&gt;String&lt;/code&gt;s
                  must be compared multiple times, for example when sorting a list
                  of &lt;code&gt;String&lt;/code&gt;s. It&apos;s more efficient to use &lt;code&gt;CollationKey&lt;/code&gt;s.
                  &lt;p&gt;
                  You can not create &lt;code&gt;CollationKey&lt;/code&gt;s directly. Rather,
                  generate them by calling &lt;code&gt;Collator.getCollationKey&lt;/code&gt;.
                  You can only compare &lt;code&gt;CollationKey&lt;/code&gt;s generated from
                  the same &lt;code&gt;Collator&lt;/code&gt; object.
                  &lt;p&gt;
                  Generating a &lt;code&gt;CollationKey&lt;/code&gt; for a &lt;code&gt;String&lt;/code&gt;
                  involves examining the entire &lt;code&gt;String&lt;/code&gt;
                  and converting it to series of bits that can be compared bitwise. This
                  allows fast comparisons once the keys are generated. The cost of generating
                  keys is recouped in faster comparisons when &lt;code&gt;String&lt;/code&gt;s need
                  to be compared many times. On the other hand, the result of a comparison
                  is often determined by the first couple of characters of each &lt;code&gt;String&lt;/code&gt;.
                  &lt;code&gt;Collator.compare&lt;/code&gt; examines only as many characters as it needs which
                  allows it to be faster when doing single comparisons.
                  &lt;p&gt;
                  The following example shows how &lt;code&gt;CollationKey&lt;/code&gt;s might be used
                  to sort a list of &lt;code&gt;String&lt;/code&gt;s.
                  &lt;blockquote&gt;
                  &lt;pre&gt;
                  // Create an array of CollationKeys for the Strings to be sorted.
                  Collator myCollator = Collator.getInstance();
                  CollationKey[] keys = new CollationKey[3];
                  keys[0] = myCollator.getCollationKey(&quot;Tom&quot;);
                  keys[1] = myCollator.getCollationKey(&quot;Dick&quot;);
                  keys[2] = myCollator.getCollationKey(&quot;Harry&quot;);
                  sort( keys );
                  &lt;br&gt;
                  //...
                  &lt;br&gt;
                  // Inside body of sort routine, compare keys this way
                  if( keys[i].compareTo( keys[j] ) &gt; 0 )
                  // swap keys[i] and keys[j]
                  &lt;br&gt;
                  //...
                  &lt;br&gt;
                  // Finally, when we&apos;ve returned from sort.
                  System.out.println( keys[0].getSourceString() );
                  System.out.println( keys[1].getSourceString() );
                  System.out.println( keys[2].getSourceString() );
                  &lt;/pre&gt;
                  &lt;/blockquote&gt;                
                <see>
                    Collator                    
                </see>
                <see>
                    RuleBasedCollator                    
                </see>
                <author>
                    Helena Shih                    
                </author>
            </javadoc>
            <method name="compareTo" type="int" line="58"/>
            <javadoc line="58">
                Compare this CollationKey to the target CollationKey. The collation rules of the
                  Collator object which created these keys are applied. &lt;strong&gt;Note:&lt;/strong&gt;
                  CollationKeys created by different Collators can not be compared.                
                <param>
                    target target CollationKey                    
                </param>
                <return>
                    Returns an integer value. Value is less than zero if this is less
                      than target, value is zero if this and target are equal and value is greater than
                      zero if this is greater than target.                    
                </return>
                <see>
                    java.text.Collator#compare                    
                </see>
            </javadoc>
            <javadoc line="69">
                Returns the String that this CollationKey represents.                
            </javadoc>
            <method name="getSourceString" type="String" line="72"/>
            <method name="toByteArray" type="byte[]" line="75"/>
            <javadoc line="75">
                Converts the CollationKey to a sequence of bits. If two CollationKeys
                  could be legitimately compared, then one could compare the byte arrays
                  for each of those keys to obtain the same result.  Byte arrays are
                  organized most significant byte first.                
            </javadoc>
            <javadoc line="82">
                CollationKey constructor.                
                <param>
                    source - the source string.                    
                </param>
                <exception>
                    NullPointerException if <code>source</code> is null.                    
                </exception>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="CollationKey" type="constructor" line="88">
                <params>
                    <param name="source" type="String"/>
                </params>
                <scope line="89"/>
            </method>
            <declaration name="source" type="String" line="94"/>
        </class>
    </source>