<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.applet">
        <import package="java.awt.Image"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.image.ColorModel"/>
        <import package="java.net.URL"/>
        <import package="java.util.Enumeration"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.util.Iterator"/>
        <interface name="AppletContext">
            <javadoc line="10">
                This interface corresponds to an applet&apos;s environment: the
                  document containing the applet and the other applets in the same
                  document.
                  &lt;p&gt;
                  The methods in this interface can be used by an applet to obtain
                  information about its environment.                
                <author>
                    Arthur van Hoff                    
                </author>
                <since>
                    JDK1.0                    
                </since>
            </javadoc>
            <method name="getAudioClip" type="AudioClip" line="21"/>
            <javadoc line="21">
                Creates an audio clip.                
                <param>
                    url   an absolute URL giving the location of the audio clip.                    
                </param>
                <return>
                    the audio clip at the specified URL.                    
                </return>
            </javadoc>
            <method name="getImage" type="Image" line="27"/>
            <javadoc line="27">
                Returns an &lt;code&gt;Image&lt;/code&gt; object that can then be painted on
                  the screen. The &lt;code&gt;url&lt;/code&gt; argument&lt;code&gt; &lt;/code&gt;that is
                  passed as an argument must specify an absolute URL.
                  &lt;p&gt;
                  This method always returns immediately, whether or not the image
                  exists. When the applet attempts to draw the image on the screen,
                  the data will be loaded. The graphics primitives that draw the
                  image will incrementally paint on the screen.                
                <param>
                    url   an absolute URL giving the location of the image.                    
                </param>
                <return>
                    the image at the specified URL.                    
                </return>
                <see>
                    java.awt.Image                    
                </see>
            </javadoc>
            <method name="getApplet" type="Applet" line="41"/>
            <javadoc line="41">
                Finds and returns the applet in the document represented by this
                  applet context with the given name. The name can be set in the
                  HTML tag by setting the &lt;code&gt;name&lt;/code&gt; attribute.                
                <param>
                    name   an applet name.                    
                </param>
                <return>
                    the applet with the given name, or &lt;code&gt;null&lt;/code&gt; if
                      not found.                    
                </return>
            </javadoc>
            <method name="getApplets" type="Enumeration&lt;Applet&gt;" line="50"/>
            <javadoc line="50">
                Finds all the applets in the document represented by this applet
                  context.                
                <return>
                    an enumeration of all applets in the document represented by
                      this applet context.                    
                </return>
            </javadoc>
            <method name="showDocument" type="void" line="57"/>
            <javadoc line="57">
                Requests that the browser or applet viewer show the Web page
                  indicated by the &lt;code&gt;url&lt;/code&gt; argument. The browser or
                  applet viewer determines which window or frame to display the
                  Web page. This method may be ignored by applet contexts that
                  are not browsers.                
                <param>
                    url   an absolute URL giving the location of the document.                    
                </param>
            </javadoc>
            <method name="showDocument" type="void" line="66"/>
            <javadoc line="66">
                Requests that the browser or applet viewer show the Web page
                  indicated by the &lt;code&gt;url&lt;/code&gt; argument. The
                  &lt;code&gt;target&lt;/code&gt; argument indicates in which HTML frame the
                  document is to be displayed.
                  The target argument is interpreted as follows:
                  &lt;p&gt;
                  &lt;center&gt;&lt;table border=&quot;3&quot; summary=&quot;Target arguments and their descriptions&quot;&gt;
                  &lt;tr&gt;&lt;th&gt;Target Argument&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;&lt;code&gt;&quot;_self&quot;&lt;/code&gt;  &lt;td&gt;Show in the window and frame that
                  contain the applet.&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;&lt;code&gt;&quot;_parent&quot;&lt;/code&gt;&lt;td&gt;Show in the applet&apos;s parent frame. If
                  the applet&apos;s frame has no parent frame,
                  acts the same as &quot;_self&quot;.&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;&lt;code&gt;&quot;_top&quot;&lt;/code&gt;   &lt;td&gt;Show in the top-level frame of the applet&apos;s
                  window. If the applet&apos;s frame is the
                  top-level frame, acts the same as &quot;_self&quot;.&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;&lt;code&gt;&quot;_blank&quot;&lt;/code&gt; &lt;td&gt;Show in a new, unnamed
                  top-level window.&lt;/tr&gt;
                  &lt;tr&gt;&lt;td&gt;&lt;i&gt;name&lt;/i&gt;&lt;td&gt;Show in the frame or window named &lt;i&gt;name&lt;/i&gt;. If
                  a target named &lt;i&gt;name&lt;/i&gt; does not already exist, a
                  new top-level window with the specified name is created,
                  and the document is shown there.&lt;/tr&gt;
                  &lt;/table&gt; &lt;/center&gt;
                  &lt;p&gt;
                  An applet viewer or browser is free to ignore &lt;code&gt;showDocument&lt;/code&gt;.                
                <param>
                    url   an absolute URL giving the location of the document.                    
                </param>
                <param>
                    target   a &lt;code&gt;String&lt;/code&gt; indicating where to display
                      the page.                    
                </param>
            </javadoc>
            <method name="showStatus" type="void" line="97"/>
            <javadoc line="97">
                Requests that the argument string be displayed in the
                  &quot;status window&quot;. Many browsers and applet viewers
                  provide such a window, where the application can inform users of
                  its current state.                
                <param>
                    status   a string to display in the status window.                    
                </param>
            </javadoc>
            <method name="setStream" type="void" line="105"/>
            <javadoc line="105">
                Associates the specified stream with the specified key in this
                  applet context. If the applet context previously contained a mapping
                  for this key, the old value is replaced.
                  &lt;p&gt;
                  For security reasons, mapping of streams and keys exists for each
                  codebase. In other words, applet from one codebase cannot access
                  the streams created by an applet from a different codebase
                  &lt;p&gt;                
                <param>
                    key key with which the specified value is to be associated.                    
                </param>
                <param>
                    stream stream to be associated with the specified key. If this
                      parameter is &lt;code&gt;null&lt;/code&gt;, the specified key is removed
                      in this applet context.                    
                </param>
                <throws>
                    &lt;code&gt;IOException&lt;/code&gt; if the stream size exceeds a certain
                      size limit. Size limit is decided by the implementor of this
                      interface.                    
                </throws>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="getStream" type="InputStream" line="124"/>
            <javadoc line="124">
                Returns the stream to which specified key is associated within this
                  applet context. Returns &lt;tt&gt;null&lt;/tt&gt; if the applet context contains
                  no stream for this key.
                  &lt;p&gt;
                  For security reasons, mapping of streams and keys exists for each
                  codebase. In other words, applet from one codebase cannot access
                  the streams created by an applet from a different codebase
                  &lt;p&gt;                
                <return>
                    the stream to which this applet context maps the key                    
                </return>
                <param>
                    key key whose associated stream is to be returned.                    
                </param>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="getStreamKeys" type="Iterator&lt;String&gt;" line="138"/>
            <javadoc line="138">
                Finds all the keys of the streams in this applet context.
                  &lt;p&gt;
                  For security reasons, mapping of streams and keys exists for each
                  codebase. In other words, applet from one codebase cannot access
                  the streams created by an applet from a different codebase
                  &lt;p&gt;                
                <return>
                    an Iterator of all the names of the streams in this applet
                      context.                    
                </return>
                <since>
                    1.4                    
                </since>
            </javadoc>
        </interface>
    </source>