<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.rmi.activation">
        <class name="ActivationGroup_Stub" line="28">
            <extends class="java.rmi.server.RemoteStub"/>
            <implements interface="java.rmi.activation.ActivationInstantiator"/>
            <implements interface="java.rmi.Remote"/>
            <javadoc line="28">
                &lt;code&gt;ActivationGroup_Stub&lt;/code&gt; is a stub class
                  for the subclasses of &lt;code&gt;java.rmi.activation.ActivationGroup&lt;/code&gt;
                  that are exported as a &lt;code&gt;java.rmi.server.UnicastRemoteObject&lt;/code&gt;.                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <javadoc line="39">
                Constructs a stub for the &lt;code&gt;ActivationGroup&lt;/code&gt; class.  It
                  invokes the superclass &lt;code&gt;RemoteStub(RemoteRef)&lt;/code&gt;
                  constructor with its argument, &lt;code&gt;ref&lt;/code&gt;.                
                <param>
                    ref a remote ref                    
                </param>
            </javadoc>
            <method name="ActivationGroup_Stub" type="constructor" line="46">
                <params>
                    <param name="ref" type="java.rmi.server.RemoteRef"/>
                </params>
            </method>
            <javadoc line="49">
                Stub method for &lt;code&gt;ActivationGroup.newInstance&lt;/code&gt;.  Invokes
                  the &lt;code&gt;invoke&lt;/code&gt; method on this instance&apos;s
                  &lt;code&gt;RemoteObject.ref&lt;/code&gt; field, with &lt;code&gt;this&lt;/code&gt; as the
                  first argument, a two-element &lt;code&gt;Object[]&lt;/code&gt; as the second
                  argument (with &lt;code&gt;id&lt;/code&gt; as the first element and
                  &lt;code&gt;desc&lt;/code&gt; as the second element), and -5274445189091581345L
                  as the third argument, and returns the result.  If that invocation
                  throws a &lt;code&gt;RuntimeException&lt;/code&gt;, &lt;code&gt;RemoteException&lt;/code&gt;,
                  or an &lt;code&gt;ActivationException&lt;/code&gt;, then that exception is
                  thrown to the caller.  If that invocation throws any other
                  &lt;code&gt;java.lang.Exception&lt;/code&gt;, then a
                  &lt;code&gt;java.rmi.UnexpectedException&lt;/code&gt; is thrown to the caller
                  with the original exception as the cause.                
                <param>
                    id an activation identifier                    
                </param>
                <param>
                    desc an activation descriptor                    
                </param>
                <return>
                    the result of the invocation                    
                </return>
                <throws>
                    java.rmi.RemoteException if invocation results in
                      a &lt;code&gt;RemoteException&lt;/code&gt;                    
                </throws>
                <throws>
                    java.rmi.activation.ActivationException if invocation
                      results in an &lt;code&gt;ActivationException&lt;/code&gt;                    
                </throws>
            </javadoc>
            <method name="newInstance" type="java.rmi.MarshalledObject" line="77">
                <params>
                    <param name="id" type="java.rmi.activation.ActivationID"/>
                    <param name="desc" type="java.rmi.activation.ActivationDesc"/>
                </params>
            </method>
        </class>
    </source>