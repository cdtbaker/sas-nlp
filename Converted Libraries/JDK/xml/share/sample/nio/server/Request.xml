<?xml version="1.0" encoding="UTF-8"?>
    <source package="">
        <import package="java.net"/>
        <import package="java.nio"/>
        <import package="java.nio.charset"/>
        <import package="java.util.regex"/>
        <class name="Request" line="37">
            <comment line="106">
                The expected message format is first compiled into a pattern,
                 and is then compared against the inbound character buffer to
                 determine if there is a match.  This convienently tokenizes
                 our request into usable pieces.
                
                 This uses Matcher &quot;expression capture groups&quot; to tokenize
                 requests like:
                
                     GET dirfile HTTP1.1
                     Host: hostname
                
                 into:
                
                     group[1] = &quot;GET&quot;
                     group[2] = &quot;dirfile&quot;
                     group[3] = &quot;1.1&quot;
                     group[4] = &quot;hostname&quot;
                
                 The text in between the parens are used to captured the regexp text.                
            </comment>
            <javadoc line="37">
                An encapsulation of the request received.
                  &lt;P&gt;
                  The static method parse() is responsible for creating this
                  object.                
                <author>
                    Mark Reinhold                    
                </author>
                <author>
                    Brad R. Wetmore                    
                </author>
            </javadoc>
            <class name="Action" line="48">
                <javadoc line="48">
                    A helper class for parsing HTTP command actions.                    
                </javadoc>
                <declaration name="name" type="String" line="53"/>
                <method name="Action" type="constructor" line="54">
                    <params>
                        <param name="name" type="String"/>
                    </params>
                </method>
                <method name="toString" type="String" line="55"/>
                <declaration name="GET" type="Action" line="57"/>
                <declaration name="PUT" type="Action" line="58"/>
                <declaration name="POST" type="Action" line="59"/>
                <declaration name="HEAD" type="Action" line="60"/>
                <method name="parse" type="Action" line="62">
                    <params>
                        <param name="s" type="String"/>
                    </params>
                </method>
            </class>
            <declaration name="action" type="Action" line="75"/>
            <declaration name="version" type="String" line="76"/>
            <declaration name="uri" type="URI" line="77"/>
            <method name="action" type="Action" line="79"/>
            <method name="version" type="String" line="80"/>
            <method name="uri" type="URI" line="81"/>
            <method name="Request" type="constructor" line="83">
                <params>
                    <param name="a" type="Action"/>
                    <param name="v" type="String"/>
                    <param name="u" type="URI"/>
                </params>
            </method>
            <method name="toString" type="String" line="89"/>
            <method name="isComplete" type="boolean" line="93">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                </params>
                <declaration name="p" type="int" line="94"/>
            </method>
            <declaration name="ascii" type="Charset" line="103"/>
            <declaration name="requestPattern" type="Pattern" line="126"/>
            <method name="parse" type="Request" line="131">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                </params>
                <declaration name="cb" type="CharBuffer" line="133"/>
                <declaration name="m" type="Matcher" line="134"/>
                <declaration name="a" type="Action" line="137"/>
                <scope line="138"/>
                <scope line="140"/>
                <declaration name="u" type="URI" line="143"/>
                <scope line="144"/>
                <scope line="148"/>
            </method>
        </class>
    </source>