<?xml version="1.0" encoding="UTF-8"?>
    <source package="">
        <import package="java.nio.file"/>
        <import package="java.nio.file.attribute"/>
        <import package="java.nio.file.attribute.PosixFilePermission"/>
        <import package="java.nio.file.FileVisitResult"/>
        <import package="java.io.IOException"/>
        <import package="java.util"/>
        <class name="Chmod" line="7">
            <javadoc line="7">
                Sample code that changes the permissions of files in a similar manner to the
                  chmod(1) program.                
            </javadoc>
            <javadoc line="12">
                Compiles a list of one or more &lt;em&gt;symbolic mode expressions&lt;/em&gt; that
                  may be used to change a set of file permissions. This method is
                  intended for use where file permissions are required to be changed in
                  a manner similar to the UNIX &lt;i&gt;chmod&lt;/i&gt; program.
                  &lt;p&gt; The {@code exprs} parameter is a comma separated list of expressions
                  where each takes the form:
                  &lt;blockquote&gt;
                  &lt;i&gt;who operator&lt;/i&gt; [&lt;i&gt;permissions&lt;/i&gt;]
                  &lt;/blockquote&gt;
                  where &lt;i&gt;who&lt;/i&gt; is one or more of the characters {@code &apos;u&apos;}, {@code &apos;g&apos;},{@code &apos;o&apos;}, or {@code &apos;a&apos;} meaning the owner (user), group, others, or
                  all (owner, group, and others) respectively.
                  &lt;p&gt; &lt;i&gt;operator&lt;/i&gt; is the character {@code &apos;+&apos;}, {@code &apos;-&apos;}, or {@code&apos;=&apos;} signifying how permissions are to be changed. {@code &apos;+&apos;} means the
                  permissions are added, {@code &apos;-&apos;} means the permissions are removed, and{@code &apos;=&apos;} means the permissions are assigned absolutely.
                  &lt;p&gt; &lt;i&gt;permissions&lt;/i&gt; is a sequence of zero or more of the following:{@code &apos;r&apos;} for read permission, {@code &apos;w&apos;} for write permission, and{@code &apos;x&apos;} for execute permission. If &lt;i&gt;permissions&lt;/i&gt; is omitted
                  when assigned absolutely, then the permissions are cleared for
                  the owner, group, or others as identified by &lt;i&gt;who&lt;/i&gt;. When omitted
                  when adding or removing then the expression is ignored.
                  &lt;p&gt; The following examples demonstrate possible values for the {@codeexprs} parameter:
                  &lt;table border=&quot;0&quot;&gt;
                  &lt;tr&gt;
                  &lt;td&gt; {@code u=rw} &lt;/td&gt;
                  &lt;td&gt; Sets the owner permissions to be read and write. &lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt; {@code ug+w} &lt;/td&gt;
                  &lt;td&gt; Sets the owner write and group write permissions. &lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt; {@code u+w,o-rwx} &lt;/td&gt;
                  &lt;td&gt; Sets the owner write, and removes the others read, others write
                  and others execute permissions. &lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt; {@code o=} &lt;/td&gt;
                  &lt;td&gt; Sets the others permission to none (others read, others write and
                  others execute permissions are removed if set) &lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;/table&gt;                
                <param>
                    exprsList of one or more <em>symbolic mode expressions</em>                    
                </param>
                <return>
                    A {@code Changer} that may be used to changer a set of
                      file permissions                    
                </return>
                <throws>
                    IllegalArgumentExceptionIf the value of the {@code exprs} parameter is invalid                    
                </throws>
            </javadoc>
            <method name="compile" type="Changer" line="56">
                <params>
                    <param name="exprs" type="String"/>
                </params>
                <declaration name="toAdd" type="Set&lt;PosixFilePermission&gt;" line="58"/>
                <declaration name="toRemove" type="Set&lt;PosixFilePermission&gt;" line="59"/>
                <scope line="60">
                    <declaration name="pos" type="int" line="62"/>
                    <declaration name="u" type="boolean" line="63"/>
                    <declaration name="g" type="boolean" line="64"/>
                    <declaration name="o" type="boolean" line="65"/>
                    <declaration name="done" type="boolean" line="66"/>
                    <scope line="67"/>
                    <declaration name="op" type="char" line="90"/>
                    <declaration name="mask" type="String" line="91"/>
                    <declaration name="add" type="boolean" line="92"/>
                    <declaration name="remove" type="boolean" line="93"/>
                    <declaration name="assign" type="boolean" line="94"/>
                    <scope line="96"/>
                    <declaration name="r" type="boolean" line="101"/>
                    <declaration name="w" type="boolean" line="102"/>
                    <declaration name="x" type="boolean" line="103"/>
                    <scope line="104"/>
                    <scope line="119">
                        <scope line="120"/>
                        <scope line="125"/>
                        <scope line="130"/>
                    </scope>
                    <scope line="136">
                        <scope line="137"/>
                        <scope line="142"/>
                        <scope line="147"/>
                    </scope>
                    <scope line="153">
                        <scope line="154"/>
                        <scope line="162"/>
                        <scope line="170"/>
                    </scope>
                </scope>
                <anonymous_class line="180">
                    <method name="change" type="Set<PosixFilePermission>" line="181">
                        <params>
                            <param name="perms" type="Set<PosixFilePermission>"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <interface name="Changer">
                <javadoc line="189">
                    A task that &lt;i&gt;changes&lt;/i&gt; a set of {@link PosixFilePermission} elements.                    
                </javadoc>
                <method name="change" type="Set<PosixFilePermission>" line="193"/>
                <javadoc line="193">
                    Applies the changes to the given set of permissions.                    
                    <param>
                        permsThe set of permissions to change                        
                    </param>
                    <return>
                        The {@code perms} parameter                        
                    </return>
                </javadoc>
            </interface>
            <javadoc line="200">
                Changes the permissions of the file using the given Changer.                
            </javadoc>
            <method name="chmod" type="void" line="203">
                <params>
                    <param name="file" type="Path"/>
                    <param name="changer" type="Changer"/>
                </params>
                <scope line="204">
                    <declaration name="perms" type="Set&lt;PosixFilePermission&gt;" line="205"/>
                </scope>
                <scope line="208"/>
            </method>
            <class name="TreeVisitor" line="212">
                <implements interface="FileVisitor">
                    <type_params>
                        <type_param name="Path"/>
                    </type_params>
                </implements>
                <javadoc line="212">
                    Changes the permission of each file and directory visited                    
                </javadoc>
                <declaration name="changer" type="Changer" line="216"/>
                <method name="TreeVisitor" type="constructor" line="217">
                    <params>
                        <param name="changer" type="Changer"/>
                    </params>
                </method>
                <method name="preVisitDirectory" type="FileVisitResult" line="220">
                    <params>
                        <param name="dir" type="Path"/>
                        <param name="attrs" type="BasicFileAttributes"/>
                    </params>
                </method>
                <method name="visitFile" type="FileVisitResult" line="224">
                    <params>
                        <param name="file" type="Path"/>
                        <param name="attrs" type="BasicFileAttributes"/>
                    </params>
                </method>
                <method name="postVisitDirectory" type="FileVisitResult" line="228">
                    <params>
                        <param name="dir" type="Path"/>
                        <param name="exc" type="IOException"/>
                    </params>
                </method>
                <method name="visitFileFailed" type="FileVisitResult" line="232">
                    <params>
                        <param name="file" type="Path"/>
                        <param name="exc" type="IOException"/>
                    </params>
                </method>
            </class>
            <method name="usage" type="void" line="237"/>
            <method name="main" type="void" line="241">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <declaration name="argi" type="int" line="243"/>
                <declaration name="maxDepth" type="int" line="244"/>
                <scope line="245"/>
                <declaration name="changer" type="Changer" line="250"/>
                <declaration name="visitor" type="TreeVisitor" line="251"/>
                <declaration name="opts" type="Set&lt;FileVisitOption&gt;" line="252"/>
                <scope line="253">
                    <declaration name="file" type="Path" line="254"/>
                </scope>
            </method>
        </class>
    </source>