<?xml version="1.0" encoding="UTF-8"?>
    <source package="">
        <import package="java.nio.file"/>
        <import package="java.nio.file.StandardWatchEventKinds"/>
        <import package="java.nio.file.LinkOption"/>
        <import package="java.nio.file.attribute"/>
        <import package="java.io.IOException"/>
        <class name="WatchDir" line="38">
            <javadoc line="38">
                Example to watch a directory (or tree) for changes to files.                
            </javadoc>
            <declaration name="watcher" type="WatchService" line="44"/>
            <declaration name="recursive" type="boolean" line="45"/>
            <declaration name="trace" type="boolean" line="46"/>
            <declaration name="count" type="int" line="47"/>
            <method name="cast" type="WatchEvent<T>" line="50">
                <params>
                    <param name="event" type="WatchEvent<?>"/>
                </params>
            </method>
            <javadoc line="54">
                Register the given directory with the WatchService                
            </javadoc>
            <method name="register" type="void" line="57">
                <params>
                    <param name="dir" type="Path"/>
                </params>
                <declaration name="key" type="WatchKey" line="58"/>
            </method>
            <javadoc line="64">
                Register the given directory, and all its sub-directories, with the
                  WatchService.                
            </javadoc>
            <method name="registerAll" type="void" line="68">
                <params>
                    <param name="start" type="Path"/>
                </params>
                <comment line="69">
                    register directory and sub-directories                    
                </comment>
                <anonymous_class line="70">
                    <method name="preVisitDirectory" type="FileVisitResult" line="74">
                        <params>
                            <param name="dir" type="Path"/>
                            <param name="attrs" type="BasicFileAttributes"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="81">
                Creates a WatchService and registers the given directory                
            </javadoc>
            <method name="WatchDir" type="constructor" line="84">
                <params>
                    <param name="dir" type="Path"/>
                    <param name="recursive" type="boolean"/>
                </params>
                <comment line="96">
                    enable trace after initial registration                    
                </comment>
                <scope line="88"/>
                <scope line="92"/>
            </method>
            <javadoc line="100">
                Process all events for keys queued to the watcher                
            </javadoc>
            <method name="processEvents" type="void" line="103">
                <comment line="106">
                    wait for key to be signalled                    
                </comment>
                <comment line="117">
                    TBD - provide example of how OVERFLOW event is handled                    
                </comment>
                <comment line="122">
                    Context for directory entry event is the file name of entry                    
                </comment>
                <comment line="127">
                    print out event                    
                </comment>
                <comment line="130">
                    if directory is created, and watching recursively, then                    
                </comment>
                <comment line="131">
                    register it and its sub-directories                    
                </comment>
                <comment line="138">
                    ignore to keep sample readbale                    
                </comment>
                <comment line="143">
                    reset key                    
                </comment>
                <comment line="146">
                    directory no longer accessible                    
                </comment>
                <scope line="104">
                    <declaration name="key" type="WatchKey" line="107"/>
                    <scope line="108"/>
                    <scope line="110"/>
                    <scope line="114">
                        <declaration name="kind" type="WatchEvent.Kind" line="115"/>
                        <scope line="118"/>
                        <declaration name="ev" type="WatchEvent&lt;Path&gt;" line="123"/>
                        <declaration name="name" type="Path" line="124"/>
                        <declaration name="child" type="Path" line="125"/>
                        <scope line="132">
                            <scope line="133">
                                <scope line="134"/>
                            </scope>
                            <scope line="137"/>
                        </scope>
                    </scope>
                    <declaration name="valid" type="boolean" line="144"/>
                    <scope line="145"/>
                </scope>
            </method>
            <method name="usage" type="void" line="154"/>
            <method name="main" type="void" line="159">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <comment line="160">
                    parse arguments                    
                </comment>
                <comment line="172">
                    register directory and process its events                    
                </comment>
                <declaration name="recursive" type="boolean" line="163"/>
                <declaration name="dirArg" type="int" line="164"/>
                <scope line="165"/>
                <declaration name="dir" type="Path" line="173"/>
            </method>
        </class>
    </source>