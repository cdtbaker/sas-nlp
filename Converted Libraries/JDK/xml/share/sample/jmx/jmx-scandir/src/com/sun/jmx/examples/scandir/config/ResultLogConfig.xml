<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.examples.scandir.config">
        <import package="java.util.Arrays"/>
        <import package="javax.xml.bind.annotation.XmlElement"/>
        <import package="javax.xml.bind.annotation.XmlRootElement"/>
        <class name="ResultLogConfig" line="38">
            <comment line="54">
                A logger for this class.
                
                 private static final Logger LOG =
                        Logger.getLogger(ResultLogConfig.class.getName());                
            </comment>
            <javadoc line="38">
                The &lt;code&gt;ResultLogConfig&lt;/code&gt; Java Bean is used to model
                  the initial configuration of the {@link com.sun.jmx.examples.scandir.ResultLogManagerMXBean}.
                  &lt;p&gt;
                  This class is annotated for XML binding.
                  &lt;/p&gt;                
                <author>
                    Sun Microsystems, 2006 - All rights reserved.                    
                </author>
            </javadoc>
            <declaration name="logFileName" type="String" line="59"/>
            <javadoc line="59">
                The path to the result log file. {@code null} means that logging to
                  file is disabled.                
            </javadoc>
            <declaration name="logFileMaxRecords" type="long" line="65"/>
            <javadoc line="65">
                Maximum number of record that will be logged in the log file before
                  switching to a new log file.                
            </javadoc>
            <declaration name="memoryMaxRecords" type="int" line="71"/>
            <javadoc line="71">
                The maximum number of records that can be contained in the memory log.
                  When this number is reached, the memory log drops its eldest record
                  to make way for the new one.                
            </javadoc>
            <javadoc line="78">
                Creates a new instance of ResultLogConfig                
            </javadoc>
            <method name="ResultLogConfig" type="constructor" line="81"/>
            <javadoc line="84">
                Gets the path to the result log file. {@code null} means that logging to
                  file is disabled.                
                <return>
                    the path to the result log file.                    
                </return>
            </javadoc>
            <method name="getLogFileName" type="String" line="90"/>
            <javadoc line="94">
                Sets the path to the result log file. {@code null} means that
                  logging to file is disabled.                
                <param>
                    logFileName the path to the result log file.                    
                </param>
            </javadoc>
            <method name="setLogFileName" type="void" line="99">
                <params>
                    <param name="logFileName" type="String"/>
                </params>
            </method>
            <javadoc line="103">
                Gets the maximum number of record that will be logged in the log file
                  before switching to a new log file.
                  A 0 or negative value means no limit.                
                <return>
                    the maximum number of record that will be logged in the log file.                    
                </return>
            </javadoc>
            <method name="getLogFileMaxRecords" type="long" line="110"/>
            <javadoc line="114">
                Sets the maximum number of record that will be logged in the log file
                  before switching to a new log file.
                  A 0 or negative value means no limit.                
                <param>
                    logFileMaxRecords the maximum number of record that will be
                      logged in the log file.                    
                </param>
            </javadoc>
            <method name="setLogFileMaxRecords" type="void" line="121">
                <params>
                    <param name="logFileMaxRecords" type="long"/>
                </params>
            </method>
            <javadoc line="125">
                Gets the maximum number of records that can be contained in the memory
                  log.
                  When this number is reached, the memory log drops its eldest record
                  to make way for the new one.                
                <return>
                    the maximum number of records that can be contained in the
                      memory log.                    
                </return>
            </javadoc>
            <method name="getMemoryMaxRecords" type="int" line="134"/>
            <javadoc line="138">
                Sets the maximum number of records that can be contained in the memory
                  log.
                  When this number is reached, the memory log drops its eldest record
                  to make way for the new one.                
                <param>
                    memoryMaxRecords the maximum number of records that can be
                      contained in the memory log.                    
                </param>
            </javadoc>
            <method name="setMemoryMaxRecords" type="void" line="146">
                <params>
                    <param name="memoryMaxRecords" type="int"/>
                </params>
            </method>
            <method name="toArray" type="Object[]" line="150">
                <declaration name="thisconfig" type="Object[]" line="151"/>
            </method>
            <method name="equals" type="boolean" line="158">
                <params>
                    <param name="o" type="Object"/>
                </params>
                <declaration name="other" type="ResultLogConfig" line="161"/>
            </method>
            <method name="hashCode" type="int" line="166"/>
        </class>
    </source>