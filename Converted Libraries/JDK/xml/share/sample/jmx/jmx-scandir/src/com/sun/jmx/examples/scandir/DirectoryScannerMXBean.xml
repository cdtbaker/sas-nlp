<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.examples.scandir">
        <import package="com.sun.jmx.examples.scandir.ScanManagerMXBean.ScanState"/>
        <import package="com.sun.jmx.examples.scandir.config.DirectoryScannerConfig"/>
        <import package="java.io.IOException"/>
        <import package="javax.management.InstanceNotFoundException"/>
        <interface name="DirectoryScannerMXBean">
            <javadoc line="39">
                A &lt;code&gt;DirectoryScannerMXBean&lt;/code&gt; is an MBean that
                  scans a file system starting at a given root directory,
                  and then looks for files that match a given criteria.
                  &lt;p&gt;
                  When such a file is found, the &lt;code&gt;DirectoryScannerMXBean&lt;/code&gt; takes
                  the actions for which it was configured: see {@link #scan scan()}.
                  &lt;p&gt;
                  &lt;code&gt;DirectoryScannerMXBeans&lt;/code&gt; are created, initialized, and
                  registered by the {@link ScanManagerMXBean}.
                  The {@link ScanManagerMXBean} will also schedule and run them in
                  background by calling their {@link #scan} method.
                  &lt;/p&gt;                
                <author>
                    Sun Microsystems, 2006 - All rights reserved.                    
                </author>
            </javadoc>
            <method name="getState" type="ScanState" line="55"/>
            <javadoc line="55">
                Get The {@link DirectoryScanner} state.                
                <return>
                    the current state of the &lt;code&gt;DirectoryScanner&lt;/code&gt;.                    
                </return>
                <throws>
                    IOException A connection problem occurred when accessing
                      the underlying resource.                    
                </throws>
                <throws>
                    InstanceNotFoundException The underlying MBean is not
                      registered in the MBeanServer.                    
                </throws>
            </javadoc>
            <method name="stop" type="void" line="66"/>
            <javadoc line="66">
                Stops the current scan if {@link ScanState#RUNNING running}.
                  After this method completes the state of the application will
                  be {@link ScanState#STOPPED STOPPED}.                
                <throws>
                    IOException A connection problem occurred when accessing
                      the underlying resource.                    
                </throws>
                <throws>
                    InstanceNotFoundException The underlying MBean is not
                      registered in the MBeanServer.                    
                </throws>
            </javadoc>
            <method name="scan" type="void" line="78"/>
            <javadoc line="78">
                Scans the file system starting at the specified {@link #getRootDirectoryroot directory}.
                  &lt;p&gt;If a file that matches this &lt;code&gt;DirectoryScannerMXBean&lt;/code&gt;{@link #getConfiguration} criteria is found,
                  the &lt;code&gt;DirectoryScannerMXBean&lt;/code&gt; takes the {@link DirectoryScannerConfig#getActions() actions} for which
                  it was {@link #getConfiguration configured}: emit a notification,
                  &lt;i&gt;and or&lt;/i&gt; log a {@link com.sun.jmx.examples.scandir.config.ResultRecord} for this file,
                  &lt;i&gt;and or&lt;/i&gt; delete that file.
                  &lt;/p&gt;
                  &lt;p&gt;
                  The code that would actually delete the file is commented out - so that
                  nothing valuable is lost if this example is run by mistake on the wrong
                  set of directories.
                  &lt;/p&gt;
                  &lt;p&gt;This method returns only when the directory scan is completed, or
                  if it was {@link #stop stopped} by another thread.
                  &lt;/p&gt;                
                <throws>
                    IllegalStateException if already {@link ScanState#RUNNING}                    
                </throws>
                <throws>
                    IOException A connection problem occurred when accessing
                      the underlying resource.                    
                </throws>
                <throws>
                    InstanceNotFoundException The underlying MBean is not
                      registered in the MBeanServer.                    
                </throws>
            </javadoc>
            <method name="getRootDirectory" type="String" line="107"/>
            <javadoc line="107">
                Gets the root directory at which this &lt;code&gt;DirectoryScannerMXBean&lt;/code&gt;
                  will start scanning the file system.
                  &lt;p&gt;
                  This is a shortcut to {@link #getConfigurationgetConfiguration()}.{@link DirectoryScannerConfig#getRootDirectorygetRootDirectory()}.
                  &lt;/p&gt;                
                <return>
                    This &lt;code&gt;DirectoryScannerMXBean&lt;/code&gt; root directory.                    
                </return>
                <throws>
                    IOException A connection problem occurred when accessing
                      the underlying resource.                    
                </throws>
                <throws>
                    InstanceNotFoundException The underlying MBean is not
                      registered in the MBeanServer.                    
                </throws>
            </javadoc>
            <method name="getConfiguration" type="DirectoryScannerConfig" line="125"/>
            <javadoc line="125">
                The configuration data from which this {@link DirectoryScanner} was
                  created.
                  &lt;p&gt;
                  You cannot change this configuration here. You can however{@link ScanDirConfigMXBean#setConfiguration modify} the{@link ScanDirConfigMXBean} configuration, and ask the{@link ScanManagerMXBean} to {@link ScanManagerMXBean#applyConfigurationapply} it. This will get all &lt;code&gt;DirectoryScannerMXBean&lt;/code&gt;
                  replaced by new MBeans created from the modified configuration.
                  &lt;/p&gt;                
                <return>
                    This &lt;code&gt;DirectoryScannerMXBean&lt;/code&gt; configuration data.                    
                </return>
                <throws>
                    IOException A connection problem occurred when accessing
                      the underlying resource.                    
                </throws>
                <throws>
                    InstanceNotFoundException The underlying MBean is not
                      registered in the MBeanServer.                    
                </throws>
            </javadoc>
            <method name="getCurrentScanInfo" type="String" line="146"/>
            <javadoc line="146">
                A short string describing what&apos;s happening in current/latest scan.                
                <return>
                    a short info string.                    
                </return>
                <throws>
                    IOException A connection problem occurred when accessing
                      the underlying resource.                    
                </throws>
                <throws>
                    InstanceNotFoundException The underlying MBean is not
                      registered in the MBeanServer.                    
                </throws>
            </javadoc>
        </interface>
    </source>