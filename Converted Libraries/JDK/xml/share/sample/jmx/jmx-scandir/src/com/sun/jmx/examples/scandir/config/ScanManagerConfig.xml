<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.examples.scandir.config">
        <import package="java.util.Arrays"/>
        <import package="java.util.LinkedHashMap"/>
        <import package="java.util.Map"/>
        <import package="javax.xml.bind.annotation.XmlAttribute"/>
        <import package="javax.xml.bind.annotation.XmlElement"/>
        <import package="javax.xml.bind.annotation.XmlElementRef"/>
        <import package="javax.xml.bind.annotation.XmlElementWrapper"/>
        <import package="javax.xml.bind.annotation.XmlRootElement"/>
        <class name="ScanManagerConfig" line="44">
            <comment line="66">
                A logger for this class
                
                 private static final Logger LOG =
                        Logger.getLogger(ScanManagerConfig.class.getName());                
            </comment>
            <comment line="119">
                Our private constructor...                
            </comment>
            <comment line="129">
                Creates an array for deep equality.                
            </comment>
            <comment line="137">
                equals                
            </comment>
            <comment line="244">
                XML value of  this object.                
            </comment>
            <comment line="288">
                Copy by XML cloning, then change the name.                
            </comment>
            <javadoc line="44">
                The &lt;code&gt;ScanManagerConfig&lt;/code&gt; Java Bean is used to model
                  the configuration of the {@link com.sun.jmx.examples.scandir.ScanManagerMXBean ScanManagerMXBean}.
                  The {@link com.sun.jmx.examples.scandir.ScanManagerMXBean ScanManagerMXBean} will
                  use this configuration to initialize the {@link com.sun.jmx.examples.scandir.ResultLogManagerMXBean ResultLogManagerMXBean}and create the {@link com.sun.jmx.examples.scandir.DirectoryScannerMXBean DirectoryScannerMXBeans}&lt;p&gt;
                  This class is annotated for XML binding.
                  &lt;/p&gt;                
                <author>
                    Sun Microsystems, 2006 - All rights reserved.                    
                </author>
            </javadoc>
            <declaration name="directoryScanners" type="Map&amp;lt;String,DirectoryScannerConfig&amp;gt;" line="70"/>
            <javadoc line="70">
                A set of DirectoryScannerConfig objects indexed by their names.                
            </javadoc>
            <declaration name="initialResultLogConfig" type="ResultLogConfig" line="75"/>
            <javadoc line="75">
                The initial Result Log configuration.                
            </javadoc>
            <declaration name="name" type="String" line="80"/>
            <javadoc line="80">
                Holds value of property name. The name of the configuration
                  usually corresponds to
                  the value of the {@code name=} key of the {@code ObjectName}of the {@link com.sun.jmx.examples.scandir.ScanDirConfigMXBeanScanDirConfigMXBean} which owns this configuration.                
            </javadoc>
            <javadoc line="90">
                Creates a new instance of ScanManagerConfig.
                  &lt;p&gt;You should not use this constructor directly, but use{@link #ScanManagerConfig(String)} instead.
                  &lt;/p&gt;
                  &lt;p&gt;This constructor is tagged deprecated so that the compiler
                  will generate a warning if it is used by mistake.
                  &lt;/p&gt;                
                <deprecated>
                    Use {@link #ScanManagerConfig(String)} instead. This
                      constructor is used through reflection by the XML
                      binding framework.                    
                </deprecated>
            </javadoc>
            <method name="ScanManagerConfig" type="constructor" line="102"/>
            <javadoc line="106">
                Creates a new instance of ScanManagerConfig.                
                <param>
                    name The name of the configuration which usually corresponds to
                      the value of the {@code name=} key of the {@code ObjectName}of the {@link com.sun.jmx.examples.scandir.ScanDirConfigMXBeanScanDirConfigMXBean} which owns this configuration.                    
                </param>
            </javadoc>
            <method name="ScanManagerConfig" type="constructor" line="114">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="ScanManagerConfig" type="constructor" line="119">
                <params>
                    <param name="name" type="String"/>
                    <param name="allowsNull" type="boolean"/>
                </params>
            </method>
            <method name="toArray" type="Object[]" line="129">
                <declaration name="thisconfig" type="Object[]" line="130"/>
            </method>
            <method name="equals" type="boolean" line="138">
                <params>
                    <param name="o" type="Object"/>
                </params>
                <declaration name="other" type="ScanManagerConfig" line="141"/>
            </method>
            <method name="hashCode" type="int" line="148">
                <declaration name="key" type="String" line="149"/>
            </method>
            <javadoc line="154">
                Gets the name of this configuration. The name of the configuration
                  usually corresponds to
                  the value of the {@code name=} key of the {@code ObjectName}of the {@link com.sun.jmx.examples.scandir.ScanDirConfigMXBeanScanDirConfigMXBean} which owns this configuration.                
                <return>
                    The name of this configuration.                    
                </return>
            </javadoc>
            <method name="getName" type="String" line="164"/>
            <javadoc line="168">
                Sets the name of this configuration. The name of the configuration
                  usually corresponds to
                  the value of the {@code name=} key of the {@code ObjectName}of the {@link com.sun.jmx.examples.scandir.ScanDirConfigMXBeanScanDirConfigMXBean} which owns this configuration.
                  &lt;p&gt;Once set this value cannot change.&lt;/p&gt;                
                <param>
                    name The name of this configuration.                    
                </param>
            </javadoc>
            <method name="setName" type="void" line="178">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="187">
                Gets the list of Directory Scanner configured by this
                  configuration. From each element in this list, the{@link com.sun.jmx.examples.scandir.ScanManagerMXBean ScanManagerMXBean}will create, initialize, and register a {@link com.sun.jmx.examples.scandir.DirectoryScannerMXBean}.                
                <return>
                    The list of Directory Scanner configured by this configuration.                    
                </return>
            </javadoc>
            <method name="getScanList" type="DirectoryScannerConfig[]" line="198"/>
            <javadoc line="202">
                Sets the list of Directory Scanner configured by this
                  configuration. From each element in this list, the{@link com.sun.jmx.examples.scandir.ScanManagerMXBean ScanManagerMXBean}will create, initialize, and register a {@link com.sun.jmx.examples.scandir.DirectoryScannerMXBean}.                
                <param>
                    scans The list of Directory Scanner configured by this configuration.                    
                </param>
            </javadoc>
            <method name="setScanList" type="void" line="210">
                <params>
                    <param name="scans" type="DirectoryScannerConfig[]"/>
                </params>
            </method>
            <javadoc line="216">
                Get a directory scanner by its name.                
                <param>
                    name The name of the directory scanner. This is the
                      value returned by {@link DirectoryScannerConfig#getName()}.                    
                </param>
                <return>
                    The named {@code DirectoryScannerConfig}                    
                </return>
            </javadoc>
            <method name="getScan" type="DirectoryScannerConfig" line="224">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="228">
                Adds a directory scanner to the list.
                  &lt;p&gt;If a directory scanner
                  configuration by that name already exists in the list, it will
                  be replaced by the given &lt;var&gt;scan&lt;/var&gt;.
                  &lt;/p&gt;                
                <param>
                    scan The {@code DirectoryScannerConfig} to add to the list.                    
                </param>
                <return>
                    The replaced {@code DirectoryScannerConfig}, or {@code null}if there was no {@code DirectoryScannerConfig} by that name
                      in the list.                    
                </return>
            </javadoc>
            <method name="putScan" type="DirectoryScannerConfig" line="239">
                <params>
                    <param name="scan" type="DirectoryScannerConfig"/>
                </params>
            </method>
            <method name="toString" type="String" line="244"/>
            <javadoc line="248">
                Removes the named directory scanner from the list.                
                <param>
                    name The name of the directory scanner. This is the
                      value returned by {@link DirectoryScannerConfig#getName()}.                    
                </param>
                <return>
                    The removed {@code DirectoryScannerConfig}, or {@code null}if there was no directory scanner by that name in the list.                    
                </return>
            </javadoc>
            <method name="removeScan" type="DirectoryScannerConfig" line="257">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="261">
                Gets the initial Result Log Configuration.                
                <return>
                    The initial Result Log Configuration.                    
                </return>
            </javadoc>
            <method name="getInitialResultLogConfig" type="ResultLogConfig" line="266"/>
            <javadoc line="270">
                Sets the initial Result Log Configuration.                
                <param>
                    initialLogConfig The initial Result Log Configuration.                    
                </param>
            </javadoc>
            <method name="setInitialResultLogConfig" type="void" line="274">
                <params>
                    <param name="initialLogConfig" type="ResultLogConfig"/>
                </params>
            </method>
            <javadoc line="278">
                Creates a copy of this object, with the specified name.                
                <param>
                    newname the name of the copy.                    
                </param>
                <return>
                    A copy of this object.                    
                </return>
            </javadoc>
            <method name="copy" type="ScanManagerConfig" line="283">
                <params>
                    <param name="newname" type="String"/>
                </params>
            </method>
            <method name="copy" type="ScanManagerConfig" line="290">
                <params>
                    <param name="newname" type="String"/>
                    <param name="other" type="ScanManagerConfig"/>
                </params>
                <declaration name="newbean" type="ScanManagerConfig" line="291"/>
            </method>
        </class>
    </source>