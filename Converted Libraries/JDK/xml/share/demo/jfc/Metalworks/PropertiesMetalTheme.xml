<?xml version="1.0" encoding="UTF-8"?>
    <source package="">
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.util.Properties"/>
        <import package="java.util.StringTokenizer"/>
        <import package="javax.swing.plaf.ColorUIResource"/>
        <import package="javax.swing.plaf.metal.DefaultMetalTheme"/>
        <class name="PropertiesMetalTheme" line="42">
            <extends class="DefaultMetalTheme"/>
            <javadoc line="42">
                This class allows you to load a theme from a file.
                  It uses the standard Java Properties file format.
                  To create a theme you provide a text file which contains
                  tags corresponding to colors of the theme along with a value
                  for that color.  For example:
                  name=My Ugly Theme
                  primary1=255,0,0
                  primary2=0,255,0
                  primary3=0,0,255
                  This class only loads colors from the properties file,
                  but it could easily be extended to load fonts -  or even icons.                
                <author>
                    Steve Wilson                    
                </author>
                <author>
                    Alexander Kouznetsov                    
                </author>
            </javadoc>
            <declaration name="name" type="String" line="62"/>
            <declaration name="primary1" type="ColorUIResource" line="63"/>
            <declaration name="primary2" type="ColorUIResource" line="64"/>
            <declaration name="primary3" type="ColorUIResource" line="65"/>
            <declaration name="secondary1" type="ColorUIResource" line="66"/>
            <declaration name="secondary2" type="ColorUIResource" line="67"/>
            <declaration name="secondary3" type="ColorUIResource" line="68"/>
            <declaration name="black" type="ColorUIResource" line="69"/>
            <declaration name="white" type="ColorUIResource" line="70"/>
            <javadoc line="72">
                pass an inputstream pointing to a properties file.
                  Colors will be initialized to be the same as the DefaultMetalTheme,
                  and then any colors provided in the properties file will override that.                
            </javadoc>
            <method name="PropertiesMetalTheme" type="constructor" line="77">
                <params>
                    <param name="stream" type="InputStream"/>
                </params>
            </method>
            <javadoc line="82">
                Initialize all colors to be the same as the DefaultMetalTheme.                
            </javadoc>
            <method name="initColors" type="void" line="85"/>
            <javadoc line="98">
                Load the theme name and colors from the properties file
                  Items not defined in the properties file are ignored                
            </javadoc>
            <method name="loadProperties" type="void" line="102">
                <params>
                    <param name="stream" type="InputStream"/>
                </params>
                <declaration name="prop" type="Properties" line="103"/>
                <scope line="104"/>
                <scope line="106"/>
                <declaration name="tempName" type="Object" line="110"/>
                <scope line="111"/>
                <declaration name="colorString" type="Object" line="115"/>
                <scope line="118"/>
                <scope line="123"/>
                <scope line="128"/>
                <scope line="133"/>
                <scope line="138"/>
                <scope line="143"/>
                <scope line="148"/>
                <scope line="153"/>
            </method>
            <method name="getName" type="String" line="160"/>
            <method name="getPrimary1" type="ColorUIResource" line="165"/>
            <method name="getPrimary2" type="ColorUIResource" line="170"/>
            <method name="getPrimary3" type="ColorUIResource" line="175"/>
            <method name="getSecondary1" type="ColorUIResource" line="180"/>
            <method name="getSecondary2" type="ColorUIResource" line="185"/>
            <method name="getSecondary3" type="ColorUIResource" line="190"/>
            <method name="getBlack" type="ColorUIResource" line="195"/>
            <method name="getWhite" type="ColorUIResource" line="200"/>
            <javadoc line="204">
                parse a comma delimited list of 3 strings into a Color                
            </javadoc>
            <method name="parseColor" type="ColorUIResource" line="207">
                <params>
                    <param name="s" type="String"/>
                </params>
                <declaration name="red" type="int" line="208"/>
                <declaration name="green" type="int" line="209"/>
                <declaration name="blue" type="int" line="210"/>
                <scope line="211">
                    <declaration name="st" type="StringTokenizer" line="212"/>
                </scope>
                <scope line="218"/>
            </method>
        </class>
    </source>