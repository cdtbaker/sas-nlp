<?xml version="1.0" encoding="UTF-8"?>
    <source package="">
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.util.Properties"/>
        <import package="java.util.StringTokenizer"/>
        <import package="javax.swing.plaf.ColorUIResource"/>
        <import package="javax.swing.plaf.metal.DefaultMetalTheme"/>
        <class name="PropertiesMetalTheme" line="7">
            <extends class="DefaultMetalTheme"/>
            <javadoc line="7">
                This class allows you to load a theme from a file.
                  It uses the standard Java Properties file format.
                  To create a theme you provide a text file which contains
                  tags corresponding to colors of the theme along with a value
                  for that color.  For example:
                  name=My Ugly Theme
                  primary1=255,0,0
                  primary2=0,255,0
                  primary3=0,0,255
                  This class only loads colors from the properties file,
                  but it could easily be extended to load fonts -  or even icons.                
                <author>
                    Steve Wilson                    
                </author>
                <author>
                    Alexander Kouznetsov                    
                </author>
            </javadoc>
            <declaration name="name" type="String" line="23"/>
            <declaration name="primary1" type="ColorUIResource" line="24"/>
            <declaration name="primary2" type="ColorUIResource" line="25"/>
            <declaration name="primary3" type="ColorUIResource" line="26"/>
            <declaration name="secondary1" type="ColorUIResource" line="27"/>
            <declaration name="secondary2" type="ColorUIResource" line="28"/>
            <declaration name="secondary3" type="ColorUIResource" line="29"/>
            <declaration name="black" type="ColorUIResource" line="30"/>
            <declaration name="white" type="ColorUIResource" line="31"/>
            <javadoc line="32">
                pass an inputstream pointing to a properties file.
                  Colors will be initialized to be the same as the DefaultMetalTheme,
                  and then any colors provided in the properties file will override that.                
            </javadoc>
            <method name="PropertiesMetalTheme" type="constructor" line="37">
                <params>
                    <param name="stream" type="InputStream"/>
                </params>
            </method>
            <javadoc line="41">
                Initialize all colors to be the same as the DefaultMetalTheme.                
            </javadoc>
            <method name="initColors" type="void" line="44"/>
            <javadoc line="54">
                Load the theme name and colors from the properties file
                  Items not defined in the properties file are ignored                
            </javadoc>
            <method name="loadProperties" type="void" line="58">
                <params>
                    <param name="stream" type="InputStream"/>
                </params>
                <declaration name="prop" type="Properties" line="59"/>
                <scope line="60"/>
                <scope line="63"/>
                <declaration name="tempName" type="Object" line="66"/>
                <scope line="67"/>
                <declaration name="colorString" type="Object" line="70"/>
                <scope line="72"/>
                <scope line="76"/>
                <scope line="80"/>
                <scope line="84"/>
                <scope line="88"/>
                <scope line="92"/>
                <scope line="96"/>
                <scope line="100"/>
            </method>
            <method name="getName" type="String" line="104"/>
            <method name="getPrimary1" type="ColorUIResource" line="107"/>
            <method name="getPrimary2" type="ColorUIResource" line="110"/>
            <method name="getPrimary3" type="ColorUIResource" line="113"/>
            <method name="getSecondary1" type="ColorUIResource" line="116"/>
            <method name="getSecondary2" type="ColorUIResource" line="119"/>
            <method name="getSecondary3" type="ColorUIResource" line="122"/>
            <method name="getBlack" type="ColorUIResource" line="125"/>
            <method name="getWhite" type="ColorUIResource" line="128"/>
            <javadoc line="131">
                parse a comma delimited list of 3 strings into a Color                
            </javadoc>
            <method name="parseColor" type="ColorUIResource" line="134">
                <params>
                    <param name="s" type="String"/>
                </params>
                <declaration name="red" type="int" line="135"/>
                <declaration name="green" type="int" line="136"/>
                <declaration name="blue" type="int" line="137"/>
                <scope line="138">
                    <declaration name="st" type="StringTokenizer" line="139"/>
                </scope>
                <scope line="144"/>
            </method>
        </class>
    </source>