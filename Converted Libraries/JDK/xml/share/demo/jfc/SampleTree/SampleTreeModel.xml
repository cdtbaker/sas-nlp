<?xml version="1.0" encoding="UTF-8"?>
    <source package="">
        <import package="javax.swing.tree.DefaultTreeModel"/>
        <import package="javax.swing.tree.TreeNode"/>
        <import package="javax.swing.tree.TreePath"/>
        <import package="javax.swing.tree.DefaultMutableTreeNode"/>
        <import package="java.awt.Color"/>
        <class name="SampleTreeModel" line="6">
            <extends class="DefaultTreeModel"/>
            <javadoc line="6">
                SampleTreeModel extends JTreeModel to extends valueForPathChanged.
                  This method is called as a result of the user editing a value in
                  the tree.  If you allow editing in your tree, are using TreeNodes
                  and the user object of the TreeNodes is not a String, then you&apos;re going
                  to have to subclass JTreeModel as this example does.                
                <author>
                    Scott Violet                    
                </author>
            </javadoc>
            <javadoc line="15">
                Creates a new instance of SampleTreeModel with newRoot set
                  to the root of this model.                
            </javadoc>
            <method name="SampleTreeModel" type="constructor" line="19">
                <params>
                    <param name="newRoot" type="TreeNode"/>
                </params>
            </method>
            <javadoc line="22">
                Subclassed to message setString() to the changed path item.                
            </javadoc>
            <method name="valueForPathChanged" type="void" line="25">
                <params>
                    <param name="path" type="TreePath"/>
                    <param name="newValue" type="Object"/>
                </params>
                <declaration name="aNode" type="DefaultMutableTreeNode" line="26"/>
                <declaration name="sampleData" type="SampleData" line="27"/>
            </method>
        </class>
    </source>