<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.nio.zipfs">
        <import package="java.io"/>
        <import package="java.net.URI"/>
        <import package="java.nio.channels"/>
        <import package="java.nio.file"/>
        <import package="java.nio.file.DirectoryStream.Filter"/>
        <import package="java.nio.file.attribute"/>
        <import package="java.util"/>
        <import package="java.nio.file.StandardOpenOption"/>
        <import package="java.nio.file.StandardCopyOption"/>
        <class name="ZipPath" line="45">
            <comment line="56">
                cached hashcode (created lazily)                
            </comment>
            <comment line="374">
                create offset list if not already created                
            </comment>
            <comment line="410">
                resolved path for locating zip entry inside the zip file,
                 the result path does not contain ./ and .. components                
            </comment>
            <comment line="427">
                removes redundant slashs, replace &quot;\&quot; to zip separator &quot;/&quot;
                 and check for invalid characters                
            </comment>
            <comment line="473">
                Remove DotSlash(./) and resolve DotDot (..) components                
            </comment>
            <comment line="485">
                TBD: performance, avoid initOffsets                
            </comment>
            <comment line="620">
                ///////////////////////////////////////////////////////////////////                
            </comment>
            <implements interface="Path"/>
            <javadoc line="45">
                @author  Xueming Shen, Rajendra Gutupalli,Jaya Hangal                
            </javadoc>
            <declaration name="zfs" type="ZipFileSystem" line="52"/>
            <declaration name="path" type="byte[]" line="53"/>
            <declaration name="offsets" type="int[]" line="54"/>
            <declaration name="hashcode" type="int" line="55"/>
            <method name="ZipPath" type="constructor" line="57">
                <params>
                    <param name="zfs" type="ZipFileSystem"/>
                    <param name="path" type="byte[]"/>
                </params>
            </method>
            <method name="ZipPath" type="constructor" line="62">
                <params>
                    <param name="zfs" type="ZipFileSystem"/>
                    <param name="path" type="byte[]"/>
                    <param name="normalized" type="boolean"/>
                </params>
            </method>
            <method name="getRoot" type="ZipPath" line="71"/>
            <method name="getFileName" type="Path" line="79">
                <comment line="84">
                    no elements so no name                    
                </comment>
                <declaration name="count" type="int" line="81"/>
                <declaration name="lastOffset" type="int" line="86"/>
                <declaration name="len" type="int" line="87"/>
                <declaration name="result" type="byte[]" line="88"/>
            </method>
            <method name="getParent" type="ZipPath" line="94">
                <comment line="98">
                    no elements so no parent                    
                </comment>
                <comment line="101">
                    parent is root only (may be null)                    
                </comment>
                <declaration name="count" type="int" line="96"/>
                <declaration name="len" type="int" line="99"/>
                <declaration name="result" type="byte[]" line="102"/>
            </method>
            <method name="getNameCount" type="int" line="108"/>
            <method name="getName" type="ZipPath" line="114">
                <params>
                    <param name="index" type="int"/>
                </params>
                <comment line="125">
                    construct result                    
                </comment>
                <declaration name="begin" type="int" line="118"/>
                <declaration name="len" type="int" line="119"/>
                <declaration name="result" type="byte[]" line="125"/>
            </method>
            <method name="subpath" type="ZipPath" line="131">
                <params>
                    <param name="beginIndex" type="int"/>
                    <param name="endIndex" type="int"/>
                </params>
                <comment line="140">
                    starting offset and length                    
                </comment>
                <comment line="147">
                    construct result                    
                </comment>
                <declaration name="begin" type="int" line="140"/>
                <declaration name="len" type="int" line="141"/>
                <declaration name="result" type="byte[]" line="147"/>
            </method>
            <method name="toRealPath" type="ZipPath" line="153">
                <params>
                    <param name="options" type="LinkOption"/>
                </params>
                <declaration name="realPath" type="ZipPath" line="154"/>
            </method>
            <method name="isHidden" type="boolean" line="159"/>
            <method name="toAbsolutePath" type="ZipPath" line="164">
                <comment line="169">
                    add / bofore the existing path                    
                </comment>
                <comment line="182">
                    normalized                    
                </comment>
                <scope line="165"/>
                <scope line="167">
                    <declaration name="defaultdir" type="byte[]" line="169"/>
                    <declaration name="defaultlen" type="int" line="170"/>
                    <declaration name="endsWith" type="boolean" line="171"/>
                    <declaration name="t" type="byte[]" line="172"/>
                </scope>
            </method>
            <method name="toUri" type="URI" line="186">
                <scope line="187"/>
                <scope line="193"/>
            </method>
            <method name="equalsNameAt" type="boolean" line="198">
                <params>
                    <param name="other" type="ZipPath"/>
                    <param name="index" type="int"/>
                </params>
                <declaration name="mbegin" type="int" line="199"/>
                <declaration name="mlen" type="int" line="200"/>
                <declaration name="obegin" type="int" line="205"/>
                <declaration name="olen" type="int" line="206"/>
                <declaration name="n" type="int" line="213"/>
                <scope line="214"/>
            </method>
            <method name="relativize" type="Path" line="223">
                <params>
                    <param name="other" type="Path"/>
                </params>
                <comment line="228">
                                        
                </comment>
                <comment line="251">
                    no tailing slash at the end                    
                </comment>
                <declaration name="o" type="ZipPath" line="224"/>
                <scope line="228"/>
                <declaration name="mc" type="int" line="231"/>
                <declaration name="oc" type="int" line="232"/>
                <declaration name="n" type="int" line="233"/>
                <declaration name="i" type="int" line="234"/>
                <scope line="235"/>
                <declaration name="dotdots" type="int" line="240"/>
                <declaration name="len" type="int" line="241"/>
                <declaration name="result" type="byte[]" line="244"/>
                <declaration name="pos" type="int" line="246"/>
                <scope line="247"/>
            </method>
            <method name="getFileSystem" type="ZipFileSystem" line="262"/>
            <method name="isAbsolute" type="boolean" line="267"/>
            <method name="resolve" type="ZipPath" line="272">
                <params>
                    <param name="other" type="Path"/>
                </params>
                <declaration name="o" type="ZipPath" line="273"/>
                <declaration name="resolved" type="byte[]" line="276"/>
                <scope line="277"/>
                <scope line="281"/>
            </method>
            <method name="resolveSibling" type="Path" line="291">
                <params>
                    <param name="other" type="Path"/>
                </params>
                <declaration name="parent" type="Path" line="294"/>
            </method>
            <method name="startsWith" type="boolean" line="299">
                <params>
                    <param name="other" type="Path"/>
                </params>
                <declaration name="o" type="ZipPath" line="300"/>
                <declaration name="olast" type="int" line="304"/>
                <scope line="305"/>
            </method>
            <method name="endsWith" type="boolean" line="316">
                <params>
                    <param name="other" type="Path"/>
                </params>
                <comment line="325">
                    o.path.length == 0                    
                </comment>
                <declaration name="o" type="ZipPath" line="317"/>
                <declaration name="olast" type="int" line="318"/>
                <declaration name="last" type="int" line="321"/>
                <scope line="329"/>
            </method>
            <method name="resolve" type="ZipPath" line="338">
                <params>
                    <param name="other" type="String"/>
                </params>
            </method>
            <method name="resolveSibling" type="Path" line="343">
                <params>
                    <param name="other" type="String"/>
                </params>
            </method>
            <method name="startsWith" type="boolean" line="348">
                <params>
                    <param name="other" type="String"/>
                </params>
            </method>
            <method name="endsWith" type="boolean" line="353">
                <params>
                    <param name="other" type="String"/>
                </params>
            </method>
            <method name="normalize" type="Path" line="358">
                <comment line="361">
                    no change                    
                </comment>
                <declaration name="resolved" type="byte[]" line="359"/>
            </method>
            <method name="checkPath" type="ZipPath" line="365">
                <params>
                    <param name="path" type="Path"/>
                </params>
            </method>
            <method name="initOffsets" type="void" line="374">
                <comment line="378">
                    count names                    
                </comment>
                <comment line="389">
                    populate offsets                    
                </comment>
                <scope line="375">
                    <declaration name="count" type="int" line="376"/>
                    <scope line="380">
                        <declaration name="c" type="byte" line="381"/>
                        <scope line="382"/>
                    </scope>
                    <declaration name="result" type="int[]" line="389"/>
                    <scope line="392">
                        <declaration name="c" type="byte" line="393"/>
                        <scope line="394"/>
                        <scope line="396"/>
                    </scope>
                    <scope line="402"/>
                </scope>
            </method>
            <declaration name="resolved" type="byte[]" line="411"/>
            <method name="getResolvedPath" type="byte[]" line="412">
                <declaration name="r" type="byte[]" line="413"/>
                <scope line="414"/>
            </method>
            <method name="normalize" type="byte[]" line="428">
                <params>
                    <param name="path" type="byte[]"/>
                </params>
                <declaration name="prevC" type="byte" line="431"/>
                <scope line="432">
                    <declaration name="c" type="byte" line="433"/>
                </scope>
            </method>
            <method name="normalize" type="byte[]" line="446">
                <params>
                    <param name="path" type="byte[]"/>
                    <param name="off" type="int"/>
                </params>
                <declaration name="to" type="byte[]" line="447"/>
                <declaration name="n" type="int" line="448"/>
                <scope line="449"/>
                <declaration name="m" type="int" line="453"/>
                <declaration name="prevC" type="byte" line="454"/>
                <scope line="455">
                    <declaration name="c" type="byte" line="456"/>
                </scope>
            </method>
            <method name="getResolved" type="byte[]" line="473">
                <scope line="476">
                    <declaration name="c" type="byte" line="477"/>
                </scope>
            </method>
            <method name="resolve0" type="byte[]" line="485">
                <comment line="497">
                    absolute path                    
                </comment>
                <comment line="503">
                    retreat                    
                </comment>
                <comment line="506">
                    &quot;/../xyz&quot; skip                    
                </comment>
                <comment line="509">
                    &quot;../xyz&quot; -&gt; &quot;../xyz&quot;                    
                </comment>
                <comment line="517">
                    absolute path                    
                </comment>
                <comment line="518">
                    not the first name                    
                </comment>
                <declaration name="to" type="byte[]" line="486"/>
                <declaration name="nc" type="int" line="487"/>
                <declaration name="lastM" type="int[]" line="488"/>
                <declaration name="lastMOff" type="int" line="489"/>
                <declaration name="m" type="int" line="490"/>
                <scope line="491">
                    <declaration name="n" type="int" line="492"/>
                    <declaration name="len" type="int" line="493"/>
                    <scope line="495"/>
                    <scope line="500">
                        <scope line="501"/>
                        <scope line="505"/>
                        <scope line="508"/>
                    </scope>
                    <scope line="517"/>
                </scope>
            </method>
            <method name="toString" type="String" line="530"/>
            <method name="hashCode" type="int" line="535">
                <declaration name="h" type="int" line="536"/>
            </method>
            <method name="equals" type="boolean" line="543">
                <params>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <method name="compareTo" type="int" line="551">
                <params>
                    <param name="other" type="Path"/>
                </params>
                <declaration name="o" type="ZipPath" line="552"/>
                <declaration name="len1" type="int" line="553"/>
                <declaration name="len2" type="int" line="554"/>
                <declaration name="n" type="int" line="556"/>
                <declaration name="v1" type="byte" line="557"/>
                <declaration name="v2" type="byte" line="558"/>
                <declaration name="k" type="int" line="560"/>
                <scope line="561">
                    <declaration name="c1" type="int" line="562"/>
                    <declaration name="c2" type="int" line="563"/>
                </scope>
            </method>
            <method name="register" type="WatchKey" line="574">
                <params>
                    <param name="watcher" type="WatchService"/>
                    <param name="events" type="WatchEvent.Kind<?>[]"/>
                    <param name="modifiers" type="WatchEvent.Modifier"/>
                </params>
                <scope line="575"/>
            </method>
            <method name="register" type="WatchKey" line="582">
                <params>
                    <param name="watcher" type="WatchService"/>
                    <param name="events" type="WatchEvent.Kind<?>"/>
                </params>
            </method>
            <method name="toFile" type="File" line="587"/>
            <method name="iterator" type="Iterator<Path>" line="592">
                <anonymous_class line="593">
                    <declaration name="i" type="int" line="594"/>
                    <method name="hasNext" type="boolean" line="597"/>
                    <method name="next" type="Path" line="602">
                        <scope line="603">
                            <declaration name="result" type="Path" line="604"/>
                        </scope>
                        <scope line="607"/>
                    </method>
                    <method name="remove" type="void" line="613"/>
                </anonymous_class>
            </method>
            <method name="createDirectory" type="void" line="624">
                <params>
                    <param name="attrs" type="FileAttribute<?>"/>
                </params>
            </method>
            <method name="newInputStream" type="InputStream" line="629">
                <params>
                    <param name="options" type="OpenOption"/>
                </params>
                <scope line="630">
                    <scope line="631"/>
                </scope>
            </method>
            <method name="newDirectoryStream" type="DirectoryStream<Path>" line="641">
                <params>
                    <param name="filter" type="Filter<? super Path>"/>
                </params>
            </method>
            <method name="delete" type="void" line="645"/>
            <method name="deleteIfExists" type="void" line="649"/>
            <method name="getAttributes" type="ZipFileAttributes" line="654">
                <declaration name="zfas" type="ZipFileAttributes" line="655"/>
            </method>
            <method name="setAttribute" type="void" line="663">
                <params>
                    <param name="attribute" type="String"/>
                    <param name="value" type="Object"/>
                    <param name="options" type="LinkOption"/>
                </params>
                <declaration name="type" type="String" line="664"/>
                <declaration name="attr" type="String" line="665"/>
                <declaration name="colonPos" type="int" line="666"/>
                <scope line="667"/>
                <scope line="670"/>
                <declaration name="view" type="ZipFileAttributeView" line="674"/>
            </method>
            <method name="setTimes" type="void" line="682">
                <params>
                    <param name="mtime" type="FileTime"/>
                    <param name="atime" type="FileTime"/>
                    <param name="ctime" type="FileTime"/>
                </params>
            </method>
            <method name="readAttributes" type="Map<String,Object>" line="689">
                <params>
                    <param name="attributes" type="String"/>
                    <param name="options" type="LinkOption"/>
                </params>
                <declaration name="view" type="String" line="690"/>
                <declaration name="attrs" type="String" line="691"/>
                <declaration name="colonPos" type="int" line="692"/>
                <scope line="693"/>
                <scope line="696"/>
                <declaration name="zfv" type="ZipFileAttributeView" line="700"/>
                <scope line="701"/>
            </method>
            <method name="getFileStore" type="FileStore" line="707">
                <comment line="709">
                    each ZipFileSystem only has one root (as requested for now)                    
                </comment>
            </method>
            <method name="isSameFile" type="boolean" line="714">
                <params>
                    <param name="other" type="Path"/>
                </params>
            </method>
            <method name="newByteChannel" type="SeekableByteChannel" line="729">
                <params>
                    <param name="options" type="Set<? extends OpenOption>"/>
                    <param name="attrs" type="FileAttribute<?>"/>
                </params>
            </method>
            <method name="newFileChannel" type="FileChannel" line="737">
                <params>
                    <param name="options" type="Set<? extends OpenOption>"/>
                    <param name="attrs" type="FileAttribute<?>"/>
                </params>
            </method>
            <method name="checkAccess" type="void" line="741">
                <params>
                    <param name="modes" type="AccessMode"/>
                </params>
                <declaration name="w" type="boolean" line="742"/>
                <declaration name="x" type="boolean" line="743"/>
                <scope line="744"/>
                <declaration name="attrs" type="ZipFileAttributes" line="758"/>
                <scope line="761"/>
            </method>
            <method name="exists" type="boolean" line="769">
                <scope line="772"/>
                <scope line="774"/>
            </method>
            <method name="newOutputStream" type="OutputStream" line="779">
                <params>
                    <param name="options" type="OpenOption"/>
                </params>
            </method>
            <method name="move" type="void" line="788">
                <params>
                    <param name="target" type="ZipPath"/>
                    <param name="options" type="CopyOption"/>
                </params>
                <scope line="790"/>
                <scope line="794"/>
            </method>
            <method name="copy" type="void" line="802">
                <params>
                    <param name="target" type="ZipPath"/>
                    <param name="options" type="CopyOption"/>
                </params>
            </method>
            <method name="copyToTarget" type="void" line="813">
                <params>
                    <param name="target" type="ZipPath"/>
                    <param name="options" type="CopyOption"/>
                </params>
                <comment line="823">
                    attributes of source file                    
                </comment>
                <comment line="825">
                    check if target exists                    
                </comment>
                <comment line="841">
                    create directory or file                    
                </comment>
                <comment line="868">
                    rollback?                    
                </comment>
                <declaration name="replaceExisting" type="boolean" line="814"/>
                <declaration name="copyAttrs" type="boolean" line="815"/>
                <scope line="816"/>
                <declaration name="zfas" type="ZipFileAttributes" line="823"/>
                <declaration name="exists" type="boolean" line="825"/>
                <scope line="826">
                    <scope line="827"/>
                    <scope line="830"/>
                </scope>
                <scope line="833"/>
                <scope line="839"/>
                <scope line="842">
                    <declaration name="is" type="InputStream" line="843"/>
                    <scope line="844">
                        <declaration name="os" type="OutputStream" line="845"/>
                        <scope line="846">
                            <declaration name="buf" type="byte[]" line="847"/>
                            <declaration name="n" type="int" line="848"/>
                            <scope line="849"/>
                        </scope>
                        <scope line="852"/>
                    </scope>
                    <scope line="855"/>
                </scope>
                <scope line="859">
                    <declaration name="view" type="BasicFileAttributeView" line="860"/>
                    <scope line="862"/>
                    <scope line="866">
                        <scope line="868"/>
                        <scope line="870"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>