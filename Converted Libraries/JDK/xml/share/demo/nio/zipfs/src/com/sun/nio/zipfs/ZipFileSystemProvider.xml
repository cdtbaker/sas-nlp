<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.nio.zipfs">
        <import package="java.io"/>
        <import package="java.nio.channels"/>
        <import package="java.nio.file"/>
        <import package="java.nio.file.DirectoryStream.Filter"/>
        <import package="java.nio.file.attribute"/>
        <import package="java.nio.file.spi.FileSystemProvider"/>
        <import package="java.net.URI"/>
        <import package="java.net.URISyntaxException"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Map"/>
        <import package="java.util.Set"/>
        <import package="java.util.zip.ZipError"/>
        <import package="java.util.concurrent.ExecutorService"/>
        <class name="ZipFileSystemProvider" line="53">
            <extends class="FileSystemProvider"/>
            <comment line="168">
                Checks that the given file is a UnixPath                
            </comment>
            <comment line="311">
                ////////////////////////////////////////////////////////////                
            </comment>
            <declaration name="filesystems" type="Map&amp;lt;Path,ZipFileSystem&amp;gt;" line="56"/>
            <method name="ZipFileSystemProvider" type="constructor" line="58"/>
            <method name="getScheme" type="String" line="61"/>
            <method name="uriToPath" type="Path" line="65">
                <params>
                    <param name="uri" type="URI"/>
                </params>
                <comment line="72">
                    only support legacy JAR URL syntax  jar:{uri}!/{entry} for now                    
                </comment>
                <declaration name="scheme" type="String" line="66"/>
                <scope line="67"/>
                <scope line="70">
                    <declaration name="spec" type="String" line="72"/>
                    <declaration name="sep" type="int" line="73"/>
                </scope>
                <scope line="77"/>
            </method>
            <method name="ensureFile" type="boolean" line="82">
                <params>
                    <param name="path" type="Path"/>
                </params>
                <scope line="83">
                    <declaration name="attrs" type="BasicFileAttributes" line="84"/>
                </scope>
                <scope line="89"/>
            </method>
            <method name="newFileSystem" type="FileSystem" line="97">
                <params>
                    <param name="uri" type="URI"/>
                    <param name="env" type="Map&lt;String,?&gt;"/>
                </params>
                <comment line="114">
                    assume NOT a zip/jar file                    
                </comment>
                <declaration name="path" type="Path" line="98"/>
                <scope line="99">
                    <declaration name="realPath" type="Path" line="100"/>
                    <scope line="101"/>
                    <declaration name="zipfs" type="ZipFileSystem" line="106"/>
                    <scope line="107"/>
                    <scope line="109">
                        <declaration name="pname" type="String" line="110"/>
                    </scope>
                </scope>
            </method>
            <method name="newFileSystem" type="FileSystem" line="124">
                <params>
                    <param name="path" type="Path"/>
                    <param name="env" type="Map&lt;String,?&gt;"/>
                </params>
                <scope line="125"/>
                <scope line="129"/>
                <scope line="131">
                    <declaration name="pname" type="String" line="132"/>
                </scope>
            </method>
            <method name="getPath" type="Path" line="140">
                <params>
                    <param name="uri" type="URI"/>
                </params>
                <declaration name="spec" type="String" line="142"/>
                <declaration name="sep" type="int" line="143"/>
            </method>
            <method name="getFileSystem" type="FileSystem" line="153">
                <params>
                    <param name="uri" type="URI"/>
                </params>
                <comment line="160">
                    ignore the ioe from toRealPath(), return FSNFE                    
                </comment>
                <scope line="154">
                    <declaration name="zipfs" type="ZipFileSystem" line="155"/>
                    <scope line="156"/>
                    <scope line="158"/>
                </scope>
            </method>
            <method name="toZipPath" type="ZipPath" line="168">
                <params>
                    <param name="path" type="Path"/>
                </params>
            </method>
            <method name="checkAccess" type="void" line="177">
                <params>
                    <param name="path" type="Path"/>
                    <param name="modes" type="AccessMode"/>
                </params>
            </method>
            <method name="copy" type="void" line="184">
                <params>
                    <param name="src" type="Path"/>
                    <param name="target" type="Path"/>
                    <param name="options" type="CopyOption"/>
                </params>
            </method>
            <method name="createDirectory" type="void" line="191">
                <params>
                    <param name="path" type="Path"/>
                    <param name="attrs" type="FileAttribute&lt;?&gt;"/>
                </params>
            </method>
            <method name="delete" type="void" line="196">
                <params>
                    <param name="path" type="Path"/>
                </params>
            </method>
            <method name="getFileAttributeView" type="V" line="204">
                <params>
                    <param name="path" type="Path"/>
                    <param name="type" type="Class&lt;V&gt;"/>
                    <param name="options" type="LinkOption"/>
                </params>
            </method>
            <method name="getFileStore" type="FileStore" line="209">
                <params>
                    <param name="path" type="Path"/>
                </params>
            </method>
            <method name="isHidden" type="boolean" line="214">
                <params>
                    <param name="path" type="Path"/>
                </params>
            </method>
            <method name="isSameFile" type="boolean" line="219">
                <params>
                    <param name="path" type="Path"/>
                    <param name="other" type="Path"/>
                </params>
            </method>
            <method name="move" type="void" line="226">
                <params>
                    <param name="src" type="Path"/>
                    <param name="target" type="Path"/>
                    <param name="options" type="CopyOption"/>
                </params>
            </method>
            <method name="newAsynchronousFileChannel" type="AsynchronousFileChannel" line="236">
                <params>
                    <param name="path" type="Path"/>
                    <param name="options" type="Set&lt;? extends OpenOption&gt;"/>
                    <param name="exec" type="ExecutorService"/>
                    <param name="attrs" type="FileAttribute&lt;?&gt;"/>
                </params>
            </method>
            <method name="newByteChannel" type="SeekableByteChannel" line="245">
                <params>
                    <param name="path" type="Path"/>
                    <param name="options" type="Set&lt;? extends OpenOption&gt;"/>
                    <param name="attrs" type="FileAttribute&lt;?&gt;"/>
                </params>
            </method>
            <method name="newDirectoryStream" type="DirectoryStream&lt;Path&gt;" line="252">
                <params>
                    <param name="path" type="Path"/>
                    <param name="filter" type="Filter&lt;? super Path&gt;"/>
                </params>
            </method>
            <method name="newFileChannel" type="FileChannel" line="261">
                <params>
                    <param name="path" type="Path"/>
                    <param name="options" type="Set&lt;? extends OpenOption&gt;"/>
                    <param name="attrs" type="FileAttribute&lt;?&gt;"/>
                </params>
            </method>
            <method name="newInputStream" type="InputStream" line="268">
                <params>
                    <param name="path" type="Path"/>
                    <param name="options" type="OpenOption"/>
                </params>
            </method>
            <method name="newOutputStream" type="OutputStream" line="275">
                <params>
                    <param name="path" type="Path"/>
                    <param name="options" type="OpenOption"/>
                </params>
            </method>
            <method name="readAttributes" type="A" line="283">
                <params>
                    <param name="path" type="Path"/>
                    <param name="type" type="Class&lt;A&gt;"/>
                    <param name="options" type="LinkOption"/>
                </params>
            </method>
            <method name="readAttributes" type="Map&lt;String,Object&gt;" line="293">
                <params>
                    <param name="path" type="Path"/>
                    <param name="attribute" type="String"/>
                    <param name="options" type="LinkOption"/>
                </params>
            </method>
            <method name="readSymbolicLink" type="Path" line="298">
                <params>
                    <param name="link" type="Path"/>
                </params>
            </method>
            <method name="setAttribute" type="void" line="306">
                <params>
                    <param name="path" type="Path"/>
                    <param name="attribute" type="String"/>
                    <param name="value" type="Object"/>
                    <param name="options" type="LinkOption"/>
                </params>
            </method>
            <method name="removeFileSystem" type="void" line="311">
                <params>
                    <param name="zfpath" type="Path"/>
                    <param name="zfs" type="ZipFileSystem"/>
                </params>
                <scope line="312"/>
            </method>
        </class>
    </source>