<?xml version="1.0" encoding="UTF-8"?>
    <source package="j2dbench.tests">
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.AlphaComposite"/>
        <import package="java.awt.RenderingHints"/>
        <import package="java.awt.Polygon"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.geom.Point2D"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="java.lang.reflect.Field"/>
        <import package="j2dbench.Destinations"/>
        <import package="j2dbench.Group"/>
        <import package="j2dbench.Option"/>
        <import package="j2dbench.Result"/>
        <import package="j2dbench.Test"/>
        <import package="j2dbench.TestEnvironment"/>
        <class name="GraphicsTests" line="18">
            <extends class="Test"/>
            <declaration name="hasGraphics2D" type="boolean" line="19"/>
            <scope line="20">
                <scope line="21"/>
                <scope line="24"/>
            </scope>
            <method name="makeAlphaColor" type="Color" line="27">
                <params>
                    <param name="opaque" type="Color"/>
                    <param name="alpha" type="int"/>
                </params>
                <scope line="28"/>
                <scope line="31"/>
            </method>
            <declaration name="graphicsroot" type="Group" line="35"/>
            <declaration name="groptroot" type="Group" line="36"/>
            <declaration name="animList" type="Option" line="37"/>
            <declaration name="sizeList" type="Option" line="38"/>
            <declaration name="compRules" type="Option" line="39"/>
            <declaration name="transforms" type="Option" line="40"/>
            <declaration name="doExtraAlpha" type="Option" line="41"/>
            <declaration name="doXor" type="Option" line="42"/>
            <declaration name="doClipping" type="Option" line="43"/>
            <declaration name="renderHint" type="Option" line="44"/>
            <method name="init" type="void" line="45">
                <scope line="51">
                    <declaration name="rulenames" type="String" line="52"/>
                    <declaration name="ruledescs" type="String" line="53"/>
                    <declaration name="rules" type="Object" line="54"/>
                    <declaration name="j" type="int" line="55"/>
                    <declaration name="defrule" type="int" line="56"/>
                    <scope line="57">
                        <declaration name="rulename" type="String" line="58"/>
                        <scope line="59">
                            <declaration name="f" type="Field" line="60"/>
                        </scope>
                        <scope line="63"/>
                        <scope line="66"/>
                        <scope line="69"/>
                        <declaration name="suffix" type="String" line="73"/>
                        <scope line="74"/>
                        <scope line="78"/>
                        <scope line="82"/>
                        <scope line="85"/>
                    </scope>
                    <declaration name="xforms" type="Transform" line="93"/>
                    <declaration name="xformnames" type="String" line="94"/>
                    <declaration name="xformdescs" type="String" line="95"/>
                    <scope line="96"/>
                    <declaration name="rhintnames" type="String" line="105"/>
                </scope>
            </method>
            <class name="Context" line="109">
                <declaration name="graphics" type="Graphics" line="110"/>
                <declaration name="outdim" type="Dimension" line="111"/>
                <declaration name="animate" type="boolean" line="112"/>
                <declaration name="size" type="int" line="113"/>
                <declaration name="orgX" type="int" line="114"/>
                <declaration name="initX" type="int" line="115"/>
                <declaration name="maxX" type="int" line="116"/>
                <declaration name="pixscale" type="double" line="117"/>
            </class>
            <method name="GraphicsTests" type="constructor" line="119">
                <params>
                    <param name="parent" type="Group"/>
                    <param name="nodeName" type="String"/>
                    <param name="description" type="String"/>
                </params>
            </method>
            <method name="initTest" type="Object" line="124">
                <params>
                    <param name="env" type="TestEnvironment"/>
                    <param name="result" type="Result"/>
                </params>
                <declaration name="ctx" type="Context" line="125"/>
            </method>
            <method name="pixelsTouched" type="int" line="131">
                <params>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <method name="createContext" type="Context" line="134"/>
            <method name="getOutputSize" type="Dimension" line="137">
                <params>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <method name="initContext" type="void" line="140">
                <params>
                    <param name="env" type="TestEnvironment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <declaration name="w" type="int" line="142"/>
                <declaration name="h" type="int" line="143"/>
                <scope line="147">
                    <declaration name="g2d" type="Graphics2D" line="148"/>
                    <declaration name="ac" type="AlphaComposite" line="149"/>
                    <scope line="150"/>
                    <scope line="154"/>
                    <scope line="157">
                        <declaration name="p" type="Polygon" line="158"/>
                    </scope>
                    <declaration name="tx" type="Transform" line="166"/>
                    <declaration name="envdim" type="Dimension" line="167"/>
                </scope>
            </method>
            <method name="cleanupTest" type="void" line="200">
                <params>
                    <param name="env" type="TestEnvironment"/>
                    <param name="ctx" type="Object"/>
                </params>
                <declaration name="graphics" type="Graphics" line="201"/>
            </method>
            <class name="Transform" line="205">
                <method name="getShortName" type="String" line="206"/>
                <method name="getDescription" type="String" line="207"/>
                <method name="init" type="void" line="208"/>
                <method name="scaleForPoint" type="double" line="209">
                    <params>
                        <param name="at" type="AffineTransform"/>
                        <param name="xorig" type="double"/>
                        <param name="yorig" type="double"/>
                        <param name="x" type="double"/>
                        <param name="y" type="double"/>
                        <param name="w" type="int"/>
                        <param name="h" type="int"/>
                    </params>
                    <declaration name="ptd" type="Point2D.Double" line="210"/>
                    <declaration name="scale" type="double" line="214"/>
                    <scope line="215"/>
                    <scope line="218"/>
                    <scope line="221"/>
                    <scope line="224"/>
                </method>
                <method name="scaleForTransform" type="Dimension" line="229">
                    <params>
                        <param name="at" type="AffineTransform"/>
                        <param name="dim" type="Dimension"/>
                    </params>
                    <declaration name="w" type="int" line="230"/>
                    <declaration name="h" type="int" line="231"/>
                    <declaration name="ptd" type="Point2D.Double" line="232"/>
                    <declaration name="ox" type="double" line="234"/>
                    <declaration name="oy" type="double" line="235"/>
                    <scope line="236"/>
                    <declaration name="scalex" type="double" line="239"/>
                    <declaration name="scaley" type="double" line="240"/>
                    <scope line="243"/>
                </method>
            </class>
            <class name="Identity" line="249">
                <extends class="Transform"/>
                <declaration name="instance" type="Identity" line="250"/>
                <method name="Identity" type="constructor" line="251"/>
                <method name="getShortName" type="String" line="253"/>
                <method name="getDescription" type="String" line="256"/>
                <method name="init" type="void" line="259">
                    <params>
                        <param name="g2d" type="Graphics2D"/>
                        <param name="ctx" type="Context"/>
                        <param name="dim" type="Dimension"/>
                    </params>
                </method>
            </class>
            <class name="FTranslate" line="262">
                <extends class="Transform"/>
                <declaration name="instance" type="FTranslate" line="263"/>
                <method name="FTranslate" type="constructor" line="264"/>
                <method name="getShortName" type="String" line="266"/>
                <method name="getDescription" type="String" line="269"/>
                <method name="init" type="void" line="272">
                    <params>
                        <param name="g2d" type="Graphics2D"/>
                        <param name="ctx" type="Context"/>
                        <param name="dim" type="Dimension"/>
                    </params>
                    <declaration name="w" type="int" line="273"/>
                    <declaration name="h" type="int" line="274"/>
                    <declaration name="at" type="AffineTransform" line="275"/>
                </method>
            </class>
            <class name="Scale2x2" line="281">
                <extends class="Transform"/>
                <declaration name="instance" type="Scale2x2" line="282"/>
                <method name="Scale2x2" type="constructor" line="283"/>
                <method name="getShortName" type="String" line="285"/>
                <method name="getDescription" type="String" line="288"/>
                <method name="init" type="void" line="291">
                    <params>
                        <param name="g2d" type="Graphics2D"/>
                        <param name="ctx" type="Context"/>
                        <param name="dim" type="Dimension"/>
                    </params>
                    <declaration name="w" type="int" line="292"/>
                    <declaration name="h" type="int" line="293"/>
                    <declaration name="at" type="AffineTransform" line="294"/>
                </method>
            </class>
            <class name="Rotate15" line="301">
                <extends class="Transform"/>
                <declaration name="instance" type="Rotate15" line="302"/>
                <method name="Rotate15" type="constructor" line="303"/>
                <method name="getShortName" type="String" line="305"/>
                <method name="getDescription" type="String" line="308"/>
                <method name="init" type="void" line="311">
                    <params>
                        <param name="g2d" type="Graphics2D"/>
                        <param name="ctx" type="Context"/>
                        <param name="dim" type="Dimension"/>
                    </params>
                    <declaration name="w" type="int" line="312"/>
                    <declaration name="h" type="int" line="313"/>
                    <declaration name="theta" type="double" line="314"/>
                    <declaration name="cos" type="double" line="315"/>
                    <declaration name="sin" type="double" line="316"/>
                    <declaration name="xsize" type="double" line="317"/>
                    <declaration name="ysize" type="double" line="318"/>
                    <declaration name="scale" type="double" line="319"/>
                    <declaration name="at" type="AffineTransform" line="322"/>
                </method>
            </class>
            <class name="ShearX" line="330">
                <extends class="Transform"/>
                <declaration name="instance" type="ShearX" line="331"/>
                <method name="ShearX" type="constructor" line="332"/>
                <method name="getShortName" type="String" line="334"/>
                <method name="getDescription" type="String" line="337"/>
                <method name="init" type="void" line="340">
                    <params>
                        <param name="g2d" type="Graphics2D"/>
                        <param name="ctx" type="Context"/>
                        <param name="dim" type="Dimension"/>
                    </params>
                    <declaration name="w" type="int" line="341"/>
                    <declaration name="h" type="int" line="342"/>
                    <declaration name="at" type="AffineTransform" line="343"/>
                </method>
            </class>
            <class name="ShearY" line="350">
                <extends class="Transform"/>
                <declaration name="instance" type="ShearY" line="351"/>
                <method name="ShearY" type="constructor" line="352"/>
                <method name="getShortName" type="String" line="354"/>
                <method name="getDescription" type="String" line="357"/>
                <method name="init" type="void" line="360">
                    <params>
                        <param name="g2d" type="Graphics2D"/>
                        <param name="ctx" type="Context"/>
                        <param name="dim" type="Dimension"/>
                    </params>
                    <declaration name="w" type="int" line="361"/>
                    <declaration name="h" type="int" line="362"/>
                    <declaration name="at" type="AffineTransform" line="363"/>
                </method>
            </class>
        </class>
    </source>