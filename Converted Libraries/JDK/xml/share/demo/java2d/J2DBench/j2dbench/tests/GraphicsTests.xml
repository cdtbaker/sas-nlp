<?xml version="1.0" encoding="UTF-8"?>
    <source package="j2dbench.tests">
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.AlphaComposite"/>
        <import package="java.awt.RenderingHints"/>
        <import package="java.awt.Polygon"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.geom.Point2D"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="java.lang.reflect.Field"/>
        <import package="j2dbench.Destinations"/>
        <import package="j2dbench.Group"/>
        <import package="j2dbench.Option"/>
        <import package="j2dbench.Result"/>
        <import package="j2dbench.Test"/>
        <import package="j2dbench.TestEnvironment"/>
        <class name="GraphicsTests" line="52">
            <extends class="Test"/>
            <comment line="85">
                REMIND: transform, etc.                
            </comment>
            <declaration name="hasGraphics2D" type="boolean" line="53"/>
            <scope line="55">
                <scope line="56"/>
                <scope line="58"/>
            </scope>
            <method name="makeAlphaColor" type="Color" line="62">
                <params>
                    <param name="opaque" type="Color"/>
                    <param name="alpha" type="int"/>
                </params>
                <scope line="63"/>
                <scope line="68"/>
            </method>
            <declaration name="graphicsroot" type="Group" line="73"/>
            <declaration name="groptroot" type="Group" line="74"/>
            <declaration name="animList" type="Option" line="76"/>
            <declaration name="sizeList" type="Option" line="77"/>
            <declaration name="compRules" type="Option" line="78"/>
            <declaration name="transforms" type="Option" line="79"/>
            <declaration name="doExtraAlpha" type="Option" line="80"/>
            <declaration name="doXor" type="Option" line="81"/>
            <declaration name="doClipping" type="Option" line="82"/>
            <declaration name="renderHint" type="Option" line="83"/>
            <method name="init" type="void" line="86">
                <scope line="118">
                    <declaration name="rulenames" type="String" line="119"/>
                    <declaration name="ruledescs" type="String" line="133"/>
                    <declaration name="rules" type="Object" line="134"/>
                    <declaration name="j" type="int" line="135"/>
                    <declaration name="defrule" type="int" line="136"/>
                    <scope line="137">
                        <declaration name="rulename" type="String" line="138"/>
                        <scope line="139">
                            <declaration name="f" type="Field" line="140"/>
                        </scope>
                        <scope line="142"/>
                        <scope line="144"/>
                        <scope line="147"/>
                        <declaration name="suffix" type="String" line="151"/>
                        <scope line="152"/>
                        <scope line="155"/>
                        <scope line="158"/>
                        <scope line="161"/>
                    </scope>
                    <declaration name="xforms" type="Transform" line="174"/>
                    <declaration name="xformnames" type="String" line="182"/>
                    <declaration name="xformdescs" type="String" line="183"/>
                    <scope line="184"/>
                    <declaration name="rhintnames" type="String" line="207"/>
                </scope>
            </method>
            <class name="Context" line="221">
                <declaration name="graphics" type="Graphics" line="222"/>
                <declaration name="outdim" type="Dimension" line="223"/>
                <declaration name="animate" type="boolean" line="224"/>
                <declaration name="size" type="int" line="225"/>
                <declaration name="orgX" type="int" line="226"/>
                <declaration name="initX" type="int" line="227"/>
                <declaration name="maxX" type="int" line="228"/>
                <declaration name="pixscale" type="double" line="229"/>
            </class>
            <method name="GraphicsTests" type="constructor" line="232">
                <params>
                    <param name="parent" type="Group"/>
                    <param name="nodeName" type="String"/>
                    <param name="description" type="String"/>
                </params>
            </method>
            <method name="initTest" type="Object" line="238">
                <params>
                    <param name="env" type="TestEnvironment"/>
                    <param name="result" type="Result"/>
                </params>
                <declaration name="ctx" type="Context" line="239"/>
            </method>
            <method name="pixelsTouched" type="int" line="246">
                <params>
                    <param name="ctx" type="Context"/>
                </params>
            </method>
            <method name="createContext" type="Context" line="250"/>
            <method name="getOutputSize" type="Dimension" line="254">
                <params>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <method name="initContext" type="void" line="258">
                <params>
                    <param name="env" type="TestEnvironment"/>
                    <param name="ctx" type="Context"/>
                </params>
                <comment line="314">
                    ctx.orgX = ctx.orgY = 0;                    
                </comment>
                <declaration name="w" type="int" line="260"/>
                <declaration name="h" type="int" line="261"/>
                <scope line="265">
                    <declaration name="g2d" type="Graphics2D" line="266"/>
                    <declaration name="ac" type="AlphaComposite" line="267"/>
                    <scope line="268"/>
                    <scope line="272"/>
                    <scope line="275">
                        <declaration name="p" type="Polygon" line="276"/>
                    </scope>
                    <declaration name="tx" type="Transform" line="284"/>
                    <declaration name="envdim" type="Dimension" line="285"/>
                </scope>
            </method>
            <method name="cleanupTest" type="void" line="321">
                <params>
                    <param name="env" type="TestEnvironment"/>
                    <param name="ctx" type="Object"/>
                </params>
                <declaration name="graphics" type="Graphics" line="322"/>
            </method>
            <class name="Transform" line="327">
                <method name="getShortName" type="String" line="328"/>
                <method name="getDescription" type="String" line="329"/>
                <method name="init" type="void" line="330"/>
                <method name="scaleForPoint" type="double" line="336">
                    <params>
                        <param name="at" type="AffineTransform"/>
                        <param name="xorig" type="double"/>
                        <param name="yorig" type="double"/>
                        <param name="x" type="double"/>
                        <param name="y" type="double"/>
                        <param name="w" type="int"/>
                        <param name="h" type="int"/>
                    </params>
                    <declaration name="ptd" type="Point2D.Double" line="337"/>
                    <declaration name="scale" type="double" line="341"/>
                    <scope line="342"/>
                    <scope line="344"/>
                    <scope line="347"/>
                    <scope line="349"/>
                </method>
                <method name="scaleForTransform" type="Dimension" line="357">
                    <params>
                        <param name="at" type="AffineTransform"/>
                        <param name="dim" type="Dimension"/>
                    </params>
                    <declaration name="w" type="int" line="358"/>
                    <declaration name="h" type="int" line="359"/>
                    <declaration name="ptd" type="Point2D.Double" line="360"/>
                    <declaration name="ox" type="double" line="362"/>
                    <declaration name="oy" type="double" line="363"/>
                    <scope line="364"/>
                    <declaration name="scalex" type="double" line="367"/>
                    <declaration name="scaley" type="double" line="368"/>
                    <scope line="371"/>
                </method>
            </class>
            <class name="Identity" line="379">
                <extends class="Transform"/>
                <declaration name="instance" type="Identity" line="380"/>
                <method name="Identity" type="constructor" line="382"/>
                <method name="getShortName" type="String" line="384"/>
                <method name="getDescription" type="String" line="388"/>
                <method name="init" type="void" line="392">
                    <params>
                        <param name="g2d" type="Graphics2D"/>
                        <param name="ctx" type="Context"/>
                        <param name="dim" type="Dimension"/>
                    </params>
                </method>
            </class>
            <class name="FTranslate" line="396">
                <extends class="Transform"/>
                <declaration name="instance" type="FTranslate" line="397"/>
                <method name="FTranslate" type="constructor" line="399"/>
                <method name="getShortName" type="String" line="401"/>
                <method name="getDescription" type="String" line="405"/>
                <method name="init" type="void" line="409">
                    <params>
                        <param name="g2d" type="Graphics2D"/>
                        <param name="ctx" type="Context"/>
                        <param name="dim" type="Dimension"/>
                    </params>
                    <declaration name="w" type="int" line="410"/>
                    <declaration name="h" type="int" line="411"/>
                    <declaration name="at" type="AffineTransform" line="412"/>
                </method>
            </class>
            <class name="Scale2x2" line="419">
                <extends class="Transform"/>
                <declaration name="instance" type="Scale2x2" line="420"/>
                <method name="Scale2x2" type="constructor" line="422"/>
                <method name="getShortName" type="String" line="424"/>
                <method name="getDescription" type="String" line="428"/>
                <method name="init" type="void" line="432">
                    <params>
                        <param name="g2d" type="Graphics2D"/>
                        <param name="ctx" type="Context"/>
                        <param name="dim" type="Dimension"/>
                    </params>
                    <declaration name="w" type="int" line="433"/>
                    <declaration name="h" type="int" line="434"/>
                    <declaration name="at" type="AffineTransform" line="435"/>
                </method>
            </class>
            <class name="Rotate15" line="443">
                <extends class="Transform"/>
                <declaration name="instance" type="Rotate15" line="444"/>
                <method name="Rotate15" type="constructor" line="446"/>
                <method name="getShortName" type="String" line="448"/>
                <method name="getDescription" type="String" line="452"/>
                <method name="init" type="void" line="456">
                    <params>
                        <param name="g2d" type="Graphics2D"/>
                        <param name="ctx" type="Context"/>
                        <param name="dim" type="Dimension"/>
                    </params>
                    <declaration name="w" type="int" line="457"/>
                    <declaration name="h" type="int" line="458"/>
                    <declaration name="theta" type="double" line="459"/>
                    <declaration name="cos" type="double" line="460"/>
                    <declaration name="sin" type="double" line="461"/>
                    <declaration name="xsize" type="double" line="462"/>
                    <declaration name="ysize" type="double" line="463"/>
                    <declaration name="scale" type="double" line="464"/>
                    <declaration name="at" type="AffineTransform" line="467"/>
                </method>
            </class>
            <class name="ShearX" line="476">
                <extends class="Transform"/>
                <declaration name="instance" type="ShearX" line="477"/>
                <method name="ShearX" type="constructor" line="479"/>
                <method name="getShortName" type="String" line="481"/>
                <method name="getDescription" type="String" line="485"/>
                <method name="init" type="void" line="489">
                    <params>
                        <param name="g2d" type="Graphics2D"/>
                        <param name="ctx" type="Context"/>
                        <param name="dim" type="Dimension"/>
                    </params>
                    <declaration name="w" type="int" line="490"/>
                    <declaration name="h" type="int" line="491"/>
                    <declaration name="at" type="AffineTransform" line="492"/>
                </method>
            </class>
            <class name="ShearY" line="500">
                <extends class="Transform"/>
                <declaration name="instance" type="ShearY" line="501"/>
                <method name="ShearY" type="constructor" line="503"/>
                <method name="getShortName" type="String" line="505"/>
                <method name="getDescription" type="String" line="509"/>
                <method name="init" type="void" line="513">
                    <params>
                        <param name="g2d" type="Graphics2D"/>
                        <param name="ctx" type="Context"/>
                        <param name="dim" type="Dimension"/>
                    </params>
                    <declaration name="w" type="int" line="514"/>
                    <declaration name="h" type="int" line="515"/>
                    <declaration name="at" type="AffineTransform" line="516"/>
                </method>
            </class>
        </class>
    </source>