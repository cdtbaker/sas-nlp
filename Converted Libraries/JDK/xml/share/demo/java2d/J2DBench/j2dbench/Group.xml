<?xml version="1.0" encoding="UTF-8"?>
    <source package="j2dbench">
        <import package="java.io.PrintWriter"/>
        <import package="javax.swing.BoxLayout"/>
        <import package="javax.swing.JComponent"/>
        <import package="javax.swing.JPanel"/>
        <import package="javax.swing.JTabbedPane"/>
        <import package="javax.swing.border.TitledBorder"/>
        <import package="java.util.NoSuchElementException"/>
        <import package="j2dbench.ui.CompactLayout"/>
        <import package="j2dbench.ui.EnableButton"/>
        <class name="Group" line="45">
            <extends class="Node"/>
            <declaration name="root" type="Group" line="46"/>
            <declaration name="children" type="Node" line="48"/>
            <declaration name="tabbed" type="boolean" line="49"/>
            <declaration name="hidden" type="boolean" line="50"/>
            <declaration name="horizontal" type="boolean" line="51"/>
            <declaration name="bordered" type="Boolean" line="52"/>
            <declaration name="tabPlacement" type="int" line="53"/>
            <method name="Group" type="constructor" line="55"/>
            <method name="Group" type="constructor" line="59">
                <params>
                    <param name="nodeName" type="String"/>
                    <param name="description" type="String"/>
                </params>
            </method>
            <method name="Group" type="constructor" line="63">
                <params>
                    <param name="parent" type="Group"/>
                    <param name="nodeName" type="String"/>
                    <param name="description" type="String"/>
                </params>
            </method>
            <method name="addChild" type="void" line="67">
                <params>
                    <param name="child" type="Node"/>
                </params>
                <declaration name="prev" type="Node" line="68"/>
                <scope line="69">
                    <scope line="70"/>
                </scope>
                <scope line="75"/>
                <scope line="77"/>
            </method>
            <method name="getChildIterator" type="Node.Iterator" line="82"/>
            <method name="getRecursiveChildIterator" type="Node.Iterator" line="86"/>
            <method name="getFirstChild" type="Node" line="90"/>
            <method name="isBordered" type="boolean" line="94">
                <scope line="95"/>
            </method>
            <method name="isTabbed" type="boolean" line="101"/>
            <method name="isHidden" type="boolean" line="105"/>
            <method name="isHorizontal" type="boolean" line="109"/>
            <method name="setBordered" type="void" line="113">
                <params>
                    <param name="b" type="boolean"/>
                </params>
            </method>
            <method name="setTabbed" type="void" line="117"/>
            <method name="setTabbed" type="void" line="121">
                <params>
                    <param name="tabPlacement" type="int"/>
                </params>
            </method>
            <method name="setHidden" type="void" line="126"/>
            <method name="setHorizontal" type="void" line="130"/>
            <method name="traverse" type="void" line="134">
                <params>
                    <param name="v" type="Visitor"/>
                </params>
                <scope line="136"/>
            </method>
            <method name="restoreDefault" type="void" line="141"/>
            <method name="setOption" type="String" line="144">
                <params>
                    <param name="key" type="String"/>
                    <param name="value" type="String"/>
                </params>
                <declaration name="index" type="int" line="145"/>
                <declaration name="subkey" type="String" line="146"/>
                <scope line="147"/>
                <scope line="149"/>
                <scope line="153">
                    <scope line="154"/>
                </scope>
            </method>
            <method name="write" type="void" line="161">
                <params>
                    <param name="pw" type="PrintWriter"/>
                </params>
            </method>
            <method name="getJComponent" type="JComponent" line="164">
                <scope line="165"/>
                <scope line="167">
                    <declaration name="jtp" type="JTabbedPane" line="168"/>
                    <scope line="169">
                        <declaration name="comp" type="JComponent" line="170"/>
                        <scope line="171"/>
                    </scope>
                </scope>
                <scope line="176">
                    <declaration name="p" type="JPanel" line="177"/>
                    <scope line="183"/>
                    <scope line="187">
                        <declaration name="comp" type="JComponent" line="188"/>
                        <scope line="189"/>
                    </scope>
                </scope>
            </method>
            <method name="addEnableButtons" type="void" line="197">
                <params>
                    <param name="p" type="JPanel"/>
                </params>
            </method>
            <method name="restoreAllDefaults" type="void" line="204">
                <anonymous_class line="205">
                    <method name="visit" type="void" line="206">
                        <params>
                            <param name="node" type="Node"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <method name="writeAll" type="void" line="212">
                <params>
                    <param name="pw" type="PrintWriter"/>
                </params>
                <anonymous_class line="213">
                    <method name="visit" type="void" line="214">
                        <params>
                            <param name="node" type="Node"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <method name="setOption" type="String" line="221">
                <params>
                    <param name="s" type="String"/>
                </params>
                <declaration name="index" type="int" line="222"/>
                <scope line="223"/>
                <declaration name="key" type="String" line="226"/>
                <declaration name="value" type="String" line="227"/>
            </method>
            <method name="toString" type="String" line="231"/>
            <class name="ChildIterator" line="235">
                <implements interface="Node.Iterator"/>
                <declaration name="cur" type="Node" line="236"/>
                <method name="hasNext" type="boolean" line="238"/>
                <method name="next" type="Node" line="242">
                    <declaration name="ret" type="Node" line="243"/>
                    <scope line="244"/>
                </method>
            </class>
            <class name="RecursiveChildIterator" line="252">
                <extends class="ChildIterator"/>
                <declaration name="subiterator" type="Node.Iterator" line="253"/>
                <method name="hasNext" type="boolean" line="255">
                    <scope line="256">
                        <scope line="257"/>
                        <scope line="260"/>
                        <scope line="263"/>
                    </scope>
                </method>
                <method name="next" type="Node" line="270">
                    <scope line="271"/>
                    <scope line="273"/>
                </method>
            </class>
            <class name="EnableSet" line="279">
                <extends class="Group"/>
                <implements interface="Modifier"/>
                <method name="EnableSet" type="constructor" line="280"/>
                <method name="EnableSet" type="constructor" line="284">
                    <params>
                        <param name="parent" type="Group"/>
                        <param name="nodeName" type="String"/>
                        <param name="description" type="String"/>
                    </params>
                </method>
                <method name="getIterator" type="Modifier.Iterator" line="288">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                    </params>
                </method>
                <method name="modifyTest" type="void" line="292">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="val" type="Object"/>
                    </params>
                </method>
                <method name="restoreTest" type="void" line="297">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="val" type="Object"/>
                    </params>
                </method>
                <method name="getAbbreviatedModifierDescription" type="String" line="302">
                    <params>
                        <param name="val" type="Object"/>
                    </params>
                    <declaration name="oe" type="Option.Enable" line="303"/>
                </method>
                <method name="getModifierValueName" type="String" line="307">
                    <params>
                        <param name="val" type="Object"/>
                    </params>
                    <declaration name="oe" type="Option.Enable" line="308"/>
                </method>
                <class name="EnableIterator" line="312">
                    <implements interface="Modifier.Iterator"/>
                    <declaration name="childiterator" type="Node.Iterator" line="313"/>
                    <declaration name="curval" type="Option.Enable" line="314"/>
                    <method name="hasNext" type="boolean" line="316">
                        <scope line="317"/>
                        <scope line="320">
                            <declaration name="node" type="Node" line="321"/>
                            <scope line="322">
                                <scope line="324"/>
                            </scope>
                        </scope>
                    </method>
                    <method name="next" type="Object" line="333">
                        <scope line="334">
                            <scope line="335"/>
                        </scope>
                        <declaration name="ret" type="Object" line="339"/>
                    </method>
                </class>
            </class>
        </class>
    </source>