<?xml version="1.0" encoding="UTF-8"?>
    <source package="j2dbench">
        <import package="java.io.PrintWriter"/>
        <import package="javax.swing.BoxLayout"/>
        <import package="javax.swing.JComponent"/>
        <import package="javax.swing.JPanel"/>
        <import package="javax.swing.JTabbedPane"/>
        <import package="javax.swing.border.TitledBorder"/>
        <import package="java.util.NoSuchElementException"/>
        <import package="j2dbench.ui.CompactLayout"/>
        <import package="j2dbench.ui.EnableButton"/>
        <class name="Group" line="11">
            <extends class="Node"/>
            <declaration name="root" type="Group" line="12"/>
            <declaration name="children" type="Node" line="13"/>
            <declaration name="tabbed" type="boolean" line="14"/>
            <declaration name="hidden" type="boolean" line="15"/>
            <declaration name="horizontal" type="boolean" line="16"/>
            <declaration name="bordered" type="Boolean" line="17"/>
            <declaration name="tabPlacement" type="int" line="18"/>
            <method name="Group" type="constructor" line="19"/>
            <method name="Group" type="constructor" line="22">
                <params>
                    <param name="nodeName" type="String"/>
                    <param name="description" type="String"/>
                </params>
            </method>
            <method name="Group" type="constructor" line="25">
                <params>
                    <param name="parent" type="Group"/>
                    <param name="nodeName" type="String"/>
                    <param name="description" type="String"/>
                </params>
            </method>
            <method name="addChild" type="void" line="28">
                <params>
                    <param name="child" type="Node"/>
                </params>
                <declaration name="prev" type="Node" line="29"/>
                <scope line="30">
                    <scope line="31"/>
                </scope>
                <scope line="36"/>
                <scope line="39"/>
            </method>
            <method name="getChildIterator" type="Node.Iterator" line="43"/>
            <method name="getRecursiveChildIterator" type="Node.Iterator" line="46"/>
            <method name="getFirstChild" type="Node" line="49"/>
            <method name="isBordered" type="boolean" line="52">
                <scope line="53"/>
            </method>
            <method name="isTabbed" type="boolean" line="58"/>
            <method name="isHidden" type="boolean" line="61"/>
            <method name="isHorizontal" type="boolean" line="64"/>
            <method name="setBordered" type="void" line="67">
                <params>
                    <param name="b" type="boolean"/>
                </params>
            </method>
            <method name="setTabbed" type="void" line="70"/>
            <method name="setTabbed" type="void" line="73">
                <params>
                    <param name="tabPlacement" type="int"/>
                </params>
            </method>
            <method name="setHidden" type="void" line="77"/>
            <method name="setHorizontal" type="void" line="80"/>
            <method name="traverse" type="void" line="83">
                <params>
                    <param name="v" type="Visitor"/>
                </params>
                <scope line="85"/>
            </method>
            <method name="restoreDefault" type="void" line="89"/>
            <method name="setOption" type="String" line="91">
                <params>
                    <param name="key" type="String"/>
                    <param name="value" type="String"/>
                </params>
                <declaration name="index" type="int" line="92"/>
                <declaration name="subkey" type="String" line="93"/>
                <scope line="94"/>
                <scope line="97"/>
                <scope line="101">
                    <scope line="102"/>
                </scope>
            </method>
            <method name="write" type="void" line="108">
                <params>
                    <param name="pw" type="PrintWriter"/>
                </params>
            </method>
            <method name="getJComponent" type="JComponent" line="110">
                <scope line="111"/>
                <scope line="114">
                    <declaration name="jtp" type="JTabbedPane" line="115"/>
                    <scope line="116">
                        <declaration name="comp" type="JComponent" line="117"/>
                        <scope line="118"/>
                    </scope>
                </scope>
                <scope line="124">
                    <declaration name="p" type="JPanel" line="125"/>
                    <scope line="128"/>
                    <scope line="132">
                        <declaration name="comp" type="JComponent" line="133"/>
                        <scope line="134"/>
                    </scope>
                </scope>
            </method>
            <method name="addEnableButtons" type="void" line="141">
                <params>
                    <param name="p" type="JPanel"/>
                </params>
            </method>
            <method name="restoreAllDefaults" type="void" line="147">
                <anonymous_class line="148">
                    <method name="visit" type="void" line="149">
                        <params>
                            <param name="node" type="Node"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <method name="writeAll" type="void" line="155">
                <params>
                    <param name="pw" type="PrintWriter"/>
                </params>
                <anonymous_class line="156">
                    <method name="visit" type="void" line="157">
                        <params>
                            <param name="node" type="Node"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <method name="setOption" type="String" line="164">
                <params>
                    <param name="s" type="String"/>
                </params>
                <declaration name="index" type="int" line="165"/>
                <scope line="166"/>
                <declaration name="key" type="String" line="169"/>
                <declaration name="value" type="String" line="170"/>
            </method>
            <method name="toString" type="String" line="173"/>
            <class name="ChildIterator" line="176">
                <implements interface="Node.Iterator"/>
                <declaration name="cur" type="Node" line="177"/>
                <method name="hasNext" type="boolean" line="178"/>
                <method name="next" type="Node" line="181">
                    <declaration name="ret" type="Node" line="182"/>
                    <scope line="183"/>
                </method>
            </class>
            <class name="RecursiveChildIterator" line="190">
                <extends class="ChildIterator"/>
                <declaration name="subiterator" type="Node.Iterator" line="191"/>
                <method name="hasNext" type="boolean" line="192">
                    <scope line="193">
                        <scope line="194"/>
                        <scope line="197"/>
                        <scope line="201"/>
                    </scope>
                </method>
                <method name="next" type="Node" line="207">
                    <scope line="208"/>
                    <scope line="211"/>
                </method>
            </class>
            <class name="EnableSet" line="216">
                <extends class="Group"/>
                <implements interface="Modifier"/>
                <method name="EnableSet" type="constructor" line="217"/>
                <method name="EnableSet" type="constructor" line="220">
                    <params>
                        <param name="parent" type="Group"/>
                        <param name="nodeName" type="String"/>
                        <param name="description" type="String"/>
                    </params>
                </method>
                <method name="getIterator" type="Modifier.Iterator" line="223">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                    </params>
                </method>
                <method name="modifyTest" type="void" line="226">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="val" type="Object"/>
                    </params>
                </method>
                <method name="restoreTest" type="void" line="230">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="val" type="Object"/>
                    </params>
                </method>
                <method name="getAbbreviatedModifierDescription" type="String" line="234">
                    <params>
                        <param name="val" type="Object"/>
                    </params>
                    <declaration name="oe" type="Option.Enable" line="235"/>
                </method>
                <method name="getModifierValueName" type="String" line="238">
                    <params>
                        <param name="val" type="Object"/>
                    </params>
                    <declaration name="oe" type="Option.Enable" line="239"/>
                </method>
                <class name="EnableIterator" line="242">
                    <implements interface="Modifier.Iterator"/>
                    <declaration name="childiterator" type="Node.Iterator" line="243"/>
                    <declaration name="curval" type="Option.Enable" line="244"/>
                    <method name="hasNext" type="boolean" line="245">
                        <scope line="246"/>
                        <scope line="249">
                            <declaration name="node" type="Node" line="250"/>
                            <scope line="251">
                                <scope line="253"/>
                            </scope>
                        </scope>
                    </method>
                    <method name="next" type="Object" line="261">
                        <scope line="262">
                            <scope line="263"/>
                        </scope>
                        <declaration name="ret" type="Object" line="267"/>
                    </method>
                </class>
            </class>
        </class>
    </source>