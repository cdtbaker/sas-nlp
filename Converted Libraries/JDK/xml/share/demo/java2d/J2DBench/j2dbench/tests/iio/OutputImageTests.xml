<?xml version="1.0" encoding="UTF-8"?>
    <source package="j2dbench.tests.iio">
        <import package="java.awt.Graphics"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.io.BufferedOutputStream"/>
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.File"/>
        <import package="java.io.FileOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="javax.imageio.ImageIO"/>
        <import package="javax.imageio.ImageWriter"/>
        <import package="javax.imageio.event.IIOWriteProgressListener"/>
        <import package="javax.imageio.spi.IIORegistry"/>
        <import package="javax.imageio.spi.ImageWriterSpi"/>
        <import package="javax.imageio.stream.ImageOutputStream"/>
        <import package="j2dbench.Group"/>
        <import package="j2dbench.Modifier"/>
        <import package="j2dbench.Option"/>
        <import package="j2dbench.Result"/>
        <import package="j2dbench.Test"/>
        <import package="j2dbench.TestEnvironment"/>
        <class name="OutputImageTests" line="24">
            <extends class="OutputTests"/>
            <declaration name="TEST_IMAGEIO" type="int" line="25"/>
            <declaration name="TEST_IMAGEWRITER" type="int" line="26"/>
            <declaration name="imageRoot" type="Group" line="27"/>
            <declaration name="imageioRoot" type="Group" line="28"/>
            <declaration name="imageioOptRoot" type="Group" line="29"/>
            <declaration name="imageioWriterSpis" type="ImageWriterSpi[]" line="30"/>
            <declaration name="imageioWriteFormatShortNames" type="String[]" line="31"/>
            <declaration name="imageioWriteFormatList" type="Option" line="32"/>
            <declaration name="imageioTestRoot" type="Group" line="33"/>
            <declaration name="imageWriterRoot" type="Group" line="34"/>
            <declaration name="imageWriterOptRoot" type="Group" line="35"/>
            <declaration name="installListenerTog" type="Option" line="36"/>
            <declaration name="imageWriterTestRoot" type="Group" line="37"/>
            <method name="init" type="void" line="38">
                <scope line="41"/>
            </method>
            <method name="initIIOWriteFormats" type="void" line="55">
                <declaration name="spis" type="List" line="56"/>
                <declaration name="shortNames" type="List" line="57"/>
                <declaration name="registry" type="IIORegistry" line="59"/>
                <declaration name="writerspis" type="java.util.Iterator" line="60"/>
                <scope line="61">
                    <declaration name="spi" type="ImageWriterSpi" line="62"/>
                    <declaration name="klass" type="String" line="63"/>
                    <declaration name="format" type="String" line="64"/>
                    <declaration name="suffix" type="String" line="65"/>
                    <scope line="66"/>
                    <declaration name="shortName" type="String" line="69"/>
                    <scope line="70"/>
                    <scope line="73"/>
                </scope>
            </method>
            <method name="OutputImageTests" type="constructor" line="84">
                <params>
                    <param name="parent" type="Group"/>
                    <param name="nodeName" type="String"/>
                    <param name="description" type="String"/>
                </params>
            </method>
            <method name="cleanupTest" type="void" line="87">
                <params>
                    <param name="env" type="TestEnvironment"/>
                    <param name="ctx" type="Object"/>
                </params>
                <declaration name="iioctx" type="Context" line="88"/>
            </method>
            <class name="Context" line="91">
                <extends class="OutputTests.Context"/>
                <declaration name="format" type="String" line="92"/>
                <declaration name="image" type="BufferedImage" line="93"/>
                <declaration name="writer" type="ImageWriter" line="94"/>
                <method name="Context" type="constructor" line="95">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="result" type="Result"/>
                        <param name="testType" type="int"/>
                    </params>
                    <declaration name="content" type="String" line="97"/>
                    <scope line="98"/>
                    <scope line="104">
                        <declaration name="writerspi" type="ImageWriterSpi" line="105"/>
                        <scope line="107">
                            <scope line="108"/>
                            <scope line="111"/>
                            <scope line="115"/>
                        </scope>
                        <scope line="119">
                            <declaration name="newimg" type="BufferedImage" line="120"/>
                            <declaration name="g" type="Graphics" line="121"/>
                        </scope>
                    </scope>
                    <scope line="127"/>
                </method>
                <method name="initContents" type="void" line="132">
                    <params>
                        <param name="f" type="File"/>
                    </params>
                </method>
                <method name="initContents" type="void" line="135">
                    <params>
                        <param name="out" type="OutputStream"/>
                    </params>
                </method>
                <method name="cleanup" type="void" line="138">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                    </params>
                    <scope line="140"/>
                </method>
            </class>
            <class name="ImageIOWrite" line="146">
                <extends class="OutputImageTests"/>
                <method name="ImageIOWrite" type="constructor" line="147">
                    <anonymous_class line="149">
                        <method name="isCompatible" type="boolean" line="150">
                            <params>
                                <param name="val" type="Object"/>
                            </params>
                            <declaration name="t" type="OutputType" line="151"/>
                        </method>
                    </anonymous_class>
                </method>
                <method name="initTest" type="Object" line="158">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="result" type="Result"/>
                    </params>
                </method>
                <method name="runTest" type="void" line="161">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="ictx" type="Context" line="162"/>
                    <declaration name="output" type="Object" line="163"/>
                    <declaration name="image" type="BufferedImage" line="164"/>
                    <declaration name="format" type="String" line="165"/>
                    <declaration name="outputType" type="int" line="166"/>
                    <scope line="169">
                        <scope line="170"/>
                        <scope line="173"/>
                    </scope>
                    <scope line="180">
                        <scope line="181">
                            <declaration name="baos" type="ByteArrayOutputStream" line="182"/>
                            <declaration name="bos" type="BufferedOutputStream" line="183"/>
                        </scope>
                        <scope line="187"/>
                    </scope>
                </method>
            </class>
            <class name="ImageWriterWrite" line="198">
                <extends class="OutputImageTests"/>
                <method name="ImageWriterWrite" type="constructor" line="199"/>
                <method name="initTest" type="Object" line="206">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="result" type="Result"/>
                    </params>
                </method>
                <method name="runTest" type="void" line="209">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="ictx" type="Context" line="210"/>
                    <declaration name="writer" type="ImageWriter" line="211"/>
                    <declaration name="image" type="BufferedImage" line="212"/>
                    <scope line="213">
                        <scope line="214">
                            <declaration name="ios" type="ImageOutputStream" line="215"/>
                        </scope>
                        <scope line="222"/>
                    </scope>
                </method>
            </class>
            <class name="WriteProgressListener" line="229">
                <implements interface="IIOWriteProgressListener"/>
                <method name="imageStarted" type="void" line="230">
                    <params>
                        <param name="source" type="ImageWriter"/>
                        <param name="imageIndex" type="int"/>
                    </params>
                </method>
                <method name="imageProgress" type="void" line="232">
                    <params>
                        <param name="source" type="ImageWriter"/>
                        <param name="percentageDone" type="float"/>
                    </params>
                </method>
                <method name="imageComplete" type="void" line="234">
                    <params>
                        <param name="source" type="ImageWriter"/>
                    </params>
                </method>
                <method name="thumbnailStarted" type="void" line="236">
                    <params>
                        <param name="source" type="ImageWriter"/>
                        <param name="imageIndex" type="int"/>
                        <param name="thumbnailIndex" type="int"/>
                    </params>
                </method>
                <method name="thumbnailProgress" type="void" line="238">
                    <params>
                        <param name="source" type="ImageWriter"/>
                        <param name="percentageDone" type="float"/>
                    </params>
                </method>
                <method name="thumbnailComplete" type="void" line="240">
                    <params>
                        <param name="source" type="ImageWriter"/>
                    </params>
                </method>
                <method name="writeAborted" type="void" line="242">
                    <params>
                        <param name="source" type="ImageWriter"/>
                    </params>
                </method>
            </class>
        </class>
    </source>