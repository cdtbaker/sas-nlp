<?xml version="1.0" encoding="UTF-8"?>
    <source package="j2dbench.tests.text">
        <import package="java.awt.Color"/>
        <import package="java.awt.Font"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.GraphicsEnvironment"/>
        <import package="java.awt.RenderingHints"/>
        <import package="java.awt.font.NumericShaper"/>
        <import package="java.awt.font.TextAttribute"/>
        <import package="java.awt.font.FontRenderContext"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.BufferedReader"/>
        <import package="java.io.InputStreamReader"/>
        <import package="java.io.IOException"/>
        <import package="java.io.PrintWriter"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Map"/>
        <import package="java.util.Set"/>
        <import package="javax.swing.JComponent"/>
        <import package="j2dbench.Destinations"/>
        <import package="j2dbench.Group"/>
        <import package="j2dbench.Node"/>
        <import package="j2dbench.Option"/>
        <import package="j2dbench.Option.ObjectList"/>
        <import package="j2dbench.Result"/>
        <import package="j2dbench.Test"/>
        <import package="j2dbench.TestEnvironment"/>
        <class name="TextTests" line="30">
            <extends class="Test"/>
            <declaration name="hasGraphics2D" type="boolean" line="31"/>
            <scope line="32">
                <scope line="33"/>
                <scope line="36"/>
            </scope>
            <declaration name="tlengths" type="int[]" line="39"/>
            <declaration name="tscripts" type="String[]" line="40"/>
            <declaration name="fsizes" type="float[]" line="41"/>
            <declaration name="fintsizes" type="float[]" line="42"/>
            <method name="floatObjectList" type="Float[]" line="43">
                <params>
                    <param name="input" type="float[]"/>
                </params>
                <declaration name="result" type="Float[]" line="44"/>
                <scope line="45"/>
            </method>
            <method name="floatStringList" type="String[]" line="50">
                <params>
                    <param name="input" type="float[]"/>
                </params>
            </method>
            <method name="floatStringList" type="String[]" line="53">
                <params>
                    <param name="input" type="float[]"/>
                    <param name="sfx" type="String"/>
                </params>
            </method>
            <method name="floatStringList" type="String[]" line="56">
                <params>
                    <param name="pfx" type="String"/>
                    <param name="input" type="float[]"/>
                    <param name="sfx" type="String"/>
                </params>
                <declaration name="result" type="String[]" line="57"/>
                <scope line="58"/>
            </method>
            <method name="intStringList" type="String[]" line="63">
                <params>
                    <param name="input" type="int[]"/>
                </params>
            </method>
            <method name="intStringList" type="String[]" line="66">
                <params>
                    <param name="input" type="int[]"/>
                    <param name="sfx" type="String"/>
                </params>
            </method>
            <method name="intStringList" type="String[]" line="69">
                <params>
                    <param name="pfx" type="String"/>
                    <param name="input" type="int[]"/>
                    <param name="sfx" type="String"/>
                </params>
                <declaration name="result" type="String[]" line="70"/>
                <scope line="71"/>
            </method>
            <declaration name="txNames" type="String[]" line="76"/>
            <declaration name="txDescNames" type="String[]" line="77"/>
            <declaration name="txList" type="AffineTransform[]" line="78"/>
            <declaration name="maps" type="Map[]" line="79"/>
            <scope line="80">
                <declaration name="identity" type="AffineTransform" line="81"/>
                <declaration name="sm_scale" type="AffineTransform" line="82"/>
                <declaration name="lg_scale" type="AffineTransform" line="83"/>
                <declaration name="wide" type="AffineTransform" line="84"/>
                <declaration name="tall" type="AffineTransform" line="85"/>
                <declaration name="x_trans" type="AffineTransform" line="86"/>
                <declaration name="y_trans" type="AffineTransform" line="87"/>
                <declaration name="xy_trans" type="AffineTransform" line="88"/>
                <declaration name="sm_rot" type="AffineTransform" line="89"/>
                <declaration name="lg_rot" type="AffineTransform" line="90"/>
                <declaration name="pi2_rot" type="AffineTransform" line="91"/>
                <declaration name="x_shear" type="AffineTransform" line="92"/>
                <declaration name="y_shear" type="AffineTransform" line="93"/>
                <declaration name="xy_shear" type="AffineTransform" line="94"/>
                <declaration name="x_flip" type="AffineTransform" line="95"/>
                <declaration name="y_flip" type="AffineTransform" line="96"/>
                <declaration name="xy_flip" type="AffineTransform" line="97"/>
                <declaration name="w_rot" type="AffineTransform" line="98"/>
                <declaration name="w_y_shear" type="AffineTransform" line="100"/>
                <declaration name="w_r_trans" type="AffineTransform" line="102"/>
                <declaration name="w_t_rot" type="AffineTransform" line="105"/>
                <declaration name="w_y_s_r_trans" type="AffineTransform" line="108"/>
                <declaration name="fontMap" type="HashMap" line="115"/>
                <declaration name="emptyMap" type="HashMap" line="117"/>
                <declaration name="simpleMap" type="HashMap" line="118"/>
                <declaration name="complexMap" type="HashMap" line="122"/>
                <scope line="127"/>
                <scope line="130"/>
            </scope>
            <method name="getString" type="String" line="134">
                <params>
                    <param name="key" type="Object"/>
                    <param name="len" type="int"/>
                </params>
                <declaration name="keyString" type="String" line="135"/>
                <declaration name="strings" type="String[]" line="136"/>
                <declaration name="span" type="int" line="137"/>
                <declaration name="n" type="int" line="138"/>
                <scope line="139"/>
                <scope line="142">
                    <declaration name="m" type="int" line="144"/>
                    <scope line="145"/>
                    <scope line="149"/>
                </scope>
                <declaration name="s" type="String" line="155"/>
                <declaration name="pos" type="int" line="156"/>
                <declaration name="strx" type="int" line="157"/>
                <scope line="158">
                    <declaration name="src" type="String" line="159"/>
                    <scope line="160"/>
                    <scope line="164"/>
                    <scope line="167"/>
                </scope>
            </method>
            <declaration name="strcache" type="HashMap" line="175"/>
            <method name="getSimpleString" type="String" line="176">
                <params>
                    <param name="key" type="Object"/>
                </params>
                <declaration name="s" type="String" line="177"/>
                <scope line="178">
                    <declaration name="fname" type="String" line="179"/>
                    <scope line="180">
                        <declaration name="is" type="InputStream" line="181"/>
                        <scope line="182"/>
                        <declaration name="r" type="BufferedReader" line="185"/>
                        <declaration name="buf" type="StringBuffer" line="186"/>
                        <scope line="187"/>
                        <scope line="192"/>
                    </scope>
                    <scope line="196"/>
                </scope>
            </method>
            <declaration name="textroot" type="Group" line="203"/>
            <declaration name="txoptroot" type="Group" line="204"/>
            <declaration name="txoptdataroot" type="Group" line="205"/>
            <declaration name="txoptfontroot" type="Group" line="206"/>
            <declaration name="txoptgraphicsroot" type="Group" line="207"/>
            <declaration name="advoptsroot" type="Group" line="208"/>
            <declaration name="tlengthList" type="Option" line="209"/>
            <declaration name="tscriptList" type="Option" line="210"/>
            <declaration name="fnameList" type="Option" line="211"/>
            <declaration name="fstyleList" type="Option" line="212"/>
            <declaration name="fsizeList" type="Option" line="213"/>
            <declaration name="ftxList" type="Option" line="214"/>
            <declaration name="taaList" type="Option" line="215"/>
            <declaration name="tfmTog" type="Option" line="216"/>
            <declaration name="gaaTog" type="Option" line="217"/>
            <declaration name="gtxList" type="Option" line="218"/>
            <declaration name="gvstyList" type="Option" line="219"/>
            <declaration name="tlrunList" type="Option" line="220"/>
            <declaration name="tlmapList" type="Option" line="221"/>
            <method name="init" type="void" line="222">
                <declaration name="fsl" type="float[]" line="235"/>
                <scope line="238">
                    <declaration name="taaNames" type="String[]" line="242"/>
                    <declaration name="taaHints" type="Object[]" line="243"/>
                    <scope line="244"/>
                    <scope line="248"/>
                    <declaration name="runs" type="int[]" line="261"/>
                    <declaration name="tlmapnames" type="String[]" line="263"/>
                </scope>
            </method>
            <class name="TextAAOpt" line="267">
                <extends class="Node"/>
                <javadoc line="267">
                    This &quot;virtual Node&quot; implementation is here to maintain backward
                      compatibility with older J2DBench releases, specifically those
                      options files that were created before we added LCD-optimized text
                      hints in JDK 6.  This class will translate the text antialias settings
                      from the old &quot;taa&quot; On/Off/Both choice into the new expanded version.                    
                </javadoc>
                <method name="TextAAOpt" type="constructor" line="275"/>
                <method name="getJComponent" type="JComponent" line="278"/>
                <method name="restoreDefault" type="void" line="281"/>
                <method name="write" type="void" line="283">
                    <params>
                        <param name="pw" type="PrintWriter"/>
                    </params>
                </method>
                <method name="setOption" type="String" line="285">
                    <params>
                        <param name="key" type="String"/>
                        <param name="value" type="String"/>
                    </params>
                    <declaration name="opts" type="String" line="286"/>
                    <scope line="287"/>
                    <scope line="290"/>
                    <scope line="293"/>
                    <scope line="296"/>
                </method>
            </class>
            <class name="Context" line="302">
                <method name="init" type="void" line="303">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="result" type="Result"/>
                    </params>
                </method>
                <method name="cleanup" type="void" line="305">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                    </params>
                </method>
            </class>
            <class name="TextContext" line="308">
                <extends class="Context"/>
                <declaration name="graphics" type="Graphics" line="309"/>
                <declaration name="text" type="String" line="310"/>
                <declaration name="chars" type="char[]" line="311"/>
                <declaration name="font" type="Font" line="312"/>
                <method name="init" type="void" line="313">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="result" type="Result"/>
                    </params>
                    <declaration name="sname" type="String" line="315"/>
                    <declaration name="slen" type="int" line="316"/>
                    <declaration name="fname" type="String" line="319"/>
                    <scope line="320"/>
                    <declaration name="fstyle" type="int" line="323"/>
                    <declaration name="fsize" type="float" line="324"/>
                    <declaration name="ftx" type="AffineTransform" line="325"/>
                    <scope line="327">
                        <scope line="328"/>
                        <scope line="331"/>
                    </scope>
                    <scope line="335">
                        <declaration name="g2d" type="Graphics2D" line="336"/>
                    </scope>
                </method>
                <method name="cleanup" type="void" line="345">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                    </params>
                </method>
            </class>
            <class name="G2DContext" line="350">
                <extends class="TextContext"/>
                <declaration name="g2d" type="Graphics2D" line="351"/>
                <declaration name="frc" type="FontRenderContext" line="352"/>
                <method name="init" type="void" line="353">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="results" type="Result"/>
                    </params>
                </method>
            </class>
            <method name="TextTests" type="constructor" line="359">
                <params>
                    <param name="parent" type="Group"/>
                    <param name="nodeName" type="String"/>
                    <param name="description" type="String"/>
                </params>
            </method>
            <method name="createContext" type="Context" line="364"/>
            <method name="initTest" type="Object" line="367">
                <params>
                    <param name="env" type="TestEnvironment"/>
                    <param name="result" type="Result"/>
                </params>
                <declaration name="ctx" type="Context" line="368"/>
            </method>
            <method name="cleanupTest" type="void" line="372">
                <params>
                    <param name="env" type="TestEnvironment"/>
                    <param name="ctx" type="Object"/>
                </params>
            </method>
            <declaration name="physicalMap" type="Map" line="375"/>
            <method name="physicalFontNameFor" type="String" line="376">
                <params>
                    <param name="textname" type="String"/>
                    <param name="textlen" type="int"/>
                    <param name="text" type="String"/>
                </params>
                <declaration name="lenMap" type="Map" line="377"/>
                <scope line="378"/>
                <declaration name="key" type="Integer" line="382"/>
                <declaration name="textfont" type="Font" line="383"/>
                <scope line="384">
                    <declaration name="fontsToTry" type="Font[]" line="385"/>
                    <scope line="386"/>
                    <scope line="389">
                        <declaration name="fontset" type="Set" line="390"/>
                        <declaration name="iter" type="java.util.Iterator" line="391"/>
                        <scope line="392">
                            <declaration name="e" type="Map.Entry" line="393"/>
                        </scope>
                    </scope>
                    <declaration name="bestFont" type="Font" line="398"/>
                    <declaration name="bestCount" type="int" line="399"/>
                    <scope line="400">
                        <declaration name="font" type="Font" line="401"/>
                        <declaration name="count" type="int" line="402"/>
                        <scope line="403">
                            <scope line="404"/>
                        </scope>
                        <scope line="408"/>
                    </scope>
                </scope>
            </method>
            <class name="FontOption" line="418">
                <extends class="ObjectList"/>
                <declaration name="optionnames" type="String[]" line="419"/>
                <declaration name="descnames" type="String[]" line="420"/>
                <method name="FontOption" type="constructor" line="421">
                    <params>
                        <param name="parent" type="Group"/>
                        <param name="nodeName" type="String"/>
                        <param name="description" type="String"/>
                    </params>
                </method>
                <method name="getValString" type="String" line="424">
                    <params>
                        <param name="value" type="Object"/>
                    </params>
                </method>
                <method name="getAbbreviatedModifierDescription" type="String" line="427">
                    <params>
                        <param name="value" type="Object"/>
                    </params>
                </method>
            </class>
        </class>
    </source>