<?xml version="1.0" encoding="UTF-8"?>
    <source package="j2dbench.tests.text">
        <import package="java.awt.Font"/>
        <import package="java.awt.font.FontRenderContext"/>
        <import package="java.awt.font.GlyphVector"/>
        <import package="java.awt.font.TextLayout"/>
        <import package="java.text.AttributedCharacterIterator"/>
        <import package="java.text.AttributedString"/>
        <import package="java.text.Bidi"/>
        <import package="java.text.CharacterIterator"/>
        <import package="java.util.Map"/>
        <import package="j2dbench.Group"/>
        <import package="j2dbench.Result"/>
        <import package="j2dbench.TestEnvironment"/>
        <class name="TextConstructionTests" line="54">
            <extends class="TextTests"/>
            <comment line="200">
                my bad, clone is not public in GlyphVector!
                
                public static class GVClone extends TextConstructionTests {
                public GVClone() {
                super(constructtestroot, &quot;gvclone&quot;, &quot;Call GV.clone&quot;);
                }
                
                public void runTest(Object ctx, int numReps) {
                TCContext tcctx = (TCContext)ctx;
                final GlyphVector origGV = tcctx.gv;
                GlyphVector gv;
                do {
                gv = (GlyphVector)origGV.clone();
                } while (--numReps &gt;= 0);
                }
                }                
            </comment>
            <declaration name="constructroot" type="Group" line="55"/>
            <declaration name="constructtestroot" type="Group" line="56"/>
            <method name="init" type="void" line="58">
                <comment line="60">
                    don&apos;t even bother with this at all if we don&apos;t have Java2 APIs.                    
                </comment>
                <comment line="70">
                    new GVClone(); // not public API!                    
                </comment>
                <comment line="74">
                    new TLFromACI();
                    new TLClone();
                    new TLJustify();
                    new TLFromLBM();                    
                </comment>
                <scope line="60"/>
            </method>
            <method name="TextConstructionTests" type="constructor" line="82">
                <params>
                    <param name="parent" type="Group"/>
                    <param name="nodeName" type="String"/>
                    <param name="description" type="String"/>
                </params>
            </method>
            <class name="TCContext" line="86">
                <extends class="G2DContext"/>
                <declaration name="chars1" type="char[]" line="87"/>
                <declaration name="ci" type="CharacterIterator" line="88"/>
                <declaration name="gv" type="GlyphVector" line="89"/>
                <declaration name="glyphs" type="int[]" line="90"/>
                <declaration name="flags" type="int" line="91"/>
                <method name="init" type="void" line="93">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="results" type="Result"/>
                    </params>
                </method>
            </class>
            <method name="createContext" type="Context" line="107"/>
            <class name="GVFromFontString" line="111">
                <extends class="TextConstructionTests"/>
                <method name="GVFromFontString" type="constructor" line="112"/>
                <method name="runTest" type="void" line="116">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tcctx" type="TCContext" line="117"/>
                    <declaration name="font" type="Font" line="118"/>
                    <declaration name="text" type="String" line="119"/>
                    <declaration name="frc" type="FontRenderContext" line="120"/>
                    <declaration name="gv" type="GlyphVector" line="121"/>
                    <scope line="122"/>
                </method>
            </class>
            <class name="GVFromFontChars" line="128">
                <extends class="TextConstructionTests"/>
                <method name="GVFromFontChars" type="constructor" line="129"/>
                <method name="runTest" type="void" line="133">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tcctx" type="TCContext" line="134"/>
                    <declaration name="font" type="Font" line="135"/>
                    <declaration name="chars" type="char[]" line="136"/>
                    <declaration name="frc" type="FontRenderContext" line="137"/>
                    <declaration name="gv" type="GlyphVector" line="138"/>
                    <scope line="139"/>
                </method>
            </class>
            <class name="GVFromFontCI" line="145">
                <extends class="TextConstructionTests"/>
                <method name="GVFromFontCI" type="constructor" line="146"/>
                <method name="runTest" type="void" line="150">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tcctx" type="TCContext" line="151"/>
                    <declaration name="font" type="Font" line="152"/>
                    <declaration name="ci" type="CharacterIterator" line="153"/>
                    <declaration name="frc" type="FontRenderContext" line="154"/>
                    <declaration name="gv" type="GlyphVector" line="155"/>
                    <scope line="156"/>
                </method>
            </class>
            <class name="GVFromFontGlyphs" line="162">
                <extends class="TextConstructionTests"/>
                <method name="GVFromFontGlyphs" type="constructor" line="163"/>
                <method name="runTest" type="void" line="167">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tcctx" type="TCContext" line="168"/>
                    <declaration name="font" type="Font" line="169"/>
                    <declaration name="glyphs" type="int[]" line="170"/>
                    <declaration name="frc" type="FontRenderContext" line="171"/>
                    <declaration name="gv" type="GlyphVector" line="172"/>
                    <scope line="173"/>
                </method>
            </class>
            <class name="GVFromFontLayout" line="179">
                <extends class="TextConstructionTests"/>
                <method name="GVFromFontLayout" type="constructor" line="180"/>
                <method name="runTest" type="void" line="184">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tcctx" type="TCContext" line="185"/>
                    <declaration name="font" type="Font" line="186"/>
                    <declaration name="chars" type="char[]" line="187"/>
                    <declaration name="start" type="int" line="188"/>
                    <declaration name="limit" type="int" line="189"/>
                    <declaration name="frc" type="FontRenderContext" line="190"/>
                    <declaration name="flags" type="int" line="191"/>
                    <declaration name="gv" type="GlyphVector" line="192"/>
                    <scope line="193"/>
                </method>
            </class>
            <class name="TLFromFont" line="218">
                <extends class="TextConstructionTests"/>
                <method name="TLFromFont" type="constructor" line="219"/>
                <method name="runTest" type="void" line="223">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tcctx" type="TCContext" line="224"/>
                    <declaration name="font" type="Font" line="225"/>
                    <declaration name="text" type="String" line="226"/>
                    <declaration name="frc" type="FontRenderContext" line="227"/>
                    <declaration name="tl" type="TextLayout" line="228"/>
                    <scope line="229"/>
                </method>
            </class>
            <class name="TLMapContext" line="235">
                <extends class="G2DContext"/>
                <declaration name="map" type="Map" line="236"/>
                <method name="init" type="void" line="238">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="results" type="Result"/>
                    </params>
                </method>
            </class>
            <class name="TLFromMap" line="246">
                <extends class="TextConstructionTests"/>
                <method name="TLFromMap" type="constructor" line="247"/>
                <method name="createContext" type="Context" line="251"/>
                <method name="runTest" type="void" line="255">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tlmctx" type="TLMapContext" line="256"/>
                    <declaration name="text" type="String" line="257"/>
                    <declaration name="frc" type="FontRenderContext" line="258"/>
                    <declaration name="map" type="Map" line="259"/>
                    <declaration name="tl" type="TextLayout" line="260"/>
                    <scope line="261"/>
                </method>
            </class>
            <class name="ACIContext" line="267">
                <extends class="G2DContext"/>
                <declaration name="aci" type="AttributedCharacterIterator" line="268"/>
                <method name="init" type="void" line="270">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="results" type="Result"/>
                    </params>
                    <declaration name="astr" type="AttributedString" line="273"/>
                </method>
            </class>
            <class name="TLFromACI" line="278">
                <extends class="TextConstructionTests"/>
                <method name="TLFromACI" type="constructor" line="279"/>
                <method name="runTest" type="void" line="283">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tcctx" type="TCContext" line="284"/>
                    <declaration name="font" type="Font" line="285"/>
                    <declaration name="text" type="String" line="286"/>
                    <declaration name="frc" type="FontRenderContext" line="287"/>
                    <declaration name="tl" type="TextLayout" line="288"/>
                    <scope line="289"/>
                </method>
            </class>
            <class name="TLClone" line="295">
                <extends class="TextConstructionTests"/>
                <method name="TLClone" type="constructor" line="296"/>
                <method name="runTest" type="void" line="300">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tcctx" type="TCContext" line="301"/>
                    <declaration name="font" type="Font" line="302"/>
                    <declaration name="text" type="String" line="303"/>
                    <declaration name="frc" type="FontRenderContext" line="304"/>
                    <declaration name="tl" type="TextLayout" line="305"/>
                    <scope line="306"/>
                </method>
            </class>
            <class name="TLJustify" line="312">
                <extends class="TextConstructionTests"/>
                <method name="TLJustify" type="constructor" line="313"/>
                <method name="runTest" type="void" line="317">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tcctx" type="TCContext" line="318"/>
                    <declaration name="font" type="Font" line="319"/>
                    <declaration name="text" type="String" line="320"/>
                    <declaration name="frc" type="FontRenderContext" line="321"/>
                    <declaration name="tl" type="TextLayout" line="322"/>
                    <scope line="323"/>
                </method>
            </class>
            <class name="TLFromLBM" line="329">
                <extends class="TextConstructionTests"/>
                <method name="TLFromLBM" type="constructor" line="330"/>
                <method name="runTest" type="void" line="334">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tcctx" type="TCContext" line="335"/>
                    <declaration name="font" type="Font" line="336"/>
                    <declaration name="text" type="String" line="337"/>
                    <declaration name="frc" type="FontRenderContext" line="338"/>
                    <declaration name="tl" type="TextLayout" line="339"/>
                    <scope line="340"/>
                </method>
            </class>
            <class name="ArrayCI" line="346">
                <implements interface="CharacterIterator"/>
                <declaration name="chars" type="char[]" line="347"/>
                <declaration name="off" type="int" line="348"/>
                <declaration name="max" type="int" line="349"/>
                <declaration name="pos" type="int" line="350"/>
                <method name="ArrayCI" type="constructor" line="352">
                    <params>
                        <param name="chars" type="char[]"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                    </params>
                    <scope line="353"/>
                </method>
                <javadoc line="362">
                    Sets the position to getBeginIndex() and returns the character at that
                      position.                    
                    <return>
                        the first character in the text, or DONE if the text is empty                        
                    </return>
                    <see>
                        #getBeginIndex()                        
                    </see>
                </javadoc>
                <method name="first" type="char" line="368">
                    <scope line="369"/>
                </method>
                <javadoc line="375">
                    Sets the position to getEndIndex()-1 (getEndIndex() if the text is empty)
                      and returns the character at that position.                    
                    <return>
                        the last character in the text, or DONE if the text is empty                        
                    </return>
                    <see>
                        #getEndIndex()                        
                    </see>
                </javadoc>
                <method name="last" type="char" line="381">
                    <scope line="382"/>
                </method>
                <javadoc line="389">
                    Gets the character at the current position (as returned by getIndex()).                    
                    <return>
                        the character at the current position or DONE if the current
                          position is off the end of the text.                        
                    </return>
                    <see>
                        #getIndex()                        
                    </see>
                </javadoc>
                <method name="current" type="char" line="395"/>
                <javadoc line="400">
                    Increments the iterator&apos;s index by one and returns the character
                      at the new index.  If the resulting index is greater or equal
                      to getEndIndex(), the current index is reset to getEndIndex() and
                      a value of DONE is returned.                    
                    <return>
                        the character at the new position or DONE if the new
                          position is off the end of the text range.                        
                    </return>
                </javadoc>
                <method name="next" type="char" line="408">
                    <scope line="409"/>
                </method>
                <javadoc line="417">
                    Decrements the iterator&apos;s index by one and returns the character
                      at the new index. If the current index is getBeginIndex(), the index
                      remains at getBeginIndex() and a value of DONE is returned.                    
                    <return>
                        the character at the new position or DONE if the current
                          position is equal to getBeginIndex().                        
                    </return>
                </javadoc>
                <method name="previous" type="char" line="424">
                    <scope line="425"/>
                </method>
                <javadoc line="432">
                    Sets the position to the specified position in the text and returns that
                      character.                    
                    <param>
                        position the position within the text.  Valid values range from
                          getBeginIndex() to getEndIndex().  An IllegalArgumentException is thrown
                          if an invalid value is supplied.                        
                    </param>
                    <return>
                        the character at the specified position or DONE if the specified position is equal to getEndIndex()                        
                    </return>
                </javadoc>
                <method name="setIndex" type="char" line="440">
                    <params>
                        <param name="position" type="int"/>
                    </params>
                    <scope line="441"/>
                </method>
                <javadoc line="447">
                    Returns the start index of the text.                    
                    <return>
                        the index at which the text begins.                        
                    </return>
                </javadoc>
                <method name="getBeginIndex" type="int" line="451"/>
                <javadoc line="455">
                    Returns the end index of the text.  This index is the index of the first
                      character following the end of the text.                    
                    <return>
                        the index after the last character in the text                        
                    </return>
                </javadoc>
                <method name="getEndIndex" type="int" line="460"/>
                <javadoc line="464">
                    Returns the current index.                    
                    <return>
                        the current index.                        
                    </return>
                </javadoc>
                <method name="getIndex" type="int" line="468"/>
                <javadoc line="472">
                    Create a copy of this iterator                    
                    <return>
                        A copy of this                        
                    </return>
                </javadoc>
                <method name="clone" type="Object" line="476">
                    <scope line="477"/>
                    <scope line="480"/>
                </method>
            </class>
        </class>
    </source>