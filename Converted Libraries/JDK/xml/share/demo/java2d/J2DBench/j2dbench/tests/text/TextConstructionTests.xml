<?xml version="1.0" encoding="UTF-8"?>
    <source package="j2dbench.tests.text">
        <import package="java.awt.Font"/>
        <import package="java.awt.font.FontRenderContext"/>
        <import package="java.awt.font.GlyphVector"/>
        <import package="java.awt.font.TextLayout"/>
        <import package="java.text.AttributedCharacterIterator"/>
        <import package="java.text.AttributedString"/>
        <import package="java.text.Bidi"/>
        <import package="java.text.CharacterIterator"/>
        <import package="java.util.Map"/>
        <import package="j2dbench.Group"/>
        <import package="j2dbench.Result"/>
        <import package="j2dbench.TestEnvironment"/>
        <class name="TextConstructionTests" line="14">
            <extends class="TextTests"/>
            <declaration name="constructroot" type="Group" line="15"/>
            <declaration name="constructtestroot" type="Group" line="16"/>
            <method name="init" type="void" line="17">
                <scope line="18"/>
            </method>
            <method name="TextConstructionTests" type="constructor" line="30">
                <params>
                    <param name="parent" type="Group"/>
                    <param name="nodeName" type="String"/>
                    <param name="description" type="String"/>
                </params>
            </method>
            <class name="TCContext" line="33">
                <extends class="G2DContext"/>
                <declaration name="chars1" type="char[]" line="34"/>
                <declaration name="ci" type="CharacterIterator" line="35"/>
                <declaration name="gv" type="GlyphVector" line="36"/>
                <declaration name="glyphs" type="int[]" line="37"/>
                <declaration name="flags" type="int" line="38"/>
                <method name="init" type="void" line="39">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="results" type="Result"/>
                    </params>
                </method>
            </class>
            <method name="createContext" type="Context" line="49"/>
            <class name="GVFromFontString" line="52">
                <extends class="TextConstructionTests"/>
                <method name="GVFromFontString" type="constructor" line="53"/>
                <method name="runTest" type="void" line="56">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tcctx" type="TCContext" line="57"/>
                    <declaration name="font" type="Font" line="58"/>
                    <declaration name="text" type="String" line="59"/>
                    <declaration name="frc" type="FontRenderContext" line="60"/>
                    <declaration name="gv" type="GlyphVector" line="61"/>
                    <scope line="62"/>
                </method>
            </class>
            <class name="GVFromFontChars" line="68">
                <extends class="TextConstructionTests"/>
                <method name="GVFromFontChars" type="constructor" line="69"/>
                <method name="runTest" type="void" line="72">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tcctx" type="TCContext" line="73"/>
                    <declaration name="font" type="Font" line="74"/>
                    <declaration name="chars" type="char[]" line="75"/>
                    <declaration name="frc" type="FontRenderContext" line="76"/>
                    <declaration name="gv" type="GlyphVector" line="77"/>
                    <scope line="78"/>
                </method>
            </class>
            <class name="GVFromFontCI" line="84">
                <extends class="TextConstructionTests"/>
                <method name="GVFromFontCI" type="constructor" line="85"/>
                <method name="runTest" type="void" line="88">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tcctx" type="TCContext" line="89"/>
                    <declaration name="font" type="Font" line="90"/>
                    <declaration name="ci" type="CharacterIterator" line="91"/>
                    <declaration name="frc" type="FontRenderContext" line="92"/>
                    <declaration name="gv" type="GlyphVector" line="93"/>
                    <scope line="94"/>
                </method>
            </class>
            <class name="GVFromFontGlyphs" line="100">
                <extends class="TextConstructionTests"/>
                <method name="GVFromFontGlyphs" type="constructor" line="101"/>
                <method name="runTest" type="void" line="104">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tcctx" type="TCContext" line="105"/>
                    <declaration name="font" type="Font" line="106"/>
                    <declaration name="glyphs" type="int[]" line="107"/>
                    <declaration name="frc" type="FontRenderContext" line="108"/>
                    <declaration name="gv" type="GlyphVector" line="109"/>
                    <scope line="110"/>
                </method>
            </class>
            <class name="GVFromFontLayout" line="116">
                <extends class="TextConstructionTests"/>
                <method name="GVFromFontLayout" type="constructor" line="117"/>
                <method name="runTest" type="void" line="120">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tcctx" type="TCContext" line="121"/>
                    <declaration name="font" type="Font" line="122"/>
                    <declaration name="chars" type="char[]" line="123"/>
                    <declaration name="start" type="int" line="124"/>
                    <declaration name="limit" type="int" line="125"/>
                    <declaration name="frc" type="FontRenderContext" line="126"/>
                    <declaration name="flags" type="int" line="127"/>
                    <declaration name="gv" type="GlyphVector" line="128"/>
                    <scope line="129"/>
                </method>
            </class>
            <class name="TLFromFont" line="135">
                <extends class="TextConstructionTests"/>
                <method name="TLFromFont" type="constructor" line="136"/>
                <method name="runTest" type="void" line="139">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tcctx" type="TCContext" line="140"/>
                    <declaration name="font" type="Font" line="141"/>
                    <declaration name="text" type="String" line="142"/>
                    <declaration name="frc" type="FontRenderContext" line="143"/>
                    <declaration name="tl" type="TextLayout" line="144"/>
                    <scope line="145"/>
                </method>
            </class>
            <class name="TLMapContext" line="151">
                <extends class="G2DContext"/>
                <declaration name="map" type="Map" line="152"/>
                <method name="init" type="void" line="153">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="results" type="Result"/>
                    </params>
                </method>
            </class>
            <class name="TLFromMap" line="158">
                <extends class="TextConstructionTests"/>
                <method name="TLFromMap" type="constructor" line="159"/>
                <method name="createContext" type="Context" line="162"/>
                <method name="runTest" type="void" line="165">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tlmctx" type="TLMapContext" line="166"/>
                    <declaration name="text" type="String" line="167"/>
                    <declaration name="frc" type="FontRenderContext" line="168"/>
                    <declaration name="map" type="Map" line="169"/>
                    <declaration name="tl" type="TextLayout" line="170"/>
                    <scope line="171"/>
                </method>
            </class>
            <class name="ACIContext" line="177">
                <extends class="G2DContext"/>
                <declaration name="aci" type="AttributedCharacterIterator" line="178"/>
                <method name="init" type="void" line="179">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="results" type="Result"/>
                    </params>
                    <declaration name="astr" type="AttributedString" line="181"/>
                </method>
            </class>
            <class name="TLFromACI" line="184">
                <extends class="TextConstructionTests"/>
                <method name="TLFromACI" type="constructor" line="185"/>
                <method name="runTest" type="void" line="188">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tcctx" type="TCContext" line="189"/>
                    <declaration name="font" type="Font" line="190"/>
                    <declaration name="text" type="String" line="191"/>
                    <declaration name="frc" type="FontRenderContext" line="192"/>
                    <declaration name="tl" type="TextLayout" line="193"/>
                    <scope line="194"/>
                </method>
            </class>
            <class name="TLClone" line="200">
                <extends class="TextConstructionTests"/>
                <method name="TLClone" type="constructor" line="201"/>
                <method name="runTest" type="void" line="204">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tcctx" type="TCContext" line="205"/>
                    <declaration name="font" type="Font" line="206"/>
                    <declaration name="text" type="String" line="207"/>
                    <declaration name="frc" type="FontRenderContext" line="208"/>
                    <declaration name="tl" type="TextLayout" line="209"/>
                    <scope line="210"/>
                </method>
            </class>
            <class name="TLJustify" line="216">
                <extends class="TextConstructionTests"/>
                <method name="TLJustify" type="constructor" line="217"/>
                <method name="runTest" type="void" line="220">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tcctx" type="TCContext" line="221"/>
                    <declaration name="font" type="Font" line="222"/>
                    <declaration name="text" type="String" line="223"/>
                    <declaration name="frc" type="FontRenderContext" line="224"/>
                    <declaration name="tl" type="TextLayout" line="225"/>
                    <scope line="226"/>
                </method>
            </class>
            <class name="TLFromLBM" line="232">
                <extends class="TextConstructionTests"/>
                <method name="TLFromLBM" type="constructor" line="233"/>
                <method name="runTest" type="void" line="236">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tcctx" type="TCContext" line="237"/>
                    <declaration name="font" type="Font" line="238"/>
                    <declaration name="text" type="String" line="239"/>
                    <declaration name="frc" type="FontRenderContext" line="240"/>
                    <declaration name="tl" type="TextLayout" line="241"/>
                    <scope line="242"/>
                </method>
            </class>
            <class name="ArrayCI" line="248">
                <implements interface="CharacterIterator"/>
                <declaration name="chars" type="char[]" line="249"/>
                <declaration name="off" type="int" line="250"/>
                <declaration name="max" type="int" line="251"/>
                <declaration name="pos" type="int" line="252"/>
                <method name="ArrayCI" type="constructor" line="253">
                    <params>
                        <param name="chars" type="char[]"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                    </params>
                    <scope line="254"/>
                </method>
                <javadoc line="262">
                    Sets the position to getBeginIndex() and returns the character at that
                      position.                    
                    <return>
                        the first character in the text, or DONE if the text is empty                        
                    </return>
                    <see>
                        #getBeginIndex()                        
                    </see>
                </javadoc>
                <method name="first" type="char" line="268">
                    <scope line="269"/>
                </method>
                <javadoc line="274">
                    Sets the position to getEndIndex()-1 (getEndIndex() if the text is empty)
                      and returns the character at that position.                    
                    <return>
                        the last character in the text, or DONE if the text is empty                        
                    </return>
                    <see>
                        #getEndIndex()                        
                    </see>
                </javadoc>
                <method name="last" type="char" line="280">
                    <scope line="281"/>
                </method>
                <javadoc line="287">
                    Gets the character at the current position (as returned by getIndex()).                    
                    <return>
                        the character at the current position or DONE if the current
                          position is off the end of the text.                        
                    </return>
                    <see>
                        #getIndex()                        
                    </see>
                </javadoc>
                <method name="current" type="char" line="293"/>
                <javadoc line="296">
                    Increments the iterator&apos;s index by one and returns the character
                      at the new index.  If the resulting index is greater or equal
                      to getEndIndex(), the current index is reset to getEndIndex() and
                      a value of DONE is returned.                    
                    <return>
                        the character at the new position or DONE if the new
                          position is off the end of the text range.                        
                    </return>
                </javadoc>
                <method name="next" type="char" line="304">
                    <scope line="305"/>
                </method>
                <javadoc line="311">
                    Decrements the iterator&apos;s index by one and returns the character
                      at the new index. If the current index is getBeginIndex(), the index
                      remains at getBeginIndex() and a value of DONE is returned.                    
                    <return>
                        the character at the new position or DONE if the current
                          position is equal to getBeginIndex().                        
                    </return>
                </javadoc>
                <method name="previous" type="char" line="318">
                    <scope line="319"/>
                </method>
                <javadoc line="325">
                    Sets the position to the specified position in the text and returns that
                      character.                    
                    <param>
                        position the position within the text.  Valid values range from
                          getBeginIndex() to getEndIndex().  An IllegalArgumentException is thrown
                          if an invalid value is supplied.                        
                    </param>
                    <return>
                        the character at the specified position or DONE if the specified position is equal to getEndIndex()                        
                    </return>
                </javadoc>
                <method name="setIndex" type="char" line="333">
                    <params>
                        <param name="position" type="int"/>
                    </params>
                    <scope line="334"/>
                </method>
                <javadoc line="339">
                    Returns the start index of the text.                    
                    <return>
                        the index at which the text begins.                        
                    </return>
                </javadoc>
                <method name="getBeginIndex" type="int" line="343"/>
                <javadoc line="346">
                    Returns the end index of the text.  This index is the index of the first
                      character following the end of the text.                    
                    <return>
                        the index after the last character in the text                        
                    </return>
                </javadoc>
                <method name="getEndIndex" type="int" line="351"/>
                <javadoc line="354">
                    Returns the current index.                    
                    <return>
                        the current index.                        
                    </return>
                </javadoc>
                <method name="getIndex" type="int" line="358"/>
                <javadoc line="361">
                    Create a copy of this iterator                    
                    <return>
                        A copy of this                        
                    </return>
                </javadoc>
                <method name="clone" type="Object" line="365">
                    <scope line="366"/>
                    <scope line="369"/>
                </method>
            </class>
        </class>
    </source>