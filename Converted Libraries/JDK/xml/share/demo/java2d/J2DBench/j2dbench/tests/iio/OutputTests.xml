<?xml version="1.0" encoding="UTF-8"?>
    <source package="j2dbench.tests.iio">
        <import package="java.io.BufferedOutputStream"/>
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.File"/>
        <import package="java.io.FileOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="javax.imageio.ImageIO"/>
        <import package="javax.imageio.spi.IIORegistry"/>
        <import package="javax.imageio.spi.ImageOutputStreamSpi"/>
        <import package="javax.imageio.stream.FileCacheImageOutputStream"/>
        <import package="javax.imageio.stream.FileImageOutputStream"/>
        <import package="javax.imageio.stream.ImageOutputStream"/>
        <import package="javax.imageio.stream.MemoryCacheImageOutputStream"/>
        <import package="j2dbench.Group"/>
        <import package="j2dbench.Option"/>
        <import package="j2dbench.Result"/>
        <import package="j2dbench.TestEnvironment"/>
        <class name="OutputTests" line="19">
            <extends class="IIOTests"/>
            <declaration name="OUTPUT_FILE" type="int" line="20"/>
            <declaration name="OUTPUT_ARRAY" type="int" line="21"/>
            <declaration name="OUTPUT_FILECHANNEL" type="int" line="22"/>
            <declaration name="fileChannelIOSSpi" type="ImageOutputStreamSpi" line="23"/>
            <scope line="24">
                <scope line="25">
                    <declaration name="registry" type="IIORegistry" line="27"/>
                    <declaration name="spis" type="java.util.Iterator" line="28"/>
                    <scope line="29">
                        <declaration name="spi" type="ImageOutputStreamSpi" line="30"/>
                        <declaration name="klass" type="String" line="31"/>
                        <scope line="32"/>
                    </scope>
                </scope>
            </scope>
            <declaration name="outputRoot" type="Group" line="39"/>
            <declaration name="outputOptRoot" type="Group" line="40"/>
            <declaration name="generalOptRoot" type="Group" line="41"/>
            <declaration name="generalDestRoot" type="Group.EnableSet" line="42"/>
            <declaration name="destFileOpt" type="Option" line="43"/>
            <declaration name="destByteArrayOpt" type="Option" line="44"/>
            <declaration name="imageioGeneralOptRoot" type="Group" line="45"/>
            <declaration name="destFileChannelOpt" type="Option" line="46"/>
            <declaration name="useCacheTog" type="Option" line="47"/>
            <method name="init" type="void" line="48">
                <scope line="56">
                    <scope line="58"/>
                </scope>
                <scope line="64"/>
            </method>
            <method name="OutputTests" type="constructor" line="68">
                <params>
                    <param name="parent" type="Group"/>
                    <param name="nodeName" type="String"/>
                    <param name="description" type="String"/>
                </params>
            </method>
            <class name="OutputType" line="71">
                <extends class="Option.Enable"/>
                <declaration name="type" type="int" line="72"/>
                <method name="OutputType" type="constructor" line="73">
                    <params>
                        <param name="nodeName" type="String"/>
                        <param name="description" type="String"/>
                        <param name="type" type="int"/>
                    </params>
                </method>
                <method name="getType" type="int" line="77"/>
                <method name="getAbbreviatedModifierDescription" type="String" line="80">
                    <params>
                        <param name="value" type="Object"/>
                    </params>
                </method>
                <method name="getModifierValueName" type="String" line="83">
                    <params>
                        <param name="val" type="Object"/>
                    </params>
                </method>
            </class>
            <class name="Context" line="87">
                <declaration name="size" type="int" line="88"/>
                <declaration name="output" type="Object" line="89"/>
                <declaration name="outputType" type="int" line="90"/>
                <declaration name="origStream" type="OutputStream" line="91"/>
                <method name="Context" type="constructor" line="92">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="result" type="Result"/>
                    </params>
                    <scope line="94">
                        <scope line="95"/>
                    </scope>
                    <declaration name="t" type="OutputType" line="99"/>
                </method>
                <method name="initOutput" type="void" line="102">
                    <scope line="103">
                        <scope line="104">
                            <declaration name="outputfile" type="File" line="105"/>
                        </scope>
                        <scope line="109"/>
                    </scope>
                </method>
                <method name="createImageOutputStream" type="ImageOutputStream" line="115">
                    <declaration name="ios" type="ImageOutputStream" line="116"/>
                    <declaration name="baos" type="ByteArrayOutputStream" line="122"/>
                    <declaration name="bos" type="BufferedOutputStream" line="123"/>
                    <scope line="124"/>
                    <scope line="127"/>
                    <declaration name="fos" type="FileOutputStream" line="132"/>
                    <declaration name="fc" type="java.nio.channels.FileChannel" line="134"/>
                </method>
                <method name="closeOriginalStream" type="void" line="143">
                    <scope line="144"/>
                </method>
                <method name="cleanup" type="void" line="149">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                    </params>
                </method>
            </class>
        </class>
    </source>