<?xml version="1.0" encoding="UTF-8"?>
    <source package="j2dbench">
        <import package="java.awt.Canvas"/>
        <import package="java.awt.Image"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.AlphaComposite"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Toolkit"/>
        <import package="java.util.Hashtable"/>
        <import package="j2dbench.tests.GraphicsTests"/>
        <class name="TestEnvironment" line="12">
            <implements interface="Node.Visitor"/>
            <declaration name="globaloptroot" type="Group" line="13"/>
            <declaration name="envroot" type="Group" line="14"/>
            <declaration name="outputWidth" type="Option.Int" line="15"/>
            <declaration name="outputHeight" type="Option.Int" line="16"/>
            <declaration name="runCount" type="Option.Int" line="17"/>
            <declaration name="repCount" type="Option.Int" line="18"/>
            <declaration name="testTime" type="Option.Int" line="19"/>
            <method name="init" type="void" line="20"/>
            <method name="visit" type="void" line="29">
                <params>
                    <param name="node" type="Node"/>
                </params>
                <scope line="30"/>
            </method>
            <method name="runAllTests" type="void" line="34"/>
            <declaration name="comp" type="Canvas" line="37"/>
            <declaration name="testImage" type="Image" line="38"/>
            <declaration name="srcImage" type="Image" line="39"/>
            <declaration name="stopped" type="boolean" line="40"/>
            <declaration name="results" type="ResultSet" line="41"/>
            <declaration name="modifiers" type="Hashtable" line="42"/>
            <declaration name="timer" type="Timer" line="43"/>
            <method name="TestEnvironment" type="constructor" line="44"/>
            <method name="startTiming" type="void" line="49"/>
            <method name="stopTiming" type="void" line="52"/>
            <method name="getTimeMillis" type="long" line="55"/>
            <method name="getTimeNanos" type="long" line="58"/>
            <method name="getCanvas" type="Canvas" line="61">
                <scope line="62">
                    <declaration name="w" type="int" line="63"/>
                    <declaration name="h" type="int" line="64"/>
                    <anonymous_class line="65">
                        <method name="getPreferredSize" type="Dimension" line="66"/>
                    </anonymous_class>
                </scope>
            </method>
            <method name="getSrcImage" type="Image" line="74"/>
            <method name="stop" type="void" line="77"/>
            <method name="isStopped" type="boolean" line="80"/>
            <method name="setTestImage" type="void" line="83">
                <params>
                    <param name="img" type="Image"/>
                </params>
            </method>
            <method name="setSrcImage" type="void" line="86">
                <params>
                    <param name="img" type="Image"/>
                </params>
            </method>
            <method name="erase" type="void" line="89">
                <declaration name="g" type="Graphics" line="90"/>
                <scope line="91"/>
            </method>
            <method name="getGraphics" type="Graphics" line="97">
                <scope line="98"/>
                <scope line="101"/>
            </method>
            <method name="getWidth" type="int" line="106"/>
            <method name="getHeight" type="int" line="109"/>
            <method name="getRunCount" type="int" line="112"/>
            <method name="getRepCount" type="int" line="115"/>
            <method name="getTestTime" type="long" line="118"/>
            <method name="sync" type="void" line="121">
                <scope line="122"/>
                <scope line="125"/>
            </method>
            <method name="idle" type="boolean" line="129">
                <scope line="130">
                    <scope line="136"/>
                    <scope line="139"/>
                </scope>
            </method>
            <method name="setModifier" type="void" line="145">
                <params>
                    <param name="o" type="Modifier"/>
                    <param name="v" type="Object"/>
                </params>
            </method>
            <method name="getModifier" type="Object" line="148">
                <params>
                    <param name="o" type="Modifier"/>
                </params>
            </method>
            <method name="isEnabled" type="boolean" line="151">
                <params>
                    <param name="o" type="Modifier"/>
                </params>
            </method>
            <method name="getIntValue" type="int" line="154">
                <params>
                    <param name="o" type="Modifier"/>
                </params>
            </method>
            <method name="removeModifier" type="void" line="157">
                <params>
                    <param name="o" type="Modifier"/>
                </params>
            </method>
            <method name="getModifiers" type="Hashtable" line="160"/>
            <method name="record" type="void" line="163">
                <params>
                    <param name="result" type="Result"/>
                </params>
            </method>
            <method name="flushToScreen" type="void" line="166">
                <scope line="167">
                    <declaration name="g" type="Graphics" line="168"/>
                    <scope line="169"/>
                </scope>
            </method>
            <method name="summarize" type="void" line="176"/>
            <class name="Timer" line="179">
                <method name="getImpl" type="Timer" line="180">
                    <scope line="181"/>
                    <scope line="185"/>
                </method>
                <method name="start" type="void" line="189"/>
                <method name="stop" type="void" line="190"/>
                <method name="getTimeMillis" type="long" line="191"/>
                <method name="getTimeNanos" type="long" line="192"/>
                <class name="Millis" line="193">
                    <extends class="Timer"/>
                    <declaration name="millis" type="long" line="194"/>
                    <method name="start" type="void" line="195"/>
                    <method name="stop" type="void" line="198"/>
                    <method name="getTimeMillis" type="long" line="201"/>
                    <method name="getTimeNanos" type="long" line="204"/>
                </class>
                <class name="Nanos" line="208">
                    <extends class="Timer"/>
                    <declaration name="nanos" type="long" line="209"/>
                    <method name="start" type="void" line="210"/>
                    <method name="stop" type="void" line="213"/>
                    <method name="getTimeMillis" type="long" line="216"/>
                    <method name="getTimeNanos" type="long" line="219"/>
                </class>
            </class>
        </class>
    </source>