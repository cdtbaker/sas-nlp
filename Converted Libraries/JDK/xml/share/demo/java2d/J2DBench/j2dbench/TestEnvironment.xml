<?xml version="1.0" encoding="UTF-8"?>
    <source package="j2dbench">
        <import package="java.awt.Canvas"/>
        <import package="java.awt.Image"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.AlphaComposite"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Toolkit"/>
        <import package="java.util.Hashtable"/>
        <import package="j2dbench.tests.GraphicsTests"/>
        <class name="TestEnvironment" line="46">
            <implements interface="Node.Visitor"/>
            <declaration name="globaloptroot" type="Group" line="47"/>
            <declaration name="envroot" type="Group" line="48"/>
            <declaration name="outputWidth" type="Option.Int" line="50"/>
            <declaration name="outputHeight" type="Option.Int" line="51"/>
            <declaration name="runCount" type="Option.Int" line="53"/>
            <declaration name="repCount" type="Option.Int" line="54"/>
            <declaration name="testTime" type="Option.Int" line="55"/>
            <method name="init" type="void" line="57"/>
            <method name="visit" type="void" line="84">
                <params>
                    <param name="node" type="Node"/>
                </params>
                <scope line="85"/>
            </method>
            <method name="runAllTests" type="void" line="90"/>
            <declaration name="comp" type="Canvas" line="94"/>
            <declaration name="testImage" type="Image" line="95"/>
            <declaration name="srcImage" type="Image" line="96"/>
            <declaration name="stopped" type="boolean" line="97"/>
            <declaration name="results" type="ResultSet" line="98"/>
            <declaration name="modifiers" type="Hashtable" line="99"/>
            <declaration name="timer" type="Timer" line="100"/>
            <method name="TestEnvironment" type="constructor" line="102"/>
            <method name="startTiming" type="void" line="108"/>
            <method name="stopTiming" type="void" line="112"/>
            <method name="getTimeMillis" type="long" line="116"/>
            <method name="getTimeNanos" type="long" line="120"/>
            <method name="getCanvas" type="Canvas" line="124">
                <scope line="125">
                    <declaration name="w" type="int" line="126"/>
                    <declaration name="h" type="int" line="127"/>
                    <anonymous_class line="128">
                        <method name="getPreferredSize" type="Dimension" line="129"/>
                    </anonymous_class>
                </scope>
            </method>
            <method name="getSrcImage" type="Image" line="137"/>
            <method name="stop" type="void" line="141"/>
            <method name="isStopped" type="boolean" line="145"/>
            <method name="setTestImage" type="void" line="149">
                <params>
                    <param name="img" type="Image"/>
                </params>
            </method>
            <method name="setSrcImage" type="void" line="153">
                <params>
                    <param name="img" type="Image"/>
                </params>
            </method>
            <method name="erase" type="void" line="157">
                <declaration name="g" type="Graphics" line="158"/>
                <scope line="159"/>
            </method>
            <method name="getGraphics" type="Graphics" line="166">
                <scope line="167"/>
                <scope line="170"/>
            </method>
            <method name="getWidth" type="int" line="176"/>
            <method name="getHeight" type="int" line="180"/>
            <method name="getRunCount" type="int" line="184"/>
            <method name="getRepCount" type="int" line="188"/>
            <method name="getTestTime" type="long" line="192"/>
            <method name="sync" type="void" line="196">
                <scope line="197"/>
                <scope line="199"/>
            </method>
            <method name="idle" type="boolean" line="204">
                <scope line="205">
                    <scope line="211"/>
                    <scope line="213"/>
                </scope>
            </method>
            <method name="setModifier" type="void" line="220">
                <params>
                    <param name="o" type="Modifier"/>
                    <param name="v" type="Object"/>
                </params>
            </method>
            <method name="getModifier" type="Object" line="224">
                <params>
                    <param name="o" type="Modifier"/>
                </params>
            </method>
            <method name="isEnabled" type="boolean" line="228">
                <params>
                    <param name="o" type="Modifier"/>
                </params>
            </method>
            <method name="getIntValue" type="int" line="232">
                <params>
                    <param name="o" type="Modifier"/>
                </params>
            </method>
            <method name="removeModifier" type="void" line="236">
                <params>
                    <param name="o" type="Modifier"/>
                </params>
            </method>
            <method name="getModifiers" type="Hashtable" line="240"/>
            <method name="record" type="void" line="244">
                <params>
                    <param name="result" type="Result"/>
                </params>
            </method>
            <method name="flushToScreen" type="void" line="248">
                <scope line="249">
                    <declaration name="g" type="Graphics" line="250"/>
                    <scope line="251"/>
                </scope>
            </method>
            <method name="summarize" type="void" line="259"/>
            <class name="Timer" line="263">
                <method name="getImpl" type="Timer" line="264">
                    <scope line="265"/>
                    <scope line="268"/>
                </method>
                <method name="start" type="void" line="273"/>
                <method name="stop" type="void" line="274"/>
                <method name="getTimeMillis" type="long" line="275"/>
                <method name="getTimeNanos" type="long" line="276"/>
                <class name="Millis" line="278">
                    <extends class="Timer"/>
                    <declaration name="millis" type="long" line="279"/>
                    <method name="start" type="void" line="281"/>
                    <method name="stop" type="void" line="285"/>
                    <method name="getTimeMillis" type="long" line="289"/>
                    <method name="getTimeNanos" type="long" line="293"/>
                </class>
                <class name="Nanos" line="298">
                    <extends class="Timer"/>
                    <declaration name="nanos" type="long" line="299"/>
                    <method name="start" type="void" line="301"/>
                    <method name="stop" type="void" line="305"/>
                    <method name="getTimeMillis" type="long" line="309"/>
                    <method name="getTimeNanos" type="long" line="313"/>
                </class>
            </class>
        </class>
    </source>