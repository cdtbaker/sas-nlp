<?xml version="1.0" encoding="UTF-8"?>
    <source package="j2dbench.tests.text">
        <import package="java.awt.Font"/>
        <import package="java.awt.FontMetrics"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.Shape"/>
        <import package="java.awt.font.GlyphMetrics"/>
        <import package="java.awt.font.GlyphVector"/>
        <import package="java.awt.font.TextHitInfo"/>
        <import package="java.awt.font.TextLayout"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <import package="java.text.Bidi"/>
        <import package="java.util.ArrayList"/>
        <import package="j2dbench.Group"/>
        <import package="j2dbench.Result"/>
        <import package="j2dbench.TestEnvironment"/>
        <class name="TextMeasureTests" line="57">
            <extends class="TextTests"/>
            <declaration name="measureroot" type="Group" line="58"/>
            <declaration name="measuretestroot" type="Group" line="59"/>
            <method name="init" type="void" line="61">
                <comment line="95">
                    new FontLineMetrics();
                    new FontStringBounds();                    
                </comment>
                <scope line="71"/>
            </method>
            <method name="TextMeasureTests" type="constructor" line="101">
                <params>
                    <param name="parent" type="Group"/>
                    <param name="nodeName" type="String"/>
                    <param name="description" type="String"/>
                </params>
            </method>
            <class name="SWContext" line="105">
                <extends class="TextContext"/>
                <declaration name="fm" type="FontMetrics" line="106"/>
                <method name="init" type="void" line="108">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="results" type="Result"/>
                    </params>
                </method>
            </class>
            <method name="createContext" type="Context" line="114"/>
            <class name="StringWidth" line="118">
                <extends class="TextMeasureTests"/>
                <method name="StringWidth" type="constructor" line="119"/>
                <method name="runTest" type="void" line="123">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="swctx" type="SWContext" line="124"/>
                    <declaration name="text" type="String" line="125"/>
                    <declaration name="fm" type="FontMetrics" line="126"/>
                    <declaration name="wid" type="int" line="127"/>
                    <scope line="128"/>
                </method>
            </class>
            <class name="StringBounds" line="134">
                <extends class="TextMeasureTests"/>
                <method name="StringBounds" type="constructor" line="135"/>
                <method name="runTest" type="void" line="139">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="swctx" type="SWContext" line="140"/>
                    <declaration name="text" type="String" line="141"/>
                    <declaration name="fm" type="FontMetrics" line="142"/>
                    <declaration name="wid" type="int" line="143"/>
                    <declaration name="r" type="Rectangle" line="144"/>
                    <scope line="145">
                        <declaration name="dx" type="int" line="147"/>
                        <declaration name="dy" type="int" line="148"/>
                        <declaration name="x" type="int" line="149"/>
                        <declaration name="y" type="int" line="150"/>
                    </scope>
                </method>
            </class>
            <class name="CharsWidth" line="156">
                <extends class="TextMeasureTests"/>
                <method name="CharsWidth" type="constructor" line="157"/>
                <method name="runTest" type="void" line="161">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="swctx" type="SWContext" line="162"/>
                    <declaration name="fm" type="FontMetrics" line="163"/>
                    <declaration name="chars" type="char[]" line="164"/>
                    <declaration name="wid" type="int" line="165"/>
                    <scope line="166"/>
                </method>
            </class>
            <class name="CharsBounds" line="172">
                <extends class="TextMeasureTests"/>
                <method name="CharsBounds" type="constructor" line="173"/>
                <method name="runTest" type="void" line="177">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="swctx" type="SWContext" line="178"/>
                    <declaration name="fm" type="FontMetrics" line="179"/>
                    <declaration name="chars" type="char[]" line="180"/>
                    <declaration name="wid" type="int" line="181"/>
                    <declaration name="r" type="Rectangle" line="182"/>
                    <scope line="183">
                        <declaration name="dx" type="int" line="185"/>
                        <declaration name="dy" type="int" line="186"/>
                        <declaration name="x" type="int" line="187"/>
                        <declaration name="y" type="int" line="188"/>
                    </scope>
                </method>
            </class>
            <class name="FontCanDisplay" line="194">
                <extends class="TextMeasureTests"/>
                <method name="FontCanDisplay" type="constructor" line="195"/>
                <method name="runTest" type="void" line="199">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="font" type="Font" line="200"/>
                    <declaration name="b" type="boolean" line="201"/>
                    <scope line="202">
                        <scope line="203"/>
                    </scope>
                </method>
            </class>
            <class name="GVContext" line="210">
                <extends class="G2DContext"/>
                <declaration name="gv" type="GlyphVector" line="211"/>
                <method name="init" type="void" line="213">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="results" type="Result"/>
                    </params>
                    <comment line="218">
                        assume rtl                        
                    </comment>
                    <comment line="223">
                        gv options                        
                    </comment>
                    <declaration name="flags" type="int" line="216"/>
                    <scope line="217"/>
                </method>
            </class>
            <class name="GVMeasureTest" line="226">
                <extends class="TextMeasureTests"/>
                <method name="GVMeasureTest" type="constructor" line="227">
                    <params>
                        <param name="parent" type="Group"/>
                        <param name="nodeName" type="String"/>
                        <param name="description" type="String"/>
                    </params>
                </method>
                <method name="createContext" type="Context" line="231"/>
            </class>
            <class name="GVWidth" line="236">
                <extends class="GVMeasureTest"/>
                <method name="GVWidth" type="constructor" line="237"/>
                <method name="runTest" type="void" line="241">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="gvctx" type="GVContext" line="242"/>
                    <declaration name="gv" type="GlyphVector" line="243"/>
                    <declaration name="wid" type="double" line="244"/>
                    <scope line="245"/>
                </method>
            </class>
            <class name="GVLogicalBounds" line="251">
                <extends class="GVMeasureTest"/>
                <method name="GVLogicalBounds" type="constructor" line="252"/>
                <method name="runTest" type="void" line="256">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="gvctx" type="GVContext" line="257"/>
                    <declaration name="gv" type="GlyphVector" line="258"/>
                    <declaration name="r" type="Rectangle2D" line="259"/>
                    <scope line="260"/>
                </method>
            </class>
            <class name="GVVisualBounds" line="266">
                <extends class="GVMeasureTest"/>
                <method name="GVVisualBounds" type="constructor" line="267"/>
                <method name="runTest" type="void" line="271">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="gvctx" type="GVContext" line="272"/>
                    <declaration name="gv" type="GlyphVector" line="273"/>
                    <declaration name="r" type="Rectangle2D" line="274"/>
                    <scope line="275"/>
                </method>
            </class>
            <class name="GVPixelBounds" line="281">
                <extends class="GVMeasureTest"/>
                <method name="GVPixelBounds" type="constructor" line="282"/>
                <method name="runTest" type="void" line="286">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <comment line="292">
                        !!! add opt to provide different frc?                        
                    </comment>
                    <declaration name="gvctx" type="GVContext" line="287"/>
                    <declaration name="gv" type="GlyphVector" line="288"/>
                    <declaration name="r" type="Rectangle2D" line="289"/>
                    <scope line="290"/>
                </method>
            </class>
            <class name="GVOutline" line="296">
                <extends class="GVMeasureTest"/>
                <method name="GVOutline" type="constructor" line="297"/>
                <method name="runTest" type="void" line="301">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="gvctx" type="GVContext" line="302"/>
                    <declaration name="gv" type="GlyphVector" line="303"/>
                    <declaration name="s" type="Shape" line="304"/>
                    <scope line="305"/>
                </method>
            </class>
            <class name="GVGlyphLogicalBounds" line="311">
                <extends class="GVMeasureTest"/>
                <method name="GVGlyphLogicalBounds" type="constructor" line="312"/>
                <method name="runTest" type="void" line="316">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="gvctx" type="GVContext" line="317"/>
                    <declaration name="gv" type="GlyphVector" line="318"/>
                    <declaration name="s" type="Shape" line="319"/>
                    <scope line="320">
                        <scope line="321"/>
                    </scope>
                </method>
            </class>
            <class name="GVGlyphVisualBounds" line="328">
                <extends class="GVMeasureTest"/>
                <method name="GVGlyphVisualBounds" type="constructor" line="329"/>
                <method name="runTest" type="void" line="333">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="gvctx" type="GVContext" line="334"/>
                    <declaration name="gv" type="GlyphVector" line="335"/>
                    <declaration name="s" type="Shape" line="336"/>
                    <scope line="337">
                        <scope line="338"/>
                    </scope>
                </method>
            </class>
            <class name="GVGlyphPixelBounds" line="346">
                <extends class="GVMeasureTest"/>
                <method name="GVGlyphPixelBounds" type="constructor" line="347"/>
                <method name="runTest" type="void" line="351">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <comment line="358">
                        !!! add opt to provide different frc?                        
                    </comment>
                    <declaration name="gvctx" type="GVContext" line="352"/>
                    <declaration name="gv" type="GlyphVector" line="353"/>
                    <declaration name="r" type="Rectangle2D" line="354"/>
                    <scope line="355">
                        <scope line="356"/>
                    </scope>
                </method>
            </class>
            <class name="GVGlyphOutline" line="363">
                <extends class="GVMeasureTest"/>
                <method name="GVGlyphOutline" type="constructor" line="364"/>
                <method name="runTest" type="void" line="368">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="gvctx" type="GVContext" line="369"/>
                    <declaration name="gv" type="GlyphVector" line="370"/>
                    <declaration name="s" type="Shape" line="371"/>
                    <scope line="372">
                        <scope line="373"/>
                    </scope>
                </method>
            </class>
            <class name="GVGlyphTransform" line="380">
                <extends class="GVMeasureTest"/>
                <method name="GVGlyphTransform" type="constructor" line="381"/>
                <method name="runTest" type="void" line="385">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="gvctx" type="GVContext" line="386"/>
                    <declaration name="gv" type="GlyphVector" line="387"/>
                    <declaration name="tx" type="AffineTransform" line="388"/>
                    <scope line="389">
                        <scope line="390"/>
                    </scope>
                </method>
            </class>
            <class name="GVGlyphMetrics" line="397">
                <extends class="GVMeasureTest"/>
                <method name="GVGlyphMetrics" type="constructor" line="398"/>
                <method name="runTest" type="void" line="402">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="gvctx" type="GVContext" line="403"/>
                    <declaration name="gv" type="GlyphVector" line="404"/>
                    <declaration name="gm" type="GlyphMetrics" line="405"/>
                    <scope line="406">
                        <scope line="407"/>
                    </scope>
                </method>
            </class>
            <class name="TLContext" line="414">
                <extends class="G2DContext"/>
                <declaration name="tl" type="TextLayout" line="415"/>
                <method name="init" type="void" line="417">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="results" type="Result"/>
                    </params>
                    <comment line="421">
                        need more tl options here                        
                    </comment>
                </method>
            </class>
            <class name="TLMeasureTest" line="425">
                <extends class="TextMeasureTests"/>
                <method name="TLMeasureTest" type="constructor" line="426">
                    <params>
                        <param name="parent" type="Group"/>
                        <param name="nodeName" type="String"/>
                        <param name="description" type="String"/>
                    </params>
                </method>
                <method name="createContext" type="Context" line="430"/>
            </class>
            <class name="TLAdvance" line="435">
                <extends class="TLMeasureTest"/>
                <method name="TLAdvance" type="constructor" line="436"/>
                <method name="runTest" type="void" line="440">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tlctx" type="TLContext" line="441"/>
                    <declaration name="tl" type="TextLayout" line="442"/>
                    <declaration name="wid" type="double" line="443"/>
                    <scope line="444"/>
                </method>
            </class>
            <class name="TLAscent" line="450">
                <extends class="TLMeasureTest"/>
                <method name="TLAscent" type="constructor" line="451"/>
                <method name="runTest" type="void" line="455">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tlctx" type="TLContext" line="456"/>
                    <declaration name="tl" type="TextLayout" line="457"/>
                    <declaration name="ht" type="float" line="458"/>
                    <scope line="459"/>
                </method>
            </class>
            <class name="TLBounds" line="465">
                <extends class="TLMeasureTest"/>
                <method name="TLBounds" type="constructor" line="466"/>
                <method name="runTest" type="void" line="470">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tlctx" type="TLContext" line="471"/>
                    <declaration name="tl" type="TextLayout" line="472"/>
                    <declaration name="r" type="Rectangle2D" line="473"/>
                    <scope line="474"/>
                </method>
            </class>
            <class name="TLExContext" line="480">
                <extends class="TLContext"/>
                <declaration name="hits" type="TextHitInfo[]" line="481"/>
                <declaration name="lb" type="Rectangle2D" line="482"/>
                <method name="init" type="void" line="484">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="results" type="Result"/>
                    </params>
                    <declaration name="list" type="ArrayList" line="487"/>
                    <declaration name="hit" type="TextHitInfo" line="488"/>
                    <scope line="489"/>
                </method>
            </class>
            <class name="TLExtendedMeasureTest" line="500">
                <extends class="TLMeasureTest"/>
                <method name="TLExtendedMeasureTest" type="constructor" line="501">
                    <params>
                        <param name="parent" type="Group"/>
                        <param name="nodeName" type="String"/>
                        <param name="description" type="String"/>
                    </params>
                </method>
                <method name="createContext" type="Context" line="505"/>
            </class>
            <class name="TLGetCaretInfo" line="510">
                <extends class="TLExtendedMeasureTest"/>
                <method name="TLGetCaretInfo" type="constructor" line="511"/>
                <method name="runTest" type="void" line="515">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tlctx" type="TLExContext" line="516"/>
                    <declaration name="tl" type="TextLayout" line="517"/>
                    <declaration name="hits" type="TextHitInfo[]" line="518"/>
                    <scope line="519">
                        <scope line="520"/>
                    </scope>
                </method>
            </class>
            <class name="TLGetNextHit" line="527">
                <extends class="TLExtendedMeasureTest"/>
                <method name="TLGetNextHit" type="constructor" line="528"/>
                <method name="runTest" type="void" line="532">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tlctx" type="TLExContext" line="533"/>
                    <declaration name="tl" type="TextLayout" line="534"/>
                    <declaration name="hits" type="TextHitInfo[]" line="535"/>
                    <declaration name="hit" type="TextHitInfo" line="536"/>
                    <scope line="537">
                        <scope line="538"/>
                    </scope>
                </method>
            </class>
            <class name="TLGetCaretShape" line="545">
                <extends class="TLExtendedMeasureTest"/>
                <method name="TLGetCaretShape" type="constructor" line="546"/>
                <method name="runTest" type="void" line="550">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tlctx" type="TLExContext" line="551"/>
                    <declaration name="tl" type="TextLayout" line="552"/>
                    <declaration name="hits" type="TextHitInfo[]" line="553"/>
                    <declaration name="s" type="Shape" line="554"/>
                    <scope line="555">
                        <scope line="556"/>
                    </scope>
                </method>
            </class>
            <class name="TLGetLogicalHighlightShape" line="563">
                <extends class="TLExtendedMeasureTest"/>
                <method name="TLGetLogicalHighlightShape" type="constructor" line="564"/>
                <method name="runTest" type="void" line="568">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tlctx" type="TLExContext" line="569"/>
                    <declaration name="tl" type="TextLayout" line="570"/>
                    <declaration name="len" type="int" line="571"/>
                    <declaration name="lb" type="Rectangle2D" line="572"/>
                    <declaration name="s" type="Shape" line="573"/>
                    <scope line="574">
                        <scope line="575"/>
                    </scope>
                    <scope line="578">
                        <scope line="579">
                            <scope line="580"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="TLGetVisualHighlightShape" line="588">
                <extends class="TLExtendedMeasureTest"/>
                <method name="TLGetVisualHighlightShape" type="constructor" line="589"/>
                <method name="runTest" type="void" line="593">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tlctx" type="TLExContext" line="594"/>
                    <declaration name="tl" type="TextLayout" line="595"/>
                    <declaration name="hits" type="TextHitInfo[]" line="596"/>
                    <declaration name="lb" type="Rectangle2D" line="597"/>
                    <declaration name="s" type="Shape" line="598"/>
                    <scope line="599">
                        <scope line="600"/>
                    </scope>
                    <scope line="603">
                        <scope line="604">
                            <scope line="605"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="TLHitTest" line="613">
                <extends class="TLExtendedMeasureTest"/>
                <method name="TLHitTest" type="constructor" line="614"/>
                <method name="runTest" type="void" line="618">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tlctx" type="TLExContext" line="619"/>
                    <declaration name="tl" type="TextLayout" line="620"/>
                    <declaration name="numhits" type="int" line="621"/>
                    <declaration name="lb" type="Rectangle2D" line="622"/>
                    <declaration name="hit" type="TextHitInfo" line="623"/>
                    <scope line="624">
                        <declaration name="x" type="float" line="625"/>
                        <declaration name="y" type="float" line="626"/>
                    </scope>
                </method>
            </class>
            <class name="TLOutline" line="632">
                <extends class="TLMeasureTest"/>
                <method name="TLOutline" type="constructor" line="633"/>
                <method name="runTest" type="void" line="637">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tlctx" type="TLContext" line="638"/>
                    <declaration name="tl" type="TextLayout" line="639"/>
                    <declaration name="s" type="Shape" line="640"/>
                    <scope line="641"/>
                </method>
            </class>
        </class>
    </source>