<?xml version="1.0" encoding="UTF-8"?>
    <source package="j2dbench.tests.text">
        <import package="java.awt.Font"/>
        <import package="java.awt.FontMetrics"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.Shape"/>
        <import package="java.awt.font.GlyphMetrics"/>
        <import package="java.awt.font.GlyphVector"/>
        <import package="java.awt.font.TextHitInfo"/>
        <import package="java.awt.font.TextLayout"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <import package="java.text.Bidi"/>
        <import package="java.util.ArrayList"/>
        <import package="j2dbench.Group"/>
        <import package="j2dbench.Result"/>
        <import package="j2dbench.TestEnvironment"/>
        <class name="TextMeasureTests" line="17">
            <extends class="TextTests"/>
            <declaration name="measureroot" type="Group" line="18"/>
            <declaration name="measuretestroot" type="Group" line="19"/>
            <method name="init" type="void" line="20">
                <scope line="28"/>
            </method>
            <method name="TextMeasureTests" type="constructor" line="51">
                <params>
                    <param name="parent" type="Group"/>
                    <param name="nodeName" type="String"/>
                    <param name="description" type="String"/>
                </params>
            </method>
            <class name="SWContext" line="54">
                <extends class="TextContext"/>
                <declaration name="fm" type="FontMetrics" line="55"/>
                <method name="init" type="void" line="56">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="results" type="Result"/>
                    </params>
                </method>
            </class>
            <method name="createContext" type="Context" line="61"/>
            <class name="StringWidth" line="64">
                <extends class="TextMeasureTests"/>
                <method name="StringWidth" type="constructor" line="65"/>
                <method name="runTest" type="void" line="68">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="swctx" type="SWContext" line="69"/>
                    <declaration name="text" type="String" line="70"/>
                    <declaration name="fm" type="FontMetrics" line="71"/>
                    <declaration name="wid" type="int" line="72"/>
                    <scope line="73"/>
                </method>
            </class>
            <class name="StringBounds" line="79">
                <extends class="TextMeasureTests"/>
                <method name="StringBounds" type="constructor" line="80"/>
                <method name="runTest" type="void" line="83">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="swctx" type="SWContext" line="84"/>
                    <declaration name="text" type="String" line="85"/>
                    <declaration name="fm" type="FontMetrics" line="86"/>
                    <declaration name="wid" type="int" line="87"/>
                    <declaration name="r" type="Rectangle" line="88"/>
                    <scope line="89">
                        <declaration name="dx" type="int" line="91"/>
                        <declaration name="dy" type="int" line="92"/>
                        <declaration name="x" type="int" line="93"/>
                        <declaration name="y" type="int" line="94"/>
                    </scope>
                </method>
            </class>
            <class name="CharsWidth" line="100">
                <extends class="TextMeasureTests"/>
                <method name="CharsWidth" type="constructor" line="101"/>
                <method name="runTest" type="void" line="104">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="swctx" type="SWContext" line="105"/>
                    <declaration name="fm" type="FontMetrics" line="106"/>
                    <declaration name="chars" type="char[]" line="107"/>
                    <declaration name="wid" type="int" line="108"/>
                    <scope line="109"/>
                </method>
            </class>
            <class name="CharsBounds" line="115">
                <extends class="TextMeasureTests"/>
                <method name="CharsBounds" type="constructor" line="116"/>
                <method name="runTest" type="void" line="119">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="swctx" type="SWContext" line="120"/>
                    <declaration name="fm" type="FontMetrics" line="121"/>
                    <declaration name="chars" type="char[]" line="122"/>
                    <declaration name="wid" type="int" line="123"/>
                    <declaration name="r" type="Rectangle" line="124"/>
                    <scope line="125">
                        <declaration name="dx" type="int" line="127"/>
                        <declaration name="dy" type="int" line="128"/>
                        <declaration name="x" type="int" line="129"/>
                        <declaration name="y" type="int" line="130"/>
                    </scope>
                </method>
            </class>
            <class name="FontCanDisplay" line="136">
                <extends class="TextMeasureTests"/>
                <method name="FontCanDisplay" type="constructor" line="137"/>
                <method name="runTest" type="void" line="140">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="font" type="Font" line="141"/>
                    <declaration name="b" type="boolean" line="142"/>
                    <scope line="143">
                        <scope line="144"/>
                    </scope>
                </method>
            </class>
            <class name="GVContext" line="151">
                <extends class="G2DContext"/>
                <declaration name="gv" type="GlyphVector" line="152"/>
                <method name="init" type="void" line="153">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="results" type="Result"/>
                    </params>
                    <declaration name="flags" type="int" line="155"/>
                    <scope line="156"/>
                </method>
            </class>
            <class name="GVMeasureTest" line="162">
                <extends class="TextMeasureTests"/>
                <method name="GVMeasureTest" type="constructor" line="163">
                    <params>
                        <param name="parent" type="Group"/>
                        <param name="nodeName" type="String"/>
                        <param name="description" type="String"/>
                    </params>
                </method>
                <method name="createContext" type="Context" line="166"/>
            </class>
            <class name="GVWidth" line="170">
                <extends class="GVMeasureTest"/>
                <method name="GVWidth" type="constructor" line="171"/>
                <method name="runTest" type="void" line="174">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="gvctx" type="GVContext" line="175"/>
                    <declaration name="gv" type="GlyphVector" line="176"/>
                    <declaration name="wid" type="double" line="177"/>
                    <scope line="178"/>
                </method>
            </class>
            <class name="GVLogicalBounds" line="184">
                <extends class="GVMeasureTest"/>
                <method name="GVLogicalBounds" type="constructor" line="185"/>
                <method name="runTest" type="void" line="188">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="gvctx" type="GVContext" line="189"/>
                    <declaration name="gv" type="GlyphVector" line="190"/>
                    <declaration name="r" type="Rectangle2D" line="191"/>
                    <scope line="192"/>
                </method>
            </class>
            <class name="GVVisualBounds" line="198">
                <extends class="GVMeasureTest"/>
                <method name="GVVisualBounds" type="constructor" line="199"/>
                <method name="runTest" type="void" line="202">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="gvctx" type="GVContext" line="203"/>
                    <declaration name="gv" type="GlyphVector" line="204"/>
                    <declaration name="r" type="Rectangle2D" line="205"/>
                    <scope line="206"/>
                </method>
            </class>
            <class name="GVPixelBounds" line="212">
                <extends class="GVMeasureTest"/>
                <method name="GVPixelBounds" type="constructor" line="213"/>
                <method name="runTest" type="void" line="216">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="gvctx" type="GVContext" line="217"/>
                    <declaration name="gv" type="GlyphVector" line="218"/>
                    <declaration name="r" type="Rectangle2D" line="219"/>
                    <scope line="220"/>
                </method>
            </class>
            <class name="GVOutline" line="226">
                <extends class="GVMeasureTest"/>
                <method name="GVOutline" type="constructor" line="227"/>
                <method name="runTest" type="void" line="230">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="gvctx" type="GVContext" line="231"/>
                    <declaration name="gv" type="GlyphVector" line="232"/>
                    <declaration name="s" type="Shape" line="233"/>
                    <scope line="234"/>
                </method>
            </class>
            <class name="GVGlyphLogicalBounds" line="240">
                <extends class="GVMeasureTest"/>
                <method name="GVGlyphLogicalBounds" type="constructor" line="241"/>
                <method name="runTest" type="void" line="244">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="gvctx" type="GVContext" line="245"/>
                    <declaration name="gv" type="GlyphVector" line="246"/>
                    <declaration name="s" type="Shape" line="247"/>
                    <scope line="248">
                        <scope line="249"/>
                    </scope>
                </method>
            </class>
            <class name="GVGlyphVisualBounds" line="256">
                <extends class="GVMeasureTest"/>
                <method name="GVGlyphVisualBounds" type="constructor" line="257"/>
                <method name="runTest" type="void" line="260">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="gvctx" type="GVContext" line="261"/>
                    <declaration name="gv" type="GlyphVector" line="262"/>
                    <declaration name="s" type="Shape" line="263"/>
                    <scope line="264">
                        <scope line="265"/>
                    </scope>
                </method>
            </class>
            <class name="GVGlyphPixelBounds" line="272">
                <extends class="GVMeasureTest"/>
                <method name="GVGlyphPixelBounds" type="constructor" line="273"/>
                <method name="runTest" type="void" line="276">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="gvctx" type="GVContext" line="277"/>
                    <declaration name="gv" type="GlyphVector" line="278"/>
                    <declaration name="r" type="Rectangle2D" line="279"/>
                    <scope line="280">
                        <scope line="281"/>
                    </scope>
                </method>
            </class>
            <class name="GVGlyphOutline" line="288">
                <extends class="GVMeasureTest"/>
                <method name="GVGlyphOutline" type="constructor" line="289"/>
                <method name="runTest" type="void" line="292">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="gvctx" type="GVContext" line="293"/>
                    <declaration name="gv" type="GlyphVector" line="294"/>
                    <declaration name="s" type="Shape" line="295"/>
                    <scope line="296">
                        <scope line="297"/>
                    </scope>
                </method>
            </class>
            <class name="GVGlyphTransform" line="304">
                <extends class="GVMeasureTest"/>
                <method name="GVGlyphTransform" type="constructor" line="305"/>
                <method name="runTest" type="void" line="308">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="gvctx" type="GVContext" line="309"/>
                    <declaration name="gv" type="GlyphVector" line="310"/>
                    <declaration name="tx" type="AffineTransform" line="311"/>
                    <scope line="312">
                        <scope line="313"/>
                    </scope>
                </method>
            </class>
            <class name="GVGlyphMetrics" line="320">
                <extends class="GVMeasureTest"/>
                <method name="GVGlyphMetrics" type="constructor" line="321"/>
                <method name="runTest" type="void" line="324">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="gvctx" type="GVContext" line="325"/>
                    <declaration name="gv" type="GlyphVector" line="326"/>
                    <declaration name="gm" type="GlyphMetrics" line="327"/>
                    <scope line="328">
                        <scope line="329"/>
                    </scope>
                </method>
            </class>
            <class name="TLContext" line="336">
                <extends class="G2DContext"/>
                <declaration name="tl" type="TextLayout" line="337"/>
                <method name="init" type="void" line="338">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="results" type="Result"/>
                    </params>
                </method>
            </class>
            <class name="TLMeasureTest" line="343">
                <extends class="TextMeasureTests"/>
                <method name="TLMeasureTest" type="constructor" line="344">
                    <params>
                        <param name="parent" type="Group"/>
                        <param name="nodeName" type="String"/>
                        <param name="description" type="String"/>
                    </params>
                </method>
                <method name="createContext" type="Context" line="347"/>
            </class>
            <class name="TLAdvance" line="351">
                <extends class="TLMeasureTest"/>
                <method name="TLAdvance" type="constructor" line="352"/>
                <method name="runTest" type="void" line="355">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tlctx" type="TLContext" line="356"/>
                    <declaration name="tl" type="TextLayout" line="357"/>
                    <declaration name="wid" type="double" line="358"/>
                    <scope line="359"/>
                </method>
            </class>
            <class name="TLAscent" line="365">
                <extends class="TLMeasureTest"/>
                <method name="TLAscent" type="constructor" line="366"/>
                <method name="runTest" type="void" line="369">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tlctx" type="TLContext" line="370"/>
                    <declaration name="tl" type="TextLayout" line="371"/>
                    <declaration name="ht" type="float" line="372"/>
                    <scope line="373"/>
                </method>
            </class>
            <class name="TLBounds" line="379">
                <extends class="TLMeasureTest"/>
                <method name="TLBounds" type="constructor" line="380"/>
                <method name="runTest" type="void" line="383">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tlctx" type="TLContext" line="384"/>
                    <declaration name="tl" type="TextLayout" line="385"/>
                    <declaration name="r" type="Rectangle2D" line="386"/>
                    <scope line="387"/>
                </method>
            </class>
            <class name="TLExContext" line="393">
                <extends class="TLContext"/>
                <declaration name="hits" type="TextHitInfo[]" line="394"/>
                <declaration name="lb" type="Rectangle2D" line="395"/>
                <method name="init" type="void" line="396">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="results" type="Result"/>
                    </params>
                    <declaration name="list" type="ArrayList" line="398"/>
                    <declaration name="hit" type="TextHitInfo" line="399"/>
                    <scope line="400"/>
                </method>
            </class>
            <class name="TLExtendedMeasureTest" line="410">
                <extends class="TLMeasureTest"/>
                <method name="TLExtendedMeasureTest" type="constructor" line="411">
                    <params>
                        <param name="parent" type="Group"/>
                        <param name="nodeName" type="String"/>
                        <param name="description" type="String"/>
                    </params>
                </method>
                <method name="createContext" type="Context" line="414"/>
            </class>
            <class name="TLGetCaretInfo" line="418">
                <extends class="TLExtendedMeasureTest"/>
                <method name="TLGetCaretInfo" type="constructor" line="419"/>
                <method name="runTest" type="void" line="422">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tlctx" type="TLExContext" line="423"/>
                    <declaration name="tl" type="TextLayout" line="424"/>
                    <declaration name="hits" type="TextHitInfo[]" line="425"/>
                    <scope line="426">
                        <scope line="427"/>
                    </scope>
                </method>
            </class>
            <class name="TLGetNextHit" line="434">
                <extends class="TLExtendedMeasureTest"/>
                <method name="TLGetNextHit" type="constructor" line="435"/>
                <method name="runTest" type="void" line="438">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tlctx" type="TLExContext" line="439"/>
                    <declaration name="tl" type="TextLayout" line="440"/>
                    <declaration name="hits" type="TextHitInfo[]" line="441"/>
                    <declaration name="hit" type="TextHitInfo" line="442"/>
                    <scope line="443">
                        <scope line="444"/>
                    </scope>
                </method>
            </class>
            <class name="TLGetCaretShape" line="451">
                <extends class="TLExtendedMeasureTest"/>
                <method name="TLGetCaretShape" type="constructor" line="452"/>
                <method name="runTest" type="void" line="455">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tlctx" type="TLExContext" line="456"/>
                    <declaration name="tl" type="TextLayout" line="457"/>
                    <declaration name="hits" type="TextHitInfo[]" line="458"/>
                    <declaration name="s" type="Shape" line="459"/>
                    <scope line="460">
                        <scope line="461"/>
                    </scope>
                </method>
            </class>
            <class name="TLGetLogicalHighlightShape" line="468">
                <extends class="TLExtendedMeasureTest"/>
                <method name="TLGetLogicalHighlightShape" type="constructor" line="469"/>
                <method name="runTest" type="void" line="472">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tlctx" type="TLExContext" line="473"/>
                    <declaration name="tl" type="TextLayout" line="474"/>
                    <declaration name="len" type="int" line="475"/>
                    <declaration name="lb" type="Rectangle2D" line="476"/>
                    <declaration name="s" type="Shape" line="477"/>
                    <scope line="478">
                        <scope line="479"/>
                    </scope>
                    <scope line="484">
                        <scope line="485">
                            <scope line="486"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="TLGetVisualHighlightShape" line="494">
                <extends class="TLExtendedMeasureTest"/>
                <method name="TLGetVisualHighlightShape" type="constructor" line="495"/>
                <method name="runTest" type="void" line="498">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tlctx" type="TLExContext" line="499"/>
                    <declaration name="tl" type="TextLayout" line="500"/>
                    <declaration name="hits" type="TextHitInfo[]" line="501"/>
                    <declaration name="lb" type="Rectangle2D" line="502"/>
                    <declaration name="s" type="Shape" line="503"/>
                    <scope line="504">
                        <scope line="505"/>
                    </scope>
                    <scope line="510">
                        <scope line="511">
                            <scope line="512"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="TLHitTest" line="520">
                <extends class="TLExtendedMeasureTest"/>
                <method name="TLHitTest" type="constructor" line="521"/>
                <method name="runTest" type="void" line="524">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tlctx" type="TLExContext" line="525"/>
                    <declaration name="tl" type="TextLayout" line="526"/>
                    <declaration name="numhits" type="int" line="527"/>
                    <declaration name="lb" type="Rectangle2D" line="528"/>
                    <declaration name="hit" type="TextHitInfo" line="529"/>
                    <scope line="530">
                        <declaration name="x" type="float" line="531"/>
                        <declaration name="y" type="float" line="532"/>
                    </scope>
                </method>
            </class>
            <class name="TLOutline" line="537">
                <extends class="TLMeasureTest"/>
                <method name="TLOutline" type="constructor" line="538"/>
                <method name="runTest" type="void" line="541">
                    <params>
                        <param name="ctx" type="Object"/>
                        <param name="numReps" type="int"/>
                    </params>
                    <declaration name="tlctx" type="TLContext" line="542"/>
                    <declaration name="tl" type="TextLayout" line="543"/>
                    <declaration name="s" type="Shape" line="544"/>
                    <scope line="545"/>
                </method>
            </class>
        </class>
    </source>