<?xml version="1.0" encoding="UTF-8"?>
    <source package="j2dbench.tests.text">
        <import package="java.awt.Color"/>
        <import package="java.awt.Font"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.GraphicsEnvironment"/>
        <import package="java.awt.RenderingHints"/>
        <import package="java.awt.font.NumericShaper"/>
        <import package="java.awt.font.TextAttribute"/>
        <import package="java.awt.font.FontRenderContext"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.BufferedReader"/>
        <import package="java.io.InputStreamReader"/>
        <import package="java.io.IOException"/>
        <import package="java.io.PrintWriter"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Map"/>
        <import package="java.util.Set"/>
        <import package="javax.swing.JComponent"/>
        <import package="j2dbench.Destinations"/>
        <import package="j2dbench.Group"/>
        <import package="j2dbench.Node"/>
        <import package="j2dbench.Option"/>
        <import package="j2dbench.Option.ObjectList"/>
        <import package="j2dbench.Result"/>
        <import package="j2dbench.Test"/>
        <import package="j2dbench.TestEnvironment"/>
        <class name="TextTests" line="70">
            <extends class="Test"/>
            <comment line="81">
                core data                
            </comment>
            <comment line="100">
                utilties                
            </comment>
            <comment line="335">
                core is textlength, text script, font name/style/size/tx, frc                
            </comment>
            <comment line="337">
                drawing
                   drawString, drawChars, drawBytes, drawGlyphVector, TextLayout.draw, drawAttributedString
                 length of text
                   1, 2, 4, 8, 16, 32, 64, 128, 256 chars
                 script of text
                   simple: latin-1, japanese, arabic, hebrew, indic, thai, surrogate, dingbats
                   mixed:  latin-1 + x  (1, 2, 3, 4 pairs)
                 font of text
                   name (composite, not), style, size (6, 12, 18, 24, 30, 36, 42, 48, 54, 60), transform (full set)
                 text rendering hints
                   aa, fm, gaa
                 graphics transform (full set)
                 (gv) gtx, gpos
                 (tl, as) num style runs
                
                 querying/measuring
                   ascent/descent/leading
                   advance
                   (gv) lb, vb, pb, glb, gvb, glb, gp, gjust, gmet, gtx
                   (tl) bounds, charpos, cursor
                
                 construction/layout
                   (bidi) no controls, controls, styles
                   (gv) createGV, layoutGV
                   (tl) TL constructors
                   (tm) line break                
            </comment>
            <declaration name="hasGraphics2D" type="boolean" line="71"/>
            <scope line="73">
                <scope line="74"/>
                <scope line="76"/>
            </scope>
            <declaration name="tlengths" type="int[]" line="81"/>
            <declaration name="tscripts" type="String[]" line="85"/>
            <declaration name="fsizes" type="float[]" line="91"/>
            <declaration name="fintsizes" type="float[]" line="95"/>
            <method name="floatObjectList" type="Float[]" line="100">
                <params>
                    <param name="input" type="float[]"/>
                </params>
                <declaration name="result" type="Float[]" line="101"/>
                <scope line="102"/>
            </method>
            <method name="floatStringList" type="String[]" line="108">
                <params>
                    <param name="input" type="float[]"/>
                </params>
            </method>
            <method name="floatStringList" type="String[]" line="112">
                <params>
                    <param name="input" type="float[]"/>
                    <param name="sfx" type="String"/>
                </params>
            </method>
            <method name="floatStringList" type="String[]" line="116">
                <params>
                    <param name="pfx" type="String"/>
                    <param name="input" type="float[]"/>
                    <param name="sfx" type="String"/>
                </params>
                <declaration name="result" type="String[]" line="117"/>
                <scope line="118"/>
            </method>
            <method name="intStringList" type="String[]" line="124">
                <params>
                    <param name="input" type="int[]"/>
                </params>
            </method>
            <method name="intStringList" type="String[]" line="128">
                <params>
                    <param name="input" type="int[]"/>
                    <param name="sfx" type="String"/>
                </params>
            </method>
            <method name="intStringList" type="String[]" line="132">
                <params>
                    <param name="pfx" type="String"/>
                    <param name="input" type="int[]"/>
                    <param name="sfx" type="String"/>
                </params>
                <declaration name="result" type="String[]" line="133"/>
                <scope line="134"/>
            </method>
            <declaration name="txNames" type="String[]" line="140"/>
            <declaration name="txDescNames" type="String[]" line="141"/>
            <declaration name="txList" type="AffineTransform[]" line="142"/>
            <declaration name="maps" type="Map[]" line="143"/>
            <scope line="144">
                <declaration name="identity" type="AffineTransform" line="145"/>
                <declaration name="sm_scale" type="AffineTransform" line="146"/>
                <declaration name="lg_scale" type="AffineTransform" line="147"/>
                <declaration name="wide" type="AffineTransform" line="148"/>
                <declaration name="tall" type="AffineTransform" line="149"/>
                <declaration name="x_trans" type="AffineTransform" line="150"/>
                <declaration name="y_trans" type="AffineTransform" line="151"/>
                <declaration name="xy_trans" type="AffineTransform" line="152"/>
                <declaration name="sm_rot" type="AffineTransform" line="153"/>
                <declaration name="lg_rot" type="AffineTransform" line="154"/>
                <declaration name="pi2_rot" type="AffineTransform" line="155"/>
                <declaration name="x_shear" type="AffineTransform" line="156"/>
                <declaration name="y_shear" type="AffineTransform" line="157"/>
                <declaration name="xy_shear" type="AffineTransform" line="158"/>
                <declaration name="x_flip" type="AffineTransform" line="159"/>
                <declaration name="y_flip" type="AffineTransform" line="160"/>
                <declaration name="xy_flip" type="AffineTransform" line="161"/>
                <declaration name="w_rot" type="AffineTransform" line="162"/>
                <declaration name="w_y_shear" type="AffineTransform" line="164"/>
                <declaration name="w_r_trans" type="AffineTransform" line="166"/>
                <declaration name="w_t_rot" type="AffineTransform" line="169"/>
                <declaration name="w_y_s_r_trans" type="AffineTransform" line="172"/>
                <declaration name="fontMap" type="HashMap" line="211"/>
                <declaration name="emptyMap" type="HashMap" line="214"/>
                <declaration name="simpleMap" type="HashMap" line="216"/>
                <declaration name="complexMap" type="HashMap" line="221"/>
                <scope line="227"/>
                <scope line="230"/>
            </scope>
            <method name="getString" type="String" line="241">
                <params>
                    <param name="key" type="Object"/>
                    <param name="len" type="int"/>
                </params>
                <comment line="244">
                    leave room for index == 3 to return null                    
                </comment>
                <comment line="254">
                    2 to 1 ratio, short spans between 1 and 16 chars long                    
                </comment>
                <comment line="268">
                    use strings[0] twice for each other string                    
                </comment>
                <comment line="274">
                    we know all strings are longer than span                    
                </comment>
                <declaration name="keyString" type="String" line="242"/>
                <declaration name="strings" type="String[]" line="243"/>
                <declaration name="span" type="int" line="244"/>
                <declaration name="n" type="int" line="245"/>
                <scope line="246"/>
                <scope line="248">
                    <declaration name="m" type="int" line="250"/>
                    <scope line="251"/>
                    <scope line="255"/>
                </scope>
                <declaration name="s" type="String" line="261"/>
                <declaration name="pos" type="int" line="262"/>
                <declaration name="strx" type="int" line="263"/>
                <scope line="264">
                    <declaration name="src" type="String" line="265"/>
                    <scope line="266"/>
                    <scope line="269"/>
                    <scope line="272"/>
                </scope>
            </method>
            <declaration name="strcache" type="HashMap" line="282"/>
            <method name="getSimpleString" type="String" line="283">
                <params>
                    <param name="key" type="Object"/>
                </params>
                <declaration name="s" type="String" line="284"/>
                <scope line="285">
                    <declaration name="fname" type="String" line="286"/>
                    <scope line="287">
                        <declaration name="is" type="InputStream" line="288"/>
                        <scope line="289"/>
                        <declaration name="r" type="BufferedReader" line="292"/>
                        <declaration name="buf" type="StringBuffer" line="294"/>
                        <scope line="295"/>
                        <scope line="300"/>
                    </scope>
                    <scope line="304"/>
                </scope>
            </method>
            <declaration name="textroot" type="Group" line="313"/>
            <declaration name="txoptroot" type="Group" line="314"/>
            <declaration name="txoptdataroot" type="Group" line="315"/>
            <declaration name="txoptfontroot" type="Group" line="316"/>
            <declaration name="txoptgraphicsroot" type="Group" line="317"/>
            <declaration name="advoptsroot" type="Group" line="318"/>
            <declaration name="tlengthList" type="Option" line="320"/>
            <declaration name="tscriptList" type="Option" line="321"/>
            <declaration name="fnameList" type="Option" line="322"/>
            <declaration name="fstyleList" type="Option" line="323"/>
            <declaration name="fsizeList" type="Option" line="324"/>
            <declaration name="ftxList" type="Option" line="325"/>
            <declaration name="taaList" type="Option" line="326"/>
            <declaration name="tfmTog" type="Option" line="327"/>
            <declaration name="gaaTog" type="Option" line="328"/>
            <declaration name="gtxList" type="Option" line="329"/>
            <declaration name="gvstyList" type="Option" line="330"/>
            <declaration name="tlrunList" type="Option" line="331"/>
            <declaration name="tlmapList" type="Option" line="332"/>
            <method name="init" type="void" line="363">
                <comment line="459">
                    add special TextAAOpt for backwards compatibility with
                     older options files                    
                </comment>
                <declaration name="fsl" type="float[]" line="406"/>
                <scope line="416">
                    <declaration name="taaNames" type="String[]" line="428"/>
                    <declaration name="taaHints" type="Object[]" line="429"/>
                    <scope line="430"/>
                    <scope line="443"/>
                    <declaration name="runs" type="int[]" line="487"/>
                    <declaration name="tlmapnames" type="String[]" line="494"/>
                </scope>
            </method>
            <class name="TextAAOpt" line="504">
                <extends class="Node"/>
                <javadoc line="504">
                    This &quot;virtual Node&quot; implementation is here to maintain backward
                      compatibility with older J2DBench releases, specifically those
                      options files that were created before we added LCD-optimized text
                      hints in JDK 6.  This class will translate the text antialias settings
                      from the old &quot;taa&quot; On/Off/Both choice into the new expanded version.                    
                </javadoc>
                <method name="TextAAOpt" type="constructor" line="512"/>
                <method name="getJComponent" type="JComponent" line="516"/>
                <method name="restoreDefault" type="void" line="520">
                    <comment line="522">
                        no-op                        
                    </comment>
                </method>
                <method name="write" type="void" line="524">
                    <params>
                        <param name="pw" type="PrintWriter"/>
                    </params>
                    <comment line="526">
                        no-op (the old &quot;taa&quot; choice will be saved as part of the
                         new &quot;textaa&quot; option)                        
                    </comment>
                </method>
                <method name="setOption" type="String" line="529">
                    <params>
                        <param name="key" type="String"/>
                        <param name="value" type="String"/>
                    </params>
                    <declaration name="opts" type="String" line="530"/>
                    <scope line="531"/>
                    <scope line="533"/>
                    <scope line="535"/>
                    <scope line="537"/>
                </method>
            </class>
            <class name="Context" line="544">
                <method name="init" type="void" line="545">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="result" type="Result"/>
                    </params>
                </method>
                <method name="cleanup" type="void" line="546">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                    </params>
                </method>
            </class>
            <class name="TextContext" line="549">
                <extends class="Context"/>
                <declaration name="graphics" type="Graphics" line="550"/>
                <declaration name="text" type="String" line="551"/>
                <declaration name="chars" type="char[]" line="552"/>
                <declaration name="font" type="Font" line="553"/>
                <method name="init" type="void" line="555">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="result" type="Result"/>
                    </params>
                    <comment line="557">
                        graphics                        
                    </comment>
                    <comment line="560">
                        text                        
                    </comment>
                    <comment line="565">
                        chars                        
                    </comment>
                    <comment line="568">
                        font                        
                    </comment>
                    <comment line="586">
                        graphics                        
                    </comment>
                    <comment line="602">
                        set result                        
                    </comment>
                    <declaration name="sname" type="String" line="560"/>
                    <declaration name="slen" type="int" line="561"/>
                    <declaration name="fname" type="String" line="568"/>
                    <scope line="569"/>
                    <declaration name="fstyle" type="int" line="572"/>
                    <declaration name="fsize" type="float" line="573"/>
                    <declaration name="ftx" type="AffineTransform" line="574"/>
                    <scope line="576">
                        <scope line="577"/>
                        <scope line="580"/>
                    </scope>
                    <scope line="586">
                        <declaration name="g2d" type="Graphics2D" line="587"/>
                    </scope>
                </method>
                <method name="cleanup" type="void" line="606">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                    </params>
                </method>
            </class>
            <class name="G2DContext" line="612">
                <extends class="TextContext"/>
                <declaration name="g2d" type="Graphics2D" line="613"/>
                <declaration name="frc" type="FontRenderContext" line="614"/>
                <method name="init" type="void" line="616">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="results" type="Result"/>
                    </params>
                </method>
            </class>
            <method name="TextTests" type="constructor" line="623">
                <params>
                    <param name="parent" type="Group"/>
                    <param name="nodeName" type="String"/>
                    <param name="description" type="String"/>
                </params>
            </method>
            <method name="createContext" type="Context" line="629"/>
            <method name="initTest" type="Object" line="633">
                <params>
                    <param name="env" type="TestEnvironment"/>
                    <param name="result" type="Result"/>
                </params>
                <declaration name="ctx" type="Context" line="634"/>
            </method>
            <method name="cleanupTest" type="void" line="639">
                <params>
                    <param name="env" type="TestEnvironment"/>
                    <param name="ctx" type="Object"/>
                </params>
            </method>
            <declaration name="physicalMap" type="Map" line="643"/>
            <method name="physicalFontNameFor" type="String" line="644">
                <params>
                    <param name="textname" type="String"/>
                    <param name="textlen" type="int"/>
                    <param name="text" type="String"/>
                </params>
                <declaration name="lenMap" type="Map" line="645"/>
                <scope line="646"/>
                <declaration name="key" type="Integer" line="650"/>
                <declaration name="textfont" type="Font" line="651"/>
                <scope line="652">
                    <declaration name="fontsToTry" type="Font[]" line="653"/>
                    <scope line="654"/>
                    <scope line="656">
                        <declaration name="fontset" type="Set" line="657"/>
                        <declaration name="iter" type="java.util.Iterator" line="658"/>
                        <scope line="659">
                            <declaration name="e" type="Map.Entry" line="660"/>
                        </scope>
                    </scope>
                    <declaration name="bestFont" type="Font" line="666"/>
                    <declaration name="bestCount" type="int" line="667"/>
                    <scope line="668">
                        <declaration name="font" type="Font" line="669"/>
                        <declaration name="count" type="int" line="670"/>
                        <scope line="671">
                            <scope line="672"/>
                        </scope>
                        <scope line="676"/>
                    </scope>
                </scope>
            </method>
            <class name="FontOption" line="688">
                <extends class="ObjectList"/>
                <declaration name="optionnames" type="String[]" line="689"/>
                <declaration name="descnames" type="String[]" line="692"/>
                <method name="FontOption" type="constructor" line="696">
                    <params>
                        <param name="parent" type="Group"/>
                        <param name="nodeName" type="String"/>
                        <param name="description" type="String"/>
                    </params>
                </method>
                <method name="getValString" type="String" line="701">
                    <params>
                        <param name="value" type="Object"/>
                    </params>
                </method>
                <method name="getAbbreviatedModifierDescription" type="String" line="705">
                    <params>
                        <param name="value" type="Object"/>
                    </params>
                </method>
            </class>
        </class>
    </source>