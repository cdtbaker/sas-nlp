<?xml version="1.0" encoding="UTF-8"?>
    <source package="j2dbench.report">
        <import package="java.io"/>
        <import package="java.util"/>
        <import package="java.text.DecimalFormat"/>
        <import package="java.text.SimpleDateFormat"/>
        <import package="j2dbench.report.J2DAnalyzer.ResultHolder"/>
        <import package="j2dbench.report.J2DAnalyzer.ResultSetHolder"/>
        <import package="j2dbench.report.J2DAnalyzer.SingleResultSetHolder"/>
        <class name="HTMLSeriesReporter" line="49">
            <declaration name="HTMLGEN_FILE_NEW" type="int" line="51"/>
            <javadoc line="51">
                Flag to indicate - Generate new report or append to existing report                
            </javadoc>
            <declaration name="HTMLGEN_FILE_UPDATE" type="int" line="55"/>
            <declaration name="resultsDir" type="String" line="57"/>
            <javadoc line="57">
                Path to results directory where all results are stored                
            </javadoc>
            <declaration name="groups" type="List" line="62"/>
            <javadoc line="62">
                Holds the groups and corresponding group-display-names                
            </javadoc>
            <declaration name="groupNames" type="Map" line="66"/>
            <declaration name="LEVEL" type="int" line="68"/>
            <javadoc line="68">
                Level at which tests are grouped to be displayed in summary                
            </javadoc>
            <declaration name="decimalFormat" type="DecimalFormat" line="73"/>
            <declaration name="dateFormat" type="SimpleDateFormat" line="75"/>
            <declaration name="numericComparator" type="Comparator" line="78"/>
            <anonymous_class line="78">
                <method name="compare" type="int" line="79">
                    <params>
                        <param name="lhs" type="Object"/>
                        <param name="rhs" type="Object"/>
                    </params>
                    <declaration name="lval" type="double" line="80"/>
                    <scope line="81"/>
                    <scope line="84"/>
                    <declaration name="rval" type="double" line="86"/>
                    <scope line="87"/>
                    <scope line="90"/>
                    <declaration name="delta" type="double" line="92"/>
                </method>
            </anonymous_class>
            <javadoc line="98">
                Opens a File and returns a PrintWriter instance based on new/update
                  option specified in argument.                
            </javadoc>
            <method name="openFile" type="PrintWriter" line="102">
                <params>
                    <param name="name" type="String"/>
                    <param name="nSwitch" type="int"/>
                </params>
                <comment line="110">
                    HTMLGEN_FILE_NEW                    
                </comment>
                <comment line="113">
                    HTMLGEN_FILE_UPDATE                    
                </comment>
                <declaration name="file" type="FileOutputStream" line="104"/>
                <declaration name="writer" type="OutputStreamWriter" line="105"/>
                <scope line="107"/>
                <scope line="117"/>
            </method>
            <method name="generateSeriesReport" type="void" line="125">
                <params>
                    <param name="resultsDir" type="String"/>
                    <param name="xmlFileNames" type="ArrayList"/>
                </params>
                <comment line="137">
                    first, display the values of system properties that distinguish the
                     sets, and the values of the system properties that are common to all sets                    
                </comment>
                <comment line="147">
                    collect system properties common to all result sets
                     and those unique to only some sets
                     first collect all the property keys.  these should be the same, but we&apos;ll play
                     it safe.                    
                </comment>
                <comment line="152">
                    final since referenced from inner class comparator below                    
                </comment>
                <comment line="183">
                    not common, keep this key                    
                </comment>
                <comment line="189">
                    common, so put value in commonProps and remove this key                    
                </comment>
                <comment line="207">
                    write table of unique and common properties                    
                </comment>
                <comment line="249">
                    for each test that appears in one or more result sets
                     for each option that has multiple values
                     for each value
                     for each result set
                     display count and bar                    
                </comment>
                <comment line="255">
                    from test name to resultholders                    
                </comment>
                <comment line="284">
                    get sorted list of variable options for this test
                     optionMap maps each option to a value map.  the value map contains all the values,
                     sorted depending on the value type (numeric or string).  it maps
                     from each (string) value to a list of all the resultholders for that value
                     value.                    
                </comment>
                <comment line="308">
                    determine how to sort                    
                </comment>
                <comment line="340">
                    don&apos;t group by this if only one value                    
                </comment>
                <comment line="369">
                    sort the result list in order of the sets the results come from
                     we count on this being a stable sort, otherwise we&apos;d have to also sort
                     within each result set on all other variables                    
                </comment>
                <scope line="126">
                    <declaration name="xml" type="String" line="127"/>
                    <scope line="128"/>
                    <scope line="131"/>
                </scope>
                <declaration name="reportFile" type="File" line="139"/>
                <declaration name="w" type="PrintWriter" line="140"/>
                <declaration name="results" type="SingleResultSetHolder[]" line="152"/>
                <declaration name="propKeys" type="Set" line="153"/>
                <scope line="154">
                    <declaration name="srsh" type="SingleResultSetHolder" line="155"/>
                    <declaration name="props" type="Map" line="156"/>
                    <declaration name="keys" type="Set" line="157"/>
                </scope>
                <declaration name="uniqueProps" type="Map[]" line="162"/>
                <declaration name="commonProps" type="Map" line="163"/>
                <scope line="164">
                    <declaration name="m" type="Map" line="165"/>
                </scope>
                <scope line="170">
                    <declaration name="iter" type="Iterator" line="171"/>
                    <scope line="172">
                        <declaration name="k" type="Object" line="173"/>
                        <declaration name="v" type="Object" line="174"/>
                        <scope line="175">
                            <declaration name="props" type="Map" line="176"/>
                            <scope line="177"/>
                            <scope line="179">
                                <declaration name="mv" type="Object" line="180"/>
                                <scope line="181"/>
                            </scope>
                        </scope>
                        <scope line="190"/>
                    </scope>
                </scope>
                <declaration name="hexColor" type="String[]" line="196"/>
                <anonymous_class line="200">
                    <method name="compare" type="int" line="201">
                        <params>
                            <param name="lhs" type="Object"/>
                            <param name="rhs" type="Object"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="comparator" type="Comparator" line="200"/>
                <scope line="210">
                    <declaration name="titl" type="String" line="211"/>
                    <declaration name="desc" type="String" line="212"/>
                    <declaration name="ts" type="TreeSet" line="214"/>
                    <declaration name="iter" type="Iterator" line="216"/>
                    <scope line="217">
                        <declaration name="e" type="Map.Entry" line="218"/>
                    </scope>
                </scope>
                <scope line="225">
                    <declaration name="ts" type="TreeSet" line="226"/>
                    <declaration name="iter" type="Iterator" line="228"/>
                    <scope line="229">
                        <declaration name="e" type="Map.Entry" line="230"/>
                    </scope>
                </scope>
                <scope line="236">
                    <declaration name="ts" type="TreeSet" line="237"/>
                    <declaration name="iter" type="Iterator" line="239"/>
                    <scope line="240">
                        <declaration name="key" type="Object" line="241"/>
                        <declaration name="val" type="Object" line="242"/>
                    </scope>
                </scope>
                <declaration name="testRuns" type="Map" line="254"/>
                <declaration name="testNames" type="Set" line="255"/>
                <scope line="256">
                    <declaration name="en" type="Enumeration" line="257"/>
                    <scope line="258">
                        <declaration name="rh" type="ResultHolder" line="259"/>
                        <declaration name="name" type="String" line="260"/>
                        <declaration name="list" type="ArrayList" line="263"/>
                        <scope line="264"/>
                    </scope>
                </scope>
                <declaration name="iter" type="Iterator" line="276"/>
                <scope line="277">
                    <declaration name="name" type="String" line="278"/>
                    <declaration name="bestScore" type="double" line="281"/>
                    <declaration name="optionMap" type="Map" line="289"/>
                    <declaration name="list" type="ArrayList" line="290"/>
                    <declaration name="riter" type="Iterator" line="291"/>
                    <scope line="292">
                        <declaration name="rh" type="ResultHolder" line="293"/>
                        <declaration name="options" type="Hashtable" line="294"/>
                        <declaration name="entries" type="Set" line="295"/>
                        <declaration name="eiter" type="Iterator" line="296"/>
                        <scope line="297">
                            <declaration name="e" type="Map.Entry" line="298"/>
                            <declaration name="key" type="Object" line="299"/>
                            <scope line="300"/>
                            <declaration name="val" type="Object" line="303"/>
                            <declaration name="vmap" type="Map" line="305"/>
                            <scope line="306">
                                <declaration name="numeric" type="boolean" line="308"/>
                                <scope line="309"/>
                                <scope line="313"/>
                                <declaration name="c" type="Comparator" line="316"/>
                            </scope>
                            <declaration name="vlist" type="ArrayList" line="321"/>
                            <scope line="322"/>
                            <declaration name="score" type="double" line="328"/>
                            <scope line="329"/>
                        </scope>
                    </scope>
                    <declaration name="oi" type="Iterator" line="335"/>
                    <scope line="336">
                        <declaration name="optionName" type="String" line="337"/>
                        <declaration name="optionValues" type="Map" line="338"/>
                        <declaration name="grouping" type="StringBuffer" line="341"/>
                        <declaration name="oi2" type="Iterator" line="343"/>
                        <scope line="344">
                            <declaration name="oname2" type="String" line="345"/>
                            <declaration name="ov2" type="Map" line="347"/>
                            <declaration name="ov2i" type="Iterator" line="350"/>
                            <declaration name="comma" type="boolean" line="352"/>
                            <scope line="353"/>
                        </scope>
                        <declaration name="vi" type="Iterator" line="362"/>
                        <scope line="363">
                            <declaration name="valueName" type="String" line="364"/>
                            <declaration name="resultList" type="ArrayList" line="366"/>
                            <anonymous_class line="371">
                                <method name="compare" type="int" line="372">
                                    <params>
                                        <param name="lhs" type="Object"/>
                                        <param name="rhs" type="Object"/>
                                    </params>
                                    <declaration name="lh" type="ResultSetHolder" line="373"/>
                                    <declaration name="rh" type="ResultSetHolder" line="374"/>
                                    <declaration name="li" type="int" line="375"/>
                                    <scope line="376">
                                        <scope line="377"/>
                                    </scope>
                                    <declaration name="ri" type="int" line="382"/>
                                    <scope line="383">
                                        <scope line="384"/>
                                    </scope>
                                </method>
                            </anonymous_class>
                            <declaration name="c" type="Comparator" line="371"/>
                            <declaration name="sorted" type="ResultHolder[]" line="394"/>
                            <scope line="397">
                                <declaration name="holder" type="ResultHolder" line="398"/>
                                <declaration name="color" type="String" line="399"/>
                                <scope line="400">
                                    <scope line="401"/>
                                </scope>
                                <declaration name="score" type="double" line="405"/>
                                <declaration name="pix" type="int" line="406"/>
                                <scope line="407">
                                    <declaration name="scale" type="double" line="408"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="printUsage" type="void" line="433">
                <declaration name="usage" type="String" line="434"/>
            </method>
            <declaration name="logScale" type="boolean" line="457"/>
            <javadoc line="459">
                main                
            </javadoc>
            <method name="main" type="void" line="462">
                <params>
                    <param name="args" type="String"/>
                </params>
                <comment line="469">
                    ---- Analysis Mode ----
                    BEST    = 1;
                    WORST   = 2;
                    AVERAGE = 3;
                    MIDAVG  = 4;                    
                </comment>
                <declaration name="resDir" type="String" line="464"/>
                <declaration name="results" type="ArrayList" line="465"/>
                <declaration name="group" type="int" line="466"/>
                <declaration name="analyzerMode" type="int" line="474"/>
                <scope line="476">
                    <scope line="478">
                        <scope line="479"/>
                        <scope line="483"/>
                        <scope line="488"/>
                        <scope line="494">
                            <declaration name="strAnalyzerMode" type="String" line="496"/>
                            <scope line="497"/>
                            <scope line="499"/>
                            <scope line="501"/>
                            <scope line="503"/>
                            <scope line="505"/>
                        </scope>
                        <scope line="509"/>
                    </scope>
                </scope>
                <scope line="514"/>
                <scope line="518"/>
                <scope line="522"/>
            </method>
        </class>
    </source>