<?xml version="1.0" encoding="UTF-8"?>
    <source package="j2dbench.tests.iio">
        <import package="java.io.BufferedInputStream"/>
        <import package="java.io.ByteArrayInputStream"/>
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.File"/>
        <import package="java.io.FileInputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.net.URL"/>
        <import package="javax.imageio.ImageIO"/>
        <import package="javax.imageio.spi.IIORegistry"/>
        <import package="javax.imageio.spi.ImageInputStreamSpi"/>
        <import package="javax.imageio.stream.FileCacheImageInputStream"/>
        <import package="javax.imageio.stream.FileImageInputStream"/>
        <import package="javax.imageio.stream.ImageInputStream"/>
        <import package="javax.imageio.stream.MemoryCacheImageInputStream"/>
        <import package="j2dbench.Group"/>
        <import package="j2dbench.Option"/>
        <import package="j2dbench.Result"/>
        <import package="j2dbench.TestEnvironment"/>
        <class name="InputTests" line="56">
            <extends class="IIOTests"/>
            <declaration name="INPUT_FILE" type="int" line="58"/>
            <declaration name="INPUT_URL" type="int" line="59"/>
            <declaration name="INPUT_ARRAY" type="int" line="60"/>
            <declaration name="INPUT_FILECHANNEL" type="int" line="61"/>
            <declaration name="fileChannelIISSpi" type="ImageInputStreamSpi" line="63"/>
            <scope line="64">
                <scope line="65">
                    <declaration name="registry" type="IIORegistry" line="67"/>
                    <declaration name="spis" type="java.util.Iterator" line="68"/>
                    <scope line="70">
                        <declaration name="spi" type="ImageInputStreamSpi" line="71"/>
                        <declaration name="klass" type="String" line="72"/>
                        <scope line="73"/>
                    </scope>
                </scope>
            </scope>
            <declaration name="inputRoot" type="Group" line="81"/>
            <declaration name="inputOptRoot" type="Group" line="82"/>
            <declaration name="generalOptRoot" type="Group" line="84"/>
            <declaration name="generalSourceRoot" type="Group.EnableSet" line="85"/>
            <declaration name="sourceFileOpt" type="Option" line="86"/>
            <declaration name="sourceUrlOpt" type="Option" line="87"/>
            <declaration name="sourceByteArrayOpt" type="Option" line="88"/>
            <declaration name="imageioGeneralOptRoot" type="Group" line="90"/>
            <declaration name="sourceFileChannelOpt" type="Option" line="91"/>
            <declaration name="useCacheTog" type="Option" line="92"/>
            <method name="init" type="void" line="94">
                <comment line="99">
                    Options                    
                </comment>
                <comment line="102">
                    General Options                    
                </comment>
                <comment line="112">
                    Image I/O Options                    
                </comment>
                <scope line="110">
                    <scope line="114"/>
                </scope>
                <scope line="125"/>
            </method>
            <method name="InputTests" type="constructor" line="130">
                <params>
                    <param name="parent" type="Group"/>
                    <param name="nodeName" type="String"/>
                    <param name="description" type="String"/>
                </params>
            </method>
            <class name="InputType" line="134">
                <extends class="Option.Enable"/>
                <declaration name="type" type="int" line="135"/>
                <method name="InputType" type="constructor" line="137">
                    <params>
                        <param name="nodeName" type="String"/>
                        <param name="description" type="String"/>
                        <param name="type" type="int"/>
                    </params>
                </method>
                <method name="getType" type="int" line="142"/>
                <method name="getAbbreviatedModifierDescription" type="String" line="146">
                    <params>
                        <param name="value" type="Object"/>
                    </params>
                </method>
                <method name="getModifierValueName" type="String" line="150">
                    <params>
                        <param name="val" type="Object"/>
                    </params>
                </method>
            </class>
            <class name="Context" line="155">
                <declaration name="size" type="int" line="156"/>
                <declaration name="input" type="Object" line="157"/>
                <declaration name="inputType" type="int" line="158"/>
                <declaration name="origStream" type="InputStream" line="159"/>
                <method name="Context" type="constructor" line="161">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                        <param name="result" type="Result"/>
                    </params>
                    <scope line="163">
                        <scope line="164"/>
                    </scope>
                    <declaration name="t" type="InputType" line="169"/>
                </method>
                <method name="initInput" type="void" line="173">
                    <comment line="180">
                        REMIND: this approach will fail for GIF on pre-1.6 VM&apos;s
                                 (since earlier releases do not include a
                                 GIFImageWriter in the core JDK)                        
                    </comment>
                    <comment line="190">
                        inputType == INPUT_URL                        
                    </comment>
                    <scope line="177">
                        <scope line="178">
                            <declaration name="inputfile" type="File" line="182"/>
                            <scope line="185"/>
                            <scope line="187"/>
                            <scope line="189">
                                <scope line="190"/>
                                <scope line="192"/>
                            </scope>
                        </scope>
                        <scope line="196"/>
                    </scope>
                    <scope line="200">
                        <declaration name="out" type="ByteArrayOutputStream" line="201"/>
                        <scope line="202"/>
                        <scope line="205"/>
                    </scope>
                </method>
                <method name="initContents" type="void" line="214"/>
                <method name="initContents" type="void" line="215"/>
                <method name="createImageInputStream" type="ImageInputStream" line="217">
                    <declaration name="iis" type="ImageInputStream" line="218"/>
                    <declaration name="bis" type="BufferedInputStream" line="219"/>
                    <scope line="227"/>
                    <scope line="229"/>
                    <scope line="236"/>
                    <scope line="238"/>
                    <declaration name="fis" type="FileInputStream" line="243"/>
                    <declaration name="fc" type="java.nio.channels.FileChannel" line="245"/>
                </method>
                <method name="closeOriginalStream" type="void" line="256">
                    <scope line="257"/>
                </method>
                <method name="cleanup" type="void" line="263">
                    <params>
                        <param name="env" type="TestEnvironment"/>
                    </params>
                </method>
            </class>
        </class>
    </source>