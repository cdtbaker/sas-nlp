<?xml version="1.0" encoding="UTF-8"?>
    <source package="">
        <class name="Matrix3D" line="33">
            <javadoc line="33">
                A fairly conventional 3D matrix object that can transform sets of
                  3D points and perform a variety of manipulations on the transform                
            </javadoc>
            <declaration name="xx" type="float" line="37"/>
            <declaration name="yx" type="float" line="38"/>
            <declaration name="zx" type="float" line="39"/>
            <declaration name="pi" type="double" line="40"/>
            <javadoc line="42">
                Create a new unit matrix                
            </javadoc>
            <method name="Matrix3D" type="constructor" line="43"/>
            <javadoc line="49">
                Scale by f in all dimensions                
            </javadoc>
            <method name="scale" type="void" line="50">
                <params>
                    <param name="f" type="float"/>
                </params>
            </method>
            <javadoc line="65">
                Scale along each axis independently                
            </javadoc>
            <method name="scale" type="void" line="66">
                <params>
                    <param name="xf" type="float"/>
                    <param name="yf" type="float"/>
                    <param name="zf" type="float"/>
                </params>
            </method>
            <javadoc line="81">
                Translate the origin                
            </javadoc>
            <method name="translate" type="void" line="82">
                <params>
                    <param name="x" type="float"/>
                    <param name="y" type="float"/>
                    <param name="z" type="float"/>
                </params>
            </method>
            <javadoc line="88">
                rotate theta degrees about the y axis                
            </javadoc>
            <method name="yrot" type="void" line="89">
                <params>
                    <param name="theta" type="double"/>
                </params>
                <declaration name="ct" type="double" line="91"/>
                <declaration name="st" type="double" line="92"/>
                <declaration name="Nxx" type="float" line="94"/>
                <declaration name="Nxy" type="float" line="95"/>
                <declaration name="Nxz" type="float" line="96"/>
                <declaration name="Nxo" type="float" line="97"/>
                <declaration name="Nzx" type="float" line="99"/>
                <declaration name="Nzy" type="float" line="100"/>
                <declaration name="Nzz" type="float" line="101"/>
                <declaration name="Nzo" type="float" line="102"/>
            </method>
            <javadoc line="114">
                rotate theta degrees about the x axis                
            </javadoc>
            <method name="xrot" type="void" line="115">
                <params>
                    <param name="theta" type="double"/>
                </params>
                <declaration name="ct" type="double" line="117"/>
                <declaration name="st" type="double" line="118"/>
                <declaration name="Nyx" type="float" line="120"/>
                <declaration name="Nyy" type="float" line="121"/>
                <declaration name="Nyz" type="float" line="122"/>
                <declaration name="Nyo" type="float" line="123"/>
                <declaration name="Nzx" type="float" line="125"/>
                <declaration name="Nzy" type="float" line="126"/>
                <declaration name="Nzz" type="float" line="127"/>
                <declaration name="Nzo" type="float" line="128"/>
            </method>
            <javadoc line="140">
                rotate theta degrees about the z axis                
            </javadoc>
            <method name="zrot" type="void" line="141">
                <params>
                    <param name="theta" type="double"/>
                </params>
                <declaration name="ct" type="double" line="143"/>
                <declaration name="st" type="double" line="144"/>
                <declaration name="Nyx" type="float" line="146"/>
                <declaration name="Nyy" type="float" line="147"/>
                <declaration name="Nyz" type="float" line="148"/>
                <declaration name="Nyo" type="float" line="149"/>
                <declaration name="Nxx" type="float" line="151"/>
                <declaration name="Nxy" type="float" line="152"/>
                <declaration name="Nxz" type="float" line="153"/>
                <declaration name="Nxo" type="float" line="154"/>
            </method>
            <javadoc line="166">
                Multiply this matrix by a second: M = MR                
            </javadoc>
            <method name="mult" type="void" line="167">
                <params>
                    <param name="rhs" type="Matrix3D"/>
                </params>
                <declaration name="lxx" type="float" line="168"/>
                <declaration name="lxy" type="float" line="169"/>
                <declaration name="lxz" type="float" line="170"/>
                <declaration name="lxo" type="float" line="171"/>
                <declaration name="lyx" type="float" line="173"/>
                <declaration name="lyy" type="float" line="174"/>
                <declaration name="lyz" type="float" line="175"/>
                <declaration name="lyo" type="float" line="176"/>
                <declaration name="lzx" type="float" line="178"/>
                <declaration name="lzy" type="float" line="179"/>
                <declaration name="lzz" type="float" line="180"/>
                <declaration name="lzo" type="float" line="181"/>
            </method>
            <javadoc line="199">
                Reinitialize to the unit matrix                
            </javadoc>
            <method name="unit" type="void" line="200"/>
            <javadoc line="215">
                Transform nvert points from v into tv.  v contains the input
                  coordinates in floating point.  Three successive entries in
                  the array constitute a point.  tv ends up holding the transformed
                  points as integers; three successive entries per point                
            </javadoc>
            <method name="transform" type="void" line="219">
                <params>
                    <param name="v" type="float"/>
                    <param name="tv" type="int"/>
                    <param name="nvert" type="int"/>
                </params>
                <declaration name="lxx" type="float" line="220"/>
                <declaration name="lyx" type="float" line="221"/>
                <declaration name="lzx" type="float" line="222"/>
                <scope line="223">
                    <declaration name="x" type="float" line="224"/>
                    <declaration name="y" type="float" line="225"/>
                    <declaration name="z" type="float" line="226"/>
                </scope>
            </method>
            <method name="toString" type="String" line="234"/>
        </class>
    </source>