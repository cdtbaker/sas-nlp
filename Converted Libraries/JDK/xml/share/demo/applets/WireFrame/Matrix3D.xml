<?xml version="1.0" encoding="UTF-8"?>
    <source package="">
        <class name="Matrix3D" line="1">
            <javadoc line="1">
                A fairly conventional 3D matrix object that can transform sets of
                  3D points and perform a variety of manipulations on the transform                
            </javadoc>
            <declaration name="xx" type="float" line="6"/>
            <declaration name="yx" type="float" line="7"/>
            <declaration name="zx" type="float" line="8"/>
            <declaration name="pi" type="double" line="9"/>
            <javadoc line="10">
                Create a new unit matrix                
            </javadoc>
            <method name="Matrix3D" type="constructor" line="13"/>
            <javadoc line="18">
                Scale by f in all dimensions                
            </javadoc>
            <method name="scale" type="void" line="21">
                <params>
                    <param name="f" type="float"/>
                </params>
            </method>
            <javadoc line="35">
                Scale along each axis independently                
            </javadoc>
            <method name="scale" type="void" line="38">
                <params>
                    <param name="xf" type="float"/>
                    <param name="yf" type="float"/>
                    <param name="zf" type="float"/>
                </params>
            </method>
            <javadoc line="52">
                Translate the origin                
            </javadoc>
            <method name="translate" type="void" line="55">
                <params>
                    <param name="x" type="float"/>
                    <param name="y" type="float"/>
                    <param name="z" type="float"/>
                </params>
            </method>
            <javadoc line="60">
                rotate theta degrees about the y axis                
            </javadoc>
            <method name="yrot" type="void" line="63">
                <params>
                    <param name="theta" type="double"/>
                </params>
                <declaration name="ct" type="double" line="65"/>
                <declaration name="st" type="double" line="66"/>
                <declaration name="Nxx" type="float" line="67"/>
                <declaration name="Nxy" type="float" line="68"/>
                <declaration name="Nxz" type="float" line="69"/>
                <declaration name="Nxo" type="float" line="70"/>
                <declaration name="Nzx" type="float" line="71"/>
                <declaration name="Nzy" type="float" line="72"/>
                <declaration name="Nzz" type="float" line="73"/>
                <declaration name="Nzo" type="float" line="74"/>
            </method>
            <javadoc line="84">
                rotate theta degrees about the x axis                
            </javadoc>
            <method name="xrot" type="void" line="87">
                <params>
                    <param name="theta" type="double"/>
                </params>
                <declaration name="ct" type="double" line="89"/>
                <declaration name="st" type="double" line="90"/>
                <declaration name="Nyx" type="float" line="91"/>
                <declaration name="Nyy" type="float" line="92"/>
                <declaration name="Nyz" type="float" line="93"/>
                <declaration name="Nyo" type="float" line="94"/>
                <declaration name="Nzx" type="float" line="95"/>
                <declaration name="Nzy" type="float" line="96"/>
                <declaration name="Nzz" type="float" line="97"/>
                <declaration name="Nzo" type="float" line="98"/>
            </method>
            <javadoc line="108">
                rotate theta degrees about the z axis                
            </javadoc>
            <method name="zrot" type="void" line="111">
                <params>
                    <param name="theta" type="double"/>
                </params>
                <declaration name="ct" type="double" line="113"/>
                <declaration name="st" type="double" line="114"/>
                <declaration name="Nyx" type="float" line="115"/>
                <declaration name="Nyy" type="float" line="116"/>
                <declaration name="Nyz" type="float" line="117"/>
                <declaration name="Nyo" type="float" line="118"/>
                <declaration name="Nxx" type="float" line="119"/>
                <declaration name="Nxy" type="float" line="120"/>
                <declaration name="Nxz" type="float" line="121"/>
                <declaration name="Nxo" type="float" line="122"/>
            </method>
            <javadoc line="132">
                Multiply this matrix by a second: M = MR                
            </javadoc>
            <method name="mult" type="void" line="135">
                <params>
                    <param name="rhs" type="Matrix3D"/>
                </params>
                <declaration name="lxx" type="float" line="136"/>
                <declaration name="lxy" type="float" line="137"/>
                <declaration name="lxz" type="float" line="138"/>
                <declaration name="lxo" type="float" line="139"/>
                <declaration name="lyx" type="float" line="140"/>
                <declaration name="lyy" type="float" line="141"/>
                <declaration name="lyz" type="float" line="142"/>
                <declaration name="lyo" type="float" line="143"/>
                <declaration name="lzx" type="float" line="144"/>
                <declaration name="lzy" type="float" line="145"/>
                <declaration name="lzz" type="float" line="146"/>
                <declaration name="lzo" type="float" line="147"/>
            </method>
            <javadoc line="161">
                Reinitialize to the unit matrix                
            </javadoc>
            <method name="unit" type="void" line="164"/>
            <javadoc line="178">
                Transform nvert points from v into tv.  v contains the input
                  coordinates in floating point.  Three successive entries in
                  the array constitute a point.  tv ends up holding the transformed
                  points as integers; three successive entries per point                
            </javadoc>
            <method name="transform" type="void" line="184">
                <params>
                    <param name="v" type="float"/>
                    <param name="tv" type="int"/>
                    <param name="nvert" type="int"/>
                </params>
                <declaration name="lxx" type="float" line="185"/>
                <declaration name="lyx" type="float" line="186"/>
                <declaration name="lzx" type="float" line="187"/>
                <scope line="188">
                    <declaration name="x" type="float" line="189"/>
                    <declaration name="y" type="float" line="190"/>
                    <declaration name="z" type="float" line="191"/>
                </scope>
            </method>
            <method name="toString" type="String" line="197"/>
        </class>
    </source>