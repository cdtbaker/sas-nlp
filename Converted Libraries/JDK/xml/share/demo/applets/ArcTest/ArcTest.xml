<?xml version="1.0" encoding="UTF-8"?>
    <source package="">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.applet"/>
        <class name="ArcTest" line="38">
            <extends class="Applet"/>
            <comment line="47">
                The controls for marking and filling arcs                
            </comment>
            <comment line="48">
                The drawing area to display arcs                
            </comment>
            <comment line="208">
                Consume non-digit KeyTyped events
                 Note that processTextEvent kind of eliminates the need for this
                 function, but this is neater, since ideally, it would prevent
                 the text from appearing at all.  Sigh.  See bugid 4100317/4114565.                
            </comment>
            <comment line="236">
                Should consume TextEvents for non-integer Strings
                 Store away the text in the tf for every TextEvent
                 so we can revert to it on a TextEvent (paste, or
                 legal key in the wrong location) with bad text                
            </comment>
            <comment line="255">
                Returns true for Integers (zero and negative
                 values are allowed).
                 Note that the empty string is not allowed.                
            </comment>
            <javadoc line="38">
                An interactive test of the Graphics.drawArc and Graphics.fillArc
                  routines. Can be run either as a standalone application by
                  typing &quot;java ArcTest&quot; or as an applet in the AppletViewer.                
            </javadoc>
            <declaration name="controls" type="ArcControls" line="46"/>
            <declaration name="canvas" type="ArcCanvas" line="47"/>
            <method name="init" type="void" line="50"/>
            <method name="destroy" type="void" line="58"/>
            <method name="start" type="void" line="64"/>
            <method name="stop" type="void" line="69"/>
            <method name="processEvent" type="void" line="74">
                <params>
                    <param name="e" type="AWTEvent"/>
                </params>
                <scope line="75"/>
            </method>
            <method name="main" type="void" line="80">
                <params>
                    <param name="args" type="String"/>
                </params>
                <declaration name="f" type="Frame" line="81"/>
                <declaration name="arcTest" type="ArcTest" line="82"/>
            </method>
            <method name="getAppletInfo" type="String" line="93"/>
        </class>
        <class name="ArcCanvas" line="102">
            <extends class="Canvas"/>
            <comment line="47">
                The controls for marking and filling arcs                
            </comment>
            <comment line="48">
                The drawing area to display arcs                
            </comment>
            <comment line="208">
                Consume non-digit KeyTyped events
                 Note that processTextEvent kind of eliminates the need for this
                 function, but this is neater, since ideally, it would prevent
                 the text from appearing at all.  Sigh.  See bugid 4100317/4114565.                
            </comment>
            <comment line="236">
                Should consume TextEvents for non-integer Strings
                 Store away the text in the tf for every TextEvent
                 so we can revert to it on a TextEvent (paste, or
                 legal key in the wrong location) with bad text                
            </comment>
            <comment line="255">
                Returns true for Integers (zero and negative
                 values are allowed).
                 Note that the empty string is not allowed.                
            </comment>
            <declaration name="startAngle" type="int" line="105"/>
            <declaration name="extent" type="int" line="106"/>
            <declaration name="filled" type="boolean" line="107"/>
            <declaration name="font" type="Font" line="108"/>
            <method name="paint" type="void" line="111">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="r" type="Rectangle" line="112"/>
                <declaration name="hlines" type="int" line="113"/>
                <declaration name="vlines" type="int" line="114"/>
                <scope line="117"/>
                <scope line="120"/>
                <scope line="125"/>
                <scope line="127"/>
                <declaration name="sx" type="int" line="137"/>
                <declaration name="sy" type="int" line="138"/>
            </method>
            <method name="redraw" type="void" line="143">
                <params>
                    <param name="filled" type="boolean"/>
                    <param name="start" type="int"/>
                    <param name="extent" type="int"/>
                </params>
            </method>
        </class>
        <class name="ArcControls" line="152">
            <extends class="Panel"/>
            <comment line="47">
                The controls for marking and filling arcs                
            </comment>
            <comment line="48">
                The drawing area to display arcs                
            </comment>
            <comment line="208">
                Consume non-digit KeyTyped events
                 Note that processTextEvent kind of eliminates the need for this
                 function, but this is neater, since ideally, it would prevent
                 the text from appearing at all.  Sigh.  See bugid 4100317/4114565.                
            </comment>
            <comment line="236">
                Should consume TextEvents for non-integer Strings
                 Store away the text in the tf for every TextEvent
                 so we can revert to it on a TextEvent (paste, or
                 legal key in the wrong location) with bad text                
            </comment>
            <comment line="255">
                Returns true for Integers (zero and negative
                 values are allowed).
                 Note that the empty string is not allowed.                
            </comment>
            <implements interface="ActionListener"/>
            <declaration name="startTF" type="TextField" line="156"/>
            <declaration name="extentTF" type="TextField" line="157"/>
            <declaration name="canvas" type="ArcCanvas" line="158"/>
            <method name="ArcControls" type="constructor" line="161">
                <params>
                    <param name="canvas" type="ArcCanvas"/>
                </params>
                <declaration name="b" type="Button" line="162"/>
            </method>
            <method name="actionPerformed" type="void" line="176">
                <params>
                    <param name="ev" type="ActionEvent"/>
                </params>
                <declaration name="label" type="String" line="177"/>
                <declaration name="start" type="int" line="179"/>
                <scope line="180"/>
                <scope line="182"/>
                <scope line="185"/>
                <scope line="187"/>
            </method>
        </class>
        <class name="IntegerTextField" line="196">
            <extends class="TextField"/>
            <comment line="47">
                The controls for marking and filling arcs                
            </comment>
            <comment line="48">
                The drawing area to display arcs                
            </comment>
            <comment line="208">
                Consume non-digit KeyTyped events
                 Note that processTextEvent kind of eliminates the need for this
                 function, but this is neater, since ideally, it would prevent
                 the text from appearing at all.  Sigh.  See bugid 4100317/4114565.                
            </comment>
            <comment line="236">
                Should consume TextEvents for non-integer Strings
                 Store away the text in the tf for every TextEvent
                 so we can revert to it on a TextEvent (paste, or
                 legal key in the wrong location) with bad text                
            </comment>
            <comment line="255">
                Returns true for Integers (zero and negative
                 values are allowed).
                 Note that the empty string is not allowed.                
            </comment>
            <declaration name="oldText" type="String" line="199"/>
            <method name="IntegerTextField" type="constructor" line="201">
                <params>
                    <param name="text" type="String"/>
                    <param name="columns" type="int"/>
                </params>
            </method>
            <method name="processEvent" type="void" line="213">
                <params>
                    <param name="evt" type="AWTEvent"/>
                </params>
                <comment line="224">
                    Digits, backspace, and delete are okay
                     Note that the minus sign is allowed, but not the decimal                    
                </comment>
                <declaration name="id" type="int" line="214"/>
                <scope line="215"/>
                <declaration name="kevt" type="KeyEvent" line="220"/>
                <declaration name="c" type="char" line="221"/>
                <scope line="226"/>
            </method>
            <method name="processTextEvent" type="void" line="241">
                <params>
                    <param name="te" type="TextEvent"/>
                </params>
                <comment line="243">
                    The empty string is okay, too                    
                </comment>
                <declaration name="newText" type="String" line="243"/>
                <scope line="244"/>
            </method>
            <method name="textIsInteger" type="boolean" line="258">
                <params>
                    <param name="textToCheck" type="String"/>
                </params>
                <scope line="260"/>
                <scope line="263"/>
            </method>
        </class>
    </source>