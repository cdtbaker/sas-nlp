<?xml version="1.0" encoding="UTF-8"?>
    <source package="">
        <import package="java.applet.Applet"/>
        <import package="java.awt.AWTEvent"/>
        <import package="java.awt.BorderLayout"/>
        <import package="java.awt.Button"/>
        <import package="java.awt.Canvas"/>
        <import package="java.awt.Choice"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.FlowLayout"/>
        <import package="java.awt.FontMetrics"/>
        <import package="java.awt.Frame"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Image"/>
        <import package="java.awt.Label"/>
        <import package="java.awt.LayoutManager"/>
        <import package="java.awt.Panel"/>
        <import package="java.awt.TextField"/>
        <import package="java.awt.Toolkit"/>
        <import package="java.awt.event.ActionEvent"/>
        <import package="java.awt.event.ActionListener"/>
        <import package="java.awt.event.KeyEvent"/>
        <import package="java.awt.event.TextEvent"/>
        <import package="java.awt.image.ColorModel"/>
        <import package="java.awt.image.MemoryImageSource"/>
        <class name="DitherTest" line="65">
            <extends class="Applet"/>
            <comment line="362">
                                
            </comment>
            <comment line="368">
                                
            </comment>
            <comment line="383">
                                
            </comment>
            <comment line="393">
                                
            </comment>
            <comment line="414">
                Consume non-digit KeyTyped events
                 Note that processTextEvent kind of eliminates the need for this
                 function, but this is neater, since ideally, it would prevent
                 the text from appearing at all.  Sigh.  See bugid 4100317/4114565.                
            </comment>
            <comment line="441">
                Should consume TextEvents for non-integer Strings
                 Store away the text in the tf for every TextEvent
                 so we can revert to it on a TextEvent (paste, or
                 legal key in the wrong location) with bad text
                
                 Note: it would be easy to extend this to an eight-bit
                 TextField (range 0-255), but I&apos;ll leave it as-is.                
            </comment>
            <comment line="463">
                Returns true for Cardinal (non-negative) numbers
                 Note that the empty string is not allowed                
            </comment>
            <implements interface="Runnable"/>
            <declaration name="runner" type="Thread" line="68"/>
            <declaration name="XControls" type="DitherControls" line="69"/>
            <declaration name="YControls" type="DitherControls" line="70"/>
            <declaration name="canvas" type="DitherCanvas" line="71"/>
            <method name="main" type="void" line="73">
                <params>
                    <param name="args" type="String"/>
                </params>
                <declaration name="f" type="Frame" line="74"/>
                <declaration name="ditherTest" type="DitherTest" line="75"/>
            </method>
            <method name="init" type="void" line="84">
                <comment line="94">
                    only occurs if run as application                    
                </comment>
                <declaration name="xspec" type="String" line="85"/>
                <declaration name="xvals" type="int" line="86"/>
                <declaration name="yvals" type="int" line="87"/>
                <scope line="89"/>
                <scope line="92"/>
                <scope line="96"/>
                <scope line="99"/>
                <declaration name="xmethod" type="DitherMethod" line="102"/>
                <declaration name="ymethod" type="DitherMethod" line="103"/>
            </method>
            <method name="colorMethod" type="DitherMethod" line="116">
                <params>
                    <param name="s" type="String"/>
                    <param name="vals" type="int"/>
                </params>
                <declaration name="method" type="DitherMethod" line="117"/>
                <scope line="118"/>
                <declaration name="lower" type="String" line="121"/>
                <scope line="123">
                    <scope line="124"/>
                </scope>
                <scope line="129"/>
                <declaration name="begval" type="int" line="134"/>
                <declaration name="endval" type="int" line="135"/>
                <scope line="136">
                    <declaration name="dash" type="int" line="137"/>
                    <scope line="138"/>
                    <scope line="140"/>
                </scope>
                <scope line="144"/>
                <scope line="147"/>
                <scope line="149"/>
                <scope line="153"/>
                <scope line="155"/>
            </method>
            <javadoc line="164">
                Calculates and returns the image.  Halts the calculation and returns
                  null if the Applet is stopped during the calculation.                
            </javadoc>
            <method name="calculateImage" type="Image" line="168">
                <comment line="179">
                    temporarily holds R,G,B,A information                    
                </comment>
                <comment line="196">
                    Poll once per row to see if we&apos;ve been told to stop.                    
                </comment>
                <declaration name="me" type="Thread" line="169"/>
                <declaration name="width" type="int" line="171"/>
                <declaration name="height" type="int" line="172"/>
                <declaration name="xvals" type="int" line="173"/>
                <declaration name="yvals" type="int" line="174"/>
                <declaration name="xmethod" type="int" line="175"/>
                <declaration name="ymethod" type="int" line="176"/>
                <declaration name="pixels" type="int" line="177"/>
                <declaration name="c" type="int" line="178"/>
                <declaration name="index" type="int" line="179"/>
                <scope line="180">
                    <scope line="181">
                        <scope line="184"/>
                        <scope line="187"/>
                    </scope>
                    <scope line="196"/>
                </scope>
            </method>
            <method name="applyMethod" type="void" line="205">
                <params>
                    <param name="c" type="int"/>
                    <param name="methodIndex" type="int"/>
                    <param name="step" type="int"/>
                    <param name="total" type="int"/>
                    <param name="vals" type="int"/>
                </params>
                <declaration name="method" type="DitherMethod" line="206"/>
                <scope line="207"/>
                <declaration name="val" type="int" line="210"/>
                <declaration name="max" type="int" line="227"/>
                <declaration name="min" type="int" line="228"/>
                <scope line="229"/>
                <scope line="232"/>
                <scope line="235"/>
            </method>
            <method name="start" type="void" line="243"/>
            <method name="run" type="void" line="249">
                <comment line="251">
                    Wipe previous image                    
                </comment>
                <declaration name="img" type="Image" line="251"/>
                <scope line="252"/>
            </method>
            <method name="stop" type="void" line="258"/>
            <method name="destroy" type="void" line="263"/>
            <method name="getAppletInfo" type="String" line="270"/>
            <method name="getParameterInfo" type="String[][]" line="275">
                <declaration name="info" type="String[][]" line="276"/>
            </method>
        </class>
        <class name="DitherCanvas" line="287">
            <extends class="Canvas"/>
            <comment line="362">
                                
            </comment>
            <comment line="368">
                                
            </comment>
            <comment line="383">
                                
            </comment>
            <comment line="393">
                                
            </comment>
            <comment line="414">
                Consume non-digit KeyTyped events
                 Note that processTextEvent kind of eliminates the need for this
                 function, but this is neater, since ideally, it would prevent
                 the text from appearing at all.  Sigh.  See bugid 4100317/4114565.                
            </comment>
            <comment line="441">
                Should consume TextEvents for non-integer Strings
                 Store away the text in the tf for every TextEvent
                 so we can revert to it on a TextEvent (paste, or
                 legal key in the wrong location) with bad text
                
                 Note: it would be easy to extend this to an eight-bit
                 TextField (range 0-255), but I&apos;ll leave it as-is.                
            </comment>
            <comment line="463">
                Returns true for Cardinal (non-negative) numbers
                 Note that the empty string is not allowed                
            </comment>
            <declaration name="img" type="Image" line="290"/>
            <declaration name="calcString" type="String" line="291"/>
            <method name="paint" type="void" line="294">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="w" type="int" line="295"/>
                <declaration name="h" type="int" line="296"/>
                <scope line="297">
                    <declaration name="fm" type="FontMetrics" line="300"/>
                    <declaration name="x" type="int" line="301"/>
                    <declaration name="y" type="int" line="302"/>
                </scope>
                <scope line="304"/>
            </method>
            <method name="update" type="void" line="310">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
            </method>
            <method name="getMinimumSize" type="Dimension" line="315"/>
            <method name="getPreferredSize" type="Dimension" line="320"/>
            <method name="getImage" type="Image" line="324"/>
            <method name="setImage" type="void" line="328">
                <params>
                    <param name="img" type="Image"/>
                </params>
            </method>
        </class>
        <class name="DitherControls" line="335">
            <extends class="Panel"/>
            <comment line="362">
                                
            </comment>
            <comment line="368">
                                
            </comment>
            <comment line="383">
                                
            </comment>
            <comment line="393">
                                
            </comment>
            <comment line="414">
                Consume non-digit KeyTyped events
                 Note that processTextEvent kind of eliminates the need for this
                 function, but this is neater, since ideally, it would prevent
                 the text from appearing at all.  Sigh.  See bugid 4100317/4114565.                
            </comment>
            <comment line="441">
                Should consume TextEvents for non-integer Strings
                 Store away the text in the tf for every TextEvent
                 so we can revert to it on a TextEvent (paste, or
                 legal key in the wrong location) with bad text
                
                 Note: it would be easy to extend this to an eight-bit
                 TextField (range 0-255), but I&apos;ll leave it as-is.                
            </comment>
            <comment line="463">
                Returns true for Cardinal (non-negative) numbers
                 Note that the empty string is not allowed                
            </comment>
            <implements interface="ActionListener"/>
            <declaration name="start" type="CardinalTextField" line="338"/>
            <declaration name="end" type="CardinalTextField" line="339"/>
            <declaration name="button" type="Button" line="340"/>
            <declaration name="choice" type="Choice" line="341"/>
            <declaration name="applet" type="DitherTest" line="342"/>
            <declaration name="dcLayout" type="LayoutManager" line="343"/>
            <method name="DitherControls" type="constructor" line="347">
                <params>
                    <param name="app" type="DitherTest"/>
                    <param name="s" type="int"/>
                    <param name="e" type="int"/>
                    <param name="type" type="DitherMethod"/>
                    <param name="vertical" type="boolean"/>
                </params>
                <scope line="352"/>
            </method>
            <method name="addRenderButton" type="void" line="362"/>
            <method name="getParams" type="int" line="368">
                <params>
                    <param name="vals" type="int"/>
                </params>
                <scope line="369"/>
                <scope line="371"/>
                <scope line="374"/>
                <scope line="376"/>
            </method>
            <method name="scale" type="int" line="383">
                <params>
                    <param name="number" type="int"/>
                </params>
                <scope line="384"/>
                <scope line="386"/>
            </method>
            <method name="actionPerformed" type="void" line="394">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <scope line="395"/>
            </method>
        </class>
        <class name="CardinalTextField" line="402">
            <extends class="TextField"/>
            <comment line="362">
                                
            </comment>
            <comment line="368">
                                
            </comment>
            <comment line="383">
                                
            </comment>
            <comment line="393">
                                
            </comment>
            <comment line="414">
                Consume non-digit KeyTyped events
                 Note that processTextEvent kind of eliminates the need for this
                 function, but this is neater, since ideally, it would prevent
                 the text from appearing at all.  Sigh.  See bugid 4100317/4114565.                
            </comment>
            <comment line="441">
                Should consume TextEvents for non-integer Strings
                 Store away the text in the tf for every TextEvent
                 so we can revert to it on a TextEvent (paste, or
                 legal key in the wrong location) with bad text
                
                 Note: it would be easy to extend this to an eight-bit
                 TextField (range 0-255), but I&apos;ll leave it as-is.                
            </comment>
            <comment line="463">
                Returns true for Cardinal (non-negative) numbers
                 Note that the empty string is not allowed                
            </comment>
            <declaration name="oldText" type="String" line="405"/>
            <method name="CardinalTextField" type="constructor" line="407">
                <params>
                    <param name="text" type="String"/>
                    <param name="columns" type="int"/>
                </params>
            </method>
            <method name="processEvent" type="void" line="419">
                <params>
                    <param name="evt" type="AWTEvent"/>
                </params>
                <comment line="430">
                    Digits, backspace, and delete are okay
                     Note that the minus sign is not allowed (neither is decimal)                    
                </comment>
                <declaration name="id" type="int" line="420"/>
                <scope line="421"/>
                <declaration name="kevt" type="KeyEvent" line="426"/>
                <declaration name="c" type="char" line="427"/>
                <scope line="431"/>
            </method>
            <method name="processTextEvent" type="void" line="449">
                <params>
                    <param name="te" type="TextEvent"/>
                </params>
                <comment line="451">
                    The empty string is okay, too                    
                </comment>
                <declaration name="newText" type="String" line="451"/>
                <scope line="452"/>
            </method>
            <method name="textIsCardinal" type="boolean" line="464">
                <params>
                    <param name="textToCheck" type="String"/>
                </params>
                <scope line="465"/>
                <scope line="467"/>
            </method>
        </class>
    </source>