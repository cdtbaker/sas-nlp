<?xml version="1.0" encoding="UTF-8"?>
    <source package="">
        <import package="java.awt.Graphics"/>
        <import package="java.util.Stack"/>
        <import package="java.awt.event"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <class name="CLSFractal" line="40">
            <extends class="java.applet.Applet"/>
            <comment line="149">
                                
            </comment>
            <implements interface="Runnable"/>
            <implements interface="MouseListener"/>
            <javadoc line="40">
                A (not-yet) Context sensitive L-System Fractal applet class.
                  The rules for the Context L-system are read from the java.applet.Applet&apos;s
                  attributes and then the system is iteratively applied for the
                  given number of levels, possibly drawing each generation as it
                  is generated.  Note that the ContextLSystem class does not yet
                  handle the lContext and rContext attributes, although this
                  class is already designed to parse the &apos;[&apos; and &apos;]&apos; characters
                  typically used in Context sensitive L-Systems.                
                <author>
                    Jim Graham                    
                </author>
            </javadoc>
            <declaration name="kicker" type="Thread" line="58"/>
            <declaration name="cls" type="ContextLSystem" line="59"/>
            <declaration name="fractLevel" type="int" line="60"/>
            <declaration name="repaintDelay" type="int" line="61"/>
            <declaration name="incrementalUpdates" type="boolean" line="62"/>
            <declaration name="startAngle" type="float" line="63"/>
            <declaration name="rotAngle" type="float" line="64"/>
            <declaration name="Xmin" type="float" line="65"/>
            <declaration name="Xmax" type="float" line="66"/>
            <declaration name="Ymin" type="float" line="67"/>
            <declaration name="Ymax" type="float" line="68"/>
            <declaration name="border" type="int" line="69"/>
            <declaration name="normalizescaling" type="boolean" line="70"/>
            <method name="init" type="void" line="73">
                <declaration name="s" type="String" line="74"/>
                <scope line="77"/>
                <scope line="81"/>
                <scope line="85"/>
                <scope line="89"/>
                <scope line="93"/>
                <scope line="98"/>
                <scope line="102"/>
            </method>
            <method name="destroy" type="void" line="109"/>
            <method name="run" type="void" line="114">
                <declaration name="me" type="Thread" line="115"/>
                <declaration name="needsRepaint" type="boolean" line="116"/>
                <scope line="117">
                    <scope line="119">
                        <scope line="121"/>
                        <scope line="123"/>
                    </scope>
                    <scope line="125"/>
                </scope>
                <scope line="129">
                    <scope line="131"/>
                </scope>
            </method>
            <method name="start" type="void" line="138"/>
            <method name="stop" type="void" line="144"/>
            <method name="mouseClicked" type="void" line="150">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <method name="mousePressed" type="void" line="154">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <method name="mouseReleased" type="void" line="158">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <method name="mouseEntered" type="void" line="166">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <method name="mouseExited" type="void" line="170">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <declaration name="savedPath" type="String" line="172"/>
            <method name="paint" type="void" line="175">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="fractalPath" type="String" line="176"/>
                <scope line="177"/>
                <scope line="181"/>
                <scope line="186"/>
            </method>
            <method name="render" type="void" line="193">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="path" type="String"/>
                </params>
                <declaration name="turtleStack" type="Stack&lt;CLSTurtle&gt;" line="194"/>
                <declaration name="turtle" type="CLSTurtle" line="195"/>
                <scope line="197"/>
                <scope line="203">
                    <declaration name="frwidth" type="float" line="204"/>
                    <scope line="205"/>
                    <declaration name="frheight" type="float" line="208"/>
                    <scope line="209"/>
                    <declaration name="xscale" type="float" line="212"/>
                    <declaration name="yscale" type="float" line="213"/>
                    <declaration name="xoff" type="int" line="214"/>
                    <declaration name="yoff" type="int" line="215"/>
                    <scope line="216">
                        <scope line="217"/>
                        <scope line="221"/>
                    </scope>
                </scope>
                <scope line="231">
                    <scope line="250"/>
                    <scope line="254"/>
                </scope>
            </method>
            <method name="includePt" type="void" line="264">
                <params>
                    <param name="x" type="float"/>
                    <param name="y" type="float"/>
                </params>
                <scope line="265"/>
                <scope line="268"/>
                <scope line="271"/>
                <scope line="274"/>
            </method>
            <method name="getAppletInfo" type="String" line="280"/>
            <method name="getParameterInfo" type="String[][]" line="290">
                <declaration name="info" type="String[][]" line="291"/>
            </method>
        </class>
        <class name="CLSTurtle" line="315">
            <comment line="149">
                                
            </comment>
            <javadoc line="315">
                A Logo turtle class designed to support Context sensitive L-Systems.
                  This turtle performs a few basic maneuvers needed to support the
                  set of characters used in Context sensitive L-Systems &quot;+-fF[]&quot;.                
                <author>
                    Jim Graham                    
                </author>
            </javadoc>
            <declaration name="angle" type="float" line="325"/>
            <declaration name="X" type="float" line="326"/>
            <declaration name="Y" type="float" line="327"/>
            <declaration name="scaleX" type="float" line="328"/>
            <declaration name="scaleY" type="float" line="329"/>
            <declaration name="xoff" type="int" line="330"/>
            <declaration name="yoff" type="int" line="331"/>
            <method name="CLSTurtle" type="constructor" line="334">
                <params>
                    <param name="ang" type="float"/>
                    <param name="x" type="float"/>
                    <param name="y" type="float"/>
                    <param name="xorg" type="int"/>
                    <param name="yorg" type="int"/>
                    <param name="sx" type="float"/>
                    <param name="sy" type="float"/>
                </params>
            </method>
            <method name="CLSTurtle" type="constructor" line="344">
                <params>
                    <param name="turtle" type="CLSTurtle"/>
                </params>
            </method>
            <method name="rotate" type="void" line="354">
                <params>
                    <param name="theta" type="float"/>
                </params>
            </method>
            <method name="jump" type="void" line="358"/>
            <method name="draw" type="void" line="363">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="x" type="float" line="364"/>
                <declaration name="y" type="float" line="365"/>
            </method>
        </class>
        <class name="ContextLSystem" line="374">
            <comment line="149">
                                
            </comment>
            <javadoc line="374">
                A (non-)Context sensitive L-System class.
                  This class initializes the rules for Context sensitive L-Systems
                  (pred, succ, lContext, rContext) from the given java.applet.Applet&apos;s attributes.
                  The generate() method, however, does not (yet) apply the lContext
                  and rContext parts of the rules.                
                <author>
                    Jim Graham                    
                </author>
            </javadoc>
            <declaration name="axiom" type="String" line="386"/>
            <declaration name="rules" type="List&lt;CLSRule&gt;" line="387"/>
            <declaration name="level" type="int" line="388"/>
            <method name="ContextLSystem" type="constructor" line="390">
                <params>
                    <param name="app" type="java.applet.Applet"/>
                </params>
                <declaration name="num" type="int" line="392"/>
                <scope line="393">
                    <declaration name="pred" type="String" line="394"/>
                    <declaration name="succ" type="String" line="395"/>
                    <scope line="396"/>
                </scope>
            </method>
            <method name="getLevel" type="int" line="408"/>
            <declaration name="currentPath" type="StringBuffer" line="411"/>
            <method name="getPath" type="String" line="413"/>
            <method name="setPath" type="void" line="417">
                <params>
                    <param name="path" type="StringBuffer"/>
                </params>
            </method>
            <method name="generate" type="void" line="422">
                <declaration name="newPath" type="StringBuffer" line="423"/>
                <declaration name="pos" type="int" line="424"/>
                <scope line="425">
                    <declaration name="rule" type="CLSRule" line="426"/>
                    <scope line="427"/>
                    <scope line="430"/>
                </scope>
            </method>
            <method name="findRule" type="CLSRule" line="438">
                <params>
                    <param name="pos" type="int"/>
                </params>
                <scope line="439">
                    <declaration name="rule" type="CLSRule" line="440"/>
                    <scope line="441"/>
                </scope>
            </method>
        </class>
        <class name="CLSRule" line="450">
            <comment line="149">
                                
            </comment>
            <javadoc line="450">
                A Context sensitive L-System production rule.
                  This class encapsulates a production rule for a Context sensitive
                  L-System (pred, succ, lContext, rContext).
                  The matches() method, however, does not (yet) verify the lContext
                  and rContext parts of the rule.                
                <author>
                    Jim Graham                    
                </author>
            </javadoc>
            <declaration name="pred" type="String" line="462"/>
            <declaration name="succ" type="String" line="463"/>
            <declaration name="lContext" type="String" line="464"/>
            <declaration name="rContext" type="String" line="465"/>
            <method name="CLSRule" type="constructor" line="467">
                <params>
                    <param name="p" type="String"/>
                    <param name="d" type="String"/>
                    <param name="l" type="String"/>
                    <param name="r" type="String"/>
                </params>
            </method>
            <method name="matches" type="boolean" line="474">
                <params>
                    <param name="sb" type="StringBuffer"/>
                    <param name="pos" type="int"/>
                </params>
                <scope line="475"/>
                <declaration name="cb" type="char" line="478"/>
            </method>
        </class>
    </source>