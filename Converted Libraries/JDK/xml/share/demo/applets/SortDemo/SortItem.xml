<?xml version="1.0" encoding="UTF-8"?>
    <source package="">
        <import package="java.awt.Color"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.event.MouseEvent"/>
        <import package="java.awt.event.MouseListener"/>
        <class name="SortItem" line="6">
            <extends class="java.applet.Applet"/>
            <implements interface="Runnable"/>
            <implements interface="MouseListener"/>
            <javadoc line="6">
                A simple applet class to demonstrate a sort algorithm.
                  You can specify a sorting algorithm using the &quot;alg&quot;
                  attribute. When you click on the applet, a thread is
                  forked which animates the sorting algorithm.                
                <author>
                    James Gosling                    
                </author>
            </javadoc>
            <declaration name="kicker" type="Thread" line="14"/>
            <javadoc line="14">
                The thread that is sorting (or null).                
            </javadoc>
            <declaration name="arr" type="int" line="18"/>
            <javadoc line="18">
                The array that is being sorted.                
            </javadoc>
            <declaration name="h1" type="int" line="22"/>
            <javadoc line="22">
                The high water mark.                
            </javadoc>
            <declaration name="h2" type="int" line="26"/>
            <javadoc line="26">
                The low water mark.                
            </javadoc>
            <declaration name="algName" type="String" line="30"/>
            <javadoc line="30">
                The name of the algorithm.                
            </javadoc>
            <declaration name="algorithm" type="SortAlgorithm" line="34"/>
            <javadoc line="34">
                The sorting algorithm (or null).                
            </javadoc>
            <declaration name="initialSize" type="Dimension" line="38"/>
            <javadoc line="39">
                Fill the array with random numbers from 0..n-1.                
            </javadoc>
            <method name="scramble" type="void" line="42">
                <declaration name="a" type="int" line="44"/>
                <declaration name="f" type="double" line="45"/>
                <scope line="46"/>
                <scope line="49">
                    <declaration name="j" type="int" line="50"/>
                    <declaration name="t" type="int" line="51"/>
                </scope>
            </method>
            <javadoc line="57">
                Pause a while.                
                <see>
                    SortAlgorithm                    
                </see>
            </javadoc>
            <method name="pause" type="void" line="61"/>
            <javadoc line="64">
                Pause a while, and draw the high water mark.                
                <see>
                    SortAlgorithm                    
                </see>
            </javadoc>
            <method name="pause" type="void" line="68">
                <params>
                    <param name="H1" type="int"/>
                </params>
            </method>
            <javadoc line="71">
                Pause a while, and draw the low&amp;high water marks.                
                <see>
                    SortAlgorithm                    
                </see>
            </javadoc>
            <method name="pause" type="void" line="75">
                <params>
                    <param name="H1" type="int"/>
                    <param name="H2" type="int"/>
                </params>
                <scope line="78"/>
                <scope line="81"/>
                <scope line="84"/>
            </method>
            <javadoc line="87">
                Initialize the applet.                
            </javadoc>
            <method name="init" type="void" line="90">
                <declaration name="at" type="String" line="91"/>
                <scope line="92"/>
            </method>
            <method name="start" type="void" line="100"/>
            <javadoc line="106">
                Deallocate resources of applet.                
            </javadoc>
            <method name="destroy" type="void" line="109"/>
            <javadoc line="112">
                Paint the array of numbers as a list
                  of horizontal lines of varying lengths.                
            </javadoc>
            <method name="paint" type="void" line="116">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="a" type="int" line="117"/>
                <declaration name="y" type="int" line="118"/>
                <declaration name="deltaY" type="int" line="119"/>
                <declaration name="currentSize" type="Dimension" line="120"/>
                <declaration name="currentHeight" type="int" line="121"/>
                <declaration name="currentWidth" type="int" line="122"/>
                <scope line="123">
                    <scope line="127"/>
                    <scope line="131"/>
                </scope>
                <scope line="137"/>
                <scope line="142"/>
                <scope line="145"/>
                <scope line="150"/>
            </method>
            <javadoc line="156">
                Update without erasing the background.                
            </javadoc>
            <method name="update" type="void" line="159">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
            </method>
            <javadoc line="162">
                Run the sorting algorithm. This method is
                  called by class Thread once the sorting algorithm
                  is started.                
                <see>
                    java.lang.Thread#run                    
                </see>
                <see>
                    SortItem#mouseUp                    
                </see>
            </javadoc>
            <method name="run" type="void" line="169">
                <scope line="170">
                    <scope line="171"/>
                </scope>
                <scope line="178"/>
            </method>
            <javadoc line="181">
                Stop the applet. Kill any sorting algorithm that
                  is still sorting.                
            </javadoc>
            <method name="stop" type="void" line="185">
                <scope line="186">
                    <scope line="187"/>
                    <scope line="190"/>
                </scope>
            </method>
            <javadoc line="195">
                For a Thread to actually do the sorting. This routine makes
                  sure we do not simultaneously start several sorts if the user
                  repeatedly clicks on the sort item.  It needs to be
                  synchronized with the stop() method because they both
                  manipulate the common kicker variable.                
            </javadoc>
            <method name="startSort" type="void" line="202">
                <scope line="203"/>
            </method>
            <method name="mouseClicked" type="void" line="208">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <method name="mousePressed" type="void" line="211">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <javadoc line="213">
                The user clicked in the applet. Start the clock!                
            </javadoc>
            <method name="mouseReleased" type="void" line="216">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <method name="mouseEntered" type="void" line="220">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <method name="mouseExited" type="void" line="222">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <method name="getAppletInfo" type="String" line="224"/>
            <method name="getParameterInfo" type="String[][]" line="227">
                <declaration name="info" type="String[][]" line="228"/>
            </method>
        </class>
    </source>