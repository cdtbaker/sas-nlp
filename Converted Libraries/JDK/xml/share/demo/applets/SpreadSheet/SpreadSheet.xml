<?xml version="1.0" encoding="UTF-8"?>
    <source package="">
        <import package="java.applet.Applet"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.io"/>
        <import package="java.net"/>
        <class name="SpreadSheet" line="40">
            <extends class="Applet"/>
            <comment line="293">
                1.1 event handling                
            </comment>
            <implements interface="MouseListener"/>
            <implements interface="KeyListener"/>
            <declaration name="title" type="String" line="43"/>
            <declaration name="titleFont" type="Font" line="44"/>
            <declaration name="cellColor" type="Color" line="45"/>
            <declaration name="inputColor" type="Color" line="46"/>
            <declaration name="cellWidth" type="int" line="47"/>
            <declaration name="cellHeight" type="int" line="48"/>
            <declaration name="titleHeight" type="int" line="49"/>
            <declaration name="rowLabelWidth" type="int" line="50"/>
            <declaration name="inputFont" type="Font" line="51"/>
            <declaration name="isStopped" type="boolean" line="52"/>
            <declaration name="fullUpdate" type="boolean" line="53"/>
            <declaration name="rows" type="int" line="54"/>
            <declaration name="columns" type="int" line="55"/>
            <declaration name="currentKey" type="int" line="56"/>
            <declaration name="selectedRow" type="int" line="57"/>
            <declaration name="selectedColumn" type="int" line="58"/>
            <declaration name="inputArea" type="SpreadSheetInput" line="59"/>
            <declaration name="cells" type="Cell" line="60"/>
            <declaration name="current" type="Cell" line="61"/>
            <method name="init" type="void" line="64">
                <declaration name="rs" type="String" line="65"/>
                <scope line="72"/>
                <scope line="76"/>
                <scope line="78"/>
                <scope line="82"/>
                <scope line="84"/>
                <declaration name="l" type="char" line="88"/>
                <scope line="89">
                    <scope line="90">
                        <scope line="100"/>
                    </scope>
                </scope>
                <declaration name="d" type="Dimension" line="106"/>
            </method>
            <method name="setCurrentValue" type="void" line="115">
                <params>
                    <param name="val" type="float"/>
                </params>
                <scope line="116"/>
            </method>
            <method name="stop" type="void" line="124"/>
            <method name="start" type="void" line="129"/>
            <method name="destroy" type="void" line="134">
                <scope line="135">
                    <scope line="136">
                        <scope line="137"/>
                    </scope>
                </scope>
            </method>
            <method name="setCurrentValue" type="void" line="144">
                <params>
                    <param name="type" type="int"/>
                    <param name="val" type="String"/>
                </params>
                <scope line="145"/>
            </method>
            <method name="update" type="void" line="153">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <scope line="154">
                    <declaration name="cx" type="int" line="155"/>
                    <scope line="158">
                        <scope line="159">
                            <scope line="160"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="167"/>
            </method>
            <method name="recalculate" type="void" line="173">
                <comment line="176">
                    System.out.println(&quot;SpreadSheet.recalculate&quot;);                    
                </comment>
                <declaration name="i" type="int" line="174"/>
                <scope line="177">
                    <scope line="178">
                        <scope line="179"/>
                    </scope>
                </scope>
            </method>
            <method name="evaluateFormula" type="float" line="189">
                <params>
                    <param name="n" type="Node"/>
                </params>
                <comment line="192">
                    System.out.println(&quot;evaluateFormula:&quot;);                    
                </comment>
                <comment line="193">
                    n.print(3);                    
                </comment>
                <comment line="195">
                    System.out.println(&quot;Null node&quot;);                    
                </comment>
                <comment line="217">
                    System.out.println(&quot;=&gt;&quot; + n.value);                    
                </comment>
                <comment line="221">
                    System.out.println(&quot;NULL at 193&quot;);                    
                </comment>
                <comment line="223">
                    System.out.println(&quot;=&gt;&quot; + cells[n.row][n.column].value);                    
                </comment>
                <comment line="228">
                    System.out.println(&quot;=&gt;&quot; + val);                    
                </comment>
                <declaration name="val" type="float" line="190"/>
                <scope line="194"/>
                <scope line="220"/>
                <scope line="222"/>
            </method>
            <method name="paint" type="void" line="233">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="i" type="int" line="234"/>
                <declaration name="cx" type="int" line="235"/>
                <declaration name="l" type="char" line="236"/>
                <declaration name="d" type="Dimension" line="239"/>
                <scope line="248">
                    <scope line="252"/>
                </scope>
                <scope line="260">
                    <scope line="265"/>
                </scope>
                <scope line="274">
                    <scope line="275">
                        <scope line="278"/>
                    </scope>
                </scope>
            </method>
            <method name="mouseClicked" type="void" line="294">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <method name="mousePressed" type="void" line="298">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
                <declaration name="x" type="int" line="299"/>
                <declaration name="y" type="int" line="300"/>
                <declaration name="cell" type="Cell" line="301"/>
                <scope line="302">
                    <scope line="304"/>
                </scope>
                <scope line="310">
                    <scope line="312"/>
                </scope>
                <scope line="322">
                    <scope line="324"/>
                </scope>
                <scope line="328">
                    <scope line="329">
                        <scope line="331"/>
                    </scope>
                    <scope line="337">
                        <scope line="340"/>
                    </scope>
                </scope>
            </method>
            <method name="mouseReleased" type="void" line="354">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <method name="mouseEntered" type="void" line="358">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <method name="mouseExited" type="void" line="362">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <method name="keyPressed" type="void" line="366">
                <params>
                    <param name="e" type="KeyEvent"/>
                </params>
            </method>
            <method name="keyTyped" type="void" line="370">
                <params>
                    <param name="e" type="KeyEvent"/>
                </params>
            </method>
            <method name="keyReleased" type="void" line="377">
                <params>
                    <param name="e" type="KeyEvent"/>
                </params>
            </method>
            <method name="getAppletInfo" type="String" line="381"/>
            <method name="getParameterInfo" type="String[][]" line="386">
                <declaration name="info" type="String[][]" line="387"/>
            </method>
        </class>
        <class name="CellUpdater" line="398">
            <extends class="Thread"/>
            <comment line="293">
                1.1 event handling                
            </comment>
            <declaration name="target" type="Cell" line="400"/>
            <declaration name="dataStream" type="InputStream" line="401"/>
            <declaration name="tokenStream" type="StreamTokenizer" line="402"/>
            <declaration name="run" type="boolean" line="403"/>
            <method name="CellUpdater" type="constructor" line="405">
                <params>
                    <param name="c" type="Cell"/>
                </params>
            </method>
            <method name="run" type="void" line="411">
                <scope line="412">
                    <scope line="419">
                        <scope line="428"/>
                        <scope line="433"/>
                        <scope line="435"/>
                    </scope>
                </scope>
                <scope line="439"/>
            </method>
        </class>
        <class name="Cell" line="446">
            <comment line="293">
                1.1 event handling                
            </comment>
            <declaration name="VALUE" type="int" line="448"/>
            <declaration name="LABEL" type="int" line="449"/>
            <declaration name="URL" type="int" line="450"/>
            <declaration name="FORMULA" type="int" line="451"/>
            <declaration name="parseRoot" type="Node" line="452"/>
            <declaration name="needRedisplay" type="boolean" line="453"/>
            <declaration name="selected" type="boolean" line="454"/>
            <declaration name="transientValue" type="boolean" line="455"/>
            <declaration name="type" type="int" line="456"/>
            <declaration name="valueString" type="String" line="457"/>
            <declaration name="printString" type="String" line="458"/>
            <declaration name="value" type="float" line="459"/>
            <declaration name="bgColor" type="Color" line="460"/>
            <declaration name="fgColor" type="Color" line="461"/>
            <declaration name="highlightColor" type="Color" line="462"/>
            <declaration name="width" type="int" line="463"/>
            <declaration name="height" type="int" line="464"/>
            <declaration name="app" type="SpreadSheet" line="465"/>
            <declaration name="updaterThread" type="CellUpdater" line="466"/>
            <declaration name="paused" type="boolean" line="467"/>
            <method name="Cell" type="constructor" line="474">
                <params>
                    <param name="app" type="SpreadSheet"/>
                    <param name="bgColor" type="Color"/>
                    <param name="fgColor" type="Color"/>
                    <param name="highlightColor" type="Color"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
            </method>
            <method name="setRawValue" type="void" line="484">
                <params>
                    <param name="f" type="float"/>
                </params>
            </method>
            <method name="setValue" type="void" line="489">
                <params>
                    <param name="f" type="float"/>
                </params>
            </method>
            <method name="setTransientValue" type="void" line="498">
                <params>
                    <param name="f" type="float"/>
                </params>
            </method>
            <method name="setUnparsedValue" type="void" line="505">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <javadoc line="522">
                Parse a spreadsheet formula. The syntax is defined as:
                  formula -&gt; value
                  formula -&gt; value op value
                  value -&gt; &apos;(&apos; formula &apos;)&apos;
                  value -&gt; cell
                  value -&gt; &lt;number&gt;
                  op -&gt; &apos;+&apos; | &apos;&apos; | &apos;/&apos; | &apos;-&apos;
                  cell -&gt; &lt;letter&gt;&lt;number&gt;                
            </javadoc>
            <method name="parseFormula" type="String" line="533">
                <params>
                    <param name="formula" type="String"/>
                    <param name="node" type="Node"/>
                </params>
                <comment line="544">
                    System.out.println(&quot;subformula = &quot; + subformula);                    
                </comment>
                <comment line="546">
                    System.out.println(&quot;Parse succeeded&quot;);                    
                </comment>
                <comment line="550">
                    System.out.println(&quot;Parse failed&quot;);                    
                </comment>
                <comment line="554">
                    parse an operator and then another value                    
                </comment>
                <comment line="557">
                    System.out.println(&quot;Parse succeeded&quot;);                    
                </comment>
                <comment line="560">
                    System.out.println(&quot;Returning subformula=&quot; + subformula);                    
                </comment>
                <comment line="568">
                    System.out.println(&quot;subformula(2) = &quot; + subformula);                    
                </comment>
                <comment line="571">
                    System.out.println(&quot;Parse succeeded&quot;);                    
                </comment>
                <comment line="577">
                    node.print(3);                    
                </comment>
                <comment line="580">
                    System.out.println(&quot;Parse failed&quot;);                    
                </comment>
                <comment line="584">
                    System.out.println(&quot;Parse failed (bad operator): &quot; + subformula);                    
                </comment>
                <declaration name="subformula" type="String" line="534"/>
                <declaration name="restFormula" type="String" line="535"/>
                <declaration name="left" type="Node" line="536"/>
                <declaration name="right" type="Node" line="537"/>
                <declaration name="op" type="char" line="538"/>
                <scope line="540"/>
                <scope line="545"/>
                <scope line="549"/>
                <scope line="570"/>
                <scope line="579"/>
            </method>
            <method name="parseValue" type="String" line="589">
                <params>
                    <param name="formula" type="String"/>
                    <param name="node" type="Node"/>
                </params>
                <comment line="597">
                    System.out.println(&quot;parseValue: &quot; + formula);                    
                </comment>
                <comment line="600">
                    System.out.println(&quot;parseValue(&quot; + formula + &quot;)&quot;);                    
                </comment>
                <comment line="603">
                    System.out.println(&quot;rest=(&quot; + subformula + &quot;)&quot;);                    
                </comment>
                <comment line="606">
                    System.out.println(&quot;Failed&quot;);                    
                </comment>
                <comment line="609">
                    System.out.println(&quot;Failed (missing parentheses)&quot;);                    
                </comment>
                <comment line="616">
                    System.out.println(&quot;formula=&quot; + formula);                    
                </comment>
                <comment line="626">
                    System.out.println(&quot;Failed (number format error)&quot;);                    
                </comment>
                <comment line="631">
                    node.print(3);                    
                </comment>
                <comment line="633">
                    System.out.println(&quot;value= &quot; + value + &quot; i=&quot; + i +                    
                </comment>
                <comment line="634">
                    &quot; rest = &quot; + restFormula);                    
                </comment>
                <comment line="648">
                    System.out.println(&quot;row = &quot; + row + &quot; column = &quot; + column);                    
                </comment>
                <comment line="652">
                    node.print(3);                    
                </comment>
                <declaration name="c" type="char" line="590"/>
                <declaration name="subformula" type="String" line="591"/>
                <declaration name="restFormula" type="String" line="592"/>
                <declaration name="_value" type="float" line="593"/>
                <declaration name="row" type="int" line="594"/>
                <declaration name="column" type="int" line="595"/>
                <scope line="599">
                    <scope line="605"/>
                    <scope line="608"/>
                </scope>
                <scope line="613">
                    <declaration name="i" type="int" line="614"/>
                    <scope line="617">
                        <scope line="619"/>
                    </scope>
                    <scope line="623"/>
                    <scope line="625"/>
                </scope>
                <scope line="636">
                    <declaration name="i" type="int" line="637"/>
                    <scope line="641">
                        <scope line="643"/>
                    </scope>
                    <scope line="653"/>
                    <scope line="655">
                        <scope line="657"/>
                    </scope>
                </scope>
            </method>
            <method name="setValue" type="void" line="666">
                <params>
                    <param name="type" type="int"/>
                    <param name="s" type="String"/>
                </params>
                <scope line="668"/>
            </method>
            <method name="getValueString" type="String" line="696"/>
            <method name="getPrintString" type="String" line="700"/>
            <method name="select" type="void" line="704"/>
            <method name="deselect" type="void" line="709"/>
            <method name="paint" type="void" line="716">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <scope line="717"/>
                <scope line="719"/>
                <scope line="723">
                    <scope line="736"/>
                    <scope line="738">
                        <scope line="739"/>
                        <scope line="742"/>
                    </scope>
                </scope>
            </method>
        </class>
        <class name="Node" line="752">
            <comment line="293">
                1.1 event handling                
            </comment>
            <declaration name="OP" type="int" line="754"/>
            <declaration name="VALUE" type="int" line="755"/>
            <declaration name="CELL" type="int" line="756"/>
            <declaration name="type" type="int" line="757"/>
            <declaration name="left" type="Node" line="758"/>
            <declaration name="right" type="Node" line="759"/>
            <declaration name="row" type="int" line="760"/>
            <declaration name="column" type="int" line="761"/>
            <declaration name="value" type="float" line="762"/>
            <declaration name="op" type="char" line="763"/>
            <method name="Node" type="constructor" line="765"/>
            <method name="Node" type="constructor" line="775">
                <params>
                    <param name="n" type="Node"/>
                </params>
            </method>
            <method name="indent" type="void" line="785">
                <params>
                    <param name="ind" type="int"/>
                </params>
                <scope line="786"/>
            </method>
            <method name="print" type="void" line="791">
                <params>
                    <param name="indentLevel" type="int"/>
                </params>
                <declaration name="l" type="char" line="792"/>
            </method>
        </class>
        <class name="InputField" line="814">
            <comment line="293">
                1.1 event handling                
            </comment>
            <declaration name="maxchars" type="int" line="816"/>
            <declaration name="cursorPos" type="int" line="817"/>
            <declaration name="app" type="Applet" line="818"/>
            <declaration name="sval" type="String" line="819"/>
            <declaration name="buffer" type="char" line="820"/>
            <declaration name="nChars" type="int" line="821"/>
            <declaration name="width" type="int" line="822"/>
            <declaration name="height" type="int" line="823"/>
            <declaration name="bgColor" type="Color" line="824"/>
            <declaration name="fgColor" type="Color" line="825"/>
            <method name="InputField" type="constructor" line="828">
                <params>
                    <param name="initValue" type="String"/>
                    <param name="app" type="Applet"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="bgColor" type="Color"/>
                    <param name="fgColor" type="Color"/>
                </params>
                <scope line="836"/>
            </method>
            <method name="setText" type="void" line="843">
                <params>
                    <param name="val" type="String"/>
                </params>
                <declaration name="i" type="int" line="844"/>
                <scope line="846"/>
                <scope line="849"/>
                <scope line="851"/>
            </method>
            <method name="getValue" type="String" line="858"/>
            <method name="paint" type="void" line="862">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <scope line="865"/>
            </method>
            <method name="processKey" type="void" line="871">
                <params>
                    <param name="e" type="KeyEvent"/>
                </params>
                <comment line="874">
                    delete                    
                </comment>
                <comment line="880">
                    return                    
                </comment>
                <declaration name="ch" type="char" line="872"/>
                <scope line="875"/>
                <scope line="884"/>
            </method>
            <method name="keyReleased" type="void" line="892">
                <params>
                    <param name="e" type="KeyEvent"/>
                </params>
            </method>
            <method name="selected" type="void" line="895"/>
        </class>
        <class name="SpreadSheetInput" line="900">
            <extends class="InputField"/>
            <comment line="293">
                1.1 event handling                
            </comment>
            <method name="SpreadSheetInput" type="constructor" line="908">
                <params>
                    <param name="initValue" type="String"/>
                    <param name="app" type="SpreadSheet"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="bgColor" type="Color"/>
                    <param name="fgColor" type="Color"/>
                </params>
            </method>
            <method name="selected" type="void" line="913">
                <declaration name="f" type="float" line="914"/>
                <declaration name="s" type="String" line="918"/>
                <scope line="919">
                    <declaration name="i" type="int" line="920"/>
                    <scope line="921">
                        <declaration name="c" type="char" line="922"/>
                        <scope line="923"/>
                    </scope>
                </scope>
                <scope line="930"/>
            </method>
        </class>
    </source>