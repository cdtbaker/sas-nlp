<?xml version="1.0" encoding="UTF-8"?>
    <source package="">
        <import package="java.lang.management.ManagementFactory"/>
        <import package="java.lang.management.ThreadMXBean"/>
        <import package="java.lang.management.ThreadInfo"/>
        <import package="java.lang.management.LockInfo"/>
        <import package="java.lang.management.MonitorInfo"/>
        <import package="javax.management"/>
        <import package="java.io"/>
        <class name="ThreadMonitor" line="8">
            <javadoc line="8">
                Example of using the java.lang.management API to dump stack trace
                  and to perform deadlock detection.                
                <author>
                    Mandy Chung                    
                </author>
            </javadoc>
            <declaration name="server" type="MBeanServerConnection" line="14"/>
            <declaration name="tmbean" type="ThreadMXBean" line="15"/>
            <declaration name="objname" type="ObjectName" line="16"/>
            <declaration name="findDeadlocksMethodName" type="String" line="17"/>
            <declaration name="canDumpLocks" type="boolean" line="18"/>
            <javadoc line="19">
                Constructs a ThreadMonitor object to get thread information
                  in a remote JVM.                
            </javadoc>
            <method name="ThreadMonitor" type="constructor" line="23">
                <params>
                    <param name="server" type="MBeanServerConnection"/>
                </params>
                <scope line="26"/>
                <scope line="29">
                    <declaration name="ie" type="InternalError" line="30"/>
                </scope>
            </method>
            <javadoc line="36">
                Constructs a ThreadMonitor object to get thread information
                  in the local JVM.                
            </javadoc>
            <method name="ThreadMonitor" type="constructor" line="40"/>
            <javadoc line="43">
                Prints the thread dump information to System.out.                
            </javadoc>
            <method name="threadDump" type="void" line="46">
                <scope line="47">
                    <scope line="48"/>
                </scope>
                <scope line="52"/>
            </method>
            <method name="dumpThreadInfo" type="void" line="56">
                <declaration name="tids" type="long[]" line="58"/>
                <declaration name="tinfos" type="ThreadInfo[]" line="59"/>
                <scope line="60"/>
            </method>
            <javadoc line="64">
                Prints the thread dump information with locks info to System.out.                
            </javadoc>
            <method name="dumpThreadInfoWithLocks" type="void" line="67">
                <declaration name="tinfos" type="ThreadInfo[]" line="69"/>
                <scope line="70">
                    <declaration name="syncs" type="LockInfo[]" line="72"/>
                </scope>
            </method>
            <declaration name="INDENT" type="String" line="77"/>
            <method name="printThreadInfo" type="void" line="78">
                <params>
                    <param name="ti" type="ThreadInfo"/>
                </params>
                <declaration name="stacktrace" type="StackTraceElement[]" line="80"/>
                <declaration name="monitors" type="MonitorInfo[]" line="81"/>
                <scope line="82">
                    <declaration name="ste" type="StackTraceElement" line="83"/>
                    <scope line="85">
                        <scope line="86"/>
                    </scope>
                </scope>
            </method>
            <method name="printThread" type="void" line="93">
                <params>
                    <param name="ti" type="ThreadInfo"/>
                </params>
                <declaration name="sb" type="StringBuilder" line="94"/>
                <scope line="95"/>
                <scope line="98"/>
                <scope line="101"/>
                <scope line="105"/>
            </method>
            <method name="printMonitorInfo" type="void" line="109">
                <params>
                    <param name="ti" type="ThreadInfo"/>
                </params>
                <declaration name="monitors" type="MonitorInfo[]" line="110"/>
                <scope line="112"/>
            </method>
            <method name="printLockInfo" type="void" line="117">
                <params>
                    <param name="locks" type="LockInfo[]"/>
                </params>
                <scope line="119"/>
            </method>
            <javadoc line="124">
                Checks if any threads are deadlocked. If any, print
                  the thread dump information.                
            </javadoc>
            <method name="findDeadlock" type="boolean" line="128">
                <declaration name="tids" type="long[]" line="129"/>
                <scope line="130">
                    <scope line="132"/>
                    <declaration name="infos" type="ThreadInfo[]" line="136"/>
                    <scope line="137"/>
                </scope>
                <scope line="144">
                    <scope line="146"/>
                    <declaration name="infos" type="ThreadInfo[]" line="149"/>
                    <scope line="150"/>
                </scope>
            </method>
            <method name="parseMBeanInfo" type="void" line="156">
                <scope line="157">
                    <declaration name="mopis" type="MBeanOperationInfo[]" line="158"/>
                    <declaration name="found" type="boolean" line="159"/>
                    <scope line="160">
                        <scope line="161"/>
                    </scope>
                    <scope line="166"/>
                </scope>
                <scope line="171">
                    <declaration name="ie" type="InternalError" line="172"/>
                </scope>
                <scope line="176">
                    <declaration name="ie" type="InternalError" line="177"/>
                </scope>
                <scope line="181">
                    <declaration name="ie" type="InternalError" line="182"/>
                </scope>
            </method>
        </class>
    </source>