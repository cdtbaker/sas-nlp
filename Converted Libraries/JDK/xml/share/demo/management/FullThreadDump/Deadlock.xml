<?xml version="1.0" encoding="UTF-8"?>
    <source package="">
        <import package="java.util.concurrent.CyclicBarrier"/>
        <import package="java.util.concurrent.BrokenBarrierException"/>
        <import package="java.util.concurrent.locks.Lock"/>
        <import package="java.util.concurrent.locks.ReentrantLock"/>
        <import package="java.io.IOException"/>
        <class name="Deadlock" line="41">
            <javadoc line="41">
                This Deadlock class demonstrates the capability of performing
                  deadlock detection programmatically within the application using
                  the java.lang.management API.
                  See ThreadMonitor.java for the use of java.lang.management.ThreadMXBean
                  API.                
            </javadoc>
            <method name="main" type="void" line="50">
                <params>
                    <param name="argv" type="String[]"/>
                </params>
                <comment line="54">
                    Now find deadlock                    
                </comment>
                <declaration name="monitor" type="ThreadMonitor" line="54"/>
                <declaration name="found" type="boolean" line="55"/>
                <scope line="56">
                    <scope line="58"/>
                    <scope line="60"/>
                </scope>
            </method>
            <declaration name="barrier" type="CyclicBarrier" line="70"/>
            <method name="Deadlock" type="constructor" line="71">
                <comment line="90">
                    make them daemon threads so that the test will exit                    
                </comment>
                <declaration name="dThreads" type="DeadlockThread[]" line="72"/>
                <declaration name="a" type="Monitor" line="74"/>
                <declaration name="b" type="Monitor" line="75"/>
                <declaration name="c" type="Monitor" line="76"/>
                <declaration name="d" type="Lock" line="81"/>
                <declaration name="e" type="Lock" line="82"/>
                <declaration name="f" type="Lock" line="83"/>
                <scope line="90"/>
            </method>
            <class name="DeadlockThread" line="96">
                <extends class="Thread"/>
                <declaration name="lock1" type="Lock" line="97"/>
                <declaration name="lock2" type="Lock" line="98"/>
                <declaration name="mon1" type="Monitor" line="99"/>
                <declaration name="mon2" type="Monitor" line="100"/>
                <declaration name="useSync" type="boolean" line="101"/>
                <method name="DeadlockThread" type="constructor" line="103">
                    <params>
                        <param name="name" type="String"/>
                        <param name="lock1" type="Lock"/>
                        <param name="lock2" type="Lock"/>
                    </params>
                </method>
                <method name="DeadlockThread" type="constructor" line="109">
                    <params>
                        <param name="name" type="String"/>
                        <param name="mon1" type="Monitor"/>
                        <param name="mon2" type="Monitor"/>
                    </params>
                </method>
                <method name="run" type="void" line="116">
                    <scope line="117"/>
                    <scope line="119"/>
                </method>
                <method name="syncLock" type="void" line="123">
                    <scope line="125">
                        <scope line="126"/>
                        <scope line="128"/>
                        <scope line="131"/>
                    </scope>
                    <scope line="136"/>
                </method>
                <method name="goSyncDeadlock" type="void" line="140">
                    <scope line="141"/>
                    <scope line="143"/>
                    <scope line="146"/>
                </method>
                <method name="monitorLock" type="void" line="153">
                    <scope line="154">
                        <scope line="155"/>
                        <scope line="157"/>
                        <scope line="160"/>
                    </scope>
                </method>
                <method name="goMonitorDeadlock" type="void" line="167">
                    <scope line="168"/>
                    <scope line="170"/>
                    <scope line="173"/>
                    <scope line="177"/>
                </method>
            </class>
            <class name="Monitor" line="183">
                <declaration name="name" type="String" line="184"/>
                <method name="Monitor" type="constructor" line="185">
                    <params>
                        <param name="name" type="String"/>
                    </params>
                </method>
            </class>
            <method name="waitForEnterPressed" type="void" line="190">
                <scope line="191">
                    <declaration name="done" type="boolean" line="192"/>
                    <scope line="193">
                        <declaration name="ch" type="char" line="194"/>
                        <scope line="195"/>
                    </scope>
                </scope>
                <scope line="200"/>
            </method>
        </class>
    </source>