<?xml version="1.0" encoding="UTF-8"?>
    <source package="">
        <import package="java.util.concurrent.CyclicBarrier"/>
        <import package="java.util.concurrent.BrokenBarrierException"/>
        <import package="java.util.concurrent.locks.Lock"/>
        <import package="java.util.concurrent.locks.ReentrantLock"/>
        <import package="java.io.IOException"/>
        <class name="Deadlock" line="6">
            <javadoc line="6">
                This Deadlock class demonstrates the capability of performing
                  deadlock detection programmatically within the application using
                  the java.lang.management API.
                  See ThreadMonitor.java for the use of java.lang.management.ThreadMXBean
                  API.                
            </javadoc>
            <method name="main" type="void" line="14">
                <params>
                    <param name="argv" type="String[]"/>
                </params>
                <declaration name="monitor" type="ThreadMonitor" line="16"/>
                <declaration name="found" type="boolean" line="17"/>
                <scope line="18">
                    <scope line="20"/>
                    <scope line="23"/>
                </scope>
            </method>
            <declaration name="barrier" type="CyclicBarrier" line="30"/>
            <method name="Deadlock" type="constructor" line="31">
                <declaration name="dThreads" type="DeadlockThread[]" line="32"/>
                <declaration name="a" type="Monitor" line="33"/>
                <declaration name="b" type="Monitor" line="34"/>
                <declaration name="c" type="Monitor" line="35"/>
                <declaration name="d" type="Lock" line="39"/>
                <declaration name="e" type="Lock" line="40"/>
                <declaration name="f" type="Lock" line="41"/>
                <scope line="45"/>
            </method>
            <class name="DeadlockThread" line="50">
                <extends class="Thread"/>
                <declaration name="lock1" type="Lock" line="51"/>
                <declaration name="lock2" type="Lock" line="52"/>
                <declaration name="mon1" type="Monitor" line="53"/>
                <declaration name="mon2" type="Monitor" line="54"/>
                <declaration name="useSync" type="boolean" line="55"/>
                <method name="DeadlockThread" type="constructor" line="56">
                    <params>
                        <param name="name" type="String"/>
                        <param name="lock1" type="Lock"/>
                        <param name="lock2" type="Lock"/>
                    </params>
                </method>
                <method name="DeadlockThread" type="constructor" line="62">
                    <params>
                        <param name="name" type="String"/>
                        <param name="mon1" type="Monitor"/>
                        <param name="mon2" type="Monitor"/>
                    </params>
                </method>
                <method name="run" type="void" line="68">
                    <scope line="69"/>
                    <scope line="72"/>
                </method>
                <method name="syncLock" type="void" line="76">
                    <scope line="78">
                        <scope line="79"/>
                        <scope line="82"/>
                        <scope line="86"/>
                    </scope>
                    <scope line="92"/>
                </method>
                <method name="goSyncDeadlock" type="void" line="96">
                    <scope line="97"/>
                    <scope line="100"/>
                    <scope line="104"/>
                </method>
                <method name="monitorLock" type="void" line="111">
                    <scope line="112">
                        <scope line="113"/>
                        <scope line="116"/>
                        <scope line="120"/>
                    </scope>
                </method>
                <method name="goMonitorDeadlock" type="void" line="127">
                    <scope line="128"/>
                    <scope line="131"/>
                    <scope line="135"/>
                    <scope line="139"/>
                </method>
            </class>
            <class name="Monitor" line="144">
                <declaration name="name" type="String" line="145"/>
                <method name="Monitor" type="constructor" line="146">
                    <params>
                        <param name="name" type="String"/>
                    </params>
                </method>
            </class>
            <method name="waitForEnterPressed" type="void" line="150">
                <scope line="151">
                    <declaration name="done" type="boolean" line="152"/>
                    <scope line="153">
                        <declaration name="ch" type="char" line="154"/>
                        <scope line="155"/>
                    </scope>
                </scope>
                <scope line="160"/>
            </method>
        </class>
    </source>