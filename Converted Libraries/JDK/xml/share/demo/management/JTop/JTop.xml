<?xml version="1.0" encoding="UTF-8"?>
    <source package="">
        <import package="java.lang.management"/>
        <import package="javax.management"/>
        <import package="javax.management.remote"/>
        <import package="java.io.IOException"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Collections"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="java.util.Set"/>
        <import package="java.util.SortedMap"/>
        <import package="java.util.Timer"/>
        <import package="java.util.TimerTask"/>
        <import package="java.util.TreeMap"/>
        <import package="java.util.concurrent.ExecutionException"/>
        <import package="java.text.NumberFormat"/>
        <import package="java.net.MalformedURLException"/>
        <import package="java.lang.management.ManagementFactory"/>
        <import package="java.awt"/>
        <import package="javax.swing"/>
        <import package="javax.swing.border"/>
        <import package="javax.swing.table"/>
        <class name="JTop" line="75">
            <extends class="JPanel"/>
            <comment line="106">
                Set the MBeanServerConnection object for communicating                
            </comment>
            <comment line="107">
                with the target VM                
            </comment>
            <comment line="233">
                SwingWorker responsible for updating the GUI                
            </comment>
            <comment line="234">
                                
            </comment>
            <comment line="235">
                It first gets the thread and CPU usage information as a                
            </comment>
            <comment line="236">
                background task done by a worker thread so that                
            </comment>
            <comment line="237">
                it will not block the event dispatcher thread.                
            </comment>
            <comment line="238">
                                
            </comment>
            <comment line="239">
                When the worker thread finishes, the event dispatcher                
            </comment>
            <comment line="240">
                thread will invoke the done() method which will update                
            </comment>
            <comment line="241">
                the UI.                
            </comment>
            <comment line="269">
                Return a new SwingWorker for UI update                
            </comment>
            <comment line="325">
                Establish a connection with the remote application                
            </comment>
            <comment line="326">
                                
            </comment>
            <comment line="327">
                You can modify the urlPath to the address of the JMX agent                
            </comment>
            <comment line="328">
                of your application if it has a different URL.                
            </comment>
            <comment line="329">
                                
            </comment>
            <comment line="330">
                You can also modify the following code to take                
            </comment>
            <comment line="331">
                username and password for client authentication.                
            </comment>
            <javadoc line="75">
                JTop is a JPanel to display thread&apos;s name, CPU time, and its state
                  in a table.                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="81"/>
            <declaration name="server" type="MBeanServerConnection" line="82"/>
            <declaration name="tmbean" type="ThreadMXBean" line="83"/>
            <declaration name="tmodel" type="MyTableModel" line="84"/>
            <method name="JTop" type="constructor" line="85">
                <comment line="92">
                    Set the renderer to format Double                    
                </comment>
                <comment line="94">
                    Add some space                    
                </comment>
                <comment line="98">
                    Create the scroll pane and add the table to it.                    
                </comment>
                <comment line="101">
                    Add the scroll pane to this panel.                    
                </comment>
                <declaration name="table" type="JTable" line="89"/>
                <declaration name="scrollPane" type="JScrollPane" line="99"/>
            </method>
            <method name="setMBeanServerConnection" type="void" line="107">
                <params>
                    <param name="mbs" type="MBeanServerConnection"/>
                </params>
                <scope line="109"/>
                <scope line="113"/>
                <scope line="116"/>
                <scope line="118"/>
            </method>
            <class name="MyTableModel" line="123">
                <extends class="AbstractTableModel"/>
                <comment line="129">
                    List of all threads. The key of each entry is the CPU time                    
                </comment>
                <comment line="130">
                    and its value is the ThreadInfo object with no stack trace.                    
                </comment>
                <comment line="248">
                    Get the current thread info and CPU time                    
                </comment>
                <comment line="254">
                    fire table data changed to trigger GUI update                    
                </comment>
                <comment line="255">
                    when doInBackground() is finished                    
                </comment>
                <declaration name="serialVersionUID" type="long" line="124"/>
                <declaration name="columnNames" type="String[]" line="125"/>
                <declaration name="threadList" type="List&lt;Map.Entry&lt;Long,ThreadInfo&gt;&gt;" line="130"/>
                <method name="MyTableModel" type="constructor" line="133"/>
                <method name="getColumnCount" type="int" line="137"/>
                <method name="getRowCount" type="int" line="142"/>
                <method name="getColumnName" type="String" line="147">
                    <params>
                        <param name="col" type="int"/>
                    </params>
                </method>
                <method name="getValueAt" type="Object" line="152">
                    <params>
                        <param name="row" type="int"/>
                        <param name="col" type="int"/>
                    </params>
                    <comment line="156">
                        Column 0 shows the thread name                        
                    </comment>
                    <comment line="159">
                        Column 1 shows the CPU usage                        
                    </comment>
                    <comment line="164">
                        Column 2 shows the thread state                        
                    </comment>
                    <declaration name="me" type="Map.Entry&lt;Long,ThreadInfo&gt;" line="153"/>
                    <declaration name="ns" type="long" line="160"/>
                    <declaration name="sec" type="double" line="161"/>
                </method>
                <method name="getColumnClass" type="Class<?>" line="172">
                    <params>
                        <param name="c" type="int"/>
                    </params>
                </method>
                <method name="setThreadList" type="void" line="176">
                    <params>
                        <param name="list" type="List<Map.Entry<Long,ThreadInfo>>"/>
                    </params>
                </method>
            </class>
            <javadoc line="181">
                Get the thread list with CPU consumption and the ThreadInfo
                  for each thread sorted by the CPU time.                
            </javadoc>
            <method name="getThreadList" type="List<Map.Entry<Long,ThreadInfo>>" line="185">
                <comment line="186">
                    Get all threads and their ThreadInfo objects                    
                </comment>
                <comment line="187">
                    with no stack trace                    
                </comment>
                <comment line="191">
                    build a map with key = CPU time and value = ThreadInfo                    
                </comment>
                <comment line="195">
                    filter out threads that have been terminated                    
                </comment>
                <comment line="201">
                    build the thread list and sort it with CPU time                    
                </comment>
                <comment line="202">
                    in decreasing order                    
                </comment>
                <declaration name="tids" type="long[]" line="188"/>
                <declaration name="tinfos" type="ThreadInfo[]" line="189"/>
                <declaration name="map" type="SortedMap&lt;Long,ThreadInfo&gt;" line="192"/>
                <scope line="193">
                    <declaration name="cpuTime" type="long" line="194"/>
                    <scope line="196"/>
                </scope>
                <declaration name="set" type="Set&lt;Map.Entry&lt;Long,ThreadInfo&gt;&gt;" line="203"/>
                <declaration name="list" type="List&lt;Map.Entry&lt;Long,ThreadInfo&gt;&gt;" line="204"/>
            </method>
            <class name="DoubleRenderer" line="211">
                <extends class="DefaultTableCellRenderer"/>
                <comment line="129">
                    List of all threads. The key of each entry is the CPU time                    
                </comment>
                <comment line="130">
                    and its value is the ThreadInfo object with no stack trace.                    
                </comment>
                <comment line="248">
                    Get the current thread info and CPU time                    
                </comment>
                <comment line="254">
                    fire table data changed to trigger GUI update                    
                </comment>
                <comment line="255">
                    when doInBackground() is finished                    
                </comment>
                <javadoc line="211">
                    Format Double with 4 fraction digits                    
                </javadoc>
                <declaration name="serialVersionUID" type="long" line="215"/>
                <declaration name="formatter" type="NumberFormat" line="216"/>
                <method name="DoubleRenderer" type="constructor" line="217"/>
                <method name="setValue" type="void" line="223">
                    <params>
                        <param name="value" type="Object"/>
                    </params>
                    <scope line="224"/>
                </method>
            </class>
            <class name="Worker" line="241">
                <extends class="SwingWorker">
                    <type_params>
                        <type_param name="List<Map.Entry<Long,ThreadInfo>>"/>
                        <type_param name="Object"/>
                    </type_params>
                </extends>
                <comment line="129">
                    List of all threads. The key of each entry is the CPU time                    
                </comment>
                <comment line="130">
                    and its value is the ThreadInfo object with no stack trace.                    
                </comment>
                <comment line="248">
                    Get the current thread info and CPU time                    
                </comment>
                <comment line="254">
                    fire table data changed to trigger GUI update                    
                </comment>
                <comment line="255">
                    when doInBackground() is finished                    
                </comment>
                <declaration name="tmodel" type="MyTableModel" line="242"/>
                <method name="Worker" type="constructor" line="243">
                    <params>
                        <param name="tmodel" type="MyTableModel"/>
                    </params>
                </method>
                <method name="doInBackground" type="List<Map.Entry<Long,ThreadInfo>>" line="249"/>
                <method name="done" type="void" line="256">
                    <comment line="258">
                        Set table model with the new thread list                        
                    </comment>
                    <comment line="260">
                        refresh the table model                        
                    </comment>
                    <scope line="257"/>
                    <scope line="262"/>
                    <scope line="263"/>
                </method>
            </class>
            <method name="newSwingWorker" type="SwingWorker<?,?>" line="269"/>
            <method name="main" type="void" line="273">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <comment line="274">
                    Validate the input arguments                    
                </comment>
                <comment line="294">
                    Create the JTop Panel                    
                </comment>
                <comment line="296">
                    Set up the MBeanServerConnection to the target VM                    
                </comment>
                <comment line="300">
                    A timer task to update GUI per each interval                    
                </comment>
                <comment line="304">
                    Schedule the SwingWorker to update the GUI                    
                </comment>
                <comment line="309">
                    Create the standalone window with JTop panel                    
                </comment>
                <comment line="310">
                    by the event dispatcher thread                    
                </comment>
                <comment line="318">
                    refresh every 2 seconds                    
                </comment>
                <scope line="275"/>
                <declaration name="arg2" type="String[]" line="279"/>
                <scope line="280"/>
                <declaration name="hostname" type="String" line="283"/>
                <declaration name="port" type="int" line="284"/>
                <scope line="285"/>
                <scope line="287"/>
                <scope line="290"/>
                <declaration name="jtop" type="JTop" line="295"/>
                <declaration name="server" type="MBeanServerConnection" line="297"/>
                <anonymous_class line="301">
                    <method name="run" type="void" line="303">
                        <comment line="304">
                            Schedule the SwingWorker to update the GUI                            
                        </comment>
                    </method>
                </anonymous_class>
                <declaration name="timerTask" type="TimerTask" line="301"/>
                <anonymous_class line="311">
                    <method name="run" type="void" line="313"/>
                </anonymous_class>
                <declaration name="timer" type="Timer" line="319"/>
            </method>
            <method name="connect" type="MBeanServerConnection" line="331">
                <params>
                    <param name="hostname" type="String"/>
                    <param name="port" type="int"/>
                </params>
                <comment line="332">
                    Create an RMI connector client and connect it to                    
                </comment>
                <comment line="333">
                    the RMI connector server                    
                </comment>
                <comment line="341">
                    should not reach here                    
                </comment>
                <declaration name="urlPath" type="String" line="334"/>
                <declaration name="server" type="MBeanServerConnection" line="335"/>
                <scope line="336">
                    <declaration name="url" type="JMXServiceURL" line="337"/>
                    <declaration name="jmxc" type="JMXConnector" line="338"/>
                </scope>
                <scope line="340"/>
                <scope line="342"/>
            </method>
            <method name="usage" type="void" line="349"/>
            <javadoc line="353">
                Create the GUI and show it.  For thread safety,
                  this method should be invoked from the
                  event-dispatching thread.                
            </javadoc>
            <method name="createAndShowGUI" type="void" line="358">
                <params>
                    <param name="jtop" type="JPanel"/>
                </params>
                <comment line="359">
                    Create and set up the window.                    
                </comment>
                <comment line="363">
                    Create and set up the content pane.                    
                </comment>
                <comment line="366">
                    content panes must be opaque                    
                </comment>
                <comment line="370">
                    Display the window.                    
                </comment>
                <declaration name="frame" type="JFrame" line="360"/>
                <declaration name="contentPane" type="JComponent" line="364"/>
            </method>
        </class>
    </source>