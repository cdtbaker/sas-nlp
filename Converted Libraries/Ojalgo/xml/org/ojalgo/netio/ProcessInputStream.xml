<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.netio">
        <import package="java.io.DataInputStream"/>
        <import package="java.io.EOFException"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.util.List"/>
        <class name="ProcessInputStream" line="7">
            <extends class="DataInputStream"/>
            <declaration name="EMPTY" type="String" line="8"/>
            <declaration name="myLastArgument" type="String" line="9"/>
            <declaration name="myLastCommand" type="String" line="10"/>
            <declaration name="myLastCommandPrefix" type="String" line="11"/>
            <declaration name="myWaitTime" type="long" line="12"/>
            <method name="ProcessInputStream" type="constructor" line="13">
                <params>
                    <param name="aProcess" type="Process"/>
                    <param name="aLastCommandPrefix" type="String"/>
                </params>
            </method>
            <method name="ProcessInputStream" type="constructor" line="17">
                <params>
                    <param name="someIn" type="InputStream"/>
                </params>
            </method>
            <method name="collectMessages" type="List<Message>" line="21">
                <declaration name="retVal" type="List&lt;Message&gt;" line="22"/>
                <declaration name="tmpMessage" type="Message" line="23"/>
                <declaration name="tmpReadOneMore" type="boolean" line="25"/>
                <scope line="26">
                    <scope line="28"/>
                </scope>
            </method>
            <method name="getLastArgument" type="String" line="35"/>
            <method name="getLastCommand" type="String" line="38"/>
            <method name="constructMessage" type="Message" line="41">
                <declaration name="retVal" type="Message" line="42"/>
                <declaration name="tmpString" type="String" line="43"/>
                <scope line="44">
                    <declaration name="tmpFirst" type="int" line="45"/>
                    <declaration name="tmpLast" type="int" line="46"/>
                    <declaration name="tmpCommand" type="String" line="47"/>
                    <declaration name="tmpArgument" type="String" line="50"/>
                </scope>
                <scope line="55">
                    <scope line="56"/>
                    <scope line="59"/>
                </scope>
            </method>
            <javadoc line="66">
                Creates a &lt;code&gt;String&lt;/code&gt; from the stream of bytes.
                  Each &lt;code&gt;byte&lt;/code&gt; (8 bit) is converted to a &lt;code&gt;char&lt;/code&gt;. The chars
                  are meged to form a &lt;code&gt;String&lt;/code&gt;. The first bytes, describing the count
                  of bytes to come, as well as any &apos;\r&apos; character are discarded. Everything else
                  is converted and merged.                
            </javadoc>
            <method name="readString" type="String" line="73">
                <declaration name="retVal" type="StringBuilder" line="74"/>
                <scope line="75">
                    <declaration name="tmpInt" type="int" line="76"/>
                    <declaration name="tmpChar" type="char" line="77"/>
                    <declaration name="tmpByteCount" type="int" line="78"/>
                    <scope line="79"/>
                    <scope line="83">
                        <scope line="85"/>
                    </scope>
                </scope>
                <scope line="90"/>
            </method>
            <javadoc line="96">
                @see java.io.DataInput#readByte()                
            </javadoc>
            <method name="readByteAsChar" type="char" line="99">
                <declaration name="retVal" type="int" line="100"/>
                <scope line="101"/>
            </method>
            <javadoc line="106">
                @see java.io.DataInput#readByte()                
            </javadoc>
            <method name="readByteAsInt" type="int" line="109">
                <declaration name="retVal" type="int" line="110"/>
                <scope line="111"/>
            </method>
        </class>
    </source>