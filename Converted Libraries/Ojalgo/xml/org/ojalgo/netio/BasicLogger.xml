<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.netio">
        <import package="java.io.PrintStream"/>
        <import package="org.ojalgo.RecoverableCondition"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.matrix.BasicMatrix"/>
        <import package="org.ojalgo.matrix.BigMatrix"/>
        <import package="org.ojalgo.matrix.ComplexMatrix"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="BasicLogger" line="36">
            <javadoc line="36">
                An extremely simple/basic logging system that uses {@linkplain System#out}, {@linkplain System#err} or any other{@linkplain PrintStream}. This is NOT a logging framework for your end application. It is primarly used within ojAlgo
                  when debugging. By supplying suitable {@linkplain PrintStream}:s you may connect this with whatever logging framework
                  you use, and thus get debug info from (for instance) the optimisation algorithms in log files of your choice.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <declaration name="DEBUG" type="PrintStream" line="46"/>
            <declaration name="ERROR" type="PrintStream" line="47"/>
            <declaration name="MATRIX_ELEMENT_CONTEXT" type="NumberContext" line="49"/>
            <method name="debug" type="void" line="51"/>
            <method name="debug" type="void" line="55">
                <params>
                    <param name="message" type="Object"/>
                </params>
            </method>
            <method name="debug" type="void" line="59">
                <params>
                    <param name="message" type="String"/>
                    <param name="access2D" type="Access2D&lt;?&gt;"/>
                </params>
            </method>
            <method name="debug" type="void" line="64">
                <params>
                    <param name="messagePattern" type="String"/>
                    <param name="arguments" type="Object"/>
                </params>
            </method>
            <method name="debugStackTrace" type="void" line="68">
                <params>
                    <param name="message" type="String"/>
                </params>
            </method>
            <method name="debugStackTrace" type="void" line="72">
                <params>
                    <param name="throwable" type="Throwable"/>
                </params>
            </method>
            <method name="error" type="void" line="76"/>
            <method name="error" type="void" line="80">
                <params>
                    <param name="message" type="Object"/>
                </params>
            </method>
            <method name="error" type="void" line="84">
                <params>
                    <param name="message" type="String"/>
                    <param name="access2D" type="Access2D&lt;?&gt;"/>
                </params>
            </method>
            <method name="error" type="void" line="89">
                <params>
                    <param name="messagePattern" type="String"/>
                    <param name="arguments" type="Object"/>
                </params>
            </method>
            <method name="errorStackTrace" type="void" line="93">
                <params>
                    <param name="message" type="String"/>
                </params>
            </method>
            <method name="errorStackTrace" type="void" line="97">
                <params>
                    <param name="throwable" type="Throwable"/>
                </params>
            </method>
            <method name="println" type="void" line="101">
                <params>
                    <param name="stream" type="PrintStream"/>
                </params>
                <scope line="102"/>
            </method>
            <method name="println" type="void" line="107">
                <params>
                    <param name="stream" type="PrintStream"/>
                    <param name="message" type="Object"/>
                </params>
                <scope line="108"/>
            </method>
            <method name="println" type="void" line="113">
                <params>
                    <param name="stream" type="PrintStream"/>
                    <param name="messagePattern" type="String"/>
                    <param name="arguments" type="Object"/>
                </params>
                <scope line="114"/>
            </method>
            <method name="printMtrx" type="void" line="119">
                <params>
                    <param name="stream" type="PrintStream"/>
                    <param name="access2D" type="Access2D&lt;?&gt;"/>
                    <param name="context" type="NumberContext"/>
                </params>
                <scope line="120">
                    <scope line="121"/>
                    <scope line="123"/>
                    <scope line="125"/>
                    <scope line="127"/>
                </scope>
            </method>
            <method name="printStackTrace" type="void" line="133">
                <params>
                    <param name="stream" type="PrintStream"/>
                    <param name="message" type="String"/>
                </params>
                <scope line="134">
                    <scope line="135"/>
                    <scope line="137"/>
                </scope>
            </method>
            <method name="printStackTrace" type="void" line="143">
                <params>
                    <param name="stream" type="PrintStream"/>
                    <param name="throwable" type="Throwable"/>
                </params>
                <scope line="144"/>
            </method>
            <method name="printMtrx" type="void" line="149">
                <params>
                    <param name="stream" type="PrintStream"/>
                    <param name="matrix" type="BasicMatrix&lt;?&gt;"/>
                    <param name="context" type="NumberContext"/>
                    <param name="plainString" type="boolean"/>
                </params>
                <comment line="176">
                    stream.println();                    
                </comment>
                <scope line="150">
                    <declaration name="tmpRowDim" type="int" line="152"/>
                    <declaration name="tmpColDim" type="int" line="153"/>
                    <declaration name="tmpElements" type="String[][]" line="155"/>
                    <declaration name="tmpWidth" type="int" line="157"/>
                    <declaration name="tmpElementNumber" type="Scalar&amp;lt;?&amp;gt;" line="158"/>
                    <declaration name="tmpElementString" type="String" line="159"/>
                    <scope line="160">
                        <scope line="161">
                            <scope line="163"/>
                            <scope line="165"/>
                        </scope>
                    </scope>
                    <declaration name="tmpPadding" type="int" line="174"/>
                    <scope line="176">
                        <scope line="177">
                            <scope line="180"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="BasicLogger" type="constructor" line="190"/>
        </class>
    </source>