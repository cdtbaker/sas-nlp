<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.random">
        <import package="java.util.Arrays"/>
        <import package="java.util.Iterator"/>
        <import package="org.ojalgo.ProgrammingError"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Iterator1D"/>
        <import package="org.ojalgo.array.ArrayUtils"/>
        <import package="org.ojalgo.array.SimpleArray"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <class name="SampleSet" line="10">
            <implements interface="Access1D">
                <type_params>
                    <type_param name="Double"/>
                </type_params>
            </implements>
            <method name="make" type="SampleSet" line="11">
                <params>
                    <param name="aRndmNmbr" type="RandomNumber"/>
                    <param name="aSize" type="int"/>
                </params>
                <declaration name="retVal" type="SimpleArray.Primitive" line="12"/>
                <scope line="13"/>
            </method>
            <method name="wrap" type="SampleSet" line="18">
                <params>
                    <param name="someSamples" type="Access1D<?>"/>
                </params>
            </method>
            <declaration name="myMean" type="double" line="21"/>
            <declaration name="myMedian" type="double" line="22"/>
            <declaration name="mySamples" type="Access1D&lt;?&gt;" line="23"/>
            <declaration name="myVariance" type="double" line="24"/>
            <method name="SampleSet" type="constructor" line="25"/>
            <method name="SampleSet" type="constructor" line="29">
                <params>
                    <param name="someValues" type="Access1D<?>"/>
                </params>
            </method>
            <method name="count" type="long" line="34"/>
            <method name="doubleValue" type="double" line="37">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="get" type="Double" line="40">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="get" type="Double" line="43">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="getCorrelation" type="double" line="46">
                <params>
                    <param name="aSet" type="SampleSet"/>
                </params>
                <declaration name="retVal" type="double" line="47"/>
                <declaration name="tmpCovar" type="double" line="48"/>
                <scope line="49">
                    <declaration name="tmpThisStdDev" type="double" line="50"/>
                    <declaration name="tmpThatStdDev" type="double" line="51"/>
                </scope>
            </method>
            <method name="getCovariance" type="double" line="56">
                <params>
                    <param name="aSet" type="SampleSet"/>
                </params>
                <declaration name="retVal" type="double" line="57"/>
                <declaration name="tmpThisMean" type="double" line="58"/>
                <declaration name="tmpThatMean" type="double" line="59"/>
                <declaration name="tmpCount" type="int" line="60"/>
                <declaration name="tmpValues" type="Access1D&lt;?&gt;" line="61"/>
                <scope line="62"/>
            </method>
            <method name="getFirst" type="double" line="68"/>
            <javadoc line="71">
                max(abs(value))                
            </javadoc>
            <method name="getLargest" type="double" line="74">
                <declaration name="retVal" type="double" line="75"/>
                <scope line="76"/>
            </method>
            <method name="getLast" type="double" line="81"/>
            <javadoc line="84">
                max(value)                
            </javadoc>
            <method name="getMaximum" type="double" line="87">
                <declaration name="retVal" type="double" line="88"/>
                <scope line="89"/>
            </method>
            <method name="getMean" type="double" line="94">
                <scope line="95">
                    <scope line="97"/>
                </scope>
            </method>
            <method name="getMedian" type="double" line="104">
                <scope line="105">
                    <declaration name="tmpCopy" type="double[]" line="106"/>
                </scope>
            </method>
            <javadoc line="112">
                min(value)                
            </javadoc>
            <method name="getMinimum" type="double" line="115">
                <declaration name="retVal" type="double" line="116"/>
                <scope line="117"/>
            </method>
            <javadoc line="122">
                min(abs(value))                
            </javadoc>
            <method name="getSmallest" type="double" line="125">
                <declaration name="retVal" type="double" line="126"/>
                <scope line="127"/>
            </method>
            <method name="getStandardDeviation" type="double" line="132"/>
            <javadoc line="135">
                &lt;p&gt;
                  &amp;quot;Sum of squares is a concept that permeates much of inferential statistics and descriptive statistics. More
                  properly, it is &quot;the sum of the squared deviations&quot;. Mathematically, it is an unscaled, or unadjusted measure of
                  dispersion (also called variability). When scaled for the number of degrees of freedom, it estimates the
                  variance, or spread of the observations about their mean value.&amp;quot;
                  &lt;/p&gt;
                  &lt;a href=&quot;http://en.wikipedia.org/wiki/Sum_of_squares&quot;&gt;Wikipedia&lt;/a&gt;                
            </javadoc>
            <method name="getSumOfSquares" type="double" line="144">
                <declaration name="retVal" type="double" line="145"/>
                <declaration name="tmpMean" type="double" line="146"/>
                <declaration name="tmpVal" type="double" line="147"/>
                <declaration name="tmpLimit" type="int" line="148"/>
                <scope line="149"/>
            </method>
            <javadoc line="155">
                @return A copy of the internal data (the samples).                
            </javadoc>
            <method name="getValues" type="double[]" line="158"/>
            <method name="getVariance" type="double" line="161">
                <scope line="162"/>
            </method>
            <method name="iterator" type="Iterator<Double>" line="167"/>
            <method name="reset" type="void" line="170"/>
            <method name="size" type="int" line="175"/>
            <method name="toString" type="String" line="178"/>
            <method name="getSamples" type="Access1D<?>" line="181"/>
        </class>
    </source>