<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.random.process">
        <import package="org.ojalgo.array.Array1D"/>
        <import package="org.ojalgo.array.Array2D"/>
        <import package="org.ojalgo.random.Distribution"/>
        <import package="org.ojalgo.random.SampleSet"/>
        <import package="org.ojalgo.series.primitive.PrimitiveSeries"/>
        <interface name="RandomProcess">
            <type_params>
                <type_param name="D"/>
            </type_params>
            <javadoc line="30">
                A random/stochastic process is a collection of random variables representing the evolution of some random value over
                  &quot;time&quot;.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <class name="SimulationResults" line="38">
                <declaration name="myInitialValue" type="double" line="40"/>
                <declaration name="myResults" type="Array2D&amp;lt;Double&amp;gt;" line="42"/>
                <javadoc line="44">
                    @param initialValue                    
                    <param>
                        results (Random values) scenarios/realisations/series in rows, and sample sets in columns.                        
                    </param>
                </javadoc>
                <method name="SimulationResults" type="constructor" line="48">
                    <params>
                        <param name="initialValue" type="double"/>
                        <param name="results" type="Array2D&lt;Double&gt;"/>
                    </params>
                </method>
                <method name="SimulationResults" type="constructor" line="57"/>
                <method name="countSampleSets" type="int" line="65"/>
                <method name="countScenarios" type="int" line="69"/>
                <method name="getInitialValue" type="double" line="73"/>
                <method name="getSampleSet" type="SampleSet" line="77">
                    <params>
                        <param name="index" type="int"/>
                    </params>
                </method>
                <javadoc line="81">
                    A series representing one scenario. Each series has length &quot;number of simulation steps&quot; + 1 as the series
                      includes the initial value.                    
                </javadoc>
                <method name="getScenario" type="PrimitiveSeries" line="85">
                    <params>
                        <param name="index" type="int"/>
                    </params>
                    <declaration name="tmpSlicedRow" type="Array1D&amp;lt;Double&amp;gt;" line="87"/>
                    <anonymous_class line="89">
                        <method name="size" type="int" line="92"/>
                        <method name="value" type="double" line="97">
                            <params>
                                <param name="index" type="int"/>
                            </params>
                            <scope line="98"/>
                            <scope line="100"/>
                        </method>
                    </anonymous_class>
                </method>
            </class>
            <method name="getDistribution" type="D" line="110"/>
            <javadoc line="110">
                Calling this method repeatedly gives the same ressult, unless you call {@linkplain #step(double)} inbetween.                
                <param>
                    evaluationPoint How far into the future?                    
                </param>
                <return>
                    The distribution for the process value at that future time.                    
                </return>
            </javadoc>
            <method name="simulate" type="RandomProcess.SimulationResults" line="118"/>
            <javadoc line="118">
                @return An array of sample sets. The array has aNumberOfSteps elements, and each sample set has
                  aNumberOfRealisations samples.                
            </javadoc>
        </interface>
    </source>