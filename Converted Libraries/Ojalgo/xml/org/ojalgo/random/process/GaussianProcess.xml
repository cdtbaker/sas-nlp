<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.random.process">
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.random.Normal"/>
        <import package="org.ojalgo.random.Normal1D"/>
        <class name="GaussianProcess" line="5">
            <extends class="AbstractProcess">
                <type_params>
                    <type_param name="Normal"/>
                </type_params>
            </extends>
            <javadoc line="5">
                A Gaussian process is a stochastic process whose realizations consist of
                  random values associated with every point in a range of times (or of space)
                  such that each such random variable has a normal distribution. Moreover,
                  every finite collection of those random variables has a multivariate normal
                  distribution.
                  Prior to calling {@linkplain #getDistribution(double)} or{@linkplain #simulate(int,int,double)} you must call{@linkplain #addObservation(double,double)} one or more times.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <declaration name="GENERATOR" type="Normal" line="15"/>
            <declaration name="myDelegate" type="GaussianField&lt;Double&gt;" line="16"/>
            <method name="GaussianProcess" type="constructor" line="17">
                <params>
                    <param name="covarFunc" type="GaussianField.Covariance<Double>"/>
                </params>
            </method>
            <method name="GaussianProcess" type="constructor" line="21">
                <params>
                    <param name="meanFunc" type="GaussianField.Mean<Double>"/>
                    <param name="covarFunc" type="GaussianField.Covariance<Double>"/>
                </params>
            </method>
            <method name="GaussianProcess" type="constructor" line="25"/>
            <method name="calibrate" type="void" line="28"/>
            <method name="getDistribution" type="Normal" line="31">
                <params>
                    <param name="evaluationPoint" type="double"/>
                </params>
                <declaration name="tmpVal" type="Normal1D" line="32"/>
                <declaration name="tmpLocation" type="double" line="33"/>
                <declaration name="tmpScale" type="double" line="34"/>
            </method>
            <method name="getDistribution" type="Normal1D" line="37">
                <params>
                    <param name="evaluationPoint" type="Double"/>
                </params>
            </method>
            <method name="getNormalisedRandomIncrement" type="double" line="40"/>
            <method name="step" type="double" line="43">
                <params>
                    <param name="currentValue" type="double"/>
                    <param name="stepSize" type="double"/>
                    <param name="normalisedRandomIncrement" type="double"/>
                </params>
                <declaration name="tmpDistr" type="Normal" line="44"/>
                <declaration name="retVal" type="double" line="45"/>
            </method>
            <method name="getCovariances" type="MatrixStore<Double>" line="49"/>
            <method name="getExpected" type="double" line="52">
                <params>
                    <param name="aStepSize" type="double"/>
                </params>
            </method>
            <method name="getLowerConfidenceQuantile" type="double" line="55">
                <params>
                    <param name="aStepSize" type="double"/>
                    <param name="aConfidence" type="double"/>
                </params>
            </method>
            <method name="getStandardDeviation" type="double" line="58">
                <params>
                    <param name="aStepSize" type="double"/>
                </params>
            </method>
            <method name="getUpperConfidenceQuantile" type="double" line="61">
                <params>
                    <param name="aStepSize" type="double"/>
                    <param name="aConfidence" type="double"/>
                </params>
            </method>
            <method name="getVariance" type="double" line="64">
                <params>
                    <param name="aStepSize" type="double"/>
                </params>
            </method>
        </class>
    </source>