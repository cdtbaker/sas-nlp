<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix">
        <import package="java.io.Serializable"/>
        <import package="java.math.BigDecimal"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="org.ojalgo.ProgrammingError"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.access.AccessUtils"/>
        <import package="org.ojalgo.access.Iterator1D"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.aggregator.Aggregator"/>
        <import package="org.ojalgo.function.aggregator.AggregatorFunction"/>
        <import package="org.ojalgo.matrix.decomposition.Eigenvalue"/>
        <import package="org.ojalgo.matrix.decomposition.EigenvalueDecomposition"/>
        <import package="org.ojalgo.matrix.decomposition.LU"/>
        <import package="org.ojalgo.matrix.decomposition.LUDecomposition"/>
        <import package="org.ojalgo.matrix.decomposition.QR"/>
        <import package="org.ojalgo.matrix.decomposition.QRDecomposition"/>
        <import package="org.ojalgo.matrix.decomposition.SingularValue"/>
        <import package="org.ojalgo.matrix.decomposition.SingularValueDecomposition"/>
        <import package="org.ojalgo.matrix.store"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="AbstractMatrix" line="52">
            <type_params>
                <type_param name="N"/>
                <type_param name="I"/>
            </type_params>
            <extends class="Object"/>
            <implements interface="BasicMatrix">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="Serializable"/>
            <javadoc line="52">
                ArbitraryMatrix                
                <author>
                    apete                    
                </author>
            </javadoc>
            <declaration name="myEigenvalue" type="Eigenvalue&amp;lt;N&amp;gt;" line="59"/>
            <declaration name="myHashCode" type="int" line="60"/>
            <declaration name="myLU" type="LU&amp;lt;N&amp;gt;" line="61"/>
            <declaration name="myPhysicalFactory" type="PhysicalStore.Factory&amp;lt;N,? extends PhysicalStore&amp;lt;N&amp;gt;&amp;gt;" line="62"/>
            <declaration name="myQR" type="QR&amp;lt;N&amp;gt;" line="63"/>
            <declaration name="mySingularValue" type="SingularValue&amp;lt;N&amp;gt;" line="64"/>
            <declaration name="myStore" type="MatrixStore&amp;lt;N&amp;gt;" line="65"/>
            <method name="AbstractMatrix" type="constructor" line="68"/>
            <method name="AbstractMatrix" type="constructor" line="75">
                <params>
                    <param name="aStore" type="MatrixStore&lt;N&gt;"/>
                </params>
            </method>
            <method name="add" type="I" line="83">
                <params>
                    <param name="aMtrx" type="Access2D&lt;?&gt;"/>
                </params>
                <declaration name="retVal" type="PhysicalStore&amp;lt;N&amp;gt;" line="87"/>
            </method>
            <method name="add" type="I" line="94">
                <params>
                    <param name="aRow" type="int"/>
                    <param name="aCol" type="int"/>
                    <param name="aMtrx" type="Access2D&lt;?&gt;"/>
                </params>
                <declaration name="tmpDiff" type="MatrixStore&amp;lt;N&amp;gt;" line="96"/>
            </method>
            <method name="add" type="I" line="101">
                <params>
                    <param name="aRow" type="int"/>
                    <param name="aCol" type="int"/>
                    <param name="aNmbr" type="Number"/>
                </params>
                <declaration name="tmpPhysicalFactory" type="PhysicalStore.Factory&amp;lt;N,?&amp;gt;" line="103"/>
                <declaration name="tmpDiff" type="SingleStore&amp;lt;N&amp;gt;" line="105"/>
            </method>
            <method name="add" type="I" line="110">
                <params>
                    <param name="aNmbr" type="Number"/>
                </params>
                <declaration name="retVal" type="PhysicalStore&amp;lt;N&amp;gt;" line="112"/>
            </method>
            <method name="conjugate" type="I" line="119">
                <declaration name="retVal" type="MatrixStore&amp;lt;N&amp;gt;" line="121"/>
                <scope line="123"/>
                <scope line="125"/>
            </method>
            <method name="copyToBuilder" type="Access2D.Builder&lt;I&gt;" line="132"/>
            <method name="count" type="long" line="136"/>
            <method name="countColumns" type="long" line="140"/>
            <method name="countRows" type="long" line="144"/>
            <method name="divide" type="I" line="148">
                <params>
                    <param name="aNmbr" type="Number"/>
                </params>
                <declaration name="retVal" type="PhysicalStore&amp;lt;N&amp;gt;" line="150"/>
            </method>
            <method name="divideElements" type="I" line="157">
                <params>
                    <param name="aMtrx" type="Access2D&lt;?&gt;"/>
                </params>
                <declaration name="retVal" type="PhysicalStore&amp;lt;N&amp;gt;" line="161"/>
            </method>
            <method name="doubleValue" type="double" line="168">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="doubleValue" type="double" line="172">
                <params>
                    <param name="i" type="long"/>
                    <param name="j" type="long"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="176">
                <params>
                    <param name="aMtrx" type="Access2D&lt;?&gt;"/>
                    <param name="aCntxt" type="NumberContext"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="181">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="182"/>
                <scope line="184"/>
            </method>
            <method name="flushCache" type="void" line="189"/>
            <method name="get" type="N" line="199">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="get" type="N" line="203">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="get" type="N" line="207">
                <params>
                    <param name="aRow" type="long"/>
                    <param name="aColumn" type="long"/>
                </params>
            </method>
            <method name="getColumnsRange" type="I" line="211">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                </params>
            </method>
            <method name="getCondition" type="Scalar&lt;N&gt;" line="215"/>
            <method name="getDeterminant" type="Scalar&lt;N&gt;" line="219"/>
            <method name="getEigenvalues" type="List&lt;ComplexNumber&gt;" line="223"/>
            <javadoc line="227">
                @see org.ojalgo.matrix.BasicMatrix#getFrobeniusNorm()                
            </javadoc>
            <method name="getFrobeniusNorm" type="Scalar&lt;N&gt;" line="230">
                <scope line="232"/>
                <scope line="236"/>
            </method>
            <method name="getInfinityNorm" type="Scalar&lt;N&gt;" line="242">
                <declaration name="retVal" type="double" line="244"/>
                <declaration name="tmpRowSumAggr" type="AggregatorFunction&amp;lt;N&amp;gt;" line="245"/>
                <declaration name="tmpRowDim" type="int" line="247"/>
                <scope line="248"/>
            </method>
            <method name="getKyFanNorm" type="Scalar&lt;N&gt;" line="257">
                <params>
                    <param name="k" type="int"/>
                </params>
            </method>
            <method name="getOneNorm" type="Scalar&lt;N&gt;" line="261">
                <declaration name="retVal" type="double" line="263"/>
                <declaration name="tmpColSumAggr" type="AggregatorFunction&amp;lt;N&amp;gt;" line="264"/>
                <declaration name="tmpColDim" type="int" line="266"/>
                <scope line="267"/>
            </method>
            <method name="getOperatorNorm" type="Scalar&lt;N&gt;" line="276"/>
            <method name="getRank" type="int" line="280">
                <scope line="281"/>
                <scope line="283"/>
                <scope line="285"/>
            </method>
            <method name="getRowsRange" type="I" line="290">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                </params>
            </method>
            <method name="getSingularValues" type="List&lt;Double&gt;" line="294"/>
            <method name="getTrace" type="Scalar&lt;N&gt;" line="298">
                <declaration name="tmpAggr" type="AggregatorFunction&amp;lt;N&amp;gt;" line="300"/>
            </method>
            <method name="getTraceNorm" type="Scalar&lt;N&gt;" line="307"/>
            <method name="getVectorNorm" type="Scalar&lt;N&gt;" line="311">
                <params>
                    <param name="aDegree" type="int"/>
                </params>
            </method>
            <method name="hashCode" type="int" line="334">
                <scope line="335"/>
            </method>
            <method name="invert" type="I" line="341">
                <declaration name="retVal" type="MatrixStore&amp;lt;N&amp;gt;" line="343"/>
                <scope line="345"/>
                <scope line="347"/>
                <scope line="349"/>
            </method>
            <method name="isEmpty" type="boolean" line="356"/>
            <method name="isFat" type="boolean" line="360"/>
            <method name="isFullRank" type="boolean" line="364"/>
            <method name="isHermitian" type="boolean" line="368"/>
            <method name="isScalar" type="boolean" line="372"/>
            <method name="isSquare" type="boolean" line="376"/>
            <method name="isSymmetric" type="boolean" line="380"/>
            <method name="isTall" type="boolean" line="384"/>
            <method name="isVector" type="boolean" line="388"/>
            <method name="iterator" type="Iterator&lt;N&gt;" line="392"/>
            <method name="mergeColumns" type="I" line="396">
                <params>
                    <param name="aMtrx" type="Access2D&lt;?&gt;"/>
                </params>
            </method>
            <method name="mergeRows" type="I" line="403">
                <params>
                    <param name="aMtrx" type="Access2D&lt;?&gt;"/>
                </params>
            </method>
            <method name="modify" type="I" line="410">
                <params>
                    <param name="aFunc" type="UnaryFunction&lt;N&gt;"/>
                </params>
                <declaration name="retVal" type="PhysicalStore&amp;lt;N&amp;gt;" line="412"/>
            </method>
            <method name="multiply" type="I" line="419">
                <params>
                    <param name="aNmbr" type="Number"/>
                </params>
                <declaration name="retVal" type="PhysicalStore&amp;lt;N&amp;gt;" line="421"/>
            </method>
            <method name="multiplyElements" type="I" line="428">
                <params>
                    <param name="aMtrx" type="Access2D&lt;?&gt;"/>
                </params>
                <declaration name="retVal" type="PhysicalStore&amp;lt;N&amp;gt;" line="432"/>
            </method>
            <method name="multiplyLeft" type="I" line="439">
                <params>
                    <param name="aMtrx" type="Access2D&lt;?&gt;"/>
                </params>
            </method>
            <method name="multiplyRight" type="I" line="446">
                <params>
                    <param name="aMtrx" type="Access2D&lt;?&gt;"/>
                </params>
            </method>
            <method name="multiplyVectors" type="Scalar&lt;N&gt;" line="453">
                <params>
                    <param name="aVctr" type="Access2D&lt;?&gt;"/>
                </params>
                <scope line="454"/>
                <scope line="456"/>
                <scope line="458"/>
            </method>
            <method name="negate" type="I" line="463">
                <declaration name="retVal" type="PhysicalStore&amp;lt;N&amp;gt;" line="465"/>
            </method>
            <method name="selectColumns" type="I" line="472">
                <params>
                    <param name="someCols" type="int"/>
                </params>
            </method>
            <method name="selectRows" type="I" line="476">
                <params>
                    <param name="someRows" type="int"/>
                </params>
            </method>
            <method name="size" type="int" line="480"/>
            <method name="solve" type="I" line="484">
                <params>
                    <param name="aRHS" type="Access2D&lt;?&gt;"/>
                </params>
                <declaration name="retVal" type="MatrixStore&amp;lt;N&amp;gt;" line="486"/>
                <scope line="488"/>
                <scope line="490"/>
                <scope line="492"/>
            </method>
            <method name="subtract" type="I" line="499">
                <params>
                    <param name="aMtrx" type="Access2D&lt;?&gt;"/>
                </params>
                <declaration name="retVal" type="PhysicalStore&amp;lt;N&amp;gt;" line="503"/>
            </method>
            <method name="subtract" type="I" line="510">
                <params>
                    <param name="value" type="Number"/>
                </params>
                <declaration name="retVal" type="PhysicalStore&amp;lt;N&amp;gt;" line="512"/>
            </method>
            <method name="toBigStore" type="PhysicalStore&lt;BigDecimal&gt;" line="519"/>
            <method name="toComplexStore" type="PhysicalStore&lt;ComplexNumber&gt;" line="523"/>
            <method name="toListOfColumns" type="List&lt;BasicMatrix&lt;N&gt;&gt;" line="527">
                <declaration name="tmpColDim" type="int" line="529"/>
                <declaration name="retVal" type="List&amp;lt;BasicMatrix&amp;lt;N&amp;gt;&amp;gt;" line="531"/>
                <scope line="533"/>
            </method>
            <method name="toListOfElements" type="List&lt;N&gt;" line="540"/>
            <method name="toListOfRows" type="List&lt;BasicMatrix&lt;N&gt;&gt;" line="544">
                <declaration name="tmpRowDim" type="int" line="546"/>
                <declaration name="retVal" type="List&amp;lt;BasicMatrix&amp;lt;N&amp;gt;&amp;gt;" line="548"/>
                <scope line="550"/>
            </method>
            <method name="toPrimitiveStore" type="PhysicalStore&lt;Double&gt;" line="557"/>
            <method name="toScalar" type="Scalar&lt;N&gt;" line="561">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="toString" type="String" line="566"/>
            <method name="transpose" type="I" line="570">
                <declaration name="retVal" type="MatrixStore&amp;lt;N&amp;gt;" line="572"/>
                <scope line="574"/>
                <scope line="576"/>
            </method>
            <method name="getComputedEigenvalue" type="Eigenvalue&lt;N&gt;" line="583">
                <declaration name="retVal" type="Eigenvalue&amp;lt;N&amp;gt;" line="585"/>
                <scope line="587"/>
            </method>
            <method name="getComputedLU" type="LU&lt;N&gt;" line="594">
                <declaration name="retVal" type="LU&amp;lt;N&amp;gt;" line="596"/>
                <scope line="598"/>
            </method>
            <method name="getComputedQR" type="QR&lt;N&gt;" line="605">
                <declaration name="retVal" type="QR&amp;lt;N&amp;gt;" line="607"/>
                <scope line="609"/>
            </method>
            <method name="getComputedSingularValue" type="SingularValue&lt;N&gt;" line="616">
                <declaration name="retVal" type="SingularValue&amp;lt;N&amp;gt;" line="618"/>
                <scope line="620"/>
            </method>
            <method name="getEigenvalue" type="Eigenvalue&lt;N&gt;" line="627">
                <scope line="629"/>
            </method>
            <method name="getLU" type="LU&lt;N&gt;" line="636">
                <scope line="637"/>
            </method>
            <method name="getQR" type="QR&lt;N&gt;" line="643">
                <scope line="644"/>
            </method>
            <method name="getSingularValue" type="SingularValue&lt;N&gt;" line="650">
                <scope line="651"/>
            </method>
            <method name="getFactory" type="MatrixFactory&lt;N,I&gt;" line="657"/>
            <method name="getPhysicalFactory" type="PhysicalStore.Factory&lt;N,? extends PhysicalStore&lt;N&gt;&gt;" line="659"/>
            <method name="getStore" type="MatrixStore&lt;N&gt;" line="663"/>
            <method name="getStoreFrom" type="MatrixStore&lt;N&gt;" line="667"/>
        </class>
    </source>