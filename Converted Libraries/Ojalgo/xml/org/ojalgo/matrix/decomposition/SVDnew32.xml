<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.decomposition">
        <import package="java.math.BigDecimal"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.array.Array1D"/>
        <import package="org.ojalgo.array.SimpleArray"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.store.BigDenseStore"/>
        <import package="org.ojalgo.matrix.store.ComplexDenseStore"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PrimitiveDenseStore"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="SVDnew32" line="14">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <extends class="SingularValueDecomposition">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </extends>
            <javadoc line="14">
                Orginalet, sedan ett tag Based on SVDnew2, but with transposing so that calculations are always made on a matrix that
                  &quot;isAspectRationNormal&quot;. Based on SVDnew5, but with Rotation replaced by the new alternative.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <class name="Big" line="20">
                <extends class="SVDnew32">
                    <type_params>
                        <type_param name="BigDecimal"/>
                    </type_params>
                </extends>
                <method name="Big" type="constructor" line="21"/>
            </class>
            <class name="Complex" line="25">
                <extends class="SVDnew32">
                    <type_params>
                        <type_param name="ComplexNumber"/>
                    </type_params>
                </extends>
                <method name="Complex" type="constructor" line="26"/>
            </class>
            <class name="Primitive" line="30">
                <extends class="SVDnew32">
                    <type_params>
                        <type_param name="Double"/>
                    </type_params>
                </extends>
                <method name="Primitive" type="constructor" line="31"/>
            </class>
            <method name="doCase1" type="void" line="35">
                <params>
                    <param name="s" type="double[]"/>
                    <param name="e" type="double[]"/>
                    <param name="p" type="int"/>
                    <param name="k" type="int"/>
                    <param name="aQ2" type="DecompositionStore<?>"/>
                </params>
                <declaration name="f" type="double" line="36"/>
                <declaration name="t" type="double" line="38"/>
                <declaration name="cs" type="double" line="39"/>
                <declaration name="sn" type="double" line="40"/>
                <scope line="41">
                    <scope line="46"/>
                    <scope line="50"/>
                </scope>
            </method>
            <method name="doCase2" type="void" line="55">
                <params>
                    <param name="s" type="double[]"/>
                    <param name="e" type="double[]"/>
                    <param name="p" type="int"/>
                    <param name="k" type="int"/>
                    <param name="aQ1" type="DecompositionStore<?>"/>
                </params>
                <declaration name="f" type="double" line="56"/>
                <declaration name="t" type="double" line="58"/>
                <declaration name="cs" type="double" line="59"/>
                <declaration name="sn" type="double" line="60"/>
                <scope line="61">
                    <scope line="68"/>
                </scope>
            </method>
            <method name="doCase3" type="void" line="73">
                <params>
                    <param name="s" type="double[]"/>
                    <param name="e" type="double[]"/>
                    <param name="p" type="int"/>
                    <param name="k" type="int"/>
                    <param name="aQ1" type="DecompositionStore<?>"/>
                    <param name="aQ2" type="DecompositionStore<?>"/>
                </params>
                <declaration name="indPm1" type="int" line="74"/>
                <declaration name="indPm2" type="int" line="75"/>
                <declaration name="scale" type="double" line="76"/>
                <declaration name="sPm1" type="double" line="77"/>
                <declaration name="sPm2" type="double" line="78"/>
                <declaration name="ePm2" type="double" line="79"/>
                <declaration name="sK" type="double" line="80"/>
                <declaration name="eK" type="double" line="81"/>
                <declaration name="b" type="double" line="82"/>
                <declaration name="c" type="double" line="83"/>
                <declaration name="shift" type="double" line="84"/>
                <scope line="85"/>
                <declaration name="f" type="double" line="89"/>
                <declaration name="g" type="double" line="90"/>
                <declaration name="t" type="double" line="91"/>
                <declaration name="cs" type="double" line="92"/>
                <declaration name="sn" type="double" line="93"/>
                <scope line="94">
                    <scope line="98"/>
                    <scope line="105"/>
                    <scope line="116"/>
                </scope>
            </method>
            <method name="doCase4" type="void" line="122">
                <params>
                    <param name="s" type="double[]"/>
                    <param name="k" type="int"/>
                    <param name="aQ1" type="DecompositionStore<?>"/>
                    <param name="aQ2" type="DecompositionStore<?>"/>
                </params>
                <declaration name="tmpDiagDim" type="int" line="123"/>
                <declaration name="tmpSk" type="double" line="124"/>
                <scope line="125">
                    <scope line="127"/>
                </scope>
                <scope line="131"/>
                <declaration name="tmpK" type="int" line="134"/>
                <scope line="135">
                    <scope line="136"/>
                    <declaration name="t" type="double" line="139"/>
                    <scope line="142"/>
                    <scope line="145"/>
                </scope>
            </method>
            <method name="toDiagonal" type="Array1D<Double>" line="151">
                <params>
                    <param name="bidiagonal" type="DiagonalAccess<?>"/>
                    <param name="aQ1" type="DecompositionStore<?>"/>
                    <param name="aQ2" type="DecompositionStore<?>"/>
                </params>
                <declaration name="tmpDiagDim" type="int" line="152"/>
                <declaration name="s" type="double[]" line="153"/>
                <declaration name="e" type="double[]" line="154"/>
                <declaration name="tmpOffLength" type="int" line="155"/>
                <scope line="156"/>
                <declaration name="kase" type="int" line="159"/>
                <declaration name="k" type="int" line="160"/>
                <declaration name="p" type="int" line="161"/>
                <scope line="162">
                    <scope line="165">
                        <scope line="166"/>
                        <scope line="169"/>
                    </scope>
                    <scope line="174"/>
                    <scope line="177">
                        <declaration name="ks" type="int" line="178"/>
                        <scope line="179">
                            <scope line="180"/>
                            <declaration name="t" type="double" line="183"/>
                            <scope line="184"/>
                        </scope>
                        <scope line="189"/>
                        <scope line="192"/>
                        <scope line="195"/>
                    </scope>
                </scope>
            </method>
            <method name="SVDnew32" type="constructor" line="221">
                <params>
                    <param name="aFactory" type="DecompositionStore.Factory<N,? extends DecompositionStore<N>>"/>
                    <param name="aBidiagonal" type="BidiagonalDecomposition<N>"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="224">
                <params>
                    <param name="other" type="MatrixStore<N>"/>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="isOrdered" type="boolean" line="227"/>
            <method name="isSolvable" type="boolean" line="230"/>
            <method name="solve" type="MatrixStore<N>" line="233">
                <params>
                    <param name="rhs" type="Access2D<N>"/>
                </params>
            </method>
            <method name="doCompute" type="boolean" line="236">
                <params>
                    <param name="aMtrx" type="Access2D<?>"/>
                    <param name="singularValuesOnly" type="boolean"/>
                    <param name="fullSize" type="boolean"/>
                </params>
                <declaration name="tmpBidiagonal" type="DiagonalAccess&lt;N&gt;" line="238"/>
                <declaration name="tmpQ1" type="DecompositionStore&lt;N&gt;" line="239"/>
                <declaration name="tmpQ2" type="DecompositionStore&lt;N&gt;" line="240"/>
                <declaration name="tmpDiagonal" type="Array1D&lt;Double&gt;" line="241"/>
            </method>
            <method name="makeD" type="MatrixStore<N>" line="245"/>
            <method name="makeQ1" type="MatrixStore<N>" line="248"/>
            <method name="makeQ2" type="MatrixStore<N>" line="251"/>
            <method name="makeSingularValues" type="Array1D<Double>" line="254"/>
        </class>
    </source>