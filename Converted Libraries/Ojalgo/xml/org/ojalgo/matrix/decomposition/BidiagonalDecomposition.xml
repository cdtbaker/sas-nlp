<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.decomposition">
        <import package="java.math.BigDecimal"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.array.Array1D"/>
        <import package="org.ojalgo.array.Array2D"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.store.BigDenseStore"/>
        <import package="org.ojalgo.matrix.store.ComplexDenseStore"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore"/>
        <import package="org.ojalgo.matrix.store.PrimitiveDenseStore"/>
        <import package="org.ojalgo.matrix.transformation.Householder"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="BidiagonalDecomposition" line="41">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <extends class="InPlaceDecomposition">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </extends>
            <implements interface="Bidiagonal">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <javadoc line="41">
                You create instances of (some subclass of) this class by calling one of the static factory methods:{@linkplain #makeBig()}, {@linkplain #makeComplex()} or {@linkplain #makePrimitive()}.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <class name="Big" line="49">
                <extends class="BidiagonalDecomposition">
                    <type_params>
                        <type_param name="BigDecimal"/>
                    </type_params>
                </extends>
                <method name="Big" type="constructor" line="51"/>
                <method name="makeReal" type="Array1D&lt;BigDecimal&gt;[]" line="56"/>
            </class>
            <class name="Complex" line="62">
                <extends class="BidiagonalDecomposition">
                    <type_params>
                        <type_param name="ComplexNumber"/>
                    </type_params>
                </extends>
                <method name="Complex" type="constructor" line="64"/>
                <method name="makeReal" type="Array1D&lt;ComplexNumber&gt;[]" line="69">
                    <declaration name="tmpDiagonalAccessD" type="DiagonalAccess&amp;lt;ComplexNumber&amp;gt;" line="71"/>
                    <declaration name="tmpInitDiagQ1" type="Array1D&amp;lt;ComplexNumber&amp;gt;" line="73"/>
                    <declaration name="tmpInitDiagQ2" type="Array1D&amp;lt;ComplexNumber&amp;gt;" line="76"/>
                    <declaration name="tmpUpper" type="boolean" line="79"/>
                    <scope line="81">
                        <declaration name="tmpMainDiagonal" type="Array1D&amp;lt;ComplexNumber&amp;gt;" line="83"/>
                        <declaration name="tmpSuperdiagonal" type="Array1D&amp;lt;ComplexNumber&amp;gt;" line="84"/>
                        <declaration name="tmpLimit" type="int" line="86"/>
                        <scope line="87">
                            <scope line="89">
                                <declaration name="tmpSignum" type="ComplexNumber" line="90"/>
                            </scope>
                            <scope line="96">
                                <declaration name="tmpSignum" type="ComplexNumber" line="97"/>
                            </scope>
                        </scope>
                        <scope line="104">
                            <declaration name="tmpSignum" type="ComplexNumber" line="105"/>
                        </scope>
                    </scope>
                    <scope line="110">
                        <declaration name="tmpMainDiagonal" type="Array1D&amp;lt;ComplexNumber&amp;gt;" line="112"/>
                        <declaration name="tmpSubdiagonal" type="Array1D&amp;lt;ComplexNumber&amp;gt;" line="113"/>
                        <declaration name="tmpLimit" type="int" line="115"/>
                        <scope line="116">
                            <scope line="118">
                                <declaration name="tmpSignum" type="ComplexNumber" line="119"/>
                            </scope>
                            <scope line="125">
                                <declaration name="tmpSignum" type="ComplexNumber" line="126"/>
                            </scope>
                        </scope>
                        <scope line="133">
                            <declaration name="tmpSignum" type="ComplexNumber" line="134"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="Primitive" line="146">
                <extends class="BidiagonalDecomposition">
                    <type_params>
                        <type_param name="Double"/>
                    </type_params>
                </extends>
                <method name="Primitive" type="constructor" line="148"/>
                <method name="makeReal" type="Array1D&lt;Double&gt;[]" line="153"/>
            </class>
            <method name="make" type="Bidiagonal&lt;N&gt;" line="160">
                <params>
                    <param name="aTypical" type="Access2D&lt;N&gt;"/>
                </params>
                <declaration name="tmpNumber" type="N" line="162"/>
                <scope line="164"/>
                <scope line="166"/>
                <scope line="168"/>
                <scope line="170"/>
            </method>
            <method name="makeBig" type="Bidiagonal&lt;BigDecimal&gt;" line="175"/>
            <method name="makeComplex" type="Bidiagonal&lt;ComplexNumber&gt;" line="179"/>
            <method name="makePrimitive" type="Bidiagonal&lt;Double&gt;" line="183"/>
            <declaration name="myDiagonalAccessD" type="DiagonalAccess&amp;lt;N&amp;gt;" line="187"/>
            <declaration name="myFullSize" type="boolean" line="189"/>
            <declaration name="myInitDiagQ1" type="Array1D&amp;lt;N&amp;gt;" line="191"/>
            <declaration name="myInitDiagQ2" type="Array1D&amp;lt;N&amp;gt;" line="192"/>
            <declaration name="myQ1" type="DecompositionStore&amp;lt;N&amp;gt;" line="194"/>
            <declaration name="myQ2" type="DecompositionStore&amp;lt;N&amp;gt;" line="195"/>
            <method name="BidiagonalDecomposition" type="constructor" line="197">
                <params>
                    <param name="aFactory" type="DecompositionStore.Factory&lt;N,? extends DecompositionStore&lt;N&gt;&gt;"/>
                </params>
            </method>
            <method name="compute" type="boolean" line="201">
                <params>
                    <param name="matrix" type="Access2D&lt;?&gt;"/>
                </params>
            </method>
            <method name="compute" type="boolean" line="205">
                <params>
                    <param name="matrix" type="Access2D&lt;?&gt;"/>
                    <param name="fullSize" type="boolean"/>
                </params>
                <declaration name="tmpStore" type="DecompositionStore&amp;lt;N&amp;gt;" line="211"/>
                <declaration name="tmpRowDim" type="int" line="213"/>
                <declaration name="tmpColDim" type="int" line="214"/>
                <declaration name="tmpLimit" type="int" line="216"/>
                <declaration name="tmpHouseholderRow" type="Householder&amp;lt;N&amp;gt;" line="218"/>
                <declaration name="tmpHouseholderCol" type="Householder&amp;lt;N&amp;gt;" line="219"/>
                <scope line="221">
                    <scope line="223">
                        <scope line="225"/>
                        <scope line="229"/>
                    </scope>
                    <declaration name="tmpInitDiags" type="Array1D&amp;lt;N&amp;gt;[]" line="234"/>
                    <scope line="235"/>
                </scope>
                <scope line="240">
                    <scope line="242">
                        <scope line="244"/>
                        <scope line="248"/>
                    </scope>
                    <declaration name="tmpInitDiags" type="Array1D&amp;lt;N&amp;gt;[]" line="253"/>
                    <scope line="254"/>
                </scope>
            </method>
            <method name="equals" type="boolean" line="264">
                <params>
                    <param name="aStore" type="MatrixStore&lt;N&gt;"/>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="getD" type="MatrixStore&lt;N&gt;" line="268"/>
            <method name="getQ1" type="MatrixStore&lt;N&gt;" line="272">
                <scope line="273"/>
            </method>
            <method name="getQ2" type="MatrixStore&lt;N&gt;" line="279">
                <scope line="280"/>
            </method>
            <method name="isFullSize" type="boolean" line="286"/>
            <method name="isSolvable" type="boolean" line="290"/>
            <method name="isUpper" type="boolean" line="294"/>
            <method name="reconstruct" type="MatrixStore&lt;N&gt;" line="298"/>
            <method name="reset" type="void" line="303"/>
            <method name="makeDiagonalAccessD" type="DiagonalAccess&lt;N&gt;" line="317">
                <declaration name="tmpArray2D" type="Array2D&amp;lt;N&amp;gt;" line="319"/>
                <declaration name="tmpMain" type="Array1D&amp;lt;N&amp;gt;" line="321"/>
                <declaration name="tmpSuper" type="Array1D&amp;lt;N&amp;gt;" line="322"/>
                <declaration name="tmpSub" type="Array1D&amp;lt;N&amp;gt;" line="323"/>
                <scope line="325"/>
                <scope line="328"/>
            </method>
            <javadoc line="336">
                Will solve the equation system [aMtrxV][aMtrxD][X]=[aMtrxSimilar]&lt;sup&gt;T&lt;/sup&gt; and overwrite the solution [X] to
                  [aV].                
            </javadoc>
            <method name="solve" type="void" line="340">
                <params>
                    <param name="aMtrxV" type="PhysicalStore&lt;N&gt;"/>
                    <param name="aMtrxD" type="MatrixStore&lt;N&gt;"/>
                    <param name="aMtrxSimilar" type="DiagonalAccess&lt;N&gt;"/>
                </params>
                <declaration name="tmpDim" type="int" line="342"/>
                <declaration name="tmpLim" type="int" line="343"/>
                <declaration name="tmpSingular" type="double" line="345"/>
                <scope line="346">
                    <scope line="348">
                        <scope line="349"/>
                    </scope>
                    <scope line="352">
                        <scope line="353"/>
                    </scope>
                </scope>
            </method>
            <method name="solve2" type="DecompositionStore&lt;N&gt;" line="363">
                <params>
                    <param name="aMtrxV" type="PhysicalStore&lt;N&gt;"/>
                    <param name="aMtrxD" type="MatrixStore&lt;N&gt;"/>
                    <param name="aMtrxSimilar" type="DiagonalAccess&lt;N&gt;"/>
                </params>
                <declaration name="tmpDim" type="int" line="365"/>
                <declaration name="tmpLim" type="int" line="366"/>
                <declaration name="retVal" type="DecompositionStore&amp;lt;N&amp;gt;" line="368"/>
                <declaration name="tmpSingular" type="double" line="370"/>
                <scope line="371">
                    <scope line="373">
                        <scope line="374"/>
                    </scope>
                    <scope line="377">
                        <scope line="378"/>
                    </scope>
                </scope>
            </method>
            <method name="makeQ1" type="DecompositionStore&lt;N&gt;" line="390">
                <declaration name="tmpHouseholderReference" type="DecompositionStore.HouseholderReference&amp;lt;N&amp;gt;" line="392"/>
                <declaration name="tmpRowDim" type="int" line="394"/>
                <declaration name="tmpMinDim" type="int" line="395"/>
                <declaration name="retVal" type="DecompositionStore&amp;lt;N&amp;gt;" line="397"/>
                <scope line="398">
                    <scope line="400"/>
                </scope>
                <scope line="403"/>
                <declaration name="tmpUpper" type="boolean" line="407"/>
                <scope line="408">
                    <scope line="413"/>
                </scope>
            </method>
            <method name="makeQ2" type="DecompositionStore&lt;N&gt;" line="421">
                <declaration name="tmpHouseholderReference" type="DecompositionStore.HouseholderReference&amp;lt;N&amp;gt;" line="423"/>
                <declaration name="tmpMinDim" type="int" line="425"/>
                <declaration name="tmpColDim" type="int" line="426"/>
                <declaration name="retVal" type="DecompositionStore&amp;lt;N&amp;gt;" line="428"/>
                <scope line="429">
                    <scope line="431"/>
                </scope>
                <scope line="434"/>
                <declaration name="tmpUpper" type="boolean" line="438"/>
                <scope line="439">
                    <scope line="444"/>
                </scope>
            </method>
            <method name="getDiagonalAccessD" type="DiagonalAccess&lt;N&gt;" line="452">
                <scope line="453"/>
            </method>
            <method name="makeReal" type="Array1D&lt;N&gt;[]" line="459"/>
        </class>
    </source>