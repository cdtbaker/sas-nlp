<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.decomposition">
        <import package="java.math.BigDecimal"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.array.Array1D"/>
        <import package="org.ojalgo.array.Array2D"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.store.BigDenseStore"/>
        <import package="org.ojalgo.matrix.store.ComplexDenseStore"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore"/>
        <import package="org.ojalgo.matrix.store.PrimitiveDenseStore"/>
        <import package="org.ojalgo.matrix.transformation.Householder"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="BidiagonalDecomposition" line="17">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <extends class="InPlaceDecomposition">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </extends>
            <implements interface="Bidiagonal">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <javadoc line="17">
                You create instances of (some subclass of) this class by calling one
                  of the static factory methods: {@linkplain #makeBig()},{@linkplain #makeComplex()} or {@linkplain #makePrimitive()}.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <class name="Big" line="23">
                <extends class="BidiagonalDecomposition">
                    <type_params>
                        <type_param name="BigDecimal"/>
                    </type_params>
                </extends>
                <method name="Big" type="constructor" line="24"/>
                <method name="makeReal" type="Array1D<BigDecimal>[]" line="27"/>
            </class>
            <class name="Complex" line="31">
                <extends class="BidiagonalDecomposition">
                    <type_params>
                        <type_param name="ComplexNumber"/>
                    </type_params>
                </extends>
                <method name="Complex" type="constructor" line="32"/>
                <method name="makeReal" type="Array1D<ComplexNumber>[]" line="35">
                    <declaration name="tmpDiagonalAccessD" type="DiagonalAccess&lt;ComplexNumber&gt;" line="36"/>
                    <declaration name="tmpInitDiagQ1" type="Array1D&lt;ComplexNumber&gt;" line="37"/>
                    <declaration name="tmpInitDiagQ2" type="Array1D&lt;ComplexNumber&gt;" line="39"/>
                    <declaration name="tmpUpper" type="boolean" line="41"/>
                    <scope line="42">
                        <declaration name="tmpMainDiagonal" type="Array1D&lt;ComplexNumber&gt;" line="43"/>
                        <declaration name="tmpSuperdiagonal" type="Array1D&lt;ComplexNumber&gt;" line="44"/>
                        <declaration name="tmpLimit" type="int" line="45"/>
                        <scope line="46">
                            <scope line="47">
                                <declaration name="tmpSignum" type="ComplexNumber" line="48"/>
                            </scope>
                            <scope line="53">
                                <declaration name="tmpSignum" type="ComplexNumber" line="54"/>
                            </scope>
                        </scope>
                        <scope line="60">
                            <declaration name="tmpSignum" type="ComplexNumber" line="61"/>
                        </scope>
                    </scope>
                    <scope line="66">
                        <declaration name="tmpMainDiagonal" type="Array1D&lt;ComplexNumber&gt;" line="67"/>
                        <declaration name="tmpSubdiagonal" type="Array1D&lt;ComplexNumber&gt;" line="68"/>
                        <declaration name="tmpLimit" type="int" line="69"/>
                        <scope line="70">
                            <scope line="71">
                                <declaration name="tmpSignum" type="ComplexNumber" line="72"/>
                            </scope>
                            <scope line="77">
                                <declaration name="tmpSignum" type="ComplexNumber" line="78"/>
                            </scope>
                        </scope>
                        <scope line="84">
                            <declaration name="tmpSignum" type="ComplexNumber" line="85"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="Primitive" line="93">
                <extends class="BidiagonalDecomposition">
                    <type_params>
                        <type_param name="Double"/>
                    </type_params>
                </extends>
                <method name="Primitive" type="constructor" line="94"/>
                <method name="makeReal" type="Array1D<Double>[]" line="97"/>
            </class>
            <method name="make" type="Bidiagonal<N>" line="101">
                <params>
                    <param name="aTypical" type="Access2D<N>"/>
                </params>
                <declaration name="tmpNumber" type="N" line="102"/>
                <scope line="103"/>
                <scope line="106"/>
                <scope line="109"/>
                <scope line="112"/>
            </method>
            <method name="makeBig" type="Bidiagonal<BigDecimal>" line="116"/>
            <method name="makeComplex" type="Bidiagonal<ComplexNumber>" line="119"/>
            <method name="makePrimitive" type="Bidiagonal<Double>" line="122"/>
            <declaration name="myDiagonalAccessD" type="DiagonalAccess&lt;N&gt;" line="125"/>
            <declaration name="myFullSize" type="boolean" line="126"/>
            <declaration name="myInitDiagQ1" type="Array1D&lt;N&gt;" line="127"/>
            <declaration name="myInitDiagQ2" type="Array1D&lt;N&gt;" line="128"/>
            <declaration name="myQ1" type="DecompositionStore&lt;N&gt;" line="129"/>
            <declaration name="myQ2" type="DecompositionStore&lt;N&gt;" line="130"/>
            <method name="BidiagonalDecomposition" type="constructor" line="131">
                <params>
                    <param name="aFactory" type="DecompositionStore.Factory<N,? extends DecompositionStore<N>>"/>
                </params>
            </method>
            <method name="compute" type="boolean" line="134">
                <params>
                    <param name="matrix" type="Access2D<?>"/>
                </params>
            </method>
            <method name="compute" type="boolean" line="137">
                <params>
                    <param name="matrix" type="Access2D<?>"/>
                    <param name="fullSize" type="boolean"/>
                </params>
                <declaration name="tmpStore" type="DecompositionStore&lt;N&gt;" line="140"/>
                <declaration name="tmpRowDim" type="int" line="141"/>
                <declaration name="tmpColDim" type="int" line="142"/>
                <declaration name="tmpLimit" type="int" line="143"/>
                <declaration name="tmpHouseholderRow" type="Householder&lt;N&gt;" line="144"/>
                <declaration name="tmpHouseholderCol" type="Householder&lt;N&gt;" line="145"/>
                <scope line="146">
                    <scope line="147">
                        <scope line="148"/>
                        <scope line="151"/>
                    </scope>
                    <declaration name="tmpInitDiags" type="Array1D&lt;N&gt;[]" line="155"/>
                    <scope line="156"/>
                </scope>
                <scope line="161">
                    <scope line="162">
                        <scope line="163"/>
                        <scope line="166"/>
                    </scope>
                    <declaration name="tmpInitDiags" type="Array1D&lt;N&gt;[]" line="170"/>
                    <scope line="171"/>
                </scope>
            </method>
            <method name="equals" type="boolean" line="178">
                <params>
                    <param name="aStore" type="MatrixStore<N>"/>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="getD" type="MatrixStore<N>" line="181"/>
            <method name="getQ1" type="MatrixStore<N>" line="184">
                <scope line="185"/>
            </method>
            <method name="getQ2" type="MatrixStore<N>" line="190">
                <scope line="191"/>
            </method>
            <method name="isFullSize" type="boolean" line="196"/>
            <method name="isSolvable" type="boolean" line="199"/>
            <method name="isUpper" type="boolean" line="202"/>
            <method name="reconstruct" type="MatrixStore<N>" line="205"/>
            <method name="reset" type="void" line="208"/>
            <method name="makeDiagonalAccessD" type="DiagonalAccess<N>" line="217">
                <declaration name="tmpArray2D" type="Array2D&lt;N&gt;" line="218"/>
                <declaration name="tmpMain" type="Array1D&lt;N&gt;" line="219"/>
                <declaration name="tmpSuper" type="Array1D&lt;N&gt;" line="220"/>
                <declaration name="tmpSub" type="Array1D&lt;N&gt;" line="221"/>
                <scope line="222"/>
                <scope line="226"/>
            </method>
            <javadoc line="232">
                Will solve the equation system [aMtrxV][aMtrxD][X]=[aMtrxSimilar]&lt;sup&gt;T&lt;/sup&gt; and overwrite the solution [X] to [aV].                
            </javadoc>
            <method name="solve" type="void" line="235">
                <params>
                    <param name="aMtrxV" type="PhysicalStore<N>"/>
                    <param name="aMtrxD" type="MatrixStore<N>"/>
                    <param name="aMtrxSimilar" type="DiagonalAccess<N>"/>
                </params>
                <declaration name="tmpDim" type="int" line="236"/>
                <declaration name="tmpLim" type="int" line="237"/>
                <declaration name="tmpSingular" type="double" line="238"/>
                <scope line="239">
                    <scope line="241">
                        <scope line="242"/>
                    </scope>
                    <scope line="246">
                        <scope line="247"/>
                    </scope>
                </scope>
            </method>
            <method name="solve2" type="DecompositionStore<N>" line="254">
                <params>
                    <param name="aMtrxV" type="PhysicalStore<N>"/>
                    <param name="aMtrxD" type="MatrixStore<N>"/>
                    <param name="aMtrxSimilar" type="DiagonalAccess<N>"/>
                </params>
                <declaration name="tmpDim" type="int" line="255"/>
                <declaration name="tmpLim" type="int" line="256"/>
                <declaration name="retVal" type="DecompositionStore&lt;N&gt;" line="257"/>
                <declaration name="tmpSingular" type="double" line="258"/>
                <scope line="259">
                    <scope line="261">
                        <scope line="262"/>
                    </scope>
                    <scope line="266">
                        <scope line="267"/>
                    </scope>
                </scope>
            </method>
            <method name="makeQ1" type="DecompositionStore<N>" line="275">
                <declaration name="tmpHouseholderReference" type="DecompositionStore.HouseholderReference&lt;N&gt;" line="276"/>
                <declaration name="tmpRowDim" type="int" line="277"/>
                <declaration name="tmpMinDim" type="int" line="278"/>
                <declaration name="retVal" type="DecompositionStore&lt;N&gt;" line="279"/>
                <scope line="280">
                    <scope line="282"/>
                </scope>
                <scope line="286"/>
                <declaration name="tmpUpper" type="boolean" line="289"/>
                <scope line="290">
                    <scope line="293"/>
                </scope>
            </method>
            <method name="makeQ2" type="DecompositionStore<N>" line="299">
                <declaration name="tmpHouseholderReference" type="DecompositionStore.HouseholderReference&lt;N&gt;" line="300"/>
                <declaration name="tmpMinDim" type="int" line="301"/>
                <declaration name="tmpColDim" type="int" line="302"/>
                <declaration name="retVal" type="DecompositionStore&lt;N&gt;" line="303"/>
                <scope line="304">
                    <scope line="306"/>
                </scope>
                <scope line="310"/>
                <declaration name="tmpUpper" type="boolean" line="313"/>
                <scope line="314">
                    <scope line="317"/>
                </scope>
            </method>
            <method name="getDiagonalAccessD" type="DiagonalAccess<N>" line="323">
                <scope line="324"/>
            </method>
            <method name="makeReal" type="Array1D<N>[]" line="329"/>
        </class>
    </source>