<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.decomposition">
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <interface name="Bidiagonal">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <implements interface="MatrixDecomposition">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <javadoc line="4">
                A general matrix [A] can be factorized by similarity
                  transformations into the form [A]=[Q1][D][Q2]&lt;sup&gt;-1&lt;/sup&gt; where:
                  &lt;ul&gt;
                  &lt;li&gt;[A] (m-by-n) is any, real or complex, matrix&lt;/li&gt;
                  &lt;li&gt;[D] (r-by-r) or (m-by-n) is, upper or lower, bidiagonal&lt;/li&gt;
                  &lt;li&gt;[Q1] (m-by-r) or (m-by-m) is orthogonal&lt;/li&gt;
                  &lt;li&gt;[Q2] (n-by-r) or (n-by-n) is orthogonal&lt;/li&gt;
                  &lt;li&gt;r = min(m,n)&lt;/li&gt;
                  &lt;/ul&gt;                
                <author>
                    apete                    
                </author>
            </javadoc>
            <method name="compute" type="boolean" line="17"/>
            <javadoc line="17">
                @param matrix A matrix to decompose                
                <return>
                    true if the computation suceeded; false if not                    
                </return>
            </javadoc>
            <method name="getD" type="MatrixStore<N>" line="22"/>
            <method name="getQ1" type="MatrixStore<N>" line="23"/>
            <method name="getQ2" type="MatrixStore<N>" line="24"/>
            <method name="isUpper" type="boolean" line="25"/>
        </interface>
    </source>