<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.decomposition">
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.array.Array1D"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PrimitiveDenseStore"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="SchurDecomposition" line="9">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <extends class="InPlaceDecomposition">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </extends>
            <implements interface="Schur">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <javadoc line="9">
                You create instances of (some subclass of) this class by calling
                  the static factory method {@linkplain #makePrimitive()}.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <class name="SchurResult" line="15">
                <type_params>
                    <type_param name="N"/>
                </type_params>
                <extends class="Object"/>
                <declaration name="myDiagonal" type="Array1D&lt;ComplexNumber&gt;" line="16"/>
                <declaration name="myQ" type="MatrixStore&lt;N&gt;" line="17"/>
                <method name="SchurResult" type="constructor" line="18">
                    <params>
                        <param name="aDiagonal" type="Array1D<ComplexNumber>"/>
                        <param name="aQ" type="MatrixStore<N>"/>
                    </params>
                </method>
                <method name="SchurResult" type="constructor" line="23"/>
                <method name="getDiagonal" type="Array1D<ComplexNumber>" line="26"/>
                <method name="getQ" type="MatrixStore<N>" line="29"/>
            </class>
            <class name="Primitive" line="33">
                <extends class="SchurDecomposition">
                    <type_params>
                        <type_param name="Double"/>
                    </type_params>
                </extends>
                <method name="Primitive" type="constructor" line="34"/>
            </class>
            <method name="make" type="Schur<N>" line="38">
                <params>
                    <param name="aTypical" type="Access2D<N>"/>
                </params>
                <declaration name="tmpNumber" type="N" line="39"/>
                <scope line="40"/>
                <scope line="43"/>
            </method>
            <method name="makePrimitive" type="Schur<Double>" line="47"/>
            <declaration name="myDiagonal" type="Array1D&lt;ComplexNumber&gt;" line="50"/>
            <declaration name="myQ" type="MatrixStore&lt;N&gt;" line="51"/>
            <method name="SchurDecomposition" type="constructor" line="52">
                <params>
                    <param name="aFactory" type="DecompositionStore.Factory<N,? extends DecompositionStore<N>>"/>
                </params>
            </method>
            <method name="compute" type="boolean" line="55">
                <params>
                    <param name="matrix" type="Access2D<?>"/>
                </params>
                <declaration name="tmpDiagDim" type="int" line="58"/>
                <declaration name="tmpQ" type="DecompositionStore&lt;N&gt;" line="59"/>
                <declaration name="tmpDiagonal" type="Array1D&lt;ComplexNumber&gt;" line="60"/>
            </method>
            <method name="equals" type="boolean" line="65">
                <params>
                    <param name="other" type="MatrixStore<N>"/>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="getDiagonal" type="Array1D<ComplexNumber>" line="68"/>
            <method name="getQ" type="MatrixStore<N>" line="71"/>
            <method name="getU" type="MatrixStore<N>" line="74"/>
            <method name="isFullSize" type="boolean" line="77"/>
            <method name="isOrdered" type="boolean" line="80"/>
            <method name="isSolvable" type="boolean" line="83"/>
            <method name="reconstruct" type="MatrixStore<N>" line="86"/>
            <method name="reset" type="void" line="89"/>
            <method name="setDiagonal" type="void" line="94">
                <params>
                    <param name="newDiagonal" type="Array1D<ComplexNumber>"/>
                </params>
            </method>
            <method name="setQ" type="void" line="97">
                <params>
                    <param name="newQ" type="MatrixStore<N>"/>
                </params>
            </method>
        </class>
    </source>