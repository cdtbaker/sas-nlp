<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.decomposition">
        <import package="java.math.BigDecimal"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="java.util.concurrent.Callable"/>
        <import package="java.util.concurrent.ExecutionException"/>
        <import package="java.util.concurrent.Future"/>
        <import package="org.ojalgo.ProgrammingError"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.array.Array1D"/>
        <import package="org.ojalgo.array.Array2D"/>
        <import package="org.ojalgo.concurrent.DaemonPoolExecutor"/>
        <import package="org.ojalgo.constant.BigMath"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.BigFunction"/>
        <import package="org.ojalgo.function.ComplexFunction"/>
        <import package="org.ojalgo.function.PrimitiveFunction"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.store.BigDenseStore"/>
        <import package="org.ojalgo.matrix.store.ComplexDenseStore"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore"/>
        <import package="org.ojalgo.matrix.store.PrimitiveDenseStore"/>
        <import package="org.ojalgo.matrix.transformation.Rotation"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="SVDold30" line="29">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <extends class="SingularValueDecomposition">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </extends>
            <javadoc line="29">
                Samma som orginalet, but without QR. Instead Householder directly. Wasn&apos;t faster. Try going directly to bidiagonal
                  instead. Based SVDold2, but with GenericRotaion replaced with Rotation.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <class name="Big" line="35">
                <extends class="SVDold30">
                    <type_params>
                        <type_param name="BigDecimal"/>
                    </type_params>
                </extends>
                <method name="Big" type="constructor" line="36"/>
                <method name="rotations" type="Rotation<BigDecimal>[]" line="39">
                    <params>
                        <param name="aStore" type="PhysicalStore<BigDecimal>"/>
                        <param name="aLowInd" type="int"/>
                        <param name="aHighInd" type="int"/>
                        <param name="retVal" type="Rotation<BigDecimal>[]"/>
                    </params>
                    <declaration name="a00" type="BigDecimal" line="40"/>
                    <declaration name="a01" type="BigDecimal" line="41"/>
                    <declaration name="a10" type="BigDecimal" line="42"/>
                    <declaration name="a11" type="BigDecimal" line="43"/>
                    <declaration name="x" type="BigDecimal" line="44"/>
                    <declaration name="y" type="BigDecimal" line="45"/>
                    <declaration name="t" type="BigDecimal" line="46"/>
                    <declaration name="cg" type="BigDecimal" line="47"/>
                    <declaration name="sg" type="BigDecimal" line="48"/>
                    <scope line="49"/>
                    <scope line="53"/>
                    <scope line="57"/>
                    <scope line="62"/>
                    <declaration name="b00" type="BigDecimal" line="67"/>
                    <declaration name="b11" type="BigDecimal" line="68"/>
                    <declaration name="b2" type="BigDecimal" line="69"/>
                    <declaration name="cj" type="BigDecimal" line="72"/>
                    <declaration name="sj" type="BigDecimal" line="73"/>
                </method>
            </class>
            <class name="Complex" line="79">
                <extends class="SVDold30">
                    <type_params>
                        <type_param name="ComplexNumber"/>
                    </type_params>
                </extends>
                <method name="Complex" type="constructor" line="80"/>
                <method name="rotations" type="Rotation<ComplexNumber>[]" line="83">
                    <params>
                        <param name="aStore" type="PhysicalStore<ComplexNumber>"/>
                        <param name="aLowInd" type="int"/>
                        <param name="aHighInd" type="int"/>
                        <param name="retVal" type="Rotation<ComplexNumber>[]"/>
                    </params>
                    <declaration name="a00" type="ComplexNumber" line="84"/>
                    <declaration name="a01" type="ComplexNumber" line="85"/>
                    <declaration name="a10" type="ComplexNumber" line="86"/>
                    <declaration name="a11" type="ComplexNumber" line="87"/>
                    <declaration name="x" type="ComplexNumber" line="88"/>
                    <declaration name="y" type="ComplexNumber" line="89"/>
                    <declaration name="t" type="ComplexNumber" line="90"/>
                    <declaration name="cg" type="ComplexNumber" line="91"/>
                    <declaration name="sg" type="ComplexNumber" line="92"/>
                    <scope line="93"/>
                    <scope line="97"/>
                    <scope line="101"/>
                    <scope line="106"/>
                    <declaration name="b00" type="ComplexNumber" line="111"/>
                    <declaration name="b11" type="ComplexNumber" line="112"/>
                    <declaration name="b2" type="ComplexNumber" line="113"/>
                    <declaration name="cj" type="ComplexNumber" line="116"/>
                    <declaration name="sj" type="ComplexNumber" line="117"/>
                </method>
            </class>
            <class name="Primitive" line="123">
                <extends class="SVDold30">
                    <type_params>
                        <type_param name="Double"/>
                    </type_params>
                </extends>
                <method name="Primitive" type="constructor" line="124"/>
                <method name="rotations" type="Rotation<Double>[]" line="127">
                    <params>
                        <param name="aStore" type="PhysicalStore<Double>"/>
                        <param name="aLowInd" type="int"/>
                        <param name="aHighInd" type="int"/>
                        <param name="retVal" type="Rotation<Double>[]"/>
                    </params>
                    <declaration name="a00" type="double" line="128"/>
                    <declaration name="a01" type="double" line="129"/>
                    <declaration name="a10" type="double" line="130"/>
                    <declaration name="a11" type="double" line="131"/>
                    <declaration name="x" type="double" line="132"/>
                    <declaration name="y" type="double" line="133"/>
                    <declaration name="t" type="double" line="134"/>
                    <declaration name="cg" type="double" line="135"/>
                    <declaration name="sg" type="double" line="136"/>
                    <scope line="137"/>
                    <scope line="141"/>
                    <scope line="145"/>
                    <scope line="150"/>
                    <declaration name="b00" type="double" line="155"/>
                    <declaration name="b11" type="double" line="156"/>
                    <declaration name="b2" type="double" line="157"/>
                    <declaration name="cj" type="double" line="160"/>
                    <declaration name="sj" type="double" line="161"/>
                </method>
            </class>
            <declaration name="myFutureQ1" type="Future&lt;PhysicalStore&lt;N&gt;&gt;" line="167"/>
            <declaration name="myFutureQ2" type="Future&lt;PhysicalStore&lt;N&gt;&gt;" line="168"/>
            <declaration name="myQ1Rotations" type="List&lt;Rotation&lt;N&gt;&gt;" line="169"/>
            <declaration name="myQ2Rotations" type="List&lt;Rotation&lt;N&gt;&gt;" line="170"/>
            <method name="SVDold30" type="constructor" line="171">
                <params>
                    <param name="aFactory" type="DecompositionStore.Factory<N,? extends DecompositionStore<N>>"/>
                    <param name="aBidiagonal" type="BidiagonalDecomposition<N>"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="174">
                <params>
                    <param name="aStore" type="MatrixStore<N>"/>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="isOrdered" type="boolean" line="177"/>
            <method name="isSolvable" type="boolean" line="180"/>
            <method name="reset" type="void" line="183"/>
            <method name="solve" type="MatrixStore<N>" line="190">
                <params>
                    <param name="rhs" type="Access2D<N>"/>
                </params>
            </method>
            <method name="doCompute" type="boolean" line="193">
                <params>
                    <param name="aStore" type="Access2D<?>"/>
                    <param name="singularValuesOnly" type="boolean"/>
                    <param name="fullSize" type="boolean"/>
                </params>
                <declaration name="tmpMinDim" type="int" line="194"/>
                <declaration name="tmpSimilar" type="DecompositionStore&lt;N&gt;" line="196"/>
                <declaration name="tmpRotations" type="Rotation&lt;N&gt;[]" line="199"/>
                <declaration name="tmpZero" type="N" line="200"/>
                <declaration name="tmpNotAllZeros" type="boolean" line="201"/>
                <scope line="202">
                    <declaration name="i" type="int" line="204"/>
                    <scope line="205">
                        <scope line="206">
                            <scope line="208"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="tmpSingularValue" type="double" line="221"/>
                <scope line="222">
                    <scope line="223"/>
                    <scope line="226"/>
                    <scope line="229">
                        <declaration name="tmpDiagSclr" type="Scalar&lt;N&gt;" line="230"/>
                        <declaration name="tmpSignum" type="N" line="231"/>
                    </scope>
                </scope>
                <anonymous_class line="239">
                    <method name="call" type="PhysicalStore<N>" line="240">
                        <declaration name="retVal" type="PhysicalStore&lt;N&gt;" line="241"/>
                        <declaration name="tmpRotations" type="List&lt;Rotation&lt;N&gt;&gt;" line="242"/>
                        <declaration name="tmpLimit" type="int" line="243"/>
                        <scope line="244"/>
                    </method>
                </anonymous_class>
                <anonymous_class line="251">
                    <method name="call" type="PhysicalStore<N>" line="252">
                        <declaration name="retVal" type="PhysicalStore&lt;N&gt;" line="253"/>
                        <declaration name="tmpRotations" type="List&lt;Rotation&lt;N&gt;&gt;" line="254"/>
                        <declaration name="tmpLimit" type="int" line="255"/>
                        <scope line="256"/>
                    </method>
                </anonymous_class>
            </method>
            <method name="extractSimilar" type="DiagonalAccess<N>" line="265">
                <params>
                    <param name="aStore" type="PhysicalStore<N>"/>
                    <param name="aNormalAspectRatio" type="boolean"/>
                </params>
                <declaration name="tmpArray2D" type="Array2D&lt;N&gt;" line="266"/>
                <declaration name="tmpMain" type="Array1D&lt;N&gt;" line="267"/>
                <scope line="268">
                    <declaration name="tmpSuper" type="Array1D&lt;N&gt;" line="269"/>
                </scope>
                <scope line="272">
                    <declaration name="tmpSub" type="Array1D&lt;N&gt;" line="273"/>
                </scope>
            </method>
            <method name="makeD" type="MatrixStore<N>" line="277"/>
            <method name="makeQ1" type="MatrixStore<N>" line="280">
                <scope line="281"/>
                <scope line="284"/>
                <scope line="287"/>
            </method>
            <method name="makeQ2" type="MatrixStore<N>" line="291">
                <scope line="292"/>
                <scope line="295"/>
                <scope line="298"/>
            </method>
            <method name="makeSingularValues" type="Array1D<Double>" line="302"/>
            <method name="rotations" type="Rotation<N>[]" line="305"/>
        </class>
    </source>