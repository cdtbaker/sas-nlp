<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.decomposition">
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="java.math.BigDecimal"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.access.AccessUtils"/>
        <import package="org.ojalgo.array.BasicArray"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.aggregator.AggregatorFunction"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.jama.JamaLU"/>
        <import package="org.ojalgo.matrix.store.BigDenseStore"/>
        <import package="org.ojalgo.matrix.store.ComplexDenseStore"/>
        <import package="org.ojalgo.matrix.store.LowerTriangularStore"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PrimitiveDenseStore"/>
        <import package="org.ojalgo.matrix.store.RowsStore"/>
        <import package="org.ojalgo.matrix.store.UpperTriangularStore"/>
        <import package="org.ojalgo.matrix.store.WrapperStore"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="LUDecomposition" line="46">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <extends class="InPlaceDecomposition">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </extends>
            <implements interface="LU">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <javadoc line="46">
                You create instances of (some subclass of) this class by calling one of the static factory methods:{@linkplain #makeBig()}, {@linkplain #makeComplex()}, {@linkplain #makePrimitive()} or {@linkplain #makeJama()}.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <class name="Pivot" line="54">
                <declaration name="myOrder" type="int[]" line="56"/>
                <declaration name="mySign" type="int" line="57"/>
                <declaration name="myModified" type="boolean" line="58"/>
                <method name="Pivot" type="constructor" line="60">
                    <params>
                        <param name="aRowDim" type="int"/>
                    </params>
                </method>
                <method name="change" type="void" line="68">
                    <params>
                        <param name="aRow1" type="int"/>
                        <param name="aRow2" type="int"/>
                    </params>
                    <comment line="82">
                        Why?!                        
                    </comment>
                    <scope line="70">
                        <declaration name="temp" type="int" line="72"/>
                    </scope>
                    <scope line="80"/>
                </method>
                <method name="getOrder" type="int[]" line="85"/>
                <method name="isModified" type="boolean" line="89"/>
                <method name="signum" type="int" line="93"/>
            </class>
            <class name="Big" line="99">
                <extends class="LUDecomposition">
                    <type_params>
                        <type_param name="BigDecimal"/>
                    </type_params>
                </extends>
                <method name="Big" type="constructor" line="101"/>
            </class>
            <class name="Complex" line="107">
                <extends class="LUDecomposition">
                    <type_params>
                        <type_param name="ComplexNumber"/>
                    </type_params>
                </extends>
                <method name="Complex" type="constructor" line="109"/>
            </class>
            <class name="Primitive" line="115">
                <extends class="LUDecomposition">
                    <type_params>
                        <type_param name="Double"/>
                    </type_params>
                </extends>
                <method name="Primitive" type="constructor" line="117"/>
            </class>
            <method name="make" type="LU&lt;N&gt;" line="124">
                <params>
                    <param name="aTypical" type="Access2D&lt;N&gt;"/>
                </params>
                <comment line="137">
                    16,32,2                    
                </comment>
                <declaration name="tmpNumber" type="N" line="126"/>
                <scope line="128"/>
                <scope line="130"/>
                <scope line="132">
                    <declaration name="tmpMaxDim" type="int" line="134"/>
                    <scope line="136"/>
                    <scope line="138"/>
                </scope>
                <scope line="141"/>
            </method>
            <method name="makeBig" type="LU&lt;BigDecimal&gt;" line="146"/>
            <method name="makeComplex" type="LU&lt;ComplexNumber&gt;" line="150"/>
            <method name="makeJama" type="LU&lt;Double&gt;" line="154"/>
            <method name="makePrimitive" type="LU&lt;Double&gt;" line="158"/>
            <declaration name="myPivot" type="Pivot" line="162"/>
            <method name="LUDecomposition" type="constructor" line="164">
                <params>
                    <param name="aFactory" type="DecompositionStore.Factory&lt;N,? extends DecompositionStore&lt;N&gt;&gt;"/>
                </params>
            </method>
            <method name="calculateDeterminant" type="N" line="168">
                <params>
                    <param name="matrix" type="Access2D&lt;N&gt;"/>
                </params>
            </method>
            <method name="compute" type="boolean" line="173">
                <params>
                    <param name="aStore" type="Access2D&lt;?&gt;"/>
                </params>
            </method>
            <method name="computeWithoutPivoting" type="boolean" line="177">
                <params>
                    <param name="matrix" type="MatrixStore&lt;?&gt;"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="181">
                <params>
                    <param name="aStore" type="MatrixStore&lt;N&gt;"/>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="getDeterminant" type="N" line="185">
                <declaration name="tmpAggrFunc" type="AggregatorFunction&amp;lt;N&amp;gt;" line="187"/>
                <scope line="191"/>
                <scope line="193"/>
            </method>
            <method name="getInverse" type="MatrixStore&lt;N&gt;" line="199"/>
            <method name="getInverse" type="MatrixStore&lt;N&gt;" line="204">
                <params>
                    <param name="preallocated" type="DecompositionStore&lt;N&gt;"/>
                </params>
            </method>
            <method name="getL" type="MatrixStore&lt;N&gt;" line="209"/>
            <method name="getPivotOrder" type="int[]" line="213"/>
            <method name="getRank" type="int" line="217">
                <comment line="229">
                    if (!TypeUtils.isZero(tmpStore.doubleValue(ij, ij), PrimitiveMath.IS_ZERO)) {
                                    retVal++;
                                }                    
                </comment>
                <declaration name="retVal" type="int" line="219"/>
                <declaration name="tmpStore" type="DecompositionStore&amp;lt;N&amp;gt;" line="221"/>
                <declaration name="tmpMinDim" type="int" line="223"/>
                <scope line="224">
                    <scope line="225"/>
                </scope>
            </method>
            <method name="getReducedPivots" type="int[]" line="236">
                <declaration name="retVal" type="int[]" line="238"/>
                <declaration name="tmpFullPivots" type="int[]" line="239"/>
                <declaration name="tmpInPlace" type="DecompositionStore&amp;lt;N&amp;gt;" line="241"/>
                <declaration name="tmpRedInd" type="int" line="243"/>
                <scope line="244">
                    <scope line="245"/>
                </scope>
            </method>
            <method name="getU" type="MatrixStore&lt;N&gt;" line="253"/>
            <method name="isFullSize" type="boolean" line="257"/>
            <method name="isSolvable" type="boolean" line="261"/>
            <method name="isSquareAndNotSingular" type="boolean" line="265">
                <declaration name="retVal" type="boolean" line="267"/>
                <declaration name="tmpStore" type="DecompositionStore&amp;lt;N&amp;gt;" line="269"/>
                <declaration name="tmpMinDim" type="int" line="270"/>
                <scope line="272"/>
            </method>
            <method name="reconstruct" type="MatrixStore&lt;N&gt;" line="279"/>
            <method name="reset" type="void" line="284"/>
            <javadoc line="291">
                Solves [this][X] = [aRHS] by first solving
                  &lt;pre&gt;
                  [L][Y] = [aRHS]
                  &lt;/pre&gt;
                  and then
                  &lt;pre&gt;
                  [U][X] = [Y]
                  &lt;/pre&gt;
                  .                
                <param>
                    rhs The right hand side                    
                </param>
                <return>
                    [X] The solution will be written to &quot;preallocated&quot; and then returned.                    
                </return>
                <see>
                    org.ojalgo.matrix.decomposition.AbstractDecomposition#solve(Access2D,org.ojalgo.matrix.decomposition.DecompositionStore)                    
                </see>
            </javadoc>
            <method name="solve" type="MatrixStore&lt;N&gt;" line="312">
                <params>
                    <param name="rhs" type="Access2D&lt;N&gt;"/>
                    <param name="preallocated" type="DecompositionStore&lt;N&gt;"/>
                </params>
                <declaration name="tmpBody" type="DecompositionStore&amp;lt;N&amp;gt;" line="316"/>
            </method>
            <method name="compute" type="boolean" line="325">
                <params>
                    <param name="aStore" type="Access2D&lt;?&gt;"/>
                    <param name="assumeNoPivotingRequired" type="boolean"/>
                </params>
                <comment line="340">
                    Main loop - along the diagonal                    
                </comment>
                <comment line="344">
                    Find next pivot row                    
                </comment>
                <comment line="347">
                    Pivot?                    
                </comment>
                <comment line="354">
                    Do the calculations...                    
                </comment>
                <comment line="357">
                    Calculate multipliers and copy to local column
                     Current column, below the diagonal                    
                </comment>
                <comment line="361">
                    Apply transformations to everything below and to the right of the pivot element                    
                </comment>
                <declaration name="tmpInPlace" type="DecompositionStore&amp;lt;N&amp;gt;" line="329"/>
                <declaration name="tmpRowDim" type="int" line="331"/>
                <declaration name="tmpColDim" type="int" line="332"/>
                <declaration name="tmpMinDim" type="int" line="333"/>
                <declaration name="tmpMultipliers" type="BasicArray&amp;lt;N&amp;gt;" line="337"/>
                <scope line="340">
                    <scope line="342">
                        <declaration name="tmpPivotRow" type="int" line="344"/>
                        <scope line="347"/>
                    </scope>
                    <scope line="354"/>
                    <scope line="363"/>
                </scope>
            </method>
            <method name="invert" type="MatrixStore&lt;N&gt;" line="373">
                <params>
                    <param name="retVal" type="DecompositionStore&lt;N&gt;"/>
                </params>
                <declaration name="tmpPivotOrder" type="int[]" line="375"/>
                <declaration name="tmpRowDim" type="int" line="376"/>
                <scope line="377"/>
                <declaration name="tmpBody" type="DecompositionStore&amp;lt;N&amp;gt;" line="381"/>
            </method>
        </class>
    </source>