<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.decomposition">
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="java.math.BigDecimal"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.array.SimpleArray"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.aggregator.AggregatorFunction"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.jama.JamaLU"/>
        <import package="org.ojalgo.matrix.store.BigDenseStore"/>
        <import package="org.ojalgo.matrix.store.ComplexDenseStore"/>
        <import package="org.ojalgo.matrix.store.LowerTriangularStore"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PrimitiveDenseStore"/>
        <import package="org.ojalgo.matrix.store.RowsStore"/>
        <import package="org.ojalgo.matrix.store.UpperTriangularStore"/>
        <import package="org.ojalgo.matrix.store.WrapperStore"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="LUDecomposition" line="45">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <extends class="InPlaceDecomposition">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </extends>
            <implements interface="LU">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <javadoc line="45">
                You create instances of (some subclass of) this class by calling one of the static factory methods:{@linkplain #makeBig()}, {@linkplain #makeComplex()}, {@linkplain #makePrimitive()} or {@linkplain #makeJama()}.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <class name="Pivot" line="53">
                <declaration name="myOrder" type="int[]" line="55"/>
                <declaration name="mySign" type="int" line="56"/>
                <declaration name="myModified" type="boolean" line="57"/>
                <method name="Pivot" type="constructor" line="59">
                    <params>
                        <param name="aRowDim" type="int"/>
                    </params>
                </method>
                <method name="change" type="void" line="67">
                    <params>
                        <param name="aRow1" type="int"/>
                        <param name="aRow2" type="int"/>
                    </params>
                    <comment line="81">
                        Why?!                        
                    </comment>
                    <scope line="69">
                        <declaration name="temp" type="int" line="71"/>
                    </scope>
                    <scope line="79"/>
                </method>
                <method name="getOrder" type="int[]" line="84"/>
                <method name="isModified" type="boolean" line="88"/>
                <method name="signum" type="int" line="92"/>
            </class>
            <class name="Big" line="98">
                <extends class="LUDecomposition">
                    <type_params>
                        <type_param name="BigDecimal"/>
                    </type_params>
                </extends>
                <method name="Big" type="constructor" line="100"/>
            </class>
            <class name="Complex" line="106">
                <extends class="LUDecomposition">
                    <type_params>
                        <type_param name="ComplexNumber"/>
                    </type_params>
                </extends>
                <method name="Complex" type="constructor" line="108"/>
            </class>
            <class name="Primitive" line="114">
                <extends class="LUDecomposition">
                    <type_params>
                        <type_param name="Double"/>
                    </type_params>
                </extends>
                <method name="Primitive" type="constructor" line="116"/>
            </class>
            <method name="make" type="LU<N>" line="123">
                <params>
                    <param name="aTypical" type="Access2D<N>"/>
                </params>
                <comment line="136">
                    16,32,2                    
                </comment>
                <declaration name="tmpNumber" type="N" line="125"/>
                <scope line="127"/>
                <scope line="129"/>
                <scope line="131">
                    <declaration name="tmpMaxDim" type="int" line="133"/>
                    <scope line="135"/>
                    <scope line="137"/>
                </scope>
                <scope line="140"/>
            </method>
            <method name="makeBig" type="LU<BigDecimal>" line="145"/>
            <method name="makeComplex" type="LU<ComplexNumber>" line="149"/>
            <method name="makeJama" type="LU<Double>" line="153"/>
            <method name="makePrimitive" type="LU<Double>" line="157"/>
            <declaration name="myPivot" type="Pivot" line="161"/>
            <method name="LUDecomposition" type="constructor" line="163">
                <params>
                    <param name="aFactory" type="DecompositionStore.Factory<N,? extends DecompositionStore<N>>"/>
                </params>
            </method>
            <method name="calculateDeterminant" type="N" line="167">
                <params>
                    <param name="matrix" type="Access2D<N>"/>
                </params>
            </method>
            <method name="compute" type="boolean" line="172">
                <params>
                    <param name="aStore" type="Access2D<?>"/>
                </params>
            </method>
            <method name="computeWithoutPivoting" type="boolean" line="176">
                <params>
                    <param name="matrix" type="MatrixStore<?>"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="180">
                <params>
                    <param name="aStore" type="MatrixStore<N>"/>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="getDeterminant" type="N" line="184">
                <declaration name="tmpAggrFunc" type="AggregatorFunction&lt;N&gt;" line="186"/>
                <scope line="190"/>
                <scope line="192"/>
            </method>
            <method name="getInverse" type="MatrixStore<N>" line="198"/>
            <method name="getInverse" type="MatrixStore<N>" line="203">
                <params>
                    <param name="preallocated" type="DecompositionStore<N>"/>
                </params>
            </method>
            <method name="getL" type="MatrixStore<N>" line="208"/>
            <method name="getPivotOrder" type="int[]" line="212"/>
            <method name="getRank" type="int" line="216">
                <declaration name="retVal" type="int" line="218"/>
                <declaration name="tmpStore" type="DecompositionStore&lt;N&gt;" line="220"/>
                <declaration name="tmpMinDim" type="int" line="222"/>
                <scope line="223">
                    <scope line="224"/>
                </scope>
            </method>
            <method name="getReducedPivots" type="int[]" line="232">
                <declaration name="retVal" type="int[]" line="234"/>
                <declaration name="tmpFullPivots" type="int[]" line="235"/>
                <declaration name="tmpInPlace" type="DecompositionStore&lt;N&gt;" line="237"/>
                <declaration name="tmpRedInd" type="int" line="239"/>
                <scope line="240">
                    <scope line="241"/>
                </scope>
            </method>
            <method name="getU" type="MatrixStore<N>" line="249"/>
            <method name="isFullSize" type="boolean" line="253"/>
            <method name="isSolvable" type="boolean" line="257"/>
            <method name="isSquareAndNotSingular" type="boolean" line="261">
                <declaration name="retVal" type="boolean" line="263"/>
                <declaration name="tmpStore" type="DecompositionStore&lt;N&gt;" line="265"/>
                <declaration name="tmpMinDim" type="int" line="266"/>
                <scope line="268"/>
            </method>
            <method name="reconstruct" type="MatrixStore<N>" line="275"/>
            <method name="reset" type="void" line="280"/>
            <javadoc line="287">
                Solves [this][X] = [aRHS] by first solving
                  &lt;pre&gt;
                  [L][Y] = [aRHS]
                  &lt;/pre&gt;
                  and then
                  &lt;pre&gt;
                  [U][X] = [Y]
                  &lt;/pre&gt;
                  .                
                <param>
                    rhs The right hand side                    
                </param>
                <return>
                    [X] The solution will be written to "preallocated" and then returned.                    
                </return>
                <see>
                    org.ojalgo.matrix.decomposition.AbstractDecomposition#solve(Access2D,org.ojalgo.matrix.decomposition.DecompositionStore)                    
                </see>
            </javadoc>
            <method name="solve" type="MatrixStore<N>" line="308">
                <params>
                    <param name="rhs" type="Access2D<N>"/>
                    <param name="preallocated" type="DecompositionStore<N>"/>
                </params>
                <declaration name="tmpBody" type="DecompositionStore&lt;N&gt;" line="312"/>
            </method>
            <method name="compute" type="boolean" line="321">
                <params>
                    <param name="aStore" type="Access2D<?>"/>
                    <param name="assumeNoPivotingRequired" type="boolean"/>
                </params>
                <comment line="336">
                    Main loop - along the diagonal                    
                </comment>
                <comment line="340">
                    Find next pivot row                    
                </comment>
                <comment line="343">
                    Pivot?                    
                </comment>
                <comment line="350">
                    Do the calculations...                    
                </comment>
                <comment line="353">
                    Calculate multipliers and copy to local column
                     Current column, below the diagonal                    
                </comment>
                <comment line="357">
                    Apply transformations to everything below and to the right of the pivot element                    
                </comment>
                <declaration name="tmpInPlace" type="DecompositionStore&lt;N&gt;" line="325"/>
                <declaration name="tmpRowDim" type="int" line="327"/>
                <declaration name="tmpColDim" type="int" line="328"/>
                <declaration name="tmpMinDim" type="int" line="329"/>
                <declaration name="tmpMultipliers" type="SimpleArray&lt;N&gt;" line="333"/>
                <scope line="336">
                    <scope line="338">
                        <declaration name="tmpPivotRow" type="int" line="340"/>
                        <scope line="343"/>
                    </scope>
                    <scope line="350"/>
                    <scope line="359"/>
                </scope>
            </method>
            <method name="invert" type="MatrixStore<N>" line="369">
                <params>
                    <param name="retVal" type="DecompositionStore<N>"/>
                </params>
                <declaration name="tmpPivotOrder" type="int[]" line="371"/>
                <declaration name="tmpRowDim" type="int" line="372"/>
                <scope line="373"/>
                <declaration name="tmpBody" type="DecompositionStore&lt;N&gt;" line="377"/>
            </method>
        </class>
    </source>