<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.decomposition">
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="java.math.BigDecimal"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.array.SimpleArray"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.aggregator.AggregatorFunction"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.jama.JamaLU"/>
        <import package="org.ojalgo.matrix.store.BigDenseStore"/>
        <import package="org.ojalgo.matrix.store.ComplexDenseStore"/>
        <import package="org.ojalgo.matrix.store.LowerTriangularStore"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PrimitiveDenseStore"/>
        <import package="org.ojalgo.matrix.store.RowsStore"/>
        <import package="org.ojalgo.matrix.store.UpperTriangularStore"/>
        <import package="org.ojalgo.matrix.store.WrapperStore"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="LUDecomposition" line="20">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <extends class="InPlaceDecomposition">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </extends>
            <implements interface="LU">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <javadoc line="20">
                You create instances of (some subclass of) this class by calling one of the static factory methods:{@linkplain #makeBig()}, {@linkplain #makeComplex()}, {@linkplain #makePrimitive()} or {@linkplain #makeJama()}.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <class name="Pivot" line="25">
                <declaration name="myOrder" type="int[]" line="26"/>
                <declaration name="mySign" type="int" line="27"/>
                <declaration name="myModified" type="boolean" line="28"/>
                <method name="Pivot" type="constructor" line="29">
                    <params>
                        <param name="aRowDim" type="int"/>
                    </params>
                </method>
                <method name="change" type="void" line="34">
                    <params>
                        <param name="aRow1" type="int"/>
                        <param name="aRow2" type="int"/>
                    </params>
                    <scope line="35">
                        <declaration name="temp" type="int" line="36"/>
                    </scope>
                    <scope line="42"/>
                </method>
                <method name="getOrder" type="int[]" line="45"/>
                <method name="isModified" type="boolean" line="48"/>
                <method name="signum" type="int" line="51"/>
            </class>
            <class name="Big" line="55">
                <extends class="LUDecomposition">
                    <type_params>
                        <type_param name="BigDecimal"/>
                    </type_params>
                </extends>
                <method name="Big" type="constructor" line="56"/>
            </class>
            <class name="Complex" line="60">
                <extends class="LUDecomposition">
                    <type_params>
                        <type_param name="ComplexNumber"/>
                    </type_params>
                </extends>
                <method name="Complex" type="constructor" line="61"/>
            </class>
            <class name="Primitive" line="65">
                <extends class="LUDecomposition">
                    <type_params>
                        <type_param name="Double"/>
                    </type_params>
                </extends>
                <method name="Primitive" type="constructor" line="66"/>
            </class>
            <method name="make" type="LU<N>" line="70">
                <params>
                    <param name="aTypical" type="Access2D<N>"/>
                </params>
                <declaration name="tmpNumber" type="N" line="71"/>
                <scope line="72"/>
                <scope line="75"/>
                <scope line="78">
                    <declaration name="tmpMaxDim" type="int" line="79"/>
                    <scope line="80"/>
                    <scope line="83"/>
                </scope>
                <scope line="87"/>
            </method>
            <method name="makeBig" type="LU<BigDecimal>" line="91"/>
            <method name="makeComplex" type="LU<ComplexNumber>" line="94"/>
            <method name="makeJama" type="LU<Double>" line="97"/>
            <method name="makePrimitive" type="LU<Double>" line="100"/>
            <declaration name="myPivot" type="Pivot" line="103"/>
            <method name="LUDecomposition" type="constructor" line="104">
                <params>
                    <param name="aFactory" type="DecompositionStore.Factory<N,? extends DecompositionStore<N>>"/>
                </params>
            </method>
            <method name="calculateDeterminant" type="N" line="107">
                <params>
                    <param name="matrix" type="Access2D<N>"/>
                </params>
            </method>
            <method name="compute" type="boolean" line="111">
                <params>
                    <param name="aStore" type="Access2D<?>"/>
                </params>
            </method>
            <method name="computeWithoutPivoting" type="boolean" line="114">
                <params>
                    <param name="matrix" type="MatrixStore<?>"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="117">
                <params>
                    <param name="aStore" type="MatrixStore<N>"/>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="getDeterminant" type="N" line="120">
                <declaration name="tmpAggrFunc" type="AggregatorFunction&lt;N&gt;" line="121"/>
                <scope line="123"/>
                <scope line="126"/>
            </method>
            <method name="getInverse" type="MatrixStore<N>" line="130"/>
            <method name="getInverse" type="MatrixStore<N>" line="133">
                <params>
                    <param name="preallocated" type="DecompositionStore<N>"/>
                </params>
            </method>
            <method name="getL" type="MatrixStore<N>" line="137"/>
            <method name="getPivotOrder" type="int[]" line="140"/>
            <method name="getRank" type="int" line="143">
                <declaration name="retVal" type="int" line="144"/>
                <declaration name="tmpStore" type="DecompositionStore&lt;N&gt;" line="145"/>
                <declaration name="tmpMinDim" type="int" line="146"/>
                <scope line="147">
                    <scope line="148"/>
                </scope>
            </method>
            <method name="getReducedPivots" type="int[]" line="154">
                <declaration name="retVal" type="int[]" line="155"/>
                <declaration name="tmpFullPivots" type="int[]" line="156"/>
                <declaration name="tmpInPlace" type="DecompositionStore&lt;N&gt;" line="157"/>
                <declaration name="tmpRedInd" type="int" line="158"/>
                <scope line="159">
                    <scope line="160"/>
                </scope>
            </method>
            <method name="getU" type="MatrixStore<N>" line="166"/>
            <method name="isFullSize" type="boolean" line="169"/>
            <method name="isSolvable" type="boolean" line="172"/>
            <method name="isSquareAndNotSingular" type="boolean" line="175">
                <declaration name="retVal" type="boolean" line="176"/>
                <declaration name="tmpStore" type="DecompositionStore&lt;N&gt;" line="177"/>
                <declaration name="tmpMinDim" type="int" line="178"/>
                <scope line="179"/>
            </method>
            <method name="reconstruct" type="MatrixStore<N>" line="184"/>
            <method name="reset" type="void" line="187"/>
            <javadoc line="191">
                Solves [this][X] = [aRHS] by first solving
                  &lt;pre&gt;
                  [L][Y] = [aRHS]
                  &lt;/pre&gt;
                  and then
                  &lt;pre&gt;
                  [U][X] = [Y]
                  &lt;/pre&gt;
                  .                
                <param>
                    rhs The right hand side                    
                </param>
                <return>
                    [X] The solution will be written to "preallocated" and then returned.                    
                </return>
                <see>
                    org.ojalgo.matrix.decomposition.AbstractDecomposition#solve(Access2D,org.ojalgo.matrix.decomposition.DecompositionStore)                    
                </see>
            </javadoc>
            <method name="solve" type="MatrixStore<N>" line="205">
                <params>
                    <param name="rhs" type="Access2D<N>"/>
                    <param name="preallocated" type="DecompositionStore<N>"/>
                </params>
                <declaration name="tmpBody" type="DecompositionStore&lt;N&gt;" line="207"/>
            </method>
            <method name="compute" type="boolean" line="212">
                <params>
                    <param name="aStore" type="Access2D<?>"/>
                    <param name="assumeNoPivotingRequired" type="boolean"/>
                </params>
                <declaration name="tmpInPlace" type="DecompositionStore&lt;N&gt;" line="214"/>
                <declaration name="tmpRowDim" type="int" line="215"/>
                <declaration name="tmpColDim" type="int" line="216"/>
                <declaration name="tmpMinDim" type="int" line="217"/>
                <declaration name="tmpMultipliers" type="SimpleArray&lt;N&gt;" line="219"/>
                <scope line="220">
                    <scope line="221">
                        <declaration name="tmpPivotRow" type="int" line="222"/>
                        <scope line="223"/>
                    </scope>
                    <scope line="228"/>
                    <scope line="232"/>
                </scope>
            </method>
            <method name="invert" type="MatrixStore<N>" line="238">
                <params>
                    <param name="retVal" type="DecompositionStore<N>"/>
                </params>
                <declaration name="tmpPivotOrder" type="int[]" line="239"/>
                <declaration name="tmpRowDim" type="int" line="240"/>
                <scope line="241"/>
                <declaration name="tmpBody" type="DecompositionStore&lt;N&gt;" line="244"/>
            </method>
        </class>
    </source>