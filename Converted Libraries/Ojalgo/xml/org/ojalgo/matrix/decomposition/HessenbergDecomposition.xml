<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.decomposition">
        <import package="java.math.BigDecimal"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.store.BigDenseStore"/>
        <import package="org.ojalgo.matrix.store.ComplexDenseStore"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PrimitiveDenseStore"/>
        <import package="org.ojalgo.matrix.transformation.Householder"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="HessenbergDecomposition" line="36">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <extends class="InPlaceDecomposition">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </extends>
            <implements interface="Hessenberg">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <javadoc line="36">
                You create instances of (some subclass of) this class by calling one of the static factory methods:{@linkplain #makeBig()}, {@linkplain #makeComplex()} or {@linkplain #makePrimitive()}.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <class name="Big" line="44">
                <extends class="HessenbergDecomposition">
                    <type_params>
                        <type_param name="BigDecimal"/>
                    </type_params>
                </extends>
                <method name="Big" type="constructor" line="46"/>
            </class>
            <class name="Complex" line="52">
                <extends class="HessenbergDecomposition">
                    <type_params>
                        <type_param name="ComplexNumber"/>
                    </type_params>
                </extends>
                <method name="Complex" type="constructor" line="54"/>
            </class>
            <class name="Primitive" line="60">
                <extends class="HessenbergDecomposition">
                    <type_params>
                        <type_param name="Double"/>
                    </type_params>
                </extends>
                <method name="Primitive" type="constructor" line="62"/>
            </class>
            <method name="make" type="Hessenberg&lt;N&gt;" line="69">
                <params>
                    <param name="aTypical" type="Access2D&lt;N&gt;"/>
                </params>
                <declaration name="tmpNumber" type="N" line="71"/>
                <scope line="73"/>
                <scope line="75"/>
                <scope line="77"/>
                <scope line="79"/>
            </method>
            <method name="makeBig" type="Hessenberg&lt;BigDecimal&gt;" line="84"/>
            <method name="makeComplex" type="Hessenberg&lt;ComplexNumber&gt;" line="88"/>
            <method name="makePrimitive" type="Hessenberg&lt;Double&gt;" line="92"/>
            <declaration name="myUpper" type="boolean" line="96"/>
            <declaration name="myQ" type="DecompositionStore&amp;lt;N&amp;gt;" line="97"/>
            <method name="HessenbergDecomposition" type="constructor" line="99">
                <params>
                    <param name="aFactory" type="DecompositionStore.Factory&lt;N,? extends DecompositionStore&lt;N&gt;&gt;"/>
                </params>
            </method>
            <method name="compute" type="boolean" line="103">
                <params>
                    <param name="matrix" type="Access2D&lt;?&gt;"/>
                </params>
            </method>
            <method name="compute" type="boolean" line="107">
                <params>
                    <param name="matrix" type="Access2D&lt;?&gt;"/>
                    <param name="upper" type="boolean"/>
                </params>
                <declaration name="tmpStore" type="DecompositionStore&amp;lt;N&amp;gt;" line="113"/>
                <declaration name="tmpRowDim" type="int" line="115"/>
                <declaration name="tmpColDim" type="int" line="116"/>
                <scope line="118">
                    <declaration name="tmpHouseholderCol" type="Householder&amp;lt;N&amp;gt;" line="120"/>
                    <declaration name="tmpLimit" type="int" line="122"/>
                    <scope line="124">
                        <scope line="125"/>
                    </scope>
                </scope>
                <scope line="131">
                    <declaration name="tmpHouseholderRow" type="Householder&amp;lt;N&amp;gt;" line="133"/>
                    <declaration name="tmpLimit" type="int" line="135"/>
                    <scope line="137">
                        <scope line="138"/>
                    </scope>
                </scope>
            </method>
            <method name="equals" type="boolean" line="148">
                <params>
                    <param name="aStore" type="MatrixStore&lt;N&gt;"/>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="getH" type="MatrixStore&lt;N&gt;" line="152"/>
            <method name="getQ" type="MatrixStore&lt;N&gt;" line="156">
                <scope line="157"/>
            </method>
            <method name="isFullSize" type="boolean" line="163"/>
            <method name="isSolvable" type="boolean" line="167"/>
            <method name="isUpper" type="boolean" line="171"/>
            <method name="reconstruct" type="MatrixStore&lt;N&gt;" line="175"/>
            <method name="reset" type="void" line="180"/>
            <method name="makeQ" type="DecompositionStore&lt;N&gt;" line="188">
                <params>
                    <param name="aStoreToTransform" type="DecompositionStore&lt;N&gt;"/>
                    <param name="tmpUpper" type="boolean"/>
                    <param name="eye" type="boolean"/>
                </params>
                <declaration name="tmpRowAndColDim" type="int" line="190"/>
                <declaration name="tmpHouseholderReference" type="DecompositionStore.HouseholderReference&amp;lt;N&amp;gt;" line="192"/>
                <scope line="194">
                    <scope line="199"/>
                </scope>
            </method>
            <method name="doQ" type="DecompositionStore&lt;N&gt;" line="207">
                <params>
                    <param name="aStoreToTransform" type="DecompositionStore&lt;N&gt;"/>
                </params>
            </method>
        </class>
    </source>