<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.decomposition">
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.array.Array1D"/>
        <import package="org.ojalgo.matrix.decomposition.task.DeterminantTask"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <interface name="Eigenvalue">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <implements interface="MatrixDecomposition">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <implements interface="DeterminantTask">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <javadoc line="30">
                [A] = [V][D][V]&lt;sup&gt;-1&lt;/sup&gt; ([A][V] = [V][D])
                  &lt;ul&gt;
                  &lt;li&gt;[A] = any square matrix.&lt;/li&gt;
                  &lt;li&gt;[V] = contains the eigenvectors as columns.&lt;/li&gt;
                  &lt;li&gt;[D] = a diagonal matrix with the eigenvalues on the diagonal (possibly in blocks).&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;p&gt;
                  [A] is normal if [A][A]&lt;sup&gt;H&lt;/sup&gt; = [A]&lt;sup&gt;H&lt;/sup&gt;[A], and [A] is normal if and only if there exists a unitary
                  matrix [Q] such that [A] = [Q][D][Q]&lt;sup&gt;H&lt;/sup&gt;. Hermitian matrices are normal.
                  &lt;/p&gt;
                  &lt;p&gt;
                  [V] and [D] can always be calculated in the sense that they will satisfy [A][V] = [V][D], but it is not always
                  possible to calculate [V]&lt;sup&gt;-1&lt;/sup&gt;. (Check the rank and/or the condition number of [V] to determine the validity
                  of [V][D][V]&lt;sup&gt;-1&lt;/sup&gt;.)
                  &lt;/p&gt;                
                <author>
                    apete                    
                </author>
            </javadoc>
            <method name="compute" type="boolean" line="51"/>
            <javadoc line="51">
                @param matrix A matrix to decompose                
                <param>
                    eigenvaluesOnly No need to calculate eigenvectors                    
                </param>
                <return>
                    true/false if the computation succeeded or not                    
                </return>
            </javadoc>
            <method name="getD" type="MatrixStore<N>" line="58"/>
            <javadoc line="58">
                The only requirements on [D] are that it should contain the eigenvalues and that [A][V] = [V][D]. The ordering of
                  the eigenvalues is not specified.
                  &lt;ul&gt;
                  &lt;li&gt;If [A] is real and symmetric then [D] is (purely) diagonal with real eigenvalues.&lt;/li&gt;
                  &lt;li&gt;If [A] is real but not symmetric then [D] is block-diagonal with real eigenvalues in 1-by-1 blocks and
                  complex eigenvalues in 2-by-2 blocks.&lt;/li&gt;
                  &lt;li&gt;If [A] is complex then [D] is (purely) diagonal with complex eigenvalues.&lt;/li&gt;
                  &lt;/ul&gt;                
                <return>
                    The (block) diagonal eigenvalue matrix.                    
                </return>
            </javadoc>
            <method name="getDeterminant" type="N" line="72"/>
            <javadoc line="72">
                &lt;p&gt;
                  A matrix&apos; determinant is the product of its eigenvalues.
                  &lt;/p&gt;                
                <return>
                    The matrix' determinant                    
                </return>
            </javadoc>
            <method name="getEigenvalues" type="Array1D<ComplexNumber>" line="81"/>
            <javadoc line="81">
                &lt;p&gt;
                  Even for real matrices the eigenvalues are potentially complex numbers. Typically they need to be expressed as
                  complex numbers when [A] is not symmetric.
                  &lt;/p&gt;
                  &lt;p&gt;
                  The eigenvalues in this array should be ordered in descending order - largest (modulus) first.
                  &lt;/p&gt;                
                <return>
                    The eigenvalues in an ordered array.                    
                </return>
            </javadoc>
            <method name="getTrace" type="ComplexNumber" line="94"/>
            <javadoc line="94">
                A matrix&apos; trace is the sum of the diagonal elements. It is also the sum of the eigenvalues. This method should
                  return the sum of the eigenvalues.                
                <return>
                    The matrix' trace                    
                </return>
            </javadoc>
            <method name="getV" type="MatrixStore<N>" line="102"/>
            <javadoc line="102">
                The columns of [V] represent the eigenvectors of [A] in the sense that [A][V] = [V][D].                
                <return>
                    The eigenvector matrix.                    
                </return>
            </javadoc>
            <method name="isHermitian" type="boolean" line="109"/>
            <javadoc line="109">
                If [A] is hermitian then [V][D][V]&lt;sup&gt;-1&lt;/sup&gt; becomes [Q][D][Q]&lt;sup&gt;H&lt;/sup&gt;...                
            </javadoc>
            <method name="isOrdered" type="boolean" line="114"/>
            <javadoc line="114">
                The eigenvalues in D (and the eigenvectors in V) are not necessarily ordered. This is a property of the
                  algorithm/implementation, not the data.                
                <return>
                    true if they are ordered                    
                </return>
            </javadoc>
        </interface>
    </source>