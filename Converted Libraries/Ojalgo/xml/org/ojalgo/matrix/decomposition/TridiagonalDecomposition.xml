<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.decomposition">
        <import package="java.math.BigDecimal"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.access.AccessUtils"/>
        <import package="org.ojalgo.array.Array1D"/>
        <import package="org.ojalgo.array.Array2D"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.store.BigDenseStore"/>
        <import package="org.ojalgo.matrix.store.ComplexDenseStore"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PrimitiveDenseStore"/>
        <import package="org.ojalgo.matrix.transformation.Householder"/>
        <import package="org.ojalgo.netio.BasicLogger"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="TridiagonalDecomposition" line="41">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <extends class="InPlaceDecomposition">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </extends>
            <implements interface="Tridiagonal">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <javadoc line="41">
                You create instances of (some subclass of) this class by calling one of the static factory methods:{@linkplain #makeBig()}, {@linkplain #makeComplex()} or {@linkplain #makePrimitive()}.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <class name="Big" line="49">
                <extends class="TridiagonalDecomposition">
                    <type_params>
                        <type_param name="BigDecimal"/>
                    </type_params>
                </extends>
                <method name="Big" type="constructor" line="51"/>
                <method name="makeReal" type="Array1D&lt;BigDecimal&gt;" line="56">
                    <params>
                        <param name="aDiagonalAccessD" type="DiagonalAccess&lt;BigDecimal&gt;"/>
                    </params>
                </method>
            </class>
            <class name="Complex" line="61">
                <extends class="TridiagonalDecomposition">
                    <type_params>
                        <type_param name="ComplexNumber"/>
                    </type_params>
                </extends>
                <method name="Complex" type="constructor" line="63"/>
                <method name="makeReal" type="Array1D&lt;ComplexNumber&gt;" line="68">
                    <params>
                        <param name="aDiagonalAccessD" type="DiagonalAccess&lt;ComplexNumber&gt;"/>
                    </params>
                    <comment line="74">
                        superDiagonal should be the conjugate of this but it is set to the saem value                        
                    </comment>
                    <declaration name="retVal" type="Array1D&amp;lt;ComplexNumber&amp;gt;" line="70"/>
                    <declaration name="tmpSubdiagonal" type="Array1D&amp;lt;ComplexNumber&amp;gt;" line="73"/>
                    <declaration name="tmpVal" type="ComplexNumber" line="75"/>
                    <scope line="76">
                        <scope line="80">
                            <scope line="84"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="Primitive" line="97">
                <extends class="TridiagonalDecomposition">
                    <type_params>
                        <type_param name="Double"/>
                    </type_params>
                </extends>
                <method name="Primitive" type="constructor" line="99"/>
                <method name="makeReal" type="Array1D&lt;Double&gt;" line="104">
                    <params>
                        <param name="aDiagonalAccessD" type="DiagonalAccess&lt;Double&gt;"/>
                    </params>
                </method>
            </class>
            <method name="make" type="Tridiagonal&lt;N&gt;" line="110">
                <params>
                    <param name="aTypical" type="Access2D&lt;N&gt;"/>
                </params>
                <declaration name="tmpNumber" type="N" line="112"/>
                <scope line="114"/>
                <scope line="116"/>
                <scope line="118"/>
                <scope line="120"/>
            </method>
            <method name="makeBig" type="Tridiagonal&lt;BigDecimal&gt;" line="125"/>
            <method name="makeComplex" type="Tridiagonal&lt;ComplexNumber&gt;" line="129"/>
            <method name="makePrimitive" type="Tridiagonal&lt;Double&gt;" line="133"/>
            <declaration name="myD" type="MatrixStore&amp;lt;N&amp;gt;" line="137"/>
            <declaration name="myDiagonalAccessD" type="DiagonalAccess&amp;lt;N&amp;gt;" line="138"/>
            <declaration name="myInitDiagQ" type="Array1D&amp;lt;N&amp;gt;" line="139"/>
            <declaration name="myQ" type="MatrixStore&amp;lt;N&amp;gt;" line="140"/>
            <method name="TridiagonalDecomposition" type="constructor" line="142">
                <params>
                    <param name="aFactory" type="DecompositionStore.Factory&lt;N,? extends DecompositionStore&lt;N&gt;&gt;"/>
                </params>
            </method>
            <method name="compute" type="boolean" line="146">
                <params>
                    <param name="matrix" type="Access2D&lt;?&gt;"/>
                </params>
                <comment line="155">
                    Which is also the col-dim.                    
                </comment>
                <comment line="172">
                    Super differs only in possible conjugate values                    
                </comment>
                <declaration name="retVal" type="boolean" line="150"/>
                <scope line="152">
                    <declaration name="tmpRowDim" type="int" line="154"/>
                    <declaration name="aTriangularMtrx" type="Access2D&amp;lt;N&amp;gt;" line="156"/>
                    <declaration name="tmpInPlace" type="DecompositionStore&amp;lt;N&amp;gt;" line="158"/>
                    <declaration name="tmpHouseholder" type="Householder&amp;lt;N&amp;gt;" line="160"/>
                    <declaration name="tmpLimit" type="int" line="162"/>
                    <scope line="163">
                        <scope line="164"/>
                    </scope>
                    <declaration name="tmpArray2D" type="Array2D&amp;lt;N&amp;gt;" line="168"/>
                    <declaration name="tmpMain" type="Array1D&amp;lt;N&amp;gt;" line="170"/>
                    <declaration name="tmpSub" type="Array1D&amp;lt;N&amp;gt;" line="171"/>
                </scope>
                <scope line="178"/>
            </method>
            <method name="equals" type="boolean" line="190">
                <params>
                    <param name="aStore" type="MatrixStore&lt;N&gt;"/>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="getD" type="MatrixStore&lt;N&gt;" line="194">
                <scope line="196"/>
            </method>
            <method name="getQ" type="MatrixStore&lt;N&gt;" line="203">
                <scope line="205"/>
            </method>
            <method name="isFullSize" type="boolean" line="212"/>
            <method name="isSolvable" type="boolean" line="216"/>
            <method name="reconstruct" type="MatrixStore&lt;N&gt;" line="220"/>
            <method name="reset" type="void" line="225"/>
            <method name="getDiagonalAccessD" type="DiagonalAccess&lt;N&gt;" line="236">
                <scope line="237"/>
                <scope line="239"/>
            </method>
            <method name="makeD" type="MatrixStore&lt;N&gt;" line="244"/>
            <method name="makeQ" type="DecompositionStore&lt;N&gt;" line="248">
                <declaration name="retVal" type="DecompositionStore&amp;lt;N&amp;gt;" line="250"/>
                <declaration name="tmpDim" type="int" line="251"/>
                <declaration name="tmpHouseholderReference" type="DecompositionStore.HouseholderReference&amp;lt;N&amp;gt;" line="253"/>
                <scope line="255"/>
                <scope line="258"/>
                <scope line="264">
                    <scope line="269"/>
                    <scope line="274"/>
                </scope>
            </method>
            <method name="doQ" type="DecompositionStore&lt;N&gt;" line="282"/>
            <method name="makeReal" type="Array1D&lt;N&gt;" line="286"/>
        </class>
    </source>