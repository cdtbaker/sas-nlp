<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.decomposition">
        <import package="java.math.BigDecimal"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.access.AccessUtils"/>
        <import package="org.ojalgo.array.Array1D"/>
        <import package="org.ojalgo.array.Array2D"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.store.BigDenseStore"/>
        <import package="org.ojalgo.matrix.store.ComplexDenseStore"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PrimitiveDenseStore"/>
        <import package="org.ojalgo.matrix.transformation.Householder"/>
        <import package="org.ojalgo.netio.BasicLogger"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="TridiagonalDecomposition" line="17">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <extends class="InPlaceDecomposition">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </extends>
            <implements interface="Tridiagonal">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <javadoc line="17">
                You create instances of (some subclass of) this class by calling one of the static factory methods:{@linkplain #makeBig()}, {@linkplain #makeComplex()} or {@linkplain #makePrimitive()}.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <class name="Big" line="22">
                <extends class="TridiagonalDecomposition">
                    <type_params>
                        <type_param name="BigDecimal"/>
                    </type_params>
                </extends>
                <method name="Big" type="constructor" line="23"/>
                <method name="makeReal" type="Array1D<BigDecimal>" line="26">
                    <params>
                        <param name="aDiagonalAccessD" type="DiagonalAccess<BigDecimal>"/>
                    </params>
                </method>
            </class>
            <class name="Complex" line="30">
                <extends class="TridiagonalDecomposition">
                    <type_params>
                        <type_param name="ComplexNumber"/>
                    </type_params>
                </extends>
                <method name="Complex" type="constructor" line="31"/>
                <method name="makeReal" type="Array1D<ComplexNumber>" line="34">
                    <params>
                        <param name="aDiagonalAccessD" type="DiagonalAccess<ComplexNumber>"/>
                    </params>
                    <declaration name="retVal" type="Array1D&lt;ComplexNumber&gt;" line="35"/>
                    <declaration name="tmpSubdiagonal" type="Array1D&lt;ComplexNumber&gt;" line="37"/>
                    <declaration name="tmpVal" type="ComplexNumber" line="38"/>
                    <scope line="39">
                        <scope line="41">
                            <scope line="43"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="Primitive" line="52">
                <extends class="TridiagonalDecomposition">
                    <type_params>
                        <type_param name="Double"/>
                    </type_params>
                </extends>
                <method name="Primitive" type="constructor" line="53"/>
                <method name="makeReal" type="Array1D<Double>" line="56">
                    <params>
                        <param name="aDiagonalAccessD" type="DiagonalAccess<Double>"/>
                    </params>
                </method>
            </class>
            <method name="make" type="Tridiagonal<N>" line="60">
                <params>
                    <param name="aTypical" type="Access2D<N>"/>
                </params>
                <declaration name="tmpNumber" type="N" line="61"/>
                <scope line="62"/>
                <scope line="65"/>
                <scope line="68"/>
                <scope line="71"/>
            </method>
            <method name="makeBig" type="Tridiagonal<BigDecimal>" line="75"/>
            <method name="makeComplex" type="Tridiagonal<ComplexNumber>" line="78"/>
            <method name="makePrimitive" type="Tridiagonal<Double>" line="81"/>
            <declaration name="myD" type="MatrixStore&lt;N&gt;" line="84"/>
            <declaration name="myDiagonalAccessD" type="DiagonalAccess&lt;N&gt;" line="85"/>
            <declaration name="myInitDiagQ" type="Array1D&lt;N&gt;" line="86"/>
            <declaration name="myQ" type="MatrixStore&lt;N&gt;" line="87"/>
            <method name="TridiagonalDecomposition" type="constructor" line="88">
                <params>
                    <param name="aFactory" type="DecompositionStore.Factory<N,? extends DecompositionStore<N>>"/>
                </params>
            </method>
            <method name="compute" type="boolean" line="91">
                <params>
                    <param name="matrix" type="Access2D<?>"/>
                </params>
                <declaration name="retVal" type="boolean" line="93"/>
                <scope line="94">
                    <declaration name="tmpRowDim" type="int" line="95"/>
                    <declaration name="aTriangularMtrx" type="Access2D&lt;N&gt;" line="96"/>
                    <declaration name="tmpInPlace" type="DecompositionStore&lt;N&gt;" line="97"/>
                    <declaration name="tmpHouseholder" type="Householder&lt;N&gt;" line="98"/>
                    <declaration name="tmpLimit" type="int" line="99"/>
                    <scope line="100">
                        <scope line="101"/>
                    </scope>
                    <declaration name="tmpArray2D" type="Array2D&lt;N&gt;" line="105"/>
                    <declaration name="tmpMain" type="Array1D&lt;N&gt;" line="106"/>
                    <declaration name="tmpSub" type="Array1D&lt;N&gt;" line="107"/>
                </scope>
                <scope line="112"/>
            </method>
            <method name="equals" type="boolean" line="119">
                <params>
                    <param name="aStore" type="MatrixStore<N>"/>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="getD" type="MatrixStore<N>" line="122">
                <scope line="123"/>
            </method>
            <method name="getQ" type="MatrixStore<N>" line="128">
                <scope line="129"/>
            </method>
            <method name="isFullSize" type="boolean" line="134"/>
            <method name="isSolvable" type="boolean" line="137"/>
            <method name="reconstruct" type="MatrixStore<N>" line="140"/>
            <method name="reset" type="void" line="143"/>
            <method name="getDiagonalAccessD" type="DiagonalAccess<N>" line="150">
                <scope line="151"/>
                <scope line="154"/>
            </method>
            <method name="makeD" type="MatrixStore<N>" line="158"/>
            <method name="makeQ" type="DecompositionStore<N>" line="161">
                <declaration name="retVal" type="DecompositionStore&lt;N&gt;" line="162"/>
                <declaration name="tmpDim" type="int" line="163"/>
                <declaration name="tmpHouseholderReference" type="DecompositionStore.HouseholderReference&lt;N&gt;" line="164"/>
                <scope line="165"/>
                <scope line="169"/>
                <scope line="174">
                    <scope line="177"/>
                    <scope line="181"/>
                </scope>
            </method>
            <method name="doQ" type="DecompositionStore<N>" line="187"/>
            <method name="makeReal" type="Array1D<N>" line="190"/>
        </class>
    </source>