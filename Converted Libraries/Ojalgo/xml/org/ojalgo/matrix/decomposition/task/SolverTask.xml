<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.decomposition.task">
        <import package="java.math.BigDecimal"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.decomposition.CholeskyDecomposition"/>
        <import package="org.ojalgo.matrix.decomposition.DecompositionStore"/>
        <import package="org.ojalgo.matrix.decomposition.LUDecomposition"/>
        <import package="org.ojalgo.matrix.decomposition.QRDecomposition"/>
        <import package="org.ojalgo.matrix.decomposition.SingularValueDecomposition"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <interface name="SolverTask">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <implements interface="DecompositionTask">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <class name="Factory" line="38">
                <type_params>
                    <type_param name="N"/>
                </type_params>
                <method name="make" type="SolverTask&lt;N&gt;" line="40">
                    <params>
                        <param name="templateBody" type="MatrixStore&lt;N&gt;"/>
                        <param name="templateRhs" type="MatrixStore&lt;N&gt;"/>
                    </params>
                </method>
                <method name="make" type="SolverTask&lt;N&gt;" line="44"/>
            </class>
            <declaration name="BIG" type="Factory&amp;lt;BigDecimal&amp;gt;" line="48"/>
            <anonymous_class line="48">
                <method name="make" type="SolverTask&lt;BigDecimal&gt;" line="51">
                    <params>
                        <param name="templateBody" type="MatrixStore&lt;BigDecimal&gt;"/>
                        <param name="templateRhs" type="MatrixStore&lt;BigDecimal&gt;"/>
                        <param name="symmetric" type="boolean"/>
                    </params>
                    <scope line="52"/>
                    <scope line="54"/>
                    <scope line="56"/>
                    <scope line="58"/>
                </method>
            </anonymous_class>
            <declaration name="COMPLEX" type="Factory&amp;lt;ComplexNumber&amp;gt;" line="65"/>
            <anonymous_class line="65">
                <method name="make" type="SolverTask&lt;ComplexNumber&gt;" line="69">
                    <params>
                        <param name="templateBody" type="MatrixStore&lt;ComplexNumber&gt;"/>
                        <param name="templateRhs" type="MatrixStore&lt;ComplexNumber&gt;"/>
                        <param name="symmetric" type="boolean"/>
                    </params>
                    <scope line="70"/>
                    <scope line="72"/>
                    <scope line="74"/>
                    <scope line="76"/>
                </method>
            </anonymous_class>
            <declaration name="PRIMITIVE" type="Factory&amp;lt;Double&amp;gt;" line="83"/>
            <anonymous_class line="83">
                <method name="make" type="SolverTask&lt;Double&gt;" line="86">
                    <params>
                        <param name="templateBody" type="MatrixStore&lt;Double&gt;"/>
                        <param name="templateRhs" type="MatrixStore&lt;Double&gt;"/>
                        <param name="symmetric" type="boolean"/>
                    </params>
                    <scope line="87">
                        <declaration name="tmpDim" type="long" line="88"/>
                        <scope line="89"/>
                        <scope line="91"/>
                        <scope line="93"/>
                        <scope line="95"/>
                        <scope line="97"/>
                        <scope line="99"/>
                    </scope>
                    <scope line="102">
                        <declaration name="tmpDim" type="long" line="103"/>
                        <scope line="104">
                            <scope line="105"/>
                            <scope line="107"/>
                            <scope line="109"/>
                            <scope line="111"/>
                            <scope line="113"/>
                            <scope line="115"/>
                        </scope>
                        <scope line="118">
                            <scope line="119"/>
                            <scope line="121"/>
                        </scope>
                        <scope line="124"/>
                    </scope>
                </method>
            </anonymous_class>
            <method name="preallocate" type="DecompositionStore&lt;N&gt;" line="132"/>
            <javadoc line="132">
                &lt;p&gt;
                  Implementiong this method is optional.
                  &lt;/p&gt;
                  Will create a {@linkplain DecompositionStore} instance suitable for use with{@link #solve(Access2D,DecompositionStore)}. When solving an equation system [A][X]=[B] ([mxn][nxb]=[mxb]) the
                  preallocated memory/matrix will typically be either mxb or nxb (if A is square then there is no doubt).                
                <param>
                    templateBody                    
                </param>
                <param>
                    templateRHS                    
                </param>
                <return>
                                        
                </return>
                <throws>
                    UnsupportedOperationException When/if this feature is not implemented                    
                </throws>
            </javadoc>
            <method name="solve" type="MatrixStore&lt;N&gt;" line="147"/>
            <javadoc line="147">
                [A][X]=[B] or [this][return]=[aRHS]                
            </javadoc>
            <method name="solve" type="MatrixStore&lt;N&gt;" line="152"/>
            <javadoc line="152">
                &lt;p&gt;
                  Implementiong this method is optional.
                  &lt;/p&gt;
                  &lt;p&gt;
                  Exactly how a specific implementation makes use of &lt;code&gt;preallocated&lt;/code&gt; is not specified by this interface.
                  It must be documented for each implementation.
                  &lt;/p&gt;
                  &lt;p&gt;
                  Should produce the same results as calling {@link #solve(Access2D)}.
                  &lt;/p&gt;                
                <param>
                    rhs The Right Hand Side, wont be modfied                    
                </param>
                <param>
                    preallocated Preallocated memory for the results, possibly some intermediate results. You must assume this
                      is modified, but you cannot assume it will contain the full/final/correct solution.                    
                </param>
                <return>
                    The solution                    
                </return>
                <throws>
                    UnsupportedOperationException When/if this feature is not implemented                    
                </throws>
            </javadoc>
        </interface>
    </source>