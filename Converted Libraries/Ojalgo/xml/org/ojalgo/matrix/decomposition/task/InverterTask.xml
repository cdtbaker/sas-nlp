<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.decomposition.task">
        <import package="java.math.BigDecimal"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.matrix.BasicMatrix"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.decomposition.CholeskyDecomposition"/>
        <import package="org.ojalgo.matrix.decomposition.DecompositionStore"/>
        <import package="org.ojalgo.matrix.decomposition.LUDecomposition"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <interface name="InverterTask">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <implements interface="DecompositionTask">
                <type_params>
                    <type_param name="N"/>
                </type_params>
            </implements>
            <class name="Factory" line="12">
                <type_params>
                    <type_param name="N"/>
                </type_params>
                <method name="make" type="InverterTask<N>" line="13">
                    <params>
                        <param name="template" type="MatrixStore<N>"/>
                    </params>
                </method>
                <method name="make" type="InverterTask<N>" line="16"/>
            </class>
            <declaration name="BIG" type="Factory&lt;BigDecimal&gt;" line="18"/>
            <anonymous_class line="18">
                <method name="make" type="InverterTask<BigDecimal>" line="19">
                    <params>
                        <param name="template" type="MatrixStore<BigDecimal>"/>
                        <param name="symmetric" type="boolean"/>
                    </params>
                    <scope line="20"/>
                    <scope line="23"/>
                </method>
            </anonymous_class>
            <declaration name="COMPLEX" type="Factory&lt;ComplexNumber&gt;" line="29"/>
            <anonymous_class line="29">
                <method name="make" type="InverterTask<ComplexNumber>" line="30">
                    <params>
                        <param name="template" type="MatrixStore<ComplexNumber>"/>
                        <param name="symmetric" type="boolean"/>
                    </params>
                    <scope line="31"/>
                    <scope line="34"/>
                </method>
            </anonymous_class>
            <declaration name="PRIMITIVE" type="Factory&lt;Double&gt;" line="40"/>
            <anonymous_class line="40">
                <method name="make" type="InverterTask<Double>" line="41">
                    <params>
                        <param name="template" type="MatrixStore<Double>"/>
                        <param name="symmetric" type="boolean"/>
                    </params>
                    <declaration name="tmpDim" type="long" line="42"/>
                    <scope line="43"/>
                    <scope line="46">
                        <scope line="47"/>
                        <scope line="50"/>
                        <scope line="53"/>
                        <scope line="56"/>
                        <scope line="59"/>
                    </scope>
                    <scope line="63">
                        <scope line="64"/>
                        <scope line="67"/>
                        <scope line="70"/>
                        <scope line="73"/>
                        <scope line="76"/>
                    </scope>
                </method>
            </anonymous_class>
            <method name="invert" type="MatrixStore<N>" line="83"/>
            <javadoc line="83">
                The output must be a &quot;right inverse&quot; and a &quot;generalised inverse&quot;.                
                <see>
                    BasicMatrix#invert()                    
                </see>
            </javadoc>
            <method name="invert" type="MatrixStore<N>" line="88"/>
            <javadoc line="88">
                &lt;p&gt;
                  Implementiong this method is optional.
                  &lt;/p&gt;
                  &lt;p&gt;
                  Exactly how a specific implementation makes use of &lt;code&gt;preallocated&lt;/code&gt; is not specified by this interface.
                  It must be documented for each implementation.
                  &lt;/p&gt;
                  &lt;p&gt;
                  Should produce the same results as calling {@link #getInverse()}.
                  &lt;/p&gt;                
                <param>
                    preallocated Preallocated memory for the results, possibly some intermediate results. You must assume this
                      is modified, but you cannot assume it will contain the full/final/correct solution.                    
                </param>
                <return>
                    The inverse                    
                </return>
                <throws>
                    UnsupportedOperationException When/if this feature is not implemented                    
                </throws>
            </javadoc>
            <method name="preallocate" type="DecompositionStore<N>" line="105"/>
            <javadoc line="105">
                &lt;p&gt;
                  Implementiong this method is optional.
                  &lt;/p&gt;
                  Will create a {@linkplain DecompositionStore} instance suitable for use with{@link #solve(Access2D,DecompositionStore)}. When solving an equation system [A][X]=[B] ([mxn][nxb]=[mxb]) the
                  preallocated memory/matrix will typically be either mxb or nxb (if A is square then there is no doubt).                
                <param>
                    templateBody                    
                </param>
                <param>
                    templateRHS                    
                </param>
                <return>
                                        
                </return>
                <throws>
                    UnsupportedOperationException When/if this feature is not implemented                    
                </throws>
            </javadoc>
        </interface>
    </source>