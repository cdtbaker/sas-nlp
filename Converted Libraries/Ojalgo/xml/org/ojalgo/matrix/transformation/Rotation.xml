<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.transformation">
        <import package="java.math.BigDecimal"/>
        <import package="org.ojalgo.ProgrammingError"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.BigFunction"/>
        <import package="org.ojalgo.function.ComplexFunction"/>
        <import package="org.ojalgo.function.PrimitiveFunction"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <class name="Rotation" line="9">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <extends class="Object"/>
            <class name="Big" line="10">
                <extends class="Rotation">
                    <type_params>
                        <type_param name="BigDecimal"/>
                    </type_params>
                </extends>
                <declaration name="cos" type="BigDecimal" line="11"/>
                <declaration name="sin" type="BigDecimal" line="12"/>
                <method name="Big" type="constructor" line="13">
                    <params>
                        <param name="index" type="int"/>
                    </params>
                </method>
                <method name="Big" type="constructor" line="16">
                    <params>
                        <param name="aLowerIndex" type="int"/>
                        <param name="aHigherIndex" type="int"/>
                    </params>
                </method>
                <method name="Big" type="constructor" line="19">
                    <params>
                        <param name="aLowerIndex" type="int"/>
                        <param name="aHigherIndex" type="int"/>
                        <param name="aCosine" type="BigDecimal"/>
                        <param name="aSine" type="BigDecimal"/>
                    </params>
                </method>
                <method name="Big" type="constructor" line="24">
                    <params>
                        <param name="aRotation" type="Rotation<BigDecimal>"/>
                    </params>
                </method>
                <method name="doubleCosineValue" type="double" line="29"/>
                <method name="doubleSineValue" type="double" line="32"/>
                <method name="getCosine" type="BigDecimal" line="35"/>
                <method name="getSine" type="BigDecimal" line="38"/>
                <method name="invert" type="Big" line="41"/>
            </class>
            <class name="Complex" line="45">
                <extends class="Rotation">
                    <type_params>
                        <type_param name="ComplexNumber"/>
                    </type_params>
                </extends>
                <declaration name="cos" type="ComplexNumber" line="46"/>
                <declaration name="sin" type="ComplexNumber" line="47"/>
                <method name="Complex" type="constructor" line="48">
                    <params>
                        <param name="index" type="int"/>
                    </params>
                </method>
                <method name="Complex" type="constructor" line="51">
                    <params>
                        <param name="aLowerIndex" type="int"/>
                        <param name="aHigherIndex" type="int"/>
                    </params>
                </method>
                <method name="Complex" type="constructor" line="54">
                    <params>
                        <param name="aLowerIndex" type="int"/>
                        <param name="aHigherIndex" type="int"/>
                        <param name="aCosine" type="ComplexNumber"/>
                        <param name="aSine" type="ComplexNumber"/>
                    </params>
                </method>
                <method name="Complex" type="constructor" line="59">
                    <params>
                        <param name="aRotation" type="Rotation<ComplexNumber>"/>
                    </params>
                </method>
                <method name="doubleCosineValue" type="double" line="64"/>
                <method name="doubleSineValue" type="double" line="67"/>
                <method name="getCosine" type="ComplexNumber" line="70"/>
                <method name="getSine" type="ComplexNumber" line="73"/>
                <method name="invert" type="Complex" line="76"/>
            </class>
            <class name="Primitive" line="80">
                <extends class="Rotation">
                    <type_params>
                        <type_param name="Double"/>
                    </type_params>
                </extends>
                <declaration name="cos" type="double" line="81"/>
                <declaration name="sin" type="double" line="82"/>
                <method name="Primitive" type="constructor" line="83">
                    <params>
                        <param name="index" type="int"/>
                    </params>
                </method>
                <method name="Primitive" type="constructor" line="86">
                    <params>
                        <param name="aLowerIndex" type="int"/>
                        <param name="aHigherIndex" type="int"/>
                    </params>
                </method>
                <method name="Primitive" type="constructor" line="89">
                    <params>
                        <param name="aLowerIndex" type="int"/>
                        <param name="aHigherIndex" type="int"/>
                        <param name="aCosine" type="double"/>
                        <param name="aSine" type="double"/>
                    </params>
                </method>
                <method name="Primitive" type="constructor" line="94">
                    <params>
                        <param name="aRotation" type="Rotation<Double>"/>
                    </params>
                    <scope line="96"/>
                    <scope line="99"/>
                    <scope line="102"/>
                    <scope line="105"/>
                </method>
                <method name="doubleCosineValue" type="double" line="109"/>
                <method name="doubleSineValue" type="double" line="112"/>
                <method name="getCosine" type="Double" line="115"/>
                <method name="getSine" type="Double" line="118"/>
                <method name="invert" type="Primitive" line="121"/>
            </class>
            <method name="makeBig" type="Big" line="125">
                <params>
                    <param name="aLowerIndex" type="int"/>
                    <param name="aHigherIndex" type="int"/>
                    <param name="anAngle" type="BigDecimal"/>
                </params>
            </method>
            <method name="makeComplex" type="Complex" line="128">
                <params>
                    <param name="aLowerIndex" type="int"/>
                    <param name="aHigherIndex" type="int"/>
                    <param name="anAngle" type="ComplexNumber"/>
                </params>
            </method>
            <method name="makePrimitive" type="Primitive" line="131">
                <params>
                    <param name="aLowerIndex" type="int"/>
                    <param name="aHigherIndex" type="int"/>
                    <param name="anAngle" type="double"/>
                </params>
            </method>
            <declaration name="high" type="int" line="134"/>
            <declaration name="low" type="int" line="135"/>
            <method name="Rotation" type="constructor" line="136"/>
            <method name="Rotation" type="constructor" line="140">
                <params>
                    <param name="aLowerIndex" type="int"/>
                    <param name="aHigherIndex" type="int"/>
                </params>
            </method>
            <method name="doubleCosineValue" type="double" line="145"/>
            <method name="doubleSineValue" type="double" line="146"/>
            <method name="getCosine" type="N" line="147"/>
            <method name="getSine" type="N" line="148"/>
            <method name="invert" type="Rotation<N>" line="149"/>
            <method name="toString" type="String" line="150"/>
        </class>
    </source>