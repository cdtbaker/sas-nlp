<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.transformation">
        <import package="java.math.BigDecimal"/>
        <import package="org.ojalgo.ProgrammingError"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.BigFunction"/>
        <import package="org.ojalgo.function.ComplexFunction"/>
        <import package="org.ojalgo.function.PrimitiveFunction"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <class name="Rotation" line="33">
            <type_params>
                <type_param name="N"/>
            </type_params>
            <extends class="Object"/>
            <class name="Big" line="35">
                <extends class="Rotation">
                    <type_params>
                        <type_param name="BigDecimal"/>
                    </type_params>
                </extends>
                <declaration name="cos" type="BigDecimal" line="37"/>
                <declaration name="sin" type="BigDecimal" line="38"/>
                <method name="Big" type="constructor" line="40">
                    <params>
                        <param name="index" type="int"/>
                    </params>
                </method>
                <method name="Big" type="constructor" line="44">
                    <params>
                        <param name="aLowerIndex" type="int"/>
                        <param name="aHigherIndex" type="int"/>
                    </params>
                </method>
                <method name="Big" type="constructor" line="48">
                    <params>
                        <param name="aLowerIndex" type="int"/>
                        <param name="aHigherIndex" type="int"/>
                        <param name="aCosine" type="BigDecimal"/>
                        <param name="aSine" type="BigDecimal"/>
                    </params>
                </method>
                <method name="Big" type="constructor" line="56">
                    <params>
                        <param name="aRotation" type="Rotation&lt;BigDecimal&gt;"/>
                    </params>
                </method>
                <method name="doubleCosineValue" type="double" line="65"/>
                <method name="doubleSineValue" type="double" line="70"/>
                <method name="getCosine" type="BigDecimal" line="75"/>
                <method name="getSine" type="BigDecimal" line="80"/>
                <method name="invert" type="Big" line="85"/>
            </class>
            <class name="Complex" line="91">
                <extends class="Rotation">
                    <type_params>
                        <type_param name="ComplexNumber"/>
                    </type_params>
                </extends>
                <declaration name="cos" type="ComplexNumber" line="93"/>
                <declaration name="sin" type="ComplexNumber" line="94"/>
                <method name="Complex" type="constructor" line="96">
                    <params>
                        <param name="index" type="int"/>
                    </params>
                </method>
                <method name="Complex" type="constructor" line="100">
                    <params>
                        <param name="aLowerIndex" type="int"/>
                        <param name="aHigherIndex" type="int"/>
                    </params>
                </method>
                <method name="Complex" type="constructor" line="104">
                    <params>
                        <param name="aLowerIndex" type="int"/>
                        <param name="aHigherIndex" type="int"/>
                        <param name="aCosine" type="ComplexNumber"/>
                        <param name="aSine" type="ComplexNumber"/>
                    </params>
                </method>
                <method name="Complex" type="constructor" line="112">
                    <params>
                        <param name="aRotation" type="Rotation&lt;ComplexNumber&gt;"/>
                    </params>
                </method>
                <method name="doubleCosineValue" type="double" line="121"/>
                <method name="doubleSineValue" type="double" line="126"/>
                <method name="getCosine" type="ComplexNumber" line="131"/>
                <method name="getSine" type="ComplexNumber" line="136"/>
                <method name="invert" type="Complex" line="141"/>
            </class>
            <class name="Primitive" line="147">
                <extends class="Rotation">
                    <type_params>
                        <type_param name="Double"/>
                    </type_params>
                </extends>
                <declaration name="cos" type="double" line="149"/>
                <declaration name="sin" type="double" line="150"/>
                <method name="Primitive" type="constructor" line="152">
                    <params>
                        <param name="index" type="int"/>
                    </params>
                </method>
                <method name="Primitive" type="constructor" line="156">
                    <params>
                        <param name="aLowerIndex" type="int"/>
                        <param name="aHigherIndex" type="int"/>
                    </params>
                </method>
                <method name="Primitive" type="constructor" line="160">
                    <params>
                        <param name="aLowerIndex" type="int"/>
                        <param name="aHigherIndex" type="int"/>
                        <param name="aCosine" type="double"/>
                        <param name="aSine" type="double"/>
                    </params>
                </method>
                <method name="Primitive" type="constructor" line="168">
                    <params>
                        <param name="aRotation" type="Rotation&lt;Double&gt;"/>
                    </params>
                    <scope line="172"/>
                    <scope line="174"/>
                    <scope line="178"/>
                    <scope line="180"/>
                </method>
                <method name="doubleCosineValue" type="double" line="186"/>
                <method name="doubleSineValue" type="double" line="191"/>
                <method name="getCosine" type="Double" line="196"/>
                <method name="getSine" type="Double" line="201"/>
                <method name="invert" type="Primitive" line="206"/>
            </class>
            <method name="makeBig" type="Big" line="212">
                <params>
                    <param name="aLowerIndex" type="int"/>
                    <param name="aHigherIndex" type="int"/>
                    <param name="anAngle" type="BigDecimal"/>
                </params>
            </method>
            <method name="makeComplex" type="Complex" line="216">
                <params>
                    <param name="aLowerIndex" type="int"/>
                    <param name="aHigherIndex" type="int"/>
                    <param name="anAngle" type="ComplexNumber"/>
                </params>
            </method>
            <method name="makePrimitive" type="Primitive" line="220">
                <params>
                    <param name="aLowerIndex" type="int"/>
                    <param name="aHigherIndex" type="int"/>
                    <param name="anAngle" type="double"/>
                </params>
            </method>
            <declaration name="high" type="int" line="224"/>
            <declaration name="low" type="int" line="226"/>
            <method name="Rotation" type="constructor" line="229"/>
            <method name="Rotation" type="constructor" line="236">
                <params>
                    <param name="aLowerIndex" type="int"/>
                    <param name="aHigherIndex" type="int"/>
                </params>
            </method>
            <method name="doubleCosineValue" type="double" line="244"/>
            <method name="doubleSineValue" type="double" line="246"/>
            <method name="getCosine" type="N" line="248"/>
            <method name="getSine" type="N" line="250"/>
            <method name="invert" type="Rotation&lt;N&gt;" line="252"/>
            <method name="toString" type="String" line="255"/>
        </class>
    </source>