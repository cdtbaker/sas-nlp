<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix">
        <import package="java.lang.reflect.Constructor"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="java.util.List"/>
        <import package="org.ojalgo.ProgrammingError"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.access.Access2D.Builder"/>
        <import package="org.ojalgo.matrix.store.AboveBelowStore"/>
        <import package="org.ojalgo.matrix.store.IdentityStore"/>
        <import package="org.ojalgo.matrix.store.LeftRightStore"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore"/>
        <import package="org.ojalgo.matrix.store.ZeroStore"/>
        <import package="org.ojalgo.random.RandomNumber"/>
        <class name="MatrixFactory" line="40">
            <type_params>
                <type_param name="N"/>
                <type_param name="I"/>
            </type_params>
            <implements interface="BasicMatrix.Factory">
                <type_params>
                    <type_param name="I"/>
                </type_params>
            </implements>
            <javadoc line="40">
                MatrixFactory creates instances of classes that implement the {@linkplain org.ojalgo.matrix.BasicMatrix} interface
                  and have a constructor that takes a MatrixStore as input.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <class name="MatrixBuilder" line="48">
                <implements interface="Access2D.Builder">
                    <type_params>
                        <type_param name="I"/>
                    </type_params>
                </implements>
                <declaration name="myPhysicalStore" type="PhysicalStore&amp;lt;N&amp;gt;" line="50"/>
                <declaration name="myFactory" type="PhysicalStore.Factory&amp;lt;N,?&amp;gt;" line="51"/>
                <method name="MatrixBuilder" type="constructor" line="54"/>
                <method name="MatrixBuilder" type="constructor" line="58">
                    <params>
                        <param name="aFactory" type="PhysicalStore.Factory&lt;N,?&gt;"/>
                        <param name="aRowDim" type="int"/>
                        <param name="aColDim" type="int"/>
                    </params>
                </method>
                <method name="MatrixBuilder" type="constructor" line="66">
                    <params>
                        <param name="aPhysicalStore" type="PhysicalStore&lt;N&gt;"/>
                    </params>
                </method>
                <method name="build" type="I" line="75"/>
                <method name="count" type="long" line="79"/>
                <method name="countColumns" type="long" line="83"/>
                <method name="countRows" type="long" line="87"/>
                <method name="fillAll" type="MatrixBuilder" line="91">
                    <params>
                        <param name="aNmbr" type="Number"/>
                    </params>
                </method>
                <method name="fillColumn" type="MatrixBuilder" line="96">
                    <params>
                        <param name="aRow" type="long"/>
                        <param name="aCol" type="long"/>
                        <param name="aNmbr" type="Number"/>
                    </params>
                </method>
                <method name="fillDiagonal" type="MatrixBuilder" line="101">
                    <params>
                        <param name="aRow" type="long"/>
                        <param name="aCol" type="long"/>
                        <param name="aNmbr" type="Number"/>
                    </params>
                </method>
                <method name="fillRow" type="MatrixBuilder" line="106">
                    <params>
                        <param name="aRow" type="long"/>
                        <param name="aCol" type="long"/>
                        <param name="aNmbr" type="Number"/>
                    </params>
                </method>
                <method name="set" type="MatrixBuilder" line="111">
                    <params>
                        <param name="index" type="long"/>
                        <param name="aNmbr" type="double"/>
                    </params>
                </method>
                <method name="set" type="MatrixBuilder" line="116">
                    <params>
                        <param name="aRow" type="long"/>
                        <param name="aCol" type="long"/>
                        <param name="aNmbr" type="double"/>
                    </params>
                </method>
                <method name="set" type="MatrixBuilder" line="121">
                    <params>
                        <param name="aRow" type="long"/>
                        <param name="aCol" type="long"/>
                        <param name="aNmbr" type="Number"/>
                    </params>
                </method>
                <method name="set" type="MatrixBuilder" line="126">
                    <params>
                        <param name="index" type="long"/>
                        <param name="aNmbr" type="Number"/>
                    </params>
                </method>
            </class>
            <method name="getConstructor" type="Constructor&lt;? extends BasicMatrix&gt;" line="133">
                <params>
                    <param name="aTemplate" type="Class&lt;? extends BasicMatrix&gt;"/>
                </params>
                <scope line="134">
                    <declaration name="retVal" type="Constructor&amp;lt;? extends BasicMatrix&amp;gt;" line="135"/>
                </scope>
                <scope line="138"/>
                <scope line="140"/>
            </method>
            <declaration name="myConstructor" type="Constructor&amp;lt;I&amp;gt;" line="145"/>
            <declaration name="myPhysicalFactory" type="PhysicalStore.Factory&amp;lt;N,?&amp;gt;" line="146"/>
            <method name="MatrixFactory" type="constructor" line="149"/>
            <method name="MatrixFactory" type="constructor" line="156">
                <params>
                    <param name="aTemplate" type="Class&lt;I&gt;"/>
                    <param name="aPhysical" type="PhysicalStore.Factory&lt;N,?&gt;"/>
                </params>
            </method>
            <method name="columns" type="I" line="164">
                <params>
                    <param name="source" type="Access1D&lt;?&gt;"/>
                </params>
            </method>
            <method name="columns" type="I" line="168">
                <params>
                    <param name="source" type="double[]"/>
                </params>
            </method>
            <method name="columns" type="I" line="172">
                <params>
                    <param name="source" type="List&lt;? extends Number&gt;"/>
                </params>
            </method>
            <method name="columns" type="I" line="176">
                <params>
                    <param name="source" type="Number[]"/>
                </params>
            </method>
            <method name="copy" type="I" line="180">
                <params>
                    <param name="source" type="Access2D&lt;?&gt;"/>
                </params>
            </method>
            <method name="getBuilder" type="Builder&lt;I&gt;" line="184">
                <params>
                    <param name="count" type="int"/>
                </params>
            </method>
            <method name="getBuilder" type="Builder&lt;I&gt;" line="188">
                <params>
                    <param name="rows" type="int"/>
                    <param name="columns" type="int"/>
                </params>
            </method>
            <method name="makeEye" type="I" line="192">
                <params>
                    <param name="rows" type="long"/>
                    <param name="columns" type="long"/>
                </params>
                <declaration name="tmpMinDim" type="int" line="194"/>
                <declaration name="retVal" type="MatrixStore&amp;lt;N&amp;gt;" line="196"/>
                <scope line="198"/>
                <scope line="200"/>
            </method>
            <method name="makeRandom" type="I" line="207">
                <params>
                    <param name="rows" type="long"/>
                    <param name="columns" type="long"/>
                    <param name="distribution" type="RandomNumber"/>
                </params>
            </method>
            <method name="makeZero" type="I" line="211">
                <params>
                    <param name="rows" type="long"/>
                    <param name="columns" type="long"/>
                </params>
            </method>
            <method name="rows" type="I" line="215">
                <params>
                    <param name="source" type="Access1D&lt;?&gt;"/>
                </params>
            </method>
            <method name="rows" type="I" line="219">
                <params>
                    <param name="source" type="double[]"/>
                </params>
            </method>
            <method name="rows" type="I" line="223">
                <params>
                    <param name="source" type="List&lt;? extends Number&gt;"/>
                </params>
            </method>
            <method name="rows" type="I" line="227">
                <params>
                    <param name="source" type="Number[]"/>
                </params>
            </method>
            <method name="getPhysicalFactory" type="PhysicalStore.Factory&lt;N,?&gt;" line="231"/>
            <javadoc line="235">
                This method is for internal use only - YOU should NOT use it!                
            </javadoc>
            <method name="instantiate" type="I" line="238">
                <params>
                    <param name="aStore" type="MatrixStore&lt;N&gt;"/>
                </params>
                <scope line="239"/>
                <scope line="241"/>
                <scope line="243"/>
                <scope line="245"/>
                <scope line="247"/>
            </method>
            <method name="wrap" type="MatrixBuilder" line="252">
                <params>
                    <param name="aStore" type="PhysicalStore&lt;N&gt;"/>
                </params>
            </method>
        </class>
    </source>