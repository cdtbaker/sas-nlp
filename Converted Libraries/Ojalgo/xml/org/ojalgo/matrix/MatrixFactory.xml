<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix">
        <import package="java.lang.reflect.Constructor"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="java.util.List"/>
        <import package="org.ojalgo.ProgrammingError"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.access.Access2D.Builder"/>
        <import package="org.ojalgo.matrix.store.AboveBelowStore"/>
        <import package="org.ojalgo.matrix.store.IdentityStore"/>
        <import package="org.ojalgo.matrix.store.LeftRightStore"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore"/>
        <import package="org.ojalgo.matrix.store.ZeroStore"/>
        <import package="org.ojalgo.random.RandomNumber"/>
        <class name="MatrixFactory" line="40">
            <type_params>
                <type_param name="N"/>
                <type_param name="I"/>
            </type_params>
            <implements interface="BasicMatrix.Factory">
                <type_params>
                    <type_param name="I"/>
                </type_params>
            </implements>
            <javadoc line="40">
                MatrixFactory creates instances of classes that implement the{@linkplain org.ojalgo.matrix.BasicMatrix} interface and have a 
                  constructor that takes a MatrixStore as input.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <class name="MatrixBuilder" line="49">
                <implements interface="Access2D.Builder">
                    <type_params>
                        <type_param name="I"/>
                    </type_params>
                </implements>
                <declaration name="myPhysicalStore" type="PhysicalStore&lt;N&gt;" line="51"/>
                <declaration name="myFactory" type="PhysicalStore.Factory&lt;N,?&gt;" line="52"/>
                <method name="MatrixBuilder" type="constructor" line="55"/>
                <method name="MatrixBuilder" type="constructor" line="59">
                    <params>
                        <param name="aFactory" type="PhysicalStore.Factory<N,?>"/>
                        <param name="aRowDim" type="int"/>
                        <param name="aColDim" type="int"/>
                    </params>
                </method>
                <method name="MatrixBuilder" type="constructor" line="67">
                    <params>
                        <param name="aPhysicalStore" type="PhysicalStore<N>"/>
                    </params>
                </method>
                <method name="build" type="I" line="76"/>
                <method name="count" type="long" line="80"/>
                <method name="countColumns" type="long" line="84"/>
                <method name="countRows" type="long" line="88"/>
                <method name="fillAll" type="MatrixBuilder" line="92">
                    <params>
                        <param name="aNmbr" type="Number"/>
                    </params>
                </method>
                <method name="fillColumn" type="MatrixBuilder" line="97">
                    <params>
                        <param name="aRow" type="long"/>
                        <param name="aCol" type="long"/>
                        <param name="aNmbr" type="Number"/>
                    </params>
                </method>
                <method name="fillDiagonal" type="MatrixBuilder" line="102">
                    <params>
                        <param name="aRow" type="long"/>
                        <param name="aCol" type="long"/>
                        <param name="aNmbr" type="Number"/>
                    </params>
                </method>
                <method name="fillRow" type="MatrixBuilder" line="107">
                    <params>
                        <param name="aRow" type="long"/>
                        <param name="aCol" type="long"/>
                        <param name="aNmbr" type="Number"/>
                    </params>
                </method>
                <method name="getColDim" type="int" line="112"/>
                <method name="getRowDim" type="int" line="116"/>
                <method name="set" type="MatrixBuilder" line="120">
                    <params>
                        <param name="index" type="long"/>
                        <param name="aNmbr" type="double"/>
                    </params>
                </method>
                <method name="set" type="MatrixBuilder" line="125">
                    <params>
                        <param name="aRow" type="long"/>
                        <param name="aCol" type="long"/>
                        <param name="aNmbr" type="double"/>
                    </params>
                </method>
                <method name="set" type="MatrixBuilder" line="130">
                    <params>
                        <param name="aRow" type="long"/>
                        <param name="aCol" type="long"/>
                        <param name="aNmbr" type="Number"/>
                    </params>
                </method>
                <method name="set" type="MatrixBuilder" line="135">
                    <params>
                        <param name="index" type="long"/>
                        <param name="aNmbr" type="Number"/>
                    </params>
                </method>
                <method name="size" type="int" line="140"/>
            </class>
            <method name="getConstructor" type="Constructor<? extends BasicMatrix>" line="145">
                <params>
                    <param name="aTemplate" type="Class<? extends BasicMatrix>"/>
                </params>
                <scope line="146">
                    <declaration name="retVal" type="Constructor&lt;? extends BasicMatrix&gt;" line="147"/>
                </scope>
                <scope line="150"/>
                <scope line="152"/>
            </method>
            <declaration name="myConstructor" type="Constructor&lt;I&gt;" line="157"/>
            <declaration name="myPhysicalFactory" type="PhysicalStore.Factory&lt;N,?&gt;" line="158"/>
            <method name="MatrixFactory" type="constructor" line="161"/>
            <method name="MatrixFactory" type="constructor" line="168">
                <params>
                    <param name="aTemplate" type="Class<I>"/>
                    <param name="aPhysical" type="PhysicalStore.Factory<N,?>"/>
                </params>
            </method>
            <method name="columns" type="I" line="176">
                <params>
                    <param name="source" type="Access1D<?>"/>
                </params>
            </method>
            <method name="columns" type="I" line="180">
                <params>
                    <param name="source" type="double[]"/>
                </params>
            </method>
            <method name="columns" type="I" line="184">
                <params>
                    <param name="source" type="List<? extends Number>"/>
                </params>
            </method>
            <method name="columns" type="I" line="188">
                <params>
                    <param name="source" type="Number[]"/>
                </params>
            </method>
            <method name="copy" type="I" line="192">
                <params>
                    <param name="source" type="Access2D<?>"/>
                </params>
            </method>
            <method name="getBuilder" type="Builder<I>" line="196">
                <params>
                    <param name="count" type="int"/>
                </params>
            </method>
            <method name="getBuilder" type="Builder<I>" line="200">
                <params>
                    <param name="rows" type="int"/>
                    <param name="columns" type="int"/>
                </params>
            </method>
            <method name="makeEye" type="I" line="204">
                <params>
                    <param name="rows" type="long"/>
                    <param name="columns" type="long"/>
                </params>
                <declaration name="tmpMinDim" type="int" line="206"/>
                <declaration name="retVal" type="MatrixStore&lt;N&gt;" line="208"/>
                <scope line="210"/>
                <scope line="212"/>
            </method>
            <method name="makeRandom" type="I" line="219">
                <params>
                    <param name="rows" type="long"/>
                    <param name="columns" type="long"/>
                    <param name="distribution" type="RandomNumber"/>
                </params>
            </method>
            <method name="makeZero" type="I" line="223">
                <params>
                    <param name="rows" type="long"/>
                    <param name="columns" type="long"/>
                </params>
            </method>
            <method name="rows" type="I" line="227">
                <params>
                    <param name="source" type="Access1D<?>"/>
                </params>
            </method>
            <method name="rows" type="I" line="231">
                <params>
                    <param name="source" type="double[]"/>
                </params>
            </method>
            <method name="rows" type="I" line="235">
                <params>
                    <param name="source" type="List<? extends Number>"/>
                </params>
            </method>
            <method name="rows" type="I" line="239">
                <params>
                    <param name="source" type="Number[]"/>
                </params>
            </method>
            <method name="getPhysicalFactory" type="PhysicalStore.Factory<N,?>" line="243"/>
            <javadoc line="247">
                This method is for internal use only - YOU should NOT use it!                
            </javadoc>
            <method name="instantiate" type="I" line="250">
                <params>
                    <param name="aStore" type="MatrixStore<N>"/>
                </params>
                <scope line="251"/>
                <scope line="253"/>
                <scope line="255"/>
                <scope line="257"/>
                <scope line="259"/>
            </method>
            <method name="wrap" type="MatrixBuilder" line="264">
                <params>
                    <param name="aStore" type="PhysicalStore<N>"/>
                </params>
            </method>
        </class>
    </source>