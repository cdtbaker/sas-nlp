<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix">
        <import package="java.lang.reflect.Constructor"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="java.util.List"/>
        <import package="org.ojalgo.ProgrammingError"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.access.Access2D.Builder"/>
        <import package="org.ojalgo.matrix.store.AboveBelowStore"/>
        <import package="org.ojalgo.matrix.store.IdentityStore"/>
        <import package="org.ojalgo.matrix.store.LeftRightStore"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore"/>
        <import package="org.ojalgo.matrix.store.ZeroStore"/>
        <import package="org.ojalgo.random.RandomNumber"/>
        <class name="MatrixFactory" line="16">
            <type_params>
                <type_param name="N"/>
                <type_param name="I"/>
            </type_params>
            <implements interface="BasicMatrix.Factory">
                <type_params>
                    <type_param name="I"/>
                </type_params>
            </implements>
            <javadoc line="16">
                MatrixFactory creates instances of classes that implement the{@linkplain org.ojalgo.matrix.BasicMatrix} interface and have a 
                  constructor that takes a MatrixStore as input.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <class name="MatrixBuilder" line="22">
                <implements interface="Access2D.Builder">
                    <type_params>
                        <type_param name="I"/>
                    </type_params>
                </implements>
                <declaration name="myPhysicalStore" type="PhysicalStore&lt;N&gt;" line="23"/>
                <declaration name="myFactory" type="PhysicalStore.Factory&lt;N,?&gt;" line="24"/>
                <method name="MatrixBuilder" type="constructor" line="25"/>
                <method name="MatrixBuilder" type="constructor" line="28">
                    <params>
                        <param name="aFactory" type="PhysicalStore.Factory<N,?>"/>
                        <param name="aRowDim" type="int"/>
                        <param name="aColDim" type="int"/>
                    </params>
                </method>
                <method name="MatrixBuilder" type="constructor" line="33">
                    <params>
                        <param name="aPhysicalStore" type="PhysicalStore<N>"/>
                    </params>
                </method>
                <method name="build" type="I" line="38"/>
                <method name="count" type="long" line="41"/>
                <method name="countColumns" type="long" line="44"/>
                <method name="countRows" type="long" line="47"/>
                <method name="fillAll" type="MatrixBuilder" line="50">
                    <params>
                        <param name="aNmbr" type="Number"/>
                    </params>
                </method>
                <method name="fillColumn" type="MatrixBuilder" line="54">
                    <params>
                        <param name="aRow" type="long"/>
                        <param name="aCol" type="long"/>
                        <param name="aNmbr" type="Number"/>
                    </params>
                </method>
                <method name="fillDiagonal" type="MatrixBuilder" line="58">
                    <params>
                        <param name="aRow" type="long"/>
                        <param name="aCol" type="long"/>
                        <param name="aNmbr" type="Number"/>
                    </params>
                </method>
                <method name="fillRow" type="MatrixBuilder" line="62">
                    <params>
                        <param name="aRow" type="long"/>
                        <param name="aCol" type="long"/>
                        <param name="aNmbr" type="Number"/>
                    </params>
                </method>
                <method name="getColDim" type="int" line="66"/>
                <method name="getRowDim" type="int" line="69"/>
                <method name="set" type="MatrixBuilder" line="72">
                    <params>
                        <param name="index" type="long"/>
                        <param name="aNmbr" type="double"/>
                    </params>
                </method>
                <method name="set" type="MatrixBuilder" line="76">
                    <params>
                        <param name="aRow" type="long"/>
                        <param name="aCol" type="long"/>
                        <param name="aNmbr" type="double"/>
                    </params>
                </method>
                <method name="set" type="MatrixBuilder" line="80">
                    <params>
                        <param name="aRow" type="long"/>
                        <param name="aCol" type="long"/>
                        <param name="aNmbr" type="Number"/>
                    </params>
                </method>
                <method name="set" type="MatrixBuilder" line="84">
                    <params>
                        <param name="index" type="long"/>
                        <param name="aNmbr" type="Number"/>
                    </params>
                </method>
                <method name="size" type="int" line="88"/>
            </class>
            <method name="getConstructor" type="Constructor<? extends BasicMatrix>" line="92">
                <params>
                    <param name="aTemplate" type="Class<? extends BasicMatrix>"/>
                </params>
                <scope line="93">
                    <declaration name="retVal" type="Constructor&lt;? extends BasicMatrix&gt;" line="94"/>
                </scope>
                <scope line="98"/>
                <scope line="101"/>
            </method>
            <declaration name="myConstructor" type="Constructor&lt;I&gt;" line="105"/>
            <declaration name="myPhysicalFactory" type="PhysicalStore.Factory&lt;N,?&gt;" line="106"/>
            <method name="MatrixFactory" type="constructor" line="107"/>
            <method name="MatrixFactory" type="constructor" line="111">
                <params>
                    <param name="aTemplate" type="Class<I>"/>
                    <param name="aPhysical" type="PhysicalStore.Factory<N,?>"/>
                </params>
            </method>
            <method name="columns" type="I" line="116">
                <params>
                    <param name="source" type="Access1D<?>"/>
                </params>
            </method>
            <method name="columns" type="I" line="119">
                <params>
                    <param name="source" type="double[]"/>
                </params>
            </method>
            <method name="columns" type="I" line="122">
                <params>
                    <param name="source" type="List<? extends Number>"/>
                </params>
            </method>
            <method name="columns" type="I" line="125">
                <params>
                    <param name="source" type="Number[]"/>
                </params>
            </method>
            <method name="copy" type="I" line="128">
                <params>
                    <param name="source" type="Access2D<?>"/>
                </params>
            </method>
            <method name="getBuilder" type="Builder<I>" line="131">
                <params>
                    <param name="count" type="int"/>
                </params>
            </method>
            <method name="getBuilder" type="Builder<I>" line="134">
                <params>
                    <param name="rows" type="int"/>
                    <param name="columns" type="int"/>
                </params>
            </method>
            <method name="makeEye" type="I" line="137">
                <params>
                    <param name="rows" type="long"/>
                    <param name="columns" type="long"/>
                </params>
                <declaration name="tmpMinDim" type="int" line="138"/>
                <declaration name="retVal" type="MatrixStore&lt;N&gt;" line="139"/>
                <scope line="140"/>
                <scope line="143"/>
            </method>
            <method name="makeRandom" type="I" line="148">
                <params>
                    <param name="rows" type="long"/>
                    <param name="columns" type="long"/>
                    <param name="distribution" type="RandomNumber"/>
                </params>
            </method>
            <method name="makeZero" type="I" line="151">
                <params>
                    <param name="rows" type="long"/>
                    <param name="columns" type="long"/>
                </params>
            </method>
            <method name="rows" type="I" line="154">
                <params>
                    <param name="source" type="Access1D<?>"/>
                </params>
            </method>
            <method name="rows" type="I" line="157">
                <params>
                    <param name="source" type="double[]"/>
                </params>
            </method>
            <method name="rows" type="I" line="160">
                <params>
                    <param name="source" type="List<? extends Number>"/>
                </params>
            </method>
            <method name="rows" type="I" line="163">
                <params>
                    <param name="source" type="Number[]"/>
                </params>
            </method>
            <method name="getPhysicalFactory" type="PhysicalStore.Factory<N,?>" line="166"/>
            <javadoc line="169">
                This method is for internal use only - YOU should NOT use it!                
            </javadoc>
            <method name="instantiate" type="I" line="172">
                <params>
                    <param name="aStore" type="MatrixStore<N>"/>
                </params>
                <scope line="173"/>
                <scope line="176"/>
                <scope line="179"/>
                <scope line="182"/>
                <scope line="185"/>
            </method>
            <method name="wrap" type="MatrixBuilder" line="189">
                <params>
                    <param name="aStore" type="PhysicalStore<N>"/>
                </params>
            </method>
        </class>
    </source>