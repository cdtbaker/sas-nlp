<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix">
        <import package="java.math.BigDecimal"/>
        <import package="java.util.Iterator"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.access.AccessUtils"/>
        <import package="org.ojalgo.access.Iterator1D"/>
        <import package="org.ojalgo.array.Array1D"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.matrix.decomposition"/>
        <import package="org.ojalgo.matrix.store.ComplexDenseStore"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore"/>
        <import package="org.ojalgo.matrix.store.operation"/>
        <import package="org.ojalgo.random.Uniform"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="MatrixUtils" line="19">
            <method name="equals" type="boolean" line="20">
                <params>
                    <param name="matrix" type="MatrixStore<N>"/>
                    <param name="decomposition" type="Bidiagonal<N>"/>
                    <param name="context" type="NumberContext"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="21"/>
                <declaration name="tmpColDim" type="int" line="22"/>
                <declaration name="tmpQ1" type="MatrixStore&lt;N&gt;" line="23"/>
                <declaration name="tmpD" type="MatrixStore&lt;N&gt;" line="24"/>
                <declaration name="tmpQ2" type="MatrixStore&lt;N&gt;" line="25"/>
                <declaration name="tmpConjugatedQ1" type="MatrixStore&lt;N&gt;" line="26"/>
                <declaration name="tmpConjugatedQ2" type="MatrixStore&lt;N&gt;" line="27"/>
                <declaration name="tmpThis" type="MatrixStore&lt;N&gt;" line="28"/>
                <declaration name="tmpThat" type="MatrixStore&lt;N&gt;" line="29"/>
                <declaration name="retVal" type="boolean" line="30"/>
                <scope line="31"/>
                <scope line="36"/>
                <scope line="41"/>
            </method>
            <method name="equals" type="boolean" line="48">
                <params>
                    <param name="matrix" type="MatrixStore<N>"/>
                    <param name="decomposition" type="Cholesky<N>"/>
                    <param name="context" type="NumberContext"/>
                </params>
                <declaration name="retVal" type="boolean" line="49"/>
                <declaration name="tmpL" type="MatrixStore&lt;N&gt;" line="50"/>
            </method>
            <method name="equals" type="boolean" line="54">
                <params>
                    <param name="matrix" type="MatrixStore<N>"/>
                    <param name="decomposition" type="Eigenvalue<N>"/>
                    <param name="context" type="NumberContext"/>
                </params>
                <declaration name="tmpD" type="MatrixStore&lt;N&gt;" line="55"/>
                <declaration name="tmpV" type="MatrixStore&lt;N&gt;" line="56"/>
                <declaration name="tmpStore1" type="MatrixStore&lt;N&gt;" line="57"/>
                <declaration name="tmpStore2" type="MatrixStore&lt;N&gt;" line="58"/>
            </method>
            <method name="equals" type="boolean" line="61">
                <params>
                    <param name="matrix" type="MatrixStore<N>"/>
                    <param name="decomposition" type="Hessenberg<N>"/>
                    <param name="context" type="NumberContext"/>
                </params>
                <declaration name="tmpH" type="MatrixStore&lt;N&gt;" line="62"/>
                <declaration name="tmpQ" type="MatrixStore&lt;N&gt;" line="63"/>
                <declaration name="tmpStore1" type="MatrixStore&lt;N&gt;" line="64"/>
                <declaration name="tmpStore2" type="MatrixStore&lt;N&gt;" line="65"/>
            </method>
            <method name="equals" type="boolean" line="68">
                <params>
                    <param name="matrix" type="MatrixStore<N>"/>
                    <param name="decomposition" type="LU<N>"/>
                    <param name="context" type="NumberContext"/>
                </params>
                <declaration name="tmpL" type="MatrixStore&lt;N&gt;" line="69"/>
                <declaration name="tmpU" type="MatrixStore&lt;N&gt;" line="70"/>
                <declaration name="tmpPivotOrder" type="int[]" line="71"/>
            </method>
            <method name="equals" type="boolean" line="74">
                <params>
                    <param name="matrix" type="MatrixStore<N>"/>
                    <param name="decomposition" type="QR<N>"/>
                    <param name="context" type="NumberContext"/>
                </params>
                <declaration name="tmpQ" type="MatrixStore&lt;N&gt;" line="75"/>
                <declaration name="tmpR" type="MatrixStore&lt;N&gt;" line="76"/>
                <declaration name="tmpStore" type="MatrixStore&lt;N&gt;" line="77"/>
            </method>
            <method name="equals" type="boolean" line="80">
                <params>
                    <param name="matrix" type="MatrixStore<N>"/>
                    <param name="decomposition" type="Schur<N>"/>
                    <param name="context" type="NumberContext"/>
                </params>
                <declaration name="tmpU" type="MatrixStore&lt;N&gt;" line="81"/>
                <declaration name="tmpQ" type="MatrixStore&lt;N&gt;" line="82"/>
                <declaration name="tmpStore1" type="MatrixStore&lt;N&gt;" line="83"/>
                <declaration name="tmpStore2" type="MatrixStore&lt;N&gt;" line="84"/>
            </method>
            <method name="equals" type="boolean" line="87">
                <params>
                    <param name="matrix" type="MatrixStore<N>"/>
                    <param name="decomposition" type="SingularValue<N>"/>
                    <param name="context" type="NumberContext"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="88"/>
                <declaration name="tmpColDim" type="int" line="89"/>
                <declaration name="tmpQ1" type="MatrixStore&lt;N&gt;" line="90"/>
                <declaration name="tmpD" type="MatrixStore&lt;N&gt;" line="91"/>
                <declaration name="tmpQ2" type="MatrixStore&lt;N&gt;" line="92"/>
                <declaration name="tmpThis" type="MatrixStore&lt;N&gt;" line="93"/>
                <declaration name="tmpThat" type="MatrixStore&lt;N&gt;" line="94"/>
                <declaration name="retVal" type="boolean" line="95"/>
                <scope line="96"/>
                <scope line="101"/>
                <scope line="106"/>
                <scope line="111"/>
                <scope line="114">
                    <declaration name="tmpSV" type="Array1D&lt;Double&gt;" line="115"/>
                    <scope line="116"/>
                    <scope line="119">
                        <scope line="120"/>
                    </scope>
                </scope>
            </method>
            <method name="equals" type="boolean" line="127">
                <params>
                    <param name="matrix" type="MatrixStore<N>"/>
                    <param name="decomposition" type="Tridiagonal<N>"/>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="hashCode" type="int" line="130">
                <params>
                    <param name="matrix" type="BasicMatrix<N>"/>
                </params>
            </method>
            <method name="hashCode" type="int" line="133">
                <params>
                    <param name="matrix" type="MatrixStore<N>"/>
                </params>
            </method>
            <method name="isHermitian" type="boolean" line="136">
                <params>
                    <param name="matrix" type="Access2D<?>"/>
                </params>
                <declaration name="tmpRowDim" type="long" line="137"/>
                <declaration name="tmpColDim" type="long" line="138"/>
                <declaration name="tmpElement" type="Number" line="139"/>
                <declaration name="retVal" type="boolean" line="140"/>
                <scope line="141">
                    <declaration name="tmpLowerLeft" type="ComplexNumber" line="142"/>
                    <declaration name="tmpUpperRight" type="ComplexNumber" line="143"/>
                    <scope line="144">
                        <scope line="146"/>
                    </scope>
                </scope>
                <scope line="153">
                    <scope line="154">
                        <scope line="155"/>
                    </scope>
                </scope>
            </method>
            <method name="isLowerLeftShaded" type="boolean" line="162">
                <params>
                    <param name="anAccess" type="Access1D<?>"/>
                </params>
            </method>
            <method name="isNormal" type="boolean" line="165">
                <params>
                    <param name="matrix" type="MatrixStore<N>"/>
                </params>
                <declaration name="tmpConjugate" type="MatrixStore&lt;N&gt;" line="166"/>
            </method>
            <method name="isUpperRightShaded" type="boolean" line="169">
                <params>
                    <param name="anAccess" type="Access1D<?>"/>
                </params>
            </method>
            <method name="makeDecreasingRange" type="int[]" line="172">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aCount" type="int"/>
                </params>
                <declaration name="retVal" type="int[]" line="173"/>
                <scope line="174"/>
            </method>
            <method name="makeIncreasingRange" type="int[]" line="179">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aCount" type="int"/>
                </params>
                <declaration name="retVal" type="int[]" line="180"/>
                <scope line="181"/>
            </method>
            <method name="makeRandomComplexStore" type="PhysicalStore<ComplexNumber>" line="186">
                <params>
                    <param name="aRowDim" type="int"/>
                    <param name="aColDim" type="int"/>
                </params>
                <declaration name="retVal" type="PhysicalStore&lt;ComplexNumber&gt;" line="187"/>
                <declaration name="tmpArgGen" type="Uniform" line="188"/>
                <scope line="189">
                    <scope line="190"/>
                </scope>
            </method>
            <method name="makeRange" type="int[]" line="196">
                <params>
                    <param name="anInd" type="int"/>
                </params>
            </method>
            <method name="max" type="int" line="199">
                <params>
                    <param name="values" type="int"/>
                </params>
                <declaration name="retVal" type="int" line="200"/>
                <scope line="201"/>
            </method>
            <method name="min" type="int" line="206">
                <params>
                    <param name="values" type="int"/>
                </params>
                <declaration name="retVal" type="int" line="207"/>
                <scope line="208"/>
            </method>
            <method name="reconstruct" type="MatrixStore<N>" line="213">
                <params>
                    <param name="decomposition" type="Bidiagonal<N>"/>
                </params>
            </method>
            <method name="reconstruct" type="MatrixStore<N>" line="216">
                <params>
                    <param name="decomposition" type="Cholesky<N>"/>
                </params>
                <declaration name="tmpL" type="MatrixStore&lt;N&gt;" line="217"/>
            </method>
            <method name="reconstruct" type="MatrixStore<N>" line="220">
                <params>
                    <param name="decomposition" type="Eigenvalue<N>"/>
                </params>
                <declaration name="tmpV" type="MatrixStore&lt;N&gt;" line="221"/>
            </method>
            <method name="reconstruct" type="MatrixStore<N>" line="224">
                <params>
                    <param name="decomposition" type="Hessenberg<N>"/>
                </params>
                <declaration name="tmpQ" type="MatrixStore&lt;N&gt;" line="225"/>
                <declaration name="tmpH" type="MatrixStore&lt;N&gt;" line="226"/>
            </method>
            <method name="reconstruct" type="MatrixStore<N>" line="229">
                <params>
                    <param name="decomposition" type="LU<N>"/>
                </params>
            </method>
            <method name="reconstruct" type="MatrixStore<N>" line="232">
                <params>
                    <param name="decomposition" type="QR<N>"/>
                </params>
            </method>
            <method name="reconstruct" type="MatrixStore<N>" line="235">
                <params>
                    <param name="decomposition" type="Schur<N>"/>
                </params>
                <declaration name="tmpQ" type="MatrixStore&lt;N&gt;" line="236"/>
            </method>
            <method name="reconstruct" type="MatrixStore<N>" line="239">
                <params>
                    <param name="decomposition" type="SingularValue<N>"/>
                </params>
            </method>
            <method name="reconstruct" type="MatrixStore<N>" line="242">
                <params>
                    <param name="decomposition" type="Tridiagonal<N>"/>
                </params>
                <declaration name="tmpQ" type="MatrixStore&lt;N&gt;" line="243"/>
            </method>
            <method name="setAllOperationThresholds" type="void" line="246">
                <params>
                    <param name="aValue" type="int"/>
                </params>
            </method>
            <method name="toString" type="String" line="276">
                <params>
                    <param name="matrix" type="Access2D<?>"/>
                </params>
                <declaration name="retVal" type="StringBuilder" line="277"/>
                <declaration name="tmpRowDim" type="int" line="278"/>
                <declaration name="tmpColDim" type="int" line="279"/>
                <scope line="282">
                    <scope line="284"/>
                    <scope line="287">
                        <scope line="289"/>
                    </scope>
                </scope>
            </method>
            <method name="wrapBigAccess2D" type="Access2D<BigDecimal>" line="297">
                <params>
                    <param name="matrix" type="BasicMatrix<?>"/>
                </params>
                <anonymous_class line="298">
                    <method name="count" type="long" line="299"/>
                    <method name="countColumns" type="long" line="302"/>
                    <method name="countRows" type="long" line="305"/>
                    <method name="doubleValue" type="double" line="308">
                        <params>
                            <param name="anInd" type="long"/>
                        </params>
                    </method>
                    <method name="doubleValue" type="double" line="311">
                        <params>
                            <param name="aRow" type="long"/>
                            <param name="aCol" type="long"/>
                        </params>
                    </method>
                    <method name="get" type="BigDecimal" line="314">
                        <params>
                            <param name="index" type="long"/>
                        </params>
                    </method>
                    <method name="get" type="BigDecimal" line="317">
                        <params>
                            <param name="aRow" type="long"/>
                            <param name="aCol" type="long"/>
                        </params>
                    </method>
                    <method name="getColDim" type="int" line="320"/>
                    <method name="getRowDim" type="int" line="323"/>
                    <method name="iterator" type="Iterator<BigDecimal>" line="326"/>
                    <method name="size" type="int" line="329"/>
                </anonymous_class>
            </method>
            <method name="wrapComplexAccess2D" type="Access2D<ComplexNumber>" line="335">
                <params>
                    <param name="matrix" type="BasicMatrix<?>"/>
                </params>
                <anonymous_class line="336">
                    <method name="count" type="long" line="337"/>
                    <method name="countColumns" type="long" line="340"/>
                    <method name="countRows" type="long" line="343"/>
                    <method name="doubleValue" type="double" line="346">
                        <params>
                            <param name="anInd" type="long"/>
                        </params>
                    </method>
                    <method name="doubleValue" type="double" line="349">
                        <params>
                            <param name="aRow" type="long"/>
                            <param name="aCol" type="long"/>
                        </params>
                    </method>
                    <method name="get" type="ComplexNumber" line="352">
                        <params>
                            <param name="index" type="long"/>
                        </params>
                    </method>
                    <method name="get" type="ComplexNumber" line="355">
                        <params>
                            <param name="aRow" type="long"/>
                            <param name="aCol" type="long"/>
                        </params>
                    </method>
                    <method name="getColDim" type="int" line="358"/>
                    <method name="getRowDim" type="int" line="361"/>
                    <method name="iterator" type="Iterator<ComplexNumber>" line="364"/>
                    <method name="size" type="int" line="367"/>
                </anonymous_class>
            </method>
            <method name="wrapPrimitiveAccess2D" type="Access2D<Double>" line="373">
                <params>
                    <param name="matrix" type="BasicMatrix<?>"/>
                </params>
                <anonymous_class line="374">
                    <method name="count" type="long" line="375"/>
                    <method name="countColumns" type="long" line="378"/>
                    <method name="countRows" type="long" line="381"/>
                    <method name="doubleValue" type="double" line="384">
                        <params>
                            <param name="anInd" type="long"/>
                        </params>
                    </method>
                    <method name="doubleValue" type="double" line="387">
                        <params>
                            <param name="aRow" type="long"/>
                            <param name="aCol" type="long"/>
                        </params>
                    </method>
                    <method name="get" type="Double" line="390">
                        <params>
                            <param name="index" type="long"/>
                        </params>
                    </method>
                    <method name="get" type="Double" line="393">
                        <params>
                            <param name="aRow" type="long"/>
                            <param name="aCol" type="long"/>
                        </params>
                    </method>
                    <method name="getColDim" type="int" line="396"/>
                    <method name="getRowDim" type="int" line="399"/>
                    <method name="iterator" type="Iterator<Double>" line="402"/>
                    <method name="size" type="int" line="405"/>
                </anonymous_class>
            </method>
            <method name="MatrixUtils" type="constructor" line="411"/>
        </class>
    </source>