<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.jama">
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.PrimitiveFunction"/>
        <import package="java.io.Serializable"/>
        <import package="java.math.BigDecimal"/>
        <import package="java.util.AbstractList"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="org.ojalgo.ProgrammingError"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.access.AccessUtils"/>
        <import package="org.ojalgo.access.Iterator1D"/>
        <import package="org.ojalgo.array.ArrayUtils"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.BinaryFunction"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.VoidFunction"/>
        <import package="org.ojalgo.function.aggregator.Aggregator"/>
        <import package="org.ojalgo.function.aggregator.AggregatorFunction"/>
        <import package="org.ojalgo.function.aggregator.PrimitiveAggregator"/>
        <import package="org.ojalgo.matrix.BasicMatrix"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.store.BigDenseStore"/>
        <import package="org.ojalgo.matrix.store.ComplexDenseStore"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore"/>
        <import package="org.ojalgo.matrix.transformation.Householder"/>
        <import package="org.ojalgo.matrix.transformation.Rotation"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.scalar.PrimitiveScalar"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="JamaMatrix" line="61">
            <extends class="Object"/>
            <implements interface="BasicMatrix">
                <type_params>
                    <type_param name="Double"/>
                </type_params>
            </implements>
            <implements interface="PhysicalStore">
                <type_params>
                    <type_param name="Double"/>
                </type_params>
            </implements>
            <implements interface="Serializable"/>
            <javadoc line="61">
                This class adapts JAMA&apos;s Matrix to ojAlgo&apos;s {@linkplain BasicMatrix} and {@linkplain PhysicalStore} interfaces.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <declaration name="FACTORY" type="JamaFactory" line="68"/>
            <method name="getBuilder" type="Access2D.Builder<JamaMatrix>" line="70">
                <params>
                    <param name="aLength" type="int"/>
                </params>
            </method>
            <method name="getBuilder" type="Access2D.Builder<JamaMatrix>" line="74">
                <params>
                    <param name="aRowDim" type="int"/>
                    <param name="aColDim" type="int"/>
                </params>
            </method>
            <method name="convert" type="Matrix" line="78">
                <params>
                    <param name="aStore" type="Access1D<?>"/>
                    <param name="structure" type="int"/>
                </params>
                <declaration name="retVal" type="Matrix" line="80"/>
                <scope line="82"/>
                <scope line="84"/>
            </method>
            <method name="convert" type="Matrix" line="91">
                <params>
                    <param name="aStore" type="Access2D<?>"/>
                </params>
                <declaration name="retVal" type="Matrix" line="93"/>
                <scope line="95"/>
                <scope line="97"/>
            </method>
            <method name="cast" type="Rotation.Primitive" line="104">
                <params>
                    <param name="aTransf" type="Rotation<Double>"/>
                </params>
                <scope line="105"/>
                <scope line="107"/>
            </method>
            <declaration name="myDelegate" type="Matrix" line="112"/>
            <method name="JamaMatrix" type="constructor" line="114">
                <params>
                    <param name="aMtrx" type="BasicMatrix"/>
                </params>
            </method>
            <method name="JamaMatrix" type="constructor" line="121">
                <params>
                    <param name="aStore" type="MatrixStore<Double>"/>
                </params>
            </method>
            <method name="JamaMatrix" type="constructor" line="129"/>
            <method name="JamaMatrix" type="constructor" line="138">
                <params>
                    <param name="aRaw" type="double[][]"/>
                </params>
            </method>
            <method name="JamaMatrix" type="constructor" line="145">
                <params>
                    <param name="aDelegate" type="Matrix"/>
                </params>
            </method>
            <method name="add" type="JamaMatrix" line="152">
                <params>
                    <param name="aMtrx" type="Access2D<?>"/>
                </params>
            </method>
            <method name="add" type="JamaMatrix" line="156">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="aMtrx" type="Access2D<?>"/>
                </params>
                <declaration name="tmpArrayCopy" type="double[][]" line="158"/>
                <declaration name="tmpLocalRowRef" type="double[]" line="160"/>
                <scope line="161">
                    <scope line="163"/>
                </scope>
            </method>
            <method name="add" type="JamaMatrix" line="171">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="aNmbr" type="Number"/>
                </params>
                <declaration name="tmpArrayCopy" type="double[][]" line="173"/>
            </method>
            <method name="add" type="JamaMatrix" line="179">
                <params>
                    <param name="aNmbr" type="Number"/>
                </params>
                <declaration name="retVal" type="double[][]" line="181"/>
            </method>
            <method name="aggregateAll" type="Double" line="188">
                <params>
                    <param name="aggregator" type="Aggregator"/>
                </params>
                <declaration name="tmpVisitor" type="AggregatorFunction&lt;Double&gt;" line="190"/>
            </method>
            <method name="asList" type="List<Double>" line="197">
                <declaration name="tmpColDim" type="int" line="199"/>
                <anonymous_class line="201">
                    <method name="get" type="Double" line="204">
                        <params>
                            <param name="someIndex" type="int"/>
                        </params>
                    </method>
                    <method name="set" type="Double" line="210">
                        <params>
                            <param name="someIndex" type="int"/>
                            <param name="aValue" type="Double"/>
                        </params>
                        <declaration name="retVal" type="Double" line="211"/>
                    </method>
                    <method name="size" type="int" line="217"/>
                </anonymous_class>
            </method>
            <method name="builder" type="MatrixStore.Builder<Double>" line="223"/>
            <method name="caxpy" type="void" line="227">
                <params>
                    <param name="aSclrA" type="Double"/>
                    <param name="aColX" type="int"/>
                    <param name="aColY" type="int"/>
                    <param name="aFirstRow" type="int"/>
                </params>
                <declaration name="tmpValA" type="double" line="229"/>
                <declaration name="tmpArray" type="double[][]" line="230"/>
                <declaration name="tmpRowDim" type="int" line="232"/>
                <scope line="234"/>
            </method>
            <method name="conjugate" type="JamaMatrix" line="239"/>
            <method name="copy" type="JamaMatrix" line="243"/>
            <method name="copyToBuilder" type="Access2D.Builder<JamaMatrix>" line="247">
                <declaration name="tmpRowDim" type="int" line="249"/>
                <declaration name="tmpColDim" type="int" line="250"/>
                <declaration name="retVal" type="Access2D.Builder&lt;JamaMatrix&gt;" line="251"/>
                <scope line="253">
                    <scope line="254"/>
                </scope>
            </method>
            <method name="count" type="long" line="262"/>
            <method name="countColumns" type="long" line="266"/>
            <method name="countRows" type="long" line="270"/>
            <method name="divide" type="JamaMatrix" line="274">
                <params>
                    <param name="aNmbr" type="Number"/>
                </params>
                <declaration name="retVal" type="double[][]" line="276"/>
            </method>
            <method name="divideElements" type="JamaMatrix" line="283">
                <params>
                    <param name="aMtrx" type="Access2D<?>"/>
                </params>
            </method>
            <method name="doubleValue" type="double" line="287">
                <params>
                    <param name="anInd" type="long"/>
                </params>
            </method>
            <method name="doubleValue" type="double" line="291">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="enforce" type="JamaMatrix" line="295">
                <params>
                    <param name="aContext" type="NumberContext"/>
                </params>
                <declaration name="retVal" type="double[][]" line="297"/>
            </method>
            <method name="equals" type="boolean" line="304">
                <params>
                    <param name="aMtrx" type="Access2D<?>"/>
                    <param name="aCntxt" type="NumberContext"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="308">
                <params>
                    <param name="other" type="MatrixStore<Double>"/>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="314">
                <params>
                    <param name="anObject" type="Object"/>
                </params>
                <scope line="315"/>
                <scope line="317"/>
                <scope line="319"/>
            </method>
            <method name="exchangeColumns" type="void" line="324">
                <params>
                    <param name="aColA" type="int"/>
                    <param name="aColB" type="int"/>
                </params>
            </method>
            <method name="exchangeRows" type="void" line="328">
                <params>
                    <param name="aRowA" type="int"/>
                    <param name="aRowB" type="int"/>
                </params>
            </method>
            <method name="factory" type="PhysicalStore.Factory<Double,JamaMatrix>" line="332"/>
            <method name="fillAll" type="void" line="336">
                <params>
                    <param name="aNmbr" type="Double"/>
                </params>
            </method>
            <method name="fillByMultiplying" type="void" line="340">
                <params>
                    <param name="aLeftArg" type="Access1D<Double>"/>
                    <param name="aRightArg" type="Access1D<Double>"/>
                </params>
                <declaration name="tmpLeft" type="Matrix" line="342"/>
                <declaration name="tmpRight" type="Matrix" line="343"/>
            </method>
            <method name="fillColumn" type="void" line="348">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="aNmbr" type="Double"/>
                </params>
            </method>
            <method name="fillConjugated" type="void" line="352">
                <params>
                    <param name="source" type="Access2D<? extends Number>"/>
                </params>
            </method>
            <method name="fillDiagonal" type="void" line="356">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="aNmbr" type="Double"/>
                </params>
            </method>
            <method name="fillMatching" type="void" line="360">
                <params>
                    <param name="source" type="Access1D<? extends Number>"/>
                </params>
                <declaration name="tmpDelegateArray" type="double[][]" line="362"/>
                <declaration name="tmpRowDim" type="int" line="364"/>
                <scope line="366">
                    <scope line="367"/>
                </scope>
            </method>
            <method name="fillMatching" type="void" line="373">
                <params>
                    <param name="leftArg" type="Access1D<Double>"/>
                    <param name="function" type="BinaryFunction<Double>"/>
                    <param name="rightArg" type="Access1D<Double>"/>
                </params>
                <scope line="374">
                    <scope line="375"/>
                    <scope line="377"/>
                    <scope line="379"/>
                    <scope line="381"/>
                    <scope line="383"/>
                </scope>
                <scope line="387">
                    <scope line="388"/>
                    <scope line="390"/>
                    <scope line="392"/>
                    <scope line="394"/>
                    <scope line="397"/>
                </scope>
                <scope line="401"/>
            </method>
            <method name="fillMatching" type="void" line="407">
                <params>
                    <param name="aLeftArg" type="Access1D<Double>"/>
                    <param name="function" type="BinaryFunction<Double>"/>
                    <param name="aRightArg" type="Double"/>
                </params>
            </method>
            <method name="fillMatching" type="void" line="411">
                <params>
                    <param name="aLeftArg" type="Double"/>
                    <param name="function" type="BinaryFunction<Double>"/>
                    <param name="aRightArg" type="Access1D<Double>"/>
                </params>
            </method>
            <method name="fillRange" type="void" line="415">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="value" type="Double"/>
                </params>
            </method>
            <method name="fillRow" type="void" line="419">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="aNmbr" type="Double"/>
                </params>
            </method>
            <method name="fillTransposed" type="void" line="423">
                <params>
                    <param name="source" type="Access2D<? extends Number>"/>
                </params>
                <declaration name="tmpDelegateArray" type="double[][]" line="425"/>
                <declaration name="tmpRowDim" type="int" line="427"/>
                <scope line="429">
                    <scope line="430"/>
                </scope>
            </method>
            <method name="flushCache" type="void" line="436"/>
            <method name="get" type="Double" line="440">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="get" type="Double" line="444">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="getColDim" type="int" line="448"/>
            <method name="getColumnsRange" type="JamaMatrix" line="452">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                </params>
            </method>
            <method name="getCondition" type="PrimitiveScalar" line="456"/>
            <method name="getDeterminant" type="PrimitiveScalar" line="460"/>
            <method name="getEigenvalues" type="List<ComplexNumber>" line="464"/>
            <method name="getFrobeniusNorm" type="PrimitiveScalar" line="468"/>
            <method name="getInfinityNorm" type="PrimitiveScalar" line="472"/>
            <method name="getKyFanNorm" type="PrimitiveScalar" line="476">
                <params>
                    <param name="k" type="int"/>
                </params>
            </method>
            <method name="getMaxDim" type="int" line="480"/>
            <method name="getMinDim" type="int" line="484"/>
            <method name="getOneNorm" type="Scalar<Double>" line="488"/>
            <method name="getOperatorNorm" type="PrimitiveScalar" line="492"/>
            <method name="getRank" type="int" line="496"/>
            <method name="getRowDim" type="int" line="500"/>
            <method name="getRowsRange" type="JamaMatrix" line="504">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                </params>
            </method>
            <method name="getSingularValues" type="List<Double>" line="508"/>
            <method name="getTrace" type="PrimitiveScalar" line="512"/>
            <method name="getTraceNorm" type="PrimitiveScalar" line="516"/>
            <method name="getVectorNorm" type="PrimitiveScalar" line="521">
                <params>
                    <param name="aDegree" type="int"/>
                </params>
                <scope line="523">
                    <declaration name="tmpFunc" type="AggregatorFunction&lt;Double&gt;" line="525"/>
                </scope>
                <scope line="531">
                    <declaration name="tmpFunc" type="AggregatorFunction&lt;Double&gt;" line="533"/>
                </scope>
                <scope line="539"/>
                <scope line="543">
                    <declaration name="tmpFunc" type="AggregatorFunction&lt;Double&gt;" line="545"/>
                </scope>
            </method>
            <method name="hashCode" type="int" line="554"/>
            <method name="invert" type="JamaMatrix" line="558"/>
            <method name="isAbsolute" type="boolean" line="562">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="isAbsolute" type="boolean" line="566">
                <params>
                    <param name="index" type="long"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="567"/>
            </method>
            <method name="isAbsolute" type="boolean" line="571">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isEmpty" type="boolean" line="575"/>
            <method name="isFat" type="boolean" line="579"/>
            <method name="isFullRank" type="boolean" line="583"/>
            <method name="isHermitian" type="boolean" line="587"/>
            <method name="isInfinite" type="boolean" line="591">
                <params>
                    <param name="index" type="long"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="592"/>
            </method>
            <method name="isInfinite" type="boolean" line="596">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isLowerLeftShaded" type="boolean" line="600"/>
            <method name="isNaN" type="boolean" line="604">
                <params>
                    <param name="index" type="long"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="605"/>
            </method>
            <method name="isNaN" type="boolean" line="609">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="613">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="617">
                <params>
                    <param name="index" type="long"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="618"/>
            </method>
            <method name="isPositive" type="boolean" line="622">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="626">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="630">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="634">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isScalar" type="boolean" line="638"/>
            <method name="isSquare" type="boolean" line="642"/>
            <method name="isSymmetric" type="boolean" line="646"/>
            <method name="isTall" type="boolean" line="650"/>
            <method name="isUpperRightShaded" type="boolean" line="654"/>
            <method name="isVector" type="boolean" line="658"/>
            <method name="isZero" type="boolean" line="662">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="666">
                <params>
                    <param name="index" type="long"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="667"/>
            </method>
            <method name="isZero" type="boolean" line="671">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="iterator" type="Iterator<Double>" line="675"/>
            <method name="maxpy" type="void" line="679">
                <params>
                    <param name="aSclrA" type="Double"/>
                    <param name="aMtrxX" type="MatrixStore<Double>"/>
                </params>
                <declaration name="tmpValA" type="double" line="681"/>
                <declaration name="tmpArray" type="double[][]" line="682"/>
                <declaration name="tmpRowDim" type="int" line="684"/>
                <declaration name="tmpColDim" type="int" line="685"/>
                <scope line="687">
                    <scope line="688"/>
                </scope>
            </method>
            <method name="mergeColumns" type="JamaMatrix" line="694">
                <params>
                    <param name="aMtrx" type="Access2D<?>"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="696"/>
                <declaration name="tmpColDim" type="int" line="697"/>
                <declaration name="retVal" type="Matrix" line="699"/>
            </method>
            <method name="mergeRows" type="JamaMatrix" line="707">
                <params>
                    <param name="aMtrx" type="Access2D<?>"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="709"/>
                <declaration name="tmpColDim" type="int" line="710"/>
                <declaration name="retVal" type="Matrix" line="712"/>
            </method>
            <method name="modify" type="JamaMatrix" line="720">
                <params>
                    <param name="function" type="UnaryFunction<Double>"/>
                </params>
                <declaration name="retVal" type="JamaMatrix" line="722"/>
            </method>
            <method name="modifyAll" type="void" line="729">
                <params>
                    <param name="function" type="UnaryFunction<Double>"/>
                </params>
            </method>
            <method name="modifyColumn" type="void" line="733">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction<Double>"/>
                </params>
            </method>
            <method name="modifyDiagonal" type="void" line="737">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="function" type="UnaryFunction<Double>"/>
                </params>
            </method>
            <method name="modifyDiagonal" type="void" line="741">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction<Double>"/>
                </params>
                <declaration name="tmpCount" type="long" line="743"/>
                <declaration name="tmpFirst" type="int" line="745"/>
                <declaration name="tmpLimit" type="int" line="746"/>
                <declaration name="tmpStep" type="int" line="747"/>
                <scope line="749"/>
            </method>
            <method name="modifyOne" type="void" line="755">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="function" type="UnaryFunction<Double>"/>
                </params>
                <declaration name="tmpValue" type="double" line="757"/>
            </method>
            <method name="modifyRange" type="void" line="764">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="function" type="UnaryFunction<Double>"/>
                </params>
                <scope line="765"/>
            </method>
            <method name="modifyRow" type="void" line="770">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction<Double>"/>
                </params>
            </method>
            <method name="multiply" type="JamaMatrix" line="774">
                <params>
                    <param name="aNmbr" type="Number"/>
                </params>
            </method>
            <method name="multiplyElements" type="JamaMatrix" line="778">
                <params>
                    <param name="aMtrx" type="Access2D<?>"/>
                </params>
            </method>
            <method name="multiplyLeft" type="JamaMatrix" line="782">
                <params>
                    <param name="leftMtrx" type="Access1D<Double>"/>
                </params>
            </method>
            <method name="multiplyLeft" type="JamaMatrix" line="786">
                <params>
                    <param name="aMtrx" type="Access2D<?>"/>
                </params>
            </method>
            <method name="multiplyRight" type="JamaMatrix" line="790">
                <params>
                    <param name="rightMtrx" type="Access1D<Double>"/>
                </params>
            </method>
            <method name="multiplyRight" type="JamaMatrix" line="794">
                <params>
                    <param name="aMtrx" type="Access2D<?>"/>
                </params>
            </method>
            <method name="multiplyVectors" type="PrimitiveScalar" line="798">
                <params>
                    <param name="aVctr" type="Access2D<?>"/>
                </params>
                <declaration name="retVal" type="double" line="800"/>
                <declaration name="tmpSize" type="int" line="802"/>
                <scope line="803"/>
            </method>
            <method name="negate" type="JamaMatrix" line="810"/>
            <method name="raxpy" type="void" line="814">
                <params>
                    <param name="aSclrA" type="Double"/>
                    <param name="aRowX" type="int"/>
                    <param name="aRowY" type="int"/>
                    <param name="aFirstCol" type="int"/>
                </params>
                <declaration name="tmpValA" type="double" line="816"/>
                <declaration name="tmpArray" type="double[][]" line="817"/>
                <declaration name="tmpColDim" type="int" line="819"/>
                <scope line="821"/>
            </method>
            <method name="round" type="JamaMatrix" line="827">
                <params>
                    <param name="aCntxt" type="NumberContext"/>
                </params>
                <declaration name="retVal" type="double[][]" line="829"/>
            </method>
            <method name="selectColumns" type="JamaMatrix" line="836">
                <params>
                    <param name="someCols" type="int"/>
                </params>
            </method>
            <method name="selectRows" type="JamaMatrix" line="840">
                <params>
                    <param name="someRows" type="int"/>
                </params>
            </method>
            <method name="set" type="Double" line="844">
                <params>
                    <param name="anInd" type="int"/>
                    <param name="value" type="Number"/>
                </params>
                <declaration name="retVal" type="double" line="845"/>
            </method>
            <method name="set" type="void" line="850">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="854">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="aNmbr" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="858">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="aNmbr" type="Number"/>
                </params>
            </method>
            <method name="set" type="void" line="862">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="Number"/>
                </params>
            </method>
            <method name="size" type="int" line="866"/>
            <method name="solve" type="JamaMatrix" line="870">
                <params>
                    <param name="aRHS" type="Access2D<?>"/>
                </params>
                <declaration name="retVal" type="Matrix" line="872"/>
                <scope line="874">
                    <scope line="875"/>
                    <scope line="877"/>
                </scope>
                <scope line="880">
                    <declaration name="tmpMD" type="JamaSingularValue" line="881"/>
                </scope>
            </method>
            <method name="subtract" type="JamaMatrix" line="889">
                <params>
                    <param name="aMtrx" type="Access2D<?>"/>
                </params>
            </method>
            <method name="subtract" type="JamaMatrix" line="893">
                <params>
                    <param name="value" type="Number"/>
                </params>
                <declaration name="retVal" type="double[][]" line="895"/>
            </method>
            <method name="toBigDecimal" type="BigDecimal" line="902">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="toBigStore" type="PhysicalStore<BigDecimal>" line="906"/>
            <method name="toComplexNumber" type="ComplexNumber" line="910">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="toComplexStore" type="PhysicalStore<ComplexNumber>" line="914"/>
            <method name="toListOfColumns" type="List<BasicMatrix<Double>>" line="918">
                <declaration name="tmpColDim" type="int" line="920"/>
                <declaration name="retVal" type="List&lt;BasicMatrix&lt;Double&gt;&gt;" line="922"/>
                <scope line="924"/>
            </method>
            <method name="toListOfElements" type="List<Double>" line="931"/>
            <method name="toListOfRows" type="List<BasicMatrix<Double>>" line="935">
                <declaration name="tmpRowDim" type="int" line="937"/>
                <declaration name="retVal" type="List&lt;BasicMatrix&lt;Double&gt;&gt;" line="939"/>
                <scope line="941"/>
            </method>
            <method name="toPrimitiveStore" type="JamaMatrix" line="948"/>
            <method name="toScalar" type="PrimitiveScalar" line="952">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="toString" type="String" line="957"/>
            <method name="toString" type="String" line="961">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="transformLeft" type="void" line="965">
                <params>
                    <param name="aTransf" type="Householder<Double>"/>
                    <param name="aFirstCol" type="int"/>
                </params>
                <declaration name="tmpArray" type="double[][]" line="967"/>
                <declaration name="tmpRowDim" type="int" line="968"/>
                <declaration name="tmpColDim" type="int" line="969"/>
                <declaration name="tmpFirst" type="int" line="971"/>
                <declaration name="tmpWorkCopy" type="double[]" line="973"/>
                <declaration name="tmpScale" type="double" line="975"/>
                <scope line="976">
                    <scope line="978"/>
                    <declaration name="tmpVal" type="double" line="981"/>
                    <declaration name="tmpSize" type="int" line="982"/>
                    <scope line="983"/>
                    <scope line="989"/>
                </scope>
            </method>
            <method name="transformLeft" type="void" line="995">
                <params>
                    <param name="aTransf" type="Rotation<Double>"/>
                </params>
                <declaration name="tmpTransf" type="Rotation.Primitive" line="997"/>
                <declaration name="tmpLow" type="int" line="999"/>
                <declaration name="tmpHigh" type="int" line="1000"/>
                <scope line="1002">
                    <scope line="1003">
                        <declaration name="tmpArray" type="double[][]" line="1005"/>
                        <declaration name="tmpOldLow" type="double" line="1006"/>
                        <declaration name="tmpOldHigh" type="double" line="1007"/>
                        <scope line="1009"/>
                    </scope>
                    <scope line="1017"/>
                </scope>
                <scope line="1020">
                    <scope line="1021"/>
                    <scope line="1023"/>
                    <scope line="1025"/>
                </scope>
            </method>
            <method name="transformRight" type="void" line="1031">
                <params>
                    <param name="aTransf" type="Householder<Double>"/>
                    <param name="aFirstRow" type="int"/>
                </params>
                <declaration name="tmpArray" type="double[][]" line="1033"/>
                <declaration name="tmpRowDim" type="int" line="1034"/>
                <declaration name="tmpColDim" type="int" line="1035"/>
                <declaration name="tmpFirst" type="int" line="1037"/>
                <declaration name="tmpWorkCopy" type="double[]" line="1039"/>
                <declaration name="tmpScale" type="double" line="1041"/>
                <scope line="1042">
                    <scope line="1044"/>
                    <declaration name="tmpVal" type="double" line="1047"/>
                    <declaration name="tmpSize" type="int" line="1048"/>
                    <scope line="1049"/>
                    <scope line="1055"/>
                </scope>
            </method>
            <method name="transformRight" type="void" line="1061">
                <params>
                    <param name="aTransf" type="Rotation<Double>"/>
                </params>
                <declaration name="tmpTransf" type="Rotation.Primitive" line="1063"/>
                <declaration name="tmpLow" type="int" line="1065"/>
                <declaration name="tmpHigh" type="int" line="1066"/>
                <scope line="1068">
                    <scope line="1069">
                        <declaration name="tmpArray" type="double[][]" line="1071"/>
                        <declaration name="tmpOldLow" type="double" line="1072"/>
                        <declaration name="tmpOldHigh" type="double" line="1073"/>
                        <scope line="1075"/>
                    </scope>
                    <scope line="1083"/>
                </scope>
                <scope line="1086">
                    <scope line="1087"/>
                    <scope line="1089"/>
                    <scope line="1091"/>
                </scope>
            </method>
            <method name="transpose" type="JamaMatrix" line="1097"/>
            <method name="update" type="void" line="1101">
                <params>
                    <param name="aFirstRow" type="int"/>
                    <param name="aRowCount" type="int"/>
                    <param name="aFirstCol" type="int"/>
                    <param name="aColCount" type="int"/>
                    <param name="aMtrx" type="JamaMatrix"/>
                </params>
            </method>
            <method name="update" type="void" line="1105">
                <params>
                    <param name="aFirstRow" type="int"/>
                    <param name="aRowCount" type="int"/>
                    <param name="someColumns" type="int[]"/>
                    <param name="aMtrx" type="JamaMatrix"/>
                </params>
            </method>
            <method name="update" type="void" line="1109">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="aNmbr" type="Number"/>
                </params>
            </method>
            <method name="update" type="void" line="1113">
                <params>
                    <param name="someRows" type="int[]"/>
                    <param name="aFirstCol" type="int"/>
                    <param name="aColCount" type="int"/>
                    <param name="aMtrx" type="JamaMatrix"/>
                </params>
            </method>
            <method name="update" type="void" line="1117">
                <params>
                    <param name="someRows" type="int[]"/>
                    <param name="someColumns" type="int[]"/>
                    <param name="aMtrx" type="JamaMatrix"/>
                </params>
            </method>
            <method name="visitAll" type="void" line="1121">
                <params>
                    <param name="visitor" type="VoidFunction<Double>"/>
                </params>
            </method>
            <method name="visitColumn" type="void" line="1125">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="visitor" type="VoidFunction<Double>"/>
                </params>
            </method>
            <method name="visitColumn" type="void" line="1129">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="visitor" type="VoidFunction<Double>"/>
                </params>
            </method>
            <method name="visitDiagonal" type="void" line="1133">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="visitor" type="VoidFunction<Double>"/>
                </params>
            </method>
            <method name="visitDiagonal" type="void" line="1137">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="visitor" type="VoidFunction<Double>"/>
                </params>
            </method>
            <method name="visitRange" type="void" line="1141">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="visitor" type="VoidFunction<Double>"/>
                </params>
            </method>
            <method name="visitRow" type="void" line="1145">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="visitor" type="VoidFunction<Double>"/>
                </params>
            </method>
            <method name="visitRow" type="void" line="1149">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="visitor" type="VoidFunction<Double>"/>
                </params>
            </method>
            <method name="getCholeskyDecomposition" type="JamaCholesky" line="1153">
                <declaration name="retVal" type="JamaCholesky" line="1154"/>
            </method>
            <method name="getDelegate" type="Matrix" line="1159"/>
            <method name="getEigenvalueDecomposition" type="JamaEigenvalue" line="1163">
                <declaration name="retVal" type="JamaEigenvalue" line="1164"/>
            </method>
            <method name="getLUDecomposition" type="JamaLU" line="1169">
                <declaration name="retVal" type="JamaLU" line="1170"/>
            </method>
            <method name="getQRDecomposition" type="JamaQR" line="1175">
                <declaration name="retVal" type="JamaQR" line="1176"/>
            </method>
            <method name="getSingularValueDecomposition" type="JamaSingularValue" line="1181">
                <declaration name="retVal" type="JamaSingularValue" line="1182"/>
            </method>
        </class>
    </source>