<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.jama">
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.PrimitiveFunction"/>
        <import package="java.io.Serializable"/>
        <import package="java.math.BigDecimal"/>
        <import package="java.util.AbstractList"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="org.ojalgo.ProgrammingError"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.access.AccessUtils"/>
        <import package="org.ojalgo.access.Iterator1D"/>
        <import package="org.ojalgo.array.ArrayUtils"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.BinaryFunction"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.VoidFunction"/>
        <import package="org.ojalgo.function.aggregator.Aggregator"/>
        <import package="org.ojalgo.function.aggregator.AggregatorFunction"/>
        <import package="org.ojalgo.function.aggregator.PrimitiveAggregator"/>
        <import package="org.ojalgo.matrix.BasicMatrix"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.store.BigDenseStore"/>
        <import package="org.ojalgo.matrix.store.ComplexDenseStore"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore"/>
        <import package="org.ojalgo.matrix.transformation.Householder"/>
        <import package="org.ojalgo.matrix.transformation.Rotation"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.scalar.PrimitiveScalar"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="JamaMatrix" line="60">
            <extends class="Object"/>
            <implements interface="BasicMatrix">
                <type_params>
                    <type_param name="Double"/>
                </type_params>
            </implements>
            <implements interface="PhysicalStore">
                <type_params>
                    <type_param name="Double"/>
                </type_params>
            </implements>
            <implements interface="Serializable"/>
            <javadoc line="60">
                This class adapts JAMA&apos;s Matrix to ojAlgo&apos;s {@linkplain BasicMatrix} and {@linkplain PhysicalStore} interfaces.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <method name="getBuilder" type="Access2D.Builder&lt;JamaMatrix&gt;" line="67">
                <params>
                    <param name="aLength" type="int"/>
                </params>
            </method>
            <method name="getBuilder" type="Access2D.Builder&lt;JamaMatrix&gt;" line="71">
                <params>
                    <param name="aRowDim" type="int"/>
                    <param name="aColDim" type="int"/>
                </params>
            </method>
            <method name="convert" type="Matrix" line="75">
                <params>
                    <param name="aStore" type="Access1D&lt;?&gt;"/>
                    <param name="structure" type="int"/>
                </params>
                <declaration name="retVal" type="Matrix" line="77"/>
                <scope line="79"/>
                <scope line="81"/>
            </method>
            <method name="convert" type="Matrix" line="88">
                <params>
                    <param name="aStore" type="Access2D&lt;?&gt;"/>
                </params>
                <declaration name="retVal" type="Matrix" line="90"/>
                <scope line="92"/>
                <scope line="94"/>
            </method>
            <method name="cast" type="Rotation.Primitive" line="101">
                <params>
                    <param name="aTransf" type="Rotation&lt;Double&gt;"/>
                </params>
                <scope line="102"/>
                <scope line="104"/>
            </method>
            <declaration name="FACTORY" type="JamaFactory" line="109"/>
            <declaration name="myDelegate" type="Matrix" line="111"/>
            <method name="JamaMatrix" type="constructor" line="113">
                <params>
                    <param name="aMtrx" type="BasicMatrix"/>
                </params>
            </method>
            <method name="JamaMatrix" type="constructor" line="120">
                <params>
                    <param name="aStore" type="MatrixStore&lt;Double&gt;"/>
                </params>
            </method>
            <method name="JamaMatrix" type="constructor" line="128"/>
            <method name="JamaMatrix" type="constructor" line="137">
                <params>
                    <param name="aRaw" type="double[][]"/>
                </params>
            </method>
            <method name="JamaMatrix" type="constructor" line="144">
                <params>
                    <param name="data" type="double[][]"/>
                    <param name="rows" type="int"/>
                    <param name="columns" type="int"/>
                </params>
            </method>
            <method name="JamaMatrix" type="constructor" line="151">
                <params>
                    <param name="aDelegate" type="Matrix"/>
                </params>
            </method>
            <method name="add" type="JamaMatrix" line="158">
                <params>
                    <param name="aMtrx" type="Access2D&lt;?&gt;"/>
                </params>
            </method>
            <method name="add" type="JamaMatrix" line="162">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="aMtrx" type="Access2D&lt;?&gt;"/>
                </params>
                <declaration name="tmpArrayCopy" type="double[][]" line="164"/>
                <declaration name="tmpLocalRowRef" type="double[]" line="166"/>
                <scope line="167">
                    <scope line="169"/>
                </scope>
            </method>
            <method name="add" type="JamaMatrix" line="177">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="aNmbr" type="Number"/>
                </params>
                <declaration name="tmpArrayCopy" type="double[][]" line="179"/>
            </method>
            <method name="add" type="MatrixStore&lt;Double&gt;" line="185">
                <params>
                    <param name="addend" type="MatrixStore&lt;Double&gt;"/>
                </params>
            </method>
            <method name="add" type="JamaMatrix" line="189">
                <params>
                    <param name="aNmbr" type="Number"/>
                </params>
                <declaration name="retVal" type="double[][]" line="191"/>
            </method>
            <method name="aggregateAll" type="Double" line="198">
                <params>
                    <param name="aggregator" type="Aggregator"/>
                </params>
                <declaration name="tmpVisitor" type="AggregatorFunction&amp;lt;Double&amp;gt;" line="200"/>
            </method>
            <method name="asList" type="List&lt;Double&gt;" line="207">
                <declaration name="tmpColDim" type="int" line="209"/>
                <anonymous_class line="211">
                    <method name="get" type="Double" line="214">
                        <params>
                            <param name="someIndex" type="int"/>
                        </params>
                    </method>
                    <method name="set" type="Double" line="220">
                        <params>
                            <param name="someIndex" type="int"/>
                            <param name="aValue" type="Double"/>
                        </params>
                        <declaration name="retVal" type="Double" line="221"/>
                    </method>
                    <method name="size" type="int" line="227"/>
                </anonymous_class>
            </method>
            <method name="builder" type="MatrixStore.Builder&lt;Double&gt;" line="233"/>
            <method name="caxpy" type="void" line="237">
                <params>
                    <param name="aSclrA" type="Double"/>
                    <param name="aColX" type="int"/>
                    <param name="aColY" type="int"/>
                    <param name="aFirstRow" type="int"/>
                </params>
                <declaration name="tmpValA" type="double" line="239"/>
                <declaration name="tmpArray" type="double[][]" line="240"/>
                <declaration name="tmpRowDim" type="int" line="242"/>
                <scope line="244"/>
            </method>
            <method name="conjugate" type="JamaMatrix" line="249"/>
            <method name="copy" type="JamaMatrix" line="253"/>
            <method name="copyToBuilder" type="Access2D.Builder&lt;JamaMatrix&gt;" line="257">
                <declaration name="tmpRowDim" type="int" line="259"/>
                <declaration name="tmpColDim" type="int" line="260"/>
                <declaration name="retVal" type="Access2D.Builder&amp;lt;JamaMatrix&amp;gt;" line="261"/>
                <scope line="263">
                    <scope line="264"/>
                </scope>
            </method>
            <method name="count" type="long" line="272"/>
            <method name="countColumns" type="long" line="276"/>
            <method name="countRows" type="long" line="280"/>
            <method name="divide" type="JamaMatrix" line="284">
                <params>
                    <param name="aNmbr" type="Number"/>
                </params>
                <declaration name="retVal" type="double[][]" line="286"/>
            </method>
            <method name="divideElements" type="JamaMatrix" line="293">
                <params>
                    <param name="aMtrx" type="Access2D&lt;?&gt;"/>
                </params>
            </method>
            <method name="doubleValue" type="double" line="297">
                <params>
                    <param name="anInd" type="long"/>
                </params>
            </method>
            <method name="doubleValue" type="double" line="301">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="enforce" type="JamaMatrix" line="305">
                <params>
                    <param name="aContext" type="NumberContext"/>
                </params>
                <declaration name="retVal" type="double[][]" line="307"/>
            </method>
            <method name="equals" type="boolean" line="314">
                <params>
                    <param name="aMtrx" type="Access2D&lt;?&gt;"/>
                    <param name="aCntxt" type="NumberContext"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="318">
                <params>
                    <param name="other" type="MatrixStore&lt;Double&gt;"/>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="324">
                <params>
                    <param name="anObject" type="Object"/>
                </params>
                <scope line="325"/>
                <scope line="327"/>
                <scope line="329"/>
            </method>
            <method name="exchangeColumns" type="void" line="334">
                <params>
                    <param name="aColA" type="int"/>
                    <param name="aColB" type="int"/>
                </params>
            </method>
            <method name="exchangeRows" type="void" line="338">
                <params>
                    <param name="aRowA" type="int"/>
                    <param name="aRowB" type="int"/>
                </params>
            </method>
            <method name="factory" type="PhysicalStore.Factory&lt;Double,JamaMatrix&gt;" line="342"/>
            <method name="fillAll" type="void" line="346">
                <params>
                    <param name="aNmbr" type="Double"/>
                </params>
            </method>
            <method name="fillByMultiplying" type="void" line="350">
                <params>
                    <param name="aLeftArg" type="Access1D&lt;Double&gt;"/>
                    <param name="aRightArg" type="Access1D&lt;Double&gt;"/>
                </params>
                <declaration name="tmpLeft" type="Matrix" line="352"/>
                <declaration name="tmpRight" type="Matrix" line="353"/>
            </method>
            <method name="fillColumn" type="void" line="358">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="aNmbr" type="Double"/>
                </params>
            </method>
            <method name="fillConjugated" type="void" line="362">
                <params>
                    <param name="source" type="Access2D&lt;? extends Number&gt;"/>
                </params>
            </method>
            <method name="fillDiagonal" type="void" line="366">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="aNmbr" type="Double"/>
                </params>
            </method>
            <method name="fillMatching" type="void" line="370">
                <params>
                    <param name="source" type="Access1D&lt;? extends Number&gt;"/>
                </params>
                <declaration name="tmpDelegateArray" type="double[][]" line="372"/>
                <declaration name="tmpRowDim" type="int" line="374"/>
                <scope line="376">
                    <scope line="377"/>
                </scope>
            </method>
            <method name="fillMatching" type="void" line="383">
                <params>
                    <param name="leftArg" type="Access1D&lt;Double&gt;"/>
                    <param name="function" type="BinaryFunction&lt;Double&gt;"/>
                    <param name="rightArg" type="Access1D&lt;Double&gt;"/>
                </params>
                <scope line="384">
                    <scope line="385"/>
                    <scope line="387"/>
                    <scope line="389"/>
                    <scope line="391"/>
                    <scope line="393"/>
                </scope>
                <scope line="397">
                    <scope line="398"/>
                    <scope line="400"/>
                    <scope line="402"/>
                    <scope line="404"/>
                    <scope line="407"/>
                </scope>
                <scope line="411"/>
            </method>
            <method name="fillMatching" type="void" line="417">
                <params>
                    <param name="aLeftArg" type="Access1D&lt;Double&gt;"/>
                    <param name="function" type="BinaryFunction&lt;Double&gt;"/>
                    <param name="aRightArg" type="Double"/>
                </params>
            </method>
            <method name="fillMatching" type="void" line="421">
                <params>
                    <param name="aLeftArg" type="Double"/>
                    <param name="function" type="BinaryFunction&lt;Double&gt;"/>
                    <param name="aRightArg" type="Access1D&lt;Double&gt;"/>
                </params>
            </method>
            <method name="fillRange" type="void" line="425">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="value" type="Double"/>
                </params>
            </method>
            <method name="fillRow" type="void" line="429">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="aNmbr" type="Double"/>
                </params>
            </method>
            <method name="fillTransposed" type="void" line="433">
                <params>
                    <param name="source" type="Access2D&lt;? extends Number&gt;"/>
                </params>
                <declaration name="tmpDelegateArray" type="double[][]" line="435"/>
                <declaration name="tmpRowDim" type="int" line="437"/>
                <scope line="439">
                    <scope line="440"/>
                </scope>
            </method>
            <method name="flushCache" type="void" line="446"/>
            <method name="get" type="Double" line="450">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="get" type="Double" line="454">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="getColDim" type="int" line="458"/>
            <method name="getColumnsRange" type="JamaMatrix" line="462">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                </params>
            </method>
            <method name="getCondition" type="PrimitiveScalar" line="466"/>
            <method name="getDeterminant" type="PrimitiveScalar" line="470"/>
            <method name="getEigenvalues" type="List&lt;ComplexNumber&gt;" line="474"/>
            <method name="getFrobeniusNorm" type="PrimitiveScalar" line="478"/>
            <method name="getInfinityNorm" type="PrimitiveScalar" line="482"/>
            <method name="getKyFanNorm" type="PrimitiveScalar" line="486">
                <params>
                    <param name="k" type="int"/>
                </params>
            </method>
            <method name="getMaxDim" type="int" line="490"/>
            <method name="getMinDim" type="int" line="494"/>
            <method name="getOneNorm" type="Scalar&lt;Double&gt;" line="498"/>
            <method name="getOperatorNorm" type="PrimitiveScalar" line="502"/>
            <method name="getRank" type="int" line="506"/>
            <method name="getRowDim" type="int" line="510"/>
            <method name="getRowsRange" type="JamaMatrix" line="514">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                </params>
            </method>
            <method name="getSingularValues" type="List&lt;Double&gt;" line="518"/>
            <method name="getTrace" type="PrimitiveScalar" line="522"/>
            <method name="getTraceNorm" type="PrimitiveScalar" line="526"/>
            <method name="getVectorNorm" type="PrimitiveScalar" line="531">
                <params>
                    <param name="aDegree" type="int"/>
                </params>
                <scope line="533">
                    <declaration name="tmpFunc" type="AggregatorFunction&amp;lt;Double&amp;gt;" line="535"/>
                </scope>
                <scope line="541">
                    <declaration name="tmpFunc" type="AggregatorFunction&amp;lt;Double&amp;gt;" line="543"/>
                </scope>
                <scope line="549"/>
                <scope line="553">
                    <declaration name="tmpFunc" type="AggregatorFunction&amp;lt;Double&amp;gt;" line="555"/>
                </scope>
            </method>
            <method name="hashCode" type="int" line="564"/>
            <method name="invert" type="JamaMatrix" line="568"/>
            <method name="isAbsolute" type="boolean" line="572">
                <params>
                    <param name="index" type="long"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="573"/>
            </method>
            <method name="isAbsolute" type="boolean" line="577">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isEmpty" type="boolean" line="581"/>
            <method name="isFat" type="boolean" line="585"/>
            <method name="isFullRank" type="boolean" line="589"/>
            <method name="isHermitian" type="boolean" line="593"/>
            <method name="isInfinite" type="boolean" line="597">
                <params>
                    <param name="index" type="long"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="598"/>
            </method>
            <method name="isInfinite" type="boolean" line="602">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isLowerLeftShaded" type="boolean" line="606"/>
            <method name="isNaN" type="boolean" line="610">
                <params>
                    <param name="index" type="long"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="611"/>
            </method>
            <method name="isNaN" type="boolean" line="615">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="619">
                <params>
                    <param name="index" type="long"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="620"/>
            </method>
            <method name="isPositive" type="boolean" line="624">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="628">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="632">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isScalar" type="boolean" line="636"/>
            <method name="isSquare" type="boolean" line="640"/>
            <method name="isSymmetric" type="boolean" line="644"/>
            <method name="isTall" type="boolean" line="648"/>
            <method name="isUpperRightShaded" type="boolean" line="652"/>
            <method name="isVector" type="boolean" line="656"/>
            <method name="isZero" type="boolean" line="660">
                <params>
                    <param name="index" type="long"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="661"/>
            </method>
            <method name="isZero" type="boolean" line="665">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="iterator" type="Iterator&lt;Double&gt;" line="669"/>
            <method name="maxpy" type="void" line="673">
                <params>
                    <param name="aSclrA" type="Double"/>
                    <param name="aMtrxX" type="MatrixStore&lt;Double&gt;"/>
                </params>
                <declaration name="tmpValA" type="double" line="675"/>
                <declaration name="tmpArray" type="double[][]" line="676"/>
                <declaration name="tmpRowDim" type="int" line="678"/>
                <declaration name="tmpColDim" type="int" line="679"/>
                <scope line="681">
                    <scope line="682"/>
                </scope>
            </method>
            <method name="mergeColumns" type="JamaMatrix" line="688">
                <params>
                    <param name="aMtrx" type="Access2D&lt;?&gt;"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="690"/>
                <declaration name="tmpColDim" type="int" line="691"/>
                <declaration name="retVal" type="Matrix" line="693"/>
            </method>
            <method name="mergeRows" type="JamaMatrix" line="701">
                <params>
                    <param name="aMtrx" type="Access2D&lt;?&gt;"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="703"/>
                <declaration name="tmpColDim" type="int" line="704"/>
                <declaration name="retVal" type="Matrix" line="706"/>
            </method>
            <method name="modify" type="JamaMatrix" line="714">
                <params>
                    <param name="function" type="UnaryFunction&lt;Double&gt;"/>
                </params>
                <declaration name="retVal" type="JamaMatrix" line="716"/>
            </method>
            <method name="modifyAll" type="void" line="723">
                <params>
                    <param name="function" type="UnaryFunction&lt;Double&gt;"/>
                </params>
            </method>
            <method name="modifyColumn" type="void" line="727">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction&lt;Double&gt;"/>
                </params>
            </method>
            <method name="modifyDiagonal" type="void" line="731">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction&lt;Double&gt;"/>
                </params>
                <declaration name="tmpCount" type="long" line="733"/>
                <declaration name="tmpFirst" type="int" line="735"/>
                <declaration name="tmpLimit" type="int" line="736"/>
                <declaration name="tmpStep" type="int" line="737"/>
                <scope line="739"/>
            </method>
            <method name="modifyOne" type="void" line="745">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction&lt;Double&gt;"/>
                </params>
                <declaration name="tmpValue" type="double" line="747"/>
            </method>
            <method name="modifyRange" type="void" line="754">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="function" type="UnaryFunction&lt;Double&gt;"/>
                </params>
                <scope line="755"/>
            </method>
            <method name="modifyRow" type="void" line="760">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction&lt;Double&gt;"/>
                </params>
            </method>
            <method name="multiply" type="JamaMatrix" line="764">
                <params>
                    <param name="aNmbr" type="Number"/>
                </params>
            </method>
            <method name="multiplyElements" type="JamaMatrix" line="768">
                <params>
                    <param name="aMtrx" type="Access2D&lt;?&gt;"/>
                </params>
            </method>
            <method name="multiplyLeft" type="JamaMatrix" line="772">
                <params>
                    <param name="leftMtrx" type="Access1D&lt;Double&gt;"/>
                </params>
            </method>
            <method name="multiplyLeft" type="JamaMatrix" line="776">
                <params>
                    <param name="aMtrx" type="Access2D&lt;?&gt;"/>
                </params>
            </method>
            <method name="multiplyRight" type="JamaMatrix" line="780">
                <params>
                    <param name="rightMtrx" type="Access1D&lt;Double&gt;"/>
                </params>
            </method>
            <method name="multiplyRight" type="JamaMatrix" line="784">
                <params>
                    <param name="aMtrx" type="Access2D&lt;?&gt;"/>
                </params>
            </method>
            <method name="multiplyVectors" type="PrimitiveScalar" line="788">
                <params>
                    <param name="aVctr" type="Access2D&lt;?&gt;"/>
                </params>
                <declaration name="retVal" type="double" line="790"/>
                <declaration name="tmpSize" type="int" line="792"/>
                <scope line="793"/>
            </method>
            <method name="negate" type="JamaMatrix" line="800"/>
            <method name="raxpy" type="void" line="804">
                <params>
                    <param name="aSclrA" type="Double"/>
                    <param name="aRowX" type="int"/>
                    <param name="aRowY" type="int"/>
                    <param name="aFirstCol" type="int"/>
                </params>
                <declaration name="tmpValA" type="double" line="806"/>
                <declaration name="tmpArray" type="double[][]" line="807"/>
                <declaration name="tmpColDim" type="int" line="809"/>
                <scope line="811"/>
            </method>
            <method name="round" type="JamaMatrix" line="817">
                <params>
                    <param name="aCntxt" type="NumberContext"/>
                </params>
                <declaration name="retVal" type="double[][]" line="819"/>
            </method>
            <method name="scale" type="JamaMatrix" line="826">
                <params>
                    <param name="scalar" type="Double"/>
                </params>
            </method>
            <method name="selectColumns" type="JamaMatrix" line="830">
                <params>
                    <param name="someCols" type="int"/>
                </params>
            </method>
            <method name="selectRows" type="JamaMatrix" line="834">
                <params>
                    <param name="someRows" type="int"/>
                </params>
            </method>
            <method name="set" type="Double" line="838">
                <params>
                    <param name="anInd" type="int"/>
                    <param name="value" type="Number"/>
                </params>
                <declaration name="retVal" type="double" line="839"/>
            </method>
            <method name="set" type="void" line="844">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="848">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="aNmbr" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="852">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="aNmbr" type="Number"/>
                </params>
            </method>
            <method name="set" type="void" line="856">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="Number"/>
                </params>
            </method>
            <method name="size" type="int" line="860"/>
            <method name="solve" type="JamaMatrix" line="864">
                <params>
                    <param name="aRHS" type="Access2D&lt;?&gt;"/>
                </params>
                <declaration name="retVal" type="Matrix" line="866"/>
                <scope line="868">
                    <scope line="869"/>
                    <scope line="871"/>
                </scope>
                <scope line="874">
                    <declaration name="tmpMD" type="JamaSingularValue" line="875"/>
                </scope>
            </method>
            <method name="subtract" type="JamaMatrix" line="883">
                <params>
                    <param name="aMtrx" type="Access2D&lt;?&gt;"/>
                </params>
            </method>
            <method name="subtract" type="MatrixStore&lt;Double&gt;" line="887">
                <params>
                    <param name="subtrahend" type="MatrixStore&lt;Double&gt;"/>
                </params>
            </method>
            <method name="subtract" type="JamaMatrix" line="891">
                <params>
                    <param name="value" type="Number"/>
                </params>
                <declaration name="retVal" type="double[][]" line="893"/>
            </method>
            <method name="toBigDecimal" type="BigDecimal" line="900">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="toBigStore" type="PhysicalStore&lt;BigDecimal&gt;" line="904"/>
            <method name="toComplexNumber" type="ComplexNumber" line="908">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="toComplexStore" type="PhysicalStore&lt;ComplexNumber&gt;" line="912"/>
            <method name="toListOfColumns" type="List&lt;BasicMatrix&lt;Double&gt;&gt;" line="916">
                <declaration name="tmpColDim" type="int" line="918"/>
                <declaration name="retVal" type="List&amp;lt;BasicMatrix&amp;lt;Double&amp;gt;&amp;gt;" line="920"/>
                <scope line="922"/>
            </method>
            <method name="toListOfElements" type="List&lt;Double&gt;" line="929"/>
            <method name="toListOfRows" type="List&lt;BasicMatrix&lt;Double&gt;&gt;" line="933">
                <declaration name="tmpRowDim" type="int" line="935"/>
                <declaration name="retVal" type="List&amp;lt;BasicMatrix&amp;lt;Double&amp;gt;&amp;gt;" line="937"/>
                <scope line="939"/>
            </method>
            <method name="toPrimitiveStore" type="JamaMatrix" line="946"/>
            <method name="toScalar" type="PrimitiveScalar" line="950">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="toString" type="String" line="955"/>
            <method name="toString" type="String" line="959">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="transformLeft" type="void" line="963">
                <params>
                    <param name="aTransf" type="Householder&lt;Double&gt;"/>
                    <param name="aFirstCol" type="int"/>
                </params>
                <declaration name="tmpArray" type="double[][]" line="965"/>
                <declaration name="tmpRowDim" type="int" line="966"/>
                <declaration name="tmpColDim" type="int" line="967"/>
                <declaration name="tmpFirst" type="int" line="969"/>
                <declaration name="tmpWorkCopy" type="double[]" line="971"/>
                <declaration name="tmpScale" type="double" line="973"/>
                <scope line="974">
                    <scope line="976"/>
                    <declaration name="tmpVal" type="double" line="979"/>
                    <declaration name="tmpSize" type="int" line="980"/>
                    <scope line="981"/>
                    <scope line="987"/>
                </scope>
            </method>
            <method name="transformLeft" type="void" line="993">
                <params>
                    <param name="aTransf" type="Rotation&lt;Double&gt;"/>
                </params>
                <declaration name="tmpTransf" type="Rotation.Primitive" line="995"/>
                <declaration name="tmpLow" type="int" line="997"/>
                <declaration name="tmpHigh" type="int" line="998"/>
                <scope line="1000">
                    <scope line="1001">
                        <declaration name="tmpArray" type="double[][]" line="1003"/>
                        <declaration name="tmpOldLow" type="double" line="1004"/>
                        <declaration name="tmpOldHigh" type="double" line="1005"/>
                        <scope line="1007"/>
                    </scope>
                    <scope line="1015"/>
                </scope>
                <scope line="1018">
                    <scope line="1019"/>
                    <scope line="1021"/>
                    <scope line="1023"/>
                </scope>
            </method>
            <method name="transformRight" type="void" line="1029">
                <params>
                    <param name="aTransf" type="Householder&lt;Double&gt;"/>
                    <param name="aFirstRow" type="int"/>
                </params>
                <declaration name="tmpArray" type="double[][]" line="1031"/>
                <declaration name="tmpRowDim" type="int" line="1032"/>
                <declaration name="tmpColDim" type="int" line="1033"/>
                <declaration name="tmpFirst" type="int" line="1035"/>
                <declaration name="tmpWorkCopy" type="double[]" line="1037"/>
                <declaration name="tmpScale" type="double" line="1039"/>
                <scope line="1040">
                    <scope line="1042"/>
                    <declaration name="tmpVal" type="double" line="1045"/>
                    <declaration name="tmpSize" type="int" line="1046"/>
                    <scope line="1047"/>
                    <scope line="1053"/>
                </scope>
            </method>
            <method name="transformRight" type="void" line="1059">
                <params>
                    <param name="aTransf" type="Rotation&lt;Double&gt;"/>
                </params>
                <declaration name="tmpTransf" type="Rotation.Primitive" line="1061"/>
                <declaration name="tmpLow" type="int" line="1063"/>
                <declaration name="tmpHigh" type="int" line="1064"/>
                <scope line="1066">
                    <scope line="1067">
                        <declaration name="tmpArray" type="double[][]" line="1069"/>
                        <declaration name="tmpOldLow" type="double" line="1070"/>
                        <declaration name="tmpOldHigh" type="double" line="1071"/>
                        <scope line="1073"/>
                    </scope>
                    <scope line="1081"/>
                </scope>
                <scope line="1084">
                    <scope line="1085"/>
                    <scope line="1087"/>
                    <scope line="1089"/>
                </scope>
            </method>
            <method name="transpose" type="JamaMatrix" line="1095"/>
            <method name="update" type="void" line="1099">
                <params>
                    <param name="aFirstRow" type="int"/>
                    <param name="aRowCount" type="int"/>
                    <param name="aFirstCol" type="int"/>
                    <param name="aColCount" type="int"/>
                    <param name="aMtrx" type="JamaMatrix"/>
                </params>
            </method>
            <method name="update" type="void" line="1103">
                <params>
                    <param name="aFirstRow" type="int"/>
                    <param name="aRowCount" type="int"/>
                    <param name="someColumns" type="int[]"/>
                    <param name="aMtrx" type="JamaMatrix"/>
                </params>
            </method>
            <method name="update" type="void" line="1107">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="aNmbr" type="Number"/>
                </params>
            </method>
            <method name="update" type="void" line="1111">
                <params>
                    <param name="someRows" type="int[]"/>
                    <param name="aFirstCol" type="int"/>
                    <param name="aColCount" type="int"/>
                    <param name="aMtrx" type="JamaMatrix"/>
                </params>
            </method>
            <method name="update" type="void" line="1115">
                <params>
                    <param name="someRows" type="int[]"/>
                    <param name="someColumns" type="int[]"/>
                    <param name="aMtrx" type="JamaMatrix"/>
                </params>
            </method>
            <method name="visitAll" type="void" line="1119">
                <params>
                    <param name="visitor" type="VoidFunction&lt;Double&gt;"/>
                </params>
            </method>
            <method name="visitColumn" type="void" line="1123">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="visitor" type="VoidFunction&lt;Double&gt;"/>
                </params>
            </method>
            <method name="visitDiagonal" type="void" line="1127">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="visitor" type="VoidFunction&lt;Double&gt;"/>
                </params>
            </method>
            <method name="visitRange" type="void" line="1131">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="visitor" type="VoidFunction&lt;Double&gt;"/>
                </params>
            </method>
            <method name="visitRow" type="void" line="1135">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="visitor" type="VoidFunction&lt;Double&gt;"/>
                </params>
            </method>
            <method name="getCholeskyDecomposition" type="JamaCholesky" line="1139">
                <declaration name="retVal" type="JamaCholesky" line="1140"/>
            </method>
            <method name="getDelegate" type="Matrix" line="1145"/>
            <method name="getEigenvalueDecomposition" type="JamaEigenvalue" line="1149">
                <declaration name="retVal" type="JamaEigenvalue" line="1150"/>
            </method>
            <method name="getLUDecomposition" type="JamaLU" line="1155">
                <declaration name="retVal" type="JamaLU" line="1156"/>
            </method>
            <method name="getQRDecomposition" type="JamaQR" line="1161">
                <declaration name="retVal" type="JamaQR" line="1162"/>
            </method>
            <method name="getSingularValueDecomposition" type="JamaSingularValue" line="1167">
                <declaration name="retVal" type="JamaSingularValue" line="1168"/>
            </method>
        </class>
    </source>