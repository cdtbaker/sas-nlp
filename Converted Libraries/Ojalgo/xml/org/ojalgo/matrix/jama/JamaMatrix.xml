<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.jama">
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.PrimitiveFunction"/>
        <import package="java.io.Serializable"/>
        <import package="java.math.BigDecimal"/>
        <import package="java.util.AbstractList"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="org.ojalgo.ProgrammingError"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.access.AccessUtils"/>
        <import package="org.ojalgo.access.Iterator1D"/>
        <import package="org.ojalgo.array.ArrayUtils"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.BinaryFunction"/>
        <import package="org.ojalgo.function.UnaryFunction"/>
        <import package="org.ojalgo.function.VoidFunction"/>
        <import package="org.ojalgo.function.aggregator.Aggregator"/>
        <import package="org.ojalgo.function.aggregator.AggregatorFunction"/>
        <import package="org.ojalgo.function.aggregator.PrimitiveAggregator"/>
        <import package="org.ojalgo.matrix.BasicMatrix"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.store.BigDenseStore"/>
        <import package="org.ojalgo.matrix.store.ComplexDenseStore"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore"/>
        <import package="org.ojalgo.matrix.transformation.Householder"/>
        <import package="org.ojalgo.matrix.transformation.Rotation"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.scalar.PrimitiveScalar"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="JamaMatrix" line="36">
            <extends class="Object"/>
            <implements interface="BasicMatrix">
                <type_params>
                    <type_param name="Double"/>
                </type_params>
            </implements>
            <implements interface="PhysicalStore">
                <type_params>
                    <type_param name="Double"/>
                </type_params>
            </implements>
            <implements interface="Serializable"/>
            <javadoc line="36">
                This class adapts JAMA&apos;s Matrix to ojAlgo&apos;s {@linkplain BasicMatrix} and {@linkplain PhysicalStore} interfaces.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <declaration name="FACTORY" type="JamaFactory" line="41"/>
            <method name="getBuilder" type="Access2D.Builder<JamaMatrix>" line="42">
                <params>
                    <param name="aLength" type="int"/>
                </params>
            </method>
            <method name="getBuilder" type="Access2D.Builder<JamaMatrix>" line="45">
                <params>
                    <param name="aRowDim" type="int"/>
                    <param name="aColDim" type="int"/>
                </params>
            </method>
            <method name="convert" type="Matrix" line="48">
                <params>
                    <param name="aStore" type="Access1D<?>"/>
                    <param name="structure" type="int"/>
                </params>
                <declaration name="retVal" type="Matrix" line="49"/>
                <scope line="50"/>
                <scope line="53"/>
            </method>
            <method name="convert" type="Matrix" line="58">
                <params>
                    <param name="aStore" type="Access2D<?>"/>
                </params>
                <declaration name="retVal" type="Matrix" line="59"/>
                <scope line="60"/>
                <scope line="63"/>
            </method>
            <method name="cast" type="Rotation.Primitive" line="68">
                <params>
                    <param name="aTransf" type="Rotation<Double>"/>
                </params>
                <scope line="69"/>
                <scope line="72"/>
            </method>
            <declaration name="myDelegate" type="Matrix" line="76"/>
            <method name="JamaMatrix" type="constructor" line="77">
                <params>
                    <param name="aMtrx" type="BasicMatrix"/>
                </params>
            </method>
            <method name="JamaMatrix" type="constructor" line="81">
                <params>
                    <param name="aStore" type="MatrixStore<Double>"/>
                </params>
            </method>
            <method name="JamaMatrix" type="constructor" line="85"/>
            <method name="JamaMatrix" type="constructor" line="90">
                <params>
                    <param name="aRaw" type="double[][]"/>
                </params>
            </method>
            <method name="JamaMatrix" type="constructor" line="94">
                <params>
                    <param name="aDelegate" type="Matrix"/>
                </params>
            </method>
            <method name="add" type="JamaMatrix" line="98">
                <params>
                    <param name="aMtrx" type="Access2D<?>"/>
                </params>
            </method>
            <method name="add" type="JamaMatrix" line="101">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="aMtrx" type="Access2D<?>"/>
                </params>
                <declaration name="tmpArrayCopy" type="double[][]" line="102"/>
                <declaration name="tmpLocalRowRef" type="double[]" line="103"/>
                <scope line="104">
                    <scope line="106"/>
                </scope>
            </method>
            <method name="add" type="JamaMatrix" line="112">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="aNmbr" type="Number"/>
                </params>
                <declaration name="tmpArrayCopy" type="double[][]" line="113"/>
            </method>
            <method name="add" type="JamaMatrix" line="117">
                <params>
                    <param name="aNmbr" type="Number"/>
                </params>
                <declaration name="retVal" type="double[][]" line="118"/>
            </method>
            <method name="aggregateAll" type="Double" line="122">
                <params>
                    <param name="aggregator" type="Aggregator"/>
                </params>
                <declaration name="tmpVisitor" type="AggregatorFunction&lt;Double&gt;" line="123"/>
            </method>
            <method name="asList" type="List<Double>" line="127">
                <declaration name="tmpColDim" type="int" line="128"/>
                <anonymous_class line="129">
                    <method name="get" type="Double" line="130">
                        <params>
                            <param name="someIndex" type="int"/>
                        </params>
                    </method>
                    <method name="set" type="Double" line="133">
                        <params>
                            <param name="someIndex" type="int"/>
                            <param name="aValue" type="Double"/>
                        </params>
                        <declaration name="retVal" type="Double" line="134"/>
                    </method>
                    <method name="size" type="int" line="138"/>
                </anonymous_class>
            </method>
            <method name="builder" type="MatrixStore.Builder<Double>" line="144"/>
            <method name="caxpy" type="void" line="147">
                <params>
                    <param name="aSclrA" type="Double"/>
                    <param name="aColX" type="int"/>
                    <param name="aColY" type="int"/>
                    <param name="aFirstRow" type="int"/>
                </params>
                <declaration name="tmpValA" type="double" line="148"/>
                <declaration name="tmpArray" type="double[][]" line="149"/>
                <declaration name="tmpRowDim" type="int" line="150"/>
                <scope line="151"/>
            </method>
            <method name="conjugate" type="JamaMatrix" line="155"/>
            <method name="copy" type="JamaMatrix" line="158"/>
            <method name="copyToBuilder" type="Access2D.Builder<JamaMatrix>" line="161">
                <declaration name="tmpRowDim" type="int" line="162"/>
                <declaration name="tmpColDim" type="int" line="163"/>
                <declaration name="retVal" type="Access2D.Builder&lt;JamaMatrix&gt;" line="164"/>
                <scope line="165">
                    <scope line="166"/>
                </scope>
            </method>
            <method name="count" type="long" line="172"/>
            <method name="countColumns" type="long" line="175"/>
            <method name="countRows" type="long" line="178"/>
            <method name="divide" type="JamaMatrix" line="181">
                <params>
                    <param name="aNmbr" type="Number"/>
                </params>
                <declaration name="retVal" type="double[][]" line="182"/>
            </method>
            <method name="divideElements" type="JamaMatrix" line="186">
                <params>
                    <param name="aMtrx" type="Access2D<?>"/>
                </params>
            </method>
            <method name="doubleValue" type="double" line="189">
                <params>
                    <param name="anInd" type="long"/>
                </params>
            </method>
            <method name="doubleValue" type="double" line="192">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="enforce" type="JamaMatrix" line="195">
                <params>
                    <param name="aContext" type="NumberContext"/>
                </params>
                <declaration name="retVal" type="double[][]" line="196"/>
            </method>
            <method name="equals" type="boolean" line="200">
                <params>
                    <param name="aMtrx" type="Access2D<?>"/>
                    <param name="aCntxt" type="NumberContext"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="203">
                <params>
                    <param name="other" type="MatrixStore<Double>"/>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="206">
                <params>
                    <param name="anObject" type="Object"/>
                </params>
                <scope line="207"/>
                <scope line="210"/>
                <scope line="213"/>
            </method>
            <method name="exchangeColumns" type="void" line="217">
                <params>
                    <param name="aColA" type="int"/>
                    <param name="aColB" type="int"/>
                </params>
            </method>
            <method name="exchangeRows" type="void" line="220">
                <params>
                    <param name="aRowA" type="int"/>
                    <param name="aRowB" type="int"/>
                </params>
            </method>
            <method name="factory" type="PhysicalStore.Factory<Double,JamaMatrix>" line="223"/>
            <method name="fillAll" type="void" line="226">
                <params>
                    <param name="aNmbr" type="Double"/>
                </params>
            </method>
            <method name="fillByMultiplying" type="void" line="229">
                <params>
                    <param name="aLeftArg" type="Access1D<Double>"/>
                    <param name="aRightArg" type="Access1D<Double>"/>
                </params>
                <declaration name="tmpLeft" type="Matrix" line="230"/>
                <declaration name="tmpRight" type="Matrix" line="231"/>
            </method>
            <method name="fillColumn" type="void" line="234">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="aNmbr" type="Double"/>
                </params>
            </method>
            <method name="fillConjugated" type="void" line="237">
                <params>
                    <param name="source" type="Access2D<? extends Number>"/>
                </params>
            </method>
            <method name="fillDiagonal" type="void" line="240">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="aNmbr" type="Double"/>
                </params>
            </method>
            <method name="fillMatching" type="void" line="243">
                <params>
                    <param name="source" type="Access1D<? extends Number>"/>
                </params>
                <declaration name="tmpDelegateArray" type="double[][]" line="244"/>
                <declaration name="tmpRowDim" type="int" line="245"/>
                <scope line="246">
                    <scope line="247"/>
                </scope>
            </method>
            <method name="fillMatching" type="void" line="252">
                <params>
                    <param name="leftArg" type="Access1D<Double>"/>
                    <param name="function" type="BinaryFunction<Double>"/>
                    <param name="rightArg" type="Access1D<Double>"/>
                </params>
                <scope line="253">
                    <scope line="254"/>
                    <scope line="257"/>
                    <scope line="260"/>
                    <scope line="263"/>
                    <scope line="266"/>
                </scope>
                <scope line="270">
                    <scope line="271"/>
                    <scope line="274"/>
                    <scope line="277"/>
                    <scope line="280"/>
                    <scope line="283"/>
                </scope>
                <scope line="287"/>
            </method>
            <method name="fillMatching" type="void" line="291">
                <params>
                    <param name="aLeftArg" type="Access1D<Double>"/>
                    <param name="function" type="BinaryFunction<Double>"/>
                    <param name="aRightArg" type="Double"/>
                </params>
            </method>
            <method name="fillMatching" type="void" line="294">
                <params>
                    <param name="aLeftArg" type="Double"/>
                    <param name="function" type="BinaryFunction<Double>"/>
                    <param name="aRightArg" type="Access1D<Double>"/>
                </params>
            </method>
            <method name="fillRange" type="void" line="297">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="value" type="Double"/>
                </params>
            </method>
            <method name="fillRow" type="void" line="300">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="aNmbr" type="Double"/>
                </params>
            </method>
            <method name="fillTransposed" type="void" line="303">
                <params>
                    <param name="source" type="Access2D<? extends Number>"/>
                </params>
                <declaration name="tmpDelegateArray" type="double[][]" line="304"/>
                <declaration name="tmpRowDim" type="int" line="305"/>
                <scope line="306">
                    <scope line="307"/>
                </scope>
            </method>
            <method name="flushCache" type="void" line="312"/>
            <method name="get" type="Double" line="315">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="get" type="Double" line="318">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="getColDim" type="int" line="321"/>
            <method name="getColumnsRange" type="JamaMatrix" line="324">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                </params>
            </method>
            <method name="getCondition" type="PrimitiveScalar" line="327"/>
            <method name="getDeterminant" type="PrimitiveScalar" line="330"/>
            <method name="getEigenvalues" type="List<ComplexNumber>" line="333"/>
            <method name="getFrobeniusNorm" type="PrimitiveScalar" line="336"/>
            <method name="getInfinityNorm" type="PrimitiveScalar" line="339"/>
            <method name="getKyFanNorm" type="PrimitiveScalar" line="342">
                <params>
                    <param name="k" type="int"/>
                </params>
            </method>
            <method name="getMaxDim" type="int" line="345"/>
            <method name="getMinDim" type="int" line="348"/>
            <method name="getOneNorm" type="Scalar<Double>" line="351"/>
            <method name="getOperatorNorm" type="PrimitiveScalar" line="354"/>
            <method name="getRank" type="int" line="357"/>
            <method name="getRowDim" type="int" line="360"/>
            <method name="getRowsRange" type="JamaMatrix" line="363">
                <params>
                    <param name="aFirst" type="int"/>
                    <param name="aLimit" type="int"/>
                </params>
            </method>
            <method name="getSingularValues" type="List<Double>" line="366"/>
            <method name="getTrace" type="PrimitiveScalar" line="369"/>
            <method name="getTraceNorm" type="PrimitiveScalar" line="372"/>
            <method name="getVectorNorm" type="PrimitiveScalar" line="375">
                <params>
                    <param name="aDegree" type="int"/>
                </params>
                <scope line="376">
                    <declaration name="tmpFunc" type="AggregatorFunction&lt;Double&gt;" line="377"/>
                </scope>
                <scope line="381">
                    <declaration name="tmpFunc" type="AggregatorFunction&lt;Double&gt;" line="382"/>
                </scope>
                <scope line="386"/>
                <scope line="389">
                    <declaration name="tmpFunc" type="AggregatorFunction&lt;Double&gt;" line="390"/>
                </scope>
            </method>
            <method name="hashCode" type="int" line="395"/>
            <method name="invert" type="JamaMatrix" line="398"/>
            <method name="isAbsolute" type="boolean" line="401">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="isAbsolute" type="boolean" line="404">
                <params>
                    <param name="index" type="long"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="405"/>
            </method>
            <method name="isAbsolute" type="boolean" line="408">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isEmpty" type="boolean" line="411"/>
            <method name="isFat" type="boolean" line="414"/>
            <method name="isFullRank" type="boolean" line="417"/>
            <method name="isHermitian" type="boolean" line="420"/>
            <method name="isInfinite" type="boolean" line="423">
                <params>
                    <param name="index" type="long"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="424"/>
            </method>
            <method name="isInfinite" type="boolean" line="427">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isLowerLeftShaded" type="boolean" line="430"/>
            <method name="isNaN" type="boolean" line="433">
                <params>
                    <param name="index" type="long"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="434"/>
            </method>
            <method name="isNaN" type="boolean" line="437">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="440">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="isPositive" type="boolean" line="443">
                <params>
                    <param name="index" type="long"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="444"/>
            </method>
            <method name="isPositive" type="boolean" line="447">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="450">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="453">
                <params>
                    <param name="index" type="long"/>
                </params>
            </method>
            <method name="isReal" type="boolean" line="456">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="isScalar" type="boolean" line="459"/>
            <method name="isSquare" type="boolean" line="462"/>
            <method name="isSymmetric" type="boolean" line="465"/>
            <method name="isTall" type="boolean" line="468"/>
            <method name="isUpperRightShaded" type="boolean" line="471"/>
            <method name="isVector" type="boolean" line="474"/>
            <method name="isZero" type="boolean" line="477">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="isZero" type="boolean" line="480">
                <params>
                    <param name="index" type="long"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="481"/>
            </method>
            <method name="isZero" type="boolean" line="484">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                </params>
            </method>
            <method name="iterator" type="Iterator<Double>" line="487"/>
            <method name="maxpy" type="void" line="490">
                <params>
                    <param name="aSclrA" type="Double"/>
                    <param name="aMtrxX" type="MatrixStore<Double>"/>
                </params>
                <declaration name="tmpValA" type="double" line="491"/>
                <declaration name="tmpArray" type="double[][]" line="492"/>
                <declaration name="tmpRowDim" type="int" line="493"/>
                <declaration name="tmpColDim" type="int" line="494"/>
                <scope line="495">
                    <scope line="496"/>
                </scope>
            </method>
            <method name="mergeColumns" type="JamaMatrix" line="501">
                <params>
                    <param name="aMtrx" type="Access2D<?>"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="502"/>
                <declaration name="tmpColDim" type="int" line="503"/>
                <declaration name="retVal" type="Matrix" line="504"/>
            </method>
            <method name="mergeRows" type="JamaMatrix" line="509">
                <params>
                    <param name="aMtrx" type="Access2D<?>"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="510"/>
                <declaration name="tmpColDim" type="int" line="511"/>
                <declaration name="retVal" type="Matrix" line="512"/>
            </method>
            <method name="modify" type="JamaMatrix" line="517">
                <params>
                    <param name="function" type="UnaryFunction<Double>"/>
                </params>
                <declaration name="retVal" type="JamaMatrix" line="518"/>
            </method>
            <method name="modifyAll" type="void" line="522">
                <params>
                    <param name="function" type="UnaryFunction<Double>"/>
                </params>
            </method>
            <method name="modifyColumn" type="void" line="525">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction<Double>"/>
                </params>
            </method>
            <method name="modifyDiagonal" type="void" line="528">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="function" type="UnaryFunction<Double>"/>
                </params>
            </method>
            <method name="modifyDiagonal" type="void" line="531">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction<Double>"/>
                </params>
                <declaration name="tmpCount" type="long" line="532"/>
                <declaration name="tmpFirst" type="int" line="533"/>
                <declaration name="tmpLimit" type="int" line="534"/>
                <declaration name="tmpStep" type="int" line="535"/>
                <scope line="536"/>
            </method>
            <method name="modifyOne" type="void" line="540">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="function" type="UnaryFunction<Double>"/>
                </params>
                <declaration name="tmpValue" type="double" line="541"/>
            </method>
            <method name="modifyRange" type="void" line="545">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="function" type="UnaryFunction<Double>"/>
                </params>
                <scope line="546"/>
            </method>
            <method name="modifyRow" type="void" line="550">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="function" type="UnaryFunction<Double>"/>
                </params>
            </method>
            <method name="multiply" type="JamaMatrix" line="553">
                <params>
                    <param name="aNmbr" type="Number"/>
                </params>
            </method>
            <method name="multiplyElements" type="JamaMatrix" line="556">
                <params>
                    <param name="aMtrx" type="Access2D<?>"/>
                </params>
            </method>
            <method name="multiplyLeft" type="JamaMatrix" line="559">
                <params>
                    <param name="leftMtrx" type="Access1D<Double>"/>
                </params>
            </method>
            <method name="multiplyLeft" type="JamaMatrix" line="562">
                <params>
                    <param name="aMtrx" type="Access2D<?>"/>
                </params>
            </method>
            <method name="multiplyRight" type="JamaMatrix" line="565">
                <params>
                    <param name="rightMtrx" type="Access1D<Double>"/>
                </params>
            </method>
            <method name="multiplyRight" type="JamaMatrix" line="568">
                <params>
                    <param name="aMtrx" type="Access2D<?>"/>
                </params>
            </method>
            <method name="multiplyVectors" type="PrimitiveScalar" line="571">
                <params>
                    <param name="aVctr" type="Access2D<?>"/>
                </params>
                <declaration name="retVal" type="double" line="572"/>
                <declaration name="tmpSize" type="int" line="573"/>
                <scope line="574"/>
            </method>
            <method name="negate" type="JamaMatrix" line="579"/>
            <method name="raxpy" type="void" line="582">
                <params>
                    <param name="aSclrA" type="Double"/>
                    <param name="aRowX" type="int"/>
                    <param name="aRowY" type="int"/>
                    <param name="aFirstCol" type="int"/>
                </params>
                <declaration name="tmpValA" type="double" line="583"/>
                <declaration name="tmpArray" type="double[][]" line="584"/>
                <declaration name="tmpColDim" type="int" line="585"/>
                <scope line="586"/>
            </method>
            <method name="round" type="JamaMatrix" line="590">
                <params>
                    <param name="aCntxt" type="NumberContext"/>
                </params>
                <declaration name="retVal" type="double[][]" line="591"/>
            </method>
            <method name="selectColumns" type="JamaMatrix" line="595">
                <params>
                    <param name="someCols" type="int"/>
                </params>
            </method>
            <method name="selectRows" type="JamaMatrix" line="598">
                <params>
                    <param name="someRows" type="int"/>
                </params>
            </method>
            <method name="set" type="Double" line="601">
                <params>
                    <param name="anInd" type="int"/>
                    <param name="value" type="Number"/>
                </params>
                <declaration name="retVal" type="double" line="602"/>
            </method>
            <method name="set" type="void" line="606">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="609">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="aNmbr" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="612">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="aNmbr" type="Number"/>
                </params>
            </method>
            <method name="set" type="void" line="615">
                <params>
                    <param name="index" type="long"/>
                    <param name="value" type="Number"/>
                </params>
            </method>
            <method name="size" type="int" line="618"/>
            <method name="solve" type="JamaMatrix" line="621">
                <params>
                    <param name="aRHS" type="Access2D<?>"/>
                </params>
                <declaration name="retVal" type="Matrix" line="622"/>
                <scope line="623">
                    <scope line="624"/>
                    <scope line="627"/>
                </scope>
                <scope line="631">
                    <declaration name="tmpMD" type="JamaSingularValue" line="632"/>
                </scope>
            </method>
            <method name="subtract" type="JamaMatrix" line="638">
                <params>
                    <param name="aMtrx" type="Access2D<?>"/>
                </params>
            </method>
            <method name="subtract" type="JamaMatrix" line="641">
                <params>
                    <param name="value" type="Number"/>
                </params>
                <declaration name="retVal" type="double[][]" line="642"/>
            </method>
            <method name="toBigDecimal" type="BigDecimal" line="646">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="toBigStore" type="PhysicalStore<BigDecimal>" line="649"/>
            <method name="toComplexNumber" type="ComplexNumber" line="652">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="toComplexStore" type="PhysicalStore<ComplexNumber>" line="655"/>
            <method name="toListOfColumns" type="List<BasicMatrix<Double>>" line="658">
                <declaration name="tmpColDim" type="int" line="659"/>
                <declaration name="retVal" type="List&lt;BasicMatrix&lt;Double&gt;&gt;" line="660"/>
                <scope line="661"/>
            </method>
            <method name="toListOfElements" type="List<Double>" line="666"/>
            <method name="toListOfRows" type="List<BasicMatrix<Double>>" line="669">
                <declaration name="tmpRowDim" type="int" line="670"/>
                <declaration name="retVal" type="List&lt;BasicMatrix&lt;Double&gt;&gt;" line="671"/>
                <scope line="672"/>
            </method>
            <method name="toPrimitiveStore" type="JamaMatrix" line="677"/>
            <method name="toScalar" type="PrimitiveScalar" line="680">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="toString" type="String" line="683"/>
            <method name="toString" type="String" line="686">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="transformLeft" type="void" line="689">
                <params>
                    <param name="aTransf" type="Householder<Double>"/>
                    <param name="aFirstCol" type="int"/>
                </params>
                <declaration name="tmpArray" type="double[][]" line="690"/>
                <declaration name="tmpRowDim" type="int" line="691"/>
                <declaration name="tmpColDim" type="int" line="692"/>
                <declaration name="tmpFirst" type="int" line="693"/>
                <declaration name="tmpWorkCopy" type="double[]" line="694"/>
                <declaration name="tmpScale" type="double" line="695"/>
                <scope line="696">
                    <scope line="698"/>
                    <declaration name="tmpVal" type="double" line="701"/>
                    <declaration name="tmpSize" type="int" line="702"/>
                    <scope line="703"/>
                    <scope line="709"/>
                </scope>
            </method>
            <method name="transformLeft" type="void" line="714">
                <params>
                    <param name="aTransf" type="Rotation<Double>"/>
                </params>
                <declaration name="tmpTransf" type="Rotation.Primitive" line="715"/>
                <declaration name="tmpLow" type="int" line="716"/>
                <declaration name="tmpHigh" type="int" line="717"/>
                <scope line="718">
                    <scope line="719">
                        <declaration name="tmpArray" type="double[][]" line="720"/>
                        <declaration name="tmpOldLow" type="double" line="721"/>
                        <declaration name="tmpOldHigh" type="double" line="722"/>
                        <scope line="723"/>
                    </scope>
                    <scope line="730"/>
                </scope>
                <scope line="734">
                    <scope line="735"/>
                    <scope line="738"/>
                    <scope line="741"/>
                </scope>
            </method>
            <method name="transformRight" type="void" line="746">
                <params>
                    <param name="aTransf" type="Householder<Double>"/>
                    <param name="aFirstRow" type="int"/>
                </params>
                <declaration name="tmpArray" type="double[][]" line="747"/>
                <declaration name="tmpRowDim" type="int" line="748"/>
                <declaration name="tmpColDim" type="int" line="749"/>
                <declaration name="tmpFirst" type="int" line="750"/>
                <declaration name="tmpWorkCopy" type="double[]" line="751"/>
                <declaration name="tmpScale" type="double" line="752"/>
                <scope line="753">
                    <scope line="755"/>
                    <declaration name="tmpVal" type="double" line="758"/>
                    <declaration name="tmpSize" type="int" line="759"/>
                    <scope line="760"/>
                    <scope line="766"/>
                </scope>
            </method>
            <method name="transformRight" type="void" line="771">
                <params>
                    <param name="aTransf" type="Rotation<Double>"/>
                </params>
                <declaration name="tmpTransf" type="Rotation.Primitive" line="772"/>
                <declaration name="tmpLow" type="int" line="773"/>
                <declaration name="tmpHigh" type="int" line="774"/>
                <scope line="775">
                    <scope line="776">
                        <declaration name="tmpArray" type="double[][]" line="777"/>
                        <declaration name="tmpOldLow" type="double" line="778"/>
                        <declaration name="tmpOldHigh" type="double" line="779"/>
                        <scope line="780"/>
                    </scope>
                    <scope line="787"/>
                </scope>
                <scope line="791">
                    <scope line="792"/>
                    <scope line="795"/>
                    <scope line="798"/>
                </scope>
            </method>
            <method name="transpose" type="JamaMatrix" line="803"/>
            <method name="update" type="void" line="806">
                <params>
                    <param name="aFirstRow" type="int"/>
                    <param name="aRowCount" type="int"/>
                    <param name="aFirstCol" type="int"/>
                    <param name="aColCount" type="int"/>
                    <param name="aMtrx" type="JamaMatrix"/>
                </params>
            </method>
            <method name="update" type="void" line="809">
                <params>
                    <param name="aFirstRow" type="int"/>
                    <param name="aRowCount" type="int"/>
                    <param name="someColumns" type="int[]"/>
                    <param name="aMtrx" type="JamaMatrix"/>
                </params>
            </method>
            <method name="update" type="void" line="812">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="aNmbr" type="Number"/>
                </params>
            </method>
            <method name="update" type="void" line="815">
                <params>
                    <param name="someRows" type="int[]"/>
                    <param name="aFirstCol" type="int"/>
                    <param name="aColCount" type="int"/>
                    <param name="aMtrx" type="JamaMatrix"/>
                </params>
            </method>
            <method name="update" type="void" line="818">
                <params>
                    <param name="someRows" type="int[]"/>
                    <param name="someColumns" type="int[]"/>
                    <param name="aMtrx" type="JamaMatrix"/>
                </params>
            </method>
            <method name="visitAll" type="void" line="821">
                <params>
                    <param name="visitor" type="VoidFunction<Double>"/>
                </params>
            </method>
            <method name="visitColumn" type="void" line="824">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="visitor" type="VoidFunction<Double>"/>
                </params>
            </method>
            <method name="visitColumn" type="void" line="827">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="visitor" type="VoidFunction<Double>"/>
                </params>
            </method>
            <method name="visitDiagonal" type="void" line="830">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="visitor" type="VoidFunction<Double>"/>
                </params>
            </method>
            <method name="visitDiagonal" type="void" line="833">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="visitor" type="VoidFunction<Double>"/>
                </params>
            </method>
            <method name="visitRange" type="void" line="836">
                <params>
                    <param name="first" type="long"/>
                    <param name="limit" type="long"/>
                    <param name="visitor" type="VoidFunction<Double>"/>
                </params>
            </method>
            <method name="visitRow" type="void" line="839">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="visitor" type="VoidFunction<Double>"/>
                </params>
            </method>
            <method name="visitRow" type="void" line="842">
                <params>
                    <param name="row" type="long"/>
                    <param name="column" type="long"/>
                    <param name="visitor" type="VoidFunction<Double>"/>
                </params>
            </method>
            <method name="getCholeskyDecomposition" type="JamaCholesky" line="845">
                <declaration name="retVal" type="JamaCholesky" line="846"/>
            </method>
            <method name="getDelegate" type="Matrix" line="850"/>
            <method name="getEigenvalueDecomposition" type="JamaEigenvalue" line="853">
                <declaration name="retVal" type="JamaEigenvalue" line="854"/>
            </method>
            <method name="getLUDecomposition" type="JamaLU" line="858">
                <declaration name="retVal" type="JamaLU" line="859"/>
            </method>
            <method name="getQRDecomposition" type="JamaQR" line="863">
                <declaration name="retVal" type="JamaQR" line="864"/>
            </method>
            <method name="getSingularValueDecomposition" type="JamaSingularValue" line="868">
                <declaration name="retVal" type="JamaSingularValue" line="869"/>
            </method>
        </class>
    </source>