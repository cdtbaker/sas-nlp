<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.jama">
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.function.aggregator.AggregatorFunction"/>
        <import package="org.ojalgo.function.aggregator.PrimitiveAggregator"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.decomposition.QR"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="JamaQR" line="9">
            <extends class="JamaAbstractDecomposition"/>
            <implements interface="QR">
                <type_params>
                    <type_param name="Double"/>
                </type_params>
            </implements>
            <javadoc line="9">
                This class adapts JAMA&apos;s QRDecomposition to ojAlgo&apos;s {@linkplain QR} interface.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <declaration name="myDelegate" type="QRDecomposition" line="14"/>
            <javadoc line="15">
                Not recommended to use this constructor directly. Consider using the static factory method{@linkplain org.ojalgo.matrix.decomposition.QRDecomposition#makeJama()} instead.                
            </javadoc>
            <method name="JamaQR" type="constructor" line="18"/>
            <method name="calculateDeterminant" type="Double" line="21">
                <params>
                    <param name="matrix" type="Access2D<Double>"/>
                </params>
            </method>
            <method name="compute" type="boolean" line="25">
                <params>
                    <param name="matrix" type="Access2D<?>"/>
                    <param name="fullSize" type="boolean"/>
                </params>
                <scope line="26"/>
                <scope line="29"/>
            </method>
            <method name="equals" type="boolean" line="33">
                <params>
                    <param name="aStore" type="MatrixStore<Double>"/>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="getDeterminant" type="Double" line="36">
                <declaration name="tmpAggrFunc" type="AggregatorFunction&lt;Double&gt;" line="37"/>
            </method>
            <method name="getInverse" type="JamaMatrix" line="41"/>
            <method name="getQ" type="JamaMatrix" line="44"/>
            <method name="getR" type="JamaMatrix" line="47"/>
            <method name="getRank" type="int" line="50">
                <declaration name="retVal" type="int" line="51"/>
                <declaration name="tmpR" type="MatrixStore&lt;Double&gt;" line="52"/>
                <declaration name="tmpMinDim" type="int" line="53"/>
                <scope line="54">
                    <scope line="55"/>
                </scope>
            </method>
            <method name="isAspectRatioNormal" type="boolean" line="61"/>
            <method name="isComputed" type="boolean" line="64"/>
            <method name="isFullColumnRank" type="boolean" line="67"/>
            <method name="isFullSize" type="boolean" line="70"/>
            <method name="isSolvable" type="boolean" line="73"/>
            <method name="reconstruct" type="MatrixStore<Double>" line="76"/>
            <method name="reset" type="void" line="79"/>
            <method name="toString" type="String" line="82"/>
            <method name="compute" type="boolean" line="85">
                <params>
                    <param name="aDelegate" type="Matrix"/>
                </params>
            </method>
            <method name="solve" type="Matrix" line="89">
                <params>
                    <param name="aRHS" type="Matrix"/>
                </params>
            </method>
        </class>
    </source>