<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.jama">
        <class name="SingularValueDecomposition" line="3">
            <comment line="20">
                ------------------------
                Class variables                
            </comment>
            <comment line="41">
                ------------------------
                Constructor                
            </comment>
            <comment line="47">
                ------------------------
                Public Methods                
            </comment>
            <implements interface="java.io.Serializable"/>
            <javadoc line="3">
                Singular Value Decomposition.
                  &lt;P&gt;
                  For an m-by-n matrix A with m &gt;= n, the singular value decomposition is
                  an m-by-n orthogonal matrix U, an n-by-n diagonal matrix S, and
                  an n-by-n orthogonal matrix V so that A = USV&apos;.
                  &lt;P&gt;
                  The singular values, sigma[k] = S[k][k], are ordered so that
                  sigma[0] &gt;= sigma[1] &gt;= ... &gt;= sigma[n-1].
                  &lt;P&gt;
                  The singular value decompostion always exists, so the constructor will
                  never fail.  The matrix condition number and the effective numerical
                  rank can be computed from this decomposition.                
            </javadoc>
            <declaration name="U" type="double[][]" line="23"/>
            <javadoc line="23">
                Arrays for internal storage of U and V.                
                <serial>
                    internal storage of U.                    
                </serial>
                <serial>
                    internal storage of V.                    
                </serial>
            </javadoc>
            <declaration name="s" type="double[]" line="29"/>
            <javadoc line="29">
                Array for internal storage of singular values.                
                <serial>
                    internal storage of singular values.                    
                </serial>
            </javadoc>
            <declaration name="m" type="int" line="34"/>
            <javadoc line="34">
                Row and column dimensions.                
                <serial>
                    row dimension.                    
                </serial>
                <serial>
                    column dimension.                    
                </serial>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="44"/>
            <javadoc line="50">
                Construct the singular value decomposition
                  Structure to access U, S and V.                
                <param>
                    Arg    Rectangular matrix                    
                </param>
            </javadoc>
            <method name="SingularValueDecomposition" type="constructor" line="55">
                <params>
                    <param name="Arg" type="Matrix"/>
                </params>
            </method>
            <method name="SingularValueDecomposition" type="constructor" line="59">
                <params>
                    <param name="Arg" type="Matrix"/>
                    <param name="wantu" type="boolean"/>
                    <param name="wantv" type="boolean"/>
                </params>
                <comment line="61">
                    Derived from LINPACK code.                    
                </comment>
                <comment line="62">
                    Initialize.                    
                </comment>
                <comment line="67">
                    Apparently the failing cases are only a proper subset of (m&lt;n),
                    so let&apos;s not throw error.  Correct fix to come later?
                    if (m&lt;n) {
                    throw new IllegalArgumentException(&quot;Jama SVD only works for m &gt;= n&quot;); }                    
                </comment>
                <comment line="79">
                    Reduce A to bidiagonal form, storing the diagonal elements                    
                </comment>
                <comment line="80">
                    in s and the super-diagonal elements in e.                    
                </comment>
                <comment line="87">
                    Compute the transformation for the k-th column and                    
                </comment>
                <comment line="88">
                    place the k-th diagonal in s[k].                    
                </comment>
                <comment line="89">
                    Compute 2-norm of k-th column without under/overflow.                    
                </comment>
                <comment line="108">
                    Apply the transformation.                    
                </comment>
                <comment line="120">
                    Place the k-th row of A into e for the                    
                </comment>
                <comment line="121">
                    subsequent calculation of the row transformation.                    
                </comment>
                <comment line="127">
                    Place the transformation in U for subsequent back                    
                </comment>
                <comment line="128">
                    multiplication.                    
                </comment>
                <comment line="136">
                    Compute the k-th row transformation and place the                    
                </comment>
                <comment line="137">
                    k-th super-diagonal in e[k].                    
                </comment>
                <comment line="138">
                    Compute 2-norm without under/overflow.                    
                </comment>
                <comment line="155">
                    Apply the transformation.                    
                </comment>
                <comment line="174">
                    Place the transformation in V for subsequent                    
                </comment>
                <comment line="175">
                    back multiplication.                    
                </comment>
                <comment line="184">
                    Set up the final bidiagonal matrix or order p.                    
                </comment>
                <comment line="198">
                    If required, generate U.                    
                </comment>
                <comment line="235">
                    If required, generate V.                    
                </comment>
                <comment line="258">
                    Main iteration loop for the singular values.                    
                </comment>
                <comment line="267">
                    Here is where a test for too many iterations would go.                    
                </comment>
                <comment line="269">
                    This section of the program inspects for                    
                </comment>
                <comment line="270">
                    negligible elements in the s and e arrays.  On                    
                </comment>
                <comment line="271">
                    completion the variables kase and k are set as follows.                    
                </comment>
                <comment line="273">
                    kase = 1     if s(p) and e[k-1] are negligible and k&lt;p                    
                </comment>
                <comment line="274">
                    kase = 2     if s(k) is negligible and k&lt;p                    
                </comment>
                <comment line="275">
                    kase = 3     if e[k-1] is negligible, k&lt;p, and                    
                </comment>
                <comment line="276">
                    s(k), ..., s(p) are not negligible (qr step).                    
                </comment>
                <comment line="277">
                    kase = 4     if e(p-1) is negligible (convergence).                    
                </comment>
                <comment line="313">
                    Perform the task indicated by kase.                    
                </comment>
                <comment line="317">
                    Deflate negligible s(p).                    
                </comment>
                <comment line="342">
                    Split at negligible s(k).                    
                </comment>
                <comment line="365">
                    Perform one qr step.                    
                </comment>
                <comment line="369">
                    Calculate the shift.                    
                </comment>
                <comment line="391">
                    Chase zeros.                    
                </comment>
                <comment line="432">
                    Convergence.                    
                </comment>
                <comment line="436">
                    Make the singular values positive.                    
                </comment>
                <comment line="447">
                    Order the singular values.                    
                </comment>
                <declaration name="A" type="double[][]" line="63"/>
                <declaration name="nu" type="int" line="72"/>
                <declaration name="e" type="double[]" line="76"/>
                <declaration name="work" type="double[]" line="77"/>
                <declaration name="nct" type="int" line="82"/>
                <declaration name="nrt" type="int" line="83"/>
                <scope line="84">
                    <scope line="85">
                        <scope line="91"/>
                        <scope line="94">
                            <scope line="95"/>
                            <scope line="98"/>
                        </scope>
                    </scope>
                    <scope line="105">
                        <scope line="106">
                            <declaration name="t" type="double" line="110"/>
                            <scope line="111"/>
                            <scope line="115"/>
                        </scope>
                    </scope>
                    <scope line="125">
                        <scope line="130"/>
                    </scope>
                    <scope line="134">
                        <scope line="140"/>
                        <scope line="143">
                            <scope line="144"/>
                            <scope line="147"/>
                        </scope>
                        <scope line="153">
                            <scope line="157"/>
                            <scope line="160">
                                <scope line="161"/>
                            </scope>
                            <scope line="165">
                                <declaration name="t" type="double" line="166"/>
                                <scope line="167"/>
                            </scope>
                        </scope>
                        <scope line="172">
                            <scope line="177"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="p" type="int" line="186"/>
                <scope line="187"/>
                <scope line="190"/>
                <scope line="193"/>
                <scope line="200">
                    <scope line="201">
                        <scope line="202"/>
                    </scope>
                    <scope line="207">
                        <scope line="208">
                            <scope line="209">
                                <declaration name="t" type="double" line="210"/>
                                <scope line="211"/>
                                <scope line="215"/>
                            </scope>
                            <scope line="219"/>
                            <scope line="223"/>
                        </scope>
                        <scope line="226">
                            <scope line="227"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="237">
                    <scope line="238">
                        <scope line="239">
                            <scope line="240">
                                <declaration name="t" type="double" line="241"/>
                                <scope line="242"/>
                                <scope line="246"/>
                            </scope>
                        </scope>
                        <scope line="251"/>
                    </scope>
                </scope>
                <declaration name="pp" type="int" line="260"/>
                <declaration name="iter" type="int" line="261"/>
                <declaration name="eps" type="double" line="262"/>
                <declaration name="tiny" type="double" line="263"/>
                <scope line="264">
                    <declaration name="k" type="int" line="265"/>
                    <scope line="279">
                        <scope line="280"/>
                        <scope line="283"/>
                    </scope>
                    <scope line="288"/>
                    <scope line="290">
                        <declaration name="ks" type="int" line="291"/>
                        <scope line="292">
                            <scope line="293"/>
                            <declaration name="t" type="double" line="296"/>
                            <scope line="297"/>
                        </scope>
                        <scope line="302"/>
                        <scope line="304"/>
                        <scope line="306"/>
                    </scope>
                    <scope line="319">
                        <declaration name="f" type="double" line="320"/>
                        <scope line="322">
                            <declaration name="t" type="double" line="323"/>
                            <declaration name="cs" type="double" line="324"/>
                            <declaration name="sn" type="double" line="325"/>
                            <scope line="327"/>
                            <scope line="331">
                                <scope line="332"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="344">
                        <declaration name="f" type="double" line="345"/>
                        <scope line="347">
                            <declaration name="t" type="double" line="348"/>
                            <declaration name="cs" type="double" line="349"/>
                            <declaration name="sn" type="double" line="350"/>
                            <scope line="354">
                                <scope line="355"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="367">
                        <declaration name="scale" type="double" line="371"/>
                        <declaration name="sp" type="double" line="373"/>
                        <declaration name="spm1" type="double" line="374"/>
                        <declaration name="epm1" type="double" line="375"/>
                        <declaration name="sk" type="double" line="376"/>
                        <declaration name="ek" type="double" line="377"/>
                        <declaration name="b" type="double" line="378"/>
                        <declaration name="c" type="double" line="379"/>
                        <declaration name="shift" type="double" line="380"/>
                        <scope line="381">
                            <scope line="383"/>
                        </scope>
                        <declaration name="f" type="double" line="388"/>
                        <declaration name="g" type="double" line="389"/>
                        <scope line="393">
                            <declaration name="t" type="double" line="394"/>
                            <declaration name="cs" type="double" line="395"/>
                            <declaration name="sn" type="double" line="396"/>
                            <scope line="397"/>
                            <scope line="404">
                                <scope line="405"/>
                            </scope>
                            <scope line="419">
                                <scope line="420"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="434">
                        <scope line="438">
                            <scope line="440">
                                <scope line="441"/>
                            </scope>
                        </scope>
                        <scope line="449">
                            <scope line="450"/>
                            <declaration name="t" type="double" line="453"/>
                            <scope line="456">
                                <scope line="457"/>
                            </scope>
                            <scope line="463">
                                <scope line="464"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="480">
                Two norm condition number                
                <return>
                    max(S)/min(S)                    
                </return>
            </javadoc>
            <method name="cond" type="double" line="484"/>
            <javadoc line="488">
                Return the diagonal matrix of singular values                
                <return>
                    S                    
                </return>
            </javadoc>
            <method name="getS" type="Matrix" line="492">
                <declaration name="X" type="Matrix" line="493"/>
                <declaration name="S" type="double[][]" line="494"/>
                <scope line="495">
                    <scope line="496"/>
                </scope>
            </method>
            <javadoc line="504">
                Return the one-dimensional array of singular values                
                <return>
                    diagonal of S.                    
                </return>
            </javadoc>
            <method name="getSingularValues" type="double[]" line="508"/>
            <javadoc line="512">
                Return the left singular vectors                
                <return>
                    U                    
                </return>
            </javadoc>
            <method name="getU" type="Matrix" line="516"/>
            <javadoc line="520">
                Return the right singular vectors                
                <return>
                    V                    
                </return>
            </javadoc>
            <method name="getV" type="Matrix" line="524"/>
            <javadoc line="528">
                Two norm                
                <return>
                    max(S)                    
                </return>
            </javadoc>
            <method name="norm2" type="double" line="532"/>
            <javadoc line="536">
                Effective numerical matrix rank                
                <return>
                    Number of nonnegligible singular values.                    
                </return>
            </javadoc>
            <method name="rank" type="int" line="540">
                <declaration name="eps" type="double" line="541"/>
                <declaration name="tol" type="double" line="542"/>
                <declaration name="r" type="int" line="543"/>
                <scope line="544">
                    <scope line="545"/>
                </scope>
            </method>
        </class>
    </source>