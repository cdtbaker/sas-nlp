<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.jama">
        <import package="java.util.List"/>
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.access.Access2D.Builder"/>
        <import package="org.ojalgo.array.SimpleArray"/>
        <import package="org.ojalgo.function.FunctionSet"/>
        <import package="org.ojalgo.function.PrimitiveFunction"/>
        <import package="org.ojalgo.function.aggregator.AggregatorCollection"/>
        <import package="org.ojalgo.function.aggregator.PrimitiveAggregator"/>
        <import package="org.ojalgo.matrix.BasicMatrix"/>
        <import package="org.ojalgo.matrix.store.PhysicalStore"/>
        <import package="org.ojalgo.matrix.transformation.Householder"/>
        <import package="org.ojalgo.matrix.transformation.Rotation"/>
        <import package="org.ojalgo.random.RandomNumber"/>
        <import package="org.ojalgo.scalar.PrimitiveScalar"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <import package="org.ojalgo.scalar.Scalar.Factory"/>
        <class name="JamaFactory" line="19">
            <extends class="Object"/>
            <implements interface="BasicMatrix.Factory">
                <type_params>
                    <type_param name="JamaMatrix"/>
                </type_params>
            </implements>
            <implements interface="PhysicalStore.Factory">
                <type_params>
                    <type_param name="Double"/>
                    <type_param name="JamaMatrix"/>
                </type_params>
            </implements>
            <javadoc line="19">
                Implements both {@linkplain BasicMatrix.Factory} and{@linkplain PhysicalStore.Factory}, and creates{@linkplain JamaMatrix} instances.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <method name="JamaFactory" type="constructor" line="24"/>
            <method name="columns" type="JamaMatrix" line="27">
                <params>
                    <param name="source" type="Access1D<?>"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="28"/>
                <declaration name="tmpColDim" type="int" line="29"/>
                <declaration name="retVal" type="double[][]" line="30"/>
                <declaration name="tmpColumn" type="Access1D&lt;?&gt;" line="31"/>
                <scope line="32">
                    <scope line="34"/>
                </scope>
            </method>
            <method name="columns" type="JamaMatrix" line="40">
                <params>
                    <param name="source" type="double[]"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="41"/>
                <declaration name="tmpColDim" type="int" line="42"/>
                <declaration name="retVal" type="double[][]" line="43"/>
                <declaration name="tmpColumn" type="double[]" line="44"/>
                <scope line="45">
                    <scope line="47"/>
                </scope>
            </method>
            <method name="columns" type="JamaMatrix" line="53">
                <params>
                    <param name="source" type="List<? extends Number>"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="54"/>
                <declaration name="tmpColDim" type="int" line="55"/>
                <declaration name="retVal" type="double[][]" line="56"/>
                <declaration name="tmpColumn" type="List&lt;? extends Number&gt;" line="57"/>
                <scope line="58">
                    <scope line="60"/>
                </scope>
            </method>
            <method name="columns" type="JamaMatrix" line="66">
                <params>
                    <param name="source" type="Number[]"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="67"/>
                <declaration name="tmpColDim" type="int" line="68"/>
                <declaration name="retVal" type="double[][]" line="69"/>
                <declaration name="tmpColumn" type="Number[]" line="70"/>
                <scope line="71">
                    <scope line="73"/>
                </scope>
            </method>
            <method name="conjugate" type="JamaMatrix" line="79">
                <params>
                    <param name="source" type="Access2D<?>"/>
                </params>
            </method>
            <method name="copy" type="JamaMatrix" line="82">
                <params>
                    <param name="source" type="Access2D<?>"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="83"/>
                <declaration name="tmpColDim" type="int" line="84"/>
                <declaration name="retVal" type="double[][]" line="85"/>
                <scope line="86">
                    <scope line="87"/>
                </scope>
            </method>
            <javadoc line="93">
                @deprecated Use {@link #aggregator()} instead                
            </javadoc>
            <method name="getAggregatorCollection" type="AggregatorCollection<Double>" line="96"/>
            <method name="aggregator" type="AggregatorCollection<Double>" line="99"/>
            <method name="getBuilder" type="Access2D.Builder<JamaMatrix>" line="102">
                <params>
                    <param name="count" type="int"/>
                </params>
            </method>
            <method name="getBuilder" type="Access2D.Builder<JamaMatrix>" line="105">
                <params>
                    <param name="rows" type="int"/>
                    <param name="columns" type="int"/>
                </params>
                <declaration name="tmpDelegate" type="JamaMatrix" line="106"/>
                <anonymous_class line="107">
                    <method name="build" type="JamaMatrix" line="108"/>
                    <method name="count" type="long" line="111"/>
                    <method name="countColumns" type="long" line="114"/>
                    <method name="countRows" type="long" line="117"/>
                    <method name="fillAll" type="Access1D.Builder<JamaMatrix>" line="120">
                        <params>
                            <param name="aNmbr" type="Number"/>
                        </params>
                    </method>
                    <method name="fillColumn" type="Builder<JamaMatrix>" line="124">
                        <params>
                            <param name="aRow" type="long"/>
                            <param name="aCol" type="long"/>
                            <param name="aNmbr" type="Number"/>
                        </params>
                    </method>
                    <method name="fillDiagonal" type="Builder<JamaMatrix>" line="128">
                        <params>
                            <param name="aRow" type="long"/>
                            <param name="aCol" type="long"/>
                            <param name="aNmbr" type="Number"/>
                        </params>
                    </method>
                    <method name="fillRow" type="Builder<JamaMatrix>" line="132">
                        <params>
                            <param name="aRow" type="long"/>
                            <param name="aCol" type="long"/>
                            <param name="aNmbr" type="Number"/>
                        </params>
                    </method>
                    <method name="getColDim" type="int" line="136"/>
                    <method name="getRowDim" type="int" line="139"/>
                    <method name="set" type="Builder<JamaMatrix>" line="142">
                        <params>
                            <param name="index" type="long"/>
                            <param name="aNmbr" type="double"/>
                        </params>
                    </method>
                    <method name="set" type="Builder<JamaMatrix>" line="146">
                        <params>
                            <param name="aRow" type="long"/>
                            <param name="aCol" type="long"/>
                            <param name="aNmbr" type="double"/>
                        </params>
                    </method>
                    <method name="set" type="Builder<JamaMatrix>" line="150">
                        <params>
                            <param name="aRow" type="long"/>
                            <param name="aCol" type="long"/>
                            <param name="aNmbr" type="Number"/>
                        </params>
                    </method>
                    <method name="set" type="Builder<JamaMatrix>" line="154">
                        <params>
                            <param name="index" type="long"/>
                            <param name="aNmbr" type="Number"/>
                        </params>
                    </method>
                    <method name="size" type="int" line="158"/>
                </anonymous_class>
            </method>
            <javadoc line="164">
                @deprecated Use {@link #function()} instead                
            </javadoc>
            <method name="getFunctionSet" type="FunctionSet<Double>" line="167"/>
            <method name="function" type="FunctionSet<Double>" line="170"/>
            <javadoc line="173">
                @deprecated v35 Use {@link #scalar()} instead.                
            </javadoc>
            <method name="getNumber" type="Double" line="176">
                <params>
                    <param name="value" type="double"/>
                </params>
            </method>
            <javadoc line="179">
                @deprecated v35 Use {@link #scalar()} instead.                
            </javadoc>
            <method name="getNumber" type="Double" line="182">
                <params>
                    <param name="value" type="Number"/>
                </params>
            </method>
            <javadoc line="185">
                @deprecated v35 Use {@link #scalar()} instead.                
            </javadoc>
            <method name="getStaticOne" type="Scalar<Double>" line="188"/>
            <javadoc line="191">
                @deprecated v35 Use {@link #scalar()} instead.                
            </javadoc>
            <method name="getStaticZero" type="Scalar<Double>" line="194"/>
            <method name="makeArray" type="SimpleArray<Double>" line="197">
                <params>
                    <param name="length" type="int"/>
                </params>
            </method>
            <method name="makeEye" type="JamaMatrix" line="200">
                <params>
                    <param name="rows" type="long"/>
                    <param name="columns" type="long"/>
                </params>
                <declaration name="retVal" type="JamaMatrix" line="201"/>
            </method>
            <method name="makeHouseholder" type="Householder<Double>" line="205">
                <params>
                    <param name="length" type="int"/>
                </params>
            </method>
            <method name="makeRandom" type="JamaMatrix" line="208">
                <params>
                    <param name="rows" type="long"/>
                    <param name="columns" type="long"/>
                    <param name="distribution" type="RandomNumber"/>
                </params>
                <declaration name="retVal" type="double[][]" line="209"/>
                <scope line="210">
                    <scope line="211"/>
                </scope>
            </method>
            <method name="makeRotation" type="Rotation<Double>" line="217">
                <params>
                    <param name="low" type="int"/>
                    <param name="high" type="int"/>
                    <param name="cos" type="double"/>
                    <param name="sin" type="double"/>
                </params>
            </method>
            <method name="makeRotation" type="Rotation<Double>" line="220">
                <params>
                    <param name="low" type="int"/>
                    <param name="high" type="int"/>
                    <param name="cos" type="Double"/>
                    <param name="sin" type="Double"/>
                </params>
            </method>
            <method name="makeZero" type="JamaMatrix" line="223">
                <params>
                    <param name="rows" type="long"/>
                    <param name="columns" type="long"/>
                </params>
            </method>
            <method name="rows" type="JamaMatrix" line="226">
                <params>
                    <param name="source" type="Access1D<?>"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="227"/>
                <declaration name="tmpColDim" type="int" line="228"/>
                <declaration name="retVal" type="double[][]" line="229"/>
                <declaration name="tmpSource" type="Access1D&lt;?&gt;" line="230"/>
                <declaration name="tmpDestination" type="double[]" line="231"/>
                <scope line="232">
                    <scope line="235"/>
                </scope>
            </method>
            <method name="rows" type="JamaMatrix" line="241">
                <params>
                    <param name="source" type="double[]"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="242"/>
                <declaration name="tmpColDim" type="int" line="243"/>
                <declaration name="retVal" type="double[][]" line="244"/>
                <declaration name="tmpSource" type="double[]" line="245"/>
                <declaration name="tmpDestination" type="double[]" line="246"/>
                <scope line="247">
                    <scope line="250"/>
                </scope>
            </method>
            <method name="rows" type="JamaMatrix" line="256">
                <params>
                    <param name="source" type="List<? extends Number>"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="257"/>
                <declaration name="tmpColDim" type="int" line="258"/>
                <declaration name="retVal" type="double[][]" line="259"/>
                <declaration name="tmpSource" type="List&lt;? extends Number&gt;" line="260"/>
                <declaration name="tmpDestination" type="double[]" line="261"/>
                <scope line="262">
                    <scope line="265"/>
                </scope>
            </method>
            <method name="rows" type="JamaMatrix" line="271">
                <params>
                    <param name="source" type="Number[]"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="272"/>
                <declaration name="tmpColDim" type="int" line="273"/>
                <declaration name="retVal" type="double[][]" line="274"/>
                <declaration name="tmpSource" type="Number[]" line="275"/>
                <declaration name="tmpDestination" type="double[]" line="276"/>
                <scope line="277">
                    <scope line="280"/>
                </scope>
            </method>
            <method name="scalar" type="Factory<Double>" line="286"/>
            <javadoc line="289">
                @deprecated v35 Use {@link #scalar()} instead.                
            </javadoc>
            <method name="toScalar" type="Scalar<Double>" line="292">
                <params>
                    <param name="value" type="double"/>
                </params>
            </method>
            <javadoc line="295">
                @deprecated v35 Use {@link #scalar()} instead.                
            </javadoc>
            <method name="toScalar" type="Scalar<Double>" line="298">
                <params>
                    <param name="value" type="Number"/>
                </params>
            </method>
            <method name="transpose" type="JamaMatrix" line="301">
                <params>
                    <param name="source" type="Access2D<?>"/>
                </params>
                <declaration name="tmpRowDim" type="int" line="302"/>
                <declaration name="tmpColDim" type="int" line="303"/>
                <declaration name="retVal" type="double[][]" line="304"/>
                <scope line="305">
                    <scope line="306"/>
                </scope>
            </method>
        </class>
    </source>