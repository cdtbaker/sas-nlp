<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.jama">
        <import package="org.ojalgo.access.Access1D"/>
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.array.Array1D"/>
        <import package="org.ojalgo.constant.PrimitiveMath"/>
        <import package="org.ojalgo.function.aggregator.AggregatorFunction"/>
        <import package="org.ojalgo.function.aggregator.ComplexAggregator"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.decomposition.Eigenvalue"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.scalar.ComplexNumber"/>
        <import package="org.ojalgo.type.TypeUtils"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="JamaEigenvalue" line="14">
            <extends class="JamaAbstractDecomposition"/>
            <implements interface="Eigenvalue">
                <type_params>
                    <type_param name="Double"/>
                </type_params>
            </implements>
            <javadoc line="14">
                This class adapts JAMA&apos;s EigenvalueDecomposition to ojAlgo&apos;s {@linkplain Eigenvalue} interface.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <class name="General" line="19">
                <extends class="JamaEigenvalue"/>
                <method name="General" type="constructor" line="20"/>
                <method name="compute" type="boolean" line="23">
                    <params>
                        <param name="aDelegate" type="Matrix"/>
                    </params>
                </method>
            </class>
            <class name="Nonsymmetric" line="28">
                <extends class="JamaEigenvalue"/>
                <method name="Nonsymmetric" type="constructor" line="29"/>
                <method name="compute" type="boolean" line="32">
                    <params>
                        <param name="aDelegate" type="Matrix"/>
                    </params>
                </method>
            </class>
            <class name="Symmetric" line="37">
                <extends class="JamaEigenvalue"/>
                <method name="Symmetric" type="constructor" line="38"/>
                <method name="compute" type="boolean" line="41">
                    <params>
                        <param name="aDelegate" type="Matrix"/>
                    </params>
                </method>
            </class>
            <declaration name="myDelegate" type="EigenvalueDecomposition" line="46"/>
            <declaration name="myInverse" type="JamaMatrix" line="47"/>
            <javadoc line="48">
                Not recommended to use this constructor directly. Consider using the static factory method{@linkplain org.ojalgo.matrix.decomposition.EigenvalueDecomposition#makeJama()} instead.                
            </javadoc>
            <method name="JamaEigenvalue" type="constructor" line="51"/>
            <method name="calculateDeterminant" type="Double" line="54">
                <params>
                    <param name="matrix" type="Access2D<Double>"/>
                </params>
            </method>
            <method name="compute" type="boolean" line="58">
                <params>
                    <param name="matrix" type="Access2D<?>"/>
                    <param name="eigenvaluesOnly" type="boolean"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="61">
                <params>
                    <param name="aStore" type="MatrixStore<Double>"/>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="getD" type="JamaMatrix" line="64"/>
            <method name="getDeterminant" type="Double" line="67">
                <declaration name="tmpVisitor" type="AggregatorFunction&lt;ComplexNumber&gt;" line="68"/>
            </method>
            <method name="getEigenvalues" type="Array1D<ComplexNumber>" line="72">
                <declaration name="tmpRe" type="double[]" line="73"/>
                <declaration name="tmpIm" type="double[]" line="74"/>
                <declaration name="retVal" type="Array1D&lt;ComplexNumber&gt;" line="75"/>
                <scope line="76"/>
            </method>
            <method name="getInverse" type="JamaMatrix" line="82">
                <scope line="83">
                    <declaration name="tmpQ1" type="double[][]" line="84"/>
                    <declaration name="tmpEigen" type="double[]" line="85"/>
                    <declaration name="tmpMtrx" type="Matrix" line="86"/>
                    <scope line="87">
                        <scope line="88">
                            <scope line="89"/>
                        </scope>
                        <scope line="93">
                            <scope line="94"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="getTrace" type="ComplexNumber" line="103">
                <declaration name="tmpVisitor" type="AggregatorFunction&lt;ComplexNumber&gt;" line="104"/>
            </method>
            <method name="getV" type="JamaMatrix" line="108"/>
            <method name="isAspectRatioNormal" type="boolean" line="111"/>
            <method name="isComputed" type="boolean" line="114"/>
            <method name="isFullSize" type="boolean" line="117"/>
            <method name="isHermitian" type="boolean" line="120"/>
            <method name="isOrdered" type="boolean" line="123"/>
            <method name="isSolvable" type="boolean" line="126"/>
            <method name="reconstruct" type="MatrixStore<Double>" line="129"/>
            <method name="reset" type="void" line="132"/>
            <method name="solve" type="JamaMatrix" line="136">
                <params>
                    <param name="rhs" type="Access2D<Double>"/>
                </params>
            </method>
            <method name="toString" type="String" line="139"/>
            <method name="setDelegate" type="void" line="142">
                <params>
                    <param name="newDelegate" type="EigenvalueDecomposition"/>
                </params>
            </method>
            <method name="solve" type="Matrix" line="145">
                <params>
                    <param name="aRHS" type="Matrix"/>
                </params>
            </method>
        </class>
    </source>