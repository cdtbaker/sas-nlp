<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.jama">
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.access.AccessUtils"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.decomposition.Cholesky"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="JamaCholesky" line="32">
            <extends class="JamaAbstractDecomposition"/>
            <implements interface="Cholesky">
                <type_params>
                    <type_param name="Double"/>
                </type_params>
            </implements>
            <javadoc line="32">
                This class adapts JAMA&apos;s CholeskyDecomposition to ojAlgo&apos;s {@linkplain Cholesky} interface.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <declaration name="myDelegate" type="CholeskyDecomposition" line="39"/>
            <javadoc line="41">
                Not recommended to use this constructor directly. Consider using the static factory method{@linkplain org.ojalgo.matrix.decomposition.CholeskyDecomposition#makeJama()} instead.                
            </javadoc>
            <method name="JamaCholesky" type="constructor" line="45"/>
            <method name="calculateDeterminant" type="Double" line="49">
                <params>
                    <param name="matrix" type="Access2D&lt;Double&gt;"/>
                </params>
            </method>
            <method name="compute" type="boolean" line="54">
                <params>
                    <param name="matrix" type="Access2D&lt;?&gt;"/>
                    <param name="checkHermitian" type="boolean"/>
                </params>
            </method>
            <method name="computeWithCheck" type="boolean" line="58">
                <params>
                    <param name="aStore" type="MatrixStore&lt;?&gt;"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="62">
                <params>
                    <param name="aStore" type="MatrixStore&lt;Double&gt;"/>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="getD" type="JamaMatrix" line="66">
                <declaration name="tmpL" type="Matrix" line="68"/>
                <declaration name="tmpRowDim" type="int" line="70"/>
                <declaration name="tmpColDim" type="int" line="71"/>
                <declaration name="tmpMinDim" type="int" line="72"/>
                <declaration name="retVal" type="JamaMatrix" line="74"/>
                <declaration name="tmpVal" type="double" line="76"/>
                <scope line="77"/>
            </method>
            <method name="getDeterminant" type="Double" line="85">
                <declaration name="tmpD" type="MatrixStore&amp;lt;Double&amp;gt;" line="87"/>
                <declaration name="tmpMinDim" type="int" line="88"/>
                <declaration name="retVal" type="Scalar&amp;lt;Double&amp;gt;" line="90"/>
                <scope line="91"/>
            </method>
            <method name="getInverse" type="JamaMatrix" line="99"/>
            <method name="getL" type="JamaMatrix" line="103"/>
            <method name="getOldL" type="JamaMatrix" line="107">
                <declaration name="tmpL" type="Matrix" line="109"/>
                <declaration name="tmpRowDim" type="int" line="111"/>
                <declaration name="tmpColDim" type="int" line="112"/>
                <declaration name="retVal" type="JamaMatrix" line="114"/>
                <declaration name="tmpDiagVal" type="double" line="116"/>
                <scope line="117">
                    <scope line="119"/>
                </scope>
            </method>
            <method name="getOldU" type="JamaMatrix" line="127"/>
            <method name="getP" type="JamaMatrix" line="131">
                <comment line="134">
                    return MatrixUtils.makeIdentity(PrimitiveDenseStore.FACTORY, myDelegate.getL().getRowDimension());                    
                </comment>
            </method>
            <method name="getPivotOrder" type="int[]" line="136"/>
            <method name="getR" type="JamaMatrix" line="140"/>
            <method name="getRank" type="int" line="144">
                <declaration name="retVal" type="int" line="146"/>
                <declaration name="tmpD" type="MatrixStore&amp;lt;Double&amp;gt;" line="148"/>
                <declaration name="tmpMinDim" type="int" line="149"/>
                <scope line="151">
                    <scope line="152"/>
                </scope>
            </method>
            <method name="getRowEchelonForm" type="JamaMatrix" line="160"/>
            <method name="isAspectRatioNormal" type="boolean" line="164"/>
            <method name="isComputed" type="boolean" line="168"/>
            <method name="isFullSize" type="boolean" line="172"/>
            <method name="isSingular" type="boolean" line="176">
                <declaration name="retVal" type="boolean" line="178"/>
                <declaration name="tmpD" type="MatrixStore&amp;lt;Double&amp;gt;" line="180"/>
                <declaration name="tmpMinDim" type="int" line="181"/>
                <scope line="183"/>
            </method>
            <method name="isSolvable" type="boolean" line="190"/>
            <method name="isSPD" type="boolean" line="194"/>
            <method name="isSquareAndNotSingular" type="boolean" line="198">
                <declaration name="retVal" type="boolean" line="200"/>
                <declaration name="tmpD" type="MatrixStore&amp;lt;Double&amp;gt;" line="202"/>
                <declaration name="tmpMinDim" type="int" line="203"/>
                <scope line="205"/>
            </method>
            <method name="reconstruct" type="MatrixStore&lt;Double&gt;" line="212"/>
            <method name="reset" type="void" line="216"/>
            <method name="toString" type="String" line="221"/>
            <method name="compute" type="boolean" line="226">
                <params>
                    <param name="aDelegate" type="Matrix"/>
                </params>
            </method>
            <method name="solve" type="Matrix" line="232">
                <params>
                    <param name="aRHS" type="Matrix"/>
                </params>
            </method>
        </class>
    </source>