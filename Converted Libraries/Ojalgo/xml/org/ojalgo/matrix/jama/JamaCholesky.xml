<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.ojalgo.matrix.jama">
        <import package="org.ojalgo.access.Access2D"/>
        <import package="org.ojalgo.matrix.MatrixUtils"/>
        <import package="org.ojalgo.matrix.decomposition.Cholesky"/>
        <import package="org.ojalgo.matrix.store.MatrixStore"/>
        <import package="org.ojalgo.scalar.Scalar"/>
        <import package="org.ojalgo.type.context.NumberContext"/>
        <class name="JamaCholesky" line="31">
            <extends class="JamaAbstractDecomposition"/>
            <implements interface="Cholesky">
                <type_params>
                    <type_param name="Double"/>
                </type_params>
            </implements>
            <javadoc line="31">
                This class adapts JAMA&apos;s CholeskyDecomposition to ojAlgo&apos;s {@linkplain Cholesky} interface.                
                <author>
                    apete                    
                </author>
            </javadoc>
            <declaration name="myDelegate" type="CholeskyDecomposition" line="38"/>
            <javadoc line="40">
                Not recommended to use this constructor directly. Consider using the static factory method{@linkplain org.ojalgo.matrix.decomposition.CholeskyDecomposition#makeJama()} instead.                
            </javadoc>
            <method name="JamaCholesky" type="constructor" line="44"/>
            <method name="calculateDeterminant" type="Double" line="48">
                <params>
                    <param name="matrix" type="Access2D<Double>"/>
                </params>
            </method>
            <method name="compute" type="boolean" line="53">
                <params>
                    <param name="matrix" type="Access2D<?>"/>
                    <param name="checkHermitian" type="boolean"/>
                </params>
            </method>
            <method name="computeWithCheck" type="boolean" line="57">
                <params>
                    <param name="aStore" type="MatrixStore<?>"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="61">
                <params>
                    <param name="aStore" type="MatrixStore<Double>"/>
                    <param name="context" type="NumberContext"/>
                </params>
            </method>
            <method name="getD" type="JamaMatrix" line="65">
                <declaration name="tmpL" type="Matrix" line="67"/>
                <declaration name="tmpRowDim" type="int" line="69"/>
                <declaration name="tmpColDim" type="int" line="70"/>
                <declaration name="tmpMinDim" type="int" line="71"/>
                <declaration name="retVal" type="JamaMatrix" line="73"/>
                <declaration name="tmpVal" type="double" line="75"/>
                <scope line="76"/>
            </method>
            <method name="getDeterminant" type="Double" line="84">
                <declaration name="tmpD" type="MatrixStore&lt;Double&gt;" line="86"/>
                <declaration name="tmpMinDim" type="int" line="87"/>
                <declaration name="retVal" type="Scalar&lt;Double&gt;" line="89"/>
                <scope line="90"/>
            </method>
            <method name="getInverse" type="JamaMatrix" line="98"/>
            <method name="getL" type="JamaMatrix" line="102"/>
            <method name="getOldL" type="JamaMatrix" line="106">
                <declaration name="tmpL" type="Matrix" line="108"/>
                <declaration name="tmpRowDim" type="int" line="110"/>
                <declaration name="tmpColDim" type="int" line="111"/>
                <declaration name="retVal" type="JamaMatrix" line="113"/>
                <declaration name="tmpDiagVal" type="double" line="115"/>
                <scope line="116">
                    <scope line="118"/>
                </scope>
            </method>
            <method name="getOldU" type="JamaMatrix" line="126"/>
            <method name="getP" type="JamaMatrix" line="130">
                <comment line="132">
                    return MatrixUtils.makeIdentity(PrimitiveDenseStore.FACTORY, myDelegate.getL().getRowDimension());                    
                </comment>
            </method>
            <method name="getPivotOrder" type="int[]" line="135"/>
            <method name="getR" type="JamaMatrix" line="139"/>
            <method name="getRank" type="int" line="143">
                <declaration name="retVal" type="int" line="145"/>
                <declaration name="tmpD" type="MatrixStore&lt;Double&gt;" line="147"/>
                <declaration name="tmpMinDim" type="int" line="148"/>
                <scope line="150">
                    <scope line="151"/>
                </scope>
            </method>
            <method name="getRowEchelonForm" type="JamaMatrix" line="159"/>
            <method name="isAspectRatioNormal" type="boolean" line="163"/>
            <method name="isComputed" type="boolean" line="167"/>
            <method name="isFullSize" type="boolean" line="171"/>
            <method name="isSingular" type="boolean" line="175">
                <declaration name="retVal" type="boolean" line="177"/>
                <declaration name="tmpD" type="MatrixStore&lt;Double&gt;" line="179"/>
                <declaration name="tmpMinDim" type="int" line="180"/>
                <scope line="182"/>
            </method>
            <method name="isSolvable" type="boolean" line="189"/>
            <method name="isSPD" type="boolean" line="193"/>
            <method name="isSquareAndNotSingular" type="boolean" line="197">
                <declaration name="retVal" type="boolean" line="199"/>
                <declaration name="tmpD" type="MatrixStore&lt;Double&gt;" line="201"/>
                <declaration name="tmpMinDim" type="int" line="202"/>
                <scope line="204"/>
            </method>
            <method name="reconstruct" type="MatrixStore<Double>" line="211"/>
            <method name="reset" type="void" line="215"/>
            <method name="toString" type="String" line="220"/>
            <method name="compute" type="boolean" line="225">
                <params>
                    <param name="aDelegate" type="Matrix"/>
                </params>
            </method>
            <method name="solve" type="Matrix" line="231">
                <params>
                    <param name="aRHS" type="Matrix"/>
                </params>
            </method>
        </class>
    </source>