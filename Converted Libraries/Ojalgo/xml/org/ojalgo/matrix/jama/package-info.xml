<?xml version="1.0" encoding="UTF-8"?>
    <source package="
 * <p>This package contains adapter classes to <a href="http://math.nist.gov/javanumerics/jama/" target="_blank">JAMA</a>.
 * The entire original JAMA package is here but made package private.
 * Use the adapters.</p>
 * <p>Instructions for the ojAlgo developer if/when JAMA is updated:</p>
 * <ol>
 * <li>Delete all *.java files in this package with names that do not begin with Jama*.</li>
 * <li>Move the new JAMA files do this package and update the files' package declarations.</li>
 * <li>Change all the new classes from public to default (package private).</li>
 * <li>Apply fixes
 * <ul>
 * <li>Towards the end of the LU decomposition constructor the if statement<code>((j < m) &amp">
        <javadoc line="1">
            &lt;p&gt;This package contains adapter classes to &lt;a href=&quot;http://math.nist.gov/javanumerics/jama/&quot; target=&quot;_blank&quot;&gt;JAMA&lt;/a&gt;.
              The entire original JAMA package is here but made package private.
              Use the adapters.&lt;/p&gt;
              &lt;p&gt;Instructions for the ojAlgo developer if/when JAMA is updated:&lt;/p&gt;
              &lt;ol&gt;
              &lt;li&gt;Delete all .java files in this package with names that do not begin with Jama.&lt;/li&gt;
              &lt;li&gt;Move the new JAMA files do this package and update the files&apos; package declarations.&lt;/li&gt;
              &lt;li&gt;Change all the new classes from public to default (package private).&lt;/li&gt;
              &lt;li&gt;Apply fixes
              &lt;ul&gt;
              &lt;li&gt;Towards the end of the LU decomposition constructor the if statement&lt;code&gt;((j &lt; m) &amp;amp; (LU[j][j] != 0.0))&lt;/code&gt; needs to be changed to &lt;code&gt;((j &lt; m) &amp;amp;&amp;amp; (LU[j][j] != 0.0))&lt;/code&gt;.&lt;/li&gt;
              &lt;li&gt;The getL() and getU() methods of the LU decomposition should be modified. Introduce a new parameter d that is the minimum of m and n. Use that to set the column dimension of L and the row dimension of U.&lt;/li&gt;
              &lt;li&gt;Add a package private method isSymmetric() that exposes the already existing field issymmetric in the EigenvalueDecomposition class.&lt;/li&gt;
              &lt;li&gt;Add another constructor to EigenvalueDecomposition that takes an additional boolean parameter &apos;symmetric&apos; as input, and does not test for symmetry.&lt;/li&gt;
              &lt;li&gt;SingularValueDecomposition: Make wantu and wantv input parameters to the existing constructor, and add another constructor with the old signature that sets both those parateres to true.&lt;/li&gt;
              &lt;/ul&gt;&lt;/li&gt;
              &lt;/ol&gt;            
            <author>
                apete                
            </author>
        </javadoc>
    </source>